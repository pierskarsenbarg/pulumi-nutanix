// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > - The Pc Deploy V2 resource is an action-only resource that supports creating actions. The update and delete operations have no effect. To run it again, destroy and reapply the resource.
 * > - We need to increase the timeout for deploying the PC resource because the deployment takes longer than the default timeout allows for the operation to complete.
 *
 * Deploys a Prism Central using the provided details. Prism Central Size, Network Config are mandatory fields to deploy Prism Central. The response from this endpoint contains the URL in the task object location header that can be used to track the request status.
 */
export class PcDeployV2 extends pulumi.CustomResource {
    /**
     * Get an existing PcDeployV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PcDeployV2State, opts?: pulumi.CustomResourceOptions): PcDeployV2 {
        return new PcDeployV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/pcDeployV2:PcDeployV2';

    /**
     * Returns true if the given object is an instance of PcDeployV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PcDeployV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PcDeployV2.__pulumiType;
    }

    /**
     * -(Required) Domain manager (Prism Central) cluster configuration details.
     */
    declare public readonly config: pulumi.Output<outputs.PcDeployV2Config>;
    /**
     * -(Required) Domain manager (Prism Central) network configuration details.
     */
    declare public readonly network: pulumi.Output<outputs.PcDeployV2Network>;
    /**
     * -(Optional) This configuration enables Prism Central to be deployed in scale-out mode. Default is `false`.
     */
    declare public readonly shouldEnableHighAvailability: pulumi.Output<boolean | undefined>;

    /**
     * Create a PcDeployV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PcDeployV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PcDeployV2Args | PcDeployV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PcDeployV2State | undefined;
            resourceInputs["config"] = state?.config;
            resourceInputs["network"] = state?.network;
            resourceInputs["shouldEnableHighAvailability"] = state?.shouldEnableHighAvailability;
        } else {
            const args = argsOrState as PcDeployV2Args | undefined;
            if (args?.config === undefined && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["config"] = args?.config;
            resourceInputs["network"] = args?.network;
            resourceInputs["shouldEnableHighAvailability"] = args?.shouldEnableHighAvailability;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PcDeployV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PcDeployV2 resources.
 */
export interface PcDeployV2State {
    /**
     * -(Required) Domain manager (Prism Central) cluster configuration details.
     */
    config?: pulumi.Input<inputs.PcDeployV2Config>;
    /**
     * -(Required) Domain manager (Prism Central) network configuration details.
     */
    network?: pulumi.Input<inputs.PcDeployV2Network>;
    /**
     * -(Optional) This configuration enables Prism Central to be deployed in scale-out mode. Default is `false`.
     */
    shouldEnableHighAvailability?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a PcDeployV2 resource.
 */
export interface PcDeployV2Args {
    /**
     * -(Required) Domain manager (Prism Central) cluster configuration details.
     */
    config: pulumi.Input<inputs.PcDeployV2Config>;
    /**
     * -(Required) Domain manager (Prism Central) network configuration details.
     */
    network: pulumi.Input<inputs.PcDeployV2Network>;
    /**
     * -(Optional) This configuration enables Prism Central to be deployed in scale-out mode. Default is `false`.
     */
    shouldEnableHighAvailability?: pulumi.Input<boolean>;
}
