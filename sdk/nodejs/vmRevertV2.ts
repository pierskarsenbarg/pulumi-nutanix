// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This operation Revert VM identified by {extId}. This does an in-place VM restore from a specified VM Recovery Point.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * // revert Vm
 * const example = new nutanix.VmRevertV2("example", {
 *     extId: "8a938cc5-282b-48c4-81be-de22de145d07",
 *     vmRecoveryPointExtId: "c2c249b0-98a0-43fa-9ff6-dcde578d3936",
 * });
 * ```
 */
export class VmRevertV2 extends pulumi.CustomResource {
    /**
     * Get an existing VmRevertV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmRevertV2State, opts?: pulumi.CustomResourceOptions): VmRevertV2 {
        return new VmRevertV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/vmRevertV2:VmRevertV2';

    /**
     * Returns true if the given object is an instance of VmRevertV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmRevertV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmRevertV2.__pulumiType;
    }

    /**
     * -(Required) The globally unique identifier of a VM. It should be of type UUID.
     */
    declare public readonly extId: pulumi.Output<string>;
    /**
     * - The status of the Revert operation.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * -(Required) The external identifier of the VM Recovery Point.
     */
    declare public readonly vmRecoveryPointExtId: pulumi.Output<string>;

    /**
     * Create a VmRevertV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmRevertV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmRevertV2Args | VmRevertV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmRevertV2State | undefined;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["status"] = state?.status;
            resourceInputs["vmRecoveryPointExtId"] = state?.vmRecoveryPointExtId;
        } else {
            const args = argsOrState as VmRevertV2Args | undefined;
            if (args?.extId === undefined && !opts.urn) {
                throw new Error("Missing required property 'extId'");
            }
            if (args?.vmRecoveryPointExtId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vmRecoveryPointExtId'");
            }
            resourceInputs["extId"] = args?.extId;
            resourceInputs["vmRecoveryPointExtId"] = args?.vmRecoveryPointExtId;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmRevertV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VmRevertV2 resources.
 */
export interface VmRevertV2State {
    /**
     * -(Required) The globally unique identifier of a VM. It should be of type UUID.
     */
    extId?: pulumi.Input<string>;
    /**
     * - The status of the Revert operation.
     */
    status?: pulumi.Input<string>;
    /**
     * -(Required) The external identifier of the VM Recovery Point.
     */
    vmRecoveryPointExtId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VmRevertV2 resource.
 */
export interface VmRevertV2Args {
    /**
     * -(Required) The globally unique identifier of a VM. It should be of type UUID.
     */
    extId: pulumi.Input<string>;
    /**
     * -(Required) The external identifier of the VM Recovery Point.
     */
    vmRecoveryPointExtId: pulumi.Input<string>;
}
