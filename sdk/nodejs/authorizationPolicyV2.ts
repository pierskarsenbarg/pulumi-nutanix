// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix resource to create authorization policy.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const ap_example = new nutanix.AuthorizationPolicyV2("ap-example", {
 *     authorizationPolicyType: "USER_DEFINED",
 *     description: "authorization policy example",
 *     displayName: "auth_policy_example",
 *     entities: [
 *         {
 *             reserved: "{\"images\":{\"*\":{\"eq\":\"*\"}}}",
 *         },
 *         {
 *             reserved: "{\"marketplace_item\":{\"owner_uuid\":{\"eq\":\"SELF_OWNED\"}}}",
 *         },
 *     ],
 *     identities: [{
 *         reserved: "{\"user\":{\"uuid\":{\"anyof\":[\"00000000-0000-0000-0000-000000000000\"]}}}",
 *     }],
 *     role: "ba250e3e-1db1-4950-917f-a9e2ea35b8e3",
 * });
 * ```
 */
export class AuthorizationPolicyV2 extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizationPolicyV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthorizationPolicyV2State, opts?: pulumi.CustomResourceOptions): AuthorizationPolicyV2 {
        return new AuthorizationPolicyV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/authorizationPolicyV2:AuthorizationPolicyV2';

    /**
     * Returns true if the given object is an instance of AuthorizationPolicyV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizationPolicyV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizationPolicyV2.__pulumiType;
    }

    /**
     * Type of Authorization Policy.
     * * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
     * * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
     * * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
     * * `SERVICE_DEFINED` : ACP defined by a service.
     * * `USER_DEFINED` : ACP defined by an User.
     */
    public readonly authorizationPolicyType!: pulumi.Output<string | undefined>;
    /**
     * Client that created the entity.
     */
    public /*out*/ readonly clientName!: pulumi.Output<string>;
    /**
     * User or Service Name that created the Authorization Policy.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The creation time of the Authorization Policy.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * Description of the Authorization Policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the Authorization Policy.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The entities being qualified by the Authorization Policy.
     */
    public readonly entities!: pulumi.Output<outputs.AuthorizationPolicyV2Entity[]>;
    /**
     * ext_id of Authorization policy.
     */
    public readonly extId!: pulumi.Output<string>;
    /**
     * The identities for which the Authorization Policy is created.
     */
    public readonly identities!: pulumi.Output<outputs.AuthorizationPolicyV2Identity[]>;
    /**
     * Flag identifying if the Authorization Policy is system defined or not.
     */
    public /*out*/ readonly isSystemDefined!: pulumi.Output<boolean>;
    /**
     * The time when the Authorization Policy was last updated.
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    /**
     * The Role associated with the Authorization Policy.
     */
    public readonly role!: pulumi.Output<string>;

    /**
     * Create a AuthorizationPolicyV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizationPolicyV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthorizationPolicyV2Args | AuthorizationPolicyV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthorizationPolicyV2State | undefined;
            resourceInputs["authorizationPolicyType"] = state ? state.authorizationPolicyType : undefined;
            resourceInputs["clientName"] = state ? state.clientName : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["entities"] = state ? state.entities : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["identities"] = state ? state.identities : undefined;
            resourceInputs["isSystemDefined"] = state ? state.isSystemDefined : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
        } else {
            const args = argsOrState as AuthorizationPolicyV2Args | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.entities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entities'");
            }
            if ((!args || args.identities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identities'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["authorizationPolicyType"] = args ? args.authorizationPolicyType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["entities"] = args ? args.entities : undefined;
            resourceInputs["extId"] = args ? args.extId : undefined;
            resourceInputs["identities"] = args ? args.identities : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["clientName"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["isSystemDefined"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthorizationPolicyV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthorizationPolicyV2 resources.
 */
export interface AuthorizationPolicyV2State {
    /**
     * Type of Authorization Policy.
     * * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
     * * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
     * * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
     * * `SERVICE_DEFINED` : ACP defined by a service.
     * * `USER_DEFINED` : ACP defined by an User.
     */
    authorizationPolicyType?: pulumi.Input<string>;
    /**
     * Client that created the entity.
     */
    clientName?: pulumi.Input<string>;
    /**
     * User or Service Name that created the Authorization Policy.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The creation time of the Authorization Policy.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * Description of the Authorization Policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Authorization Policy.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The entities being qualified by the Authorization Policy.
     */
    entities?: pulumi.Input<pulumi.Input<inputs.AuthorizationPolicyV2Entity>[]>;
    /**
     * ext_id of Authorization policy.
     */
    extId?: pulumi.Input<string>;
    /**
     * The identities for which the Authorization Policy is created.
     */
    identities?: pulumi.Input<pulumi.Input<inputs.AuthorizationPolicyV2Identity>[]>;
    /**
     * Flag identifying if the Authorization Policy is system defined or not.
     */
    isSystemDefined?: pulumi.Input<boolean>;
    /**
     * The time when the Authorization Policy was last updated.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * The Role associated with the Authorization Policy.
     */
    role?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthorizationPolicyV2 resource.
 */
export interface AuthorizationPolicyV2Args {
    /**
     * Type of Authorization Policy.
     * * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
     * * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
     * * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
     * * `SERVICE_DEFINED` : ACP defined by a service.
     * * `USER_DEFINED` : ACP defined by an User.
     */
    authorizationPolicyType?: pulumi.Input<string>;
    /**
     * Description of the Authorization Policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Authorization Policy.
     */
    displayName: pulumi.Input<string>;
    /**
     * The entities being qualified by the Authorization Policy.
     */
    entities: pulumi.Input<pulumi.Input<inputs.AuthorizationPolicyV2Entity>[]>;
    /**
     * ext_id of Authorization policy.
     */
    extId?: pulumi.Input<string>;
    /**
     * The identities for which the Authorization Policy is created.
     */
    identities: pulumi.Input<pulumi.Input<inputs.AuthorizationPolicyV2Identity>[]>;
    /**
     * The Role associated with the Authorization Policy.
     */
    role: pulumi.Input<string>;
}
