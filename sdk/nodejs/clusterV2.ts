// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Represents the Cluster entity. Provides the basic infrastructure for compute, storage and networking. This includes the operations that can be carried out on cluster and its subresources - host (node), rsyslog servers etc and actions that can be performed on cluster - add a node, remove a node, attach categories.
 */
export class ClusterV2 extends pulumi.CustomResource {
    /**
     * Get an existing ClusterV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterV2State, opts?: pulumi.CustomResourceOptions): ClusterV2 {
        return new ClusterV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/clusterV2:ClusterV2';

    /**
     * Returns true if the given object is an instance of ClusterV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterV2.__pulumiType;
    }

    public /*out*/ readonly backupEligibilityScore!: pulumi.Output<number>;
    /**
     * - (Optional) The reference to a project.
     */
    public readonly categories!: pulumi.Output<string[]>;
    public /*out*/ readonly clusterProfileExtId!: pulumi.Output<string>;
    /**
     * - (Optional) Cluster configuration details.
     */
    public readonly configs!: pulumi.Output<outputs.ClusterV2Config[]>;
    /**
     * - (Optional) The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
     */
    public readonly containerName!: pulumi.Output<string>;
    /**
     * - (Optional) parameter that allows long-running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
     */
    public readonly dryrun!: pulumi.Output<boolean | undefined>;
    public readonly expand!: pulumi.Output<string | undefined>;
    public readonly extId!: pulumi.Output<string>;
    public /*out*/ readonly inefficientVmCount!: pulumi.Output<number>;
    public /*out*/ readonly links!: pulumi.Output<outputs.ClusterV2Link[]>;
    /**
     * - (Required) The name for the vm.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * - (Optional) Network details of a cluster.
     */
    public readonly networks!: pulumi.Output<outputs.ClusterV2Network[]>;
    /**
     * - (Optional) The reference to a node.
     */
    public readonly nodes!: pulumi.Output<outputs.ClusterV2Node[]>;
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * - (Optional) The reference to a project.
     * Valid values are:
     * - "CANCELLED"	The cluster upgrade is cancelled.
     * - "FAILED"	The cluster upgrade failed.
     * - "QUEUED"	The cluster upgrade is in the queue.
     * - "SUCCEEDED"	The cluster was upgraded successfully.
     * - "DOWNLOADING"	The cluster upgrade is downloading.
     * - "PENDING"	The cluster upgrade is in pending state.
     * - "UPGRADING"	The cluster is in upgrade state.
     * - "PREUPGRADE"	The cluster is in pre-upgrade state.
     * - "SCHEDULED"	The cluster upgrade is in scheduled state.
     */
    public /*out*/ readonly upgradeStatus!: pulumi.Output<string>;
    public /*out*/ readonly vmCount!: pulumi.Output<number>;

    /**
     * Create a ClusterV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterV2Args | ClusterV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterV2State | undefined;
            resourceInputs["backupEligibilityScore"] = state ? state.backupEligibilityScore : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["clusterProfileExtId"] = state ? state.clusterProfileExtId : undefined;
            resourceInputs["configs"] = state ? state.configs : undefined;
            resourceInputs["containerName"] = state ? state.containerName : undefined;
            resourceInputs["dryrun"] = state ? state.dryrun : undefined;
            resourceInputs["expand"] = state ? state.expand : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["inefficientVmCount"] = state ? state.inefficientVmCount : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["upgradeStatus"] = state ? state.upgradeStatus : undefined;
            resourceInputs["vmCount"] = state ? state.vmCount : undefined;
        } else {
            const args = argsOrState as ClusterV2Args | undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["configs"] = args ? args.configs : undefined;
            resourceInputs["containerName"] = args ? args.containerName : undefined;
            resourceInputs["dryrun"] = args ? args.dryrun : undefined;
            resourceInputs["expand"] = args ? args.expand : undefined;
            resourceInputs["extId"] = args ? args.extId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["backupEligibilityScore"] = undefined /*out*/;
            resourceInputs["clusterProfileExtId"] = undefined /*out*/;
            resourceInputs["inefficientVmCount"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["upgradeStatus"] = undefined /*out*/;
            resourceInputs["vmCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterV2 resources.
 */
export interface ClusterV2State {
    backupEligibilityScore?: pulumi.Input<number>;
    /**
     * - (Optional) The reference to a project.
     */
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    clusterProfileExtId?: pulumi.Input<string>;
    /**
     * - (Optional) Cluster configuration details.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.ClusterV2Config>[]>;
    /**
     * - (Optional) The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
     */
    containerName?: pulumi.Input<string>;
    /**
     * - (Optional) parameter that allows long-running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
     */
    dryrun?: pulumi.Input<boolean>;
    expand?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    inefficientVmCount?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.ClusterV2Link>[]>;
    /**
     * - (Required) The name for the vm.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Optional) Network details of a cluster.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ClusterV2Network>[]>;
    /**
     * - (Optional) The reference to a node.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.ClusterV2Node>[]>;
    tenantId?: pulumi.Input<string>;
    /**
     * - (Optional) The reference to a project.
     * Valid values are:
     * - "CANCELLED"	The cluster upgrade is cancelled.
     * - "FAILED"	The cluster upgrade failed.
     * - "QUEUED"	The cluster upgrade is in the queue.
     * - "SUCCEEDED"	The cluster was upgraded successfully.
     * - "DOWNLOADING"	The cluster upgrade is downloading.
     * - "PENDING"	The cluster upgrade is in pending state.
     * - "UPGRADING"	The cluster is in upgrade state.
     * - "PREUPGRADE"	The cluster is in pre-upgrade state.
     * - "SCHEDULED"	The cluster upgrade is in scheduled state.
     */
    upgradeStatus?: pulumi.Input<string>;
    vmCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ClusterV2 resource.
 */
export interface ClusterV2Args {
    /**
     * - (Optional) The reference to a project.
     */
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Cluster configuration details.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.ClusterV2Config>[]>;
    /**
     * - (Optional) The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
     */
    containerName?: pulumi.Input<string>;
    /**
     * - (Optional) parameter that allows long-running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
     */
    dryrun?: pulumi.Input<boolean>;
    expand?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    /**
     * - (Required) The name for the vm.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Optional) Network details of a cluster.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ClusterV2Network>[]>;
    /**
     * - (Optional) The reference to a node.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.ClusterV2Node>[]>;
}
