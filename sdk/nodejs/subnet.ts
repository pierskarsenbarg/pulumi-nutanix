// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a resource to create a subnet based on the input parameters. A subnet is a block of IP addresses.
 */
export class Subnet extends pulumi.CustomResource {
    /**
     * Get an existing Subnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubnetState, opts?: pulumi.CustomResourceOptions): Subnet {
        return new Subnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/subnet:Subnet';

    /**
     * Returns true if the given object is an instance of Subnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subnet.__pulumiType;
    }

    /**
     * The version of the API.
     */
    public /*out*/ readonly apiVersion!: pulumi.Output<string>;
    /**
     * - (Optional) The reference to a availability_zone.
     */
    public readonly availabilityZoneReference!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional) The categories of the resource.
     */
    public readonly categories!: pulumi.Output<outputs.SubnetCategory[]>;
    public /*out*/ readonly clusterName!: pulumi.Output<string>;
    /**
     * - (Required) The UUID of the cluster.
     */
    public readonly clusterUuid!: pulumi.Output<string | undefined>;
    /**
     * - (Optional) Default gateway IP address.
     */
    public readonly defaultGatewayIp!: pulumi.Output<string>;
    /**
     * - (Optional) A description for subnet.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * - (Optional). List of Domain Name Server addresses .
     */
    public readonly dhcpDomainNameServerLists!: pulumi.Output<string[]>;
    /**
     * - (Optional).The DNS domain search list .
     */
    public readonly dhcpDomainSearchLists!: pulumi.Output<string[]>;
    /**
     * - (Optional) Spec for defining DHCP options.
     */
    public readonly dhcpOptions!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional) Host address.
     */
    public readonly dhcpServerAddress!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional) Port Number.
     */
    public readonly dhcpServerAddressPort!: pulumi.Output<number>;
    /**
     * - (Optional) Whether NAT should be performed for VPCs attaching to the subnet. This field is supported only for external subnets. NAT is enabled by default on external subnets.
     */
    public readonly enableNat!: pulumi.Output<boolean>;
    /**
     * -(Optional) Range of IPs.
     */
    public readonly ipConfigPoolListRanges!: pulumi.Output<string[]>;
    /**
     * - (Optional) Whether the subnet is external subnet or not.
     */
    public readonly isExternal!: pulumi.Output<boolean>;
    /**
     * - (Required) The subnet kind metadata.
     */
    public /*out*/ readonly metadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional) Subnet name (Readonly).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * - (Optional) The reference to a network_function_chain.
     */
    public readonly networkFunctionChainReference!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional) The reference to a user.
     */
    public readonly ownerReference!: pulumi.Output<{[key: string]: string}>;
    /**
     * - (Optional).
     */
    public readonly prefixLength!: pulumi.Output<number>;
    /**
     * - (Optional) The reference to a project.
     */
    public readonly projectReference!: pulumi.Output<{[key: string]: string}>;
    /**
     * - The state of the subnet.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * - (Optional) Subnet IP address.
     */
    public readonly subnetIp!: pulumi.Output<string>;
    /**
     * - (Optional). Valid Types are ["VLAN", "OVERLAY"]
     */
    public readonly subnetType!: pulumi.Output<string>;
    /**
     * - (Optional). For VLAN subnet.
     */
    public readonly vlanId!: pulumi.Output<number>;
    /**
     * VPC reference uuid
     */
    public readonly vpcReferenceUuid!: pulumi.Output<string>;
    /**
     * - (Optional).
     */
    public readonly vswitchName!: pulumi.Output<string>;

    /**
     * Create a Subnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubnetArgs | SubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubnetState | undefined;
            resourceInputs["apiVersion"] = state ? state.apiVersion : undefined;
            resourceInputs["availabilityZoneReference"] = state ? state.availabilityZoneReference : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["clusterUuid"] = state ? state.clusterUuid : undefined;
            resourceInputs["defaultGatewayIp"] = state ? state.defaultGatewayIp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dhcpDomainNameServerLists"] = state ? state.dhcpDomainNameServerLists : undefined;
            resourceInputs["dhcpDomainSearchLists"] = state ? state.dhcpDomainSearchLists : undefined;
            resourceInputs["dhcpOptions"] = state ? state.dhcpOptions : undefined;
            resourceInputs["dhcpServerAddress"] = state ? state.dhcpServerAddress : undefined;
            resourceInputs["dhcpServerAddressPort"] = state ? state.dhcpServerAddressPort : undefined;
            resourceInputs["enableNat"] = state ? state.enableNat : undefined;
            resourceInputs["ipConfigPoolListRanges"] = state ? state.ipConfigPoolListRanges : undefined;
            resourceInputs["isExternal"] = state ? state.isExternal : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkFunctionChainReference"] = state ? state.networkFunctionChainReference : undefined;
            resourceInputs["ownerReference"] = state ? state.ownerReference : undefined;
            resourceInputs["prefixLength"] = state ? state.prefixLength : undefined;
            resourceInputs["projectReference"] = state ? state.projectReference : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetIp"] = state ? state.subnetIp : undefined;
            resourceInputs["subnetType"] = state ? state.subnetType : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vpcReferenceUuid"] = state ? state.vpcReferenceUuid : undefined;
            resourceInputs["vswitchName"] = state ? state.vswitchName : undefined;
        } else {
            const args = argsOrState as SubnetArgs | undefined;
            if ((!args || args.subnetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetType'");
            }
            resourceInputs["availabilityZoneReference"] = args ? args.availabilityZoneReference : undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["clusterUuid"] = args ? args.clusterUuid : undefined;
            resourceInputs["defaultGatewayIp"] = args ? args.defaultGatewayIp : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dhcpDomainNameServerLists"] = args ? args.dhcpDomainNameServerLists : undefined;
            resourceInputs["dhcpDomainSearchLists"] = args ? args.dhcpDomainSearchLists : undefined;
            resourceInputs["dhcpOptions"] = args ? args.dhcpOptions : undefined;
            resourceInputs["dhcpServerAddress"] = args ? args.dhcpServerAddress : undefined;
            resourceInputs["dhcpServerAddressPort"] = args ? args.dhcpServerAddressPort : undefined;
            resourceInputs["enableNat"] = args ? args.enableNat : undefined;
            resourceInputs["ipConfigPoolListRanges"] = args ? args.ipConfigPoolListRanges : undefined;
            resourceInputs["isExternal"] = args ? args.isExternal : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkFunctionChainReference"] = args ? args.networkFunctionChainReference : undefined;
            resourceInputs["ownerReference"] = args ? args.ownerReference : undefined;
            resourceInputs["prefixLength"] = args ? args.prefixLength : undefined;
            resourceInputs["projectReference"] = args ? args.projectReference : undefined;
            resourceInputs["subnetIp"] = args ? args.subnetIp : undefined;
            resourceInputs["subnetType"] = args ? args.subnetType : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vpcReferenceUuid"] = args ? args.vpcReferenceUuid : undefined;
            resourceInputs["vswitchName"] = args ? args.vswitchName : undefined;
            resourceInputs["apiVersion"] = undefined /*out*/;
            resourceInputs["clusterName"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Subnet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subnet resources.
 */
export interface SubnetState {
    /**
     * The version of the API.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * - (Optional) The reference to a availability_zone.
     */
    availabilityZoneReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) The categories of the resource.
     */
    categories?: pulumi.Input<pulumi.Input<inputs.SubnetCategory>[]>;
    clusterName?: pulumi.Input<string>;
    /**
     * - (Required) The UUID of the cluster.
     */
    clusterUuid?: pulumi.Input<string>;
    /**
     * - (Optional) Default gateway IP address.
     */
    defaultGatewayIp?: pulumi.Input<string>;
    /**
     * - (Optional) A description for subnet.
     */
    description?: pulumi.Input<string>;
    /**
     * - (Optional). List of Domain Name Server addresses .
     */
    dhcpDomainNameServerLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional).The DNS domain search list .
     */
    dhcpDomainSearchLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Spec for defining DHCP options.
     */
    dhcpOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Host address.
     */
    dhcpServerAddress?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Port Number.
     */
    dhcpServerAddressPort?: pulumi.Input<number>;
    /**
     * - (Optional) Whether NAT should be performed for VPCs attaching to the subnet. This field is supported only for external subnets. NAT is enabled by default on external subnets.
     */
    enableNat?: pulumi.Input<boolean>;
    /**
     * -(Optional) Range of IPs.
     */
    ipConfigPoolListRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Whether the subnet is external subnet or not.
     */
    isExternal?: pulumi.Input<boolean>;
    /**
     * - (Required) The subnet kind metadata.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Subnet name (Readonly).
     */
    name?: pulumi.Input<string>;
    /**
     * - (Optional) The reference to a network_function_chain.
     */
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) The reference to a user.
     */
    ownerReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional).
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Optional) The reference to a project.
     */
    projectReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - The state of the subnet.
     */
    state?: pulumi.Input<string>;
    /**
     * - (Optional) Subnet IP address.
     */
    subnetIp?: pulumi.Input<string>;
    /**
     * - (Optional). Valid Types are ["VLAN", "OVERLAY"]
     */
    subnetType?: pulumi.Input<string>;
    /**
     * - (Optional). For VLAN subnet.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * VPC reference uuid
     */
    vpcReferenceUuid?: pulumi.Input<string>;
    /**
     * - (Optional).
     */
    vswitchName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Subnet resource.
 */
export interface SubnetArgs {
    /**
     * - (Optional) The reference to a availability_zone.
     */
    availabilityZoneReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) The categories of the resource.
     */
    categories?: pulumi.Input<pulumi.Input<inputs.SubnetCategory>[]>;
    /**
     * - (Required) The UUID of the cluster.
     */
    clusterUuid?: pulumi.Input<string>;
    /**
     * - (Optional) Default gateway IP address.
     */
    defaultGatewayIp?: pulumi.Input<string>;
    /**
     * - (Optional) A description for subnet.
     */
    description?: pulumi.Input<string>;
    /**
     * - (Optional). List of Domain Name Server addresses .
     */
    dhcpDomainNameServerLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional).The DNS domain search list .
     */
    dhcpDomainSearchLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Spec for defining DHCP options.
     */
    dhcpOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Host address.
     */
    dhcpServerAddress?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Port Number.
     */
    dhcpServerAddressPort?: pulumi.Input<number>;
    /**
     * - (Optional) Whether NAT should be performed for VPCs attaching to the subnet. This field is supported only for external subnets. NAT is enabled by default on external subnets.
     */
    enableNat?: pulumi.Input<boolean>;
    /**
     * -(Optional) Range of IPs.
     */
    ipConfigPoolListRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Whether the subnet is external subnet or not.
     */
    isExternal?: pulumi.Input<boolean>;
    /**
     * - (Optional) Subnet name (Readonly).
     */
    name?: pulumi.Input<string>;
    /**
     * - (Optional) The reference to a network_function_chain.
     */
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) The reference to a user.
     */
    ownerReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional).
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Optional) The reference to a project.
     */
    projectReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Optional) Subnet IP address.
     */
    subnetIp?: pulumi.Input<string>;
    /**
     * - (Optional). Valid Types are ["VLAN", "OVERLAY"]
     */
    subnetType: pulumi.Input<string>;
    /**
     * - (Optional). For VLAN subnet.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * VPC reference uuid
     */
    vpcReferenceUuid?: pulumi.Input<string>;
    /**
     * - (Optional).
     */
    vswitchName?: pulumi.Input<string>;
}
