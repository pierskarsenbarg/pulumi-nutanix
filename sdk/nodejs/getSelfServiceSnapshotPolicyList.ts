// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Describes snapshot policies present in a blueprint. Environment containing snapshot policy must be added in blueprint for this data source to work.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const test = nutanix.getSelfServiceSnapshotPolicyList({
 *     bpName: "NAME OF BLUEPRINT",
 *     length: 250,
 *     offset: 0,
 * });
 * ```
 */
export function getSelfServiceSnapshotPolicyList(args: GetSelfServiceSnapshotPolicyListArgs, opts?: pulumi.InvokeOptions): Promise<GetSelfServiceSnapshotPolicyListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getSelfServiceSnapshotPolicyList:getSelfServiceSnapshotPolicyList", {
        "bpName": args.bpName,
        "bpUuid": args.bpUuid,
        "length": args.length,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getSelfServiceSnapshotPolicyList.
 */
export interface GetSelfServiceSnapshotPolicyListArgs {
    /**
     * - (Optional) The UUID of the blueprint for which snapshot policies should be listed.
     */
    bpName?: string;
    /**
     * - (Optional) The name of the blueprint for which snapshot policies should be listed.
     *
     * Both (`bpName` and `bpUuid`) are optional but atleast one of them to be provided for this data source to work.
     */
    bpUuid?: string;
    /**
     * - (Required) The number of snapshot policy records to return.
     */
    length: number;
    /**
     * - (Required) The index of the first snapshot policy to return Used for pagination. Default value: 0
     */
    offset: number;
}

/**
 * A collection of values returned by getSelfServiceSnapshotPolicyList.
 */
export interface GetSelfServiceSnapshotPolicyListResult {
    readonly bpName?: string;
    readonly bpUuid?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * - (Required) The number of snapshot policy records to return.
     */
    readonly length: number;
    /**
     * - (Required) The index of the first snapshot policy to return Used for pagination. Default value: 0
     */
    readonly offset: number;
    readonly policyLists: outputs.GetSelfServiceSnapshotPolicyListPolicyList[];
}
/**
 * Describes snapshot policies present in a blueprint. Environment containing snapshot policy must be added in blueprint for this data source to work.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const test = nutanix.getSelfServiceSnapshotPolicyList({
 *     bpName: "NAME OF BLUEPRINT",
 *     length: 250,
 *     offset: 0,
 * });
 * ```
 */
export function getSelfServiceSnapshotPolicyListOutput(args: GetSelfServiceSnapshotPolicyListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSelfServiceSnapshotPolicyListResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getSelfServiceSnapshotPolicyList:getSelfServiceSnapshotPolicyList", {
        "bpName": args.bpName,
        "bpUuid": args.bpUuid,
        "length": args.length,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getSelfServiceSnapshotPolicyList.
 */
export interface GetSelfServiceSnapshotPolicyListOutputArgs {
    /**
     * - (Optional) The UUID of the blueprint for which snapshot policies should be listed.
     */
    bpName?: pulumi.Input<string>;
    /**
     * - (Optional) The name of the blueprint for which snapshot policies should be listed.
     *
     * Both (`bpName` and `bpUuid`) are optional but atleast one of them to be provided for this data source to work.
     */
    bpUuid?: pulumi.Input<string>;
    /**
     * - (Required) The number of snapshot policy records to return.
     */
    length: pulumi.Input<number>;
    /**
     * - (Required) The index of the first snapshot policy to return Used for pagination. Default value: 0
     */
    offset: pulumi.Input<number>;
}
