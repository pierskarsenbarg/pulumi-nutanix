// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a dictionary of cluster networks and available uplinks on the given nodes. This API is not supported for XEN hypervisor type.
 */
export class ClustersUnconfiguredNodeNetworksV2 extends pulumi.CustomResource {
    /**
     * Get an existing ClustersUnconfiguredNodeNetworksV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClustersUnconfiguredNodeNetworksV2State, opts?: pulumi.CustomResourceOptions): ClustersUnconfiguredNodeNetworksV2 {
        return new ClustersUnconfiguredNodeNetworksV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/clustersUnconfiguredNodeNetworksV2:ClustersUnconfiguredNodeNetworksV2';

    /**
     * Returns true if the given object is an instance of ClustersUnconfiguredNodeNetworksV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClustersUnconfiguredNodeNetworksV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClustersUnconfiguredNodeNetworksV2.__pulumiType;
    }

    public readonly expand!: pulumi.Output<string | undefined>;
    /**
     * -(Required) Cluster UUID.
     */
    public readonly extId!: pulumi.Output<string>;
    /**
     * -(Required) List of nodes for which the network information is required.
     */
    public readonly nodeLists!: pulumi.Output<outputs.ClustersUnconfiguredNodeNetworksV2NodeList[]>;
    public /*out*/ readonly nodesNetworkingDetails!: pulumi.Output<outputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetail[]>;
    /**
     * -(Optional) Request type
     */
    public readonly requestType!: pulumi.Output<string>;

    /**
     * Create a ClustersUnconfiguredNodeNetworksV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClustersUnconfiguredNodeNetworksV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClustersUnconfiguredNodeNetworksV2Args | ClustersUnconfiguredNodeNetworksV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClustersUnconfiguredNodeNetworksV2State | undefined;
            resourceInputs["expand"] = state ? state.expand : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["nodeLists"] = state ? state.nodeLists : undefined;
            resourceInputs["nodesNetworkingDetails"] = state ? state.nodesNetworkingDetails : undefined;
            resourceInputs["requestType"] = state ? state.requestType : undefined;
        } else {
            const args = argsOrState as ClustersUnconfiguredNodeNetworksV2Args | undefined;
            if ((!args || args.extId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extId'");
            }
            if ((!args || args.nodeLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeLists'");
            }
            resourceInputs["expand"] = args ? args.expand : undefined;
            resourceInputs["extId"] = args ? args.extId : undefined;
            resourceInputs["nodeLists"] = args ? args.nodeLists : undefined;
            resourceInputs["requestType"] = args ? args.requestType : undefined;
            resourceInputs["nodesNetworkingDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClustersUnconfiguredNodeNetworksV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClustersUnconfiguredNodeNetworksV2 resources.
 */
export interface ClustersUnconfiguredNodeNetworksV2State {
    expand?: pulumi.Input<string>;
    /**
     * -(Required) Cluster UUID.
     */
    extId?: pulumi.Input<string>;
    /**
     * -(Required) List of nodes for which the network information is required.
     */
    nodeLists?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeList>[]>;
    nodesNetworkingDetails?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetail>[]>;
    /**
     * -(Optional) Request type
     */
    requestType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClustersUnconfiguredNodeNetworksV2 resource.
 */
export interface ClustersUnconfiguredNodeNetworksV2Args {
    expand?: pulumi.Input<string>;
    /**
     * -(Required) Cluster UUID.
     */
    extId: pulumi.Input<string>;
    /**
     * -(Required) List of nodes for which the network information is required.
     */
    nodeLists: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeList>[]>;
    /**
     * -(Optional) Request type
     */
    requestType?: pulumi.Input<string>;
}
