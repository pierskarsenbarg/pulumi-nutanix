// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix datasource Get the route table for the specified extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const route_table = nutanix.getRouteTableV2({
 *     extId: "<route_table_uuid>",
 * });
 * ```
 */
export function getRouteTableV2(args: GetRouteTableV2Args, opts?: pulumi.InvokeOptions): Promise<GetRouteTableV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getRouteTableV2:getRouteTableV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTableV2.
 */
export interface GetRouteTableV2Args {
    /**
     * Route UUID
     */
    extId: string;
}

/**
 * A collection of values returned by getRouteTableV2.
 */
export interface GetRouteTableV2Result {
    /**
     * Route UUID
     */
    readonly extId: string;
    /**
     * External routing domain associated with this route table.
     */
    readonly externalRoutingDomainReference: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetRouteTableV2Link[];
    /**
     * Metadata associated with this resource.
     */
    readonly metadatas: outputs.GetRouteTableV2Metadata[];
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    readonly tenantId: string;
    /**
     * VPC reference.
     */
    readonly vpcReference: string;
}
/**
 * Provides Nutanix datasource Get the route table for the specified extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const route_table = nutanix.getRouteTableV2({
 *     extId: "<route_table_uuid>",
 * });
 * ```
 */
export function getRouteTableV2Output(args: GetRouteTableV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRouteTableV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getRouteTableV2:getRouteTableV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTableV2.
 */
export interface GetRouteTableV2OutputArgs {
    /**
     * Route UUID
     */
    extId: pulumi.Input<string>;
}
