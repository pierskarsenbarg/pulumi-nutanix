// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get the LCM framework status. Represents the Status of LCM. Status represents details about a pending or ongoing action in LCM.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const lcmFrameworkStatus = nutanix.getLcmStatusV2({
 *     xClusterId: "0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b",
 * });
 * ```
 */
export function getLcmStatusV2(args?: GetLcmStatusV2Args, opts?: pulumi.InvokeOptions): Promise<GetLcmStatusV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getLcmStatusV2:getLcmStatusV2", {
        "xClusterId": args.xClusterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLcmStatusV2.
 */
export interface GetLcmStatusV2Args {
    /**
     * Cluster uuid on which the resource is present or operation is being performed.
     */
    xClusterId?: string;
}

/**
 * A collection of values returned by getLcmStatusV2.
 */
export interface GetLcmStatusV2Result {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    readonly extId: string;
    /**
     * LCM framework version information.
     */
    readonly frameworkVersions: outputs.GetLcmStatusV2FrameworkVersion[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Operation type and UUID of an ongoing operation in LCM.
     */
    readonly inProgressOperations: outputs.GetLcmStatusV2InProgressOperation[];
    /**
     * Boolean that indicates if cancel intent for LCM update is set or not.
     */
    readonly isCancelIntentSet: boolean;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetLcmStatusV2Link[];
    /**
     * - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    readonly tenantId: string;
    /**
     * Upload task UUID.
     */
    readonly uploadTaskUuid: string;
    readonly xClusterId?: string;
}
/**
 * Get the LCM framework status. Represents the Status of LCM. Status represents details about a pending or ongoing action in LCM.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const lcmFrameworkStatus = nutanix.getLcmStatusV2({
 *     xClusterId: "0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b",
 * });
 * ```
 */
export function getLcmStatusV2Output(args?: GetLcmStatusV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLcmStatusV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getLcmStatusV2:getLcmStatusV2", {
        "xClusterId": args.xClusterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLcmStatusV2.
 */
export interface GetLcmStatusV2OutputArgs {
    /**
     * Cluster uuid on which the resource is present or operation is being performed.
     */
    xClusterId?: pulumi.Input<string>;
}
