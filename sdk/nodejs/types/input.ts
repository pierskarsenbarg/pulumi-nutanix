// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessControlPolicyCategory {
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface AccessControlPolicyContextFilterList {
    /**
     * A list of Entity filter expressions.
     */
    entityFilterExpressionLists: pulumi.Input<pulumi.Input<inputs.AccessControlPolicyContextFilterListEntityFilterExpressionList>[]>;
    /**
     * - (Optional) Filter the scope of an Access Control Policy.
     */
    scopeFilterExpressionLists?: pulumi.Input<pulumi.Input<inputs.AccessControlPolicyContextFilterListScopeFilterExpressionList>[]>;
}

export interface AccessControlPolicyContextFilterListEntityFilterExpressionList {
    /**
     * - (Optional)  The LHS of the filter expression - the entity type.
     */
    leftHandSideEntityType?: pulumi.Input<string>;
    /**
     * - (Required) The operator in the filter expression.
     */
    operator: pulumi.Input<string>;
    /**
     * - (Required) The right hand side (RHS) of an scope expression.
     */
    rightHandSide: pulumi.Input<inputs.AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide>;
}

export interface AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide {
    /**
     * - (Optional) The category values represented as a dictionary of key > list of values.
     */
    categories?: pulumi.Input<inputs.AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories>;
    /**
     * - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
     */
    collection?: pulumi.Input<string>;
    /**
     * - (Optional) The explicit list of UUIDs for the given kind.
     */
    uuidLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories {
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccessControlPolicyContextFilterListScopeFilterExpressionList {
    /**
     * - (Optional)  The LHS of the filter expression - the scope type.
     */
    leftHandSide: pulumi.Input<string>;
    /**
     * - (Required) The operator of the filter expression.
     */
    operator: pulumi.Input<string>;
    /**
     * - (Required) The right hand side (RHS) of an scope expression.
     */
    rightHandSide: pulumi.Input<inputs.AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide>;
}

export interface AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide {
    /**
     * - (Optional) The category values represented as a dictionary of key > list of values.
     */
    categories?: pulumi.Input<inputs.AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories>;
    /**
     * - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
     */
    collection?: pulumi.Input<string>;
    /**
     * - (Optional) The explicit list of UUIDs for the given kind.
     */
    uuidLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories {
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccessControlPolicyOwnerReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface AccessControlPolicyRoleReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind: pulumi.Input<string>;
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface AccessControlPolicyUserGroupReferenceList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface AccessControlPolicyUserReferenceList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the Access Control Policy.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface AddressGroupIpAddressBlockList {
    /**
     * - (Required) IP of the address block
     */
    ip: pulumi.Input<string>;
    /**
     * - (Required) Prefix length of address block in int
     *
     * See detailed information in [Nutanix Address Groups](https://www.nutanix.dev/api_references/prism-central-v3/#/5ccef53a546a4-create-a-new-address-group).
     */
    prefixLength: pulumi.Input<number>;
}

export interface AddressGroupsV2IpRange {
    endIp?: pulumi.Input<string>;
    startIp?: pulumi.Input<string>;
}

export interface AddressGroupsV2Ipv4Address {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface AddressGroupsV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface AssociateCategoryToVolumeGroupV2Category {
    /**
     * -(Optional) Type of entity that's represented by this reference. Default value is "CATEGORY". Valid values are:
     * * "CATEGORY".
     *
     * See detailed information in [Nutanix Associate/Disassociate category to/from a Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/associateCategory).
     */
    entityType?: pulumi.Input<string>;
    /**
     * -(Required) The external identifier of the category.
     */
    extId: pulumi.Input<string>;
    /**
     * -(Optional) Name of entity that's represented by this reference
     */
    name?: pulumi.Input<string>;
    /**
     * -(Optional) URI of entities that's represented by this reference.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AuthorizationPolicyV2Entity {
    reserved?: pulumi.Input<string>;
}

export interface AuthorizationPolicyV2Identity {
    reserved?: pulumi.Input<string>;
}

export interface CategoryV2Association {
    /**
     * External identifier for the given category, used across all v4 apis/entities/resources where categories are referenced.
     */
    categoryId?: pulumi.Input<string>;
    /**
     * Count of associations of a particular type of entity or policy
     */
    count?: pulumi.Input<string>;
    /**
     * An enum denoting the resource group.
     * Resources can be organized into either an entity or a policy.
     * Valid values are:
     * - `POLICY`:  A ResourceGroup denoting a nutanix policy like VM host affinity policy, image placement policy, access control policy, and so on.<br> A category is generally associated with many entities.<br> The policy which is associated with this category, is then applied to those entities which are also associated with the same category.
     * - `ENTITY`: A ResourceGroup denoting a nutanix entity like VM, cluster, host, image, and so on.<br> A category is generally associated with many entities.<br> A policy is then applied to these entities through the category.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * An enum denoting the associated resource types. Resource types are further grouped into 2 types - entity or a policy.
     * Valid values are:
     * - `APP`:  A resource of type application.
     * - `PROTECTION_RULE`:  A policy or rule of type protection rule.
     * - `IMAGE_RATE_LIMIT`: A resource of type rate limit.
     * - `MH_VM`: A resource of type Virtual Machine.
     * - `BLUEPRINT`:  A resource of type blueprint.
     * - `HOST`:  A resource representing the underlying host, the machine hosting the hypervisors and VMs.
     * - `IMAGE`:  A resource of type image.
     * - `VM_VM_ANTI_AFFINITY_POLICY`:  A policy of type VM-VM anti-affinity; This policy decides that the specified set of VMs are running on different hosts.
     * - `ACCESS_CONTROL_POLICY`: A policy or rule of type access control policy or ACP; the rules that decide authorization of users to access an API.
     * - `VM_HOST_AFFINITY_POLICY`: A policy of type VM host affinity; The policy decides the affinity between a set of VMs to be run only a specified set of hosts
     * - `NGT_POLICY`:  A policy or rule of type NGT policy.
     * - `RECOVERY_PLAN`:  A policy or rule of type recovery plan.
     * - `MARKETPLACE_ITEM`: A resource of type marketplace item.
     * - `CLUSTER`:  A resource of type cluster, usually refers to a PE cluster.
     * - `NETWORK_SECURITY_RULE`:  A rule of type network security.
     * - `HOST_NIC`:  A resource of type Physical NIC.
     * - `ACTION_RULE`:  A policy of type Playbook.
     * - `VOLUMEGROUP`:  A resource of type volume group.
     * - `REPORT`:  A resource of type report.
     * - `STORAGE_POLICY`: A policy or rule of type storage policy.
     * - `BUNDLE`:  A resource of type bundle.
     * - `QOS_POLICY`: A policy or rule of type QoS policy.
     * - `SUBNET`:  A resource of type network subnets.
     * - `VM`: A resource of type Virtual Machine.
     * - `NETWORK_SECURITY_POLICY`:  A policy of type network security.
     * - `POLICY_SCHEMA`:  Policies like user-defined-alerts.
     * - `IMAGE_PLACEMENT_POLICY`:  A policy of type image placement.
     */
    resourceType?: pulumi.Input<string>;
}

export interface CategoryV2DetailedAssociation {
    /**
     * External identifier for the given category, used across all v4 apis/entities/resources where categories are referenced.
     */
    categoryId?: pulumi.Input<string>;
    /**
     * An enum denoting the resource group.
     * Resources can be organized into either an entity or a policy.
     * Valid values are:
     * - `POLICY`:  A ResourceGroup denoting a nutanix policy like VM host affinity policy, image placement policy, access control policy, and so on.<br> A category is generally associated with many entities.<br> The policy which is associated with this category, is then applied to those entities which are also associated with the same category.
     * - `ENTITY`: A ResourceGroup denoting a nutanix entity like VM, cluster, host, image, and so on.<br> A category is generally associated with many entities.<br> A policy is then applied to these entities through the category.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * The UUID of the entity or policy associated with the particular category.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * An enum denoting the associated resource types. Resource types are further grouped into 2 types - entity or a policy.
     * Valid values are:
     * - `APP`:  A resource of type application.
     * - `PROTECTION_RULE`:  A policy or rule of type protection rule.
     * - `IMAGE_RATE_LIMIT`: A resource of type rate limit.
     * - `MH_VM`: A resource of type Virtual Machine.
     * - `BLUEPRINT`:  A resource of type blueprint.
     * - `HOST`:  A resource representing the underlying host, the machine hosting the hypervisors and VMs.
     * - `IMAGE`:  A resource of type image.
     * - `VM_VM_ANTI_AFFINITY_POLICY`:  A policy of type VM-VM anti-affinity; This policy decides that the specified set of VMs are running on different hosts.
     * - `ACCESS_CONTROL_POLICY`: A policy or rule of type access control policy or ACP; the rules that decide authorization of users to access an API.
     * - `VM_HOST_AFFINITY_POLICY`: A policy of type VM host affinity; The policy decides the affinity between a set of VMs to be run only a specified set of hosts
     * - `NGT_POLICY`:  A policy or rule of type NGT policy.
     * - `RECOVERY_PLAN`:  A policy or rule of type recovery plan.
     * - `MARKETPLACE_ITEM`: A resource of type marketplace item.
     * - `CLUSTER`:  A resource of type cluster, usually refers to a PE cluster.
     * - `NETWORK_SECURITY_RULE`:  A rule of type network security.
     * - `HOST_NIC`:  A resource of type Physical NIC.
     * - `ACTION_RULE`:  A policy of type Playbook.
     * - `VOLUMEGROUP`:  A resource of type volume group.
     * - `REPORT`:  A resource of type report.
     * - `STORAGE_POLICY`: A policy or rule of type storage policy.
     * - `BUNDLE`:  A resource of type bundle.
     * - `QOS_POLICY`: A policy or rule of type QoS policy.
     * - `SUBNET`:  A resource of type network subnets.
     * - `VM`: A resource of type Virtual Machine.
     * - `NETWORK_SECURITY_POLICY`:  A policy of type network security.
     * - `POLICY_SCHEMA`:  Policies like user-defined-alerts.
     * - `IMAGE_PLACEMENT_POLICY`:  A policy of type image placement.
     */
    resourceType?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2ConfigParam {
    /**
     * -(Optional) HyperV Credentials.
     */
    hipervs?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2ConfigParamHiperv>[]>;
    /**
     * -(Optional) Indicates whether the node is compute only or not.
     */
    isComputeOnly?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates whether the node is marked to be never schedulable or not.
     */
    isNeverSchedulable?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if node is compatible or not.
     */
    isNosCompatible?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if node discovery need to be skipped or not.
     */
    shouldSkipDiscovery?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if node imaging needs to be skipped or not.
     */
    shouldSkipImaging?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if rack awareness needs to be validated or not.
     */
    shouldValidateRackAwareness?: pulumi.Input<boolean>;
    /**
     * -(Optional) Target hypervisor.
     */
    targetHypervisor?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2ConfigParamHiperv {
    /**
     * -(Optional) UserName and Password model.
     */
    domainDetails?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2ConfigParamHipervDomainDetail>[]>;
    /**
     * -(Optional) UserName and Password model.
     */
    failoverClusterDetails?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2ConfigParamHipervFailoverClusterDetail>[]>;
}

export interface ClusterAddNodeV2ConfigParamHipervDomainDetail {
    /**
     * -(Optional) Cluster name. This is part of payload for both cluster create & update operations.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * -(Optional) Password.
     */
    password?: pulumi.Input<string>;
    /**
     * -(Optional) Username.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2ConfigParamHipervFailoverClusterDetail {
    /**
     * -(Optional) Cluster name. This is part of payload for both cluster create & update operations.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * -(Optional) Password.
     */
    password?: pulumi.Input<string>;
    /**
     * -(Optional) Username.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParam {
    /**
     * -(Optional) Block list of a cluster.
     */
    blockLists?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamBlockList>[]>;
    /**
     * -(Optional) Hypervisor bundle information.
     */
    bundleInfos?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamBundleInfo>[]>;
    computeNodeLists?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeList>[]>;
    /**
     * -(Optional) Hyperv SKU.
     */
    hypervSku?: pulumi.Input<string>;
    /**
     * -(Optional) Hypervisor type to md5sum map.
     */
    hypervisorIsos?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamHypervisorIso>[]>;
    /**
     * -(Required) List of nodes in a cluster.
     */
    nodeLists: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeList>[]>;
    /**
     * -(Optional) Indicates if the host networking needs to be skipped or not.
     */
    shouldSkipHostNetworking?: pulumi.Input<boolean>;
}

export interface ClusterAddNodeV2NodeParamBlockList {
    /**
     * -(Required) List of nodes in a block.
     */
    blockId?: pulumi.Input<string>;
    /**
     * -(Optional) Indicates if the host networking needs to be skipped or not.
     */
    rackName?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamBundleInfo {
    /**
     * -(Optional) Name of the hypervisor bundle.
     */
    name?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeList {
    blockId?: pulumi.Input<string>;
    digitalCertificateMapLists?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListDigitalCertificateMapList>[]>;
    hypervisorHostname?: pulumi.Input<string>;
    hypervisorIps?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListHypervisorIp>[]>;
    ipmiIps?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListIpmiIp>[]>;
    model?: pulumi.Input<string>;
    nodePosition?: pulumi.Input<string>;
    nodeUuid?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListDigitalCertificateMapList {
    /**
     * -(Optional) Field containing digitalCertificateBase64 and keyManagementServerUuid for key management server.
     */
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListHypervisorIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListHypervisorIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListHypervisorIpIpv6>[]>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListHypervisorIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListHypervisorIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListIpmiIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListIpmiIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamComputeNodeListIpmiIpIpv6>[]>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListIpmiIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamComputeNodeListIpmiIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamHypervisorIso {
    md5Sum?: pulumi.Input<string>;
    /**
     * -(Optional) Hypervisor type.
     * Valid values are:
     * - `XEN`: Xen hypervisor.
     * - `HYPERV`: Hyper-V hypervisor.
     * - `NATIVEHOST`: NativeHost type where AOS runs natively, without hypervisor.
     * - `ESX`: ESX hypervisor.
     * - `AHV`: AHV hypervisor.
     */
    type?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeList {
    /**
     * -(Optional) Block ID.
     */
    blockId?: pulumi.Input<string>;
    /**
     * -(Optional) Current network interface of a node.
     */
    currentNetworkInterface?: pulumi.Input<string>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    cvmIps?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListCvmIp>[]>;
    /**
     * -(Optional) List of objects containing digitalCertificateBase64 and keyManagementServerUuid fields for key management server.
     */
    digitalCertificateMapLists?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListDigitalCertificateMapList>[]>;
    /**
     * -(Optional) Name of the host.
     */
    hypervisorHostname?: pulumi.Input<string>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    hypervisorIps?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListHypervisorIp>[]>;
    /**
     * -(Optional) Hypervisor type.
     * Valid values are:
     * - `XEN`: Xen hypervisor.
     * - `HYPERV`: Hyper-V hypervisor.
     * - `NATIVEHOST`: NativeHost type where AOS runs natively, without hypervisor.
     * - `ESX`: ESX hypervisor.
     * - `AHV`: AHV hypervisor.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * -(Optional) Host version of the node.
     */
    hypervisorVersion?: pulumi.Input<string>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    ipmiIps?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListIpmiIp>[]>;
    isLightCompute?: pulumi.Input<boolean>;
    /**
     * -(Optional) Is ROBO mixed hypervisor.
     */
    isRoboMixedHypervisor?: pulumi.Input<boolean>;
    /**
     * -(Optional) Rackable unit model name.
     */
    model?: pulumi.Input<string>;
    /**
     * -(Optional) Active and standby uplink information of the target nodes.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListNetwork>[]>;
    /**
     * -(Optional) Node position.
     */
    nodePosition?: pulumi.Input<string>;
    /**
     * -(Optional) Node UUID.
     */
    nodeUuid?: pulumi.Input<string>;
    /**
     * -(Optional) NOS software version of a node.
     */
    nosVersion?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListCvmIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListCvmIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListCvmIpIpv6>[]>;
}

export interface ClusterAddNodeV2NodeParamNodeListCvmIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListCvmIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListDigitalCertificateMapList {
    /**
     * -(Optional) Field containing digitalCertificateBase64 and keyManagementServerUuid for key management server.
     */
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListHypervisorIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListHypervisorIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListHypervisorIpIpv6>[]>;
}

export interface ClusterAddNodeV2NodeParamNodeListHypervisorIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListHypervisorIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListIpmiIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListIpmiIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListIpmiIpIpv6>[]>;
}

export interface ClusterAddNodeV2NodeParamNodeListIpmiIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListIpmiIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListNetwork {
    /**
     * -(Optional) Name of the uplink.
     */
    name?: pulumi.Input<string>;
    /**
     * -(Optional) List of network types.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * -(Optional) Active and standby uplink information of the target nodes.
     */
    uplinks?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListNetworkUplink>[]>;
}

export interface ClusterAddNodeV2NodeParamNodeListNetworkUplink {
    /**
     * -(Optional) Active uplink information.
     */
    actives?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListNetworkUplinkActive>[]>;
    /**
     * -(Optional) Standby uplink information.
     */
    standbies?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2NodeParamNodeListNetworkUplinkStandby>[]>;
}

export interface ClusterAddNodeV2NodeParamNodeListNetworkUplinkActive {
    /**
     * -(Optional) Mac address.
     */
    mac?: pulumi.Input<string>;
    /**
     * -(Optional) Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * -(Optional) Interface value.
     */
    value?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2NodeParamNodeListNetworkUplinkStandby {
    /**
     * -(Optional) Mac address.
     */
    mac?: pulumi.Input<string>;
    /**
     * -(Optional) Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * -(Optional) Interface value.
     */
    value?: pulumi.Input<string>;
}

export interface ClusterAddNodeV2RemoveNodeParam {
    /**
     * -(Optional) Extra parameters for node addition.
     */
    extraParams?: pulumi.Input<pulumi.Input<inputs.ClusterAddNodeV2RemoveNodeParamExtraParam>[]>;
    /**
     * -(Optional) Indicates if prechecks can be skipped for node removal.
     */
    shouldSkipPrechecks?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if node removal can be skipped.
     */
    shouldSkipRemove?: pulumi.Input<boolean>;
}

export interface ClusterAddNodeV2RemoveNodeParamExtraParam {
    /**
     * -(Optional) Indicates if add check needs to be skipped or not.
     *
     *
     *
     *
     * See detailed information in [Nutanix Cluster - Add Node on a Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/expandCluster).
     */
    shouldSkipAddCheck?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if upgrade check needs to be skipped or not.
     */
    shouldSkipUpgradeCheck?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates if space check needs to be skipped or not.
     */
    skipSpaceCheck?: pulumi.Input<boolean>;
}

export interface ClusterV2Config {
    /**
     * - (Optional) Public ssh key details. This is part of payload for cluster update operation only.
     */
    authorizedPublicKeyLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigAuthorizedPublicKeyList>[]>;
    /**
     * - (Optional) Build information details.
     */
    buildInfos?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigBuildInfo>[]>;
    /**
     * - (Optional) Cluster arch.
     * Valid values are:
     * - "PPC64LE" PPC64LE cluster architecture type.
     * - "X86_64" X86_64 cluster architecture type.
     */
    clusterArch?: pulumi.Input<string>;
    /**
     * - (Optional) Cluster function. This is part of payload for cluster
     * create operation only (allowed enum values for creation are AOS, ONE_NODE & TWO_NODE only).
     * Valid values are:
     * - "AOS"
     * - "PRISM_CENTRAL"
     * - "CLOUD_DATA_GATEWAY"
     * - "AFS"
     * - "ONE_NODE"
     * - "TWO_NODE"
     * - "ANALYTICS_PLATFORM"
     */
    clusterFunctions?: pulumi.Input<pulumi.Input<string>[]>;
    clusterSoftwareMaps?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigClusterSoftwareMap>[]>;
    /**
     * - (Optional) Encryption in transit Status.
     * Valid values are:
     * - "DISABLED"	Disabled encryption status.
     * - "ENABLED"	Enabled encryption status.
     */
    encryptionInTransitStatus?: pulumi.Input<string>;
    encryptionOptions?: pulumi.Input<pulumi.Input<string>[]>;
    encryptionScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) Fault tolerant state of cluster.
     */
    faultToleranceStates?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigFaultToleranceState>[]>;
    hypervisorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    incarnationId?: pulumi.Input<number>;
    isAvailable?: pulumi.Input<boolean>;
    isLts?: pulumi.Input<boolean>;
    isPasswordRemoteLoginEnabled?: pulumi.Input<boolean>;
    isRemoteSupportEnabled?: pulumi.Input<boolean>;
    /**
     * - (Optional) Cluster operation mode. This is part of payload for cluster
     * update operation only.
     * Valid values are:
     * - "OVERRIDE"	Override operation mode.
     * - "STAND_ALONE"	Stand-alone operation mode.
     * - "SWITCH_TO_TWO_NODE"	Switch to two-node operation mode.
     * - "NORMAL"	Normal operation mode.
     * - "READ_ONLY"	Read-only operation mode.
     */
    operationMode?: pulumi.Input<string>;
    /**
     * - (Optional) Pulse status for a cluster. `supported only for update operations and not available during creation.`
     */
    pulseStatuses?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigPulseStatus>[]>;
    /**
     * - (Optional) Redundancy factor of a cluster. This is part of payload for both cluster create & update operations.
     */
    redundancyFactor?: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
}

export interface ClusterV2ConfigAuthorizedPublicKeyList {
    /**
     * Ssh key value.
     */
    key?: pulumi.Input<string>;
    /**
     * Ssh key name.
     */
    name?: pulumi.Input<string>;
}

export interface ClusterV2ConfigBuildInfo {
    /**
     * Software build type.
     */
    buildType?: pulumi.Input<string>;
    /**
     * Commit Id used for version.
     */
    commitId?: pulumi.Input<string>;
    /**
     * Full name of software version.
     */
    fullVersion?: pulumi.Input<string>;
    /**
     * Short commit Id used for version.
     */
    shortCommitId?: pulumi.Input<string>;
    /**
     * Software version.
     */
    version?: pulumi.Input<string>;
}

export interface ClusterV2ConfigClusterSoftwareMap {
    softwareType?: pulumi.Input<string>;
    /**
     * Software version.
     */
    version?: pulumi.Input<string>;
}

export interface ClusterV2ConfigFaultToleranceState {
    currentClusterFaultTolerance?: pulumi.Input<string>;
    currentMaxFaultTolerance?: pulumi.Input<number>;
    desiredClusterFaultTolerance?: pulumi.Input<string>;
    desiredMaxFaultTolerance?: pulumi.Input<number>;
    /**
     * Domain awareness level corresponds to unit of cluster group. This is part of payload for both cluster create & update operations.
     * Valid values are:
     * - "RACK"	Rack level awareness.
     * - "NODE"	Node level awareness.
     * - "BLOCK"	Block level awareness.
     * - "DISK"	Disk level awareness.
     */
    domainAwarenessLevel?: pulumi.Input<string>;
    redundancyStatuses?: pulumi.Input<pulumi.Input<inputs.ClusterV2ConfigFaultToleranceStateRedundancyStatus>[]>;
}

export interface ClusterV2ConfigFaultToleranceStateRedundancyStatus {
    isCassandraPreparationDone?: pulumi.Input<boolean>;
    isZookeeperPreparationDone?: pulumi.Input<boolean>;
}

export interface ClusterV2ConfigPulseStatus {
    /**
     * - (Optional) Flag to indicate if pulse is enabled or not.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * - (Optional) PII scrubbing level.
     * Valid values are:
     * - "ALL" :	Scrub All PII Information from Pulse including data like entity names and IP addresses.
     * - "DEFAULT":	Default PII Scrubbing level. Data like entity names and IP addresses will not be scrubbed from Pulse.
     */
    piiScrubbingLevel?: pulumi.Input<string>;
}

export interface ClusterV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface ClusterV2Network {
    /**
     * Params associated to the backplane network segmentation. This is part of payload for cluster(create operation only.)
     */
    backplanes?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkBackplane>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    externalAddresses?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalAddress>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    externalDataServicesIps?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalDataServicesIp>[]>;
    externalSubnet?: pulumi.Input<string>;
    /**
     * Cluster fully qualified domain name. This is part of payload for cluster update operation only.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * List of HTTP Proxy server configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    httpProxyLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkHttpProxyList>[]>;
    httpProxyWhiteLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkHttpProxyWhiteList>[]>;
    internalSubnet?: pulumi.Input<string>;
    /**
     * Management server type.
     * Valid values are:
     * - "PRISM_CENTRAL"	Prism Central management server.
     * - "EXTERNAL"	External management server.
     * - "LOCAL"	Local management server.
     */
    keyManagementServerType?: pulumi.Input<string>;
    /**
     * Management server information.
     */
    managementServers?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkManagementServer>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    masqueradingIps?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkMasqueradingIp>[]>;
    masqueradingPort?: pulumi.Input<string>;
    /**
     * List of name servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    nameServerIpLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNameServerIpList>[]>;
    /**
     * NFS subnet whitelist addresses. This is part of payload for cluster update operation only.
     */
    nfsSubnetWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of NTP servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    ntpServerIpLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNtpServerIpList>[]>;
    /**
     * SMTP servers on a cluster. This is part of payload for cluster update operation only.
     */
    smtpServers?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServer>[]>;
}

export interface ClusterV2NetworkBackplane {
    /**
     * Flag to indicate if the backplane segmentation needs to be enabled or not.
     */
    isSegmentationEnabled?: pulumi.Input<boolean>;
    /**
     * Netmask configs.
     */
    netmasks?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkBackplaneNetmask>[]>;
    /**
     * Subnet configs.
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkBackplaneSubnet>[]>;
    /**
     * VLAN Id tagged to the backplane network on the cluster. This is part of cluster create payload.
     */
    vlanTag?: pulumi.Input<number>;
}

export interface ClusterV2NetworkBackplaneNetmask {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkBackplaneSubnet {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkExternalAddress {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalAddressIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalAddressIpv6>[]>;
}

export interface ClusterV2NetworkExternalAddressIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkExternalAddressIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkExternalDataServicesIp {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalDataServicesIpIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkExternalDataServicesIpIpv6>[]>;
}

export interface ClusterV2NetworkExternalDataServicesIpIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkExternalDataServicesIpIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkHttpProxyList {
    /**
     * - (Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkHttpProxyListIpAddress>[]>;
    /**
     * - (Required) HTTP Proxy server name configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    name: pulumi.Input<string>;
    /**
     * - (Optional) HTTP Proxy server password needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    password?: pulumi.Input<string>;
    /**
     * - (Optional) HTTP Proxy server port configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    port?: pulumi.Input<number>;
    proxyTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) HTTP Proxy server username needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterV2NetworkHttpProxyListIpAddress {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkHttpProxyListIpAddressIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkHttpProxyListIpAddressIpv6>[]>;
}

export interface ClusterV2NetworkHttpProxyListIpAddressIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkHttpProxyListIpAddressIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkHttpProxyWhiteList {
    /**
     * - (Required) Target's identifier which is exempted from going through the configured HTTP Proxy.
     */
    target: pulumi.Input<string>;
    /**
     * - (Optional) Target type.
     * Valid values are:
     * - "IPV6_ADDRESS"	IPV6 address.
     * - "HOST_NAME"	Name of the host.
     * - "IPV4_ADDRESS"	IPV4 address.
     * - "DOMAIN_NAME_SUFFIX"	Domain Name Suffix required for http proxy whitelist.
     * - "IPV4_NETWORK_MASK" Network Mask of the IpV4 family.
     */
    targetType: pulumi.Input<string>;
}

export interface ClusterV2NetworkManagementServer {
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkManagementServerIp>[]>;
    isDrsEnabled?: pulumi.Input<boolean>;
    isInUse?: pulumi.Input<boolean>;
    /**
     * Indicates whether it is registered or not.
     */
    isRegistered?: pulumi.Input<boolean>;
    /**
     * Management server type.
     * Valid values are:
     * - "VCENTER"	Vcenter management server.
     */
    type?: pulumi.Input<string>;
}

export interface ClusterV2NetworkManagementServerIp {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkManagementServerIpIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkManagementServerIpIpv6>[]>;
}

export interface ClusterV2NetworkManagementServerIpIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkManagementServerIpIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkMasqueradingIp {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkMasqueradingIpIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkMasqueradingIpIpv6>[]>;
}

export interface ClusterV2NetworkMasqueradingIpIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkMasqueradingIpIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkNameServerIpList {
    /**
     * - (Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNameServerIpListFqdn>[]>;
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNameServerIpListIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNameServerIpListIpv6>[]>;
}

export interface ClusterV2NetworkNameServerIpListFqdn {
    value?: pulumi.Input<string>;
}

export interface ClusterV2NetworkNameServerIpListIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkNameServerIpListIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkNtpServerIpList {
    /**
     * - (Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNtpServerIpListFqdn>[]>;
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNtpServerIpListIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkNtpServerIpListIpv6>[]>;
}

export interface ClusterV2NetworkNtpServerIpListFqdn {
    value?: pulumi.Input<string>;
}

export interface ClusterV2NetworkNtpServerIpListIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkNtpServerIpListIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkSmtpServer {
    /**
     * SMTP email address.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * SMTP network details.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServerServer>[]>;
    /**
     * Type of SMTP server.
     * Valid values are:
     * - "PLAIN"	Plain type SMTP server.
     * - "STARTTLS"	Start TLS type SMTP server.
     * - "SSL"	SSL type SMTP server.
     */
    type?: pulumi.Input<string>;
}

export interface ClusterV2NetworkSmtpServerServer {
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServerServerIpAddress>[]>;
    /**
     * SMTP server password.
     */
    password?: pulumi.Input<string>;
    /**
     * SMTP port.
     */
    port?: pulumi.Input<number>;
    /**
     * SMTP server user name.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterV2NetworkSmtpServerServerIpAddress {
    /**
     * - (Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServerServerIpAddressFqdn>[]>;
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServerServerIpAddressIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NetworkSmtpServerServerIpAddressIpv6>[]>;
}

export interface ClusterV2NetworkSmtpServerServerIpAddressFqdn {
    value?: pulumi.Input<string>;
}

export interface ClusterV2NetworkSmtpServerServerIpAddressIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NetworkSmtpServerServerIpAddressIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2Node {
    /**
     * - (Optional) List of nodes in a cluster.
     */
    nodeLists?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeList>[]>;
    numberOfNodes?: pulumi.Input<number>;
}

export interface ClusterV2NodeNodeList {
    /**
     * - (Required) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    controllerVmIps: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListControllerVmIp>[]>;
    /**
     * - (Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    hostIps?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListHostIp>[]>;
    nodeUuid?: pulumi.Input<string>;
}

export interface ClusterV2NodeNodeListControllerVmIp {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListControllerVmIpIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListControllerVmIpIpv6>[]>;
}

export interface ClusterV2NodeNodeListControllerVmIpIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NodeNodeListControllerVmIpIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NodeNodeListHostIp {
    /**
     * - (Optional) ip address params.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListHostIpIpv4>[]>;
    /**
     * - (Optional) Ip address params.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClusterV2NodeNodeListHostIpIpv6>[]>;
}

export interface ClusterV2NodeNodeListHostIpIpv4 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     */
    value: pulumi.Input<string>;
}

export interface ClusterV2NodeNodeListHostIpIpv6 {
    /**
     * - (Optional) The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - (Required) Ip address.
     *
     * See detailed information in [Nutanix Create Cluster V4](https://developers.nutanix.com/api-reference?namespace=clustermgmt&version=v4.0#tag/Clusters/operation/createCluster).
     */
    value: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2IpFilterList {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListIpv6>[]>;
}

export interface ClustersDiscoverUnconfiguredNodesV2IpFilterListIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value?: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2IpFilterListIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value?: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode {
    /**
     * Cluster arch type.
     */
    arch?: pulumi.Input<string>;
    /**
     * Attributes of a node.
     */
    attributes?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeAttribute>[]>;
    /**
     * Cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * CPU type.
     */
    cpuTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Current CVM VLAN tag.
     */
    currentCvmVlanTag?: pulumi.Input<string>;
    /**
     * Current network interface of a node.
     */
    currentNetworkInterface?: pulumi.Input<string>;
    /**
     * CVM IP.
     */
    cvmIps?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIp>[]>;
    /**
     * Foundation version.
     */
    foundationVersion?: pulumi.Input<string>;
    /**
     * Host type.
     */
    hostType?: pulumi.Input<string>;
    /**
     * Hypervisor IP Address.
     */
    hypervisorIps?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIp>[]>;
    /**
     * Hypervisor type.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * Host version of the node.
     */
    hypervisorVersion?: pulumi.Input<string>;
    /**
     * Interface IPV6 address.
     */
    interfaceIpv6?: pulumi.Input<string>;
    /**
     * IPMI IP Address.
     */
    ipmiIps?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIp>[]>;
    /**
     * Secure boot status.
     */
    isSecureBooted?: pulumi.Input<boolean>;
    /**
     * Position of a node in a rackable unit.
     */
    nodePosition?: pulumi.Input<string>;
    /**
     * UUID of the host.
     */
    nodeUuid?: pulumi.Input<string>;
    /**
     * NOS software version of a node.
     */
    nosVersion?: pulumi.Input<string>;
    /**
     * Maximum number of nodes in rackable-unit.
     */
    rackableUnitMaxNodes?: pulumi.Input<number>;
    /**
     * Rackable unit model type.
     */
    rackableUnitModel?: pulumi.Input<string>;
    /**
     * Rackable unit serial name.
     */
    rackableUnitSerial?: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeAttribute {
    /**
     * Default workload.
     */
    defaultWorkload?: pulumi.Input<string>;
    /**
     * Indicates whether the model is supported or not.
     */
    isModelSupported?: pulumi.Input<boolean>;
    /**
     * Indicates whether the hypervisor is robo mixed or not.
     */
    isRoboMixedHypervisor?: pulumi.Input<boolean>;
    /**
     * LCM family name.
     */
    lcmFamily?: pulumi.Input<string>;
    /**
     * Indicates if cvm interface can work with 1 GIG NIC or not.
     */
    shouldWorkWith1gNic?: pulumi.Input<boolean>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIp {
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIpIpv4>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIpIpv6>[]>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value?: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value?: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIp {
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIpIpv4>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIpIpv6>[]>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIp {
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIpIpv4>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIpIpv6>[]>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeList {
    /**
     * -(Optional) Block ID.
     */
    blockId?: pulumi.Input<string>;
    /**
     * -(Optional) Current network interface.
     */
    currentNetworkInterface?: pulumi.Input<string>;
    /**
     * -(Optional) CVM IP.
     */
    cvmIps?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIp>[]>;
    /**
     * -(Optional) Digital certificate map list.
     */
    digitalCertificateMapLists?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListDigitalCertificateMapList>[]>;
    /**
     * -(Optional) Hypervisor IP.
     */
    hypervisorIps?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIp>[]>;
    /**
     * -(Optional) Hypervisor type.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * -(Optional) Hypervisor version.
     */
    hypervisorVersion?: pulumi.Input<string>;
    /**
     * -(Optional) IPMI IP.
     */
    ipmiIps?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIp>[]>;
    /**
     * -(Optional) Is compute only.
     */
    isComputeOnly?: pulumi.Input<boolean>;
    isLightCompute?: pulumi.Input<boolean>;
    /**
     * -(Optional) Is ROBO mixed hypervisor.
     */
    isRoboMixedHypervisor?: pulumi.Input<boolean>;
    /**
     * -(Optional) Model name.
     */
    model?: pulumi.Input<string>;
    /**
     * -(Optional) Node position.
     */
    nodePosition?: pulumi.Input<string>;
    /**
     * -(Optional) Node UUID.
     */
    nodeUuid?: pulumi.Input<string>;
    /**
     * -(Optional) NOS version.
     */
    nosVersion?: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListCvmIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIpIpv6>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListCvmIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListCvmIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListDigitalCertificateMapList {
    /**
     * -(Optional) Field containing digitalCertificateBase64 and keyManagementServerUuid for key management server.
     */
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpIpv6>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListIpmiIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpIpv6>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetail {
    /**
     * - Network information for the given nodes.
     */
    networkInfos?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfo>[]>;
    /**
     * - List of uplinks information for each CVM IP.
     */
    uplinks?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplink>[]>;
    /**
     * - List of warning messages.
     */
    warnings?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfo {
    /**
     * - Network information of HCI nodes.
     */
    hcis?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfoHci>[]>;
    /**
     * - Network information of SO nodes.
     */
    sos?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfoSo>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfoHci {
    /**
     * - Hypervisor type.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * - Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * - List of networks for interface.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailNetworkInfoSo {
    /**
     * - Hypervisor type.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * - Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * - List of networks for interface.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplink {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    cvmIps?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIp>[]>;
    /**
     * - Uplink details for a controller VM.
     */
    uplinkLists?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkUplinkList>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIp {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIpIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIpIpv6>[]>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIpIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkCvmIpIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailUplinkUplinkList {
    /**
     * - MAC address.
     */
    mac?: pulumi.Input<string>;
    /**
     * - Interface name.
     */
    name?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMap {
    guestCustomizations?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomization>[]>;
    memorySizeBytes?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNic>[]>;
    numCoresPerSocket?: pulumi.Input<number>;
    numSockets?: pulumi.Input<number>;
    numThreadsPerCore?: pulumi.Input<number>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomization {
    configs?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfig>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprep>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DeployTemplatesV2OverrideVmConfigMapGuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNic {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicBackingInfo>[]>;
    extId?: pulumi.Input<string>;
    networkInfos?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfo>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicBackingInfo {
    isConnected?: pulumi.Input<boolean>;
    macAddress?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    numQueues?: pulumi.Input<number>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfo {
    ipv4Configs?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4Config>[]>;
    ipv4Infos?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4Info>[]>;
    networkFunctionChains?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoNetworkFunctionChain>[]>;
    networkFunctionNicType?: pulumi.Input<string>;
    nicType?: pulumi.Input<string>;
    shouldAllowUnknownMacs?: pulumi.Input<boolean>;
    subnets?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoSubnet>[]>;
    trunkedVlans?: pulumi.Input<pulumi.Input<number>[]>;
    vlanMode?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4Config {
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4ConfigIpAddress>[]>;
    secondaryIpAddressLists?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4ConfigSecondaryIpAddressList>[]>;
    shouldAssignIp?: pulumi.Input<boolean>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4ConfigIpAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4ConfigSecondaryIpAddressList {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4Info {
    learnedIpAddresses?: pulumi.Input<pulumi.Input<inputs.DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4InfoLearnedIpAddress>[]>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoIpv4InfoLearnedIpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoNetworkFunctionChain {
    extId?: pulumi.Input<string>;
}

export interface DeployTemplatesV2OverrideVmConfigMapNicNetworkInfoSubnet {
    extId?: pulumi.Input<string>;
}

export interface DirectoryServicesV2OpenLdapConfiguration {
    /**
     * -(Required) this field will avoid down migration of data from the hot tier unless the overrides field is specified for the virtual disks.
     */
    userConfigurations: pulumi.Input<pulumi.Input<inputs.DirectoryServicesV2OpenLdapConfigurationUserConfiguration>[]>;
    /**
     * -(Required) this field will avoid down migration of data from the hot tier unless the overrides field is specified for the virtual disks.
     */
    userGroupConfigurations: pulumi.Input<pulumi.Input<inputs.DirectoryServicesV2OpenLdapConfigurationUserGroupConfiguration>[]>;
}

export interface DirectoryServicesV2OpenLdapConfigurationUserConfiguration {
    /**
     * -(Required) Object class in the OpenLDAP system that corresponds to Users.
     */
    userObjectClass: pulumi.Input<string>;
    /**
     * -(Required) Base DN for User search.
     */
    userSearchBase: pulumi.Input<string>;
    /**
     * -(Required) Unique Identifier for each User which can be used in Authentication.
     */
    usernameAttribute: pulumi.Input<string>;
}

export interface DirectoryServicesV2OpenLdapConfigurationUserGroupConfiguration {
    /**
     * -(Required) Attribute in a group that associates Users to the group.
     */
    groupMemberAttribute: pulumi.Input<string>;
    /**
     * -(Required) User attribute value that will be used in group entity to associate User to the group.
     */
    groupMemberAttributeValue: pulumi.Input<string>;
    /**
     * -(Required) Object class in the OpenLDAP system that corresponds to groups.
     */
    groupObjectClass: pulumi.Input<string>;
    /**
     * -(Required) Base DN for group search.
     */
    groupSearchBase: pulumi.Input<string>;
}

export interface DirectoryServicesV2ServiceAccount {
    /**
     * -(Required) Password to connect to the Directory Service.
     */
    password: pulumi.Input<string>;
    /**
     * -(Required) Username to connect to the Directory Service.
     */
    username: pulumi.Input<string>;
}

export interface FloatingIpV2Association {
    /**
     * Association of Floating IP with private IP
     * - `private_ip_association.vpc_reference`: (Required) VPC in which the private IP exists.
     * - `private_ip_association.private_ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    privateIpAssociations?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2AssociationPrivateIpAssociation>[]>;
    /**
     * Association of Floating IP with nic
     * - `vm_nic_association.vm_nic_reference`: (Required) VM NIC reference.
     * - `vm_nic_association.vpc_reference`: (Optional) VPC reference to which the VM NIC subnet belongs.
     */
    vmNicAssociations?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2AssociationVmNicAssociation>[]>;
}

export interface FloatingIpV2AssociationPrivateIpAssociation {
    privateIps: pulumi.Input<pulumi.Input<inputs.FloatingIpV2AssociationPrivateIpAssociationPrivateIp>[]>;
    /**
     * VPC reference UUID
     */
    vpcReference: pulumi.Input<string>;
}

export interface FloatingIpV2AssociationPrivateIpAssociationPrivateIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2AssociationPrivateIpAssociationPrivateIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2AssociationPrivateIpAssociationPrivateIpIpv6>[]>;
}

export interface FloatingIpV2AssociationPrivateIpAssociationPrivateIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2AssociationPrivateIpAssociationPrivateIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2AssociationVmNicAssociation {
    /**
     * VM NIC reference.
     */
    vmNicReference: pulumi.Input<string>;
    /**
     * VPC reference UUID
     */
    vpcReference?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnet {
    bridgeName?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    clusterReference?: pulumi.Input<string>;
    /**
     * Description for the Floating IP.
     */
    description?: pulumi.Input<string>;
    dhcpOptions?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOption>[]>;
    dynamicIpAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDynamicIpAddress>[]>;
    extId: pulumi.Input<string>;
    hypervisorType?: pulumi.Input<string>;
    ipConfigs?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfig>[]>;
    ipPrefix?: pulumi.Input<string>;
    ipUsages?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpUsage>[]>;
    isAdvancedNetworking?: pulumi.Input<boolean>;
    isExternal?: pulumi.Input<boolean>;
    isNatEnabled?: pulumi.Input<boolean>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetLink>[]>;
    migrationState?: pulumi.Input<string>;
    /**
     * Name of the floating IP.
     */
    name?: pulumi.Input<string>;
    networkFunctionChainReference?: pulumi.Input<string>;
    networkId?: pulumi.Input<number>;
    reservedIpAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetReservedIpAddress>[]>;
    subnetType?: pulumi.Input<string>;
    virtualSwitchReference?: pulumi.Input<string>;
    virtualSwitches?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitch>[]>;
    /**
     * VPC reference UUID
     */
    vpcReference?: pulumi.Input<string>;
    /**
     * Networking common base object
     */
    vpcs?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpc>[]>;
}

export interface FloatingIpV2ExternalSubnetDhcpOption {
    bootFileName?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionDomainNameServer>[]>;
    ntpServers?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionNtpServer>[]>;
    searchDomains?: pulumi.Input<pulumi.Input<string>[]>;
    tftpServerName?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionDomainNameServer {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionDomainNameServerIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionDomainNameServerIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionDomainNameServerIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionDomainNameServerIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionNtpServer {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionNtpServerIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDhcpOptionNtpServerIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionNtpServerIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDhcpOptionNtpServerIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDynamicIpAddress {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDynamicIpAddressIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetDynamicIpAddressIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetDynamicIpAddressIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetDynamicIpAddressIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfig {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4 {
    defaultGatewayIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4DefaultGatewayIp>[]>;
    dhcpServerAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4DhcpServerAddress>[]>;
    ipSubnets?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4IpSubnet>[]>;
    poolLists?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4PoolList>[]>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4DefaultGatewayIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4DhcpServerAddress {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4IpSubnet {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4IpSubnetIp>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4IpSubnetIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4PoolList {
    endIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4PoolListEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv4PoolListStartIp>[]>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4PoolListEndIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv4PoolListStartIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6 {
    defaultGatewayIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6DefaultGatewayIp>[]>;
    dhcpServerAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6DhcpServerAddress>[]>;
    ipSubnets?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6IpSubnet>[]>;
    poolLists?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6PoolList>[]>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6DefaultGatewayIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6DhcpServerAddress {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6IpSubnet {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6IpSubnetIp>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6IpSubnetIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6PoolList {
    endIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6PoolListEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpConfigIpv6PoolListStartIp>[]>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6PoolListEndIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpConfigIpv6PoolListStartIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpUsage {
    ipPoolUsages?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpUsageIpPoolUsage>[]>;
    numAssignedIps?: pulumi.Input<number>;
    numFreeIps?: pulumi.Input<number>;
    numMacs?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetIpUsageIpPoolUsage {
    numFreeIps?: pulumi.Input<number>;
    numTotalIps?: pulumi.Input<number>;
    ranges?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRange>[]>;
}

export interface FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRange {
    endIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRangeEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRangeStartIp>[]>;
}

export interface FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRangeEndIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetIpUsageIpPoolUsageRangeStartIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetReservedIpAddress {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitch {
    bondMode?: pulumi.Input<boolean>;
    clusters?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchCluster>[]>;
    /**
     * Description for the Floating IP.
     */
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    hasDeploymentError?: pulumi.Input<boolean>;
    isDefault?: pulumi.Input<boolean>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchLink>[]>;
    /**
     * Metadata associated with this resource.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchMetadata>[]>;
    mtu?: pulumi.Input<number>;
    /**
     * Name of the floating IP.
     */
    name?: pulumi.Input<string>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchCluster {
    extId?: pulumi.Input<string>;
    gatewayIpAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchClusterGatewayIpAddress>[]>;
    hosts?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchClusterHost>[]>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchClusterGatewayIpAddress {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchClusterHost {
    extId?: pulumi.Input<string>;
    hostNics?: pulumi.Input<pulumi.Input<string>[]>;
    internalBridgeName?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchClusterHostIpAddress>[]>;
    routeTable?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchClusterHostIpAddress {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVirtualSwitchClusterHostIpAddressIp>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchClusterHostIpAddressIp {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVirtualSwitchMetadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpc {
    commonDhcpOptions?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcCommonDhcpOption>[]>;
    /**
     * Description for the Floating IP.
     */
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    externalRoutingDomainReference?: pulumi.Input<string>;
    externalSubnets?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnet>[]>;
    externallyRoutablePrefixes?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefix>[]>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcLink>[]>;
    /**
     * Metadata associated with this resource.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcMetadata>[]>;
    /**
     * Name of the floating IP.
     */
    name?: pulumi.Input<string>;
    snatIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcSnatIp>[]>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity.
     */
    tenantId?: pulumi.Input<string>;
    vpcType?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcCommonDhcpOption {
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServer>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServer {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServerIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServerIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServerIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcCommonDhcpOptionDomainNameServerIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnet {
    activeGatewayCount?: pulumi.Input<number>;
    activeGatewayNodes?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNode>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIp>[]>;
    gatewayNodes?: pulumi.Input<pulumi.Input<string>[]>;
    subnetReference?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNode {
    nodeId?: pulumi.Input<string>;
    nodeIpAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddress>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddress {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIpIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternalSubnetExternalIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefix {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv4Ip>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv4Ip {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv6Ip>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2ExternalSubnetVpcExternallyRoutablePrefixIpv6Ip {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcMetadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcSnatIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcSnatIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2ExternalSubnetVpcSnatIpIpv6>[]>;
}

export interface FloatingIpV2ExternalSubnetVpcSnatIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2ExternalSubnetVpcSnatIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2FloatingIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2FloatingIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2FloatingIpIpv6>[]>;
}

export interface FloatingIpV2FloatingIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2FloatingIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface FloatingIpV2Metadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface FloatingIpV2VmNic {
    privateIp?: pulumi.Input<string>;
}

export interface FloatingIpV2Vpc {
    commonDhcpOptions?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcCommonDhcpOption>[]>;
    /**
     * Description for the Floating IP.
     */
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    externalRoutingDomainReference?: pulumi.Input<string>;
    externalSubnets?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnet>[]>;
    externallyRoutablePrefixes?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternallyRoutablePrefix>[]>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcLink>[]>;
    /**
     * Metadata associated with this resource.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcMetadata>[]>;
    /**
     * Name of the floating IP.
     */
    name?: pulumi.Input<string>;
    snatIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcSnatIp>[]>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity.
     */
    tenantId?: pulumi.Input<string>;
    vpcType?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcCommonDhcpOption {
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcCommonDhcpOptionDomainNameServer>[]>;
}

export interface FloatingIpV2VpcCommonDhcpOptionDomainNameServer {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcCommonDhcpOptionDomainNameServerIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcCommonDhcpOptionDomainNameServerIpv6>[]>;
}

export interface FloatingIpV2VpcCommonDhcpOptionDomainNameServerIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcCommonDhcpOptionDomainNameServerIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternalSubnet {
    activeGatewayCount?: pulumi.Input<number>;
    activeGatewayNodes?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetActiveGatewayNode>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetExternalIp>[]>;
    gatewayNodes?: pulumi.Input<pulumi.Input<string>[]>;
    subnetReference?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternalSubnetActiveGatewayNode {
    nodeId?: pulumi.Input<string>;
    nodeIpAddresses?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress>[]>;
}

export interface FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6>[]>;
}

export interface FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternalSubnetExternalIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetExternalIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternalSubnetExternalIpIpv6>[]>;
}

export interface FloatingIpV2VpcExternalSubnetExternalIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternalSubnetExternalIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternallyRoutablePrefix {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternallyRoutablePrefixIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternallyRoutablePrefixIpv6>[]>;
}

export interface FloatingIpV2VpcExternallyRoutablePrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternallyRoutablePrefixIpv4Ip>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2VpcExternallyRoutablePrefixIpv4Ip {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcExternallyRoutablePrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcExternallyRoutablePrefixIpv6Ip>[]>;
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface FloatingIpV2VpcExternallyRoutablePrefixIpv6Ip {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcMetadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcSnatIp {
    /**
     * Reference to IP Configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcSnatIpIpv4>[]>;
    /**
     * Reference to IP Configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.FloatingIpV2VpcSnatIpIpv6>[]>;
}

export interface FloatingIpV2VpcSnatIpIpv4 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FloatingIpV2VpcSnatIpIpv6 {
    /**
     * Prefix length of the network to which this host IPv4 address belongs. Default value is 32.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterClusterStatus {
    aggregatePercentComplete?: pulumi.Input<number>;
    clusterCreationStarted?: pulumi.Input<boolean>;
    clusterProgressDetails?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterClusterStatusClusterProgressDetail>[]>;
    currentFoundationIp?: pulumi.Input<string>;
    foundationSessionId?: pulumi.Input<string>;
    imagingStopped?: pulumi.Input<boolean>;
    intentPickedUp?: pulumi.Input<boolean>;
    nodeProgressDetails?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterClusterStatusNodeProgressDetail>[]>;
}

export interface FoundationCentralImageClusterClusterStatusClusterProgressDetail {
    /**
     * Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    messageLists?: pulumi.Input<pulumi.Input<string>[]>;
    percentComplete?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterClusterStatusNodeProgressDetail {
    /**
     * UUID of the node.
     */
    imagedNodeUuid?: pulumi.Input<string>;
    imagingStopped?: pulumi.Input<boolean>;
    intentPickedUp?: pulumi.Input<boolean>;
    messageLists?: pulumi.Input<pulumi.Input<string>[]>;
    percentComplete?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterCommonNetworkSettings {
    /**
     * List of dns servers for the cvms in the cluster.
     */
    cvmDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ntp servers for the cvms in the cluster.
     */
    cvmNtpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of dns servers for the hypervisors in the cluster.
     */
    hypervisorDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ntp servers for the hypervisors in the cluster.
     */
    hypervisorNtpServers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FoundationCentralImageClusterFoundationInitConfig {
    blocks?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterFoundationInitConfigBlock>[]>;
    clusters?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterFoundationInitConfigCluster>[]>;
    /**
     * Gateway of the cvm.
     */
    cvmGateway?: pulumi.Input<string>;
    /**
     * Netmask of the cvm.
     */
    cvmNetmask?: pulumi.Input<string>;
    dnsServers?: pulumi.Input<string>;
    /**
     * Product key for hyperv isos. Required only if the hypervisor type is hyperv and product key is mandatory (ex: for volume license).
     */
    hypervProductKey?: pulumi.Input<string>;
    /**
     * SKU of hyperv to be installed if hypervisorType is hyperv.
     */
    hypervSku?: pulumi.Input<string>;
    /**
     * Gateway of the hypervisor.
     */
    hypervisorGateway?: pulumi.Input<string>;
    hypervisorIsoUrl?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Details of the hypervisor iso. Required for deploying node with AOS >= 6.8
     */
    hypervisorIsos?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterFoundationInitConfigHypervisorIso>[]>;
    /**
     * Netmask of the hypervisor.
     */
    hypervisorNetmask?: pulumi.Input<string>;
    /**
     * Gateway of the ipmi.
     */
    ipmiGateway?: pulumi.Input<string>;
    /**
     * Netmask of the ipmi.
     */
    ipmiNetmask?: pulumi.Input<string>;
    nosPackageUrls?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterFoundationInitConfigNosPackageUrl>[]>;
}

export interface FoundationCentralImageClusterFoundationInitConfigBlock {
    blockId?: pulumi.Input<string>;
    nodes?: pulumi.Input<pulumi.Input<inputs.FoundationCentralImageClusterFoundationInitConfigBlockNode>[]>;
}

export interface FoundationCentralImageClusterFoundationInitConfigBlockNode {
    /**
     * IP address to be set for the cvm on the node.
     */
    cvmIp?: pulumi.Input<string>;
    /**
     * Vlan tag of the cvm, if the cvm is on a vlan.
     */
    cvmVlanId?: pulumi.Input<number>;
    fcImagedNodeUuid?: pulumi.Input<string>;
    /**
     * Hardware attributes override json for the node.
     */
    hardwareAttributesOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hypervisor?: pulumi.Input<string>;
    /**
     * Name to be set for the hypervisor host.
     */
    hypervisorHostname?: pulumi.Input<string>;
    /**
     * IP address to be set for the hypervisor on the node.
     */
    hypervisorIp?: pulumi.Input<string>;
    /**
     * True, if the node should be imaged, False, otherwise.
     */
    imageNow?: pulumi.Input<boolean>;
    /**
     * IP address to be set for the ipmi of the node.
     */
    ipmiIp?: pulumi.Input<string>;
    ipv6Address?: pulumi.Input<string>;
    nodePosition?: pulumi.Input<string>;
    nodeSerial?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterFoundationInitConfigCluster {
    /**
     * External management ip of the cluster.
     */
    clusterExternalIp?: pulumi.Input<string>;
    clusterInitNow?: pulumi.Input<boolean>;
    clusterInitSuccessful?: pulumi.Input<boolean>;
    clusterMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * List of dns servers for the cvms in the cluster.
     */
    cvmDnsServers?: pulumi.Input<string>;
    /**
     * List of ntp servers for the cvms in the cluster.
     */
    cvmNtpServers?: pulumi.Input<string>;
    /**
     * Redundancy factor of the cluster.
     */
    redundancyFactor?: pulumi.Input<number>;
    /**
     * Timezone to be set on the cluster.
     */
    timezone?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterFoundationInitConfigHypervisorIso {
    hypervisorType?: pulumi.Input<string>;
    /**
     * sha256sum of the hypervisor iso.
     */
    sha256sum?: pulumi.Input<string>;
    /**
     * URL to download hypervisor iso. Required only if imaging is needed.
     */
    url?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterFoundationInitConfigNosPackageUrl {
    /**
     * sha256sum of the hypervisor iso.
     */
    sha256sum?: pulumi.Input<string>;
    /**
     * URL to download hypervisor iso. Required only if imaging is needed.
     */
    url?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterHypervisorIsoDetails {
    /**
     * Product key for hyperv isos. Required only if the hypervisor type is hyperv and product key is mandatory (ex: for volume license).
     */
    hypervProductKey?: pulumi.Input<string>;
    /**
     * SKU of hyperv to be installed if hypervisorType is hyperv.
     */
    hypervSku?: pulumi.Input<string>;
    /**
     * sha256sum of the hypervisor iso.
     */
    sha256sum?: pulumi.Input<string>;
    /**
     * URL to download hypervisor iso. Required only if imaging is needed.
     */
    url?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterHypervisorIsos {
    /**
     * Product key for hyperv isos. Required only if the hypervisor type is hyperv and product key is mandatory (ex: for volume license).
     */
    hypervProductKey?: pulumi.Input<string>;
    /**
     * SKU of hyperv to be installed if hypervisorType is hyperv.
     */
    hypervSku?: pulumi.Input<string>;
    hypervisorType?: pulumi.Input<string>;
    /**
     * sha256sum of the hypervisor iso.
     */
    sha256sum?: pulumi.Input<string>;
    /**
     * URL to download hypervisor iso. Required only if imaging is needed.
     */
    url?: pulumi.Input<string>;
}

export interface FoundationCentralImageClusterNodeList {
    /**
     * Gateway of the cvm.
     */
    cvmGateway?: pulumi.Input<string>;
    /**
     * IP address to be set for the cvm on the node.
     */
    cvmIp?: pulumi.Input<string>;
    /**
     * Netmask of the cvm.
     */
    cvmNetmask?: pulumi.Input<string>;
    /**
     * Amount of memory to be assigned for the cvm.
     */
    cvmRamGb?: pulumi.Input<number>;
    /**
     * Vlan tag of the cvm, if the cvm is on a vlan.
     */
    cvmVlanId?: pulumi.Input<number>;
    /**
     * Hardware attributes override json for the node.
     */
    hardwareAttributesOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Gateway of the hypervisor.
     */
    hypervisorGateway?: pulumi.Input<string>;
    /**
     * Name to be set for the hypervisor host.
     */
    hypervisorHostname?: pulumi.Input<string>;
    /**
     * IP address to be set for the hypervisor on the node.
     */
    hypervisorIp?: pulumi.Input<string>;
    /**
     * Netmask of the hypervisor.
     */
    hypervisorNetmask?: pulumi.Input<string>;
    hypervisorType?: pulumi.Input<string>;
    /**
     * True, if the node should be imaged, False, otherwise.
     */
    imageNow?: pulumi.Input<boolean>;
    /**
     * UUID of the node.
     */
    imagedNodeUuid?: pulumi.Input<string>;
    /**
     * Gateway of the ipmi.
     */
    ipmiGateway?: pulumi.Input<string>;
    /**
     * IP address to be set for the ipmi of the node.
     */
    ipmiIp?: pulumi.Input<string>;
    /**
     * Netmask of the ipmi.
     */
    ipmiNetmask?: pulumi.Input<string>;
    /**
     * Passthrough RDMA nic to CVM if possible, default to false.
     */
    rdmaPassthrough?: pulumi.Input<boolean>;
    /**
     * Decides whether to use the existing network settings for the node. If True, the existing network settings of the node will be used during cluster creation. If False, then client must provide new network settings. If all nodes are booted in phoenix, this field is, by default, considered to be False.
     */
    useExistingNetworkSettings?: pulumi.Input<boolean>;
}

export interface FoundationImageNodesBlock {
    /**
     * - Block ID.
     */
    blockId?: pulumi.Input<string>;
    nodes: pulumi.Input<pulumi.Input<inputs.FoundationImageNodesBlockNode>[]>;
}

export interface FoundationImageNodesBlockNode {
    /**
     * - (Required if node is lacp configured) slow or fast if lacp if being used at the switch
     */
    bondLacpRate?: pulumi.Input<string>;
    /**
     * - (Required if node is capable) dynamic if using LACP, static for LAG
     */
    bondMode?: pulumi.Input<string>;
    /**
     * - MAC Addresses of NICs in a team/bond
     */
    bondUplinks?: pulumi.Input<string>;
    /**
     * - ID of cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * - Current CVM vlan tag. 0 Value with remove vlan tag.
     */
    currentCvmVlanTag?: pulumi.Input<number>;
    /**
     * - CVM current network interface.
     */
    currentNetworkInterface?: pulumi.Input<string>;
    /**
     * - RAM capacity of CVM in GB.
     */
    cvmGbRam?: pulumi.Input<number>;
    cvmIp?: pulumi.Input<string>;
    /**
     * - Number of CVM vcpus.
     */
    cvmNumVcpus?: pulumi.Input<number>;
    /**
     * - use "vmInstaller" to enable CVM imaging from standalone.
     */
    deviceHint?: pulumi.Input<string>;
    /**
     * - serial of boot device to be excluded (used by NX G6 platforms)
     */
    exludeBootSerial?: pulumi.Input<string>;
    hypervisor?: pulumi.Input<string>;
    /**
     * - (Required) Hypervisor Hostname.
     */
    hypervisorHostname: pulumi.Input<string>;
    /**
     * - (Required) Hypervisor IP address.
     */
    hypervisorIp: pulumi.Input<string>;
    /**
     * - Imaging delay.
     */
    imageDelay?: pulumi.Input<number>;
    /**
     * - (Optional, Default = true) If the node should be imaged now.
     */
    imageNow?: pulumi.Input<boolean>;
    imageSuccessful?: pulumi.Input<boolean>;
    /**
     * - Whether IPMI should be configured.
     */
    ipmiConfigureNow?: pulumi.Input<boolean>;
    /**
     * - (Required incase using IPMI based imaging either here or outside blocks) IPMI gateway for this node
     */
    ipmiGateway?: pulumi.Input<string>;
    /**
     * - (Required) IPMI IP address.
     */
    ipmiIp?: pulumi.Input<string>;
    /**
     * - IPMI MAC address.
     */
    ipmiMac?: pulumi.Input<string>;
    /**
     * - (Required incase using IPMI based imaging either here or outside blocks) IPMI netmask for this node
     */
    ipmiNetmask?: pulumi.Input<string>;
    /**
     * - (Required incase using IPMI based imaging either here or outside blocks) IPMI username
     */
    ipmiPassword?: pulumi.Input<string>;
    /**
     * - (Required incase using IPMI based imaging either here or outside blocks) IPMI password
     */
    ipmiUser?: pulumi.Input<string>;
    /**
     * - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) IPV6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) ipv6 interface.
     */
    ipv6Interface?: pulumi.Input<string>;
    /**
     * - relocate bootbank files to make space for phoenix files.
     */
    mitigateLowBootSpace?: pulumi.Input<boolean>;
    /**
     * - (Required) Position of the node in the block.
     */
    nodePosition: pulumi.Input<string>;
    /**
     * - serial number of the node.
     */
    nodeSerial?: pulumi.Input<string>;
    /**
     * - mac address of nic to be used for rdma
     */
    rdmaMacAddr?: pulumi.Input<string>;
    /**
     * - (Required if node is capable) passthru RDMA nic to CVM if possible, default to false
     */
    rdmaPassthrough?: pulumi.Input<boolean>;
    /**
     * - UCSM Managed mode.
     */
    ucsmManagedMode?: pulumi.Input<string>;
    /**
     * - UCSM node serial.
     */
    ucsmNodeSerial?: pulumi.Input<string>;
    /**
     * - Object of UCSM parameters.
     * * `ucsm_params.native_vlan` :- If the vlan is native.
     * * `ucsm_params.keep_ucsm_settings` :- Whether UCSM settings should be kept.
     * * `ucsm_params.mac_pool` :- Mac address pool.
     * * `ucsm_params.vlan_name` :- Name of vlan.
     */
    ucsmParams?: pulumi.Input<inputs.FoundationImageNodesBlockNodeUcsmParams>;
    vswitches?: pulumi.Input<pulumi.Input<inputs.FoundationImageNodesBlockNodeVswitch>[]>;
}

export interface FoundationImageNodesBlockNodeUcsmParams {
    keepUcsmSettings?: pulumi.Input<boolean>;
    macPool?: pulumi.Input<string>;
    nativeVlan?: pulumi.Input<boolean>;
    vlanName?: pulumi.Input<string>;
}

export interface FoundationImageNodesBlockNodeVswitch {
    /**
     * - (Required if node is capable) dynamic if using LACP, static for LAG
     */
    bondMode?: pulumi.Input<string>;
    lacp?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    otherConfigs?: pulumi.Input<pulumi.Input<string>[]>;
    uplinks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FoundationImageNodesCluster {
    /**
     * - Backplane netmask.
     */
    backplaneNetmask?: pulumi.Input<string>;
    /**
     * - Backplane subnet address.
     */
    backplaneSubnet?: pulumi.Input<string>;
    /**
     * - Backplane vlan.
     */
    backplaneVlan?: pulumi.Input<string>;
    /**
     * - External IP of the cluster.
     */
    clusterExternalIp?: pulumi.Input<string>;
    /**
     * - (Optional, Default = true) If cluster should be created.
     */
    clusterInitNow?: pulumi.Input<boolean>;
    /**
     * - If cluster initialization was successful.
     */
    clusterInitSuccessful?: pulumi.Input<boolean>;
    /**
     * - (Required) Members in the cluster.
     */
    clusterMembers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Required) Name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * - DNS servers of CVM.
     */
    cvmDnsServers?: pulumi.Input<string>;
    /**
     * - NTP servers of CVM.
     */
    cvmNtpServers?: pulumi.Input<string>;
    /**
     * - If network segmentation should be enabled.
     */
    enableNs?: pulumi.Input<boolean>;
    /**
     * - NTP servers of hypervisor.
     */
    hypervisorNtpServers?: pulumi.Input<string>;
    /**
     * - (Required) Cluster Redundancy Factor.
     */
    redundancyFactor: pulumi.Input<number>;
    /**
     * - If it is a single node cluster.
     */
    singleNodeCluster?: pulumi.Input<boolean>;
    /**
     * - Set timezone for every CVM
     */
    timezone?: pulumi.Input<string>;
}

export interface FoundationImageNodesClusterUrl {
    /**
     * - (Required) Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    clusterUrl?: pulumi.Input<string>;
}

export interface FoundationImageNodesEosMetadata {
    /**
     * - arrya of account names
     */
    accountNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - Id of the Eos config uploaded in foundation GUI.
     */
    configId?: pulumi.Input<string>;
    /**
     * - Email address of the user who downloaded Eos config.
     */
    email?: pulumi.Input<string>;
}

export interface FoundationImageNodesFcSettings {
    /**
     * - Foundation Central metadata which will be transferred to the newly imaged node.
     * * `fc_metadata.fc_ip` :- IP address of foundation central.
     * * `fc_metadata.api_key` :- apiKey which the node uses to register itself with foundation central.
     */
    fcMetadata: pulumi.Input<inputs.FoundationImageNodesFcSettingsFcMetadata>;
    /**
     * - If this attribute is set to True, FC workflow will be invoked.
     */
    foundationCentral: pulumi.Input<boolean>;
}

export interface FoundationImageNodesFcSettingsFcMetadata {
    apiKey: pulumi.Input<string>;
    fcIp: pulumi.Input<string>;
}

export interface FoundationImageNodesHypervisorIso {
    /**
     * - Details of hypervisor ISO of type esx.
     */
    esx?: pulumi.Input<inputs.FoundationImageNodesHypervisorIsoEsx>;
    /**
     * - Details of hypervisor ISO of type hyperv.
     */
    hyperv?: pulumi.Input<inputs.FoundationImageNodesHypervisorIsoHyperv>;
    /**
     * - Details of hypervisor ISO of type kvm.
     */
    kvm?: pulumi.Input<inputs.FoundationImageNodesHypervisorIsoKvm>;
    /**
     * - Details of hypervisor ISO of type xen.
     */
    xen?: pulumi.Input<inputs.FoundationImageNodesHypervisorIsoXen>;
}

export interface FoundationImageNodesHypervisorIsoEsx {
    /**
     * - (Required) Filename of hypervisor ISO.
     */
    checksum: pulumi.Input<string>;
    /**
     * - (Required) Checksum for ISO file.
     */
    filename: pulumi.Input<string>;
}

export interface FoundationImageNodesHypervisorIsoHyperv {
    /**
     * - (Required) Filename of hypervisor ISO.
     */
    checksum: pulumi.Input<string>;
    /**
     * - (Required) Checksum for ISO file.
     */
    filename: pulumi.Input<string>;
}

export interface FoundationImageNodesHypervisorIsoKvm {
    /**
     * - (Required) Filename of hypervisor ISO.
     */
    checksum: pulumi.Input<string>;
    /**
     * - (Required) Checksum for ISO file.
     */
    filename: pulumi.Input<string>;
}

export interface FoundationImageNodesHypervisorIsoXen {
    /**
     * - (Required) Filename of hypervisor ISO.
     */
    checksum: pulumi.Input<string>;
    /**
     * - (Required) Checksum for ISO file.
     */
    filename: pulumi.Input<string>;
}

export interface FoundationImageNodesTests {
    /**
     * - Whether NCC checks should run.
     */
    runNcc?: pulumi.Input<boolean>;
    /**
     * - Whether system checks should run.
     */
    runSyscheck?: pulumi.Input<boolean>;
}

export interface FoundationIpmiConfigBlock {
    /**
     * - (Optional) Block Id
     */
    blockId?: pulumi.Input<string>;
    /**
     * - (Required) array of nodes for ipmi config.
     */
    nodes: pulumi.Input<pulumi.Input<inputs.FoundationIpmiConfigBlockNode>[]>;
}

export interface FoundationIpmiConfigBlockNode {
    /**
     * - (Required) Whether IPMI should be configured. Should be kept true to configure
     */
    ipmiConfigureNow: pulumi.Input<boolean>;
    /**
     * - Whether IPMI was successfully configured.
     */
    ipmiConfigureSuccessful?: pulumi.Input<boolean>;
    /**
     * - IPMI IP address.
     */
    ipmiIp: pulumi.Input<string>;
    /**
     * - (Required) IPMI mac address.
     */
    ipmiMac: pulumi.Input<string>;
    /**
     * - IPMI configuration status message if any.
     */
    ipmiMessage?: pulumi.Input<string>;
}

export interface GetAccessControlPoliciesMetadata {
    filter?: string;
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetAccessControlPoliciesMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetAccessControlPolicyCategory {
    /**
     * - the name(Optional).
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetAccessControlPolicyCategoryArgs {
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetAddressGroupV2Ipv4Address {
    /**
     * The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: number;
    /**
     * ip of address
     */
    value?: string;
}

export interface GetAddressGroupV2Ipv4AddressArgs {
    /**
     * The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * ip of address
     */
    value?: pulumi.Input<string>;
}

export interface GetAddressGroupsMetadata {
    /**
     * (Optional) Filter in FIQL Syntax
     */
    filter?: string;
    kind?: string;
    /**
     * (Optional) Integer
     */
    length?: number;
    /**
     * (Optional) Integer
     */
    offset?: number;
    /**
     * (Optional) attribute to sort
     */
    sortAttribute?: string;
    /**
     * (Optional) order of sorting
     */
    sortOrder?: string;
}

export interface GetAddressGroupsMetadataArgs {
    /**
     * (Optional) Filter in FIQL Syntax
     */
    filter?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    /**
     * (Optional) Integer
     */
    length?: pulumi.Input<number>;
    /**
     * (Optional) Integer
     */
    offset?: pulumi.Input<number>;
    /**
     * (Optional) attribute to sort
     */
    sortAttribute?: pulumi.Input<string>;
    /**
     * (Optional) order of sorting
     */
    sortOrder?: pulumi.Input<string>;
}

export interface GetAssertHelperCheck {
    condition: boolean;
    errorMessage: string;
}

export interface GetAssertHelperCheckArgs {
    condition: pulumi.Input<boolean>;
    errorMessage: pulumi.Input<string>;
}

export interface GetClusterCategory {
    /**
     * - the key name.
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetClusterCategoryArgs {
    /**
     * - the key name.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetFloatingIpsMetadata {
    filter?: string;
    /**
     * - The kind name (Default value: project).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
    totalMatches?: number;
}

export interface GetFloatingIpsMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name (Default value: project).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    totalMatches?: pulumi.Input<number>;
}

export interface GetFoundationCentralClusterDetailsClusterStatus {
    /**
     * Overall progress percentage including imaging and cluster creation.
     */
    aggregatePercentComplete?: number;
    /**
     * Denotes whether cluster creation has started in a phoenix workflow. For foundation workflows, this field will be same as intent_picked_up.
     */
    clusterCreationStarted?: boolean;
    /**
     * Denotes the progress status of cluster creation.
     */
    clusterProgressDetails?: inputs.GetFoundationCentralClusterDetailsClusterStatusClusterProgressDetail[];
    /**
     * Current IP address of the coordinating foundation node.
     */
    currentFoundationIp?: string;
    /**
     * Foundation session id for cluster creation.
     */
    foundationSessionId?: string;
    /**
     * Describes whether imaging has stopped. True indicates that process has stopped. False indicates that process is still going on. This field will only be used by phoenix nodes to update FC.
     */
    imagingStopped?: boolean;
    /**
     * Denotes whether the remote nodes has picked up the cluster creation intent.
     */
    intentPickedUp?: boolean;
    /**
     * List of progress details of each node.
     */
    nodeProgressDetails?: inputs.GetFoundationCentralClusterDetailsClusterStatusNodeProgressDetail[];
}

export interface GetFoundationCentralClusterDetailsClusterStatusArgs {
    /**
     * Overall progress percentage including imaging and cluster creation.
     */
    aggregatePercentComplete?: pulumi.Input<number>;
    /**
     * Denotes whether cluster creation has started in a phoenix workflow. For foundation workflows, this field will be same as intent_picked_up.
     */
    clusterCreationStarted?: pulumi.Input<boolean>;
    /**
     * Denotes the progress status of cluster creation.
     */
    clusterProgressDetails?: pulumi.Input<pulumi.Input<inputs.GetFoundationCentralClusterDetailsClusterStatusClusterProgressDetailArgs>[]>;
    /**
     * Current IP address of the coordinating foundation node.
     */
    currentFoundationIp?: pulumi.Input<string>;
    /**
     * Foundation session id for cluster creation.
     */
    foundationSessionId?: pulumi.Input<string>;
    /**
     * Describes whether imaging has stopped. True indicates that process has stopped. False indicates that process is still going on. This field will only be used by phoenix nodes to update FC.
     */
    imagingStopped?: pulumi.Input<boolean>;
    /**
     * Denotes whether the remote nodes has picked up the cluster creation intent.
     */
    intentPickedUp?: pulumi.Input<boolean>;
    /**
     * List of progress details of each node.
     */
    nodeProgressDetails?: pulumi.Input<pulumi.Input<inputs.GetFoundationCentralClusterDetailsClusterStatusNodeProgressDetailArgs>[]>;
}

export interface GetFoundationCentralClusterDetailsClusterStatusClusterProgressDetail {
    /**
     * Cluster name.
     */
    clusterName?: string;
    /**
     * List of messages for the client based on process state.
     */
    messageLists?: string[];
    /**
     * Percent completion of cluster creation process.
     */
    percentComplete?: number;
    /**
     * Current status of cluster creation process.
     */
    status?: string;
}

export interface GetFoundationCentralClusterDetailsClusterStatusClusterProgressDetailArgs {
    /**
     * Cluster name.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * List of messages for the client based on process state.
     */
    messageLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Percent completion of cluster creation process.
     */
    percentComplete?: pulumi.Input<number>;
    /**
     * Current status of cluster creation process.
     */
    status?: pulumi.Input<string>;
}

export interface GetFoundationCentralClusterDetailsClusterStatusNodeProgressDetail {
    /**
     * UUID of the node.
     */
    imagedNodeUuid?: string;
    /**
     * Describes whether imaging has stopped. True indicates that process has stopped. False indicates that process is still going on. This field will only be used by phoenix nodes to update FC.
     */
    imagingStopped?: boolean;
    /**
     * Denotes whether the remote nodes has picked up the cluster creation intent.
     */
    intentPickedUp?: boolean;
    /**
     * List of messages for the client based on process state.
     */
    messageLists?: string[];
    /**
     * Percent completion of cluster creation process.
     */
    percentComplete?: number;
    /**
     * Current status of cluster creation process.
     */
    status?: string;
}

export interface GetFoundationCentralClusterDetailsClusterStatusNodeProgressDetailArgs {
    /**
     * UUID of the node.
     */
    imagedNodeUuid?: pulumi.Input<string>;
    /**
     * Describes whether imaging has stopped. True indicates that process has stopped. False indicates that process is still going on. This field will only be used by phoenix nodes to update FC.
     */
    imagingStopped?: pulumi.Input<boolean>;
    /**
     * Denotes whether the remote nodes has picked up the cluster creation intent.
     */
    intentPickedUp?: pulumi.Input<boolean>;
    /**
     * List of messages for the client based on process state.
     */
    messageLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Percent completion of cluster creation process.
     */
    percentComplete?: pulumi.Input<number>;
    /**
     * Current status of cluster creation process.
     */
    status?: pulumi.Input<string>;
}

export interface GetFoundationCentralClusterDetailsCommonNetworkSettings {
    /**
     * List of dns servers for the cvms in the cluster.
     */
    cvmDnsServers?: string[];
    /**
     * List of ntp servers for the cvms in the cluster.
     */
    cvmNtpServers?: string[];
    /**
     * List of dns servers for the hypervisors in the cluster.
     */
    hypervisorDnsServers?: string[];
    /**
     * List of ntp servers for the hypervisors in the cluster.
     */
    hypervisorNtpServers?: string[];
}

export interface GetFoundationCentralClusterDetailsCommonNetworkSettingsArgs {
    /**
     * List of dns servers for the cvms in the cluster.
     */
    cvmDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ntp servers for the cvms in the cluster.
     */
    cvmNtpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of dns servers for the hypervisors in the cluster.
     */
    hypervisorDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ntp servers for the hypervisors in the cluster.
     */
    hypervisorNtpServers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFoundationCentralImagedClustersListFilters {
    /**
     * True if the cluster creation request is archived, False otherwise
     */
    archived?: boolean;
}

export interface GetFoundationCentralImagedClustersListFiltersArgs {
    /**
     * True if the cluster creation request is archived, False otherwise
     */
    archived?: pulumi.Input<boolean>;
}

export interface GetFoundationCentralImagedNodesListFilters {
    /**
     * Specifies whether the node is discovering, available or unavailable for cluster creation.
     */
    nodeState?: string;
}

export interface GetFoundationCentralImagedNodesListFiltersArgs {
    /**
     * Specifies whether the node is discovering, available or unavailable for cluster creation.
     */
    nodeState?: pulumi.Input<string>;
}

export interface GetFoundationCentralListApiKeysMetadata {
    /**
     * The number of records retrieved.
     */
    length?: number;
    /**
     * Offset from the start of the object list.
     */
    offset?: number;
    /**
     * Total matches found.
     */
    totalMatches?: number;
}

export interface GetFoundationCentralListApiKeysMetadataArgs {
    /**
     * The number of records retrieved.
     */
    length?: pulumi.Input<number>;
    /**
     * Offset from the start of the object list.
     */
    offset?: pulumi.Input<number>;
    /**
     * Total matches found.
     */
    totalMatches?: pulumi.Input<number>;
}

export interface GetHostCategory {
    /**
     * - the key name.
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetHostCategoryArgs {
    /**
     * - the key name.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetImageCategory {
    /**
     * - the name.
     */
    name?: string;
    value?: string;
}

export interface GetImageCategoryArgs {
    /**
     * - the name.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbCloneFilter {
    /**
     * Get entity(s) if it satisfies query criteria irrespective of status (retrieve even deleted). Default is false
     */
    anyStatus?: string;
    /**
     * Load entities with complete details. Default is false
     */
    detailed?: string;
    /**
     * Load cluster info. Default is false
     */
    loadDbserverCluster?: string;
    /**
     * Default is UTC
     */
    timezone?: string;
}

export interface GetNdbCloneFilterArgs {
    /**
     * Get entity(s) if it satisfies query criteria irrespective of status (retrieve even deleted). Default is false
     */
    anyStatus?: pulumi.Input<string>;
    /**
     * Load entities with complete details. Default is false
     */
    detailed?: pulumi.Input<string>;
    /**
     * Load cluster info. Default is false
     */
    loadDbserverCluster?: pulumi.Input<string>;
    /**
     * Default is UTC
     */
    timezone?: pulumi.Input<string>;
}

export interface GetNdbCloneTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbCloneTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbClonesFilter {
    /**
     * Get entity(s) if it satisfies query criteria irrespective of status (retrieve even deleted). Default is false
     */
    anyStatus?: string;
    /**
     * Load entities with complete details. Default is false
     */
    detailed?: string;
    /**
     * Load cluster info. Default is false
     */
    loadDbserverCluster?: string;
    /**
     * Sorted by dbserver cluster. Default is false
     */
    orderByDbserverCluster?: string;
    /**
     * Sorted by dbserver logical cluster.  Default is false
     */
    orderByDbserverLogicalCluster?: string;
    /**
     * Default is UTC
     */
    timezone?: string;
}

export interface GetNdbClonesFilterArgs {
    /**
     * Get entity(s) if it satisfies query criteria irrespective of status (retrieve even deleted). Default is false
     */
    anyStatus?: pulumi.Input<string>;
    /**
     * Load entities with complete details. Default is false
     */
    detailed?: pulumi.Input<string>;
    /**
     * Load cluster info. Default is false
     */
    loadDbserverCluster?: pulumi.Input<string>;
    /**
     * Sorted by dbserver cluster. Default is false
     */
    orderByDbserverCluster?: pulumi.Input<string>;
    /**
     * Sorted by dbserver logical cluster.  Default is false
     */
    orderByDbserverLogicalCluster?: pulumi.Input<string>;
    /**
     * Default is UTC
     */
    timezone?: pulumi.Input<string>;
}

export interface GetNdbDatabaseTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbDatabaseTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbDbserverTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbDbserverTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbMaintenanceWindowTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbMaintenanceWindowTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbSnapshotFilter {
    /**
     * load child snapshots. Default is false
     */
    loadReplicatedChildSnapshots?: string;
    /**
     * Default is UTC
     */
    timezone?: string;
}

export interface GetNdbSnapshotFilterArgs {
    /**
     * load child snapshots. Default is false
     */
    loadReplicatedChildSnapshots?: pulumi.Input<string>;
    /**
     * Default is UTC
     */
    timezone?: pulumi.Input<string>;
}

export interface GetNdbSnapshotTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbSnapshotTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNdbSnapshotsFilter {
    /**
     * Fetches all the snapshots for a given time machine
     */
    timeMachineId?: string;
}

export interface GetNdbSnapshotsFilterArgs {
    /**
     * Fetches all the snapshots for a given time machine
     */
    timeMachineId?: pulumi.Input<string>;
}

export interface GetNdbTimeMachineTag {
    entityId?: string;
    entityType?: string;
    tagId?: string;
    tagName?: string;
    value?: string;
}

export interface GetNdbTimeMachineTagArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetNetworkSecurityRuleCategory {
    /**
     * - the name.
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetNetworkSecurityRuleCategoryArgs {
    /**
     * - the name.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetPbrsMetadata {
    filter?: string;
    /**
     * - The kind name (Default value: project).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
    totalMatches?: number;
}

export interface GetPbrsMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name (Default value: project).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    totalMatches?: pulumi.Input<number>;
}

export interface GetPermissionCategory {
    /**
     * the name.
     */
    name?: string;
    /**
     * value of the key.
     */
    value?: string;
}

export interface GetPermissionCategoryArgs {
    /**
     * the name.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetPermissionsMetadata {
    filter?: string;
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetPermissionsMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetProjectCategory {
    /**
     * the name.
     */
    name?: string;
    /**
     * value of the key.
     */
    value?: string;
}

export interface GetProjectCategoryArgs {
    /**
     * the name.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectExternalUserGroupReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: string;
    /**
     * the name.
     */
    name?: string;
    /**
     * (Required) the UUID.
     */
    uuid?: string;
}

export interface GetProjectExternalUserGroupReferenceListArgs {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * the name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface GetProjectSubnetReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: string;
    /**
     * the name.
     */
    name?: string;
    /**
     * (Required) the UUID.
     */
    uuid?: string;
}

export interface GetProjectSubnetReferenceListArgs {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * the name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface GetProjectUserReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: string;
    /**
     * the name.
     */
    name?: string;
    /**
     * (Required) the UUID.
     */
    uuid?: string;
}

export interface GetProjectUserReferenceListArgs {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * the name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface GetProtectionRuleCategory {
    /**
     * (Optional) the name.
     */
    name?: string;
    /**
     * value of the key.
     */
    value?: string;
}

export interface GetProtectionRuleCategoryArgs {
    /**
     * (Optional) the name.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetRecoveryPlanCategory {
    /**
     * (Optional) the name.
     */
    name?: string;
    /**
     * value of the key.
     */
    value?: string;
}

export interface GetRecoveryPlanCategoryArgs {
    /**
     * (Optional) the name.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetRoleCategory {
    /**
     * - the name(Optional).
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetRoleCategoryArgs {
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetRolesMetadata {
    filter?: string;
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetRolesMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetServiceGroupsMetadata {
    filter?: string;
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetServiceGroupsMetadataArgs {
    filter?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetSubnetAdditionalFilter {
    /**
     * - the name(Optional).
     */
    name: string;
    values: string[];
}

export interface GetSubnetAdditionalFilterArgs {
    /**
     * - the name(Optional).
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetCategory {
    /**
     * - the name(Optional).
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetSubnetCategoryArgs {
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetSubnetV2ReservedIpAddress {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: number;
    /**
     * value of address
     */
    value?: string;
}

export interface GetSubnetV2ReservedIpAddressArgs {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of address
     */
    value?: pulumi.Input<string>;
}

export interface GetSubnetsMetadata {
    filter?: string;
    /**
     * The kind name (Default value: project.
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetSubnetsMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * The kind name (Default value: project.
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetUserCategory {
    /**
     * - (Optional) The name for the user
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetUserCategoryArgs {
    /**
     * - (Optional) The name for the user
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetUserGroupCategory {
    /**
     * - the name(Optional).
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetUserGroupCategoryArgs {
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetUserGroupsMetadata {
    filter?: string;
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetUserGroupsMetadataArgs {
    filter?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetUsersMetadata {
    filter?: string;
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
}

export interface GetUsersMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}

export interface GetVirtualMachineCategory {
    /**
     * - the name.
     */
    name?: string;
    /**
     * - value of the key.
     */
    value?: string;
}

export interface GetVirtualMachineCategoryArgs {
    /**
     * - the name.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface GetVmRecoveryPointInfoV2DiskRecoveryPoint {
    /**
     * External identifier of the disk.
     */
    diskExtId?: string;
    /**
     * External identifier of the disk recovery point.
     */
    diskRecoveryPointExtId?: string;
}

export interface GetVmRecoveryPointInfoV2DiskRecoveryPointArgs {
    /**
     * External identifier of the disk.
     */
    diskExtId?: pulumi.Input<string>;
    /**
     * External identifier of the disk recovery point.
     */
    diskRecoveryPointExtId?: pulumi.Input<string>;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkId {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdFqdn[];
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv4[];
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv6[];
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdArgs {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdFqdnArgs>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv4Args>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv6Args>[]>;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdFqdn {
    /**
     * - The fully qualified domain name.
     */
    value?: string;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdFqdnArgs {
    /**
     * - The fully qualified domain name.
     */
    value?: pulumi.Input<string>;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv4 {
    /**
     * - The prefix length of the network to which this host IPv6 address belongs.
     */
    prefixLength?: number;
    /**
     * - The fully qualified domain name.
     */
    value?: string;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv4Args {
    /**
     * - The prefix length of the network to which this host IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - The fully qualified domain name.
     */
    value?: pulumi.Input<string>;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv6 {
    /**
     * - The prefix length of the network to which this host IPv6 address belongs.
     */
    prefixLength?: number;
    /**
     * - The fully qualified domain name.
     */
    value?: string;
}

export interface GetVolumeIscsiClientV2IscsiInitiatorNetworkIdIpv6Args {
    /**
     * - The prefix length of the network to which this host IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - The fully qualified domain name.
     */
    value?: pulumi.Input<string>;
}

export interface GetVpcsMetadata {
    filter?: string;
    /**
     * - The kind name (Default value: project).
     */
    kind?: string;
    length?: number;
    offset?: number;
    sortAttribute?: string;
    sortOrder?: string;
    totalMatches?: number;
}

export interface GetVpcsMetadataArgs {
    filter?: pulumi.Input<string>;
    /**
     * - The kind name (Default value: project).
     */
    kind?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    sortAttribute?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    totalMatches?: pulumi.Input<number>;
}

export interface ImageCategory {
    /**
     * - (Required) The name for the image.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ImageClusterReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the image.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface ImageCurrentClusterReferenceList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the image.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface ImagePlacementPolicyV2ClusterEntityFilter {
    /**
     * Array of strings
     *
     *
     * See detailed information in [Nutanix Create Image Placement Policies V4](https://developers.nutanix.com/api-reference?namespace=vmm&version=v4.0#tag/ImagePlacementPolicies/operation/createPlacementPolicy)
     */
    categoryExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter matching type. Valid values "CATEGORIES_MATCH_ALL", "CATEGORIES_MATCH_ANY"
     */
    type: pulumi.Input<string>;
}

export interface ImagePlacementPolicyV2ImageEntityFilter {
    /**
     * Array of strings
     */
    categoryExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter matching type. Valid values "CATEGORIES_MATCH_ALL", "CATEGORIES_MATCH_ANY"
     */
    type: pulumi.Input<string>;
}

export interface ImagesV2Checksum {
    hexDigest: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface ImagesV2PlacementPolicyStatus {
    complianceStatus?: pulumi.Input<string>;
    conflictingPolicyExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    enforcedClusterExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    enforcementMode?: pulumi.Input<string>;
    placementPolicyExtId?: pulumi.Input<string>;
    policyClusterExtIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ImagesV2Source {
    objectLiteSources?: pulumi.Input<pulumi.Input<inputs.ImagesV2SourceObjectLiteSource>[]>;
    urlSources?: pulumi.Input<pulumi.Input<inputs.ImagesV2SourceUrlSource>[]>;
    vmDiskSources?: pulumi.Input<pulumi.Input<inputs.ImagesV2SourceVmDiskSource>[]>;
}

export interface ImagesV2SourceObjectLiteSource {
    key: pulumi.Input<string>;
}

export interface ImagesV2SourceUrlSource {
    basicAuths?: pulumi.Input<pulumi.Input<inputs.ImagesV2SourceUrlSourceBasicAuth>[]>;
    shouldAllowInsecureUrl?: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface ImagesV2SourceUrlSourceBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface ImagesV2SourceVmDiskSource {
    extId: pulumi.Input<string>;
}

export interface KarbonClusterActivePassiveConfig {
    externalIpv4Address: pulumi.Input<string>;
}

export interface KarbonClusterCniConfig {
    /**
     * - (Optional) Configuration of the calico CNI provider.
     * * `calico_config.ip_pool_config`: - (Optional) List of IP pools to be configured/managed by calico.
     * * `calico_config.ip_pool_config.cidr`: - (Optional) IP range to use for this pool, it should fall within pod cidr.
     */
    calicoConfig?: pulumi.Input<inputs.KarbonClusterCniConfigCalicoConfig>;
    /**
     * - (Optional) Configuration of the flannel container network interface (CNI) provider.
     */
    flannelConfigs?: pulumi.Input<pulumi.Input<inputs.KarbonClusterCniConfigFlannelConfig>[]>;
    /**
     * - (Optional) The size of the subnet from the podIpv4Cidr assigned to each host. A value of 24 would allow up to 255 pods per node.
     */
    nodeCidrMaskSize?: pulumi.Input<number>;
    /**
     * - (Optional) CIDR for pods in the cluster.
     */
    podIpv4Cidr?: pulumi.Input<string>;
    /**
     * - (Optional) Classless inter-domain routing (CIDR) for k8s services in the cluster.
     */
    serviceIpv4Cidr?: pulumi.Input<string>;
}

export interface KarbonClusterCniConfigCalicoConfig {
    ipPoolConfigs?: pulumi.Input<pulumi.Input<inputs.KarbonClusterCniConfigCalicoConfigIpPoolConfig>[]>;
}

export interface KarbonClusterCniConfigCalicoConfigIpPoolConfig {
    cidr?: pulumi.Input<string>;
}

export interface KarbonClusterCniConfigFlannelConfig {
}

export interface KarbonClusterEtcdNodePool {
    /**
     * - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
     * * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
     * * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
     * * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
     * * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
     * * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
     */
    ahvConfig?: pulumi.Input<inputs.KarbonClusterEtcdNodePoolAhvConfig>;
    /**
     * - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
     */
    nodeOsVersion: pulumi.Input<string>;
    /**
     * - List of the deployed nodes in the node pool.
     * * `nodes.hostname`: - Hostname of the deployed node.
     * * `nodes.ipv4_address`: - IP of the deployed node.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.KarbonClusterEtcdNodePoolNode>[]>;
    /**
     * - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
     */
    numInstances: pulumi.Input<number>;
}

export interface KarbonClusterEtcdNodePoolAhvConfig {
    cpu?: pulumi.Input<number>;
    diskMib?: pulumi.Input<number>;
    memoryMib?: pulumi.Input<number>;
    networkUuid: pulumi.Input<string>;
    prismElementClusterUuid: pulumi.Input<string>;
}

export interface KarbonClusterEtcdNodePoolNode {
    hostname?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
}

export interface KarbonClusterExternalLbConfig {
    externalIpv4Address: pulumi.Input<string>;
    masterNodesConfigs: pulumi.Input<pulumi.Input<inputs.KarbonClusterExternalLbConfigMasterNodesConfig>[]>;
}

export interface KarbonClusterExternalLbConfigMasterNodesConfig {
    ipv4Address: pulumi.Input<string>;
    nodePoolName?: pulumi.Input<string>;
}

export interface KarbonClusterMasterNodePool {
    /**
     * - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
     * * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
     * * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
     * * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
     * * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
     * * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
     */
    ahvConfig?: pulumi.Input<inputs.KarbonClusterMasterNodePoolAhvConfig>;
    /**
     * - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
     */
    nodeOsVersion: pulumi.Input<string>;
    /**
     * - List of the deployed nodes in the node pool.
     * * `nodes.hostname`: - Hostname of the deployed node.
     * * `nodes.ipv4_address`: - IP of the deployed node.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.KarbonClusterMasterNodePoolNode>[]>;
    /**
     * - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
     */
    numInstances: pulumi.Input<number>;
}

export interface KarbonClusterMasterNodePoolAhvConfig {
    cpu?: pulumi.Input<number>;
    diskMib?: pulumi.Input<number>;
    memoryMib?: pulumi.Input<number>;
    networkUuid: pulumi.Input<string>;
    prismElementClusterUuid: pulumi.Input<string>;
}

export interface KarbonClusterMasterNodePoolNode {
    hostname?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
}

export interface KarbonClusterPrivateRegistry {
    registryName: pulumi.Input<string>;
}

export interface KarbonClusterSingleMasterConfig {
}

export interface KarbonClusterStorageClassConfig {
    /**
     * - (Required) The name of the storage class.
     */
    name?: pulumi.Input<string>;
    /**
     * Reclaim policy for persistent volumes provisioned using the specified storage class.
     * * `volumes_config.#.file_system` - (Optional) Karbon uses either the ext4 or xfs file-system on the volume disk.
     * * `volumes_config.#.flash_mode` - (Optional) Pins the persistent volumes to the flash tier in case of a `true` value.
     * * `volumes_config.#.password` - (Required) The password of the Prism Element user that the API calls use to provision volumes.
     * * `volumes_config.#.prism_element_cluster_uuid` - (Required) The universally unique identifier (UUID) of the Prism Element cluster.
     * * `volumes_config.#.storage_container` - (Required) Name of the storage container the storage container uses to provision volumes.
     * * `volumes_config.#.username` - (Required) Username of the Prism Element user that the API calls use to provision volumes.
     *
     * **Note:** Updates to this attribute forces new resource creation.
     */
    reclaimPolicy?: pulumi.Input<string>;
    volumesConfig: pulumi.Input<inputs.KarbonClusterStorageClassConfigVolumesConfig>;
}

export interface KarbonClusterStorageClassConfigVolumesConfig {
    fileSystem?: pulumi.Input<string>;
    flashMode?: pulumi.Input<boolean>;
    password: pulumi.Input<string>;
    prismElementClusterUuid: pulumi.Input<string>;
    storageContainer: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface KarbonClusterWorkerNodePool {
    /**
     * - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
     * * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
     * * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
     * * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
     * * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
     * * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
     */
    ahvConfig?: pulumi.Input<inputs.KarbonClusterWorkerNodePoolAhvConfig>;
    /**
     * - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
     */
    nodeOsVersion: pulumi.Input<string>;
    /**
     * - List of the deployed nodes in the node pool.
     * * `nodes.hostname`: - Hostname of the deployed node.
     * * `nodes.ipv4_address`: - IP of the deployed node.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.KarbonClusterWorkerNodePoolNode>[]>;
    /**
     * - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
     */
    numInstances: pulumi.Input<number>;
}

export interface KarbonClusterWorkerNodePoolAhvConfig {
    cpu?: pulumi.Input<number>;
    diskMib?: pulumi.Input<number>;
    memoryMib?: pulumi.Input<number>;
    networkUuid: pulumi.Input<string>;
    prismElementClusterUuid: pulumi.Input<string>;
}

export interface KarbonClusterWorkerNodePoolNode {
    hostname?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
}

export interface KarbonWorkerNodepoolAhvConfig {
    /**
     * - (Required) The number of VCPUs allocated for each VM on the PE cluster.
     */
    cpu?: pulumi.Input<number>;
    /**
     * - (Optional) Size of local storage for each VM on the PE cluster in MiB.
     */
    diskMib?: pulumi.Input<number>;
    /**
     * VM network UUID for isolating iscsi data traffic.
     */
    iscsiNetworkUuid?: pulumi.Input<string>;
    /**
     * - (Optional) Memory allocated for each VM on the PE cluster in MiB.
     */
    memoryMib?: pulumi.Input<number>;
    /**
     * - (Required) The UUID of the network for the VMs deployed with this resource configuration.
     */
    networkUuid: pulumi.Input<string>;
    /**
     * - (Optional) The unique universal identifier (UUID) of the Prism Element
     */
    prismElementClusterUuid?: pulumi.Input<string>;
}

export interface KarbonWorkerNodepoolNode {
    /**
     * hostname of node
     */
    hostname?: pulumi.Input<string>;
    /**
     * ipv4 address of node
     */
    ipv4Address?: pulumi.Input<string>;
}

export interface LcmPrechecksV2EntityUpdateSpec {
    /**
     * UUID of the LCM entity.
     */
    entityUuid: pulumi.Input<string>;
    /**
     * Version to upgrade to.
     *
     * See detailed information in [Nutanix LCM Prechecks v4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Prechecks/operation/performPrechecks)
     */
    toVersion: pulumi.Input<string>;
}

export interface LcmPrechecksV2ManagementServer {
    /**
     * Type of Hypervisor present in the cluster. Enum Values:
     * * "HYPERV" : Hyper-V Hypervisor.
     * * "ESX" : ESX Hypervisor.
     * * "AHV" : Nutanix AHV Hypervisor.
     */
    hypervisorType: pulumi.Input<string>;
    /**
     * IP address of the management server.
     */
    ip: pulumi.Input<string>;
    /**
     * Password to login to the management server.
     */
    password: pulumi.Input<string>;
    /**
     * Username to login to the management server.
     */
    username: pulumi.Input<string>;
}

export interface LcmUpgradeV2EntityUpdateSpec {
    /**
     * UUID of the LCM entity.
     */
    entityUuid: pulumi.Input<string>;
    /**
     * Version to upgrade to.
     *
     *
     * See detailed information in [Nutanix LCM Upgrade v4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Upgrades/operation/performUpgrade).
     */
    toVersion: pulumi.Input<string>;
}

export interface LcmUpgradeV2ManagementServer {
    /**
     * Type of Hypervisor present in the cluster. Enum Values:
     * * "HYPERV" : Hyper-V Hypervisor.
     * * "ESX" : ESX Hypervisor.
     * * "AHV" : Nutanix AHV Hypervisor.
     */
    hypervisorType: pulumi.Input<string>;
    /**
     * IP address of the management server.
     */
    ip: pulumi.Input<string>;
    /**
     * Password to login to the management server.
     */
    password: pulumi.Input<string>;
    /**
     * Username to login to the management server.
     */
    username: pulumi.Input<string>;
}

export interface NdbCloneActionargument {
    /**
     * - (Required) name of argument
     */
    name: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value: pulumi.Input<string>;
}

export interface NdbCloneDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseId?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify if you want to create a database server. This value can be set to true or false as required.
     */
    dbserverId?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of clone
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbCloneDatabaseNodeInfo>[]>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbCloneDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbCloneDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    /**
     * status of clone
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbCloneDatabaseNodeTag>[]>;
}

export interface NdbCloneDatabaseNodeInfo {
    /**
     * info of clone
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbCloneDatabaseNodeProperty {
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbCloneDatabaseNodeProtectionDomainProperty>[]>;
    /**
     * status of clone
     */
    status?: pulumi.Input<string>;
    /**
     * type of clone
     */
    type?: pulumi.Input<string>;
}

export interface NdbCloneDatabaseNodeProtectionDomainProperty {
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbCloneInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigVmProperty>[]>;
}

export interface NdbCloneInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbCloneInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbCloneInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbCloneInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbCloneInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbCloneInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbCloneInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbCloneLcmConfig {
    databaseLcmConfigs?: pulumi.Input<pulumi.Input<inputs.NdbCloneLcmConfigDatabaseLcmConfig>[]>;
}

export interface NdbCloneLcmConfigDatabaseLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail>[]>;
}

export interface NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone: pulumi.Input<string>;
}

export interface NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail {
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbCloneLinkedDatabase {
    /**
     * database name
     */
    databaseName?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of clone
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbCloneLinkedDatabaseInfo>[]>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    /**
     * snapshot id from where clone is created
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * status of clone
     */
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbCloneLinkedDatabaseInfo {
    /**
     * info of clone
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbCloneNode {
    /**
     * specify compute profile id
     */
    computeProfileId?: pulumi.Input<string>;
    /**
     * dberver id
     */
    dbserverId?: pulumi.Input<string>;
    /**
     * specify network profile id
     */
    networkProfileId?: pulumi.Input<string>;
    /**
     * dbserver time zone
     */
    newDbServerTimeZone?: pulumi.Input<string>;
    /**
     * cluster id
     */
    nxClusterId?: pulumi.Input<string>;
    /**
     * properties of vm
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbCloneNodeProperty>[]>;
    /**
     * name for the database server VM.
     */
    vmName?: pulumi.Input<string>;
}

export interface NdbCloneNodeProperty {
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbClonePostgresqlInfo {
    /**
     * password of the postgres superuser.
     */
    dbPassword: pulumi.Input<string>;
    /**
     * description for the dbserver.
     */
    dbserverDescription?: pulumi.Input<string>;
    /**
     * OS command that you want to run after the instance is created.
     */
    postCloneCmd?: pulumi.Input<string>;
    /**
     * OS command that you want to run before the instance is created.
     */
    preCloneCmd?: pulumi.Input<string>;
    /**
     * name for the database server VM.
     */
    vmName: pulumi.Input<string>;
}

export interface NdbCloneProperty {
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneTimeMachine {
    accessLevel?: pulumi.Input<string>;
    /**
     * cloned or not
     */
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    /**
     * clone will be clustered or not
     */
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<string>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of clone
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineTag>[]>;
    /**
     * type of clone
     */
    type?: pulumi.Input<string>;
}

export interface NdbCloneTimeMachineProperty {
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbCloneTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleDailySchedule>[]>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    /**
     * timezone
     */
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbCloneTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbCloneTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbCloneTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbCloneTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbCloneTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbCloneTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
    seconds?: pulumi.Input<number>;
}

export interface NdbCloneTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbCloneTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbCloneTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    /**
     * date created for clone
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * last modified date for clone
     */
    dateModified?: pulumi.Input<string>;
    /**
     * database instance description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * database instance name
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbCloneTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbClusterAgentNetworkInfo {
    /**
     * string of DNS servers(comma separted).
     */
    dns?: pulumi.Input<string>;
    /**
     * string of NTP servers(comma separted).
     */
    ntp?: pulumi.Input<string>;
}

export interface NdbClusterEntityCount {
    dbServers?: pulumi.Input<number>;
    engineCounts?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCount>[]>;
}

export interface NdbClusterEntityCountEngineCount {
    mariadbDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMariadbDatabase>[]>;
    mongodbDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMongodbDatabase>[]>;
    mysqlDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMysqlDatabase>[]>;
    oracleDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountOracleDatabase>[]>;
    postgresDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountPostgresDatabase>[]>;
    saphanaDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountSaphanaDatabase>[]>;
    sqlserverDatabases?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountSqlserverDatabase>[]>;
}

export interface NdbClusterEntityCountEngineCountMariadbDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMariadbDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountMariadbDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountMongodbDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMongodbDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountMongodbDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountMysqlDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountMysqlDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountMysqlDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountOracleDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountOracleDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountOracleDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountPostgresDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountPostgresDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountPostgresDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountSaphanaDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountSaphanaDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountSaphanaDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountSqlserverDatabase {
    profiles?: pulumi.Input<pulumi.Input<inputs.NdbClusterEntityCountEngineCountSqlserverDatabaseProfile>[]>;
    timeMachines?: pulumi.Input<number>;
}

export interface NdbClusterEntityCountEngineCountSqlserverDatabaseProfile {
    compute?: pulumi.Input<number>;
    databaseParameter?: pulumi.Input<number>;
    network?: pulumi.Input<number>;
    software?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
    windowsDomain?: pulumi.Input<number>;
}

export interface NdbClusterNetworksInfo {
    /**
     * VLAN access types for which you want to configure network segmentation. Supports [PRISM, DSIP, DBSERVER ]. 
     * Prism Element: Select this VLAN access type to configure a VLAN that the NDB agent VM can use to communicate with Prism.
     * Prism iSCSI Data Service. Select this VLAN access type to configure a VLAN that the agent VM can use to make connection requests to the iSCSI data services IP.
     * DBServer Access from NDB server. Select this VLAN access type to configure a VLAN that is used for communications between the NDB agent VM and the database server VM on the newly registered NDB server cluster.
     */
    accessTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * network segmentation to segment the network traffic
     */
    networkInfos?: pulumi.Input<pulumi.Input<inputs.NdbClusterNetworksInfoNetworkInfo>[]>;
    /**
     * type of vlan. Supported [DHCP, Static, IPAM]
     */
    type?: pulumi.Input<string>;
}

export interface NdbClusterNetworksInfoNetworkInfo {
    /**
     * gateway of agent network
     */
    gateway?: pulumi.Input<string>;
    /**
     * static ip of agent network
     */
    staticIp?: pulumi.Input<string>;
    /**
     * subnet mask of agent network
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * vlan name
     */
    vlanName?: pulumi.Input<string>;
}

export interface NdbClusterProperty {
    /**
     * description of cluster
     */
    description?: pulumi.Input<string>;
    /**
     * name of the cluster to be registered
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbClusterResourceConfig {
    memoryThresholdPercentage?: pulumi.Input<number>;
    storageThresholdPercentage?: pulumi.Input<number>;
}

export interface NdbDatabaseActionargument {
    /**
     * - (Required) name of argument
     */
    name: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value: pulumi.Input<string>;
}

export interface NdbDatabaseClusterInfo {
    clusterIpInfos: pulumi.Input<pulumi.Input<inputs.NdbDatabaseClusterInfoClusterIpInfo>[]>;
}

export interface NdbDatabaseClusterInfoClusterIpInfo {
    /**
     * - (Optional) IP infos for custom network profile.
     */
    ipInfos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseClusterInfoClusterIpInfoIpInfo>[]>;
    /**
     * - (Optional) cluster id.
     */
    nxClusterId: pulumi.Input<string>;
}

export interface NdbDatabaseClusterInfoClusterIpInfoIpInfo {
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipType?: pulumi.Input<string>;
}

export interface NdbDatabaseDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseId?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dbserverId?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseDatabaseNodeInfo>[]>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * - (Optional) tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseDatabaseNodeTag>[]>;
}

export interface NdbDatabaseDatabaseNodeInfo {
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseDatabaseNodeProperty {
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseDatabaseNodeProtectionDomainProperty>[]>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseDatabaseNodeProtectionDomainProperty {
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigVmProperty>[]>;
}

export interface NdbDatabaseInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbDatabaseInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbDatabaseInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbDatabaseInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbDatabaseLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseLcmConfigRefreshDetail>[]>;
}

export interface NdbDatabaseLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    /**
     * - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
     */
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbDatabaseLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbDatabaseLinkedDatabase {
    databaseName?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseLinkedDatabaseInfo>[]>;
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbDatabaseLinkedDatabaseInfo {
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseMaintenanceTasks {
    maintenanceWindowId?: pulumi.Input<string>;
    tasks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseMaintenanceTasksTask>[]>;
}

export interface NdbDatabaseMaintenanceTasksTask {
    postCommand?: pulumi.Input<string>;
    preCommand?: pulumi.Input<string>;
    taskType?: pulumi.Input<string>;
}

export interface NdbDatabaseNode {
    /**
     * - (Optional) compute profile id
     */
    computeprofileid?: pulumi.Input<string>;
    /**
     * - (Optional) Database server ID required for existing VM
     */
    dbserverid?: pulumi.Input<string>;
    /**
     * - (Optional) IP infos for custom network profile.
     */
    ipInfos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseNodeIpInfo>[]>;
    /**
     * - (Required) network profile ID
     */
    networkprofileid?: pulumi.Input<string>;
    /**
     * - (Optional) cluster id.
     */
    nxClusterId?: pulumi.Input<string>;
    /**
     * - (Optional) list of additional properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseNodeProperty>[]>;
    /**
     * - (Required) name of vm
     */
    vmname: pulumi.Input<string>;
}

export interface NdbDatabaseNodeIpInfo {
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipType?: pulumi.Input<string>;
}

export interface NdbDatabaseNodeProperty {
    /**
     * - (Required) Name of the instance.
     */
    name: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value: pulumi.Input<string>;
}

export interface NdbDatabasePostgresqlInfo {
    /**
     * - (Optional) allocate huge page. Default: false
     */
    allocatePgHugepage?: pulumi.Input<boolean>;
    /**
     * - (Optional) auth methods. Default: md5
     */
    authMethod?: pulumi.Input<string>;
    /**
     * - (Optional) enable auto tuning of staging drive. Default: false
     */
    autoTuneStagingDrive?: pulumi.Input<boolean>;
    /**
     * - (Optional) if clustered database. Default: false
     */
    clusterDatabase?: pulumi.Input<boolean>;
    /**
     * - (Required) name of initial database to be created
     */
    databaseNames: pulumi.Input<string>;
    /**
     * - (Required) initial database size
     */
    databaseSize: pulumi.Input<string>;
    /**
     * - (Required) database instance password
     */
    dbPassword: pulumi.Input<string>;
    /**
     * - (Optional) High Availability instance
     */
    haInstance?: pulumi.Input<inputs.NdbDatabasePostgresqlInfoHaInstance>;
    /**
     * - (Required) listener port for database instance
     */
    listenerPort: pulumi.Input<string>;
    /**
     * - (Optional) post instance create script
     */
    postCreateScript?: pulumi.Input<string>;
    /**
     * - (Optional) pre instance create script
     */
    preCreateScript?: pulumi.Input<string>;
}

export interface NdbDatabasePostgresqlInfoHaInstance {
    /**
     * - (Optional) archive wal expire days. Default is set to -1
     */
    archiveWalExpireDays?: pulumi.Input<number>;
    /**
     * - (Optional) backup policy for instance. Default is "primaryOnly"
     */
    backupPolicy?: pulumi.Input<string>;
    clusterDescription?: pulumi.Input<string>;
    /**
     * - (Required) cluster name
     */
    clusterName: pulumi.Input<string>;
    /**
     * - (Optional) HA proxy node. Default is set to false
     */
    deployHaproxy?: pulumi.Input<boolean>;
    /**
     * - (Optional) enable peer auth . Default is set to false.
     */
    enablePeerAuth?: pulumi.Input<boolean>;
    /**
     * - (Optional) enable synchronous mode. Default is set to true
     */
    enableSynchronousMode?: pulumi.Input<boolean>;
    /**
     * - (Optional) failover mode of nodes.
     */
    failoverMode?: pulumi.Input<string>;
    /**
     * - (Optional) node type of instance. Default is set to database
     */
    nodeType?: pulumi.Input<string>;
    /**
     * - (Required) patroni cluster name
     */
    patroniClusterName: pulumi.Input<string>;
    /**
     * - (Optional) provisional virtual ip. Default is set to true
     */
    provisionVirtualIp?: pulumi.Input<boolean>;
    /**
     * -  (Required) proxy read port
     */
    proxyReadPort: pulumi.Input<string>;
    /**
     * - (Required) proxy write port
     */
    proxyWritePort: pulumi.Input<string>;
}

export interface NdbDatabaseProperty {
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * database id
     */
    databaseId?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dbserverId?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreDatabaseNodeInfo>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreDatabaseNodeTag>[]>;
}

export interface NdbDatabaseRestoreDatabaseNodeInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseRestoreDatabaseNodeProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseRestoreInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigVmProperty>[]>;
}

export interface NdbDatabaseRestoreInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreLcmConfigRefreshDetail>[]>;
}

export interface NdbDatabaseRestoreLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbDatabaseRestoreLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreLinkedDatabase {
    /**
     * name of database
     */
    databaseName?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreLinkedDatabaseInfo>[]>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * parent database id
     */
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    /**
     * snapshot id from you want to use for restoring the instance
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreLinkedDatabaseInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseRestoreProperty {
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTimeMachine {
    accessLevel?: pulumi.Input<string>;
    /**
     * whether instance is cloned or not
     */
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    /**
     * database id
     */
    databaseId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineTag>[]>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTimeMachineProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleDailySchedule>[]>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    /**
     * timezone on which instance is created xw
     */
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseRestoreTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
    seconds?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseRestoreTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseRestoreTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbDatabaseRestoreTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseId?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dbserverId?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleDatabaseNodeInfo>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleDatabaseNodeTag>[]>;
}

export interface NdbDatabaseScaleDatabaseNodeInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseScaleDatabaseNodeProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleDatabaseNodeProtectionDomainProperty>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleDatabaseNodeProtectionDomainProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseScaleInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigVmProperty>[]>;
}

export interface NdbDatabaseScaleInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleLcmConfigRefreshDetail>[]>;
}

export interface NdbDatabaseScaleLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbDatabaseScaleLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleLinkedDatabase {
    /**
     * name of database
     */
    databaseName?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleLinkedDatabaseInfo>[]>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * parent database id
     */
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleLinkedDatabaseInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbDatabaseScaleProperty {
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTimeMachine {
    accessLevel?: pulumi.Input<string>;
    /**
     * whether instance is cloned or not
     */
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineTag>[]>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTimeMachineProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleDailySchedule>[]>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    /**
     * timezone on which instance is created xw
     */
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseScaleTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbDatabaseScaleTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseScaleTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseScaleTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
    seconds?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseScaleTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseScaleTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbDatabaseScaleTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseSnapshotLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseSnapshotLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseSnapshotLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseSnapshotLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseSnapshotLcmConfigRefreshDetail>[]>;
}

export interface NdbDatabaseSnapshotLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    /**
     * Default is set to Asia/Calcutta
     */
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbDatabaseSnapshotLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseSnapshotLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbDatabaseSnapshotLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbDatabaseSnapshotProperty {
    /**
     * description of snapshot
     */
    description?: pulumi.Input<string>;
    /**
     * Snapshot name. Default value is era_manual_snapshot.
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseSnapshotTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseTimeMachine {
    accessLevel?: pulumi.Input<string>;
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    /**
     * - (Optional) If clustered database. Default: false
     */
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metric?: pulumi.Input<string>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * List of all the properties
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    /**
     * - (Optional) schedule for snapshots
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    /**
     * - (Optional) tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineTag>[]>;
    type?: pulumi.Input<string>;
}

export interface NdbDatabaseTimeMachineProperty {
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleDailySchedule>[]>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbDatabaseTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbDatabaseTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    /**
     * - (Required) hours
     */
    hours?: pulumi.Input<number>;
    /**
     * - (Required) minutes
     */
    minutes?: pulumi.Input<number>;
    /**
     * - (Required) seconds
     */
    seconds?: pulumi.Input<number>;
}

export interface NdbDatabaseTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbDatabaseTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    /**
     * - (Required) month for snapshot
     */
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbDatabaseTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * - (Optional) The description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * - (Required) Name of the instance.
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbDatabaseTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDatabaseTimemachineinfo {
    /**
     * - (Optional) enable auto tune log drive. Default: true
     */
    autotunelogdrive?: pulumi.Input<boolean>;
    /**
     * - (Optional) description of time machine
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) name of time machine
     */
    name: pulumi.Input<string>;
    /**
     * - (Optional) schedule for snapshots
     */
    schedule: pulumi.Input<inputs.NdbDatabaseTimemachineinfoSchedule>;
    /**
     * -  (optional) SLA details for HA instance
     */
    slaDetails?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimemachineinfoSlaDetail>[]>;
    /**
     * - (Optional) SLA ID for single instance
     */
    slaid?: pulumi.Input<string>;
    /**
     * - (Optional) tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimemachineinfoTag>[]>;
}

export interface NdbDatabaseTimemachineinfoSchedule {
    /**
     * - (Optional) snapshot freq and log config
     */
    continuousschedule?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleContinuousschedule>;
    /**
     * - (Optional) monthly snapshot config
     */
    monthlyschedule?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleMonthlyschedule>;
    /**
     * - (Optional) quaterly snapshot config
     */
    quartelyschedule?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleQuartelyschedule>;
    /**
     * - (Optional) daily snapshot config
     */
    snapshottimeofday?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleSnapshottimeofday>;
    /**
     * - (Optional) weekly snapshot config
     */
    weeklyschedule?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleWeeklyschedule>;
    /**
     * - (Optional) yearly snapshot config
     */
    yearlyschedule?: pulumi.Input<inputs.NdbDatabaseTimemachineinfoScheduleYearlyschedule>;
}

export interface NdbDatabaseTimemachineinfoScheduleContinuousschedule {
    /**
     * - (Required) to enable
     */
    enabled: pulumi.Input<boolean>;
    /**
     * - (Required) log catchup interval for database
     */
    logbackupinterval: pulumi.Input<number>;
    /**
     * - (Required) num of snapshots per day
     */
    snapshotsperday: pulumi.Input<number>;
}

export interface NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
    /**
     * - (Required) day of month to take snapshot
     */
    dayofmonth: pulumi.Input<number>;
    /**
     * - (Required) to enable
     */
    enabled: pulumi.Input<boolean>;
}

export interface NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
    /**
     * - (Required) month's day for snapshot
     */
    dayofmonth: pulumi.Input<number>;
    /**
     * - (Required) to enable
     */
    enabled: pulumi.Input<boolean>;
    /**
     * - (Required) quarter start month
     */
    startmonth: pulumi.Input<string>;
}

export interface NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
    /**
     * - (Required) hours
     */
    hours: pulumi.Input<number>;
    /**
     * - (Required) minutes
     */
    minutes: pulumi.Input<number>;
    /**
     * - (Required) seconds
     */
    seconds: pulumi.Input<number>;
}

export interface NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
    /**
     * - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
     */
    dayofweek: pulumi.Input<string>;
    /**
     * - (Required) to enable
     */
    enabled: pulumi.Input<boolean>;
}

export interface NdbDatabaseTimemachineinfoScheduleYearlyschedule {
    /**
     * - (Required) day of month to take snapshot
     */
    dayofmonth: pulumi.Input<number>;
    /**
     * - (Required) to enable
     */
    enabled: pulumi.Input<boolean>;
    /**
     * - (Required) month for snapshot
     */
    month: pulumi.Input<string>;
}

export interface NdbDatabaseTimemachineinfoSlaDetail {
    /**
     * - (Required) primary sla details
     * * `primary_sla.sla_id` :- (Required) sla id
     * * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
     */
    primarySlas?: pulumi.Input<pulumi.Input<inputs.NdbDatabaseTimemachineinfoSlaDetailPrimarySla>[]>;
}

export interface NdbDatabaseTimemachineinfoSlaDetailPrimarySla {
    nxClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * description of SLA ID.
     */
    slaId: pulumi.Input<string>;
}

export interface NdbDatabaseTimemachineinfoTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbDbserverVmCredential {
    label?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface NdbDbserverVmMaintenanceTasks {
    /**
     * Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
     */
    maintenanceWindowId?: pulumi.Input<string>;
    /**
     * Tasks for the maintenance.
     * * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
     * * `tasks.pre_command`: add pre (operating system and database patching) commands.
     * * `tasks.post_command`:add post (operating system and database patching) commands.
     */
    tasks?: pulumi.Input<pulumi.Input<inputs.NdbDbserverVmMaintenanceTasksTask>[]>;
}

export interface NdbDbserverVmMaintenanceTasksTask {
    postCommand?: pulumi.Input<string>;
    preCommand?: pulumi.Input<string>;
    taskType?: pulumi.Input<string>;
}

export interface NdbDbserverVmPostgresDatabase {
    /**
     * use SSH public keys to access the database server VM.
     */
    clientPublicKey?: pulumi.Input<string>;
    /**
     * name for the database server VM.
     */
    vmName: pulumi.Input<string>;
}

export interface NdbDbserverVmProperty {
    /**
     * name of the dbserver vm
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbDbserverVmTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbLinkedDatabasesInfo {
    infos?: pulumi.Input<pulumi.Input<inputs.NdbLinkedDatabasesInfoInfo>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbLinkedDatabasesInfoInfo {
    createdBy?: pulumi.Input<string>;
}

export interface NdbMaintenanceTaskEntityTaskAssociation {
    /**
     * access level of tasks
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * created date of task
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * modified date of task
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of maintenance window
     */
    description?: pulumi.Input<string>;
    entity?: pulumi.Input<string>;
    /**
     * entity id
     */
    entityId?: pulumi.Input<string>;
    /**
     * type of the entity. i.e. DBSERVER
     */
    entityType?: pulumi.Input<string>;
    /**
     * id of maintenance window
     */
    id?: pulumi.Input<string>;
    /**
     * maintenance window id which has to be associated
     */
    maintenanceWindowId?: pulumi.Input<string>;
    /**
     * maintenance window owner id
     */
    maintenanceWindowOwnerId?: pulumi.Input<string>;
    /**
     * name of of maintenance window
     */
    name?: pulumi.Input<string>;
    /**
     * owner id of task
     */
    ownerId?: pulumi.Input<string>;
    /**
     * list of pre post commands of OS or DB task
     */
    payloads?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceTaskEntityTaskAssociationPayload>[]>;
    /**
     * properties of task
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceTaskEntityTaskAssociationProperty>[]>;
    /**
     * status of task
     */
    status?: pulumi.Input<string>;
    /**
     * tags of task
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceTaskEntityTaskAssociationTag>[]>;
    /**
     * type of the task. OS or DB
     */
    taskType?: pulumi.Input<string>;
}

export interface NdbMaintenanceTaskEntityTaskAssociationPayload {
    /**
     * Pre Post command of Task
     */
    prePostCommands?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand>[]>;
}

export interface NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand {
    /**
     * post command of task
     */
    postCommand?: pulumi.Input<string>;
    /**
     * pre command of task
     */
    preCommand?: pulumi.Input<string>;
}

export interface NdbMaintenanceTaskEntityTaskAssociationProperty {
    /**
     * name of of maintenance window
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbMaintenanceTaskEntityTaskAssociationTag {
    /**
     * entity id
     */
    entityId?: pulumi.Input<string>;
    /**
     * type of the entity. i.e. DBSERVER
     */
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbMaintenanceTaskTask {
    /**
     * command that you want to run after patching the OS/DB
     */
    postCommand?: pulumi.Input<string>;
    /**
     * command that you want to run before patching the OS/DB
     */
    preCommand?: pulumi.Input<string>;
    /**
     * type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
     */
    taskType?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowEntityTaskAssoc {
    /**
     * access level
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * created date of maintenance window
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * modified date of maintenance window
     */
    dateModified?: pulumi.Input<string>;
    /**
     * Description for maintenance window
     */
    description?: pulumi.Input<string>;
    entity?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    maintenanceWindowId?: pulumi.Input<string>;
    maintenanceWindowOwnerId?: pulumi.Input<string>;
    /**
     * Name for the maintenance window.
     */
    name?: pulumi.Input<string>;
    /**
     * owner id of maintenance window
     */
    ownerId?: pulumi.Input<string>;
    payloads?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceWindowEntityTaskAssocPayload>[]>;
    /**
     * properties of maintenance window
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceWindowEntityTaskAssocProperty>[]>;
    /**
     * status of maintennace window
     */
    status?: pulumi.Input<string>;
    /**
     * tags of maintenance window
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceWindowEntityTaskAssocTag>[]>;
    taskType?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowEntityTaskAssocPayload {
    prePostCommands?: pulumi.Input<pulumi.Input<inputs.NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand>[]>;
}

export interface NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand {
    postCommand?: pulumi.Input<string>;
    preCommand?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowEntityTaskAssocProperty {
    /**
     * Name for the maintenance window.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowEntityTaskAssocTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowProperty {
    /**
     * Name for the maintenance window.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbMaintenanceWindowSchedule {
    /**
     * Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * duration in hours. Default is 2
     */
    duration?: pulumi.Input<number>;
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    /**
     * Supported values [ MONTHLY, WEEKLY ]
     */
    recurrence?: pulumi.Input<string>;
    /**
     * start time for maintenance window to trigger
     */
    startTime?: pulumi.Input<string>;
    threshold?: pulumi.Input<string>;
    /**
     * timezone . Default is Asia/Calcutta .
     */
    timezone?: pulumi.Input<string>;
    /**
     * week of the month. Supports [1, 2, 3, 4] .
     */
    weekOfMonth?: pulumi.Input<number>;
}

export interface NdbMaintenanceWindowTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbNetworkIpPool {
    addresses?: pulumi.Input<pulumi.Input<inputs.NdbNetworkIpPoolAddress>[]>;
    /**
     * ending IP address range for new database servers
     */
    endIp?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modifiedBy?: pulumi.Input<string>;
    /**
     * starting IP address range for new database servers
     */
    startIp?: pulumi.Input<string>;
}

export interface NdbNetworkIpPoolAddress {
    ip?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface NdbNetworkPropertiesMap {
    vlanGateway?: pulumi.Input<string>;
    vlanPrimaryDns?: pulumi.Input<string>;
    vlanSecondaryDns?: pulumi.Input<string>;
    vlanSubnetMask?: pulumi.Input<string>;
}

export interface NdbNetworkProperty {
    /**
     * Name of the vlan to be attached in NDB
     */
    name?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbProfileClusterAvailability {
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * cluster on which profile created
     */
    nxClusterId?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    profileId?: pulumi.Input<string>;
    /**
     * status of profile
     */
    status?: pulumi.Input<string>;
}

export interface NdbProfileComputeProfile {
    /**
     * number of cores per vCPU for the database server VM.
     */
    corePerCpu?: pulumi.Input<string>;
    /**
     * number of vCPUs for the database server VM.
     */
    cpus?: pulumi.Input<string>;
    /**
     * amount of memory for the database server VM.
     */
    memorySize?: pulumi.Input<string>;
}

export interface NdbProfileDatabaseParameterProfile {
    /**
     * Database parameters suuported for postgress.
     * * `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
     * * `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
     * * `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
     * * `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
     * * `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
     * * `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
     * * `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
     * * `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
     * * `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
     * * `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
     * * `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
     * * `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
     * * `postgres_database.checkpoint_completion_target`: (Optional)
     * Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
     * * `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
     * * `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
     * * `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
     * * `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
     * * `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
     * * `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
     * * `postgres_database.wal_buffers`: (Optional)
     * Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
     * * `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
     * * `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
     * * `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
     */
    postgresDatabases?: pulumi.Input<pulumi.Input<inputs.NdbProfileDatabaseParameterProfilePostgresDatabase>[]>;
}

export interface NdbProfileDatabaseParameterProfilePostgresDatabase {
    autovacuum?: pulumi.Input<string>;
    autovacuumFreezeMaxAge?: pulumi.Input<string>;
    autovacuumMaxWorkers?: pulumi.Input<string>;
    autovacuumVacuumCostDelay?: pulumi.Input<string>;
    autovacuumVacuumScaleFactor?: pulumi.Input<string>;
    autovacuumVacuumThreshold?: pulumi.Input<string>;
    autovacuumWorkMem?: pulumi.Input<string>;
    checkpointCompletionTarget?: pulumi.Input<string>;
    checkpointTimeout?: pulumi.Input<string>;
    effectiveIoConcurrency?: pulumi.Input<string>;
    maxConnections?: pulumi.Input<string>;
    maxLocksPerTransaction?: pulumi.Input<string>;
    maxPreparedTransactions?: pulumi.Input<string>;
    maxReplicationSlots?: pulumi.Input<string>;
    maxWalSenders?: pulumi.Input<string>;
    maxWalSize?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    minWalSize?: pulumi.Input<string>;
    randomPageCost?: pulumi.Input<string>;
    synchronousCommit?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    walBuffers?: pulumi.Input<string>;
    walKeepSegments?: pulumi.Input<string>;
}

export interface NdbProfileNetworkProfile {
    /**
     * Postgres Info to create network profile
     *
     * * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
     * * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
     * * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
     *
     * * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
     * * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
     * * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
     * * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
     * * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
     */
    postgresDatabases?: pulumi.Input<pulumi.Input<inputs.NdbProfileNetworkProfilePostgresDatabase>[]>;
    /**
     * Topology supported for network profile. Allowed values are "cluster" and "single"
     */
    topology: pulumi.Input<string>;
    /**
     * cluster associated with VLAN. this is used with Single instance for postgres database.
     * * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
     */
    versionClusterAssociations?: pulumi.Input<pulumi.Input<inputs.NdbProfileNetworkProfileVersionClusterAssociation>[]>;
}

export interface NdbProfileNetworkProfilePostgresDatabase {
    haInstances?: pulumi.Input<pulumi.Input<inputs.NdbProfileNetworkProfilePostgresDatabaseHaInstance>[]>;
    singleInstances?: pulumi.Input<pulumi.Input<inputs.NdbProfileNetworkProfilePostgresDatabaseSingleInstance>[]>;
}

export interface NdbProfileNetworkProfilePostgresDatabaseHaInstance {
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    clusterNames?: pulumi.Input<pulumi.Input<string>[]>;
    numOfClusters?: pulumi.Input<string>;
    vlanNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NdbProfileNetworkProfilePostgresDatabaseSingleInstance {
    enableIpAddressSelection?: pulumi.Input<string>;
    vlanName?: pulumi.Input<string>;
}

export interface NdbProfileNetworkProfileVersionClusterAssociation {
    /**
     * cluster on which profile created
     */
    nxClusterId: pulumi.Input<string>;
}

export interface NdbProfileSoftwareProfile {
    /**
     * specify Nutanix clusters where this profile is available.
     */
    availableClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Software profile info about postgres database.
     * * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
     * * `postgres_database.base_profile_version_name`: name for the software profile version.
     * * `postgres_database.base_profile_version_description`: description for the software profile version.
     * * `postgres_database.os_notes`: a note to provide additional information about the operating system
     * * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
     */
    postgresDatabases?: pulumi.Input<pulumi.Input<inputs.NdbProfileSoftwareProfilePostgresDatabase>[]>;
    /**
     * Topology of software profile. Allowed values are "cluster" and "single"
     */
    topology: pulumi.Input<string>;
}

export interface NdbProfileSoftwareProfilePostgresDatabase {
    baseProfileVersionDescription?: pulumi.Input<string>;
    baseProfileVersionName?: pulumi.Input<string>;
    dbSoftwareNotes?: pulumi.Input<string>;
    osNotes?: pulumi.Input<string>;
    sourceDbserverId?: pulumi.Input<string>;
}

export interface NdbProfileVersion {
    dbVersion?: pulumi.Input<string>;
    deprecated?: pulumi.Input<boolean>;
    /**
     * Description of profile
     */
    description?: pulumi.Input<string>;
    /**
     * Engine Type of database
     */
    engineType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    /**
     * owner  of profile
     */
    owner?: pulumi.Input<string>;
    profileId?: pulumi.Input<string>;
    properties?: pulumi.Input<pulumi.Input<inputs.NdbProfileVersionProperty>[]>;
    propertiesMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Publish for all users
     */
    published?: pulumi.Input<boolean>;
    /**
     * status of profile
     */
    status?: pulumi.Input<string>;
    systemProfile?: pulumi.Input<boolean>;
    topology?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    /**
     * cluster associated with VLAN. this is used with Single instance for postgres database.
     * * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
     */
    versionClusterAssociations?: pulumi.Input<pulumi.Input<inputs.NdbProfileVersionVersionClusterAssociation>[]>;
}

export interface NdbProfileVersionProperty {
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbProfileVersionVersionClusterAssociation {
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    /**
     * cluster on which profile created
     */
    nxClusterId?: pulumi.Input<string>;
    optimizedForProvisioning?: pulumi.Input<boolean>;
    ownerId?: pulumi.Input<string>;
    profileVersionId?: pulumi.Input<string>;
    properties?: pulumi.Input<pulumi.Input<inputs.NdbProfileVersionVersionClusterAssociationProperty>[]>;
    /**
     * status of profile
     */
    status?: pulumi.Input<string>;
}

export interface NdbProfileVersionVersionClusterAssociationProperty {
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseActionargument {
    /**
     * - (Required) name of argument
     */
    name: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseId?: pulumi.Input<string>;
    /**
     * status of database
     */
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dbserverId?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseDatabaseNodeInfo>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseDatabaseNodeTag>[]>;
}

export interface NdbRegisterDatabaseDatabaseNodeInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbRegisterDatabaseDatabaseNodeProperty {
    /**
     * description
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty {
    /**
     * description
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbRegisterDatabaseInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigVmProperty>[]>;
}

export interface NdbRegisterDatabaseInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseLcmConfigRefreshDetail>[]>;
}

export interface NdbRegisterDatabaseLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    /**
     * - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
     */
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseLinkedDatabase {
    /**
     * name of database
     */
    databaseName?: pulumi.Input<string>;
    /**
     * status of database
     */
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseLinkedDatabaseInfo>[]>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * parent database id
     */
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseLinkedDatabaseInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbRegisterDatabasePostgressInfo {
    /**
     * allow multiple databases. Default is true
     */
    allowMultipleDatabases?: pulumi.Input<boolean>;
    /**
     * backup policy of database. Default is prefer_secondary.
     */
    backupPolicy?: pulumi.Input<string>;
    /**
     * name of the database server VM on which the instance you want to register is running.
     */
    dbName: pulumi.Input<string>;
    /**
     * database password
     */
    dbPassword: pulumi.Input<string>;
    /**
     * username of the NDB drive user account that has sudo access.
     */
    dbUser?: pulumi.Input<string>;
    /**
     * listner port of database
     */
    listenerPort: pulumi.Input<string>;
    /**
     * path to the PostgreSQL home directory in which the PostgreSQL software is installed.
     */
    postgresSoftwareHome: pulumi.Input<string>;
    /**
     * path to the directory in which the PostgreSQL software is installed.
     */
    softwareHome?: pulumi.Input<string>;
    /**
     * switch log of database. Default is true
     */
    switchLog?: pulumi.Input<boolean>;
    /**
     * VM IP of the database server VM on which the instance you want to register is running.
     */
    vmIp?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseProperty {
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachine {
    accessLevel?: pulumi.Input<string>;
    /**
     * whether instance is cloned or not
     */
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    /**
     * clustered or not. Default is false
     */
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    /**
     * - (Optional) schedule for snapshots
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineTag>[]>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineInfo {
    /**
     * - (Optional) enable auto tune log drive. Default: true
     */
    autotunelogdrive?: pulumi.Input<boolean>;
    /**
     * - (Optional) description of time machine
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) name of time machine
     */
    name: pulumi.Input<string>;
    /**
     * - (Optional) schedule for snapshots
     */
    schedule: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoSchedule>;
    /**
     * -  (optional) SLA details for HA instance
     */
    slaDetails?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoSlaDetail>[]>;
    /**
     * - (Optional) SLA ID for single instance
     */
    slaid?: pulumi.Input<string>;
    /**
     * - (Optional) tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoTag>[]>;
}

export interface NdbRegisterDatabaseTimeMachineInfoSchedule {
    /**
     * - (Optional) snapshot freq and log config
     */
    continuousschedule?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule>;
    /**
     * - (Optional) monthly snapshot config
     */
    monthlyschedule?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule>;
    /**
     * - (Optional) quaterly snapshot config
     */
    quartelyschedule?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule>;
    /**
     * - (Optional) daily snapshot config
     */
    snapshottimeofday?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday>;
    /**
     * - (Optional) weekly snapshot config
     */
    weeklyschedule?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule>;
    /**
     * - (Optional) yearly snapshot config
     */
    yearlyschedule?: pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
    enabled: pulumi.Input<boolean>;
    logbackupinterval: pulumi.Input<number>;
    snapshotsperday: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
    dayofmonth: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
    dayofmonth: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
    startmonth: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
    hours: pulumi.Input<number>;
    minutes: pulumi.Input<number>;
    seconds: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
    dayofweek: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
    dayofmonth: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
    month: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineInfoSlaDetail {
    /**
     * - (Required) primary sla details
     * * `primary_sla.sla_id` :- (Required) sla id
     * * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
     */
    primarySlas?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla>[]>;
}

export interface NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla {
    nxClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * description of SLA ID.
     */
    slaId: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineInfoTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineProperty {
    /**
     * description
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleDailySchedule>[]>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    /**
     * timezone on which instance is created xw
     */
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbRegisterDatabaseTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
    seconds?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbRegisterDatabaseTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbRegisterDatabaseTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbRegisterDatabaseTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    /**
     * - (Required) value for argument
     */
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDbserverCredential {
    label?: pulumi.Input<string>;
    /**
     * password of the NDB drive user account. Conflicts with ssh_key.
     */
    password: pulumi.Input<string>;
    /**
     * username of the NDB drive user account that has sudo access
     */
    username: pulumi.Input<string>;
}

export interface NdbRegisterDbserverPostgresDatabase {
    /**
     * listener port of db server
     */
    listenerPort?: pulumi.Input<string>;
    /**
     * path to the PostgreSQL home directory in which the PostgreSQL software is installed
     */
    postgresSoftwareHome?: pulumi.Input<string>;
}

export interface NdbRegisterDbserverProperty {
    /**
     * Name of db server vm. Should be used in Update Method only.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbRegisterDbserverTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseDatabaseNode {
    accessLevel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseId?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    dbserver?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dbserverId?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseDatabaseNodeInfo>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseDatabaseNodeProperty>[]>;
    protectionDomainId?: pulumi.Input<string>;
    protectionDomains?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseDatabaseNodeProtectionDomain>[]>;
    softwareInstallationId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseDatabaseNodeTag>[]>;
}

export interface NdbScaleDatabaseDatabaseNodeInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbScaleDatabaseDatabaseNodeProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseDatabaseNodeProtectionDomain {
    assocEntities?: pulumi.Input<pulumi.Input<string>[]>;
    cloudId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eraCreated?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    primaryHost?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseDatabaseNodeProtectionDomainProperty>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseDatabaseNodeProtectionDomainProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseDatabaseNodeTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseInfo {
    bpgConfigs?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfig>[]>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbScaleDatabaseInfoBpgConfig {
    bpgDbParams?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigBpgDbParam>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigStorage>[]>;
    vmProperties?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigVmProperty>[]>;
}

export interface NdbScaleDatabaseInfoBpgConfigBpgDbParam {
    effectiveCacheSize?: pulumi.Input<string>;
    maintenanceWorkMem?: pulumi.Input<string>;
    maxParallelWorkersPerGather?: pulumi.Input<string>;
    maxWorkerProcesses?: pulumi.Input<string>;
    sharedBuffers?: pulumi.Input<string>;
    workMem?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseInfoBpgConfigStorage {
    archiveStorages?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage>[]>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigStorageDataDisk>[]>;
    logDisks?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseInfoBpgConfigStorageLogDisk>[]>;
}

export interface NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage {
    size?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseInfoBpgConfigStorageDataDisk {
    count?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseInfoBpgConfigStorageLogDisk {
    count?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseInfoBpgConfigVmProperty {
    dirtyBackgroundRatio?: pulumi.Input<number>;
    dirtyExpireCentisecs?: pulumi.Input<number>;
    dirtyRatio?: pulumi.Input<number>;
    dirtyWritebackCentisecs?: pulumi.Input<number>;
    nrHugepages?: pulumi.Input<number>;
    overcommitMemory?: pulumi.Input<number>;
    swappiness?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseLcmConfig {
    expiryDetails?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseLcmConfigExpiryDetail>[]>;
    postDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseLcmConfigPostDeleteCommand>[]>;
    preDeleteCommands?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseLcmConfigPreDeleteCommand>[]>;
    refreshDetails?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseLcmConfigRefreshDetail>[]>;
}

export interface NdbScaleDatabaseLcmConfigExpiryDetail {
    deleteDatabase?: pulumi.Input<boolean>;
    deleteTimeMachine?: pulumi.Input<boolean>;
    deleteVm?: pulumi.Input<boolean>;
    effectiveTimestamp?: pulumi.Input<string>;
    expireInDays?: pulumi.Input<number>;
    expiryDateTimezone?: pulumi.Input<string>;
    expiryTimestamp?: pulumi.Input<string>;
    remindBeforeInDays?: pulumi.Input<number>;
    userCreated?: pulumi.Input<boolean>;
}

export interface NdbScaleDatabaseLcmConfigPostDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseLcmConfigPreDeleteCommand {
    command?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseLcmConfigRefreshDetail {
    lastRefreshDate?: pulumi.Input<string>;
    nextRefreshDate?: pulumi.Input<string>;
    refreshDateTimezone?: pulumi.Input<string>;
    refreshInDays?: pulumi.Input<number>;
    refreshInHours?: pulumi.Input<number>;
    refreshInMonths?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseLinkedDatabase {
    /**
     * name of database
     */
    databaseName?: pulumi.Input<string>;
    databaseStatus?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * info of instance
     */
    infos?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseLinkedDatabaseInfo>[]>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * parent database id
     */
    parentDatabaseId?: pulumi.Input<string>;
    parentLinkedDatabaseId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseLinkedDatabaseInfo {
    /**
     * info of instance
     */
    info?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secureInfo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NdbScaleDatabaseProperty {
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTimeMachine {
    accessLevel?: pulumi.Input<string>;
    /**
     * whether instance is cloned or not
     */
    clone?: pulumi.Input<boolean>;
    clones?: pulumi.Input<string>;
    clustered?: pulumi.Input<boolean>;
    database?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    eaStatus?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
     */
    metric?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    /**
     * properties of database created
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineProperty>[]>;
    scheduleId?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineSchedule>[]>;
    scope?: pulumi.Input<string>;
    slaId?: pulumi.Input<string>;
    slaUpdateInProgress?: pulumi.Input<boolean>;
    slaUpdateMetadata?: pulumi.Input<string>;
    slas?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineSla>[]>;
    sourceNxClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of instance
     */
    status?: pulumi.Input<string>;
    /**
     * allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineTag>[]>;
    /**
     * type of database
     */
    type?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTimeMachineProperty {
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTimeMachineSchedule {
    continuousSchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleContinuousSchedule>[]>;
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleDailySchedule>[]>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    globalPolicy?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleMonthlySchedule>[]>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    quartelySchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleQuartelySchedule>[]>;
    referenceCount?: pulumi.Input<number>;
    snapshotTimeOfDays?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay>[]>;
    startTime?: pulumi.Input<string>;
    systemPolicy?: pulumi.Input<boolean>;
    /**
     * timezone on which instance is created xw
     */
    timeZone?: pulumi.Input<string>;
    uniqueName?: pulumi.Input<string>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleWeeklySchedule>[]>;
    yearlySchedules?: pulumi.Input<pulumi.Input<inputs.NdbScaleDatabaseTimeMachineScheduleYearlySchedule>[]>;
}

export interface NdbScaleDatabaseTimeMachineScheduleContinuousSchedule {
    enabled?: pulumi.Input<boolean>;
    logBackupInterval?: pulumi.Input<number>;
    snapshotsPerDay?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseTimeMachineScheduleDailySchedule {
    enabled?: pulumi.Input<boolean>;
}

export interface NdbScaleDatabaseTimeMachineScheduleMonthlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbScaleDatabaseTimeMachineScheduleQuartelySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    startMonth?: pulumi.Input<string>;
    startMonthValue?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay {
    extra?: pulumi.Input<boolean>;
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
    seconds?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseTimeMachineScheduleWeeklySchedule {
    dayOfWeek?: pulumi.Input<string>;
    dayOfWeekValue?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface NdbScaleDatabaseTimeMachineScheduleYearlySchedule {
    dayOfMonth?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    month?: pulumi.Input<string>;
    monthValue?: pulumi.Input<string>;
}

export interface NdbScaleDatabaseTimeMachineSla {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    /**
     * date created for db instance
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified for instance
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of database instance
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of database instance
     */
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

export interface NdbScaleDatabaseTimeMachineTag {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    tagId?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NdbSoftwareVersionProfilePostgresDatabase {
    /**
     * db software notes
     */
    dbSoftwareNotes?: pulumi.Input<string>;
    /**
     * os notes for software profile
     */
    osNotes?: pulumi.Input<string>;
    /**
     * source dbserver id
     */
    sourceDbserverId?: pulumi.Input<string>;
}

export interface NdbSoftwareVersionProfileProperty {
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    /**
     * secure or not
     */
    secure?: pulumi.Input<boolean>;
    /**
     * value of property
     */
    value?: pulumi.Input<string>;
}

export interface NdbSoftwareVersionProfileVersionClusterAssociation {
    /**
     * date created of profile
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * date modified of profile
     */
    dateModified?: pulumi.Input<string>;
    /**
     * nutanix cluster id
     */
    nxClusterId?: pulumi.Input<string>;
    /**
     * version optimized for provisioning
     */
    optimizedForProvisioning?: pulumi.Input<boolean>;
    /**
     * owner id
     */
    ownerId?: pulumi.Input<string>;
    /**
     * profile version id
     */
    profileVersionId?: pulumi.Input<string>;
    /**
     * properties of software profile
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbSoftwareVersionProfileVersionClusterAssociationProperty>[]>;
    /**
     * status of profile. Allowed Values are "deprecated", "published", "unpublished"
     */
    status?: pulumi.Input<string>;
}

export interface NdbSoftwareVersionProfileVersionClusterAssociationProperty {
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    /**
     * secure or not
     */
    secure?: pulumi.Input<boolean>;
    /**
     * value of property
     */
    value?: pulumi.Input<string>;
}

export interface NdbStretchedVlanMetadata {
    gateway?: pulumi.Input<string>;
    subnetMask?: pulumi.Input<string>;
}

export interface NdbStretchedVlanVlansList {
    /**
     * cluster id where network is present
     */
    clusterId?: pulumi.Input<string>;
    /**
     * network id
     */
    id?: pulumi.Input<string>;
    /**
     * network managed by NDB or not
     */
    managed?: pulumi.Input<boolean>;
    /**
     * name for the stretched VLAN
     */
    name?: pulumi.Input<string>;
    /**
     * properties of network
     */
    properties?: pulumi.Input<pulumi.Input<inputs.NdbStretchedVlanVlansListProperty>[]>;
    /**
     * properties map of network
     */
    propertiesMaps?: pulumi.Input<pulumi.Input<inputs.NdbStretchedVlanVlansListPropertiesMap>[]>;
    /**
     * stretched vlan id
     */
    stretchedVlanId?: pulumi.Input<string>;
    /**
     * type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
     */
    type?: pulumi.Input<string>;
}

export interface NdbStretchedVlanVlansListPropertiesMap {
    /**
     * gateway of vlan
     */
    vlanGateway?: pulumi.Input<string>;
    /**
     * primary dns of vlan
     */
    vlanPrimaryDns?: pulumi.Input<string>;
    /**
     * secondary dns of vlan
     */
    vlanSecondaryDns?: pulumi.Input<string>;
    /**
     * subnet mask of vlan
     */
    vlanSubnetMask?: pulumi.Input<string>;
}

export interface NdbStretchedVlanVlansListProperty {
    /**
     * name for the stretched VLAN
     */
    name?: pulumi.Input<string>;
    secure?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2Rule {
    /**
     * A user defined annotation for a rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleLink>[]>;
    /**
     * Spec for rules.
     */
    specs: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpec>[]>;
    /**
     * The type for a rule—the value chosen here restricts which specification can be chosen. Acceptable values are "QUARANTINE", "TWO_ENV_ISOLATION", "APPLICATION", "INTRA_GROUP".
     */
    type: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2RuleLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2RuleSpec {
    /**
     * Application Rule Spec.
     */
    applicationRuleSpecs?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec>[]>;
    /**
     * Intra entity group Rule Spec
     */
    intraEntityGroupRuleSpecs?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec>[]>;
    /**
     * Multi Environment Isolation Rule Spec.
     */
    multiEnvIsolationRuleSpecs?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec>[]>;
    /**
     * Two Environment Isolation Rule Spec.
     */
    twoEnvIsolationRuleSpecs?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec {
    /**
     * A list of address group references.
     */
    destAddressGroupReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A specification to how allow mode traffic should be applied, either ALL or NONE.
     */
    destAllowSpec?: pulumi.Input<string>;
    /**
     * List of categories that define a set of network endpoints as outbound.
     */
    destCategoryReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * destination subnet value
     */
    destSubnets?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet>[]>;
    /**
     * icmp services
     */
    icmpServices?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService>[]>;
    /**
     * Denotes if rule allows traffic for all protocol.
     */
    isAllProtocolAllowed?: pulumi.Input<boolean>;
    /**
     * A reference to the network function chain in the rule.
     */
    networkFunctionChainReference?: pulumi.Input<string>;
    /**
     * A set of network endpoints which is protected by a Network Security Policy and defined as a list of categories.
     */
    securedGroupCategoryReferences: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of service group references.
     */
    serviceGroupReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of address group references.
     */
    srcAddressGroupReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A specification to how allow mode traffic should be applied, either ALL or NONE.
     */
    srcAllowSpec?: pulumi.Input<string>;
    /**
     * List of categories that define a set of network endpoints as inbound.
     */
    srcCategoryReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * source subnet value
     */
    srcSubnets?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet>[]>;
    /**
     * tcp services
     */
    tcpServices?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService>[]>;
    /**
     * udp services
     */
    udpServices?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService {
    /**
     * Icmp service Code. Ignore this field if Code has to be ANY.
     */
    code?: pulumi.Input<number>;
    /**
     * Set this field to true if both Type and Code is ANY.
     */
    isAllAllowed?: pulumi.Input<boolean>;
    /**
     * Icmp service Type. Ignore this field if Type has to be ANY.
     */
    type?: pulumi.Input<number>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService {
    /**
     * end port
     */
    endPort: pulumi.Input<number>;
    /**
     * start port
     */
    startPort: pulumi.Input<number>;
}

export interface NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService {
    /**
     * end port
     */
    endPort: pulumi.Input<number>;
    /**
     * start port
     */
    startPort: pulumi.Input<number>;
}

export interface NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec {
    /**
     * List of secured group action.
     */
    securedGroupAction?: pulumi.Input<string>;
    /**
     * A specification to whether traffic between intra secured group entities should be allowed or denied.
     */
    securedGroupCategoryReferences?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec {
    /**
     * Multi Environment Isolation Rule Spec.
     */
    specs: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec {
    /**
     * all to all isolation groups
     */
    allToAllIsolationGroups?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup {
    /**
     * Denotes the list of secured groups that will be used in All to All mutual isolation.
     */
    isolationGroups: pulumi.Input<pulumi.Input<inputs.NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup {
    /**
     * External identifiers of categories belonging to the isolation group.
     */
    groupCategoryReferences: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec {
    /**
     * Denotes the first group of category uuids that will be used in an isolation policy.
     */
    firstIsolationGroups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Denotes the second group of category uuids that will be used in an isolation policy.
     */
    secondIsolationGroups: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowList {
    addressGroupInclusionLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList>[]>;
    expirationTime?: pulumi.Input<string>;
    filterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    filterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListFilterParam>[]>;
    filterType?: pulumi.Input<string>;
    icmpTypeCodeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList>[]>;
    ipSubnet?: pulumi.Input<string>;
    ipSubnetPrefixLength?: pulumi.Input<string>;
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    peerSpecificationType?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    serviceGroupLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList>[]>;
    tcpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList>[]>;
    udpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList>[]>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList {
    code?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowList {
    addressGroupInclusionLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList>[]>;
    expirationTime?: pulumi.Input<string>;
    filterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    filterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListFilterParam>[]>;
    filterType?: pulumi.Input<string>;
    icmpTypeCodeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList>[]>;
    ipSubnet?: pulumi.Input<string>;
    ipSubnetPrefixLength?: pulumi.Input<string>;
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    peerSpecificationType?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    serviceGroupLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList>[]>;
    tcpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList>[]>;
    udpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList>[]>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList {
    code?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAdRuleTargetGroupFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowList {
    addressGroupInclusionLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList>[]>;
    expirationTime?: pulumi.Input<string>;
    filterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    filterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListFilterParam>[]>;
    filterType?: pulumi.Input<string>;
    icmpTypeCodeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList>[]>;
    ipSubnet?: pulumi.Input<string>;
    ipSubnetPrefixLength?: pulumi.Input<string>;
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    peerSpecificationType?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    serviceGroupLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList>[]>;
    tcpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList>[]>;
    udpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList>[]>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList {
    code?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowList {
    addressGroupInclusionLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList>[]>;
    expirationTime?: pulumi.Input<string>;
    filterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    filterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListFilterParam>[]>;
    filterType?: pulumi.Input<string>;
    icmpTypeCodeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList>[]>;
    ipSubnet?: pulumi.Input<string>;
    ipSubnetPrefixLength?: pulumi.Input<string>;
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    peerSpecificationType?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    serviceGroupLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList>[]>;
    tcpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList>[]>;
    udpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList>[]>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList {
    code?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface NetworkSecurityRuleAppRuleTargetGroupFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleCategory {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleIsolationRuleFirstEntityFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityRuleIsolationRuleSecondEntityFilterParam {
    /**
     * - (Required) The name for the network_security_rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NgtInstallationV2Credential {
    /**
     * - (Required) password to sign in to server
     */
    password: pulumi.Input<string>;
    /**
     * - (Required) username to sign in to server
     */
    username: pulumi.Input<string>;
}

export interface NgtInstallationV2RebootPreference {
    /**
     * - Restart schedule.
     */
    schedule?: pulumi.Input<inputs.NgtInstallationV2RebootPreferenceSchedule>;
    /**
     * - Schedule type for restart.
     * * `LATER` : Schedule a restart for a specific time.
     * * `SKIP` : Do not schedule a restart.
     * * `IMMEDIATE` : Schedule an immediate restart.
     */
    scheduleType: pulumi.Input<string>;
}

export interface NgtInstallationV2RebootPreferenceSchedule {
    /**
     * - The start time for a scheduled restart.
     */
    startTime: pulumi.Input<string>;
}

export interface NgtUpgradeV2RebootPreference {
    /**
     * - Restart schedule.
     */
    schedule?: pulumi.Input<inputs.NgtUpgradeV2RebootPreferenceSchedule>;
    /**
     * - Schedule type for restart.
     * * `LATER` : Schedule a restart for a specific time.
     * * `SKIP` : Do not schedule a restart.
     * * `IMMEDIATE` : Schedule an immediate restart.
     */
    scheduleType: pulumi.Input<string>;
}

export interface NgtUpgradeV2RebootPreferenceSchedule {
    /**
     * - The start time for a scheduled restart.
     */
    startTime: pulumi.Input<string>;
}

export interface PbrDestination {
    addressType?: pulumi.Input<string>;
    prefixLength?: pulumi.Input<number>;
    subnetIp?: pulumi.Input<string>;
}

export interface PbrProtocolParameters {
    icmp?: pulumi.Input<inputs.PbrProtocolParametersIcmp>;
    protocolNumber?: pulumi.Input<string>;
    tcp?: pulumi.Input<inputs.PbrProtocolParametersTcp>;
    udp?: pulumi.Input<inputs.PbrProtocolParametersUdp>;
}

export interface PbrProtocolParametersIcmp {
    icmpCode: pulumi.Input<number>;
    icmpType: pulumi.Input<number>;
}

export interface PbrProtocolParametersTcp {
    destinationPortRangeLists?: pulumi.Input<pulumi.Input<inputs.PbrProtocolParametersTcpDestinationPortRangeList>[]>;
    sourcePortRangeLists?: pulumi.Input<pulumi.Input<inputs.PbrProtocolParametersTcpSourcePortRangeList>[]>;
}

export interface PbrProtocolParametersTcpDestinationPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface PbrProtocolParametersTcpSourcePortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface PbrProtocolParametersUdp {
    destinationPortRangeLists?: pulumi.Input<pulumi.Input<inputs.PbrProtocolParametersUdpDestinationPortRangeList>[]>;
    sourcePortRangeLists?: pulumi.Input<pulumi.Input<inputs.PbrProtocolParametersUdpSourcePortRangeList>[]>;
}

export interface PbrProtocolParametersUdpDestinationPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface PbrProtocolParametersUdpSourcePortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface PbrSource {
    addressType?: pulumi.Input<string>;
    prefixLength?: pulumi.Input<number>;
    subnetIp?: pulumi.Input<string>;
}

export interface PbrV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface PbrV2Metadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface PbrV2Policy {
    isBidirectional?: pulumi.Input<boolean>;
    policyActions: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyAction>[]>;
    policyMatches: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatch>[]>;
}

export interface PbrV2PolicyPolicyAction {
    actionType: pulumi.Input<string>;
    nexthopIpAddresses?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionNexthopIpAddress>[]>;
    rerouteParams?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParam>[]>;
}

export interface PbrV2PolicyPolicyActionNexthopIpAddress {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionNexthopIpAddressIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionNexthopIpAddressIpv6>[]>;
}

export interface PbrV2PolicyPolicyActionNexthopIpAddressIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionNexthopIpAddressIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParam {
    egressServiceIps?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamEgressServiceIp>[]>;
    ingressServiceIps?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamIngressServiceIp>[]>;
    rerouteFallbackAction?: pulumi.Input<string>;
    serviceIps?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamServiceIp>[]>;
}

export interface PbrV2PolicyPolicyActionRerouteParamEgressServiceIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6>[]>;
}

export interface PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParamIngressServiceIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6>[]>;
}

export interface PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParamServiceIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6>[]>;
}

export interface PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyMatch {
    destinations: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestination>[]>;
    protocolParameters?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameter>[]>;
    protocolType: pulumi.Input<string>;
    sources: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSource>[]>;
}

export interface PbrV2PolicyPolicyMatchDestination {
    addressType: pulumi.Input<string>;
    subnetPrefixes?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestinationSubnetPrefix>[]>;
}

export interface PbrV2PolicyPolicyMatchDestinationSubnetPrefix {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6>[]>;
}

export interface PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameter {
    icmpObjects?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameterIcmpObject>[]>;
    layerFourProtocolObjects?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject>[]>;
    protocolNumberObjects?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject>[]>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameterIcmpObject {
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject {
    destinationPortRanges?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange>[]>;
    sourcePortRanges?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange>[]>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange {
    endPort: pulumi.Input<number>;
    startPort: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange {
    endPort: pulumi.Input<number>;
    startPort: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject {
    protocolNumber: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchSource {
    addressType: pulumi.Input<string>;
    subnetPrefixes?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSourceSubnetPrefix>[]>;
}

export interface PbrV2PolicyPolicyMatchSourceSubnetPrefix {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6>[]>;
}

export interface PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface PbrV2Vpc {
    name?: pulumi.Input<string>;
}

export interface PcBackupTargetV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface PcBackupTargetV2Location {
    /**
     * -(Optional) A boolean value indicating whether to enable lockdown mode for a cluster.
     */
    clusterLocations?: pulumi.Input<pulumi.Input<inputs.PcBackupTargetV2LocationClusterLocation>[]>;
    /**
     * -(Optional) Currently representing the build information to be used for the cluster creation.
     */
    objectStoreLocations?: pulumi.Input<pulumi.Input<inputs.PcBackupTargetV2LocationObjectStoreLocation>[]>;
}

export interface PcBackupTargetV2LocationClusterLocation {
    /**
     * -(Required) Cluster reference of the remote cluster to be connected.
     */
    configs: pulumi.Input<pulumi.Input<inputs.PcBackupTargetV2LocationClusterLocationConfig>[]>;
}

export interface PcBackupTargetV2LocationClusterLocationConfig {
    /**
     * -(Required) Cluster UUID of a remote cluster.
     */
    extId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface PcBackupTargetV2LocationObjectStoreLocation {
    /**
     * -(Optional) Backup policy for the object store provided.
     */
    backupPolicies?: pulumi.Input<pulumi.Input<inputs.PcBackupTargetV2LocationObjectStoreLocationBackupPolicy>[]>;
    /**
     * -(Required) The base model of S3 object store endpoint where domain manager is backed up.
     */
    providerConfigs: pulumi.Input<pulumi.Input<inputs.PcBackupTargetV2LocationObjectStoreLocationProviderConfig>[]>;
}

export interface PcBackupTargetV2LocationObjectStoreLocationBackupPolicy {
    /**
     * -(Required) RPO interval in minutes at which the backup will be taken. The Value should be in the range of 60 to 1440.
     *
     * See detailed information in [Nutanix Create Backup Target V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createBackupTarget).
     */
    rpoInMinutes: pulumi.Input<number>;
}

export interface PcBackupTargetV2LocationObjectStoreLocationProviderConfig {
    /**
     * -(Required) The bucket name of the object store endpoint where backup data of domain manager is to be stored.
     */
    bucketName: pulumi.Input<string>;
    /**
     * -(Optional) Secret credentials model for the object store containing access key ID and secret access key.
     */
    credentials?: pulumi.Input<inputs.PcBackupTargetV2LocationObjectStoreLocationProviderConfigCredentials>;
    /**
     * -(Optional) The region name of the object store endpoint where backup data of domain manager is stored. Default is `us-east-1`.
     */
    region?: pulumi.Input<string>;
}

export interface PcBackupTargetV2LocationObjectStoreLocationProviderConfigCredentials {
    /**
     * -(Required) Access key ID for the object store provided for backup target.
     */
    accessKeyId: pulumi.Input<string>;
    /**
     * -(Required) Secret access key for the object store provided for backup target.
     */
    secretAccessKey: pulumi.Input<string>;
}

export interface PcDeployV2Config {
    /**
     * - (Optional) Bootstrap configuration details for the domain manager (Prism Central).
     */
    bootstrapConfig?: pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfig>;
    /**
     * -(Required) Currently representing the build information to be used for the cluster creation.
     */
    buildInfo: pulumi.Input<inputs.PcDeployV2ConfigBuildInfo>;
    /**
     * - (Optional) The credentials consist of a username and password for a particular user like admin. Users can pass the credentials of admin users currently which will be configured in the create domain manager operation.
     */
    credentials?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigCredential>[]>;
    /**
     * -(Required) Name of the domain manager (Prism Central).
     */
    name: pulumi.Input<string>;
    /**
     * -(Optional) This configuration is used to provide the resource-related details like container external identifiers, number of VCPUs, memory size, data disk size of the domain manager (Prism Central). In the case of a multi-node setup, the sum of resources like number of VCPUs, memory size and data disk size are provided.
     */
    resourceConfigs?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigResourceConfig>[]>;
    /**
     * -(Optional) A boolean value indicating whether to enable lockdown mode for a cluster.
     */
    shouldEnableLockdownMode?: pulumi.Input<boolean>;
    /**
     * - (Required) Domain manager (Prism Central) size is an enumeration of starter, small, large, or extra large starter values. The allowed values are:
     * - `SMALL` : Domain manager (Prism Central) of size small.
     * - `LARGE` : Domain manager (Prism Central) of size large.
     * - `EXTRALARGE` : Domain manager (Prism Central) of size extra large.
     * - `STARTER` : Domain manager (Prism Central) of size starter.
     */
    size: pulumi.Input<string>;
}

export interface PcDeployV2ConfigBootstrapConfig {
    /**
     * -(Optional) Cloud-init configuration for the domain manager (Prism Central) cluster.
     */
    cloudInitConfigs?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfig>[]>;
    /**
     * -(Optional) Environment information for the domain manager (Prism Central) cluster.
     */
    environmentInfo?: pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigEnvironmentInfo>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfig {
    /**
     * -(Optional) The script to use for cloud-init.
     * - `cloud_init_script.user_data`: -(Optional) user data object
     * - `cloud_init_script.custom_keys`: -(Optional) The list of the individual KeyValuePair elements.
     */
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScript>[]>;
    /**
     * -(Optional) Type of datasource. Default: CONFIG_DRIVE_V2
     */
    datasourceType?: pulumi.Input<string>;
    /**
     * -(Optional)The contents of the metaData configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded. Default value is 'CONFIG_DRIVE_V2'.
     */
    metadata?: pulumi.Input<string>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData>[]>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair {
    /**
     * -(Required) Name of the domain manager (Prism Central).
     */
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface PcDeployV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface PcDeployV2ConfigBootstrapConfigEnvironmentInfo {
    /**
     * -(Optional) Enums denoting the provider type of the PC, that is, AHV or ESXi.
     * Following are the supported provider types:
     * - `VSPHERE` : Vsphere cloud provider.
     * - `AZURE` : Azure cloud provider.
     * - `NTNX` : Nutanix cloud provider.
     * - `GCP` : GCP cloud provider.
     * - `AWS` : AWS cloud provider.
     */
    providerType?: pulumi.Input<string>;
    /**
     * -(Optional) Enums denoting the instance type of the cloud PC. It indicates whether the PC is created on bare-metal or on a cloud-provisioned VM. Hence, it supports two possible values:
     * - `NTNX` : Nutanix instance.
     * - `NATIVE` : Native instance.
     */
    provisioningType?: pulumi.Input<string>;
    /**
     * -(Optional) Enums denoting the environment type of the PC, that is, on-prem PC or cloud PC.
     * Following are the supported entity types:
     * - `ONPREM` : On-prem environment.
     * - `NTNX_CLOUD` : Nutanix cloud environment.
     */
    type?: pulumi.Input<string>;
}

export interface PcDeployV2ConfigBuildInfo {
    /**
     * -(Required) Software version.
     */
    version?: pulumi.Input<string>;
}

export interface PcDeployV2ConfigCredential {
    /**
     * -(Required) Password required for the basic auth scheme.
     */
    password: pulumi.Input<string>;
    /**
     * -(Required) Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
     */
    username: pulumi.Input<string>;
}

export interface PcDeployV2ConfigResourceConfig {
    /**
     * -(Optional) The external identifier of the container that will be used to create the domain manager (Prism Central) cluster.
     */
    containerExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    dataDiskSizeBytes?: pulumi.Input<number>;
    memorySizeBytes?: pulumi.Input<number>;
    numVcpus?: pulumi.Input<number>;
}

export interface PcDeployV2Network {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    externalAddress?: pulumi.Input<inputs.PcDeployV2NetworkExternalAddress>;
    /**
     * -(Required) This configuration is used to manage Prism Central.
     */
    externalNetworks?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetwork>[]>;
    fqdn?: pulumi.Input<string>;
    /**
     * -(Required) This configuration is used to internally manage Prism Central network.
     */
    internalNetworks?: pulumi.Input<inputs.PcDeployV2NetworkInternalNetworks>;
    /**
     * -(Required) List of name servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    nameServers: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNameServer>[]>;
    /**
     * -(Required) List of NTP servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    ntpServers: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNtpServer>[]>;
}

export interface PcDeployV2NetworkExternalAddress {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalAddressIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalAddressIpv6>[]>;
}

export interface PcDeployV2NetworkExternalAddressIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalAddressIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetwork {
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    defaultGateway: pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkDefaultGateway>;
    /**
     * -(Required) Range of IPs used for Prism Central network setup.
     */
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRange>[]>;
    /**
     * -(Required) The network external identifier to which Domain Manager (Prism Central) is to be deployed or is already configured.
     */
    networkExtId: pulumi.Input<string>;
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    subnetMask: pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkSubnetMask>;
}

export interface PcDeployV2NetworkExternalNetworkDefaultGateway {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkDefaultGatewayFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkDefaultGatewayIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkDefaultGatewayIpv6>[]>;
}

export interface PcDeployV2NetworkExternalNetworkDefaultGatewayFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkDefaultGatewayIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkDefaultGatewayIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkIpRange {
    /**
     * -(Optional) The beginning IP address of the range.
     */
    begin?: pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeBegin>;
    /**
     * -(Optional) The ending IP address of the range.
     */
    end?: pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeEnd>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeBegin {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeBeginIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeBeginIpv6>[]>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeBeginIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeBeginIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeEnd {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeEndIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkIpRangeEndIpv6>[]>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeEndIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkIpRangeEndIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkSubnetMask {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkSubnetMaskFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkSubnetMaskIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkExternalNetworkSubnetMaskIpv6>[]>;
}

export interface PcDeployV2NetworkExternalNetworkSubnetMaskFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkSubnetMaskIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkExternalNetworkSubnetMaskIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworks {
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    defaultGateway: pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksDefaultGateway>;
    /**
     * -(Required) Range of IPs used for Prism Central network setup.
     */
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRange>[]>;
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    subnetMask: pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksSubnetMask>;
}

export interface PcDeployV2NetworkInternalNetworksDefaultGateway {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksDefaultGatewayFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksDefaultGatewayIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksDefaultGatewayIpv6>[]>;
}

export interface PcDeployV2NetworkInternalNetworksDefaultGatewayFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksDefaultGatewayIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksDefaultGatewayIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksIpRange {
    /**
     * -(Optional) The beginning IP address of the range.
     */
    begin?: pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeBegin>;
    /**
     * -(Optional) The ending IP address of the range.
     */
    end?: pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeEnd>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeBegin {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeBeginIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeBeginIpv6>[]>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeBeginIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeBeginIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeEnd {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeEndIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksIpRangeEndIpv6>[]>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeEndIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksIpRangeEndIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksSubnetMask {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksSubnetMaskFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksSubnetMaskIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkInternalNetworksSubnetMaskIpv6>[]>;
}

export interface PcDeployV2NetworkInternalNetworksSubnetMaskFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksSubnetMaskIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkInternalNetworksSubnetMaskIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNameServer {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNameServerFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNameServerIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNameServerIpv6>[]>;
}

export interface PcDeployV2NetworkNameServerFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNameServerIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNameServerIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNtpServer {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNtpServerFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNtpServerIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcDeployV2NetworkNtpServerIpv6>[]>;
}

export interface PcDeployV2NetworkNtpServerFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Deploy PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createDomainManager).
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNtpServerIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcDeployV2NetworkNtpServerIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2Config {
    bootstrapConfig?: pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfig>;
    buildInfo: pulumi.Input<inputs.PcRegistrationV2ConfigBuildInfo>;
    /**
     * -(Required)  Credentials to connect to a remote cluster.
     */
    credentials?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigCredential>[]>;
    name: pulumi.Input<string>;
    resourceConfigs?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigResourceConfig>[]>;
    shouldEnableLockdownMode?: pulumi.Input<boolean>;
    size: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigBootstrapConfig {
    cloudInitConfigs?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfig>[]>;
    environmentInfo?: pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfig {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData>[]>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface PcRegistrationV2ConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo {
    providerType?: pulumi.Input<string>;
    provisioningType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigBuildInfo {
    version?: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigCredential {
    /**
     * -(Required)  Password required for the basic auth scheme.
     *
     * See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
     */
    password: pulumi.Input<string>;
    /**
     * -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
     */
    username: pulumi.Input<string>;
}

export interface PcRegistrationV2ConfigResourceConfig {
    containerExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    dataDiskSizeBytes?: pulumi.Input<number>;
    memorySizeBytes?: pulumi.Input<number>;
    numVcpus?: pulumi.Input<number>;
}

export interface PcRegistrationV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface PcRegistrationV2Network {
    externalAddress?: pulumi.Input<inputs.PcRegistrationV2NetworkExternalAddress>;
    externalNetworks?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetwork>[]>;
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdn?: pulumi.Input<string>;
    internalNetworks?: pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworks>;
    nameServers: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNameServer>[]>;
    ntpServers: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNtpServer>[]>;
}

export interface PcRegistrationV2NetworkExternalAddress {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalAddressIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalAddressIpv6>[]>;
}

export interface PcRegistrationV2NetworkExternalAddressIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalAddressIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetwork {
    defaultGateway: pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkDefaultGateway>;
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRange>[]>;
    networkExtId: pulumi.Input<string>;
    subnetMask: pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkSubnetMask>;
}

export interface PcRegistrationV2NetworkExternalNetworkDefaultGateway {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6>[]>;
}

export interface PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRange {
    begin?: pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeBegin>;
    end?: pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeEnd>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeBegin {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6>[]>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeEnd {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6>[]>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkSubnetMask {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6>[]>;
}

export interface PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworks {
    defaultGateway: pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksDefaultGateway>;
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRange>[]>;
    subnetMask: pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksSubnetMask>;
}

export interface PcRegistrationV2NetworkInternalNetworksDefaultGateway {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksDefaultGatewayFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksDefaultGatewayIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksDefaultGatewayIpv6>[]>;
}

export interface PcRegistrationV2NetworkInternalNetworksDefaultGatewayFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksDefaultGatewayIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksDefaultGatewayIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRange {
    begin?: pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeBegin>;
    end?: pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeEnd>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeBegin {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeBeginIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeBeginIpv6>[]>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeBeginIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeBeginIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeEnd {
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeEndIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksIpRangeEndIpv6>[]>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeEndIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksIpRangeEndIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksSubnetMask {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksSubnetMaskFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksSubnetMaskIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkInternalNetworksSubnetMaskIpv6>[]>;
}

export interface PcRegistrationV2NetworkInternalNetworksSubnetMaskFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksSubnetMaskIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkInternalNetworksSubnetMaskIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNameServer {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNameServerFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNameServerIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNameServerIpv6>[]>;
}

export interface PcRegistrationV2NetworkNameServerFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNameServerIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNameServerIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNtpServer {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNtpServerFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNtpServerIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2NetworkNtpServerIpv6>[]>;
}

export interface PcRegistrationV2NetworkNtpServerFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNtpServerIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2NetworkNtpServerIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteCluster {
    /**
     * - The registration request consists of the remote cluster details.
     */
    aosRemoteClusterSpec?: pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpec>;
    /**
     * - The registration request consists of the remote cluster details. using the cluster reference.
     */
    clusterReference?: pulumi.Input<inputs.PcRegistrationV2RemoteClusterClusterReference>;
    /**
     * - The registration request consists of the remote cluster details. and cloud type.
     */
    domainManagerRemoteClusterSpec?: pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpec {
    /**
     * -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
     */
    remoteCluster: pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster {
    /**
     * -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    addresses: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress>[]>;
    /**
     * -(Required)  Credentials to connect to a remote cluster.
     */
    credentials: pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6>[]>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials {
    /**
     * -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
     */
    authentication: pulumi.Input<inputs.PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication>;
}

export interface PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication {
    /**
     * -(Required)  Password required for the basic auth scheme.
     *
     * See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
     */
    password: pulumi.Input<string>;
    /**
     * -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
     */
    username: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterClusterReference {
    /**
     * -(Required)  Cluster UUID of a remote cluster.
     */
    extId: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec {
    /**
     * -(Required)  Enum denoting whether the domain manager (Prism Central) instance is reachable with its physical address or reachable through the My Nutanix portal. Based on the above description, the allowed enum values are:
     * * `NUTANIX_HOSTED_CLOUD` : Domain manager (Prism Central) reachable through My Nutanix portal.
     * * `ONPREM_CLOUD`: Domain manager (Prism Central) reachable on it's physical address.
     */
    cloudType: pulumi.Input<string>;
    /**
     * -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
     */
    remoteCluster: pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster {
    /**
     * -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    addresses: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress>[]>;
    /**
     * -(Required)  Credentials to connect to a remote cluster.
     */
    credentials: pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress {
    /**
     * - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4>[]>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6>[]>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn {
    /**
     * - The fully qualified domain name of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
     */
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6 {
    /**
     * - The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials {
    /**
     * -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
     */
    authentication: pulumi.Input<inputs.PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication>;
}

export interface PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication {
    /**
     * -(Required)  Password required for the basic auth scheme.
     *
     * See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
     */
    password: pulumi.Input<string>;
    /**
     * -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
     */
    username: pulumi.Input<string>;
}

export interface PcRestoreSourceV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface PcRestoreSourceV2Location {
    /**
     * -(Optional) A boolean value indicating whether to enable lockdown mode for a cluster.
     */
    clusterLocations?: pulumi.Input<pulumi.Input<inputs.PcRestoreSourceV2LocationClusterLocation>[]>;
    /**
     * -(Optional) Currently representing the build information to be used for the cluster creation.
     */
    objectStoreLocations?: pulumi.Input<pulumi.Input<inputs.PcRestoreSourceV2LocationObjectStoreLocation>[]>;
}

export interface PcRestoreSourceV2LocationClusterLocation {
    /**
     * -(Required) Cluster reference of the remote cluster to be connected.
     */
    configs: pulumi.Input<pulumi.Input<inputs.PcRestoreSourceV2LocationClusterLocationConfig>[]>;
}

export interface PcRestoreSourceV2LocationClusterLocationConfig {
    /**
     * -(Required) Cluster UUID of a remote cluster.
     */
    extId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface PcRestoreSourceV2LocationObjectStoreLocation {
    /**
     * -(Optional) Backup policy for the object store provided.
     */
    backupPolicies?: pulumi.Input<pulumi.Input<inputs.PcRestoreSourceV2LocationObjectStoreLocationBackupPolicy>[]>;
    /**
     * -(Required) The base model of S3 object store endpoint where domain manager is backed up.
     */
    providerConfigs: pulumi.Input<pulumi.Input<inputs.PcRestoreSourceV2LocationObjectStoreLocationProviderConfig>[]>;
}

export interface PcRestoreSourceV2LocationObjectStoreLocationBackupPolicy {
    /**
     * -(Required) RPO interval in minutes at which the backup will be taken. The Value should be in the range of 60 to 1440.
     *
     * See detailed information in [Nutanix Restore Source V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/createRestoreSource).
     */
    rpoInMinutes: pulumi.Input<number>;
}

export interface PcRestoreSourceV2LocationObjectStoreLocationProviderConfig {
    /**
     * -(Required) The bucket name of the object store endpoint where backup data of domain manager is to be stored.
     */
    bucketName: pulumi.Input<string>;
    /**
     * -(Optional) Secret credentials model for the object store containing access key ID and secret access key.
     */
    credentials?: pulumi.Input<inputs.PcRestoreSourceV2LocationObjectStoreLocationProviderConfigCredentials>;
    /**
     * -(Optional) The region name of the object store endpoint where backup data of domain manager is stored. Default is `us-east-1`.
     */
    region?: pulumi.Input<string>;
}

export interface PcRestoreSourceV2LocationObjectStoreLocationProviderConfigCredentials {
    /**
     * -(Required) Access key ID for the object store provided for backup target.
     */
    accessKeyId: pulumi.Input<string>;
    /**
     * -(Required) Secret access key for the object store provided for backup target.
     */
    secretAccessKey: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManager {
    /**
     * -(Required) Domain manager (Prism Central) cluster configuration details.
     */
    configs: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfig>[]>;
    hostingClusterExtId?: pulumi.Input<string>;
    isRegisteredWithHostingCluster?: pulumi.Input<boolean>;
    /**
     * -(Required) Domain manager (Prism Central) network configuration details.
     */
    networks: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetwork>[]>;
    nodeExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * -(Optional) This configuration enables Prism Central to be deployed in scale-out mode. Default is `false`.
     */
    shouldEnableHighAvailability?: pulumi.Input<boolean>;
}

export interface PcRestoreV2DomainManagerConfig {
    /**
     * - (Optional) Bootstrap configuration details for the domain manager (Prism Central).
     */
    bootstrapConfig?: pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfig>;
    /**
     * -(Required) Currently representing the build information to be used for the cluster creation.
     */
    buildInfo: pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBuildInfo>;
    /**
     * - (Optional) The credentials consist of a username and password for a particular user like admin. Users can pass the credentials of admin users currently which will be configured in the create domain manager operation.
     */
    credentials?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigCredential>[]>;
    /**
     * -(Required) Name of the domain manager (Prism Central).
     */
    name: pulumi.Input<string>;
    /**
     * -(Optional) This configuration is used to provide the resource-related details like container external identifiers, number of VCPUs, memory size, data disk size of the domain manager (Prism Central). In the case of a multi-node setup, the sum of resources like number of VCPUs, memory size and data disk size are provided.
     */
    resourceConfigs?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigResourceConfig>[]>;
    /**
     * -(Optional) A boolean value indicating whether to enable lockdown mode for a cluster.
     */
    shouldEnableLockdownMode?: pulumi.Input<boolean>;
    /**
     * - (Required) Domain manager (Prism Central) size is an enumeration of starter, small, large, or extra large starter values. The allowed values are:
     * - `SMALL` : Domain manager (Prism Central) of size small.
     * - `LARGE` : Domain manager (Prism Central) of size large.
     * - `EXTRALARGE` : Domain manager (Prism Central) of size extra large.
     * - `STARTER` : Domain manager (Prism Central) of size starter.
     */
    size: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfig {
    /**
     * -(Optional) Cloud-init configuration for the domain manager (Prism Central) cluster.
     */
    cloudInitConfigs?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfig>[]>;
    /**
     * -(Optional) Environment information for the domain manager (Prism Central) cluster.
     */
    environmentInfo?: pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigEnvironmentInfo>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfig {
    /**
     * -(Optional) The script to use for cloud-init.
     * - `cloud_init_script.user_data`: -(Optional) user data object
     * - `cloud_init_script.custom_keys`: -(Optional) The list of the individual KeyValuePair elements.
     */
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScript>[]>;
    /**
     * -(Optional) Type of datasource. Default: CONFIG_DRIVE_V2
     */
    datasourceType?: pulumi.Input<string>;
    /**
     * -(Optional)The contents of the metaData configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded. Default value is 'CONFIG_DRIVE_V2'.
     */
    metadata?: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData>[]>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePair {
    /**
     * -(Required) Name of the domain manager (Prism Central).
     */
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigCloudInitConfigCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigBootstrapConfigEnvironmentInfo {
    /**
     * -(Optional) Enums denoting the provider type of the PC, that is, AHV or ESXi.
     * Following are the supported provider types:
     * - `VSPHERE` : Vsphere cloud provider.
     * - `AZURE` : Azure cloud provider.
     * - `NTNX` : Nutanix cloud provider.
     * - `GCP` : GCP cloud provider.
     * - `AWS` : AWS cloud provider.
     */
    providerType?: pulumi.Input<string>;
    /**
     * -(Optional) Enums denoting the instance type of the cloud PC. It indicates whether the PC is created on bare-metal or on a cloud-provisioned VM. Hence, it supports two possible values:
     * - `NTNX` : Nutanix instance.
     * - `NATIVE` : Native instance.
     */
    provisioningType?: pulumi.Input<string>;
    /**
     * -(Optional) Enums denoting the environment type of the PC, that is, on-prem PC or cloud PC.
     * Following are the supported entity types:
     * - `ONPREM` : On-prem environment.
     * - `NTNX_CLOUD` : Nutanix cloud environment.
     */
    type?: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigBuildInfo {
    /**
     * -(Optional) Software version.
     */
    version?: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigCredential {
    /**
     * -(Required) Password required for the basic auth scheme.
     */
    password: pulumi.Input<string>;
    /**
     * -(Required) Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
     */
    username: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerConfigResourceConfig {
    /**
     * -(Optional) The external identifier of the container that will be used to create the domain manager (Prism Central) cluster.
     */
    containerExtIds?: pulumi.Input<pulumi.Input<string>[]>;
    dataDiskSizeBytes?: pulumi.Input<number>;
    memorySizeBytes?: pulumi.Input<number>;
    numVcpus?: pulumi.Input<number>;
}

export interface PcRestoreV2DomainManagerNetwork {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
     */
    externalAddress?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalAddress>;
    /**
     * -(Required) This configuration is used to manage Prism Central.
     */
    externalNetworks?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetwork>[]>;
    fqdn?: pulumi.Input<string>;
    /**
     * -(Required) This configuration is used to internally manage Prism Central network.
     */
    internalNetworks?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworks>;
    /**
     * -(Required) List of name servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    nameServers: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNameServer>[]>;
    /**
     * -(Required) List of NTP servers on a cluster. This is part of payload for both cluster create & update operations. For create operation, only ipv4 address / fqdn values are supported currently.
     */
    ntpServers: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNtpServer>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalAddress {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalAddressIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalAddressIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalAddressIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalAddressIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetwork {
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    defaultGateway: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGateway>;
    /**
     * -(Required) Range of IPs used for Prism Central network setup.
     */
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRange>[]>;
    /**
     * -(Required) The network external identifier to which Domain Manager (Prism Central) is to be deployed or is already configured.
     */
    networkExtId: pulumi.Input<string>;
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    subnetMask: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMask>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGateway {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkDefaultGatewayIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRange {
    /**
     * -(Optional) The beginning IP address of the range.
     */
    begin?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBegin>;
    /**
     * -(Optional) The ending IP address of the range.
     */
    end?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEnd>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBegin {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBeginIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBeginIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBeginIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeBeginIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEnd {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEndIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEndIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEndIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkIpRangeEndIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMask {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkExternalNetworkSubnetMaskIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworks {
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    defaultGateway: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGateway>;
    /**
     * -(Required) Range of IPs used for Prism Central network setup.
     */
    ipRanges: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRange>[]>;
    /**
     * -(Required) An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    subnetMask: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMask>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGateway {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksDefaultGatewayIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRange {
    /**
     * -(Optional) The beginning IP address of the range.
     */
    begin?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBegin>;
    /**
     * -(Optional) The ending IP address of the range.
     */
    end?: pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEnd>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBegin {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBeginIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBeginIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBeginIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeBeginIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEnd {
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEndIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEndIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEndIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksIpRangeEndIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMask {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkInternalNetworksSubnetMaskIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNameServer {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNameServerFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNameServerIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNameServerIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkNameServerFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNameServerIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNameServerIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNtpServer {
    /**
     * -(Optional) A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNtpServerFqdn>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNtpServerIpv4>[]>;
    /**
     * -(Optional) An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.PcRestoreV2DomainManagerNetworkNtpServerIpv6>[]>;
}

export interface PcRestoreV2DomainManagerNetworkNtpServerFqdn {
    /**
     * -(Optional) The fully qualified domain name of the host.
     *
     * See detailed information in [Nutanix Restore PC V4](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/restore).
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNtpServerIpv4 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface PcRestoreV2DomainManagerNetworkNtpServerIpv6 {
    /**
     * -(Optional) The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * -(Required) The IPv4/IPv6 address of the host.
     */
    value: pulumi.Input<string>;
}

export interface ProjectAccountReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAcp {
    /**
     * The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
     */
    contextFilterLists?: pulumi.Input<pulumi.Input<inputs.ProjectAcpContextFilterList>[]>;
    /**
     * A description for project.
     */
    description?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to role.
     */
    roleReference: pulumi.Input<inputs.ProjectAcpRoleReference>;
    /**
     * List of Reference of users groups.
     */
    userGroupReferenceLists?: pulumi.Input<pulumi.Input<inputs.ProjectAcpUserGroupReferenceList>[]>;
    /**
     * List of Reference of users.
     */
    userReferenceLists?: pulumi.Input<pulumi.Input<inputs.ProjectAcpUserReferenceList>[]>;
}

export interface ProjectAcpContextFilterList {
    /**
     * (Required) A list of Entity filter expressions.
     */
    entityFilterExpressionLists: pulumi.Input<pulumi.Input<inputs.ProjectAcpContextFilterListEntityFilterExpressionList>[]>;
    /**
     * - (Optional) Filter the scope of an Access Control Policy.
     */
    scopeFilterExpressionLists?: pulumi.Input<pulumi.Input<inputs.ProjectAcpContextFilterListScopeFilterExpressionList>[]>;
}

export interface ProjectAcpContextFilterListEntityFilterExpressionList {
    /**
     * - (Optional)  The LHS of the filter expression - the entity type.
     */
    leftHandSideEntityType?: pulumi.Input<string>;
    /**
     * - (Required) The operator in the filter expression.
     */
    operator: pulumi.Input<string>;
    /**
     * - (Required) The right hand side (RHS) of an scope expression.
     */
    rightHandSide: pulumi.Input<inputs.ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide>;
}

export interface ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide {
    /**
     * - (Optional) The category values represented as a dictionary of key > list of values.
     */
    categories?: pulumi.Input<inputs.ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories>;
    /**
     * - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
     */
    collection?: pulumi.Input<string>;
    /**
     * - (Optional) The explicit list of UUIDs for the given kind.
     */
    uuidLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAcpContextFilterListScopeFilterExpressionList {
    /**
     * - (Optional)  The LHS of the filter expression - the scope type.
     */
    leftHandSide: pulumi.Input<string>;
    /**
     * - (Required) The operator in the filter expression.
     */
    operator: pulumi.Input<string>;
    /**
     * - (Required) The right hand side (RHS) of an scope expression.
     */
    rightHandSide: pulumi.Input<inputs.ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide>;
}

export interface ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide {
    /**
     * - (Optional) The category values represented as a dictionary of key > list of values.
     */
    categories?: pulumi.Input<inputs.ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories>;
    /**
     * - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
     */
    collection?: pulumi.Input<string>;
    /**
     * - (Optional) The explicit list of UUIDs for the given kind.
     */
    uuidLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAcpRoleReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAcpUserGroupReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAcpUserReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectCategory {
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface ProjectClusterReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectDefaultEnvironmentReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectDefaultSubnetReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectEnvironmentReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectExternalNetworkList {
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectExternalUserGroupReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectResourceDomain {
    resources: pulumi.Input<pulumi.Input<inputs.ProjectResourceDomainResource>[]>;
}

export interface ProjectResourceDomainResource {
    limit: pulumi.Input<number>;
    resourceType: pulumi.Input<string>;
    units?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<number>;
}

export interface ProjectSubnetReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectTunnelReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectUserGroupList {
    directoryServiceOus?: pulumi.Input<pulumi.Input<inputs.ProjectUserGroupListDirectoryServiceOus>[]>;
    directoryServiceUserGroups?: pulumi.Input<pulumi.Input<inputs.ProjectUserGroupListDirectoryServiceUserGroup>[]>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    samlUserGroups?: pulumi.Input<pulumi.Input<inputs.ProjectUserGroupListSamlUserGroup>[]>;
}

export interface ProjectUserGroupListDirectoryServiceOus {
    distinguishedName: pulumi.Input<string>;
}

export interface ProjectUserGroupListDirectoryServiceUserGroup {
    distinguishedName: pulumi.Input<string>;
}

export interface ProjectUserGroupListSamlUserGroup {
    idpUuid: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name: pulumi.Input<string>;
}

export interface ProjectUserList {
    directoryServiceUser?: pulumi.Input<inputs.ProjectUserListDirectoryServiceUser>;
    identityProviderUser?: pulumi.Input<inputs.ProjectUserListIdentityProviderUser>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectUserListDirectoryServiceUser {
    defaultUserPrincipalName?: pulumi.Input<string>;
    directoryServiceReference: pulumi.Input<inputs.ProjectUserListDirectoryServiceUserDirectoryServiceReference>;
    userPrincipalName?: pulumi.Input<string>;
}

export interface ProjectUserListDirectoryServiceUserDirectoryServiceReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectUserListIdentityProviderUser {
    identityProviderReference: pulumi.Input<inputs.ProjectUserListIdentityProviderUserIdentityProviderReference>;
    username?: pulumi.Input<string>;
}

export interface ProjectUserListIdentityProviderUserIdentityProviderReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectUserReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectVpcReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the project.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface ProtectionPolicyV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface ProtectionPolicyV2ReplicationConfiguration {
    /**
     * -(Optional) Label of the source location from the replication locations list, where the entity will be replicated.
     */
    remoteLocationLabel?: pulumi.Input<string>;
    /**
     * -(Required) Schedule for protection. The schedule specifies the recovery point objective and the retention policy for the participating locations.
     */
    schedule: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationSchedule>;
    /**
     * -(Required) Label of the source location from the replication locations list, where the entity is running. The location of type MST can not be specified as the replication source.
     */
    sourceLocationLabel: pulumi.Input<string>;
}

export interface ProtectionPolicyV2ReplicationConfigurationSchedule {
    /**
     * -(Required) The Recovery point objective of the schedule in seconds and specified in multiple of 60 seconds. Only following RPO values can be provided for rollup retention type:
     * - Minute(s): 1, 2, 3, 4, 5, 6, 10, 12, 15
     * - Hour(s): 1, 2, 3, 4, 6, 8, 12
     * - Day(s): 1
     * - Week(s): 1, 2
     */
    recoveryPointObjectiveTimeSeconds?: pulumi.Input<number>;
    /**
     * -(Optional) Type of recovery point.
     * * `CRASH_CONSISTENT`: Crash-consistent Recovery points capture all the VM and application level details.
     * * `APP_CONSISTENT`: Application-consistent Recovery points can capture all the data stored in the memory and also the in-progress transaction details.
     */
    recoveryPointType?: pulumi.Input<string>;
    /**
     * -(Optional) Specifies the retention policy for the recovery point schedule.
     */
    retention?: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationScheduleRetention>;
    /**
     * -(Optional) Represents the protection start time for the new entities added to the policy after the policy is created in h:m format. The values must be between 00h:00m and 23h:59m and in UTC timezone. It specifies the time when the first snapshot is taken and replicated for any entity added to the policy. If this is not specified, the snapshot is taken immediately and replicated for any new entity added to the policy.
     */
    startTime?: pulumi.Input<string>;
    /**
     * -(Optional) Auto suspend timeout if there is a connection failure between locations for synchronous replication. If this value is not set, then the policy will not be suspended.
     */
    syncReplicationAutoSuspendTimeoutSeconds?: pulumi.Input<number>;
}

export interface ProtectionPolicyV2ReplicationConfigurationScheduleRetention {
    /**
     * -(Optional) Auto rollup retention policy.
     */
    autoRollupRetention?: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetention>;
    /**
     * -(Optional) Linear retention policy.
     */
    linearRetention?: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationScheduleRetentionLinearRetention>;
}

export interface ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetention {
    /**
     * -(Required) Specifies the auto rollup retention details.
     */
    local: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetentionLocal>;
    /**
     * -(Optional) Specifies the auto rollup retention details.
     */
    remote?: pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetentionRemote>;
}

export interface ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetentionLocal {
    /**
     * -(Required) Multiplier to 'snapshotIntervalType'. For example, if 'snapshotIntervalType' is 'YEARLY' and 'multiple' is 5, then 5 years worth of rollup snapshots will be retained.
     *
     *
     *
     * See detailed information in [Nutanix Protection Policy v4](https://developers.nutanix.com/api-reference?namespace=datapolicies&version=v4.0#tag/ProtectionPolicies/operation/createProtectionPolicy).
     */
    frequency: pulumi.Input<number>;
    /**
     * -(Required) Snapshot interval period.
     * * `YEARLY`: Specifies the number of latest yearly recovery points to retain.
     * * `WEEKLY`: Specifies the number of latest weekly recovery points to retain.
     * * `DAILY`: Specifies the number of latest daily recovery points to retain.
     * * `MONTHLY`: Specifies the number of latest monthly recovery points to retain.
     * * `HOURLY`: Specifies the number of latest hourly recovery points to retain.
     */
    snapshotIntervalType?: pulumi.Input<string>;
}

export interface ProtectionPolicyV2ReplicationConfigurationScheduleRetentionAutoRollupRetentionRemote {
    /**
     * -(Required) Multiplier to 'snapshotIntervalType'. For example, if 'snapshotIntervalType' is 'YEARLY' and 'multiple' is 5, then 5 years worth of rollup snapshots will be retained.
     *
     *
     *
     * See detailed information in [Nutanix Protection Policy v4](https://developers.nutanix.com/api-reference?namespace=datapolicies&version=v4.0#tag/ProtectionPolicies/operation/createProtectionPolicy).
     */
    frequency: pulumi.Input<number>;
    /**
     * -(Required) Snapshot interval period.
     * * `YEARLY`: Specifies the number of latest yearly recovery points to retain.
     * * `WEEKLY`: Specifies the number of latest weekly recovery points to retain.
     * * `DAILY`: Specifies the number of latest daily recovery points to retain.
     * * `MONTHLY`: Specifies the number of latest monthly recovery points to retain.
     * * `HOURLY`: Specifies the number of latest hourly recovery points to retain.
     */
    snapshotIntervalType?: pulumi.Input<string>;
}

export interface ProtectionPolicyV2ReplicationConfigurationScheduleRetentionLinearRetention {
    /**
     * -(Required) Specifies the number of recovery points to retain on the local location.
     */
    local: pulumi.Input<number>;
    /**
     * -(Optional) Specifies the number of recovery points to retain on the remote location.
     */
    remote?: pulumi.Input<number>;
}

export interface ProtectionPolicyV2ReplicationLocation {
    /**
     * -(Required) External identifier of the domain manager.
     */
    domainManagerExtId: pulumi.Input<string>;
    /**
     * -(Optional) One of the locations must be specified as the primary location. All the other locations must be connected to the primary location.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * -(Required) This is a unique user defined label of the replication location. It is used to identify the location in the replication configurations.
     */
    label: pulumi.Input<string>;
    /**
     * -(Optional) Specifies the replication sub-locations where recovery points can be created or replicated.
     */
    replicationSubLocation?: pulumi.Input<inputs.ProtectionPolicyV2ReplicationLocationReplicationSubLocation>;
}

export interface ProtectionPolicyV2ReplicationLocationReplicationSubLocation {
    /**
     * -(Optional) External identifier of the clusters.
     */
    clusterExtIds: pulumi.Input<inputs.ProtectionPolicyV2ReplicationLocationReplicationSubLocationClusterExtIds>;
}

export interface ProtectionPolicyV2ReplicationLocationReplicationSubLocationClusterExtIds {
    /**
     * -(Optional) External identifier of the clusters.
     */
    clusterExtIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProtectionRuleAvailabilityZoneConnectivityList {
    destinationAvailabilityZoneIndex?: pulumi.Input<number>;
    snapshotScheduleLists?: pulumi.Input<pulumi.Input<inputs.ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList>[]>;
    sourceAvailabilityZoneIndex?: pulumi.Input<number>;
}

export interface ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList {
    autoSuspendTimeoutSecs?: pulumi.Input<number>;
    localSnapshotRetentionPolicy?: pulumi.Input<inputs.ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy>;
    recoveryPointObjectiveSecs: pulumi.Input<number>;
    remoteSnapshotRetentionPolicy?: pulumi.Input<inputs.ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy>;
    snapshotType?: pulumi.Input<string>;
}

export interface ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
    numSnapshots?: pulumi.Input<number>;
    rollupRetentionPolicyMultiple?: pulumi.Input<number>;
    rollupRetentionPolicySnapshotIntervalType?: pulumi.Input<string>;
}

export interface ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
    numSnapshots?: pulumi.Input<number>;
    rollupRetentionPolicyMultiple?: pulumi.Input<number>;
    rollupRetentionPolicySnapshotIntervalType?: pulumi.Input<string>;
}

export interface ProtectionRuleCategory {
    /**
     * The name for the protection rule.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface ProtectionRuleCategoryFilter {
    kindLists?: pulumi.Input<pulumi.Input<string>[]>;
    params?: pulumi.Input<pulumi.Input<inputs.ProtectionRuleCategoryFilterParam>[]>;
    type?: pulumi.Input<string>;
}

export interface ProtectionRuleCategoryFilterParam {
    /**
     * The name for the protection rule.
     */
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProtectionRuleOrderedAvailabilityZoneList {
    availabilityZoneUrl?: pulumi.Input<string>;
    clusterUuid?: pulumi.Input<string>;
}

export interface ProtectionRuleOwnerReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the protection rule.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface ProtectionRuleProjectReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the protection rule.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanCategory {
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface RecoveryPlanOwnerReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParameters {
    floatingIpAssignmentLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentList>[]>;
    networkMappingLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingList>[]>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentList {
    availabilityZoneUrl: pulumi.Input<string>;
    vmIpAssignmentLists: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList>[]>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList {
    recoveryFloatingIpConfig?: pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig>;
    testFloatingIpConfig?: pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig>;
    vmNicInformation: pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation>;
    vmReference: pulumi.Input<inputs.RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
    ip?: pulumi.Input<string>;
    shouldAllocateDynamically?: pulumi.Input<boolean>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
    ip?: pulumi.Input<string>;
    shouldAllocateDynamically?: pulumi.Input<boolean>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation {
    ip?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingList {
    areNetworksStretched?: pulumi.Input<boolean>;
    availabilityZoneNetworkMappingLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList>[]>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList {
    availabilityZoneUrl?: pulumi.Input<string>;
    clusterReferenceLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList>[]>;
    recoveryIpAssignmentLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList>[]>;
    recoveryNetwork?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork>;
    testIpAssignmentLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList>[]>;
    testNetwork?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList {
    ipConfigLists: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList>[]>;
    vmReference: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList {
    ipAddress: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    subnetLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList>[]>;
    useVpcReference?: pulumi.Input<boolean>;
    virtualNetworkReference?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference>;
    vpcReference?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
    externalConnectivityState?: pulumi.Input<string>;
    gatewayIp: pulumi.Input<string>;
    prefixLength: pulumi.Input<number>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList {
    ipConfigLists: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList>[]>;
    vmReference: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList {
    ipAddress: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork {
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    subnetLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList>[]>;
    useVpcReference?: pulumi.Input<boolean>;
    virtualNetworkReference?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference>;
    vpcReference?: pulumi.Input<inputs.RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList {
    externalConnectivityState?: pulumi.Input<string>;
    gatewayIp: pulumi.Input<string>;
    prefixLength: pulumi.Input<number>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanProjectReference {
    /**
     * (Required) The kind name (Default value: `project`).
     */
    kind?: pulumi.Input<string>;
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * (Required) the UUID.
     */
    uuid?: pulumi.Input<string>;
}

export interface RecoveryPlanStageList {
    delayTimeSecs?: pulumi.Input<number>;
    stageUuid?: pulumi.Input<string>;
    stageWork: pulumi.Input<inputs.RecoveryPlanStageListStageWork>;
}

export interface RecoveryPlanStageListStageWork {
    recoverEntities?: pulumi.Input<inputs.RecoveryPlanStageListStageWorkRecoverEntities>;
}

export interface RecoveryPlanStageListStageWorkRecoverEntities {
    entityInfoLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList>[]>;
}

export interface RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList {
    anyEntityReferenceKind?: pulumi.Input<string>;
    anyEntityReferenceName?: pulumi.Input<string>;
    anyEntityReferenceUuid?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory>[]>;
    scriptLists?: pulumi.Input<pulumi.Input<inputs.RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList>[]>;
}

export interface RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory {
    /**
     * The name for the Recovery Plan.
     */
    name?: pulumi.Input<string>;
    /**
     * value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList {
    enableScriptExec: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface RecoveryPointRestoreV2VmRecoveryPointRestoreOverride {
    /**
     * -(Required) External identifier of a VM recovery point, that is a part of the top-level recovery point.
     */
    vmRecoveryPointExtId: pulumi.Input<string>;
}

export interface RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride {
    /**
     * -(Optional) Protected resource/recovery point restore that overrides the volume group configuration. The specified properties will be overridden for the restored volume group.
     */
    volumeGroupOverrideSpecs?: pulumi.Input<pulumi.Input<inputs.RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec>[]>;
    /**
     * -(Required) External identifier of a volume group recovery point, that is a part of the top-level recovery point.
     */
    volumeGroupRecoveryPointExtId: pulumi.Input<string>;
}

export interface RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec {
    /**
     * -(Optional) The name of the restored volume group.
     */
    name?: pulumi.Input<string>;
}

export interface RecoveryPointsV2Link {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface RecoveryPointsV2LocationReference {
    /**
     * External identifier of the cluster where the recovery point is present.
     */
    locationExtId?: pulumi.Input<string>;
}

export interface RecoveryPointsV2VmRecoveryPoint {
    /**
     * User-defined application-consistent properties for the recovery point.
     */
    applicationConsistentProperties?: pulumi.Input<pulumi.Input<inputs.RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty>[]>;
    /**
     * External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
     */
    consistencyGroupExtId?: pulumi.Input<string>;
    /**
     * The UTC date and time in ISO-8601 format when the Recovery point is created.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * array of disk recovery points.
     */
    diskRecoveryPoints?: pulumi.Input<pulumi.Input<inputs.RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint>[]>;
    /**
     * The UTC date and time in ISO-8601 format when the current Recovery point expires and will be garbage collected.
     */
    expirationTime?: pulumi.Input<string>;
    /**
     * recovery point UUID
     */
    extId?: pulumi.Input<string>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.RecoveryPointsV2VmRecoveryPointLink>[]>;
    /**
     * Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
     */
    locationAgnosticId?: pulumi.Input<string>;
    /**
     * The name of the Recovery point.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the Recovery point.
     */
    recoveryPointType?: pulumi.Input<string>;
    /**
     * The status of the Recovery point, which indicates whether this Recovery point is fit to be consumed.
     * * supported values:
     * * `COMPLETE`: - The Recovery point is in a complete state and ready to be consumed.
     */
    status?: pulumi.Input<string>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
     */
    vmCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VM external identifier which is captured as a part of this recovery point.
     */
    vmExtId: pulumi.Input<string>;
}

export interface RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty {
    /**
     * -(Required) The backup type specifies the criteria for identifying the files to be backed up. This property should be specified to the application-consistent recovery points for Windows VMs/agents. The following backup types are supported for the application-consistent recovery points:
     * * supported values:
     * * `FULL_BACKUP`: -  All the files are backed up irrespective of their last backup date/time or state. Also, this backup type updates the backup history of each file that participated in the recovery point. If not explicitly specified, this is the default backup type.
     * * `COPY_BACKUP`: -  this backup type does not update the backup history of individual files involved in the recovery point.
     */
    backupType: pulumi.Input<string>;
    /**
     * -(Required) value: `dataprotection.v4.common.VssProperties`
     */
    objectType: pulumi.Input<string>;
    /**
     * -(Optional) Indicates whether the given set of VSS writers' UUIDs should be included or excluded from the application consistent recovery point. By default, the value is set to false, indicating that all listed VSS writers' UUIDs will be excluded.
     */
    shouldIncludeWriters?: pulumi.Input<boolean>;
    /**
     * -(Optional) Indicates whether to store the VSS metadata if the user is interested in application-specific backup/restore. The VSS metadata consists of VSS writers and requester metadata details. These are compressed into a cabinet file(.cab file) during a VSS backup operation. This cabinet file must be saved to the backup media during a backup operation, as it is required during the restore operation.
     */
    shouldStoreVssMetadata?: pulumi.Input<boolean>;
    /**
     * -(Optional) List of VSS writer UUIDs that are used in an application consistent recovery point. The default values are the system and the registry writer UUIDs.
     */
    writers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint {
    /**
     * External identifier of the disk.
     */
    diskExtId?: pulumi.Input<string>;
    /**
     * External identifier of the disk recovery point.
     */
    diskRecoveryPointExtId?: pulumi.Input<string>;
}

export interface RecoveryPointsV2VmRecoveryPointLink {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface RecoveryPointsV2VolumeGroupRecoveryPoint {
    /**
     * External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
     */
    consistencyGroupExtId?: pulumi.Input<string>;
    /**
     * array of disk recovery points.
     */
    diskRecoveryPoints?: pulumi.Input<pulumi.Input<inputs.RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint>[]>;
    /**
     * recovery point UUID
     */
    extId?: pulumi.Input<string>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.RecoveryPointsV2VolumeGroupRecoveryPointLink>[]>;
    /**
     * Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
     */
    locationAgnosticId?: pulumi.Input<string>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Category key-value pairs associated with the volume group at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
     */
    volumeGroupCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Volume Group external identifier which is captured as part of this recovery point.
     */
    volumeGroupExtId: pulumi.Input<string>;
}

export interface RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint {
    /**
     * External identifier of the disk.
     */
    diskExtId?: pulumi.Input<string>;
    /**
     * External identifier of the disk recovery point.
     */
    diskRecoveryPointExtId?: pulumi.Input<string>;
}

export interface RecoveryPointsV2VolumeGroupRecoveryPointLink {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface RoleCategory {
    /**
     * - (Optional) Name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface RoleOwnerReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface RolePermissionReferenceList {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface RoleProjectReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Optional) Name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface RolesV2Link {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface RoutesV2Destination {
    /**
     * IPv4 Subnet Object
     * * `ipv4.ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 format.
     * * `ipv4.ip.value`: (Required) The IPv4 address of the host.
     * * `ipv4.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv4 address belongs.
     * * `ipv4.prefix_length`: (Required) The prefix length of the network to which this host IPv4 address belongs.
     */
    ipv4?: pulumi.Input<inputs.RoutesV2DestinationIpv4>;
    /**
     * IPv6 Subnet Object
     * * `ipv6.ip`: (Required) IP address format
     * * `ipv6.ip.value`: (Required) The IPv6 address of the host.
     * * `ipv6.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv6 address belongs.
     * * `ipv6.prefix_length`: (Required) The prefix length of the network to which this host IPv6 address belongs.
     */
    ipv6?: pulumi.Input<inputs.RoutesV2DestinationIpv6>;
}

export interface RoutesV2DestinationIpv4 {
    ip: pulumi.Input<inputs.RoutesV2DestinationIpv4Ip>;
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface RoutesV2DestinationIpv4Ip {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of IP address
     */
    value: pulumi.Input<string>;
}

export interface RoutesV2DestinationIpv6 {
    ip: pulumi.Input<inputs.RoutesV2DestinationIpv6Ip>;
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
}

export interface RoutesV2DestinationIpv6Ip {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of IP address
     */
    value: pulumi.Input<string>;
}

export interface RoutesV2Link {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface RoutesV2Metadata {
    /**
     * A list of globally unique identifiers that represent all the categories the resource is associated with.
     */
    categoryIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A globally unique identifier that represents the owner of this resource.
     */
    ownerReferenceId?: pulumi.Input<string>;
    /**
     * The userName of the owner of this resource.
     */
    ownerUserName?: pulumi.Input<string>;
    /**
     * The name of the project this resource belongs to.
     */
    projectName?: pulumi.Input<string>;
    /**
     * A globally unique identifier that represents the project this resource belongs to.
     */
    projectReferenceId?: pulumi.Input<string>;
}

export interface RoutesV2NextHop {
    nextHopIpAddresses?: pulumi.Input<pulumi.Input<inputs.RoutesV2NextHopNextHopIpAddress>[]>;
    nextHopName?: pulumi.Input<string>;
    nextHopReference?: pulumi.Input<string>;
    nextHopType: pulumi.Input<string>;
}

export interface RoutesV2NextHopNextHopIpAddress {
    /**
     * IPv4 Address
     */
    ipv4: pulumi.Input<inputs.RoutesV2NextHopNextHopIpAddressIpv4>;
    /**
     * IPv6 Address
     */
    ipv6: pulumi.Input<inputs.RoutesV2NextHopNextHopIpAddressIpv6>;
}

export interface RoutesV2NextHopNextHopIpAddressIpv4 {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of IP address
     */
    value: pulumi.Input<string>;
}

export interface RoutesV2NextHopNextHopIpAddressIpv6 {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of IP address
     */
    value: pulumi.Input<string>;
}

export interface SamlIdentityProvidersV2IdpMetadata {
    certificate: pulumi.Input<string>;
    entityId: pulumi.Input<string>;
    errorUrl?: pulumi.Input<string>;
    loginUrl: pulumi.Input<string>;
    logoutUrl?: pulumi.Input<string>;
    nameIdPolicyFormat?: pulumi.Input<string>;
}

export interface SelfServiceAppPatchCategory {
    /**
     * - (Optional) The operation to perform on the category. (e.g. "add", "delete")
     */
    operation: pulumi.Input<string>;
    /**
     * - (Optional, string) The value of the category. A Key:Value pair (e.g. "AppType:Oracle_DB"). There should not be any space in value.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppPatchDisk {
    /**
     * - (Optional, integer) The size of the disk to allocate (in MiB).
     */
    diskSizeMib?: pulumi.Input<number>;
    /**
     * - (Optional) The operation to perform on the category. (e.g. "add", "delete")
     */
    operation: pulumi.Input<string>;
}

export interface SelfServiceAppPatchNic {
    /**
     * - (Optional, string) The index of the NIC. A dummy string for now.
     */
    index?: pulumi.Input<number>;
    /**
     * - (Optional) The operation to perform on the category. (e.g. "add", "delete")
     */
    operation?: pulumi.Input<string>;
    /**
     * - (Optional, string) The UUID of the subnet to which the NIC should be attached.
     */
    subnetUuid?: pulumi.Input<string>;
}

export interface SelfServiceAppPatchVmConfig {
    /**
     * - (Optional, integer) The amount of memory (in MiB) to allocate for the VM.
     */
    memorySizeMib?: pulumi.Input<number>;
    /**
     * - (Optional, integer) The number of vCPUs to assign.
     */
    numSockets?: pulumi.Input<number>;
    /**
     * - (Optional, integer) The number of cores per vCPU to assign to the VM.
     */
    numVcpusPerSocket?: pulumi.Input<number>;
}

export interface SelfServiceAppProvisionAction {
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionAppSummary {
    /**
     * The profile assigned to the application.
     */
    applicationProfile?: pulumi.Input<string>;
    /**
     * The UUID of the application.
     */
    applicationUuid?: pulumi.Input<string>;
    /**
     * The blueprint associated with the application.
     */
    blueprint?: pulumi.Input<string>;
    /**
     * The timestamp when the application was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * The timestamp when the application was last updated.
     */
    lastUpdatedOn?: pulumi.Input<string>;
    /**
     * The owner of the application.
     */
    owner?: pulumi.Input<string>;
    /**
     * The project associated with the application.
     */
    project?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditable {
    /**
     * -  A list of actions associated with the blueprint. Each action contains runtime specifications (defined in RuntimeSpec).
     */
    actionLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableActionList>[]>;
    /**
     * -  A list of application profiles associated with the blueprint. Each application profile contains runtime specifications (defined in RuntimeSpec).
     */
    appProfile?: pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableAppProfile>;
    /**
     * -  A list of credentials associated with the blueprint. Each credential contains runtime specifications (defined in RuntimeSpec).
     */
    credentialLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableCredentialList>[]>;
    /**
     * -  A list of deployments associated with the blueprint. Each deployment contains runtime specifications (defined in RuntimeSpec).
     */
    deploymentLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableDeploymentList>[]>;
    /**
     * -  A list of packages associated with the blueprint. Each package contains runtime specifications (defined in RuntimeSpec).
     */
    packageLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditablePackageList>[]>;
    /**
     * -  A list of restore configurations associated with the blueprint. Each restore configuration contains runtime specifications (defined in RuntimeSpec).
     */
    restoreConfigLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableRestoreConfigList>[]>;
    /**
     * - A list of services associated with the blueprint. Each service contains runtime specifications (defined in RuntimeSpec).
     */
    serviceLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableServiceList>[]>;
    /**
     * - A list of snapshot configurations associated with the blueprint. Each snapshot configuration contains runtime specifications (defined in RuntimeSpec).
     */
    snapshotConfigLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableSnapshotConfigList>[]>;
    /**
     * - A list of substrates associated with the blueprint. Each substrate contains runtime specifications (defined in RuntimeSpec).
     */
    substrateLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableSubstrateList>[]>;
    /**
     * - A list of tasks associated with the blueprint. Each task contains runtime specifications (defined in RuntimeSpec).
     */
    taskLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableTaskList>[]>;
    /**
     * - A list of variables associated with the blueprint. Each variable contains runtime specifications (defined in RuntimeSpec).
     */
    variableLists?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditableVariableList>[]>;
}

export interface SelfServiceAppProvisionRuntimeEditableActionList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableAppProfile {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableCredentialList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableDeploymentList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditablePackageList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableRestoreConfigList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableServiceList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableSnapshotConfigList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableSubstrateList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableTaskList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionRuntimeEditableVariableList {
    /**
     * (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
     */
    context?: pulumi.Input<string>;
    /**
     * description of the action
     */
    description?: pulumi.Input<string>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
    /**
     * UUID of the action.
     */
    uuid?: pulumi.Input<string>;
    /**
     * (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
     */
    value?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionVm {
    /**
     * -  A map of categories applied to the VM. Each key is a category name, and the value is the category value.
     */
    categories?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * -  Cluster-related information for the VM.
     */
    clusterInfos?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionVmClusterInfo>[]>;
    /**
     * -  Configuration details for the VM.
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionVmConfiguration>[]>;
    /**
     * -  A list of network interfaces attached to the VM.
     */
    nics?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionVmNic>[]>;
}

export interface SelfServiceAppProvisionVmClusterInfo {
    /**
     * -   The name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * -   The UUID of the cluster.
     */
    clusterUuid?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionVmConfiguration {
    /**
     * -   Number of CPU cores.
     */
    cores?: pulumi.Input<number>;
    /**
     * -   The VM image used.
     */
    image?: pulumi.Input<string>;
    /**
     * -   IP address of the VM.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * -  Memory allocated to the VM.
     */
    memory?: pulumi.Input<number>;
    /**
     * name of action.
     */
    name?: pulumi.Input<string>;
    /**
     * -   Number of virtual CPUs assigned to the VM.
     */
    vcpus?: pulumi.Input<number>;
    /**
     * -   The UUID of the VM.
     */
    vmUuid?: pulumi.Input<string>;
}

export interface SelfServiceAppProvisionVmNic {
    /**
     * -   The MAC address of the VM's network interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * -   The subnet the VM's network interface is attached to.
     */
    subnet?: pulumi.Input<string>;
    /**
     * -   The type of network interface.
     */
    type?: pulumi.Input<string>;
}

export interface ServiceGroupServiceList {
    /**
     * - (Optional) ICMP type code list
     */
    icmpTypeCodeLists?: pulumi.Input<pulumi.Input<inputs.ServiceGroupServiceListIcmpTypeCodeList>[]>;
    /**
     * - (Optional) The UserPrincipalName of the user from the directory service.
     */
    protocol?: pulumi.Input<string>;
    /**
     * - (Optional) TCP Port range list
     */
    tcpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.ServiceGroupServiceListTcpPortRangeList>[]>;
    /**
     * - (Optional) UDP port range list
     */
    udpPortRangeLists?: pulumi.Input<pulumi.Input<inputs.ServiceGroupServiceListUdpPortRangeList>[]>;
}

export interface ServiceGroupServiceListIcmpTypeCodeList {
    /**
     * - (Optional) Code as text
     */
    code?: pulumi.Input<string>;
    /**
     * - (Optional) Type as text
     */
    type?: pulumi.Input<string>;
}

export interface ServiceGroupServiceListTcpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface ServiceGroupServiceListUdpPortRangeList {
    endPort?: pulumi.Input<number>;
    startPort?: pulumi.Input<number>;
}

export interface ServiceGroupsV2IcmpService {
    /**
     * Icmp service Code. Ignore this field if Code has to be ANY
     */
    code?: pulumi.Input<number>;
    /**
     * Set this field to true if both Type and Code is ANY. Default is False.
     */
    isAllAllowed?: pulumi.Input<boolean>;
    /**
     * Icmp service Type. Ignore this field if Type has to be ANY.
     */
    type?: pulumi.Input<number>;
}

export interface ServiceGroupsV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface ServiceGroupsV2TcpService {
    /**
     * end port
     */
    endPort: pulumi.Input<number>;
    /**
     * start port
     */
    startPort: pulumi.Input<number>;
}

export interface ServiceGroupsV2UdpService {
    /**
     * end port
     */
    endPort: pulumi.Input<number>;
    /**
     * start port
     */
    startPort: pulumi.Input<number>;
}

export interface StaticRoutesDefaultRouteNexthop {
    /**
     * Reference to a subnet.
     */
    externalSubnetReferenceUuid?: pulumi.Input<string>;
}

export interface StaticRoutesStaticRoutesList {
    /**
     * Destination ip with prefix.
     */
    destination: pulumi.Input<string>;
    /**
     * Reference to a subnet. Supported with 2022.x .
     */
    externalSubnetReferenceUuid?: pulumi.Input<string>;
    /**
     * Reference to a vpn connection.
     */
    vpnConnectionReferenceUuid?: pulumi.Input<string>;
}

export interface StorageContainersV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface StorageContainersV2NfsWhitelistAddress {
    /**
     * Reference to address configuration
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.StorageContainersV2NfsWhitelistAddressFqdn>[]>;
    /**
     * Reference to address configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.StorageContainersV2NfsWhitelistAddressIpv4>[]>;
    /**
     * Reference to address configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.StorageContainersV2NfsWhitelistAddressIpv6>[]>;
}

export interface StorageContainersV2NfsWhitelistAddressFqdn {
    /**
     * value of fqdn address
     */
    value?: pulumi.Input<string>;
}

export interface StorageContainersV2NfsWhitelistAddressIpv4 {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of fqdn address
     */
    value?: pulumi.Input<string>;
}

export interface StorageContainersV2NfsWhitelistAddressIpv6 {
    /**
     * The prefix length of the network to which this host IPv4/IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * value of fqdn address
     */
    value?: pulumi.Input<string>;
}

export interface SubnetCategory {
    /**
     * - (Optional) Subnet name (Readonly).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface SubnetV2DhcpOption {
    bootFileName?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionDomainNameServer>[]>;
    ntpServers?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionNtpServer>[]>;
    searchDomains?: pulumi.Input<pulumi.Input<string>[]>;
    tftpServerName?: pulumi.Input<string>;
}

export interface SubnetV2DhcpOptionDomainNameServer {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionDomainNameServerIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionDomainNameServerIpv6>[]>;
}

export interface SubnetV2DhcpOptionDomainNameServerIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2DhcpOptionDomainNameServerIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2DhcpOptionNtpServer {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionNtpServerIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DhcpOptionNtpServerIpv6>[]>;
}

export interface SubnetV2DhcpOptionNtpServerIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2DhcpOptionNtpServerIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2DynamicIpAddress {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DynamicIpAddressIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2DynamicIpAddressIpv6>[]>;
}

export interface SubnetV2DynamicIpAddressIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2DynamicIpAddressIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfig {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6>[]>;
}

export interface SubnetV2IpConfigIpv4 {
    defaultGatewayIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4DefaultGatewayIp>[]>;
    dhcpServerAddresses?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4DhcpServerAddress>[]>;
    ipSubnets?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4IpSubnet>[]>;
    poolLists?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4PoolList>[]>;
}

export interface SubnetV2IpConfigIpv4DefaultGatewayIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv4DhcpServerAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv4IpSubnet {
    ips?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4IpSubnetIp>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface SubnetV2IpConfigIpv4IpSubnetIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv4PoolList {
    endIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4PoolListEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv4PoolListStartIp>[]>;
}

export interface SubnetV2IpConfigIpv4PoolListEndIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv4PoolListStartIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv6 {
    defaultGatewayIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6DefaultGatewayIp>[]>;
    dhcpServerAddresses?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6DhcpServerAddress>[]>;
    ipSubnets?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6IpSubnet>[]>;
    poolLists?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6PoolList>[]>;
}

export interface SubnetV2IpConfigIpv6DefaultGatewayIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv6DhcpServerAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv6IpSubnet {
    ips?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6IpSubnetIp>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface SubnetV2IpConfigIpv6IpSubnetIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv6PoolList {
    endIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6PoolListEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpConfigIpv6PoolListStartIp>[]>;
}

export interface SubnetV2IpConfigIpv6PoolListEndIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpConfigIpv6PoolListStartIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpUsage {
    ipPoolUsages?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpUsageIpPoolUsage>[]>;
    numAssignedIps?: pulumi.Input<number>;
    numFreeIps?: pulumi.Input<number>;
    numMacs?: pulumi.Input<number>;
}

export interface SubnetV2IpUsageIpPoolUsage {
    numFreeIps?: pulumi.Input<number>;
    numTotalIps?: pulumi.Input<number>;
    ranges?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpUsageIpPoolUsageRange>[]>;
}

export interface SubnetV2IpUsageIpPoolUsageRange {
    endIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpUsageIpPoolUsageRangeEndIp>[]>;
    startIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2IpUsageIpPoolUsageRangeStartIp>[]>;
}

export interface SubnetV2IpUsageIpPoolUsageRangeEndIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2IpUsageIpPoolUsageRangeStartIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface SubnetV2ReservedIpAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VirtualSwitch {
    bondMode?: pulumi.Input<boolean>;
    clusters?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchCluster>[]>;
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    hasDeploymentError?: pulumi.Input<boolean>;
    isDefault?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchLink>[]>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchMetadata>[]>;
    mtu?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface SubnetV2VirtualSwitchCluster {
    extId?: pulumi.Input<string>;
    gatewayIpAddresses?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchClusterGatewayIpAddress>[]>;
    hosts?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchClusterHost>[]>;
}

export interface SubnetV2VirtualSwitchClusterGatewayIpAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VirtualSwitchClusterHost {
    extId?: pulumi.Input<string>;
    hostNics?: pulumi.Input<pulumi.Input<string>[]>;
    internalBridgeName?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchClusterHostIpAddress>[]>;
    routeTable?: pulumi.Input<number>;
}

export interface SubnetV2VirtualSwitchClusterHostIpAddress {
    ips?: pulumi.Input<pulumi.Input<inputs.SubnetV2VirtualSwitchClusterHostIpAddressIp>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface SubnetV2VirtualSwitchClusterHostIpAddressIp {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VirtualSwitchLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface SubnetV2VirtualSwitchMetadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface SubnetV2Vpc {
    commonDhcpOptions?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcCommonDhcpOption>[]>;
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    externalRoutingDomainReference?: pulumi.Input<string>;
    externalSubnets?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnet>[]>;
    externallyRoutablePrefixes?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternallyRoutablePrefix>[]>;
    links?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcLink>[]>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcMetadata>[]>;
    name?: pulumi.Input<string>;
    snatIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcSnatIp>[]>;
    tenantId?: pulumi.Input<string>;
    vpcType?: pulumi.Input<string>;
}

export interface SubnetV2VpcCommonDhcpOption {
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcCommonDhcpOptionDomainNameServer>[]>;
}

export interface SubnetV2VpcCommonDhcpOptionDomainNameServer {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6>[]>;
}

export interface SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternalSubnet {
    activeGatewayCount?: pulumi.Input<number>;
    activeGatewayNodes?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetActiveGatewayNode>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetExternalIp>[]>;
    gatewayNodes?: pulumi.Input<pulumi.Input<string>[]>;
    subnetReference?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternalSubnetActiveGatewayNode {
    nodeId?: pulumi.Input<string>;
    nodeIpAddresses?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress>[]>;
}

export interface SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6>[]>;
}

export interface SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternalSubnetExternalIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetExternalIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternalSubnetExternalIpIpv6>[]>;
}

export interface SubnetV2VpcExternalSubnetExternalIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternalSubnetExternalIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternallyRoutablePrefix {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternallyRoutablePrefixIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternallyRoutablePrefixIpv6>[]>;
}

export interface SubnetV2VpcExternallyRoutablePrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternallyRoutablePrefixIpv4Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface SubnetV2VpcExternallyRoutablePrefixIpv4Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcExternallyRoutablePrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcExternallyRoutablePrefixIpv6Ip>[]>;
    prefixLength?: pulumi.Input<number>;
}

export interface SubnetV2VpcExternallyRoutablePrefixIpv6Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface SubnetV2VpcMetadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface SubnetV2VpcSnatIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcSnatIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.SubnetV2VpcSnatIpIpv6>[]>;
}

export interface SubnetV2VpcSnatIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface SubnetV2VpcSnatIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface TemplateV2CreatedBy {
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.TemplateV2CreatedByAdditionalAttribute>[]>;
    creationType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    emailId?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    isForceResetPasswordEnabled?: pulumi.Input<boolean>;
    lastName?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    userType: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface TemplateV2CreatedByAdditionalAttribute {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2CreatedByAdditionalAttributeValue>[]>;
}

export interface TemplateV2CreatedByAdditionalAttributeValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2CreatedByAdditionalAttributeValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2CreatedByAdditionalAttributeValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2GuestUpdateStatus {
    deployedVmReference?: pulumi.Input<string>;
}

export interface TemplateV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpec {
    createTime?: pulumi.Input<string>;
    createdBies?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecCreatedBy>[]>;
    extId?: pulumi.Input<string>;
    isActiveVersion?: pulumi.Input<boolean>;
    isGcOverrideEnabled?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecLink>[]>;
    tenantId?: pulumi.Input<string>;
    versionDescription?: pulumi.Input<string>;
    versionName?: pulumi.Input<string>;
    versionSource: pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSource>;
    versionSourceDiscriminator?: pulumi.Input<string>;
    vmSpecs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpec>[]>;
}

export interface TemplateV2TemplateVersionSpecCreatedBy {
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecCreatedByAdditionalAttribute>[]>;
    creationType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    emailId?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    isForceResetPasswordEnabled?: pulumi.Input<boolean>;
    lastName?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    userType: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecCreatedByAdditionalAttribute {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecCreatedByAdditionalAttributeValue>[]>;
}

export interface TemplateV2TemplateVersionSpecCreatedByAdditionalAttributeValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecCreatedByAdditionalAttributeValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecCreatedByAdditionalAttributeValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSource {
    templateVersionReference?: pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReference>;
    templateVmReference?: pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReference>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReference {
    overrideVmConfigs: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfig>[]>;
    versionId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfig {
    guestCustomizations?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomization>[]>;
    memorySizeBytes?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNic>[]>;
    numCoresPerSocket?: pulumi.Input<number>;
    numSockets?: pulumi.Input<number>;
    numThreadsPerCore?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomization {
    configs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfig>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprep>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigGuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNic {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicBackingInfo>[]>;
    extId?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicLink>[]>;
    networkInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfo>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicBackingInfo {
    isConnected?: pulumi.Input<boolean>;
    macAddress?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    numQueues?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfo {
    ipv4Configs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4Config>[]>;
    ipv4Infos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4Info>[]>;
    networkFunctionChains?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoNetworkFunctionChain>[]>;
    networkFunctionNicType?: pulumi.Input<string>;
    nicType?: pulumi.Input<string>;
    shouldAllowUnknownMacs?: pulumi.Input<boolean>;
    subnets?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoSubnet>[]>;
    trunkedVlans?: pulumi.Input<pulumi.Input<number>[]>;
    vlanMode?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4Config {
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4ConfigIpAddress>[]>;
    secondaryIpAddressLists?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4ConfigSecondaryIpAddressList>[]>;
    shouldAssignIp?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4ConfigIpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4ConfigSecondaryIpAddressList {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4Info {
    learnedIpAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4InfoLearnedIpAddress>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoIpv4InfoLearnedIpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoNetworkFunctionChain {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVersionReferenceOverrideVmConfigNicNetworkInfoSubnet {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReference {
    extId: pulumi.Input<string>;
    guestCustomizations?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomization>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomization {
    configs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfig>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprep>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVersionSourceTemplateVmReferenceGuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpec {
    apcConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecApcConfig>[]>;
    availabilityZones?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecAvailabilityZone>[]>;
    biosUuid?: pulumi.Input<string>;
    bootConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfig>[]>;
    categories?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCategory>[]>;
    cdRoms?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRom>[]>;
    clusters?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCluster>[]>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disks?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDisk>[]>;
    enabledCpuFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    extId?: pulumi.Input<string>;
    generationUuid?: pulumi.Input<string>;
    gpuses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGpus>[]>;
    guestCustomizations?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomization>[]>;
    guestTools?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestTool>[]>;
    hardwareClockTimezone?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecHost>[]>;
    isAgentVm?: pulumi.Input<boolean>;
    isBrandingEnabled?: pulumi.Input<boolean>;
    isCpuHotplugEnabled?: pulumi.Input<boolean>;
    isCpuPassthroughEnabled?: pulumi.Input<boolean>;
    isCrossClusterMigrationInProgress?: pulumi.Input<boolean>;
    isGpuConsoleEnabled?: pulumi.Input<boolean>;
    isLiveMigrateCapable?: pulumi.Input<boolean>;
    isMemoryOvercommitEnabled?: pulumi.Input<boolean>;
    isScsiControllerEnabled?: pulumi.Input<boolean>;
    isVcpuHardPinningEnabled?: pulumi.Input<boolean>;
    isVgaConsoleEnabled?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecLink>[]>;
    machineType?: pulumi.Input<string>;
    memorySizeBytes?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNic>[]>;
    numCoresPerSocket?: pulumi.Input<number>;
    numNumaNodes?: pulumi.Input<number>;
    numSockets?: pulumi.Input<number>;
    numThreadsPerCore?: pulumi.Input<number>;
    ownershipInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecOwnershipInfo>[]>;
    pciDevices?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDevice>[]>;
    powerState?: pulumi.Input<string>;
    protectionPolicyStates?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecProtectionPolicyState>[]>;
    protectionType?: pulumi.Input<string>;
    serialPorts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecSerialPort>[]>;
    sources?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecSource>[]>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecStorageConfig>[]>;
    tenantId?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    vtpmConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecVtpmConfig>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecApcConfig {
    cpuModels?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecApcConfigCpuModel>[]>;
    isApcEnabled?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVmSpecApcConfigCpuModel {
    extId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecAvailabilityZone {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfig {
    legacyBoots?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBoot>[]>;
    uefiBoots?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBoot>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBoot {
    bootDevices?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDevice>[]>;
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceNic>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigLegacyBootBootDeviceBootDeviceNic {
    macAddress?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBoot {
    bootDevices?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDevice>[]>;
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
    isSecureBootEnabled?: pulumi.Input<boolean>;
    nvramDevices?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDevice>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceNic>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceBootDeviceNic {
    macAddress?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDevice {
    backingStorageInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfo>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCategory {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRom {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfo>[]>;
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomDiskAddress>[]>;
    extId?: pulumi.Input<string>;
    isoType?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomLink>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoStorageContainer>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomBackingInfoStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCdRomLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecCluster {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDisk {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfo>[]>;
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskDiskAddress>[]>;
    extId?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskLink>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfo {
    adfsVolumeGroupReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoAdfsVolumeGroupReference>[]>;
    vmDisks?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDisk>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoAdfsVolumeGroupReference {
    volumeGroupExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDisk {
    dataSources?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskStorageContainer>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskBackingInfoVmDiskStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecDiskLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGpus {
    deviceId?: pulumi.Input<number>;
    extId?: pulumi.Input<string>;
    fraction?: pulumi.Input<number>;
    frameBufferSizeBytes?: pulumi.Input<number>;
    guestDriverVersion?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGpusLink>[]>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numVirtualDisplayHeads?: pulumi.Input<number>;
    pciAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGpusPciAddress>[]>;
    tenantId?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGpusLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGpusPciAddress {
    bus?: pulumi.Input<number>;
    device?: pulumi.Input<number>;
    func?: pulumi.Input<number>;
    segment?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomization {
    configs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfig>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprep>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecGuestTool {
    availableVersion?: pulumi.Input<string>;
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    guestOsVersion?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    isInstalled?: pulumi.Input<boolean>;
    isIsoInserted?: pulumi.Input<boolean>;
    isReachable?: pulumi.Input<boolean>;
    isVmMobilityDriversInstalled?: pulumi.Input<boolean>;
    isVssSnapshotCapable?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecHost {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNic {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicBackingInfo>[]>;
    extId?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicLink>[]>;
    networkInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfo>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicBackingInfo {
    isConnected?: pulumi.Input<boolean>;
    macAddress?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    numQueues?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfo {
    ipv4Configs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4Config>[]>;
    ipv4Infos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4Info>[]>;
    networkFunctionChains?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoNetworkFunctionChain>[]>;
    networkFunctionNicType?: pulumi.Input<string>;
    nicType?: pulumi.Input<string>;
    shouldAllowUnknownMacs?: pulumi.Input<boolean>;
    subnets?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoSubnet>[]>;
    trunkedVlans?: pulumi.Input<pulumi.Input<number>[]>;
    vlanMode?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4Config {
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigIpAddress>[]>;
    secondaryIpAddressLists?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigSecondaryIpAddressList>[]>;
    shouldAssignIp?: pulumi.Input<boolean>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigIpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigSecondaryIpAddressList {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4Info {
    learnedIpAddresses?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4InfoLearnedIpAddress>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoIpv4InfoLearnedIpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoNetworkFunctionChain {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecNicNetworkInfoSubnet {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecOwnershipInfo {
    owners?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecOwnershipInfoOwner>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecOwnershipInfoOwner {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDevice {
    assignedDeviceInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDeviceAssignedDeviceInfo>[]>;
    backingInfos?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDeviceBackingInfo>[]>;
    extId?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDeviceLink>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDeviceAssignedDeviceInfo {
    devices?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDeviceAssignedDeviceInfoDevice>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDeviceAssignedDeviceInfoDevice {
    deviceExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDeviceBackingInfo {
    pcieDeviceReferences?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecPciDeviceBackingInfoPcieDeviceReference>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDeviceBackingInfoPcieDeviceReference {
    deviceExtId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecPciDeviceLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecProtectionPolicyState {
    policies?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecProtectionPolicyStatePolicy>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecProtectionPolicyStatePolicy {
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecSerialPort {
    extId?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
    isConnected?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecSerialPortLink>[]>;
    tenantId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecSerialPortLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecSource {
    entityType?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
}

export interface TemplateV2TemplateVersionSpecVmSpecStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
    qosConfigs?: pulumi.Input<pulumi.Input<inputs.TemplateV2TemplateVersionSpecVmSpecStorageConfigQosConfig>[]>;
}

export interface TemplateV2TemplateVersionSpecVmSpecStorageConfigQosConfig {
    throttledIops?: pulumi.Input<number>;
}

export interface TemplateV2TemplateVersionSpecVmSpecVtpmConfig {
    isVtpmEnabled?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface TemplateV2UpdatedBy {
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.TemplateV2UpdatedByAdditionalAttribute>[]>;
    creationType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    emailId?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    isForceResetPasswordEnabled?: pulumi.Input<boolean>;
    lastName?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    userType: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface TemplateV2UpdatedByAdditionalAttribute {
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.TemplateV2UpdatedByAdditionalAttributeValue>[]>;
}

export interface TemplateV2UpdatedByAdditionalAttributeValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.TemplateV2UpdatedByAdditionalAttributeValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TemplateV2UpdatedByAdditionalAttributeValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface UserAccessControlPolicyReferenceList {
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: pulumi.Input<string>;
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface UserCategory {
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface UserDirectoryServiceUser {
    defaultUserPrincipalName?: pulumi.Input<string>;
    /**
     * - (Optional) The reference to a directory service. See #reference for to look the supported attributes.
     */
    directoryServiceReference: pulumi.Input<inputs.UserDirectoryServiceUserDirectoryServiceReference>;
    /**
     * - (Optional) The UserPrincipalName of the user from the directory service.
     */
    userPrincipalName?: pulumi.Input<string>;
}

export interface UserDirectoryServiceUserDirectoryServiceReference {
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: pulumi.Input<string>;
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface UserGroupsCategory {
    /**
     * - subnet name.
     */
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface UserGroupsDirectoryServiceOus {
    /**
     * - (Required) The Distinguished name for the user group.
     */
    distinguishedName: pulumi.Input<string>;
}

export interface UserGroupsDirectoryServiceUserGroup {
    /**
     * - (Required) The Distinguished name for the user group.
     */
    distinguishedName: pulumi.Input<string>;
}

export interface UserGroupsSamlUserGroup {
    /**
     * - (Required) The UUID of the Identity Provider that the group belongs to.
     */
    idpUuid: pulumi.Input<string>;
    /**
     * - (Required) The name of the SAML group which the IDP provides.
     */
    name: pulumi.Input<string>;
}

export interface UserIdentityProviderUser {
    /**
     * - (Optional) The reference to a identity provider. See #reference for to look the supported attributes.
     */
    identityProviderReference: pulumi.Input<inputs.UserIdentityProviderUserIdentityProviderReference>;
    /**
     * - (Optional) The username from identity provider. Name ID for SAML Identity Provider.
     */
    username?: pulumi.Input<string>;
}

export interface UserIdentityProviderUserIdentityProviderReference {
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: pulumi.Input<string>;
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid: pulumi.Input<string>;
}

export interface UserProjectReferenceList {
    /**
     * - The kind name. (Default depends on the resource you are referencing)
     */
    kind?: pulumi.Input<string>;
    /**
     * - the name(Optional).
     */
    name?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface UsersV2AdditionalAttribute {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    name?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    value?: pulumi.Input<number>;
}

export interface UsersV2BucketsAccessKey {
    /**
     * - Name of the Bucket Access Key.
     */
    accessKeyName?: pulumi.Input<string>;
    /**
     * - Creation time for the Bucket Access Key.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.UsersV2BucketsAccessKeyLink>[]>;
    /**
     * - Secret Access Key, it will be returned only during Bucket Access Key creation.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * - User Identifier who owns the Bucket Access Key.
     */
    userId?: pulumi.Input<string>;
}

export interface UsersV2BucketsAccessKeyLink {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface UsersV2Link {
    /**
     * - The URL at which the entity described by the link can be accessed.
     */
    href?: pulumi.Input<string>;
    /**
     * - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
     */
    rel?: pulumi.Input<string>;
}

export interface VirtualMachineCategory {
    /**
     * - (Required) The name for the vm.
     */
    name?: pulumi.Input<string>;
    /**
     * - value of the key.
     */
    value?: pulumi.Input<string>;
}

export interface VirtualMachineDiskList {
    /**
     * Reference to a data source.
     *
     * The diskSize (the disk sizeMib and the diskSizeBytes attributes) is only honored by creating an empty disk. When you are creating from an image, the size is ignored and the disk becomes the size of the image from which it was cloned. In VM creation, you can't set either disk sizeMib or diskSizeBytes when you set dataSourceReference but, you can update the diskSize after creation (second apply).
     */
    dataSourceReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Properties to a device.
     */
    deviceProperties?: pulumi.Input<inputs.VirtualMachineDiskListDeviceProperties>;
    /**
     * Size of the disk in Bytes.
     */
    diskSizeBytes?: pulumi.Input<number>;
    /**
     * Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB - when that field is present.
     */
    diskSizeMib?: pulumi.Input<number>;
    storageConfig?: pulumi.Input<inputs.VirtualMachineDiskListStorageConfig>;
    /**
     * - (Optional) The device ID which is used to uniquely identify this particular disk.
     */
    uuid?: pulumi.Input<string>;
    volumeGroupReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface VirtualMachineDiskListDeviceProperties {
    /**
     * - A Disk type (default: DISK).
     */
    deviceType?: pulumi.Input<string>;
    /**
     * - Address of disk to boot from.
     */
    diskAddress?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface VirtualMachineDiskListStorageConfig {
    /**
     * - State of the storage policy to pin virtual disks to the hot tier. When specified as a VM attribute, the storage policy applies to all virtual disks of the VM unless overridden by the same attribute specified for a virtual disk.
     */
    flashMode?: pulumi.Input<string>;
    /**
     * - Reference to a kind. Either one of (kind, uuid) or url needs to be specified. Requires Prism Central / AOS 5.17+.
     * * `storage_container_reference.#.url`: - GET query on the URL will provide information on the source.
     * * `storage_container_reference.#.kind`: - kind of the container reference
     * * `storage_container_reference.#.name`: - name of the container reference
     * * `storage_container_reference.#.uuid`: - uiid of the container reference
     */
    storageContainerReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineDiskListStorageConfigStorageContainerReference>[]>;
}

export interface VirtualMachineDiskListStorageConfigStorageContainerReference {
    /**
     * - The kind name (Default value: project)(Required).
     */
    kind?: pulumi.Input<string>;
    /**
     * - (Required) The name for the vm.
     */
    name?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface VirtualMachineGpuList {
    /**
     * - (Computed) The device ID of the GPU.
     */
    deviceId?: pulumi.Input<number>;
    /**
     * Fraction of the physical GPU assigned.
     */
    fraction?: pulumi.Input<number>;
    /**
     * - (ReadOnly) GPU frame buffer size in MiB.
     */
    frameBufferSizeMib?: pulumi.Input<number>;
    /**
     * - (ReadOnly) Last determined guest driver version.
     */
    guestDriverVersion?: pulumi.Input<string>;
    /**
     * - (Optional) The mode of this GPU.
     */
    mode?: pulumi.Input<string>;
    /**
     * - (ReadOnly) Name of the GPU resource.
     */
    name?: pulumi.Input<string>;
    /**
     * - (ReadOnly) Number of supported virtual display heads.
     */
    numVirtualDisplayHeads?: pulumi.Input<number>;
    /**
     * GPU {segment:bus:device:function} (sbdf) address if assigned.
     */
    pciAddress?: pulumi.Input<string>;
    /**
     * - (ReadOnly) UUID of the GPU.
     */
    uuid?: pulumi.Input<string>;
    /**
     * - (Optional) The vendor of the GPU.
     */
    vendor?: pulumi.Input<string>;
}

export interface VirtualMachineNicList {
    /**
     * - IP endpoints for the adapter. Currently, IPv4 addresses are supported.
     */
    ipEndpointLists?: pulumi.Input<pulumi.Input<inputs.VirtualMachineNicListIpEndpointList>[]>;
    /**
     * - Indicates whether the serial port connection is connected or not (`true` or `false`).
     */
    isConnected?: pulumi.Input<string>;
    /**
     * - The MAC address for the adapter.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * - The model of this NIC. (Options : VIRTIO , E1000).
     */
    model?: pulumi.Input<string>;
    /**
     * - The reference to a network_function_chain.
     */
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - The type of this Network function NIC. Defaults to INGRESS. (Options : INGRESS , EGRESS , TAP).
     */
    networkFunctionNicType?: pulumi.Input<string>;
    /**
     * - The type of this NIC. Defaults to NORMAL_NIC. (Options : NORMAL_NIC , DIRECT_NIC , NETWORK_FUNCTION_NIC).
     */
    nicType?: pulumi.Input<string>;
    /**
     * - The number of tx/rx queue pairs for this NIC.
     */
    numQueues?: pulumi.Input<number>;
    /**
     * - The name of the subnet reference to.
     */
    subnetName?: pulumi.Input<string>;
    /**
     * - The reference to a subnet.
     */
    subnetUuid?: pulumi.Input<string>;
    /**
     * - The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.
     */
    uuid?: pulumi.Input<string>;
}

export interface VirtualMachineNicListIpEndpointList {
    /**
     * - Address string.
     */
    ip?: pulumi.Input<string>;
    /**
     * - Address type. It can only be "ASSIGNED" in the spec. If no type is specified in the spec, the default type is set to "ASSIGNED". (Options : ASSIGNED , LEARNED)
     */
    type?: pulumi.Input<string>;
}

export interface VirtualMachineNicListStatus {
    /**
     * -  The Floating IP associated with the vnic. (Only in `nicListStatus`)
     */
    floatingIp?: pulumi.Input<string>;
    /**
     * - IP endpoints for the adapter. Currently, IPv4 addresses are supported.
     */
    ipEndpointLists?: pulumi.Input<pulumi.Input<inputs.VirtualMachineNicListStatusIpEndpointList>[]>;
    /**
     * - Indicates whether the serial port connection is connected or not (`true` or `false`).
     */
    isConnected?: pulumi.Input<string>;
    /**
     * - The MAC address for the adapter.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * - The model of this NIC. (Options : VIRTIO , E1000).
     */
    model?: pulumi.Input<string>;
    /**
     * - The reference to a network_function_chain.
     */
    networkFunctionChainReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * - The type of this Network function NIC. Defaults to INGRESS. (Options : INGRESS , EGRESS , TAP).
     */
    networkFunctionNicType?: pulumi.Input<string>;
    /**
     * - The type of this NIC. Defaults to NORMAL_NIC. (Options : NORMAL_NIC , DIRECT_NIC , NETWORK_FUNCTION_NIC).
     */
    nicType?: pulumi.Input<string>;
    /**
     * - The number of tx/rx queue pairs for this NIC.
     */
    numQueues?: pulumi.Input<number>;
    /**
     * - The name of the subnet reference to.
     */
    subnetName?: pulumi.Input<string>;
    /**
     * - The reference to a subnet.
     */
    subnetUuid?: pulumi.Input<string>;
    /**
     * - the UUID(Required).
     */
    uuid?: pulumi.Input<string>;
}

export interface VirtualMachineNicListStatusIpEndpointList {
    /**
     * - Address string.
     */
    ip?: pulumi.Input<string>;
    /**
     * - Address type. It can only be "ASSIGNED" in the spec. If no type is specified in the spec, the default type is set to "ASSIGNED". (Options : ASSIGNED , LEARNED)
     */
    type?: pulumi.Input<string>;
}

export interface VirtualMachineSerialPortList {
    /**
     * - Index of the serial port (int).
     */
    index?: pulumi.Input<number>;
    /**
     * - Indicates whether the serial port connection is connected or not (`true` or `false`).
     */
    isConnected?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2ApcConfig {
    /**
     * CPU model associated with the VM if Advanced Processor Compatibility(APC) is enabled. If APC is enabled and no CPU model is explicitly set, a default baseline CPU model is picked by the system. See the APC documentation for more information
     * * `cpu_model.name`: (Required) Name of the CPU model associated with the VM.
     */
    cpuModels?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2ApcConfigCpuModel>[]>;
    /**
     * If enabled, the selected CPU model will be retained across live and cold migrations of the VM.
     */
    isApcEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2ApcConfigCpuModel {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * VM name.
     */
    name?: pulumi.Input<string>;
}

export interface VirtualMachineV2AvailabilityZone {
    /**
     * The globally unique identifier of an availability zone type UUID.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2BootConfig {
    /**
     * LegacyBoot config Object
     */
    legacyBoots?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigLegacyBoot>[]>;
    /**
     * UefiBoot config Object
     */
    uefiBoots?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBoot>[]>;
}

export interface VirtualMachineV2BootConfigLegacyBoot {
    /**
     * Boot Device object
     * * `boot_device.boot_device_disk`: (Optional) Disk address.
     * * `boot_device.boot_device_disk.disk_address.bus_type`: (Required) Bus type for the device
     * * `boot_device.boot_device_disk.disk_address.index`: (Required) Device index on the bus. This field is ignored unless the bus details are specified.
     *
     * * `boot_device.boot_device_nic`: (Optional) Disk Nic address.
     * * `boot_device.boot_device_nic.mac_address`: (Required) mac address
     */
    bootDevices?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigLegacyBootBootDevice>[]>;
    /**
     * Indicates the order of device types in which the VM should try to boot from. If the boot device order is not provided the system will decide an appropriate boot device order. Valid values are 'CDROM', 'DISK', 'NETWORK'.
     */
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineV2BootConfigLegacyBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceNic>[]>;
}

export interface VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2BootConfigLegacyBootBootDeviceBootDeviceNic {
    /**
     * MAC address of the emulated NIC.
     */
    macAddress?: pulumi.Input<string>;
}

export interface VirtualMachineV2BootConfigUefiBoot {
    /**
     * Boot Device object
     * * `boot_device.boot_device_disk`: (Optional) Disk address.
     * * `boot_device.boot_device_disk.disk_address.bus_type`: (Required) Bus type for the device
     * * `boot_device.boot_device_disk.disk_address.index`: (Required) Device index on the bus. This field is ignored unless the bus details are specified.
     *
     * * `boot_device.boot_device_nic`: (Optional) Disk Nic address.
     * * `boot_device.boot_device_nic.mac_address`: (Required) mac address
     */
    bootDevices?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootBootDevice>[]>;
    /**
     * Indicates the order of device types in which the VM should try to boot from. If the boot device order is not provided the system will decide an appropriate boot device order. Valid values are 'CDROM', 'DISK', 'NETWORK'.
     */
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicate whether to enable secure boot or not
     */
    isSecureBootEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration for NVRAM to be presented to the VM.
     * * `nvram_device.backing_storage_info`: (Required) Storage provided by Nutanix ADSF
     */
    nvramDevices?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDevice>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceNic>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2BootConfigUefiBootBootDeviceBootDeviceNic {
    /**
     * MAC address of the emulated NIC.
     */
    macAddress?: pulumi.Input<string>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDevice {
    backingStorageInfos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfo>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    /**
     * Storage configuration for VM.
     */
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSource {
    /**
     * Reference to image or vm disk
     */
    references?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference {
    /**
     * Image Reference
     * * `image_reference.image_ext_id`: (Required) The globally unique identifier of an image. It should be of type UUID.
     */
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference>[]>;
    /**
     * Vm Disk Reference
     * * `vm_disk_reference.disk_ext_id`: (Optional) The globally unique identifier of a VM disk. It should be of type UUID.
     * * `vm_disk_reference.disk_address`: (Optional) Disk address.
     * * `vm_disk_reference.vm_reference`: (Optional) This is a reference to a VM.
     */
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig {
    /**
     * Indicates whether the virtual disk is pinned to the hot tier or not.
     */
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2Category {
    /**
     * A globally unique identifier of a VM category of type UUID.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2CdRom {
    /**
     * Storage provided by Nutanix ADSF
     */
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfo>[]>;
    /**
     * Virtual Machine disk (VM disk).
     */
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomDiskAddress>[]>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * Type of ISO image inserted in CD-ROM. Valid values "OTHER", "GUEST_TOOLS", "GUEST_CUSTOMIZATION" .
     */
    isoType?: pulumi.Input<string>;
}

export interface VirtualMachineV2CdRomBackingInfo {
    /**
     * A reference to a disk or image that contains the contents of a disk.
     */
    dataSources?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    /**
     * Size of the disk in Bytes
     */
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    /**
     * Storage configuration for VM disks
     * * `storage_config.is_flash_mode_enabled`: Indicates whether the virtual disk is pinned to the hot tier or not.
     */
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoStorageConfig>[]>;
    /**
     * This reference is for disk level storage container preference. This preference specifies the storage container to which this disk belongs.
     */
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoStorageContainer>[]>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSource {
    /**
     * Reference to image or vm disk
     */
    references?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSourceReference>[]>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSourceReference {
    /**
     * Image Reference
     * * `image_reference.image_ext_id`: (Required) The globally unique identifier of an image. It should be of type UUID.
     */
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSourceReferenceImageReference>[]>;
    /**
     * Vm Disk Reference
     * * `vm_disk_reference.disk_ext_id`: (Optional) The globally unique identifier of a VM disk. It should be of type UUID.
     * * `vm_disk_reference.disk_address`: (Optional) Disk address.
     * * `vm_disk_reference.vm_reference`: (Optional) This is a reference to a VM.
     */
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2CdRomBackingInfoStorageConfig {
    /**
     * Indicates whether the virtual disk is pinned to the hot tier or not.
     */
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2CdRomBackingInfoStorageContainer {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2CdRomDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2Cluster {
    /**
     * The globally unique identifier of a cluster type UUID.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2Disk {
    /**
     * Supporting storage to create virtual disk on.
     * * `backing_info.vm_disk`:(Optional) backing Info for vmDisk
     * * `backing_info.adfs_volume_group_reference`: (Required) Volume Group Reference
     * * `backing_info.adfs_volume_group_reference.volume_group_ext_id`: (Required) The globally unique identifier of an ADSF volume group. It should be of type UUID.
     */
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfo>[]>;
    /**
     * Disk address.
     * * `disk_address.bus_type`: (Required) Bus type for the device. The acceptable values are: SCSI, IDE, PCI, SATA, SPAPR (only PPC).
     * * `disk_address.index`: (Required) Device index on the bus. This field is ignored unless the bus details are specified.
     */
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskDiskAddress>[]>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2DiskBackingInfo {
    adfsVolumeGroupReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoAdfsVolumeGroupReference>[]>;
    vmDisks?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDisk>[]>;
}

export interface VirtualMachineV2DiskBackingInfoAdfsVolumeGroupReference {
    volumeGroupExtId?: pulumi.Input<string>;
}

export interface VirtualMachineV2DiskBackingInfoVmDisk {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    /**
     * Storage configuration for VM.
     */
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskStorageContainer>[]>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSource {
    /**
     * Reference to image or vm disk
     */
    references?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReference>[]>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSourceReference {
    /**
     * Image Reference
     * * `image_reference.image_ext_id`: (Required) The globally unique identifier of an image. It should be of type UUID.
     */
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceImageReference>[]>;
    /**
     * Vm Disk Reference
     * * `vm_disk_reference.disk_ext_id`: (Optional) The globally unique identifier of a VM disk. It should be of type UUID.
     * * `vm_disk_reference.disk_address`: (Optional) Disk address.
     * * `vm_disk_reference.vm_reference`: (Optional) This is a reference to a VM.
     */
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference>[]>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskStorageConfig {
    /**
     * Indicates whether the virtual disk is pinned to the hot tier or not.
     */
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2DiskBackingInfoVmDiskStorageContainer {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2DiskDiskAddress {
    busType?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
}

export interface VirtualMachineV2Gpus {
    /**
     * The device Id of the GPU.
     */
    deviceId?: pulumi.Input<number>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    fraction?: pulumi.Input<number>;
    frameBufferSizeBytes?: pulumi.Input<number>;
    guestDriverVersion?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GpusLink>[]>;
    /**
     * ) The mode of this GPU. Valid values "PASSTHROUGH_GRAPHICS", "PASSTHROUGH_COMPUTE", "VIRTUAL" .
     */
    mode?: pulumi.Input<string>;
    /**
     * VM name.
     */
    name?: pulumi.Input<string>;
    numVirtualDisplayHeads?: pulumi.Input<number>;
    /**
     * The (S)egment:(B)us:(D)evice.(F)unction hardware address.
     */
    pciAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GpusPciAddress>[]>;
    tenantId?: pulumi.Input<string>;
    /**
     * The vendor of the GPU. Valid values "NVIDIA", "AMD", "INTEL" .
     */
    vendor?: pulumi.Input<string>;
}

export interface VirtualMachineV2GpusLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface VirtualMachineV2GpusPciAddress {
    bus?: pulumi.Input<number>;
    device?: pulumi.Input<number>;
    func?: pulumi.Input<number>;
    segment?: pulumi.Input<number>;
}

export interface VirtualMachineV2GuestCustomization {
    /**
     * The Nutanix Guest Tools customization settings.
     *
     * * `config.sysprep`: Sysprep config
     * * `config.cloud_init`: CloudInit Config
     */
    configs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfig>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprep>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInit {
    /**
     * The script to use for cloud-init.
     * * `cloud_init_script.user_data`: (Optional) user data object
     * * `cloud_init_script.user_data.value`: (Optional) base64 encoded cloud init script as string
     * * `cloud_init_script.custom_keys`: (Optional) The list of the individual KeyValuePair elements.
     */
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScript>[]>;
    /**
     * Type of datasource. Default: CONFIG_DRIVE_V2
     */
    datasourceType?: pulumi.Input<string>;
    /**
     * The contents of the metaData configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded. Default value is 'CONFIG_DRIVE_V2'.
     */
    metadata?: pulumi.Input<string>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePair {
    /**
     * VM name.
     */
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface VirtualMachineV2GuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprep {
    /**
     * Indicates whether the guest will be freshly installed using this unattend configuration, or this unattend configuration will be applied to a pre-prepared image. Values allowed is 'PREPARED', 'FRESH'.
     */
    installType?: pulumi.Input<string>;
    /**
     * Object either UnattendXml or CustomKeyValues
     * * `sysprep_script.unattend_xml`: (Optional) xml object
     * * `sysprep_script.unattend_xml.value`: (Optional) base64 encoded sysprep unattended xml
     * * `sysprep_script.custom_key_values`: (Optional) The list of the individual KeyValuePair elements.
     */
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    /**
     * VM name.
     */
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValue {
    boolean?: pulumi.Input<boolean>;
    integer?: pulumi.Input<number>;
    integerLists?: pulumi.Input<pulumi.Input<number>[]>;
    mapOfStrings?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString>[]>;
    object?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    string?: pulumi.Input<string>;
    stringLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePairValueMapOfString {
    map?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface VirtualMachineV2GuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value: pulumi.Input<string>;
}

export interface VirtualMachineV2GuestTool {
    availableVersion?: pulumi.Input<string>;
    /**
     * The list of the application names that are enabled on the guest VM.
     */
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    guestOsVersion?: pulumi.Input<string>;
    /**
     * Indicates whether Nutanix Guest Tools is enabled or not.
     */
    isEnabled?: pulumi.Input<boolean>;
    isInstalled?: pulumi.Input<boolean>;
    isIsoInserted?: pulumi.Input<boolean>;
    isReachable?: pulumi.Input<boolean>;
    isVmMobilityDriversInstalled?: pulumi.Input<boolean>;
    isVssSnapshotCapable?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface VirtualMachineV2Host {
    /**
     * A globally unique identifier of a host of type UUID.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2Nic {
    /**
     * Defines a NIC emulated by the hypervisor
     */
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicBackingInfo>[]>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * Network information for a NIC.
     */
    networkInfos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfo>[]>;
}

export interface VirtualMachineV2NicBackingInfo {
    isConnected?: pulumi.Input<boolean>;
    /**
     * MAC address of the emulated NIC.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Options for the NIC emulation. Valid values "VIRTIO" , "E1000".
     */
    model?: pulumi.Input<string>;
    /**
     * The number of Tx/Rx queue pairs for this NIC. Default is 1.
     */
    numQueues?: pulumi.Input<number>;
}

export interface VirtualMachineV2NicNetworkInfo {
    /**
     * The IP address configurations.
     */
    ipv4Configs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoIpv4Config>[]>;
    ipv4Infos?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoIpv4Info>[]>;
    /**
     * The network function chain associates with the NIC. Only valid if nicType is NORMAL_NIC.
     */
    networkFunctionChains?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoNetworkFunctionChain>[]>;
    /**
     * The type of this Network function NIC. Defaults to INGRESS.
     */
    networkFunctionNicType?: pulumi.Input<string>;
    /**
     * NIC type. Valid values "SPAN_DESTINATION_NIC",  "NORMAL_NIC", "DIRECT_NIC", "NETWORK_FUNCTION_NIC" .
     */
    nicType?: pulumi.Input<string>;
    /**
     * Indicates whether an unknown unicast traffic is forwarded to this NIC or not. This is applicable only for the NICs on the overlay subnets.
     */
    shouldAllowUnknownMacs?: pulumi.Input<boolean>;
    /**
     * Network identifier for this adapter. Only valid if nicType is NORMAL_NIC or DIRECT_NIC
     * * `subnet.ext_id`: (Optional) The globally unique identifier of a subnet of type UUID.
     */
    subnets?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoSubnet>[]>;
    /**
     * List of networks to trunk if VLAN mode is marked as TRUNKED. If empty and VLAN mode is set to TRUNKED, all the VLANs are trunked.
     */
    trunkedVlans?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * all the virtual NICs are created in ACCESS mode, which permits only one VLAN per virtual network. TRUNKED mode allows multiple VLANs on a single VM NIC for network-aware user VMs.
     */
    vlanMode?: pulumi.Input<string>;
}

export interface VirtualMachineV2NicNetworkInfoIpv4Config {
    /**
     * The IP address of the NIC.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoIpv4ConfigIpAddress>[]>;
    /**
     * Secondary IP addresses for the NIC.
     */
    secondaryIpAddressLists?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoIpv4ConfigSecondaryIpAddressList>[]>;
    /**
     * If set to true (default value), an IP address must be assigned to the VM NIC - either the one explicitly specified by the user or allocated automatically by the IPAM service by not specifying the IP address. If false, then no IP assignment is required for this VM NIC.
     */
    shouldAssignIp?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2NicNetworkInfoIpv4ConfigIpAddress {
    /**
     * The prefix length of the IP address.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * The IPv4 address of the host.
     */
    value?: pulumi.Input<string>;
}

export interface VirtualMachineV2NicNetworkInfoIpv4ConfigSecondaryIpAddressList {
    /**
     * The prefix length of the IP address.
     */
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VirtualMachineV2NicNetworkInfoIpv4Info {
    learnedIpAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2NicNetworkInfoIpv4InfoLearnedIpAddress>[]>;
}

export interface VirtualMachineV2NicNetworkInfoIpv4InfoLearnedIpAddress {
    /**
     * The prefix length of the IP address.
     */
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface VirtualMachineV2NicNetworkInfoNetworkFunctionChain {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2NicNetworkInfoSubnet {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2OwnershipInfo {
    /**
     * Reference to the owner.
     * * `owner.ext_id`: A globally unique identifier of a VM owner type UUID.
     */
    owners?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2OwnershipInfoOwner>[]>;
}

export interface VirtualMachineV2OwnershipInfoOwner {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2ProtectionPolicyState {
    /**
     * Reference to the policy object in use.
     * * `policy.ext_id`: (Optional) Reference to the policy object in use.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2ProtectionPolicyStatePolicy>[]>;
}

export interface VirtualMachineV2ProtectionPolicyStatePolicy {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2SerialPort {
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * ) Index of the serial port.
     */
    index?: pulumi.Input<number>;
    /**
     * Indicates whether the serial port is connected or not.
     */
    isConnected?: pulumi.Input<boolean>;
}

export interface VirtualMachineV2Source {
    /**
     * Reference to an entity from which the VM should be cloned or created. Values are:
     * - VM_RECOVERY_POINT: Reference to the recovery point entity from which the VM should be cloned or created.
     * - VM: Reference to an entity from which the VM should be cloned or created.
     */
    entityType?: pulumi.Input<string>;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
}

export interface VirtualMachineV2StorageConfig {
    /**
     * Indicates whether the virtual disk is pinned to the hot tier or not.
     */
    isFlashModeEnabled?: pulumi.Input<boolean>;
    /**
     * QoS parameters to be enforced.
     * * `qos_config.throttled_iops`: (Optional) Throttled IOPS for the governed entities. The block size for the I/O is 32 kB.
     */
    qosConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineV2StorageConfigQosConfig>[]>;
}

export interface VirtualMachineV2StorageConfigQosConfig {
    throttledIops?: pulumi.Input<number>;
}

export interface VirtualMachineV2VtpmConfig {
    /**
     * Indicates whether the virtual trusted platform module is enabled for the Guest OS or not.
     */
    isVtpmEnabled?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface VmCdromInsertEjectV2BackingInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSource>[]>;
    diskSizeBytes?: pulumi.Input<number>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoStorageContainer>[]>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSourceReference>[]>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface VmCdromInsertEjectV2BackingInfoStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VmCdromInsertEjectV2BackingInfoStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2ApcConfig {
    cpuModels?: pulumi.Input<pulumi.Input<inputs.VmCloneV2ApcConfigCpuModel>[]>;
    isApcEnabled?: pulumi.Input<boolean>;
}

export interface VmCloneV2ApcConfigCpuModel {
    extId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface VmCloneV2BootConfig {
    legacyBoots?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigLegacyBoot>[]>;
    uefiBoots?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBoot>[]>;
}

export interface VmCloneV2BootConfigLegacyBoot {
    bootDevices?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigLegacyBootBootDevice>[]>;
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VmCloneV2BootConfigLegacyBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceNic>[]>;
}

export interface VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2BootConfigLegacyBootBootDeviceBootDeviceNic {
    macAddress?: pulumi.Input<string>;
}

export interface VmCloneV2BootConfigUefiBoot {
    bootDevices?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootBootDevice>[]>;
    bootOrders?: pulumi.Input<pulumi.Input<string>[]>;
    isSecureBootEnabled?: pulumi.Input<boolean>;
    nvramDevices?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDevice>[]>;
}

export interface VmCloneV2BootConfigUefiBootBootDevice {
    bootDeviceDisks?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootBootDeviceBootDeviceDisk>[]>;
    bootDeviceNics?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootBootDeviceBootDeviceNic>[]>;
}

export interface VmCloneV2BootConfigUefiBootBootDeviceBootDeviceDisk {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress>[]>;
}

export interface VmCloneV2BootConfigUefiBootBootDeviceBootDeviceDiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2BootConfigUefiBootBootDeviceBootDeviceNic {
    macAddress?: pulumi.Input<string>;
}

export interface VmCloneV2BootConfigUefiBootNvramDevice {
    backingStorageInfos?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfo>[]>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer>[]>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference>[]>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VmCloneV2BootConfigUefiBootNvramDeviceBackingStorageInfoStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2Category {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2CdRom {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfo>[]>;
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomDiskAddress>[]>;
    extId?: pulumi.Input<string>;
    isoType?: pulumi.Input<string>;
}

export interface VmCloneV2CdRomBackingInfo {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoStorageContainer>[]>;
}

export interface VmCloneV2CdRomBackingInfoDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSourceReference>[]>;
}

export interface VmCloneV2CdRomBackingInfoDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReference>[]>;
}

export interface VmCloneV2CdRomBackingInfoDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2CdRomBackingInfoDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2CdRomBackingInfoStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VmCloneV2CdRomBackingInfoStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2CdRomDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2Cluster {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2Disk {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfo>[]>;
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskDiskAddress>[]>;
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2DiskBackingInfo {
    adfsVolumeGroupReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoAdfsVolumeGroupReference>[]>;
    vmDisks?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDisk>[]>;
}

export interface VmCloneV2DiskBackingInfoAdfsVolumeGroupReference {
    volumeGroupExtId?: pulumi.Input<string>;
}

export interface VmCloneV2DiskBackingInfoVmDisk {
    dataSources?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSource>[]>;
    diskExtId?: pulumi.Input<string>;
    diskSizeBytes?: pulumi.Input<number>;
    isMigrationInProgress?: pulumi.Input<boolean>;
    storageConfigs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskStorageConfig>[]>;
    storageContainers?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskStorageContainer>[]>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSource {
    references?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSourceReference>[]>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSourceReference {
    imageReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceImageReference>[]>;
    vmDiskReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference>[]>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceImageReference {
    imageExtId?: pulumi.Input<string>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference {
    diskAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress>[]>;
    diskExtId?: pulumi.Input<string>;
    vmReferences?: pulumi.Input<pulumi.Input<inputs.VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference>[]>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReferenceVmReference {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2DiskBackingInfoVmDiskStorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
}

export interface VmCloneV2DiskBackingInfoVmDiskStorageContainer {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2DiskDiskAddress {
    busType?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
}

export interface VmCloneV2Gpus {
    deviceId?: pulumi.Input<number>;
    extId?: pulumi.Input<string>;
    fraction?: pulumi.Input<number>;
    frameBufferSizeBytes?: pulumi.Input<number>;
    guestDriverVersion?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numVirtualDisplayHeads?: pulumi.Input<number>;
    pciAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GpusPciAddress>[]>;
    vendor?: pulumi.Input<string>;
}

export interface VmCloneV2GpusPciAddress {
    bus?: pulumi.Input<number>;
    device?: pulumi.Input<number>;
    func?: pulumi.Input<number>;
    segment?: pulumi.Input<number>;
}

export interface VmCloneV2GuestCustomization {
    configs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfig>[]>;
}

export interface VmCloneV2GuestCustomizationConfig {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigSysprep>[]>;
}

export interface VmCloneV2GuestCustomizationConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface VmCloneV2GuestCustomizationConfigCloudInitCloudInitScript {
    customKeys?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKey>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKey {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyKeyValuePair>[]>;
}

export interface VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptCustomKeyKeyValuePair {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VmCloneV2GuestCustomizationConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface VmCloneV2GuestCustomizationConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigSysprepSysprepScript>[]>;
}

export interface VmCloneV2GuestCustomizationConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface VmCloneV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface VmCloneV2GuestCustomizationConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VmCloneV2GuestCustomizationConfigSysprepSysprepScriptUnattendXml {
    value?: pulumi.Input<string>;
}

export interface VmCloneV2GuestTool {
    availableVersion?: pulumi.Input<string>;
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    guestOsVersion?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    isInstalled?: pulumi.Input<boolean>;
    isIsoInserted?: pulumi.Input<boolean>;
    isReachable?: pulumi.Input<boolean>;
    isVmMobilityDriversInstalled?: pulumi.Input<boolean>;
    isVssSnapshotCapable?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface VmCloneV2Host {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface VmCloneV2Nic {
    backingInfos?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicBackingInfo>[]>;
    extId?: pulumi.Input<string>;
    networkInfos?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfo>[]>;
}

export interface VmCloneV2NicBackingInfo {
    isConnected?: pulumi.Input<boolean>;
    macAddress?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    numQueues?: pulumi.Input<number>;
}

export interface VmCloneV2NicNetworkInfo {
    ipv4Configs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfoIpv4Config>[]>;
    networkFunctionChains?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfoNetworkFunctionChain>[]>;
    networkFunctionNicType?: pulumi.Input<string>;
    nicType?: pulumi.Input<string>;
    shouldAllowUnknownMacs?: pulumi.Input<boolean>;
    subnets?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfoSubnet>[]>;
    trunkedVlans?: pulumi.Input<pulumi.Input<number>[]>;
    vlanMode?: pulumi.Input<string>;
}

export interface VmCloneV2NicNetworkInfoIpv4Config {
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfoIpv4ConfigIpAddress>[]>;
    secondaryIpAddressLists?: pulumi.Input<pulumi.Input<inputs.VmCloneV2NicNetworkInfoIpv4ConfigSecondaryIpAddressList>[]>;
    shouldAssignIp?: pulumi.Input<boolean>;
}

export interface VmCloneV2NicNetworkInfoIpv4ConfigIpAddress {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VmCloneV2NicNetworkInfoIpv4ConfigSecondaryIpAddressList {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VmCloneV2NicNetworkInfoNetworkFunctionChain {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2NicNetworkInfoSubnet {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2OwnershipInfo {
    owners?: pulumi.Input<pulumi.Input<inputs.VmCloneV2OwnershipInfoOwner>[]>;
}

export interface VmCloneV2OwnershipInfoOwner {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2ProtectionPolicyState {
    policies?: pulumi.Input<pulumi.Input<inputs.VmCloneV2ProtectionPolicyStatePolicy>[]>;
}

export interface VmCloneV2ProtectionPolicyStatePolicy {
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2SerialPort {
    extId?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
    isConnected?: pulumi.Input<boolean>;
}

export interface VmCloneV2Source {
    entityType?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
}

export interface VmCloneV2StorageConfig {
    isFlashModeEnabled?: pulumi.Input<boolean>;
    qosConfigs?: pulumi.Input<pulumi.Input<inputs.VmCloneV2StorageConfigQosConfig>[]>;
}

export interface VmCloneV2StorageConfigQosConfig {
    throttledIops?: pulumi.Input<number>;
}

export interface VmCloneV2VtpmConfig {
    isVtpmEnabled?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

export interface VmGcUpdateV2Config {
    cloudInits?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigCloudInit>[]>;
    syspreps?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigSysprep>[]>;
}

export interface VmGcUpdateV2ConfigCloudInit {
    cloudInitScripts?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigCloudInitCloudInitScript>[]>;
    datasourceType?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
}

export interface VmGcUpdateV2ConfigCloudInitCloudInitScript {
    customKeys?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigCloudInitCloudInitScriptCustomKey>[]>;
    userDatas?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigCloudInitCloudInitScriptUserData>[]>;
}

export interface VmGcUpdateV2ConfigCloudInitCloudInitScriptCustomKey {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigCloudInitCloudInitScriptCustomKeyKeyValuePair>[]>;
}

export interface VmGcUpdateV2ConfigCloudInitCloudInitScriptCustomKeyKeyValuePair {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VmGcUpdateV2ConfigCloudInitCloudInitScriptUserData {
    value?: pulumi.Input<string>;
}

export interface VmGcUpdateV2ConfigSysprep {
    installType?: pulumi.Input<string>;
    sysprepScripts?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigSysprepSysprepScript>[]>;
}

export interface VmGcUpdateV2ConfigSysprepSysprepScript {
    customKeyValues?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigSysprepSysprepScriptCustomKeyValue>[]>;
    unattendXmls?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigSysprepSysprepScriptUnattendXml>[]>;
}

export interface VmGcUpdateV2ConfigSysprepSysprepScriptCustomKeyValue {
    keyValuePairs?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2ConfigSysprepSysprepScriptCustomKeyValueKeyValuePair>[]>;
}

export interface VmGcUpdateV2ConfigSysprepSysprepScriptCustomKeyValueKeyValuePair {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface VmGcUpdateV2ConfigSysprepSysprepScriptUnattendXml {
    value?: pulumi.Input<string>;
}

export interface VmNetworkDeviceAssignIpV2IpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface VmNetworkDeviceMigrateV2IpAddress {
    prefixLength?: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface VmNetworkDeviceMigrateV2Subnet {
    extId?: pulumi.Input<string>;
}

export interface VmShutdownActionV2GuestPowerStateTransitionConfig {
    /**
     * Indicates whether to run the set script before the VM shutdowns/restarts.
     */
    shouldEnableScriptExec?: pulumi.Input<boolean>;
    /**
     * Indicates whether to abort VM shutdown/restart if the script fails.
     *
     *
     * See detailed information in [Nutanix VMs Power Action Shutdown V4](https://developers.nutanix.com/api-reference?namespace=vmm&version=v4.0#tag/Vm/operation/shutdownVm).
     * See detailed information in [Nutanix VMs Power Action Shutdown Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&version=v4.0#tag/Vm/operation/shutdownGuestVm).
     * See detailed information in [Nutanix VMs Power Action Reboot V4](https://developers.nutanix.com/api-reference?namespace=vmm&version=v4.0#tag/Vm/operation/rebootVm).
     * See detailed information in [Nutanix VMs Power Action Reboot Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&version=v4.0#tag/Vm/operation/rebootGuestVm).
     */
    shouldFailOnScriptFailure?: pulumi.Input<boolean>;
}

export interface VolumeGroupDiskV2DiskDataSourceReference {
    /**
     * - The Entity Type of the Data Source Reference. valid values are:
     * - STORAGE_CONTAINER
     * - VM_DISK
     * - VOLUME_DISK
     * - DISK_RECOVERY_POINT
     */
    entityType?: pulumi.Input<string>;
    /**
     * - The external identifier of the Data Source Reference.
     */
    extId: pulumi.Input<string>;
    /**
     * - The name of the Data Source Reference.bled for the Volume Group.
     */
    name?: pulumi.Input<string>;
    /**
     * - The uri list of the Data Source Reference.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VolumeGroupDiskV2DiskStorageFeature {
    /**
     * - this field will avoid down migration of data from the hot tier unless the overrides field is specified for the virtual disks.
     */
    flashModes?: pulumi.Input<pulumi.Input<inputs.VolumeGroupDiskV2DiskStorageFeatureFlashMode>[]>;
}

export interface VolumeGroupDiskV2DiskStorageFeatureFlashMode {
    /**
     * - Indicates whether the flash mode is enabled for the Volume Group Disk.
     *
     * See detailed information in [Nutanix Create Volume Disk V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/createVolumeDisk).
     */
    isEnabled?: pulumi.Input<boolean>;
}

export interface VolumeGroupIscsiClientV2IscsiInitiatorNetworkId {
    /**
     * A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
     */
    fqdns?: pulumi.Input<pulumi.Input<inputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdFqdn>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdIpv4>[]>;
    /**
     * An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdIpv6>[]>;
}

export interface VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdFqdn {
    /**
     * - The fully qualified domain name.
     *
     *
     * See detailed information in [Nutanix Attach an iSCSI Client to Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/attachIscsiClient).
     */
    value?: pulumi.Input<string>;
}

export interface VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdIpv4 {
    /**
     * - The prefix length of the network to which this host IPv4 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4 format.
     */
    value?: pulumi.Input<string>;
}

export interface VolumeGroupIscsiClientV2IscsiInitiatorNetworkIdIpv6 {
    /**
     * - The prefix length of the network to which this host IPv6 address belongs.
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv6 format.
     */
    value?: pulumi.Input<string>;
}

export interface VolumeGroupV2Disk {
    /**
     * - Volume Disk description.
     */
    description?: pulumi.Input<string>;
    /**
     * -(Required) Disk Data Source Reference.
     */
    diskDataSourceReferences: pulumi.Input<pulumi.Input<inputs.VolumeGroupV2DiskDiskDataSourceReference>[]>;
    /**
     * - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
     */
    diskSizeBytes: pulumi.Input<number>;
    /**
     * - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
     */
    diskStorageFeatures?: pulumi.Input<pulumi.Input<inputs.VolumeGroupV2DiskDiskStorageFeature>[]>;
    /**
     * - Index of the disk in a Volume Group. This field is optional and immutable.
     */
    index?: pulumi.Input<number>;
}

export interface VolumeGroupV2DiskDiskDataSourceReference {
    /**
     * - The Entity Type of the Data Source Reference.
     */
    entityType?: pulumi.Input<string>;
    /**
     * - The external identifier of the Data Source Reference.
     */
    extId: pulumi.Input<string>;
    /**
     * - The name of the Data Source Reference.bled for the Volume Group.
     */
    name?: pulumi.Input<string>;
    /**
     * - The uri list of the Data Source Reference.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VolumeGroupV2DiskDiskStorageFeature {
    /**
     * - this field will avoid down migration of data from the hot tier unless the overrides field is specified for the virtual disks.
     */
    flashModes?: pulumi.Input<pulumi.Input<inputs.VolumeGroupV2DiskDiskStorageFeatureFlashMode>[]>;
}

export interface VolumeGroupV2DiskDiskStorageFeatureFlashMode {
    /**
     * - Indicates whether the flash mode is enabled for the Volume Group Disk.
     *
     * See detailed information in [Nutanix Create Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/createVolumeGroup).
     */
    isEnabled?: pulumi.Input<boolean>;
}

export interface VolumeGroupV2IscsiFeature {
    /**
     * - The authentication type enabled for the Volume Group.
     */
    enabledAuthentications?: pulumi.Input<string>;
    /**
     * Target secret in case of a CHAP authentication. This field must only be provided in case the authentication type is not set to CHAP. This is an optional field and it cannot be retrieved once configured.
     */
    targetSecret?: pulumi.Input<string>;
}

export interface VolumeGroupV2StorageFeature {
    /**
     * - this field will avoid down migration of data from the hot tier unless the overrides field is specified for the virtual disks.
     */
    flashModes?: pulumi.Input<pulumi.Input<inputs.VolumeGroupV2StorageFeatureFlashMode>[]>;
}

export interface VolumeGroupV2StorageFeatureFlashMode {
    /**
     * - Indicates whether the flash mode is enabled for the Volume Group Disk.
     *
     * See detailed information in [Nutanix Create Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/createVolumeGroup).
     */
    isEnabled?: pulumi.Input<boolean>;
}

export interface VpcCommonDomainNameServerIpList {
    /**
     * ip address.
     */
    ip?: pulumi.Input<string>;
}

export interface VpcExternalSubnetListStatus {
    activeGatewayNode?: pulumi.Input<inputs.VpcExternalSubnetListStatusActiveGatewayNode>;
    externalIpLists?: pulumi.Input<pulumi.Input<string>[]>;
    externalSubnetReference: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface VpcExternalSubnetListStatusActiveGatewayNode {
    hostReference: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ipAddress?: pulumi.Input<string>;
}

export interface VpcExternallyRoutablePrefixList {
    /**
     * ip address.
     */
    ip: pulumi.Input<string>;
    /**
     * prefix length.
     */
    prefixLength: pulumi.Input<number>;
}

export interface VpcV2CommonDhcpOption {
    /**
     * List of Domain Name Server addresses
     * - `domain_name_servers.ipv4`:(Optional) Reference to address configuration
     * - `domain_name_servers.ipv6`: (Optional) Reference to address configuration
     */
    domainNameServers?: pulumi.Input<pulumi.Input<inputs.VpcV2CommonDhcpOptionDomainNameServer>[]>;
}

export interface VpcV2CommonDhcpOptionDomainNameServer {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VpcV2CommonDhcpOptionDomainNameServerIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VpcV2CommonDhcpOptionDomainNameServerIpv6>[]>;
}

export interface VpcV2CommonDhcpOptionDomainNameServerIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2CommonDhcpOptionDomainNameServerIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternalSubnet {
    activeGatewayCount?: pulumi.Input<number>;
    activeGatewayNodes?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetActiveGatewayNode>[]>;
    /**
     * List of IP Addresses used for SNAT, if NAT is enabled on the external subnet. If NAT is not enabled, this specifies the IP address of the VPC port connected to the external gateway.
     */
    externalIps?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetExternalIp>[]>;
    gatewayNodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * External subnet reference.
     */
    subnetReference: pulumi.Input<string>;
}

export interface VpcV2ExternalSubnetActiveGatewayNode {
    nodeId?: pulumi.Input<string>;
    nodeIpAddresses?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddress>[]>;
}

export interface VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddress {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddressIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddressIpv6>[]>;
}

export interface VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternalSubnetExternalIp {
    /**
     * Reference to address configuration
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetExternalIpIpv4>[]>;
    /**
     * Reference to address configuration
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternalSubnetExternalIpIpv6>[]>;
}

export interface VpcV2ExternalSubnetExternalIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternalSubnetExternalIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternallyRoutablePrefix {
    /**
     * IP V4 Configuration
     * - `ipv4.ip`: (Required) Reference to address configuration
     * - `ipv4.prefix_length`: (Required) The prefix length of the network
     */
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternallyRoutablePrefixIpv4>[]>;
    /**
     * IP V6 Configuration
     * - `ipv6.ip`: (Required) Reference to address configuration
     * - `ipv6.prefix_length`: (Required) The prefix length of the network
     */
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternallyRoutablePrefixIpv6>[]>;
}

export interface VpcV2ExternallyRoutablePrefixIpv4 {
    ips?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternallyRoutablePrefixIpv4Ip>[]>;
    prefixLength: pulumi.Input<number>;
}

export interface VpcV2ExternallyRoutablePrefixIpv4Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2ExternallyRoutablePrefixIpv6 {
    ips?: pulumi.Input<pulumi.Input<inputs.VpcV2ExternallyRoutablePrefixIpv6Ip>[]>;
    prefixLength: pulumi.Input<number>;
}

export interface VpcV2ExternallyRoutablePrefixIpv6Ip {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2Link {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface VpcV2Metadata {
    categoryIds?: pulumi.Input<pulumi.Input<any[]>[]>;
    ownerReferenceId?: pulumi.Input<string>;
    ownerUserName?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    projectReferenceId?: pulumi.Input<string>;
}

export interface VpcV2SnatIp {
    ipv4s?: pulumi.Input<pulumi.Input<inputs.VpcV2SnatIpIpv4>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<inputs.VpcV2SnatIpIpv6>[]>;
}

export interface VpcV2SnatIpIpv4 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}

export interface VpcV2SnatIpIpv6 {
    prefixLength?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
}
