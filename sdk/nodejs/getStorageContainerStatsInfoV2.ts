// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageContainerStatsInfoV2(args: GetStorageContainerStatsInfoV2Args, opts?: pulumi.InvokeOptions): Promise<GetStorageContainerStatsInfoV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getStorageContainerStatsInfoV2:getStorageContainerStatsInfoV2", {
        "endTime": args.endTime,
        "extId": args.extId,
        "samplingInterval": args.samplingInterval,
        "startTime": args.startTime,
        "statType": args.statType,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageContainerStatsInfoV2.
 */
export interface GetStorageContainerStatsInfoV2Args {
    endTime: string;
    extId: string;
    samplingInterval?: number;
    startTime: string;
    statType?: string;
}

/**
 * A collection of values returned by getStorageContainerStatsInfoV2.
 */
export interface GetStorageContainerStatsInfoV2Result {
    readonly containerExtId: string;
    readonly controllerAvgIoLatencyuSecs: outputs.GetStorageContainerStatsInfoV2ControllerAvgIoLatencyuSec[];
    readonly controllerAvgReadIoLatencyuSecs: outputs.GetStorageContainerStatsInfoV2ControllerAvgReadIoLatencyuSec[];
    readonly controllerAvgWriteIoLatencyuSecs: outputs.GetStorageContainerStatsInfoV2ControllerAvgWriteIoLatencyuSec[];
    readonly controllerIoBandwidthKbps: outputs.GetStorageContainerStatsInfoV2ControllerIoBandwidthKbp[];
    readonly controllerNumIops: outputs.GetStorageContainerStatsInfoV2ControllerNumIop[];
    readonly controllerNumReadIops: outputs.GetStorageContainerStatsInfoV2ControllerNumReadIop[];
    readonly controllerNumWriteIops: outputs.GetStorageContainerStatsInfoV2ControllerNumWriteIop[];
    readonly controllerReadIoBandwidthKbps: outputs.GetStorageContainerStatsInfoV2ControllerReadIoBandwidthKbp[];
    readonly controllerReadIoRatioPpms: outputs.GetStorageContainerStatsInfoV2ControllerReadIoRatioPpm[];
    readonly controllerWriteIoBandwidthKbps: outputs.GetStorageContainerStatsInfoV2ControllerWriteIoBandwidthKbp[];
    readonly controllerWriteIoRatioPpms: outputs.GetStorageContainerStatsInfoV2ControllerWriteIoRatioPpm[];
    readonly dataReductionCloneSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionCloneSavingRatioPpm[];
    readonly dataReductionCompressionSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionCompressionSavingRatioPpm[];
    readonly dataReductionDedupSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionDedupSavingRatioPpm[];
    readonly dataReductionErasureCodingSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionErasureCodingSavingRatioPpm[];
    readonly dataReductionOverallPostReductionBytes: outputs.GetStorageContainerStatsInfoV2DataReductionOverallPostReductionByte[];
    readonly dataReductionOverallPreReductionBytes: outputs.GetStorageContainerStatsInfoV2DataReductionOverallPreReductionByte[];
    readonly dataReductionSavedBytes: outputs.GetStorageContainerStatsInfoV2DataReductionSavedByte[];
    readonly dataReductionSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionSavingRatioPpm[];
    readonly dataReductionSnapshotSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionSnapshotSavingRatioPpm[];
    readonly dataReductionThinProvisionSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionThinProvisionSavingRatioPpm[];
    readonly dataReductionTotalSavingRatioPpms: outputs.GetStorageContainerStatsInfoV2DataReductionTotalSavingRatioPpm[];
    readonly dataReductionZeroWriteSavingsBytes: outputs.GetStorageContainerStatsInfoV2DataReductionZeroWriteSavingsByte[];
    readonly endTime: string;
    readonly extId: string;
    readonly healths: outputs.GetStorageContainerStatsInfoV2Health[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly links: outputs.GetStorageContainerStatsInfoV2Link[];
    readonly samplingInterval?: number;
    readonly startTime: string;
    readonly statType?: string;
    readonly storageActualPhysicalUsageBytes: outputs.GetStorageContainerStatsInfoV2StorageActualPhysicalUsageByte[];
    readonly storageCapacityBytes: outputs.GetStorageContainerStatsInfoV2StorageCapacityByte[];
    readonly storageFreeBytes: outputs.GetStorageContainerStatsInfoV2StorageFreeByte[];
    readonly storageReplicationFactors: outputs.GetStorageContainerStatsInfoV2StorageReplicationFactor[];
    readonly storageReservedCapacityBytes: outputs.GetStorageContainerStatsInfoV2StorageReservedCapacityByte[];
    readonly storageTierDasSataUsageBytes: outputs.GetStorageContainerStatsInfoV2StorageTierDasSataUsageByte[];
    readonly storageTierSsdUsageBytes: outputs.GetStorageContainerStatsInfoV2StorageTierSsdUsageByte[];
    readonly storageUsageBytes: outputs.GetStorageContainerStatsInfoV2StorageUsageByte[];
    readonly tenantId: string;
}
export function getStorageContainerStatsInfoV2Output(args: GetStorageContainerStatsInfoV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStorageContainerStatsInfoV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getStorageContainerStatsInfoV2:getStorageContainerStatsInfoV2", {
        "endTime": args.endTime,
        "extId": args.extId,
        "samplingInterval": args.samplingInterval,
        "startTime": args.startTime,
        "statType": args.statType,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageContainerStatsInfoV2.
 */
export interface GetStorageContainerStatsInfoV2OutputArgs {
    endTime: pulumi.Input<string>;
    extId: pulumi.Input<string>;
    samplingInterval?: pulumi.Input<number>;
    startTime: pulumi.Input<string>;
    statType?: pulumi.Input<string>;
}
