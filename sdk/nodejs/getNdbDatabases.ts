// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List all database instances in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const dbs = nutanix.getNdbDatabases({});
 * export const dbsOutput = dbs;
 * ```
 *
 * ## databaseInstances
 *
 * The following attributes are exported for each database_instances:
 *
 * * `id`: - id of database instance
 * * `name`: - name of database instance
 * * `description`: - description
 * * `dateCreated`: - creation date
 * * `dateModified`: - date modified
 * * `properties`: - properties
 * * `tags`: - tags attached
 * * `clustered`: - if clustered or not
 * * `clone`: - if cloned
 * * `databaseName`: - database instance name
 * * `type`: - database engine type
 * * `status`: - status of database instance
 * * `dbserverLogicalClusterId`: - NA
 * * `timeMachineId`: - time machine ID
 * * `timeZone`: - timezone
 * * `info`: - info regarding disks, vm, storage, etc.
 * * `metric`: - metrics
 * * `parentDatabaseId`: - parent database ID
 * * `lcmConfig`: - lcm configuration
 * * `timeMachine`: - time machine related config info
 * * `databaseNodes`: - nodes info
 * * `dbserverLogicalCluster`: - NA
 * * `linkedDatabases`: - list of databases created in instance with info
 *
 * See detailed information in [List Database Instances](https://www.nutanix.dev/api_references/ndb/#/1e508756bcdcc-get-all-the-databases).
 */
export function getNdbDatabases(args?: GetNdbDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbDatabasesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbDatabases:getNdbDatabases", {
        "databaseType": args.databaseType,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbDatabases.
 */
export interface GetNdbDatabasesArgs {
    databaseType?: string;
}

/**
 * A collection of values returned by getNdbDatabases.
 */
export interface GetNdbDatabasesResult {
    /**
     * - list of database instances
     */
    readonly databaseInstances: outputs.GetNdbDatabasesDatabaseInstance[];
    readonly databaseType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * List all database instances in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const dbs = nutanix.getNdbDatabases({});
 * export const dbsOutput = dbs;
 * ```
 *
 * ## databaseInstances
 *
 * The following attributes are exported for each database_instances:
 *
 * * `id`: - id of database instance
 * * `name`: - name of database instance
 * * `description`: - description
 * * `dateCreated`: - creation date
 * * `dateModified`: - date modified
 * * `properties`: - properties
 * * `tags`: - tags attached
 * * `clustered`: - if clustered or not
 * * `clone`: - if cloned
 * * `databaseName`: - database instance name
 * * `type`: - database engine type
 * * `status`: - status of database instance
 * * `dbserverLogicalClusterId`: - NA
 * * `timeMachineId`: - time machine ID
 * * `timeZone`: - timezone
 * * `info`: - info regarding disks, vm, storage, etc.
 * * `metric`: - metrics
 * * `parentDatabaseId`: - parent database ID
 * * `lcmConfig`: - lcm configuration
 * * `timeMachine`: - time machine related config info
 * * `databaseNodes`: - nodes info
 * * `dbserverLogicalCluster`: - NA
 * * `linkedDatabases`: - list of databases created in instance with info
 *
 * See detailed information in [List Database Instances](https://www.nutanix.dev/api_references/ndb/#/1e508756bcdcc-get-all-the-databases).
 */
export function getNdbDatabasesOutput(args?: GetNdbDatabasesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNdbDatabasesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getNdbDatabases:getNdbDatabases", {
        "databaseType": args.databaseType,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbDatabases.
 */
export interface GetNdbDatabasesOutputArgs {
    databaseType?: pulumi.Input<string>;
}
