// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to manage time machine data availability across all the registered Nutanix clusters in NDB.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const cls = new nutanix.NdbTmsCluster("cls", {
 *     nxClusterId: "{{ cluster_id }}",
 *     slaId: "{{ sla_id }}",
 *     timeMachineId: "{{ tms_id }}",
 * });
 * ```
 */
export class NdbTmsCluster extends pulumi.CustomResource {
    /**
     * Get an existing NdbTmsCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NdbTmsClusterState, opts?: pulumi.CustomResourceOptions): NdbTmsCluster {
        return new NdbTmsCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/ndbTmsCluster:NdbTmsCluster';

    /**
     * Returns true if the given object is an instance of NdbTmsCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NdbTmsCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NdbTmsCluster.__pulumiType;
    }

    /**
     * created date of time machine associated with cluster
     */
    declare public /*out*/ readonly dateCreated: pulumi.Output<string>;
    /**
     * modified date of time machine associated with cluster
     */
    declare public /*out*/ readonly dateModified: pulumi.Output<string>;
    /**
     * description of nutanix cluster associated with time machine
     */
    declare public /*out*/ readonly description: pulumi.Output<string>;
    /**
     * log drive id
     */
    declare public /*out*/ readonly logDriveId: pulumi.Output<string>;
    /**
     * log drive status of time machine
     */
    declare public /*out*/ readonly logDriveStatus: pulumi.Output<string>;
    /**
     * Nutanix cluster id on the associated registered clusters.
     */
    declare public readonly nxClusterId: pulumi.Output<string>;
    /**
     * owner id
     */
    declare public /*out*/ readonly ownerId: pulumi.Output<string>;
    /**
     * schedule id of the data associated with time machine
     */
    declare public /*out*/ readonly scheduleId: pulumi.Output<string>;
    /**
     * SLA id for the associated cluster.
     */
    declare public readonly slaId: pulumi.Output<string>;
    /**
     * source is present or not
     */
    declare public /*out*/ readonly source: pulumi.Output<boolean>;
    /**
     * source clusters in time machines
     */
    declare public /*out*/ readonly sourceClusters: pulumi.Output<string[]>;
    /**
     * status of the cluster associated with time machine
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * time machine id
     */
    declare public readonly timeMachineId: pulumi.Output<string>;
    /**
     * Default value is "OTHER"
     */
    declare public readonly type: pulumi.Output<string | undefined>;

    /**
     * Create a NdbTmsCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NdbTmsClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NdbTmsClusterArgs | NdbTmsClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NdbTmsClusterState | undefined;
            resourceInputs["dateCreated"] = state?.dateCreated;
            resourceInputs["dateModified"] = state?.dateModified;
            resourceInputs["description"] = state?.description;
            resourceInputs["logDriveId"] = state?.logDriveId;
            resourceInputs["logDriveStatus"] = state?.logDriveStatus;
            resourceInputs["nxClusterId"] = state?.nxClusterId;
            resourceInputs["ownerId"] = state?.ownerId;
            resourceInputs["scheduleId"] = state?.scheduleId;
            resourceInputs["slaId"] = state?.slaId;
            resourceInputs["source"] = state?.source;
            resourceInputs["sourceClusters"] = state?.sourceClusters;
            resourceInputs["status"] = state?.status;
            resourceInputs["timeMachineId"] = state?.timeMachineId;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as NdbTmsClusterArgs | undefined;
            if (args?.nxClusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'nxClusterId'");
            }
            if (args?.slaId === undefined && !opts.urn) {
                throw new Error("Missing required property 'slaId'");
            }
            if (args?.timeMachineId === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeMachineId'");
            }
            resourceInputs["nxClusterId"] = args?.nxClusterId;
            resourceInputs["slaId"] = args?.slaId;
            resourceInputs["timeMachineId"] = args?.timeMachineId;
            resourceInputs["type"] = args?.type;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["dateModified"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["logDriveId"] = undefined /*out*/;
            resourceInputs["logDriveStatus"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["scheduleId"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["sourceClusters"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NdbTmsCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NdbTmsCluster resources.
 */
export interface NdbTmsClusterState {
    /**
     * created date of time machine associated with cluster
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * modified date of time machine associated with cluster
     */
    dateModified?: pulumi.Input<string>;
    /**
     * description of nutanix cluster associated with time machine
     */
    description?: pulumi.Input<string>;
    /**
     * log drive id
     */
    logDriveId?: pulumi.Input<string>;
    /**
     * log drive status of time machine
     */
    logDriveStatus?: pulumi.Input<string>;
    /**
     * Nutanix cluster id on the associated registered clusters.
     */
    nxClusterId?: pulumi.Input<string>;
    /**
     * owner id
     */
    ownerId?: pulumi.Input<string>;
    /**
     * schedule id of the data associated with time machine
     */
    scheduleId?: pulumi.Input<string>;
    /**
     * SLA id for the associated cluster.
     */
    slaId?: pulumi.Input<string>;
    /**
     * source is present or not
     */
    source?: pulumi.Input<boolean>;
    /**
     * source clusters in time machines
     */
    sourceClusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * status of the cluster associated with time machine
     */
    status?: pulumi.Input<string>;
    /**
     * time machine id
     */
    timeMachineId?: pulumi.Input<string>;
    /**
     * Default value is "OTHER"
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NdbTmsCluster resource.
 */
export interface NdbTmsClusterArgs {
    /**
     * Nutanix cluster id on the associated registered clusters.
     */
    nxClusterId: pulumi.Input<string>;
    /**
     * SLA id for the associated cluster.
     */
    slaId: pulumi.Input<string>;
    /**
     * time machine id
     */
    timeMachineId: pulumi.Input<string>;
    /**
     * Default value is "OTHER"
     */
    type?: pulumi.Input<string>;
}
