// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a datasource to retrieve all the users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const user = new nutanix.User("user", {directoryServiceUser: {
 *     directoryServiceReference: {
 *         uuid: "<directory-service-uuid>",
 *     },
 *     userPrincipalName: "test-user@ntnxlab.local",
 * }});
 * const users = nutanix.getUser({});
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getUsers:getUsers", {
        "metadatas": args.metadatas,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * - The user kind metadata.
     */
    metadatas?: inputs.GetUsersMetadata[];
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The version of the API.
     */
    readonly apiVersion: string;
    /**
     * List of Users
     */
    readonly entities: outputs.GetUsersEntity[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * - The user kind metadata.
     */
    readonly metadatas: outputs.GetUsersMetadata[];
}
/**
 * Provides a datasource to retrieve all the users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const user = new nutanix.User("user", {directoryServiceUser: {
 *     directoryServiceReference: {
 *         uuid: "<directory-service-uuid>",
 *     },
 *     userPrincipalName: "test-user@ntnxlab.local",
 * }});
 * const users = nutanix.getUser({});
 * ```
 */
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUsersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getUsers:getUsers", {
        "metadatas": args.metadatas,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    /**
     * - The user kind metadata.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.GetUsersMetadataArgs>[]>;
}
