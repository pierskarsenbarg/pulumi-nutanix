// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to create SLAs based on the input parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const sla = new nutanix.NdbSla("sla", {
 *     continuousRetention: 30,
 *     dailyRetention: 3,
 *     description: "here goes description",
 *     monthlyRetention: 1,
 *     quarterlyRetention: 1,
 *     weeklyRetention: 2,
 * });
 * ```
 */
export class NdbSla extends pulumi.CustomResource {
    /**
     * Get an existing NdbSla resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NdbSlaState, opts?: pulumi.CustomResourceOptions): NdbSla {
        return new NdbSla(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/ndbSla:NdbSla';

    /**
     * Returns true if the given object is an instance of NdbSla.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NdbSla {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NdbSla.__pulumiType;
    }

    /**
     * Duration in days for which transaction logs are retained in NDB.
     */
    declare public readonly continuousRetention: pulumi.Output<number | undefined>;
    /**
     * slas current frequency
     */
    declare public /*out*/ readonly currentActiveFrequency: pulumi.Output<string>;
    /**
     * Duration in days for which a daily snapshot must be retained in NDB.
     */
    declare public readonly dailyRetention: pulumi.Output<number | undefined>;
    /**
     * sla created data
     */
    declare public /*out*/ readonly dateCreated: pulumi.Output<string>;
    /**
     * sla last modified date
     */
    declare public /*out*/ readonly dateModified: pulumi.Output<string>;
    /**
     * Description of profile
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Duration in months for which a monthly snapshot must be retained in NDB
     */
    declare public readonly monthlyRetention: pulumi.Output<number | undefined>;
    /**
     * Name of profile
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * owner id
     */
    declare public /*out*/ readonly ownerId: pulumi.Output<string>;
    /**
     * pitr enabled
     */
    declare public /*out*/ readonly pitrEnabled: pulumi.Output<boolean>;
    /**
     * Duration in number of quarters for which a quarterly snapshot must be retained in NDB.
     */
    declare public readonly quarterlyRetention: pulumi.Output<number | undefined>;
    /**
     * reference count
     */
    declare public /*out*/ readonly referenceCount: pulumi.Output<number>;
    /**
     * refers whether sla is custom or built-in
     */
    declare public /*out*/ readonly systemSla: pulumi.Output<boolean>;
    /**
     * name of sla
     */
    declare public /*out*/ readonly uniqueName: pulumi.Output<string>;
    /**
     * Duration in weeks for which a weekly snapshot must be retained in NDB.
     */
    declare public readonly weeklyRetention: pulumi.Output<number | undefined>;
    /**
     * Not supported as of now.
     */
    declare public readonly yearlyRetention: pulumi.Output<number>;

    /**
     * Create a NdbSla resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NdbSlaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NdbSlaArgs | NdbSlaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NdbSlaState | undefined;
            resourceInputs["continuousRetention"] = state?.continuousRetention;
            resourceInputs["currentActiveFrequency"] = state?.currentActiveFrequency;
            resourceInputs["dailyRetention"] = state?.dailyRetention;
            resourceInputs["dateCreated"] = state?.dateCreated;
            resourceInputs["dateModified"] = state?.dateModified;
            resourceInputs["description"] = state?.description;
            resourceInputs["monthlyRetention"] = state?.monthlyRetention;
            resourceInputs["name"] = state?.name;
            resourceInputs["ownerId"] = state?.ownerId;
            resourceInputs["pitrEnabled"] = state?.pitrEnabled;
            resourceInputs["quarterlyRetention"] = state?.quarterlyRetention;
            resourceInputs["referenceCount"] = state?.referenceCount;
            resourceInputs["systemSla"] = state?.systemSla;
            resourceInputs["uniqueName"] = state?.uniqueName;
            resourceInputs["weeklyRetention"] = state?.weeklyRetention;
            resourceInputs["yearlyRetention"] = state?.yearlyRetention;
        } else {
            const args = argsOrState as NdbSlaArgs | undefined;
            resourceInputs["continuousRetention"] = args?.continuousRetention;
            resourceInputs["dailyRetention"] = args?.dailyRetention;
            resourceInputs["description"] = args?.description;
            resourceInputs["monthlyRetention"] = args?.monthlyRetention;
            resourceInputs["name"] = args?.name;
            resourceInputs["quarterlyRetention"] = args?.quarterlyRetention;
            resourceInputs["weeklyRetention"] = args?.weeklyRetention;
            resourceInputs["yearlyRetention"] = args?.yearlyRetention;
            resourceInputs["currentActiveFrequency"] = undefined /*out*/;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["dateModified"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["pitrEnabled"] = undefined /*out*/;
            resourceInputs["referenceCount"] = undefined /*out*/;
            resourceInputs["systemSla"] = undefined /*out*/;
            resourceInputs["uniqueName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NdbSla.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NdbSla resources.
 */
export interface NdbSlaState {
    /**
     * Duration in days for which transaction logs are retained in NDB.
     */
    continuousRetention?: pulumi.Input<number>;
    /**
     * slas current frequency
     */
    currentActiveFrequency?: pulumi.Input<string>;
    /**
     * Duration in days for which a daily snapshot must be retained in NDB.
     */
    dailyRetention?: pulumi.Input<number>;
    /**
     * sla created data
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * sla last modified date
     */
    dateModified?: pulumi.Input<string>;
    /**
     * Description of profile
     */
    description?: pulumi.Input<string>;
    /**
     * Duration in months for which a monthly snapshot must be retained in NDB
     */
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    /**
     * owner id
     */
    ownerId?: pulumi.Input<string>;
    /**
     * pitr enabled
     */
    pitrEnabled?: pulumi.Input<boolean>;
    /**
     * Duration in number of quarters for which a quarterly snapshot must be retained in NDB.
     */
    quarterlyRetention?: pulumi.Input<number>;
    /**
     * reference count
     */
    referenceCount?: pulumi.Input<number>;
    /**
     * refers whether sla is custom or built-in
     */
    systemSla?: pulumi.Input<boolean>;
    /**
     * name of sla
     */
    uniqueName?: pulumi.Input<string>;
    /**
     * Duration in weeks for which a weekly snapshot must be retained in NDB.
     */
    weeklyRetention?: pulumi.Input<number>;
    /**
     * Not supported as of now.
     */
    yearlyRetention?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NdbSla resource.
 */
export interface NdbSlaArgs {
    /**
     * Duration in days for which transaction logs are retained in NDB.
     */
    continuousRetention?: pulumi.Input<number>;
    /**
     * Duration in days for which a daily snapshot must be retained in NDB.
     */
    dailyRetention?: pulumi.Input<number>;
    /**
     * Description of profile
     */
    description?: pulumi.Input<string>;
    /**
     * Duration in months for which a monthly snapshot must be retained in NDB
     */
    monthlyRetention?: pulumi.Input<number>;
    /**
     * Name of profile
     */
    name?: pulumi.Input<string>;
    /**
     * Duration in number of quarters for which a quarterly snapshot must be retained in NDB.
     */
    quarterlyRetention?: pulumi.Input<number>;
    /**
     * Duration in weeks for which a weekly snapshot must be retained in NDB.
     */
    weeklyRetention?: pulumi.Input<number>;
    /**
     * Not supported as of now.
     */
    yearlyRetention?: pulumi.Input<number>;
}
