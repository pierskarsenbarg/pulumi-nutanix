// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SamlIdentityProvidersV2 extends pulumi.CustomResource {
    /**
     * Get an existing SamlIdentityProvidersV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SamlIdentityProvidersV2State, opts?: pulumi.CustomResourceOptions): SamlIdentityProvidersV2 {
        return new SamlIdentityProvidersV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/samlIdentityProvidersV2:SamlIdentityProvidersV2';

    /**
     * Returns true if the given object is an instance of SamlIdentityProvidersV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SamlIdentityProvidersV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SamlIdentityProvidersV2.__pulumiType;
    }

    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    declare public /*out*/ readonly createdTime: pulumi.Output<string>;
    declare public readonly customAttributes: pulumi.Output<string[]>;
    declare public readonly emailAttribute: pulumi.Output<string | undefined>;
    declare public readonly entityIssuer: pulumi.Output<string | undefined>;
    declare public readonly extId: pulumi.Output<string>;
    declare public readonly groupsAttribute: pulumi.Output<string | undefined>;
    declare public readonly groupsDelim: pulumi.Output<string | undefined>;
    declare public readonly idpMetadataUrl: pulumi.Output<string>;
    declare public readonly idpMetadataXml: pulumi.Output<string>;
    declare public readonly idpMetadatas: pulumi.Output<outputs.SamlIdentityProvidersV2IdpMetadata[]>;
    declare public readonly isSignedAuthnReqEnabled: pulumi.Output<boolean | undefined>;
    declare public /*out*/ readonly lastUpdatedTime: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly usernameAttribute: pulumi.Output<string | undefined>;

    /**
     * Create a SamlIdentityProvidersV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SamlIdentityProvidersV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SamlIdentityProvidersV2Args | SamlIdentityProvidersV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SamlIdentityProvidersV2State | undefined;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["createdTime"] = state?.createdTime;
            resourceInputs["customAttributes"] = state?.customAttributes;
            resourceInputs["emailAttribute"] = state?.emailAttribute;
            resourceInputs["entityIssuer"] = state?.entityIssuer;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["groupsAttribute"] = state?.groupsAttribute;
            resourceInputs["groupsDelim"] = state?.groupsDelim;
            resourceInputs["idpMetadataUrl"] = state?.idpMetadataUrl;
            resourceInputs["idpMetadataXml"] = state?.idpMetadataXml;
            resourceInputs["idpMetadatas"] = state?.idpMetadatas;
            resourceInputs["isSignedAuthnReqEnabled"] = state?.isSignedAuthnReqEnabled;
            resourceInputs["lastUpdatedTime"] = state?.lastUpdatedTime;
            resourceInputs["name"] = state?.name;
            resourceInputs["usernameAttribute"] = state?.usernameAttribute;
        } else {
            const args = argsOrState as SamlIdentityProvidersV2Args | undefined;
            resourceInputs["customAttributes"] = args?.customAttributes;
            resourceInputs["emailAttribute"] = args?.emailAttribute;
            resourceInputs["entityIssuer"] = args?.entityIssuer;
            resourceInputs["extId"] = args?.extId;
            resourceInputs["groupsAttribute"] = args?.groupsAttribute;
            resourceInputs["groupsDelim"] = args?.groupsDelim;
            resourceInputs["idpMetadataUrl"] = args?.idpMetadataUrl;
            resourceInputs["idpMetadataXml"] = args?.idpMetadataXml;
            resourceInputs["idpMetadatas"] = args?.idpMetadatas;
            resourceInputs["isSignedAuthnReqEnabled"] = args?.isSignedAuthnReqEnabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["usernameAttribute"] = args?.usernameAttribute;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SamlIdentityProvidersV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SamlIdentityProvidersV2 resources.
 */
export interface SamlIdentityProvidersV2State {
    createdBy?: pulumi.Input<string>;
    createdTime?: pulumi.Input<string>;
    customAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    emailAttribute?: pulumi.Input<string>;
    entityIssuer?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    groupsAttribute?: pulumi.Input<string>;
    groupsDelim?: pulumi.Input<string>;
    idpMetadataUrl?: pulumi.Input<string>;
    idpMetadataXml?: pulumi.Input<string>;
    idpMetadatas?: pulumi.Input<pulumi.Input<inputs.SamlIdentityProvidersV2IdpMetadata>[]>;
    isSignedAuthnReqEnabled?: pulumi.Input<boolean>;
    lastUpdatedTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    usernameAttribute?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SamlIdentityProvidersV2 resource.
 */
export interface SamlIdentityProvidersV2Args {
    customAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    emailAttribute?: pulumi.Input<string>;
    entityIssuer?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    groupsAttribute?: pulumi.Input<string>;
    groupsDelim?: pulumi.Input<string>;
    idpMetadataUrl?: pulumi.Input<string>;
    idpMetadataXml?: pulumi.Input<string>;
    idpMetadatas?: pulumi.Input<pulumi.Input<inputs.SamlIdentityProvidersV2IdpMetadata>[]>;
    isSignedAuthnReqEnabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    usernameAttribute?: pulumi.Input<string>;
}
