// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get the details of a single node given its UUID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const nodesDetails = pulumi.output(nutanix.getFoundationCentralImagedNodeDetails({
 *     imagedNodeUuid: "<IMAGED-NODE-UUID>",
 * }));
 * ```
 */
export function getFoundationCentralImagedNodeDetails(args: GetFoundationCentralImagedNodeDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralImagedNodeDetailsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralImagedNodeDetails:getFoundationCentralImagedNodeDetails", {
        "imagedNodeUuid": args.imagedNodeUuid,
        "ipv6Interface": args.ipv6Interface,
        "objectVersion": args.objectVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodeDetails.
 */
export interface GetFoundationCentralImagedNodeDetailsArgs {
    imagedNodeUuid: string;
    ipv6Interface?: string;
    objectVersion?: number;
}

/**
 * A collection of values returned by getFoundationCentralImagedNodeDetails.
 */
export interface GetFoundationCentralImagedNodeDetailsResult {
    readonly aosVersion: string;
    readonly apiKeyUuid: string;
    readonly available: boolean;
    readonly blockSerial: string;
    readonly createdTimestamp: string;
    readonly currentTime: string;
    readonly cvmGateway: string;
    readonly cvmIp: string;
    readonly cvmIpv6: string;
    readonly cvmNetmask: string;
    readonly cvmUp: boolean;
    readonly cvmUuid: string;
    readonly cvmVlanId: number;
    readonly foundationVersion: string;
    readonly hardwareAttributes: {[key: string]: any};
    readonly hypervisorGateway: string;
    readonly hypervisorHostname: string;
    readonly hypervisorIp: string;
    readonly hypervisorNetmask: string;
    readonly hypervisorType: string;
    readonly hypervisorVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imagedClusterUuid: string;
    readonly imagedNodeUuid: string;
    readonly ipmiGateway: string;
    readonly ipmiIp: string;
    readonly ipmiNetmask: string;
    readonly ipv6Interface: string;
    readonly latestHbTsLists: string[];
    readonly model: string;
    readonly nodePosition: string;
    readonly nodeSerial: string;
    readonly nodeState: string;
    readonly nodeType: string;
    readonly objectVersion: number;
}

export function getFoundationCentralImagedNodeDetailsOutput(args: GetFoundationCentralImagedNodeDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFoundationCentralImagedNodeDetailsResult> {
    return pulumi.output(args).apply(a => getFoundationCentralImagedNodeDetails(a, opts))
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodeDetails.
 */
export interface GetFoundationCentralImagedNodeDetailsOutputArgs {
    imagedNodeUuid: pulumi.Input<string>;
    ipv6Interface?: pulumi.Input<string>;
    objectVersion?: pulumi.Input<number>;
}
