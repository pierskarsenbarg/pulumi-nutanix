// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates a protection policy to automate the recovery point creation and replication process.
 *
 * ## Example—Synchronous Protection Policy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const synchronous_protection_policy = new nutanix.ProtectionPolicyV2("synchronous-protection-policy", {
 *     categoryIds: ["b08ed184-6b0c-42c1-8179-7b9026fe2676"],
 *     replicationConfigurations: [
 *         {
 *             remoteLocationLabel: "target",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 0,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 syncReplicationAutoSuspendTimeoutSeconds: 10,
 *             },
 *             sourceLocationLabel: "source",
 *         },
 *         {
 *             remoteLocationLabel: "source",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 0,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 syncReplicationAutoSuspendTimeoutSeconds: 10,
 *             },
 *             sourceLocationLabel: "target",
 *         },
 *     ],
 *     replicationLocations: [
 *         {
 *             domainManagerExtId: "6a44b05e-cb9b-4e7e-8d75-b1b4715369c4",
 *             isPrimary: true,
 *             label: "source",
 *         },
 *         {
 *             domainManagerExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
 *             isPrimary: false,
 *             label: "target",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Example—Linear Retention Protection Policy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const linear_retention_protection_policy = new nutanix.ProtectionPolicyV2("linear-retention-protection-policy", {
 *     replicationConfigurations: [
 *         {
 *             sourceLocationLabel: "source",
 *             remoteLocationLabel: "target",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 7200,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 retention: {
 *                     linearRetention: {
 *                         local: 1,
 *                         remote: 1,
 *                     },
 *                 },
 *             },
 *         },
 *         {
 *             sourceLocationLabel: "target",
 *             remoteLocationLabel: "source",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 7200,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 retention: {
 *                     linearRetention: {
 *                         local: 1,
 *                         remote: 1,
 *                     },
 *                 },
 *             },
 *         },
 *     ],
 *     replicationLocations: [
 *         {
 *             domainManagerExtId: "6a44b05e-cb9b-4e7e-8d75-b1b4715369c4",
 *             label: "source",
 *             isPrimary: true,
 *             replicationSubLocation: {
 *                 clusterExtIds: {
 *                     clusterExtIds: [local.clusterExtId],
 *                 },
 *             },
 *         },
 *         {
 *             domainManagerExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
 *             label: "target",
 *             isPrimary: false,
 *         },
 *     ],
 *     categoryIds: ["b08ed184-6b0c-42c1-8179-7b9026fe2676"],
 * });
 * ```
 *
 * ## Example—Auto Rollup Retention Protection Policy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * // Create Auto Rollup Retention Protection Policy
 * const auto_rollup_retention_protection_policy = new nutanix.ProtectionPolicyV2("auto-rollup-retention-protection-policy", {
 *     categoryIds: ["b08ed184-6b0c-42c1-8179-7b9026fe2676"],
 *     replicationConfigurations: [
 *         {
 *             remoteLocationLabel: "target",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 60,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 retention: {
 *                     autoRollupRetention: {
 *                         local: {
 *                             frequency: 2,
 *                             snapshotIntervalType: "WEEKLY",
 *                         },
 *                         remote: {
 *                             frequency: 1,
 *                             snapshotIntervalType: "DAILY",
 *                         },
 *                     },
 *                 },
 *                 startTime: "18h:10m",
 *                 syncReplicationAutoSuspendTimeoutSeconds: 20,
 *             },
 *             sourceLocationLabel: "source",
 *         },
 *         {
 *             remoteLocationLabel: "source",
 *             schedule: {
 *                 recoveryPointObjectiveTimeSeconds: 60,
 *                 recoveryPointType: "CRASH_CONSISTENT",
 *                 retention: {
 *                     autoRollupRetention: {
 *                         local: {
 *                             frequency: 1,
 *                             snapshotIntervalType: "DAILY",
 *                         },
 *                         remote: {
 *                             frequency: 2,
 *                             snapshotIntervalType: "WEEKLY",
 *                         },
 *                     },
 *                 },
 *                 startTime: "18h:10m",
 *                 syncReplicationAutoSuspendTimeoutSeconds: 30,
 *             },
 *             sourceLocationLabel: "target",
 *         },
 *     ],
 *     replicationLocations: [
 *         {
 *             domainManagerExtId: "6a44b05e-cb9b-4e7e-8d75-b1b4715369c4",
 *             isPrimary: true,
 *             label: "source",
 *         },
 *         {
 *             domainManagerExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
 *             isPrimary: false,
 *             label: "target",
 *         },
 *     ],
 * });
 * ```
 */
export class ProtectionPolicyV2 extends pulumi.CustomResource {
    /**
     * Get an existing ProtectionPolicyV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtectionPolicyV2State, opts?: pulumi.CustomResourceOptions): ProtectionPolicyV2 {
        return new ProtectionPolicyV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/protectionPolicyV2:ProtectionPolicyV2';

    /**
     * Returns true if the given object is an instance of ProtectionPolicyV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtectionPolicyV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtectionPolicyV2.__pulumiType;
    }

    /**
     * -(Optional) Host entity with its attributes.
     */
    declare public readonly categoryIds: pulumi.Output<string[]>;
    /**
     * -(Optional) Description of the protection policy.
     */
    declare public readonly description: pulumi.Output<string>;
    declare public /*out*/ readonly extId: pulumi.Output<string>;
    declare public /*out*/ readonly isApprovalPolicyNeeded: pulumi.Output<boolean>;
    declare public /*out*/ readonly links: pulumi.Output<outputs.ProtectionPolicyV2Link[]>;
    /**
     * -(Required) Name of the protection policy.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly ownerExtId: pulumi.Output<string>;
    /**
     * -(Required) Cluster reference for an entity.
     */
    declare public readonly replicationConfigurations: pulumi.Output<outputs.ProtectionPolicyV2ReplicationConfiguration[]>;
    /**
     * -(Required) Hypervisor details.
     */
    declare public readonly replicationLocations: pulumi.Output<outputs.ProtectionPolicyV2ReplicationLocation[]>;
    declare public /*out*/ readonly tenantId: pulumi.Output<string>;

    /**
     * Create a ProtectionPolicyV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProtectionPolicyV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtectionPolicyV2Args | ProtectionPolicyV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtectionPolicyV2State | undefined;
            resourceInputs["categoryIds"] = state?.categoryIds;
            resourceInputs["description"] = state?.description;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["isApprovalPolicyNeeded"] = state?.isApprovalPolicyNeeded;
            resourceInputs["links"] = state?.links;
            resourceInputs["name"] = state?.name;
            resourceInputs["ownerExtId"] = state?.ownerExtId;
            resourceInputs["replicationConfigurations"] = state?.replicationConfigurations;
            resourceInputs["replicationLocations"] = state?.replicationLocations;
            resourceInputs["tenantId"] = state?.tenantId;
        } else {
            const args = argsOrState as ProtectionPolicyV2Args | undefined;
            if (args?.categoryIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'categoryIds'");
            }
            if (args?.replicationConfigurations === undefined && !opts.urn) {
                throw new Error("Missing required property 'replicationConfigurations'");
            }
            if (args?.replicationLocations === undefined && !opts.urn) {
                throw new Error("Missing required property 'replicationLocations'");
            }
            resourceInputs["categoryIds"] = args?.categoryIds;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["replicationConfigurations"] = args?.replicationConfigurations;
            resourceInputs["replicationLocations"] = args?.replicationLocations;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["isApprovalPolicyNeeded"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["ownerExtId"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtectionPolicyV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProtectionPolicyV2 resources.
 */
export interface ProtectionPolicyV2State {
    /**
     * -(Optional) Host entity with its attributes.
     */
    categoryIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * -(Optional) Description of the protection policy.
     */
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    isApprovalPolicyNeeded?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.ProtectionPolicyV2Link>[]>;
    /**
     * -(Required) Name of the protection policy.
     */
    name?: pulumi.Input<string>;
    ownerExtId?: pulumi.Input<string>;
    /**
     * -(Required) Cluster reference for an entity.
     */
    replicationConfigurations?: pulumi.Input<pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfiguration>[]>;
    /**
     * -(Required) Hypervisor details.
     */
    replicationLocations?: pulumi.Input<pulumi.Input<inputs.ProtectionPolicyV2ReplicationLocation>[]>;
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProtectionPolicyV2 resource.
 */
export interface ProtectionPolicyV2Args {
    /**
     * -(Optional) Host entity with its attributes.
     */
    categoryIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * -(Optional) Description of the protection policy.
     */
    description?: pulumi.Input<string>;
    /**
     * -(Required) Name of the protection policy.
     */
    name?: pulumi.Input<string>;
    /**
     * -(Required) Cluster reference for an entity.
     */
    replicationConfigurations: pulumi.Input<pulumi.Input<inputs.ProtectionPolicyV2ReplicationConfiguration>[]>;
    /**
     * -(Required) Hypervisor details.
     */
    replicationLocations: pulumi.Input<pulumi.Input<inputs.ProtectionPolicyV2ReplicationLocation>[]>;
}
