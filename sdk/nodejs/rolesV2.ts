// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a resource to add a Role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const operations_filtered_list = nutanix.getOperationsV2({
 *     filter: "startswith(displayName, 'Create_')",
 * });
 * // Create role
 * const example_role = new nutanix.RolesV2("example-role", {
 *     displayName: "example_role",
 *     description: "create example role",
 *     operations: [
 *         operations_filtered_list.then(operations_filtered_list => operations_filtered_list.operations?.[0]?.extId),
 *         operations_filtered_list.then(operations_filtered_list => operations_filtered_list.operations?.[1]?.extId),
 *         operations_filtered_list.then(operations_filtered_list => operations_filtered_list.operations?.[2]?.extId),
 *         operations_filtered_list.then(operations_filtered_list => operations_filtered_list.operations?.[3]?.extId),
 *     ],
 * });
 * ```
 */
export class RolesV2 extends pulumi.CustomResource {
    /**
     * Get an existing RolesV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RolesV2State, opts?: pulumi.CustomResourceOptions): RolesV2 {
        return new RolesV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/rolesV2:RolesV2';

    /**
     * Returns true if the given object is an instance of RolesV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RolesV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RolesV2.__pulumiType;
    }

    /**
     * - List of Accessible Clients for the Role.
     */
    public /*out*/ readonly accessibleClients!: pulumi.Output<string[]>;
    /**
     * - List of Accessible Entity Types for the Role.
     */
    public /*out*/ readonly accessibleEntityTypes!: pulumi.Output<string[]>;
    /**
     * - Number of Users assigned to given Role.
     */
    public /*out*/ readonly assignedUsersCount!: pulumi.Output<number>;
    /**
     * - Number of User Groups assigned to given Role.
     */
    public /*out*/ readonly assignedUsersGroupsCount!: pulumi.Output<number>;
    /**
     * - Client that created the entity.
     */
    public readonly clientName!: pulumi.Output<string>;
    /**
     * - User or Service Name that created the Role.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * - The creation time of the Role.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * - Description of the Role.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * -(Required) The display name for the Role.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    public readonly extId!: pulumi.Output<string>;
    /**
     * - Flag identifying if the Role is system defined or not.
     */
    public /*out*/ readonly isSystemDefined!: pulumi.Output<boolean>;
    /**
     * - The time when the Role was last updated.
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.RolesV2Link[]>;
    /**
     * -(Required) List of operations for the role.
     */
    public readonly operations!: pulumi.Output<string[]>;
    /**
     * - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a RolesV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RolesV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RolesV2Args | RolesV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RolesV2State | undefined;
            resourceInputs["accessibleClients"] = state ? state.accessibleClients : undefined;
            resourceInputs["accessibleEntityTypes"] = state ? state.accessibleEntityTypes : undefined;
            resourceInputs["assignedUsersCount"] = state ? state.assignedUsersCount : undefined;
            resourceInputs["assignedUsersGroupsCount"] = state ? state.assignedUsersGroupsCount : undefined;
            resourceInputs["clientName"] = state ? state.clientName : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["isSystemDefined"] = state ? state.isSystemDefined : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["operations"] = state ? state.operations : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as RolesV2Args | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.operations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operations'");
            }
            resourceInputs["clientName"] = args ? args.clientName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["extId"] = args ? args.extId : undefined;
            resourceInputs["operations"] = args ? args.operations : undefined;
            resourceInputs["accessibleClients"] = undefined /*out*/;
            resourceInputs["accessibleEntityTypes"] = undefined /*out*/;
            resourceInputs["assignedUsersCount"] = undefined /*out*/;
            resourceInputs["assignedUsersGroupsCount"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["isSystemDefined"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RolesV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RolesV2 resources.
 */
export interface RolesV2State {
    /**
     * - List of Accessible Clients for the Role.
     */
    accessibleClients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - List of Accessible Entity Types for the Role.
     */
    accessibleEntityTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - Number of Users assigned to given Role.
     */
    assignedUsersCount?: pulumi.Input<number>;
    /**
     * - Number of User Groups assigned to given Role.
     */
    assignedUsersGroupsCount?: pulumi.Input<number>;
    /**
     * - Client that created the entity.
     */
    clientName?: pulumi.Input<string>;
    /**
     * - User or Service Name that created the Role.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * - The creation time of the Role.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * - Description of the Role.
     */
    description?: pulumi.Input<string>;
    /**
     * -(Required) The display name for the Role.
     */
    displayName?: pulumi.Input<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * - Flag identifying if the Role is system defined or not.
     */
    isSystemDefined?: pulumi.Input<boolean>;
    /**
     * - The time when the Role was last updated.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.RolesV2Link>[]>;
    /**
     * -(Required) List of operations for the role.
     */
    operations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RolesV2 resource.
 */
export interface RolesV2Args {
    /**
     * - Client that created the entity.
     */
    clientName?: pulumi.Input<string>;
    /**
     * - Description of the Role.
     */
    description?: pulumi.Input<string>;
    /**
     * -(Required) The display name for the Role.
     */
    displayName: pulumi.Input<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * -(Required) List of operations for the role.
     */
    operations: pulumi.Input<pulumi.Input<string>[]>;
}
