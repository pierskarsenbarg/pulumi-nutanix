// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Nutanix Category value resource to Create a category value.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const test_category_key = new nutanix.CategoryKey("test-category-key", {description: "App Support Category Key"});
 * const test = new nutanix.CategoryValue("test", {
 *     description: "Test Category Value",
 *     value: "test-value",
 * });
 * ```
 */
export class CategoryValue extends pulumi.CustomResource {
    /**
     * Get an existing CategoryValue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CategoryValueState, opts?: pulumi.CustomResourceOptions): CategoryValue {
        return new CategoryValue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/categoryValue:CategoryValue';

    /**
     * Returns true if the given object is an instance of CategoryValue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CategoryValue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CategoryValue.__pulumiType;
    }

    /**
     * (Optional) The version of the API.
     */
    declare public /*out*/ readonly apiVersion: pulumi.Output<string>;
    /**
     * - (Optional) A description for category value.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * - (Required) The categoryKey name for the category value.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * - Specifying whether its a system defined category.
     */
    declare public /*out*/ readonly systemDefined: pulumi.Output<boolean>;
    /**
     * The value for the category value.
     */
    declare public readonly value: pulumi.Output<string>;

    /**
     * Create a CategoryValue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CategoryValueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CategoryValueArgs | CategoryValueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CategoryValueState | undefined;
            resourceInputs["apiVersion"] = state?.apiVersion;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["systemDefined"] = state?.systemDefined;
            resourceInputs["value"] = state?.value;
        } else {
            const args = argsOrState as CategoryValueArgs | undefined;
            if (args?.value === undefined && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["value"] = args?.value;
            resourceInputs["apiVersion"] = undefined /*out*/;
            resourceInputs["systemDefined"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CategoryValue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CategoryValue resources.
 */
export interface CategoryValueState {
    /**
     * (Optional) The version of the API.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * - (Optional) A description for category value.
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) The categoryKey name for the category value.
     */
    name?: pulumi.Input<string>;
    /**
     * - Specifying whether its a system defined category.
     */
    systemDefined?: pulumi.Input<boolean>;
    /**
     * The value for the category value.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CategoryValue resource.
 */
export interface CategoryValueArgs {
    /**
     * - (Optional) A description for category value.
     */
    description?: pulumi.Input<string>;
    /**
     * - (Required) The categoryKey name for the category value.
     */
    name?: pulumi.Input<string>;
    /**
     * The value for the category value.
     */
    value: pulumi.Input<string>;
}
