// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TemplateV2 extends pulumi.CustomResource {
    /**
     * Get an existing TemplateV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateV2State, opts?: pulumi.CustomResourceOptions): TemplateV2 {
        return new TemplateV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/templateV2:TemplateV2';

    /**
     * Returns true if the given object is an instance of TemplateV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateV2.__pulumiType;
    }

    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    declare public readonly createdBies: pulumi.Output<outputs.TemplateV2CreatedBy[]>;
    declare public /*out*/ readonly extId: pulumi.Output<string>;
    declare public readonly guestUpdateStatuses: pulumi.Output<outputs.TemplateV2GuestUpdateStatus[]>;
    declare public /*out*/ readonly links: pulumi.Output<outputs.TemplateV2Link[]>;
    declare public readonly templateDescription: pulumi.Output<string>;
    declare public readonly templateName: pulumi.Output<string>;
    declare public readonly templateVersionSpec: pulumi.Output<outputs.TemplateV2TemplateVersionSpec>;
    declare public /*out*/ readonly tenantId: pulumi.Output<string>;
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;
    declare public readonly updatedBies: pulumi.Output<outputs.TemplateV2UpdatedBy[]>;

    /**
     * Create a TemplateV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateV2Args | TemplateV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateV2State | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["createdBies"] = state?.createdBies;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["guestUpdateStatuses"] = state?.guestUpdateStatuses;
            resourceInputs["links"] = state?.links;
            resourceInputs["templateDescription"] = state?.templateDescription;
            resourceInputs["templateName"] = state?.templateName;
            resourceInputs["templateVersionSpec"] = state?.templateVersionSpec;
            resourceInputs["tenantId"] = state?.tenantId;
            resourceInputs["updateTime"] = state?.updateTime;
            resourceInputs["updatedBies"] = state?.updatedBies;
        } else {
            const args = argsOrState as TemplateV2Args | undefined;
            if (args?.templateName === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            if (args?.templateVersionSpec === undefined && !opts.urn) {
                throw new Error("Missing required property 'templateVersionSpec'");
            }
            resourceInputs["createdBies"] = args?.createdBies;
            resourceInputs["guestUpdateStatuses"] = args?.guestUpdateStatuses;
            resourceInputs["templateDescription"] = args?.templateDescription;
            resourceInputs["templateName"] = args?.templateName;
            resourceInputs["templateVersionSpec"] = args?.templateVersionSpec;
            resourceInputs["updatedBies"] = args?.updatedBies;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TemplateV2 resources.
 */
export interface TemplateV2State {
    createTime?: pulumi.Input<string>;
    createdBies?: pulumi.Input<pulumi.Input<inputs.TemplateV2CreatedBy>[]>;
    extId?: pulumi.Input<string>;
    guestUpdateStatuses?: pulumi.Input<pulumi.Input<inputs.TemplateV2GuestUpdateStatus>[]>;
    links?: pulumi.Input<pulumi.Input<inputs.TemplateV2Link>[]>;
    templateDescription?: pulumi.Input<string>;
    templateName?: pulumi.Input<string>;
    templateVersionSpec?: pulumi.Input<inputs.TemplateV2TemplateVersionSpec>;
    tenantId?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    updatedBies?: pulumi.Input<pulumi.Input<inputs.TemplateV2UpdatedBy>[]>;
}

/**
 * The set of arguments for constructing a TemplateV2 resource.
 */
export interface TemplateV2Args {
    createdBies?: pulumi.Input<pulumi.Input<inputs.TemplateV2CreatedBy>[]>;
    guestUpdateStatuses?: pulumi.Input<pulumi.Input<inputs.TemplateV2GuestUpdateStatus>[]>;
    templateDescription?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    templateVersionSpec: pulumi.Input<inputs.TemplateV2TemplateVersionSpec>;
    updatedBies?: pulumi.Input<pulumi.Input<inputs.TemplateV2UpdatedBy>[]>;
}
