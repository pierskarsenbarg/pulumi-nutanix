// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a datasource to retrieve all the permissions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const permissions = nutanix.getPermission({});
 * ```
 */
export function getPermissions(args?: GetPermissionsArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getPermissions:getPermissions", {
        "metadatas": args.metadatas,
    }, opts);
}

/**
 * A collection of arguments for invoking getPermissions.
 */
export interface GetPermissionsArgs {
    /**
     * The permission kind metadata.
     */
    metadatas?: inputs.GetPermissionsMetadata[];
}

/**
 * A collection of values returned by getPermissions.
 */
export interface GetPermissionsResult {
    /**
     * version of the API
     */
    readonly apiVersion: string;
    /**
     * List of Permissions
     */
    readonly entities: outputs.GetPermissionsEntity[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The permission kind metadata.
     */
    readonly metadatas: outputs.GetPermissionsMetadata[];
}
/**
 * Provides a datasource to retrieve all the permissions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const permissions = nutanix.getPermission({});
 * ```
 */
export function getPermissionsOutput(args?: GetPermissionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionsResult> {
    return pulumi.output(args).apply((a: any) => getPermissions(a, opts))
}

/**
 * A collection of arguments for invoking getPermissions.
 */
export interface GetPermissionsOutputArgs {
    /**
     * The permission kind metadata.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.GetPermissionsMetadataArgs>[]>;
}
