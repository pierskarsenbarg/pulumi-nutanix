// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get an api key given its UUID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const apiKeysList = nutanix.getFoundationCentralApiKeys({
 *     keyUuid: "<KEY_UUID>",
 * });
 * ```
 */
export function getFoundationCentralApiKeys(args: GetFoundationCentralApiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralApiKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralApiKeys:getFoundationCentralApiKeys", {
        "keyUuid": args.keyUuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralApiKeys.
 */
export interface GetFoundationCentralApiKeysArgs {
    /**
     * UUID of the key which needs to be fetched.
     */
    keyUuid: string;
}

/**
 * A collection of values returned by getFoundationCentralApiKeys.
 */
export interface GetFoundationCentralApiKeysResult {
    /**
     * Alias of the api key.
     */
    readonly alias: string;
    /**
     * Api key in string format.
     */
    readonly apiKey: string;
    /**
     * Time when the api key was created.
     */
    readonly createdTimestamp: string;
    /**
     * Current time of Foundation Central.
     */
    readonly currentTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * UUID of the api key.
     */
    readonly keyUuid: string;
}
/**
 * Get an api key given its UUID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const apiKeysList = nutanix.getFoundationCentralApiKeys({
 *     keyUuid: "<KEY_UUID>",
 * });
 * ```
 */
export function getFoundationCentralApiKeysOutput(args: GetFoundationCentralApiKeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFoundationCentralApiKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getFoundationCentralApiKeys:getFoundationCentralApiKeys", {
        "keyUuid": args.keyUuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralApiKeys.
 */
export interface GetFoundationCentralApiKeysOutputArgs {
    /**
     * UUID of the key which needs to be fetched.
     */
    keyUuid: pulumi.Input<string>;
}
