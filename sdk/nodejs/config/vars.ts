// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("nutanix");

/**
 * URL for Nutanix Prism (e.g IP or FQDN for cluster VIP note, this is never the data services VIP, and should not be an
 * individual CVM address, as this would cause calls to fail during cluster lifecycle management operations, such as AOS
 * upgrades.
 */
export declare const endpoint: string | undefined;
Object.defineProperty(exports, "endpoint", {
    get() {
        return __config.get("endpoint");
    },
    enumerable: true,
});

/**
 * endpoint for foundation VM (eg. Foundation VM IP)
 */
export declare const foundationEndpoint: string | undefined;
Object.defineProperty(exports, "foundationEndpoint", {
    get() {
        return __config.get("foundationEndpoint");
    },
    enumerable: true,
});

/**
 * Port for foundation VM
 */
export declare const foundationPort: string | undefined;
Object.defineProperty(exports, "foundationPort", {
    get() {
        return __config.get("foundationPort");
    },
    enumerable: true,
});

/**
 * Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * endpoint for Era VM (era ip)
 */
export declare const ndbEndpoint: string | undefined;
Object.defineProperty(exports, "ndbEndpoint", {
    get() {
        return __config.get("ndbEndpoint");
    },
    enumerable: true,
});

export declare const ndbPassword: string | undefined;
Object.defineProperty(exports, "ndbPassword", {
    get() {
        return __config.get("ndbPassword");
    },
    enumerable: true,
});

export declare const ndbUsername: string | undefined;
Object.defineProperty(exports, "ndbUsername", {
    get() {
        return __config.get("ndbUsername");
    },
    enumerable: true,
});

/**
 * Password for provided user name.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Port for Nutanix Prism.
 */
export declare const port: string | undefined;
Object.defineProperty(exports, "port", {
    get() {
        return __config.get("port");
    },
    enumerable: true,
});

export declare const proxyUrl: string | undefined;
Object.defineProperty(exports, "proxyUrl", {
    get() {
        return __config.get("proxyUrl");
    },
    enumerable: true,
});

/**
 * Use session authentification instead of basic auth for each request
 */
export declare const sessionAuth: boolean | undefined;
Object.defineProperty(exports, "sessionAuth", {
    get() {
        return __config.getObject<boolean>("sessionAuth");
    },
    enumerable: true,
});

/**
 * User name for Nutanix Prism. Could be local cluster auth (e.g. 'admin') or directory auth.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

/**
 * Set if you know that the creation o update of a resource may take long time (minutes)
 */
export declare const waitTimeout: number | undefined;
Object.defineProperty(exports, "waitTimeout", {
    get() {
        return __config.getObject<number>("waitTimeout");
    },
    enumerable: true,
});

