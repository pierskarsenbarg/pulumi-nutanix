// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get the unconfigured node details such as node UUID, node position, node IP, foundation version and more.
 */
export class ClustersDiscoverUnconfiguredNodesV2 extends pulumi.CustomResource {
    /**
     * Get an existing ClustersDiscoverUnconfiguredNodesV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClustersDiscoverUnconfiguredNodesV2State, opts?: pulumi.CustomResourceOptions): ClustersDiscoverUnconfiguredNodesV2 {
        return new ClustersDiscoverUnconfiguredNodesV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/clustersDiscoverUnconfiguredNodesV2:ClustersDiscoverUnconfiguredNodesV2';

    /**
     * Returns true if the given object is an instance of ClustersDiscoverUnconfiguredNodesV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClustersDiscoverUnconfiguredNodesV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClustersDiscoverUnconfiguredNodesV2.__pulumiType;
    }

    /**
     * - (Optional) Address type.
     * Valid values are:
     * - "IPV4"	IPV4 address type.
     * - "IPV6"	IPV6 address type.
     */
    public readonly addressType!: pulumi.Output<string | undefined>;
    /**
     * -(Required) Cluster UUID.
     */
    public readonly extId!: pulumi.Output<string>;
    /**
     * - (Optional) Interface name that is used for packet broadcasting.
     */
    public readonly interfaceFilterLists!: pulumi.Output<string[] | undefined>;
    /**
     * - (Optional) IP addresses of the unconfigured nodes.
     */
    public readonly ipFilterLists!: pulumi.Output<outputs.ClustersDiscoverUnconfiguredNodesV2IpFilterList[] | undefined>;
    /**
     * - (Optional) Indicates if the discovery is manual or not.
     */
    public readonly isManualDiscovery!: pulumi.Output<boolean | undefined>;
    /**
     * - (Optional) Timeout for the workflow in seconds.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    public /*out*/ readonly unconfiguredNodes!: pulumi.Output<outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode[]>;
    /**
     * - (Optional) Unconfigured node UUIDs.
     */
    public readonly uuidFilterLists!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ClustersDiscoverUnconfiguredNodesV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClustersDiscoverUnconfiguredNodesV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClustersDiscoverUnconfiguredNodesV2Args | ClustersDiscoverUnconfiguredNodesV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClustersDiscoverUnconfiguredNodesV2State | undefined;
            resourceInputs["addressType"] = state ? state.addressType : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["interfaceFilterLists"] = state ? state.interfaceFilterLists : undefined;
            resourceInputs["ipFilterLists"] = state ? state.ipFilterLists : undefined;
            resourceInputs["isManualDiscovery"] = state ? state.isManualDiscovery : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["unconfiguredNodes"] = state ? state.unconfiguredNodes : undefined;
            resourceInputs["uuidFilterLists"] = state ? state.uuidFilterLists : undefined;
        } else {
            const args = argsOrState as ClustersDiscoverUnconfiguredNodesV2Args | undefined;
            if ((!args || args.extId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extId'");
            }
            resourceInputs["addressType"] = args ? args.addressType : undefined;
            resourceInputs["extId"] = args ? args.extId : undefined;
            resourceInputs["interfaceFilterLists"] = args ? args.interfaceFilterLists : undefined;
            resourceInputs["ipFilterLists"] = args ? args.ipFilterLists : undefined;
            resourceInputs["isManualDiscovery"] = args ? args.isManualDiscovery : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["uuidFilterLists"] = args ? args.uuidFilterLists : undefined;
            resourceInputs["unconfiguredNodes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClustersDiscoverUnconfiguredNodesV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClustersDiscoverUnconfiguredNodesV2 resources.
 */
export interface ClustersDiscoverUnconfiguredNodesV2State {
    /**
     * - (Optional) Address type.
     * Valid values are:
     * - "IPV4"	IPV4 address type.
     * - "IPV6"	IPV6 address type.
     */
    addressType?: pulumi.Input<string>;
    /**
     * -(Required) Cluster UUID.
     */
    extId?: pulumi.Input<string>;
    /**
     * - (Optional) Interface name that is used for packet broadcasting.
     */
    interfaceFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) IP addresses of the unconfigured nodes.
     */
    ipFilterLists?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterList>[]>;
    /**
     * - (Optional) Indicates if the discovery is manual or not.
     */
    isManualDiscovery?: pulumi.Input<boolean>;
    /**
     * - (Optional) Timeout for the workflow in seconds.
     */
    timeout?: pulumi.Input<number>;
    unconfiguredNodes?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode>[]>;
    /**
     * - (Optional) Unconfigured node UUIDs.
     */
    uuidFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ClustersDiscoverUnconfiguredNodesV2 resource.
 */
export interface ClustersDiscoverUnconfiguredNodesV2Args {
    /**
     * - (Optional) Address type.
     * Valid values are:
     * - "IPV4"	IPV4 address type.
     * - "IPV6"	IPV6 address type.
     */
    addressType?: pulumi.Input<string>;
    /**
     * -(Required) Cluster UUID.
     */
    extId: pulumi.Input<string>;
    /**
     * - (Optional) Interface name that is used for packet broadcasting.
     */
    interfaceFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional) IP addresses of the unconfigured nodes.
     */
    ipFilterLists?: pulumi.Input<pulumi.Input<inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterList>[]>;
    /**
     * - (Optional) Indicates if the discovery is manual or not.
     */
    isManualDiscovery?: pulumi.Input<boolean>;
    /**
     * - (Optional) Timeout for the workflow in seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * - (Optional) Unconfigured node UUIDs.
     */
    uuidFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
}
