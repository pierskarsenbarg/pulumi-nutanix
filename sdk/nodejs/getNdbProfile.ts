// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Describes a profile in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const profile1 = nutanix.getNdbProfile({
 *     profileType: "Network",
 *     profileName: "TEST_NETWORK_PROFILE",
 * });
 * export const profile = profile1;
 * ```
 */
export function getNdbProfile(args?: GetNdbProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbProfile:getNdbProfile", {
        "engine": args.engine,
        "profileId": args.profileId,
        "profileName": args.profileName,
        "profileType": args.profileType,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbProfile.
 */
export interface GetNdbProfileArgs {
    /**
     * Database engine. For eg. postgres_database
     */
    engine?: string;
    /**
     * Profile ID for query
     */
    profileId?: string;
    /**
     * Profile Name for query
     */
    profileName?: string;
    /**
     * Profile type. Types: Software, Compute, Network and Database_Parameter
     */
    profileType?: string;
}

/**
 * A collection of values returned by getNdbProfile.
 */
export interface GetNdbProfileResult {
    /**
     * - associated databases
     */
    readonly assocDatabases: string[];
    /**
     * - associated DB servers
     */
    readonly assocDbServers: string[];
    /**
     * - list of clusters availability
     */
    readonly clusterAvailabilities: outputs.GetNdbProfileClusterAvailability[];
    /**
     * - database version
     */
    readonly dbVersion: string;
    /**
     * - description of profile
     */
    readonly description: string;
    readonly engine?: string;
    /**
     * - database engine type
     */
    readonly engineType: string;
    /**
     * - id of profile
     */
    readonly id: string;
    /**
     * - latest version for engine software
     */
    readonly latestVersion: string;
    /**
     * - ID of latest version for engine software
     */
    readonly latestVersionId: string;
    /**
     * - profile name
     */
    readonly name: string;
    /**
     * - era cluster ID
     */
    readonly nxClusterId: string;
    /**
     * - owner name
     */
    readonly owner: string;
    readonly profileId?: string;
    readonly profileName?: string;
    readonly profileType?: string;
    /**
     * - status of profile
     */
    readonly status: string;
    /**
     * - if system profile or not
     */
    readonly systemProfile: boolean;
    /**
     * - topology
     */
    readonly topology: string;
    readonly type: string;
    /**
     * - profile's different version config
     */
    readonly versions: outputs.GetNdbProfileVersion[];
}
/**
 * Describes a profile in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const profile1 = nutanix.getNdbProfile({
 *     profileType: "Network",
 *     profileName: "TEST_NETWORK_PROFILE",
 * });
 * export const profile = profile1;
 * ```
 */
export function getNdbProfileOutput(args?: GetNdbProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbProfileResult> {
    return pulumi.output(args).apply((a: any) => getNdbProfile(a, opts))
}

/**
 * A collection of arguments for invoking getNdbProfile.
 */
export interface GetNdbProfileOutputArgs {
    /**
     * Database engine. For eg. postgres_database
     */
    engine?: pulumi.Input<string>;
    /**
     * Profile ID for query
     */
    profileId?: pulumi.Input<string>;
    /**
     * Profile Name for query
     */
    profileName?: pulumi.Input<string>;
    /**
     * Profile type. Types: Software, Compute, Network and Database_Parameter
     */
    profileType?: pulumi.Input<string>;
}
