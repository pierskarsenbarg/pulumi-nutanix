// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix resource to Create Route.
 */
export class RoutesV2 extends pulumi.CustomResource {
    /**
     * Get an existing RoutesV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutesV2State, opts?: pulumi.CustomResourceOptions): RoutesV2 {
        return new RoutesV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/routesV2:RoutesV2';

    /**
     * Returns true if the given object is an instance of RoutesV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutesV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutesV2.__pulumiType;
    }

    /**
     * BGP session description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Destination IP Subnet Configuration.
     */
    public readonly destination!: pulumi.Output<outputs.RoutesV2Destination>;
    /**
     * Route UUID
     */
    public /*out*/ readonly extId!: pulumi.Output<string>;
    /**
     * External routing domain associated with this route table.
     */
    public readonly externalRoutingDomainReference!: pulumi.Output<string>;
    /**
     * Indicates whether the route is active in the forwarding plane.
     */
    public /*out*/ readonly isActive!: pulumi.Output<boolean>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.RoutesV2Link[]>;
    /**
     * Metadata associated with this resource.
     */
    public readonly metadata!: pulumi.Output<outputs.RoutesV2Metadata>;
    /**
     * Route name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Route nexthop.
     */
    public readonly nextHop!: pulumi.Output<outputs.RoutesV2NextHop>;
    /**
     * Route priority. A higher value implies greater preference is assigned to the route.
     */
    public /*out*/ readonly priority!: pulumi.Output<number>;
    /**
     * Route table UUID
     */
    public readonly routeTableExtId!: pulumi.Output<string>;
    /**
     * Route table reference.
     */
    public readonly routeTableReference!: pulumi.Output<string>;
    /**
     * Route type. Acceptable values are "STATIC", "LOCAL", "DYNAMIC"
     */
    public readonly routeType!: pulumi.Output<string>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * VPC reference.
     */
    public readonly vpcReference!: pulumi.Output<string>;

    /**
     * Create a RoutesV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutesV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutesV2Args | RoutesV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutesV2State | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["externalRoutingDomainReference"] = state ? state.externalRoutingDomainReference : undefined;
            resourceInputs["isActive"] = state ? state.isActive : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nextHop"] = state ? state.nextHop : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["routeTableExtId"] = state ? state.routeTableExtId : undefined;
            resourceInputs["routeTableReference"] = state ? state.routeTableReference : undefined;
            resourceInputs["routeType"] = state ? state.routeType : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["vpcReference"] = state ? state.vpcReference : undefined;
        } else {
            const args = argsOrState as RoutesV2Args | undefined;
            if ((!args || args.routeTableExtId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeTableExtId'");
            }
            if ((!args || args.routeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeType'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["externalRoutingDomainReference"] = args ? args.externalRoutingDomainReference : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nextHop"] = args ? args.nextHop : undefined;
            resourceInputs["routeTableExtId"] = args ? args.routeTableExtId : undefined;
            resourceInputs["routeTableReference"] = args ? args.routeTableReference : undefined;
            resourceInputs["routeType"] = args ? args.routeType : undefined;
            resourceInputs["vpcReference"] = args ? args.vpcReference : undefined;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["isActive"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutesV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoutesV2 resources.
 */
export interface RoutesV2State {
    /**
     * BGP session description.
     */
    description?: pulumi.Input<string>;
    /**
     * Destination IP Subnet Configuration.
     */
    destination?: pulumi.Input<inputs.RoutesV2Destination>;
    /**
     * Route UUID
     */
    extId?: pulumi.Input<string>;
    /**
     * External routing domain associated with this route table.
     */
    externalRoutingDomainReference?: pulumi.Input<string>;
    /**
     * Indicates whether the route is active in the forwarding plane.
     */
    isActive?: pulumi.Input<boolean>;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.RoutesV2Link>[]>;
    /**
     * Metadata associated with this resource.
     */
    metadata?: pulumi.Input<inputs.RoutesV2Metadata>;
    /**
     * Route name.
     */
    name?: pulumi.Input<string>;
    /**
     * Route nexthop.
     */
    nextHop?: pulumi.Input<inputs.RoutesV2NextHop>;
    /**
     * Route priority. A higher value implies greater preference is assigned to the route.
     */
    priority?: pulumi.Input<number>;
    /**
     * Route table UUID
     */
    routeTableExtId?: pulumi.Input<string>;
    /**
     * Route table reference.
     */
    routeTableReference?: pulumi.Input<string>;
    /**
     * Route type. Acceptable values are "STATIC", "LOCAL", "DYNAMIC"
     */
    routeType?: pulumi.Input<string>;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    tenantId?: pulumi.Input<string>;
    /**
     * VPC reference.
     */
    vpcReference?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutesV2 resource.
 */
export interface RoutesV2Args {
    /**
     * BGP session description.
     */
    description?: pulumi.Input<string>;
    /**
     * Destination IP Subnet Configuration.
     */
    destination?: pulumi.Input<inputs.RoutesV2Destination>;
    /**
     * External routing domain associated with this route table.
     */
    externalRoutingDomainReference?: pulumi.Input<string>;
    /**
     * Metadata associated with this resource.
     */
    metadata?: pulumi.Input<inputs.RoutesV2Metadata>;
    /**
     * Route name.
     */
    name?: pulumi.Input<string>;
    /**
     * Route nexthop.
     */
    nextHop?: pulumi.Input<inputs.RoutesV2NextHop>;
    /**
     * Route table UUID
     */
    routeTableExtId: pulumi.Input<string>;
    /**
     * Route table reference.
     */
    routeTableReference?: pulumi.Input<string>;
    /**
     * Route type. Acceptable values are "STATIC", "LOCAL", "DYNAMIC"
     */
    routeType: pulumi.Input<string>;
    /**
     * VPC reference.
     */
    vpcReference?: pulumi.Input<string>;
}
