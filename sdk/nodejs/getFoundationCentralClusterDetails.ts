// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFoundationCentralClusterDetails(args: GetFoundationCentralClusterDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralClusterDetailsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralClusterDetails:getFoundationCentralClusterDetails", {
        "clusterExternalIp": args.clusterExternalIp,
        "clusterName": args.clusterName,
        "clusterSize": args.clusterSize,
        "clusterStatus": args.clusterStatus,
        "commonNetworkSettings": args.commonNetworkSettings,
        "imagedClusterUuid": args.imagedClusterUuid,
        "redundancyFactor": args.redundancyFactor,
        "storageNodeCount": args.storageNodeCount,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralClusterDetails.
 */
export interface GetFoundationCentralClusterDetailsArgs {
    clusterExternalIp?: string;
    clusterName?: string;
    clusterSize?: number;
    clusterStatus?: inputs.GetFoundationCentralClusterDetailsClusterStatus;
    commonNetworkSettings?: inputs.GetFoundationCentralClusterDetailsCommonNetworkSettings;
    imagedClusterUuid: string;
    redundancyFactor?: number;
    storageNodeCount?: number;
}

/**
 * A collection of values returned by getFoundationCentralClusterDetails.
 */
export interface GetFoundationCentralClusterDetailsResult {
    readonly archived: boolean;
    readonly clusterExternalIp: string;
    readonly clusterName: string;
    readonly clusterSize: number;
    readonly clusterStatus: outputs.GetFoundationCentralClusterDetailsClusterStatus;
    readonly commonNetworkSettings: outputs.GetFoundationCentralClusterDetailsCommonNetworkSettings;
    readonly createdTimestamp: string;
    readonly currentTime: string;
    readonly destroyed: boolean;
    readonly foundationInitConfigs: outputs.GetFoundationCentralClusterDetailsFoundationInitConfig[];
    readonly foundationInitNodeUuid: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imagedClusterUuid: string;
    readonly imagedNodeUuidLists: string[];
    readonly redundancyFactor?: number;
    readonly storageNodeCount: number;
    readonly workflowType: string;
}
export function getFoundationCentralClusterDetailsOutput(args: GetFoundationCentralClusterDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFoundationCentralClusterDetailsResult> {
    return pulumi.output(args).apply((a: any) => getFoundationCentralClusterDetails(a, opts))
}

/**
 * A collection of arguments for invoking getFoundationCentralClusterDetails.
 */
export interface GetFoundationCentralClusterDetailsOutputArgs {
    clusterExternalIp?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    clusterSize?: pulumi.Input<number>;
    clusterStatus?: pulumi.Input<inputs.GetFoundationCentralClusterDetailsClusterStatusArgs>;
    commonNetworkSettings?: pulumi.Input<inputs.GetFoundationCentralClusterDetailsCommonNetworkSettingsArgs>;
    imagedClusterUuid: pulumi.Input<string>;
    redundancyFactor?: pulumi.Input<number>;
    storageNodeCount?: pulumi.Input<number>;
}
