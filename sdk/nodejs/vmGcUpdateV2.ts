// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VmGcUpdateV2 extends pulumi.CustomResource {
    /**
     * Get an existing VmGcUpdateV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmGcUpdateV2State, opts?: pulumi.CustomResourceOptions): VmGcUpdateV2 {
        return new VmGcUpdateV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/vmGcUpdateV2:VmGcUpdateV2';

    /**
     * Returns true if the given object is an instance of VmGcUpdateV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmGcUpdateV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmGcUpdateV2.__pulumiType;
    }

    declare public readonly configs: pulumi.Output<outputs.VmGcUpdateV2Config[]>;
    declare public readonly extId: pulumi.Output<string>;

    /**
     * Create a VmGcUpdateV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmGcUpdateV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmGcUpdateV2Args | VmGcUpdateV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmGcUpdateV2State | undefined;
            resourceInputs["configs"] = state?.configs;
            resourceInputs["extId"] = state?.extId;
        } else {
            const args = argsOrState as VmGcUpdateV2Args | undefined;
            if (args?.extId === undefined && !opts.urn) {
                throw new Error("Missing required property 'extId'");
            }
            resourceInputs["configs"] = args?.configs;
            resourceInputs["extId"] = args?.extId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmGcUpdateV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VmGcUpdateV2 resources.
 */
export interface VmGcUpdateV2State {
    configs?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2Config>[]>;
    extId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VmGcUpdateV2 resource.
 */
export interface VmGcUpdateV2Args {
    configs?: pulumi.Input<pulumi.Input<inputs.VmGcUpdateV2Config>[]>;
    extId: pulumi.Input<string>;
}
