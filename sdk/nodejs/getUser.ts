// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a datasource to retrieve a user based on the input parameters.
 */
export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("nutanix:index/getUser:getUser", {
        "categories": args.categories,
        "ownerReference": args.ownerReference,
        "projectReference": args.projectReference,
        "userId": args.userId,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    categories?: inputs.GetUserCategory[];
    ownerReference?: {[key: string]: string};
    projectReference?: {[key: string]: string};
    userId?: string;
    userName?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly accessControlPolicyReferenceLists: outputs.GetUserAccessControlPolicyReferenceList[];
    /**
     * The version of the API.
     * * `state`: - The state of the entity.
     * * `name`: - The name of the user.
     * * `userType`: - The name of the user.
     * * `displayName`: - The display name of the user (common name) provided by the directory service.
     * * `projectReferenceList`: - A list of projects the user is part of. See #reference for more details.
     * * `accessControlPolicyReferenceList`: - List of ACP references. See #reference for more details.
     * * `directoryServiceUser`: - (Optional) The directory service user configuration. See below for more information.
     * * `identityProviderUser`: - (Optional) (Optional) The identity provider user configuration. See below for more information.
     * * `categories`: - (Optional) Categories for the Access Control Policy.
     * * `projectReference`: - (Optional) The reference to a project.
     * * `ownerReference`: - (Optional) The reference to a user.
     */
    readonly apiVersion: string;
    readonly categories: outputs.GetUserCategory[];
    readonly directoryServiceUsers: outputs.GetUserDirectoryServiceUser[];
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identityProviderUsers: outputs.GetUserIdentityProviderUser[];
    readonly metadata: {[key: string]: string};
    readonly ownerReference: {[key: string]: string};
    readonly projectReference?: {[key: string]: string};
    readonly projectReferenceLists: outputs.GetUserProjectReferenceList[];
    readonly state: string;
    readonly userId?: string;
    readonly userName?: string;
    readonly userType: string;
}

export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply(a => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    categories?: pulumi.Input<pulumi.Input<inputs.GetUserCategoryArgs>[]>;
    ownerReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
