// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a single Routing Policy corresponding to the extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_pbr = nutanix.getPbrV2({
 *     extId: "96a22c81-ed58-4bed-96bc-46b488626612",
 * });
 * ```
 */
export function getPbrV2(args: GetPbrV2Args, opts?: pulumi.InvokeOptions): Promise<GetPbrV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getPbrV2:getPbrV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbrV2.
 */
export interface GetPbrV2Args {
    /**
     * pbr UUID
     */
    extId: string;
}

/**
 * A collection of values returned by getPbrV2.
 */
export interface GetPbrV2Result {
    /**
     * A description of the routing policy.
     */
    readonly description: string;
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetPbrV2Link[];
    /**
     * Metadata associated with this resource.
     */
    readonly metadatas: outputs.GetPbrV2Metadata[];
    /**
     * Name of the routing policy.
     */
    readonly name: string;
    /**
     * Routing Policies
     */
    readonly policies: outputs.GetPbrV2Policy[];
    /**
     * Priority of the routing policy.
     */
    readonly priority: number;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    readonly tenantId: string;
    /**
     * ExtId of the VPC extId to which the routing policy belongs.
     */
    readonly vpcExtId: string;
    /**
     * VPC name for projections
     */
    readonly vpcs: outputs.GetPbrV2Vpc[];
}
/**
 * Get a single Routing Policy corresponding to the extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_pbr = nutanix.getPbrV2({
 *     extId: "96a22c81-ed58-4bed-96bc-46b488626612",
 * });
 * ```
 */
export function getPbrV2Output(args: GetPbrV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPbrV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getPbrV2:getPbrV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbrV2.
 */
export interface GetPbrV2OutputArgs {
    /**
     * pbr UUID
     */
    extId: pulumi.Input<string>;
}
