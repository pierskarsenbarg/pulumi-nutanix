// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List all the clone present in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const clones = nutanix.getNdbClones({
 *     filters: [{
 *         detailed: "true",
 *     }],
 * });
 * ```
 */
export function getNdbClones(args?: GetNdbClonesArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbClonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbClones:getNdbClones", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbClones.
 */
export interface GetNdbClonesArgs {
    /**
     * Fetches the clone info based on given params
     */
    filters?: inputs.GetNdbClonesFilter[];
}

/**
 * A collection of values returned by getNdbClones.
 */
export interface GetNdbClonesResult {
    /**
     * List of clones based on filters
     */
    readonly clones: outputs.GetNdbClonesClone[];
    readonly filters?: outputs.GetNdbClonesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * List all the clone present in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const clones = nutanix.getNdbClones({
 *     filters: [{
 *         detailed: "true",
 *     }],
 * });
 * ```
 */
export function getNdbClonesOutput(args?: GetNdbClonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNdbClonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getNdbClones:getNdbClones", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbClones.
 */
export interface GetNdbClonesOutputArgs {
    /**
     * Fetches the clone info based on given params
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetNdbClonesFilterArgs>[]>;
}
