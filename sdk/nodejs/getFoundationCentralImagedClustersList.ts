// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List all the clusters created using Foundation Central.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const imagedClustersList = nutanix.getFoundationCentralImagedClustersList({});
 * ```
 */
export function getFoundationCentralImagedClustersList(args?: GetFoundationCentralImagedClustersListArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralImagedClustersListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralImagedClustersList:getFoundationCentralImagedClustersList", {
        "filters": args.filters,
        "length": args.length,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedClustersList.
 */
export interface GetFoundationCentralImagedClustersListArgs {
    filters?: inputs.GetFoundationCentralImagedClustersListFilters;
    /**
     * The number of records retrieved.
     */
    length?: number;
    /**
     * Offset from the start of the object list.
     */
    offset?: number;
}

/**
 * A collection of values returned by getFoundationCentralImagedClustersList.
 */
export interface GetFoundationCentralImagedClustersListResult {
    readonly filters?: outputs.GetFoundationCentralImagedClustersListFilters;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imagedClusters: outputs.GetFoundationCentralImagedClustersListImagedCluster[];
    /**
     * The number of records retrieved.
     */
    readonly length?: number;
    readonly metadatas: outputs.GetFoundationCentralImagedClustersListMetadata[];
    /**
     * Offset from the start of the object list.
     */
    readonly offset?: number;
}
/**
 * List all the clusters created using Foundation Central.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const imagedClustersList = nutanix.getFoundationCentralImagedClustersList({});
 * ```
 */
export function getFoundationCentralImagedClustersListOutput(args?: GetFoundationCentralImagedClustersListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFoundationCentralImagedClustersListResult> {
    return pulumi.output(args).apply((a: any) => getFoundationCentralImagedClustersList(a, opts))
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedClustersList.
 */
export interface GetFoundationCentralImagedClustersListOutputArgs {
    filters?: pulumi.Input<inputs.GetFoundationCentralImagedClustersListFiltersArgs>;
    /**
     * The number of records retrieved.
     */
    length?: pulumi.Input<number>;
    /**
     * Offset from the start of the object list.
     */
    offset?: pulumi.Input<number>;
}
