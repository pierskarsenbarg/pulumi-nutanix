// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificateV2(args: GetCertificateV2Args, opts?: pulumi.InvokeOptions): Promise<GetCertificateV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getCertificateV2:getCertificateV2", {
        "extId": args.extId,
        "objectStoreExtId": args.objectStoreExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateV2.
 */
export interface GetCertificateV2Args {
    extId: string;
    objectStoreExtId: string;
}

/**
 * A collection of values returned by getCertificateV2.
 */
export interface GetCertificateV2Result {
    readonly alternateFqdns: outputs.GetCertificateV2AlternateFqdn[];
    readonly alternateIps: outputs.GetCertificateV2AlternateIp[];
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly links: outputs.GetCertificateV2Link[];
    readonly metadatas: outputs.GetCertificateV2Metadata[];
    readonly objectStoreExtId: string;
    readonly tenantId: string;
}
export function getCertificateV2Output(args: GetCertificateV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCertificateV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getCertificateV2:getCertificateV2", {
        "extId": args.extId,
        "objectStoreExtId": args.objectStoreExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateV2.
 */
export interface GetCertificateV2OutputArgs {
    extId: pulumi.Input<string>;
    objectStoreExtId: pulumi.Input<string>;
}
