// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Describes a Query the Volume Disk identified by {extId} in the Volume Group identified by {volumeGroupExtId}.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const example = nutanix.getVolumeGroupDiskV2({
 *     extId: "1d92110d-26b5-46c0-8c93-20b8171373e0",
 *     volumeGroupExtId: "3770be9d-06be-4e25-b85d-3457d9b0ceb1",
 * });
 * ```
 */
export function getVolumeGroupDiskV2(args: GetVolumeGroupDiskV2Args, opts?: pulumi.InvokeOptions): Promise<GetVolumeGroupDiskV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getVolumeGroupDiskV2:getVolumeGroupDiskV2", {
        "extId": args.extId,
        "volumeGroupExtId": args.volumeGroupExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolumeGroupDiskV2.
 */
export interface GetVolumeGroupDiskV2Args {
    /**
     * - The external identifier of the Data Source Reference.
     */
    extId: string;
    volumeGroupExtId: string;
}

/**
 * A collection of values returned by getVolumeGroupDiskV2.
 */
export interface GetVolumeGroupDiskV2Result {
    /**
     * - Volume Disk description.
     */
    readonly description: string;
    /**
     * - Disk Data Source Reference.
     */
    readonly diskDataSourceReferences: outputs.GetVolumeGroupDiskV2DiskDataSourceReference[];
    /**
     * - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
     */
    readonly diskSizeBytes: number;
    /**
     * - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
     */
    readonly diskStorageFeatures: outputs.GetVolumeGroupDiskV2DiskStorageFeature[];
    /**
     * - The external identifier of the Data Source Reference.
     */
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * - Index of the disk in a Volume Group. This field is optional and immutable.
     */
    readonly index: number;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetVolumeGroupDiskV2Link[];
    /**
     * - Storage container on which the disk must be created. This is a read-only field.
     */
    readonly storageContainerId: string;
    /**
     * - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    readonly tenantId: string;
    readonly volumeGroupExtId: string;
}
/**
 * Describes a Query the Volume Disk identified by {extId} in the Volume Group identified by {volumeGroupExtId}.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const example = nutanix.getVolumeGroupDiskV2({
 *     extId: "1d92110d-26b5-46c0-8c93-20b8171373e0",
 *     volumeGroupExtId: "3770be9d-06be-4e25-b85d-3457d9b0ceb1",
 * });
 * ```
 */
export function getVolumeGroupDiskV2Output(args: GetVolumeGroupDiskV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeGroupDiskV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getVolumeGroupDiskV2:getVolumeGroupDiskV2", {
        "extId": args.extId,
        "volumeGroupExtId": args.volumeGroupExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolumeGroupDiskV2.
 */
export interface GetVolumeGroupDiskV2OutputArgs {
    /**
     * - The external identifier of the Data Source Reference.
     */
    extId: pulumi.Input<string>;
    volumeGroupExtId: pulumi.Input<string>;
}
