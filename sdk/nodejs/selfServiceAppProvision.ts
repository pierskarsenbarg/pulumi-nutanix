// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SelfServiceAppProvision extends pulumi.CustomResource {
    /**
     * Get an existing SelfServiceAppProvision resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SelfServiceAppProvisionState, opts?: pulumi.CustomResourceOptions): SelfServiceAppProvision {
        return new SelfServiceAppProvision(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/selfServiceAppProvision:SelfServiceAppProvision';

    /**
     * Returns true if the given object is an instance of SelfServiceAppProvision.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SelfServiceAppProvision {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SelfServiceAppProvision.__pulumiType;
    }

    /**
     * - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
     */
    public readonly action!: pulumi.Output<string | undefined>;
    public /*out*/ readonly actions!: pulumi.Output<outputs.SelfServiceAppProvisionAction[]>;
    /**
     * - (Computed) API version used.
     */
    public /*out*/ readonly apiVersion!: pulumi.Output<string>;
    /**
     * - (Optional) The description of application.
     *
     * Both are `bpName` and `bpUuid` are optional but atleast one of them to be provided for this resource to work.
     */
    public readonly appDescription!: pulumi.Output<string | undefined>;
    /**
     * - (Required) The name of the application you want to set.
     */
    public readonly appName!: pulumi.Output<string>;
    public /*out*/ readonly appSummaries!: pulumi.Output<outputs.SelfServiceAppProvisionAppSummary[]>;
    /**
     * - (Optional) The name of the blueprint to launch.
     */
    public readonly bpName!: pulumi.Output<string | undefined>;
    /**
     * - (Optional) The UUID of the blueprint to launch.
     */
    public readonly bpUuid!: pulumi.Output<string | undefined>;
    public readonly runtimeEditables!: pulumi.Output<outputs.SelfServiceAppProvisionRuntimeEditable[] | undefined>;
    /**
     * - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
     */
    public readonly softDelete!: pulumi.Output<boolean | undefined>;
    /**
     * - (Computed) Application specification (JSON string).
     */
    public /*out*/ readonly spec!: pulumi.Output<string>;
    /**
     * - (Computed) state of the application (e.g. running, stopped)
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * - (Computed) Application status coming as response from server.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly vms!: pulumi.Output<outputs.SelfServiceAppProvisionVm[]>;

    /**
     * Create a SelfServiceAppProvision resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SelfServiceAppProvisionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SelfServiceAppProvisionArgs | SelfServiceAppProvisionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SelfServiceAppProvisionState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["apiVersion"] = state ? state.apiVersion : undefined;
            resourceInputs["appDescription"] = state ? state.appDescription : undefined;
            resourceInputs["appName"] = state ? state.appName : undefined;
            resourceInputs["appSummaries"] = state ? state.appSummaries : undefined;
            resourceInputs["bpName"] = state ? state.bpName : undefined;
            resourceInputs["bpUuid"] = state ? state.bpUuid : undefined;
            resourceInputs["runtimeEditables"] = state ? state.runtimeEditables : undefined;
            resourceInputs["softDelete"] = state ? state.softDelete : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vms"] = state ? state.vms : undefined;
        } else {
            const args = argsOrState as SelfServiceAppProvisionArgs | undefined;
            if ((!args || args.appName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appName'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["appDescription"] = args ? args.appDescription : undefined;
            resourceInputs["appName"] = args ? args.appName : undefined;
            resourceInputs["bpName"] = args ? args.bpName : undefined;
            resourceInputs["bpUuid"] = args ? args.bpUuid : undefined;
            resourceInputs["runtimeEditables"] = args ? args.runtimeEditables : undefined;
            resourceInputs["softDelete"] = args ? args.softDelete : undefined;
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["apiVersion"] = undefined /*out*/;
            resourceInputs["appSummaries"] = undefined /*out*/;
            resourceInputs["spec"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vms"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SelfServiceAppProvision.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SelfServiceAppProvision resources.
 */
export interface SelfServiceAppProvisionState {
    /**
     * - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
     */
    action?: pulumi.Input<string>;
    actions?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionAction>[]>;
    /**
     * - (Computed) API version used.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * - (Optional) The description of application.
     *
     * Both are `bpName` and `bpUuid` are optional but atleast one of them to be provided for this resource to work.
     */
    appDescription?: pulumi.Input<string>;
    /**
     * - (Required) The name of the application you want to set.
     */
    appName?: pulumi.Input<string>;
    appSummaries?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionAppSummary>[]>;
    /**
     * - (Optional) The name of the blueprint to launch.
     */
    bpName?: pulumi.Input<string>;
    /**
     * - (Optional) The UUID of the blueprint to launch.
     */
    bpUuid?: pulumi.Input<string>;
    runtimeEditables?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditable>[]>;
    /**
     * - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
     */
    softDelete?: pulumi.Input<boolean>;
    /**
     * - (Computed) Application specification (JSON string).
     */
    spec?: pulumi.Input<string>;
    /**
     * - (Computed) state of the application (e.g. running, stopped)
     */
    state?: pulumi.Input<string>;
    /**
     * - (Computed) Application status coming as response from server.
     */
    status?: pulumi.Input<string>;
    vms?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionVm>[]>;
}

/**
 * The set of arguments for constructing a SelfServiceAppProvision resource.
 */
export interface SelfServiceAppProvisionArgs {
    /**
     * - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
     */
    action?: pulumi.Input<string>;
    /**
     * - (Optional) The description of application.
     *
     * Both are `bpName` and `bpUuid` are optional but atleast one of them to be provided for this resource to work.
     */
    appDescription?: pulumi.Input<string>;
    /**
     * - (Required) The name of the application you want to set.
     */
    appName: pulumi.Input<string>;
    /**
     * - (Optional) The name of the blueprint to launch.
     */
    bpName?: pulumi.Input<string>;
    /**
     * - (Optional) The UUID of the blueprint to launch.
     */
    bpUuid?: pulumi.Input<string>;
    runtimeEditables?: pulumi.Input<pulumi.Input<inputs.SelfServiceAppProvisionRuntimeEditable>[]>;
    /**
     * - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
     */
    softDelete?: pulumi.Input<boolean>;
}
