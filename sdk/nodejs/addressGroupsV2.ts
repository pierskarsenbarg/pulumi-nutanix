// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AddressGroupsV2 extends pulumi.CustomResource {
    /**
     * Get an existing AddressGroupsV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressGroupsV2State, opts?: pulumi.CustomResourceOptions): AddressGroupsV2 {
        return new AddressGroupsV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/addressGroupsV2:AddressGroupsV2';

    /**
     * Returns true if the given object is an instance of AddressGroupsV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AddressGroupsV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AddressGroupsV2.__pulumiType;
    }

    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly extId!: pulumi.Output<string>;
    public readonly ipRanges!: pulumi.Output<outputs.AddressGroupsV2IpRange[]>;
    public readonly ipv4Addresses!: pulumi.Output<outputs.AddressGroupsV2Ipv4Address[]>;
    public /*out*/ readonly links!: pulumi.Output<outputs.AddressGroupsV2Link[]>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly policyReferences!: pulumi.Output<string[]>;
    public /*out*/ readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AddressGroupsV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AddressGroupsV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddressGroupsV2Args | AddressGroupsV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddressGroupsV2State | undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["ipRanges"] = state ? state.ipRanges : undefined;
            resourceInputs["ipv4Addresses"] = state ? state.ipv4Addresses : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyReferences"] = state ? state.policyReferences : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AddressGroupsV2Args | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipRanges"] = args ? args.ipRanges : undefined;
            resourceInputs["ipv4Addresses"] = args ? args.ipv4Addresses : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["policyReferences"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AddressGroupsV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AddressGroupsV2 resources.
 */
export interface AddressGroupsV2State {
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<inputs.AddressGroupsV2IpRange>[]>;
    ipv4Addresses?: pulumi.Input<pulumi.Input<inputs.AddressGroupsV2Ipv4Address>[]>;
    links?: pulumi.Input<pulumi.Input<inputs.AddressGroupsV2Link>[]>;
    name?: pulumi.Input<string>;
    policyReferences?: pulumi.Input<pulumi.Input<string>[]>;
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AddressGroupsV2 resource.
 */
export interface AddressGroupsV2Args {
    description?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<inputs.AddressGroupsV2IpRange>[]>;
    ipv4Addresses?: pulumi.Input<pulumi.Input<inputs.AddressGroupsV2Ipv4Address>[]>;
    name?: pulumi.Input<string>;
}
