// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix resource to Create a User.
 */
export class UsersV2 extends pulumi.CustomResource {
    /**
     * Get an existing UsersV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UsersV2State, opts?: pulumi.CustomResourceOptions): UsersV2 {
        return new UsersV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/usersV2:UsersV2';

    /**
     * Returns true if the given object is an instance of UsersV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UsersV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UsersV2.__pulumiType;
    }

    /**
     * -  Any additional attribute for the User.
     */
    public readonly additionalAttributes!: pulumi.Output<outputs.UsersV2AdditionalAttribute[]>;
    /**
     * - Bucket Access Keys for the User.
     */
    public /*out*/ readonly bucketsAccessKeys!: pulumi.Output<outputs.UsersV2BucketsAccessKey[]>;
    /**
     * - User or Service who created the User.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * - Creation time for the Bucket Access Key.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * - Display name for the User.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * - Email Id for the User.
     */
    public readonly emailId!: pulumi.Output<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    public /*out*/ readonly extId!: pulumi.Output<string>;
    /**
     * - First name for the User.
     */
    public readonly firstName!: pulumi.Output<string>;
    public readonly forceResetPassword!: pulumi.Output<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    public readonly idpId!: pulumi.Output<string>;
    /**
     * - Last successful logged in time for the User.
     */
    public /*out*/ readonly lastLoginTime!: pulumi.Output<string>;
    /**
     * - Last name for the User.
     */
    public readonly lastName!: pulumi.Output<string>;
    /**
     * - Last updated time of the User.
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    public /*out*/ readonly links!: pulumi.Output<outputs.UsersV2Link[]>;
    /**
     * - Default locale for the User.
     */
    public readonly locale!: pulumi.Output<string>;
    /**
     * - Middle name for the User.
     */
    public readonly middleInitial!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string>;
    /**
     * - Default Region for the User.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    public readonly userType!: pulumi.Output<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a UsersV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UsersV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UsersV2Args | UsersV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UsersV2State | undefined;
            resourceInputs["additionalAttributes"] = state ? state.additionalAttributes : undefined;
            resourceInputs["bucketsAccessKeys"] = state ? state.bucketsAccessKeys : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emailId"] = state ? state.emailId : undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["forceResetPassword"] = state ? state.forceResetPassword : undefined;
            resourceInputs["idpId"] = state ? state.idpId : undefined;
            resourceInputs["lastLoginTime"] = state ? state.lastLoginTime : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["middleInitial"] = state ? state.middleInitial : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["userType"] = state ? state.userType : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as UsersV2Args | undefined;
            if ((!args || args.userType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userType'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["additionalAttributes"] = args ? args.additionalAttributes : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["emailId"] = args ? args.emailId : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["forceResetPassword"] = args ? args.forceResetPassword : undefined;
            resourceInputs["idpId"] = args ? args.idpId : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["middleInitial"] = args ? args.middleInitial : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["userType"] = args ? args.userType : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["bucketsAccessKeys"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["lastLoginTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UsersV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UsersV2 resources.
 */
export interface UsersV2State {
    /**
     * -  Any additional attribute for the User.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.UsersV2AdditionalAttribute>[]>;
    /**
     * - Bucket Access Keys for the User.
     */
    bucketsAccessKeys?: pulumi.Input<pulumi.Input<inputs.UsersV2BucketsAccessKey>[]>;
    /**
     * - User or Service who created the User.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * - Creation time for the Bucket Access Key.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * - Display name for the User.
     */
    displayName?: pulumi.Input<string>;
    /**
     * - Email Id for the User.
     */
    emailId?: pulumi.Input<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * - First name for the User.
     */
    firstName?: pulumi.Input<string>;
    forceResetPassword?: pulumi.Input<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    idpId?: pulumi.Input<string>;
    /**
     * - Last successful logged in time for the User.
     */
    lastLoginTime?: pulumi.Input<string>;
    /**
     * - Last name for the User.
     */
    lastName?: pulumi.Input<string>;
    /**
     * - Last updated time of the User.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.UsersV2Link>[]>;
    /**
     * - Default locale for the User.
     */
    locale?: pulumi.Input<string>;
    /**
     * - Middle name for the User.
     */
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * - Default Region for the User.
     */
    region?: pulumi.Input<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    status?: pulumi.Input<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    userType?: pulumi.Input<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UsersV2 resource.
 */
export interface UsersV2Args {
    /**
     * -  Any additional attribute for the User.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.UsersV2AdditionalAttribute>[]>;
    /**
     * - Display name for the User.
     */
    displayName?: pulumi.Input<string>;
    /**
     * - Email Id for the User.
     */
    emailId?: pulumi.Input<string>;
    /**
     * - First name for the User.
     */
    firstName?: pulumi.Input<string>;
    forceResetPassword?: pulumi.Input<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    idpId?: pulumi.Input<string>;
    /**
     * - Last name for the User.
     */
    lastName?: pulumi.Input<string>;
    /**
     * - Default locale for the User.
     */
    locale?: pulumi.Input<string>;
    /**
     * - Middle name for the User.
     */
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * - Default Region for the User.
     */
    region?: pulumi.Input<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    status?: pulumi.Input<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    userType: pulumi.Input<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    username: pulumi.Input<string>;
}
