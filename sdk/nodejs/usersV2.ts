// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix resource to Create a User.
 *
 * ## Import
 *
 * This helps to manage existing entities which are not created through terraform. Users can be imported using the `UUID`.  eg,
 *
 * hcl
 *
 * // create its configuration in the root module. For example:
 *
 * resource "nutanix_users_v2" "import_user" {}
 *
 * // execute this command
 *
 * ```sh
 * $ pulumi import nutanix:index/usersV2:UsersV2 import_user <UUID>
 * ```
 *
 * See detailed information in [Nutanix Users v4](https://developers.nutanix.com/api-reference?namespace=iam&version=v4.0#tag/Users/operation/createUser).
 */
export class UsersV2 extends pulumi.CustomResource {
    /**
     * Get an existing UsersV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UsersV2State, opts?: pulumi.CustomResourceOptions): UsersV2 {
        return new UsersV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/usersV2:UsersV2';

    /**
     * Returns true if the given object is an instance of UsersV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UsersV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UsersV2.__pulumiType;
    }

    /**
     * -  Any additional attribute for the User.
     */
    declare public readonly additionalAttributes: pulumi.Output<outputs.UsersV2AdditionalAttribute[]>;
    /**
     * - Bucket Access Keys for the User.
     */
    declare public /*out*/ readonly bucketsAccessKeys: pulumi.Output<outputs.UsersV2BucketsAccessKey[]>;
    /**
     * - User or Service who created the User.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * - Creation time for the Bucket Access Key.
     */
    declare public /*out*/ readonly createdTime: pulumi.Output<string>;
    /**
     * - Display name for the User.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * - Email Id for the User.
     */
    declare public readonly emailId: pulumi.Output<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    declare public /*out*/ readonly extId: pulumi.Output<string>;
    /**
     * - First name for the User.
     */
    declare public readonly firstName: pulumi.Output<string>;
    declare public readonly forceResetPassword: pulumi.Output<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    declare public readonly idpId: pulumi.Output<string>;
    /**
     * - Last successful logged in time for the User.
     */
    declare public /*out*/ readonly lastLoginTime: pulumi.Output<string>;
    /**
     * - Last name for the User.
     */
    declare public readonly lastName: pulumi.Output<string>;
    /**
     * - Last updated time of the User.
     */
    declare public /*out*/ readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    declare public /*out*/ readonly links: pulumi.Output<outputs.UsersV2Link[]>;
    /**
     * - Default locale for the User.
     */
    declare public readonly locale: pulumi.Output<string>;
    /**
     * - Middle name for the User.
     */
    declare public readonly middleInitial: pulumi.Output<string>;
    declare public readonly password: pulumi.Output<string>;
    /**
     * - Default Region for the User.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    declare public readonly userType: pulumi.Output<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    declare public readonly username: pulumi.Output<string>;

    /**
     * Create a UsersV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UsersV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UsersV2Args | UsersV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UsersV2State | undefined;
            resourceInputs["additionalAttributes"] = state?.additionalAttributes;
            resourceInputs["bucketsAccessKeys"] = state?.bucketsAccessKeys;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["createdTime"] = state?.createdTime;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["emailId"] = state?.emailId;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["firstName"] = state?.firstName;
            resourceInputs["forceResetPassword"] = state?.forceResetPassword;
            resourceInputs["idpId"] = state?.idpId;
            resourceInputs["lastLoginTime"] = state?.lastLoginTime;
            resourceInputs["lastName"] = state?.lastName;
            resourceInputs["lastUpdatedTime"] = state?.lastUpdatedTime;
            resourceInputs["links"] = state?.links;
            resourceInputs["locale"] = state?.locale;
            resourceInputs["middleInitial"] = state?.middleInitial;
            resourceInputs["password"] = state?.password;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
            resourceInputs["userType"] = state?.userType;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as UsersV2Args | undefined;
            if (args?.userType === undefined && !opts.urn) {
                throw new Error("Missing required property 'userType'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["additionalAttributes"] = args?.additionalAttributes;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["emailId"] = args?.emailId;
            resourceInputs["firstName"] = args?.firstName;
            resourceInputs["forceResetPassword"] = args?.forceResetPassword;
            resourceInputs["idpId"] = args?.idpId;
            resourceInputs["lastName"] = args?.lastName;
            resourceInputs["locale"] = args?.locale;
            resourceInputs["middleInitial"] = args?.middleInitial;
            resourceInputs["password"] = args?.password;
            resourceInputs["region"] = args?.region;
            resourceInputs["status"] = args?.status;
            resourceInputs["userType"] = args?.userType;
            resourceInputs["username"] = args?.username;
            resourceInputs["bucketsAccessKeys"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["extId"] = undefined /*out*/;
            resourceInputs["lastLoginTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UsersV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UsersV2 resources.
 */
export interface UsersV2State {
    /**
     * -  Any additional attribute for the User.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.UsersV2AdditionalAttribute>[]>;
    /**
     * - Bucket Access Keys for the User.
     */
    bucketsAccessKeys?: pulumi.Input<pulumi.Input<inputs.UsersV2BucketsAccessKey>[]>;
    /**
     * - User or Service who created the User.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * - Creation time for the Bucket Access Key.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * - Display name for the User.
     */
    displayName?: pulumi.Input<string>;
    /**
     * - Email Id for the User.
     */
    emailId?: pulumi.Input<string>;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * - First name for the User.
     */
    firstName?: pulumi.Input<string>;
    forceResetPassword?: pulumi.Input<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    idpId?: pulumi.Input<string>;
    /**
     * - Last successful logged in time for the User.
     */
    lastLoginTime?: pulumi.Input<string>;
    /**
     * - Last name for the User.
     */
    lastName?: pulumi.Input<string>;
    /**
     * - Last updated time of the User.
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    links?: pulumi.Input<pulumi.Input<inputs.UsersV2Link>[]>;
    /**
     * - Default locale for the User.
     */
    locale?: pulumi.Input<string>;
    /**
     * - Middle name for the User.
     */
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * - Default Region for the User.
     */
    region?: pulumi.Input<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    status?: pulumi.Input<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    userType?: pulumi.Input<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UsersV2 resource.
 */
export interface UsersV2Args {
    /**
     * -  Any additional attribute for the User.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.UsersV2AdditionalAttribute>[]>;
    /**
     * - Display name for the User.
     */
    displayName?: pulumi.Input<string>;
    /**
     * - Email Id for the User.
     */
    emailId?: pulumi.Input<string>;
    /**
     * - First name for the User.
     */
    firstName?: pulumi.Input<string>;
    forceResetPassword?: pulumi.Input<boolean>;
    /**
     * - Identifier of the IDP for the User.
     */
    idpId?: pulumi.Input<string>;
    /**
     * - Last name for the User.
     */
    lastName?: pulumi.Input<string>;
    /**
     * - Default locale for the User.
     */
    locale?: pulumi.Input<string>;
    /**
     * - Middle name for the User.
     */
    middleInitial?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * - Default Region for the User.
     */
    region?: pulumi.Input<string>;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    status?: pulumi.Input<string>;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    userType: pulumi.Input<string>;
    /**
     * - Identifier for the User in the form an email address.
     */
    username: pulumi.Input<string>;
}
