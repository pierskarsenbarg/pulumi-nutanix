// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to perform the refresh clone of database based on the input parameters.
 *
 * ## Example Usage
 *
 * ### resource to refresh clone with snapshot id
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const acctest_managed = new nutanix.NdbCloneRefresh("acctest-managed", {
 *     cloneId: "{{ clone_id }}",
 *     snapshotId: "{{ snapshot_id }}",
 *     timezone: "Asia/Calcutta",
 * });
 * ```
 */
export class NdbCloneRefresh extends pulumi.CustomResource {
    /**
     * Get an existing NdbCloneRefresh resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NdbCloneRefreshState, opts?: pulumi.CustomResourceOptions): NdbCloneRefresh {
        return new NdbCloneRefresh(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/ndbCloneRefresh:NdbCloneRefresh';

    /**
     * Returns true if the given object is an instance of NdbCloneRefresh.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NdbCloneRefresh {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NdbCloneRefresh.__pulumiType;
    }

    /**
     * clone id
     */
    public readonly cloneId!: pulumi.Output<string>;
    /**
     * snapshot id where clone has to be refreshed
     */
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    /**
     * timezone. Default is Asia/Calcutta. 
     *
     * See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    public readonly userPitrTimestamp!: pulumi.Output<string | undefined>;

    /**
     * Create a NdbCloneRefresh resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NdbCloneRefreshArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NdbCloneRefreshArgs | NdbCloneRefreshState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NdbCloneRefreshState | undefined;
            resourceInputs["cloneId"] = state ? state.cloneId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["userPitrTimestamp"] = state ? state.userPitrTimestamp : undefined;
        } else {
            const args = argsOrState as NdbCloneRefreshArgs | undefined;
            if ((!args || args.cloneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloneId'");
            }
            resourceInputs["cloneId"] = args ? args.cloneId : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["userPitrTimestamp"] = args ? args.userPitrTimestamp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NdbCloneRefresh.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NdbCloneRefresh resources.
 */
export interface NdbCloneRefreshState {
    /**
     * clone id
     */
    cloneId?: pulumi.Input<string>;
    /**
     * snapshot id where clone has to be refreshed
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * timezone. Default is Asia/Calcutta. 
     *
     * See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
     */
    timezone?: pulumi.Input<string>;
    userPitrTimestamp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NdbCloneRefresh resource.
 */
export interface NdbCloneRefreshArgs {
    /**
     * clone id
     */
    cloneId: pulumi.Input<string>;
    /**
     * snapshot id where clone has to be refreshed
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * timezone. Default is Asia/Calcutta. 
     *
     * See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
     */
    timezone?: pulumi.Input<string>;
    userPitrTimestamp?: pulumi.Input<string>;
}
