// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Nutanix Category key resource to Create a category key name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const test = new nutanix.CategoryKey("test", {
 *     description: "App Support Category Key",
 * });
 * ```
 */
export class CategoryKey extends pulumi.CustomResource {
    /**
     * Get an existing CategoryKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CategoryKeyState, opts?: pulumi.CustomResourceOptions): CategoryKey {
        return new CategoryKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/categoryKey:CategoryKey';

    /**
     * Returns true if the given object is an instance of CategoryKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CategoryKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CategoryKey.__pulumiType;
    }

    /**
     * (Optional) The version of the API.
     */
    public /*out*/ readonly apiVersion!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly systemDefined!: pulumi.Output<boolean>;

    /**
     * Create a CategoryKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CategoryKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CategoryKeyArgs | CategoryKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CategoryKeyState | undefined;
            resourceInputs["apiVersion"] = state ? state.apiVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["systemDefined"] = state ? state.systemDefined : undefined;
        } else {
            const args = argsOrState as CategoryKeyArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["apiVersion"] = undefined /*out*/;
            resourceInputs["systemDefined"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CategoryKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CategoryKey resources.
 */
export interface CategoryKeyState {
    /**
     * (Optional) The version of the API.
     */
    apiVersion?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    systemDefined?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CategoryKey resource.
 */
export interface CategoryKeyArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
