// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Describes a database instance in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const db1 = nutanix.getNdbDatabase({
 *     databaseId: "<sample-id>",
 * });
 * export const db1Output = db1;
 * ```
 */
export function getNdbDatabase(args: GetNdbDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbDatabase:getNdbDatabase", {
        "databaseId": args.databaseId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbDatabase.
 */
export interface GetNdbDatabaseArgs {
    /**
     * ID of database instance
     */
    databaseId: string;
    /**
     * - tags attached
     */
    tags?: inputs.GetNdbDatabaseTag[];
}

/**
 * A collection of values returned by getNdbDatabase.
 */
export interface GetNdbDatabaseResult {
    /**
     * - if cloned
     */
    readonly clone: boolean;
    /**
     * - if clustered or not
     */
    readonly clustered: boolean;
    readonly databaseClusterType: string;
    readonly databaseId: string;
    /**
     * - database instance name
     */
    readonly databaseName: string;
    /**
     * - nodes info
     */
    readonly databaseNodes: outputs.GetNdbDatabaseDatabaseNode[];
    readonly databases: {[key: string]: string};
    /**
     * - creation date
     */
    readonly dateCreated: string;
    /**
     * - date modified
     */
    readonly dateModified: string;
    /**
     * - NA
     */
    readonly dbserverLogicalCluster: {[key: string]: string};
    /**
     * - NA
     */
    readonly dbserverLogicalClusterId: string;
    /**
     * - description
     */
    readonly description: string;
    readonly eraCreated: boolean;
    /**
     * - id of database instance
     */
    readonly id: string;
    /**
     * - info regarding disks, vm, storage, etc.
     */
    readonly infos: outputs.GetNdbDatabaseInfo[];
    /**
     * - lcm configuration
     */
    readonly lcmConfigs: outputs.GetNdbDatabaseLcmConfig[];
    /**
     * - list of databases created in instance with info
     */
    readonly linkedDatabases: outputs.GetNdbDatabaseLinkedDatabase[];
    /**
     * - metrics
     */
    readonly metric: {[key: string]: string};
    /**
     * - name of database instance
     */
    readonly name: string;
    /**
     * - parent database ID
     */
    readonly parentDatabaseId: string;
    /**
     * - properties
     */
    readonly properties: outputs.GetNdbDatabaseProperty[];
    /**
     * - status of database instance
     */
    readonly status: string;
    /**
     * - tags attached
     */
    readonly tags: outputs.GetNdbDatabaseTag[];
    /**
     * - time machine ID
     */
    readonly timeMachineId: string;
    /**
     * - time machine related config info
     */
    readonly timeMachines: outputs.GetNdbDatabaseTimeMachine[];
    /**
     * - timezone
     */
    readonly timeZone: string;
    /**
     * - database engine type
     */
    readonly type: string;
}
/**
 * Describes a database instance in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const db1 = nutanix.getNdbDatabase({
 *     databaseId: "<sample-id>",
 * });
 * export const db1Output = db1;
 * ```
 */
export function getNdbDatabaseOutput(args: GetNdbDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getNdbDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getNdbDatabase.
 */
export interface GetNdbDatabaseOutputArgs {
    /**
     * ID of database instance
     */
    databaseId: pulumi.Input<string>;
    /**
     * - tags attached
     */
    tags?: pulumi.Input<pulumi.Input<inputs.GetNdbDatabaseTagArgs>[]>;
}
