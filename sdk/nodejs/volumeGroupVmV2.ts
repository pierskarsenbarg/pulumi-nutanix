// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a resource to Create a new Volume Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const vgVmExample = new nutanix.VolumeGroupVmV2("vgVmExample", {
 *     vmExtId: "8a938cc5-282b-48c4-81be-de22de145d07",
 *     volumeGroupExtId: "1cdb5b48-fb2c-41b6-b751-b504117ee3e2",
 * });
 * ```
 */
export class VolumeGroupVmV2 extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroupVmV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeGroupVmV2State, opts?: pulumi.CustomResourceOptions): VolumeGroupVmV2 {
        return new VolumeGroupVmV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/volumeGroupVmV2:VolumeGroupVmV2';

    /**
     * Returns true if the given object is an instance of VolumeGroupVmV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeGroupVmV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeGroupVmV2.__pulumiType;
    }

    /**
     * A globally unique identifier of a task.
     */
    public /*out*/ readonly extId!: pulumi.Output<string>;
    /**
     * -(Optional) The index on the SCSI bus to attach the VM to the Volume Group.
     *
     *
     * See detailed information in [Nutanix Attach VM to Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/attachVm).
     */
    public readonly index!: pulumi.Output<number | undefined>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    public readonly vmExtId!: pulumi.Output<string>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    public readonly volumeGroupExtId!: pulumi.Output<string>;

    /**
     * Create a VolumeGroupVmV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupVmV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeGroupVmV2Args | VolumeGroupVmV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeGroupVmV2State | undefined;
            resourceInputs["extId"] = state ? state.extId : undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["vmExtId"] = state ? state.vmExtId : undefined;
            resourceInputs["volumeGroupExtId"] = state ? state.volumeGroupExtId : undefined;
        } else {
            const args = argsOrState as VolumeGroupVmV2Args | undefined;
            if ((!args || args.vmExtId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vmExtId'");
            }
            if ((!args || args.volumeGroupExtId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumeGroupExtId'");
            }
            resourceInputs["index"] = args ? args.index : undefined;
            resourceInputs["vmExtId"] = args ? args.vmExtId : undefined;
            resourceInputs["volumeGroupExtId"] = args ? args.volumeGroupExtId : undefined;
            resourceInputs["extId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeGroupVmV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeGroupVmV2 resources.
 */
export interface VolumeGroupVmV2State {
    /**
     * A globally unique identifier of a task.
     */
    extId?: pulumi.Input<string>;
    /**
     * -(Optional) The index on the SCSI bus to attach the VM to the Volume Group.
     *
     *
     * See detailed information in [Nutanix Attach VM to Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/attachVm).
     */
    index?: pulumi.Input<number>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    vmExtId?: pulumi.Input<string>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    volumeGroupExtId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VolumeGroupVmV2 resource.
 */
export interface VolumeGroupVmV2Args {
    /**
     * -(Optional) The index on the SCSI bus to attach the VM to the Volume Group.
     *
     *
     * See detailed information in [Nutanix Attach VM to Volume Group V4](https://developers.nutanix.com/api-reference?namespace=volumes&version=v4.0#tag/VolumeGroups/operation/attachVm).
     */
    index?: pulumi.Input<number>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    vmExtId: pulumi.Input<string>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    volumeGroupExtId: pulumi.Input<string>;
}
