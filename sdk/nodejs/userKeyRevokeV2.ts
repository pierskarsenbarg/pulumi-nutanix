// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides Nutanix resource to Revoke the requested key for a user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * // revoke key
 * const revoke_key = new nutanix.UserKeyRevokeV2("revoke-key", {
 *     extId: "<USER_KEY_UUID>",
 *     userExtId: "<SERVICE_ACCOUNT_UUID>",
 * });
 * ```
 *
 * ## Argument Reference
 *
 * The following arguments are supported:
 *
 * * `userExtId`: - ( Required ) External Identifier of the User.
 * * `extId`: - ( Required ) External identifier of the key.
 */
export class UserKeyRevokeV2 extends pulumi.CustomResource {
    /**
     * Get an existing UserKeyRevokeV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserKeyRevokeV2State, opts?: pulumi.CustomResourceOptions): UserKeyRevokeV2 {
        return new UserKeyRevokeV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/userKeyRevokeV2:UserKeyRevokeV2';

    /**
     * Returns true if the given object is an instance of UserKeyRevokeV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserKeyRevokeV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserKeyRevokeV2.__pulumiType;
    }

    /**
     * - The map of argument name to value.
     */
    declare public /*out*/ readonly argumentsMaps: pulumi.Output<outputs.UserKeyRevokeV2ArgumentsMap[]>;
    /**
     * - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
     */
    declare public /*out*/ readonly code: pulumi.Output<string>;
    /**
     * - The error group associated with this message of severity ERROR.
     */
    declare public /*out*/ readonly errorGroup: pulumi.Output<string>;
    declare public readonly extId: pulumi.Output<string>;
    /**
     * - Locale for this message. The default locale would be 'en-US'.
     */
    declare public /*out*/ readonly locale: pulumi.Output<string>;
    /**
     * - The message string.
     */
    declare public /*out*/ readonly message: pulumi.Output<string>;
    /**
     * - The message severity.
     */
    declare public /*out*/ readonly severity: pulumi.Output<string>;
    declare public readonly userExtId: pulumi.Output<string>;

    /**
     * Create a UserKeyRevokeV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserKeyRevokeV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserKeyRevokeV2Args | UserKeyRevokeV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserKeyRevokeV2State | undefined;
            resourceInputs["argumentsMaps"] = state?.argumentsMaps;
            resourceInputs["code"] = state?.code;
            resourceInputs["errorGroup"] = state?.errorGroup;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["locale"] = state?.locale;
            resourceInputs["message"] = state?.message;
            resourceInputs["severity"] = state?.severity;
            resourceInputs["userExtId"] = state?.userExtId;
        } else {
            const args = argsOrState as UserKeyRevokeV2Args | undefined;
            if (args?.extId === undefined && !opts.urn) {
                throw new Error("Missing required property 'extId'");
            }
            if (args?.userExtId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userExtId'");
            }
            resourceInputs["extId"] = args?.extId;
            resourceInputs["userExtId"] = args?.userExtId;
            resourceInputs["argumentsMaps"] = undefined /*out*/;
            resourceInputs["code"] = undefined /*out*/;
            resourceInputs["errorGroup"] = undefined /*out*/;
            resourceInputs["locale"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["severity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserKeyRevokeV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserKeyRevokeV2 resources.
 */
export interface UserKeyRevokeV2State {
    /**
     * - The map of argument name to value.
     */
    argumentsMaps?: pulumi.Input<pulumi.Input<inputs.UserKeyRevokeV2ArgumentsMap>[]>;
    /**
     * - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
     */
    code?: pulumi.Input<string>;
    /**
     * - The error group associated with this message of severity ERROR.
     */
    errorGroup?: pulumi.Input<string>;
    extId?: pulumi.Input<string>;
    /**
     * - Locale for this message. The default locale would be 'en-US'.
     */
    locale?: pulumi.Input<string>;
    /**
     * - The message string.
     */
    message?: pulumi.Input<string>;
    /**
     * - The message severity.
     */
    severity?: pulumi.Input<string>;
    userExtId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserKeyRevokeV2 resource.
 */
export interface UserKeyRevokeV2Args {
    extId: pulumi.Input<string>;
    userExtId: pulumi.Input<string>;
}
