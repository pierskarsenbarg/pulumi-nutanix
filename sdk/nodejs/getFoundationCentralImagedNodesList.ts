// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List all the nodes registered with Foundation Central
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const nodesList = nutanix.getFoundationCentralImagedNodesList({});
 * ```
 */
export function getFoundationCentralImagedNodesList(args?: GetFoundationCentralImagedNodesListArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralImagedNodesListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralImagedNodesList:getFoundationCentralImagedNodesList", {
        "filters": args.filters,
        "length": args.length,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListArgs {
    filters?: inputs.GetFoundationCentralImagedNodesListFilters;
    /**
     * The number of records retrieved.
     */
    length?: number;
    /**
     * Offset from the start of the object list.
     */
    offset?: number;
}

/**
 * A collection of values returned by getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListResult {
    readonly filters?: outputs.GetFoundationCentralImagedNodesListFilters;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imagedNodes: outputs.GetFoundationCentralImagedNodesListImagedNode[];
    /**
     * The number of records retrieved.
     */
    readonly length?: number;
    /**
     * List metadata output for all list apis.
     */
    readonly metadatas: outputs.GetFoundationCentralImagedNodesListMetadata[];
    /**
     * Offset from the start of the object list.
     */
    readonly offset?: number;
}
/**
 * List all the nodes registered with Foundation Central
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const nodesList = nutanix.getFoundationCentralImagedNodesList({});
 * ```
 */
export function getFoundationCentralImagedNodesListOutput(args?: GetFoundationCentralImagedNodesListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFoundationCentralImagedNodesListResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getFoundationCentralImagedNodesList:getFoundationCentralImagedNodesList", {
        "filters": args.filters,
        "length": args.length,
        "offset": args.offset,
    }, opts);
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListOutputArgs {
    filters?: pulumi.Input<inputs.GetFoundationCentralImagedNodesListFiltersArgs>;
    /**
     * The number of records retrieved.
     */
    length?: pulumi.Input<number>;
    /**
     * Offset from the start of the object list.
     */
    offset?: pulumi.Input<number>;
}
