// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a list of Routing Policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const pbrs = nutanix.getPbrsV2({});
 * const pbrs_filter = nutanix.getPbrsV2({
 *     filter: "name eq 'pbr_example'",
 * });
 * const pbrs_limit = nutanix.getPbrsV2({
 *     limit: 10,
 * });
 * const pbrs_filter_limit = nutanix.getPbrsV2({
 *     filter: "name eq 'pbr_example'",
 *     limit: 10,
 * });
 * ```
 */
export function getPbrsV2(args?: GetPbrsV2Args, opts?: pulumi.InvokeOptions): Promise<GetPbrsV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getPbrsV2:getPbrsV2", {
        "filter": args.filter,
        "limit": args.limit,
        "orderBy": args.orderBy,
        "page": args.page,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbrsV2.
 */
export interface GetPbrsV2Args {
    /**
     * A URL query parameter that allows clients to filter a collection of resources. The filter can be applied to the following fields:
     * - name
     * - policies/policyAction/actionType
     * - policies/policyMatch/protocolType
     * - policies/policyMatch/source
     * - priority
     * - vpcExtId
     */
    filter?: string;
    /**
     * A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
     */
    limit?: number;
    /**
     * A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
     * - name
     * - priority
     */
    orderBy?: string;
    /**
     * A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
     */
    page?: number;
}

/**
 * A collection of values returned by getPbrsV2.
 */
export interface GetPbrsV2Result {
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly orderBy?: string;
    readonly page?: number;
    /**
     * List all of routing policies.
     */
    readonly routingPolicies: outputs.GetPbrsV2RoutingPolicy[];
}
/**
 * Get a list of Routing Policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const pbrs = nutanix.getPbrsV2({});
 * const pbrs_filter = nutanix.getPbrsV2({
 *     filter: "name eq 'pbr_example'",
 * });
 * const pbrs_limit = nutanix.getPbrsV2({
 *     limit: 10,
 * });
 * const pbrs_filter_limit = nutanix.getPbrsV2({
 *     filter: "name eq 'pbr_example'",
 *     limit: 10,
 * });
 * ```
 */
export function getPbrsV2Output(args?: GetPbrsV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPbrsV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getPbrsV2:getPbrsV2", {
        "filter": args.filter,
        "limit": args.limit,
        "orderBy": args.orderBy,
        "page": args.page,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbrsV2.
 */
export interface GetPbrsV2OutputArgs {
    /**
     * A URL query parameter that allows clients to filter a collection of resources. The filter can be applied to the following fields:
     * - name
     * - policies/policyAction/actionType
     * - policies/policyMatch/protocolType
     * - policies/policyMatch/source
     * - priority
     * - vpcExtId
     */
    filter?: pulumi.Input<string>;
    /**
     * A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
     */
    limit?: pulumi.Input<number>;
    /**
     * A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
     * - name
     * - priority
     */
    orderBy?: pulumi.Input<string>;
    /**
     * A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
     */
    page?: pulumi.Input<number>;
}
