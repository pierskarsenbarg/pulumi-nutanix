// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Nutanix network security rule resource to Create a network security rule.
 *
 * > NOTE: The use of networkSecurityRule is only applicable in AHV clusters and requires Microsegmentation to be enabled. This feature is a function of the Flow product and requires a Flow license. For more information on Flow and Microsegmentation please visit https://www.nutanix.com/products/flow
 *
 * ## Example Usage
 * ### Isolation Rule Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const isolation = new nutanix.NetworkSecurityRule("isolation", {
 *     description: "Isolation Rule Example",
 *     isolationRuleAction: "APPLY",
 *     isolationRuleFirstEntityFilterKindLists: ["vm"],
 *     isolationRuleFirstEntityFilterParams: [{
 *         name: "Environment",
 *         values: ["Dev"],
 *     }],
 *     isolationRuleFirstEntityFilterType: "CATEGORIES_MATCH_ALL",
 *     isolationRuleSecondEntityFilterKindLists: ["vm"],
 *     isolationRuleSecondEntityFilterParams: [{
 *         name: "Environment",
 *         values: ["Production"],
 *     }],
 *     isolationRuleSecondEntityFilterType: "CATEGORIES_MATCH_ALL",
 * });
 * ```
 * ### Usage with service and address groups
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const service1 = new nutanix.ServiceGroup("service1", {
 *     description: "test",
 *     serviceLists: [{
 *         protocol: "TCP",
 *         tcpPortRangeLists: [
 *             {
 *                 startPort: 22,
 *                 endPort: 22,
 *             },
 *             {
 *                 startPort: 2222,
 *                 endPort: 2222,
 *             },
 *         ],
 *     }],
 * });
 * const address1 = new nutanix.AddressGroup("address1", {
 *     description: "test",
 *     ipAddressBlockLists: [{
 *         ip: "10.0.0.0",
 *         prefixLength: 24,
 *     }],
 * });
 * const ad_group_user_1 = new nutanix.CategoryValue("ad-group-user-1", {
 *     description: "group user category value",
 *     value: "AD",
 * });
 * const vDI = new nutanix.NetworkSecurityRule("vDI", {
 *     adRuleAction: "APPLY",
 *     description: "test",
 *     adRuleInboundAllowLists: [{
 *         ipSubnet: "10.0.0.0",
 *         ipSubnetPrefixLength: "8",
 *         peerSpecificationType: "IP_SUBNET",
 *         protocol: "ALL",
 *     }],
 *     adRuleTargetGroupDefaultInternalPolicy: "DENY_ALL",
 *     adRuleTargetGroupFilterKindLists: ["vm"],
 *     adRuleTargetGroupFilterParams: [{
 *         name: "AD",
 *         values: ["AD"],
 *     }],
 *     adRuleTargetGroupFilterType: "CATEGORIES_MATCH_ALL",
 *     adRuleTargetGroupPeerSpecificationType: "FILTER",
 *     adRuleOutboundAllowLists: [{
 *         peerSpecificationType: "ALL",
 *         serviceGroupLists: [{
 *             kind: "service_group",
 *             uuid: service1.id,
 *         }],
 *         addressGroupInclusionLists: [{
 *             kind: "address_group",
 *             uuid: address1.id,
 *         }],
 *     }],
 * }, {
 *     dependsOn: [ad_group_user_1],
 * });
 * ```
 */
export class NetworkSecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing NetworkSecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions): NetworkSecurityRule {
        return new NetworkSecurityRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/networkSecurityRule:NetworkSecurityRule';

    /**
     * Returns true if the given object is an instance of NetworkSecurityRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkSecurityRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkSecurityRule.__pulumiType;
    }

    public readonly adRuleAction!: pulumi.Output<string>;
    public readonly adRuleInboundAllowLists!: pulumi.Output<outputs.NetworkSecurityRuleAdRuleInboundAllowList[]>;
    public readonly adRuleOutboundAllowLists!: pulumi.Output<outputs.NetworkSecurityRuleAdRuleOutboundAllowList[]>;
    public readonly adRuleTargetGroupDefaultInternalPolicy!: pulumi.Output<string | undefined>;
    public readonly adRuleTargetGroupFilterKindLists!: pulumi.Output<string[]>;
    public readonly adRuleTargetGroupFilterParams!: pulumi.Output<outputs.NetworkSecurityRuleAdRuleTargetGroupFilterParam[]>;
    public readonly adRuleTargetGroupFilterType!: pulumi.Output<string>;
    public readonly adRuleTargetGroupPeerSpecificationType!: pulumi.Output<string | undefined>;
    public readonly allowIpv6Traffic!: pulumi.Output<boolean>;
    /**
     * The version of the API.
     */
    public /*out*/ readonly apiVersion!: pulumi.Output<string>;
    public readonly appRuleAction!: pulumi.Output<string>;
    public readonly appRuleInboundAllowLists!: pulumi.Output<outputs.NetworkSecurityRuleAppRuleInboundAllowList[]>;
    public readonly appRuleOutboundAllowLists!: pulumi.Output<outputs.NetworkSecurityRuleAppRuleOutboundAllowList[]>;
    public readonly appRuleTargetGroupDefaultInternalPolicy!: pulumi.Output<string | undefined>;
    public readonly appRuleTargetGroupFilterKindLists!: pulumi.Output<string[]>;
    public readonly appRuleTargetGroupFilterParams!: pulumi.Output<outputs.NetworkSecurityRuleAppRuleTargetGroupFilterParam[]>;
    public readonly appRuleTargetGroupFilterType!: pulumi.Output<string>;
    public readonly appRuleTargetGroupPeerSpecificationType!: pulumi.Output<string | undefined>;
    public readonly categories!: pulumi.Output<outputs.NetworkSecurityRuleCategory[]>;
    public readonly description!: pulumi.Output<string>;
    public readonly isPolicyHitlogEnabled!: pulumi.Output<boolean>;
    public readonly isolationRuleAction!: pulumi.Output<string>;
    public readonly isolationRuleFirstEntityFilterKindLists!: pulumi.Output<string[]>;
    public readonly isolationRuleFirstEntityFilterParams!: pulumi.Output<outputs.NetworkSecurityRuleIsolationRuleFirstEntityFilterParam[]>;
    public readonly isolationRuleFirstEntityFilterType!: pulumi.Output<string>;
    public readonly isolationRuleSecondEntityFilterKindLists!: pulumi.Output<string[]>;
    public readonly isolationRuleSecondEntityFilterParams!: pulumi.Output<outputs.NetworkSecurityRuleIsolationRuleSecondEntityFilterParam[]>;
    public readonly isolationRuleSecondEntityFilterType!: pulumi.Output<string>;
    public /*out*/ readonly metadata!: pulumi.Output<{[key: string]: string}>;
    public readonly name!: pulumi.Output<string>;
    public readonly ownerReference!: pulumi.Output<{[key: string]: string}>;
    public readonly projectReference!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a NetworkSecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkSecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkSecurityRuleArgs | NetworkSecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkSecurityRuleState | undefined;
            resourceInputs["adRuleAction"] = state ? state.adRuleAction : undefined;
            resourceInputs["adRuleInboundAllowLists"] = state ? state.adRuleInboundAllowLists : undefined;
            resourceInputs["adRuleOutboundAllowLists"] = state ? state.adRuleOutboundAllowLists : undefined;
            resourceInputs["adRuleTargetGroupDefaultInternalPolicy"] = state ? state.adRuleTargetGroupDefaultInternalPolicy : undefined;
            resourceInputs["adRuleTargetGroupFilterKindLists"] = state ? state.adRuleTargetGroupFilterKindLists : undefined;
            resourceInputs["adRuleTargetGroupFilterParams"] = state ? state.adRuleTargetGroupFilterParams : undefined;
            resourceInputs["adRuleTargetGroupFilterType"] = state ? state.adRuleTargetGroupFilterType : undefined;
            resourceInputs["adRuleTargetGroupPeerSpecificationType"] = state ? state.adRuleTargetGroupPeerSpecificationType : undefined;
            resourceInputs["allowIpv6Traffic"] = state ? state.allowIpv6Traffic : undefined;
            resourceInputs["apiVersion"] = state ? state.apiVersion : undefined;
            resourceInputs["appRuleAction"] = state ? state.appRuleAction : undefined;
            resourceInputs["appRuleInboundAllowLists"] = state ? state.appRuleInboundAllowLists : undefined;
            resourceInputs["appRuleOutboundAllowLists"] = state ? state.appRuleOutboundAllowLists : undefined;
            resourceInputs["appRuleTargetGroupDefaultInternalPolicy"] = state ? state.appRuleTargetGroupDefaultInternalPolicy : undefined;
            resourceInputs["appRuleTargetGroupFilterKindLists"] = state ? state.appRuleTargetGroupFilterKindLists : undefined;
            resourceInputs["appRuleTargetGroupFilterParams"] = state ? state.appRuleTargetGroupFilterParams : undefined;
            resourceInputs["appRuleTargetGroupFilterType"] = state ? state.appRuleTargetGroupFilterType : undefined;
            resourceInputs["appRuleTargetGroupPeerSpecificationType"] = state ? state.appRuleTargetGroupPeerSpecificationType : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isPolicyHitlogEnabled"] = state ? state.isPolicyHitlogEnabled : undefined;
            resourceInputs["isolationRuleAction"] = state ? state.isolationRuleAction : undefined;
            resourceInputs["isolationRuleFirstEntityFilterKindLists"] = state ? state.isolationRuleFirstEntityFilterKindLists : undefined;
            resourceInputs["isolationRuleFirstEntityFilterParams"] = state ? state.isolationRuleFirstEntityFilterParams : undefined;
            resourceInputs["isolationRuleFirstEntityFilterType"] = state ? state.isolationRuleFirstEntityFilterType : undefined;
            resourceInputs["isolationRuleSecondEntityFilterKindLists"] = state ? state.isolationRuleSecondEntityFilterKindLists : undefined;
            resourceInputs["isolationRuleSecondEntityFilterParams"] = state ? state.isolationRuleSecondEntityFilterParams : undefined;
            resourceInputs["isolationRuleSecondEntityFilterType"] = state ? state.isolationRuleSecondEntityFilterType : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerReference"] = state ? state.ownerReference : undefined;
            resourceInputs["projectReference"] = state ? state.projectReference : undefined;
        } else {
            const args = argsOrState as NetworkSecurityRuleArgs | undefined;
            resourceInputs["adRuleAction"] = args ? args.adRuleAction : undefined;
            resourceInputs["adRuleInboundAllowLists"] = args ? args.adRuleInboundAllowLists : undefined;
            resourceInputs["adRuleOutboundAllowLists"] = args ? args.adRuleOutboundAllowLists : undefined;
            resourceInputs["adRuleTargetGroupDefaultInternalPolicy"] = args ? args.adRuleTargetGroupDefaultInternalPolicy : undefined;
            resourceInputs["adRuleTargetGroupFilterKindLists"] = args ? args.adRuleTargetGroupFilterKindLists : undefined;
            resourceInputs["adRuleTargetGroupFilterParams"] = args ? args.adRuleTargetGroupFilterParams : undefined;
            resourceInputs["adRuleTargetGroupFilterType"] = args ? args.adRuleTargetGroupFilterType : undefined;
            resourceInputs["adRuleTargetGroupPeerSpecificationType"] = args ? args.adRuleTargetGroupPeerSpecificationType : undefined;
            resourceInputs["allowIpv6Traffic"] = args ? args.allowIpv6Traffic : undefined;
            resourceInputs["appRuleAction"] = args ? args.appRuleAction : undefined;
            resourceInputs["appRuleInboundAllowLists"] = args ? args.appRuleInboundAllowLists : undefined;
            resourceInputs["appRuleOutboundAllowLists"] = args ? args.appRuleOutboundAllowLists : undefined;
            resourceInputs["appRuleTargetGroupDefaultInternalPolicy"] = args ? args.appRuleTargetGroupDefaultInternalPolicy : undefined;
            resourceInputs["appRuleTargetGroupFilterKindLists"] = args ? args.appRuleTargetGroupFilterKindLists : undefined;
            resourceInputs["appRuleTargetGroupFilterParams"] = args ? args.appRuleTargetGroupFilterParams : undefined;
            resourceInputs["appRuleTargetGroupFilterType"] = args ? args.appRuleTargetGroupFilterType : undefined;
            resourceInputs["appRuleTargetGroupPeerSpecificationType"] = args ? args.appRuleTargetGroupPeerSpecificationType : undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isPolicyHitlogEnabled"] = args ? args.isPolicyHitlogEnabled : undefined;
            resourceInputs["isolationRuleAction"] = args ? args.isolationRuleAction : undefined;
            resourceInputs["isolationRuleFirstEntityFilterKindLists"] = args ? args.isolationRuleFirstEntityFilterKindLists : undefined;
            resourceInputs["isolationRuleFirstEntityFilterParams"] = args ? args.isolationRuleFirstEntityFilterParams : undefined;
            resourceInputs["isolationRuleFirstEntityFilterType"] = args ? args.isolationRuleFirstEntityFilterType : undefined;
            resourceInputs["isolationRuleSecondEntityFilterKindLists"] = args ? args.isolationRuleSecondEntityFilterKindLists : undefined;
            resourceInputs["isolationRuleSecondEntityFilterParams"] = args ? args.isolationRuleSecondEntityFilterParams : undefined;
            resourceInputs["isolationRuleSecondEntityFilterType"] = args ? args.isolationRuleSecondEntityFilterType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerReference"] = args ? args.ownerReference : undefined;
            resourceInputs["projectReference"] = args ? args.projectReference : undefined;
            resourceInputs["apiVersion"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkSecurityRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkSecurityRule resources.
 */
export interface NetworkSecurityRuleState {
    adRuleAction?: pulumi.Input<string>;
    adRuleInboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowList>[]>;
    adRuleOutboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowList>[]>;
    adRuleTargetGroupDefaultInternalPolicy?: pulumi.Input<string>;
    adRuleTargetGroupFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    adRuleTargetGroupFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleTargetGroupFilterParam>[]>;
    adRuleTargetGroupFilterType?: pulumi.Input<string>;
    adRuleTargetGroupPeerSpecificationType?: pulumi.Input<string>;
    allowIpv6Traffic?: pulumi.Input<boolean>;
    /**
     * The version of the API.
     */
    apiVersion?: pulumi.Input<string>;
    appRuleAction?: pulumi.Input<string>;
    appRuleInboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowList>[]>;
    appRuleOutboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowList>[]>;
    appRuleTargetGroupDefaultInternalPolicy?: pulumi.Input<string>;
    appRuleTargetGroupFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    appRuleTargetGroupFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleTargetGroupFilterParam>[]>;
    appRuleTargetGroupFilterType?: pulumi.Input<string>;
    appRuleTargetGroupPeerSpecificationType?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleCategory>[]>;
    description?: pulumi.Input<string>;
    isPolicyHitlogEnabled?: pulumi.Input<boolean>;
    isolationRuleAction?: pulumi.Input<string>;
    isolationRuleFirstEntityFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    isolationRuleFirstEntityFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleIsolationRuleFirstEntityFilterParam>[]>;
    isolationRuleFirstEntityFilterType?: pulumi.Input<string>;
    isolationRuleSecondEntityFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    isolationRuleSecondEntityFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleIsolationRuleSecondEntityFilterParam>[]>;
    isolationRuleSecondEntityFilterType?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    ownerReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a NetworkSecurityRule resource.
 */
export interface NetworkSecurityRuleArgs {
    adRuleAction?: pulumi.Input<string>;
    adRuleInboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleInboundAllowList>[]>;
    adRuleOutboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleOutboundAllowList>[]>;
    adRuleTargetGroupDefaultInternalPolicy?: pulumi.Input<string>;
    adRuleTargetGroupFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    adRuleTargetGroupFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAdRuleTargetGroupFilterParam>[]>;
    adRuleTargetGroupFilterType?: pulumi.Input<string>;
    adRuleTargetGroupPeerSpecificationType?: pulumi.Input<string>;
    allowIpv6Traffic?: pulumi.Input<boolean>;
    appRuleAction?: pulumi.Input<string>;
    appRuleInboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleInboundAllowList>[]>;
    appRuleOutboundAllowLists?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleOutboundAllowList>[]>;
    appRuleTargetGroupDefaultInternalPolicy?: pulumi.Input<string>;
    appRuleTargetGroupFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    appRuleTargetGroupFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleAppRuleTargetGroupFilterParam>[]>;
    appRuleTargetGroupFilterType?: pulumi.Input<string>;
    appRuleTargetGroupPeerSpecificationType?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleCategory>[]>;
    description?: pulumi.Input<string>;
    isPolicyHitlogEnabled?: pulumi.Input<boolean>;
    isolationRuleAction?: pulumi.Input<string>;
    isolationRuleFirstEntityFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    isolationRuleFirstEntityFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleIsolationRuleFirstEntityFilterParam>[]>;
    isolationRuleFirstEntityFilterType?: pulumi.Input<string>;
    isolationRuleSecondEntityFilterKindLists?: pulumi.Input<pulumi.Input<string>[]>;
    isolationRuleSecondEntityFilterParams?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityRuleIsolationRuleSecondEntityFilterParam>[]>;
    isolationRuleSecondEntityFilterType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ownerReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectReference?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
