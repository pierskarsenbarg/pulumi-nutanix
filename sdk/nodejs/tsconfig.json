{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accessControlPolicy.ts",
        "addressGroup.ts",
        "categoryKey.ts",
        "categoryValue.ts",
        "config/index.ts",
        "config/vars.ts",
        "floatingIp.ts",
        "foundationCentralApiKeys.ts",
        "foundationCentralImageCluster.ts",
        "foundationImage.ts",
        "foundationImageNodes.ts",
        "foundationIpmiConfig.ts",
        "getAccessControlPolicies.ts",
        "getAccessControlPolicy.ts",
        "getAddressGroup.ts",
        "getAddressGroups.ts",
        "getAssertHelper.ts",
        "getCategoryKey.ts",
        "getCluster.ts",
        "getClusters.ts",
        "getFloatingIp.ts",
        "getFloatingIps.ts",
        "getFoundationCentralApiKeys.ts",
        "getFoundationCentralClusterDetails.ts",
        "getFoundationCentralImagedClustersList.ts",
        "getFoundationCentralImagedNodeDetails.ts",
        "getFoundationCentralImagedNodesList.ts",
        "getFoundationCentralListApiKeys.ts",
        "getFoundationDiscoverNodes.ts",
        "getFoundationHypervisorIsos.ts",
        "getFoundationNodeNetworkDetails.ts",
        "getFoundationNosPackages.ts",
        "getHost.ts",
        "getHosts.ts",
        "getImage.ts",
        "getKarbonCluster.ts",
        "getKarbonClusterKubeconfig.ts",
        "getKarbonClusterSsh.ts",
        "getKarbonClusters.ts",
        "getKarbonPrivateRegistries.ts",
        "getKarbonPrivateRegistry.ts",
        "getNetworkSecurityRule.ts",
        "getPbr.ts",
        "getPbrs.ts",
        "getPermission.ts",
        "getPermissions.ts",
        "getProject.ts",
        "getProjects.ts",
        "getProtectionRule.ts",
        "getProtectionRules.ts",
        "getRecoveryPlan.ts",
        "getRecoveryPlans.ts",
        "getRole.ts",
        "getRoles.ts",
        "getServiceGroup.ts",
        "getServiceGroups.ts",
        "getStaticRoutes.ts",
        "getSubnet.ts",
        "getSubnets.ts",
        "getUser.ts",
        "getUserGroup.ts",
        "getUserGroups.ts",
        "getUsers.ts",
        "getVirtualMachine.ts",
        "getVpc.ts",
        "getVpcs.ts",
        "image.ts",
        "index.ts",
        "karbonCluster.ts",
        "karbonPrivateRegistry.ts",
        "networkSecurityRule.ts",
        "pbr.ts",
        "project.ts",
        "protectionRule.ts",
        "provider.ts",
        "recoveryPlan.ts",
        "role.ts",
        "serviceGroup.ts",
        "staticRoutes.ts",
        "subnet.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "utilities.ts",
        "virtualMachine.ts",
        "vpc.ts"
    ]
}
