// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get details about all LCM entities.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const entities = nutanix.getLcmEntityV2({});
 * const lcm_entities_filtered = nutanix.getLcmEntitiesV2({
 *     filter: "entityModel eq 'Calm Policy Engine'",
 * });
 * const lcm_entities_limit = nutanix.getLcmEntitiesV2({
 *     limit: 5,
 * });
 * ```
 */
export function getLcmEntitiesV2(args?: GetLcmEntitiesV2Args, opts?: pulumi.InvokeOptions): Promise<GetLcmEntitiesV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getLcmEntitiesV2:getLcmEntitiesV2", {
        "filter": args.filter,
        "limit": args.limit,
        "orderBy": args.orderBy,
        "page": args.page,
        "select": args.select,
    }, opts);
}

/**
 * A collection of arguments for invoking getLcmEntitiesV2.
 */
export interface GetLcmEntitiesV2Args {
    /**
     * A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clientName, createdBy, extId, createdTime, displayName, extId, isSystemDefined, lastUpdatedTime.
     * * The filter can be applied to the following fields:
     * * `clusterExtId`
     * * `entityClass`
     * * `entityModel`
     * * `entityType`
     * * `entityVersion`
     * * `hardwareVendor`
     */
    filter?: string;
    /**
     * A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
     */
    limit?: number;
    orderBy?: string;
    /**
     * - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
     */
    page?: number;
    /**
     * A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields: accessibleClients, accessibleEntityTypes, assignedUserGroupsCount, assignedUsersCount, clientName, createdBy, createdTime, description, displayName, extId, isSystemDefined, lastUpdatedTime, links, operations, tenantId.
     * * The select can be applied to the following fields:
     * * `entityClass`
     * * `entityModel`
     * * `entityType`
     * * `entityVersion`
     * * `hardwareVendor`
     */
    select?: string;
}

/**
 * A collection of values returned by getLcmEntitiesV2.
 */
export interface GetLcmEntitiesV2Result {
    /**
     * List of LCM entities.
     */
    readonly entities: outputs.GetLcmEntitiesV2Entity[];
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly orderBy?: string;
    readonly page?: number;
    readonly select?: string;
}
/**
 * Get details about all LCM entities.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const entities = nutanix.getLcmEntityV2({});
 * const lcm_entities_filtered = nutanix.getLcmEntitiesV2({
 *     filter: "entityModel eq 'Calm Policy Engine'",
 * });
 * const lcm_entities_limit = nutanix.getLcmEntitiesV2({
 *     limit: 5,
 * });
 * ```
 */
export function getLcmEntitiesV2Output(args?: GetLcmEntitiesV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLcmEntitiesV2Result> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getLcmEntitiesV2:getLcmEntitiesV2", {
        "filter": args.filter,
        "limit": args.limit,
        "orderBy": args.orderBy,
        "page": args.page,
        "select": args.select,
    }, opts);
}

/**
 * A collection of arguments for invoking getLcmEntitiesV2.
 */
export interface GetLcmEntitiesV2OutputArgs {
    /**
     * A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clientName, createdBy, extId, createdTime, displayName, extId, isSystemDefined, lastUpdatedTime.
     * * The filter can be applied to the following fields:
     * * `clusterExtId`
     * * `entityClass`
     * * `entityModel`
     * * `entityType`
     * * `entityVersion`
     * * `hardwareVendor`
     */
    filter?: pulumi.Input<string>;
    /**
     * A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
     */
    limit?: pulumi.Input<number>;
    orderBy?: pulumi.Input<string>;
    /**
     * - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
     */
    page?: pulumi.Input<number>;
    /**
     * A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields: accessibleClients, accessibleEntityTypes, assignedUserGroupsCount, assignedUsersCount, clientName, createdBy, createdTime, description, displayName, extId, isSystemDefined, lastUpdatedTime, links, operations, tenantId.
     * * The select can be applied to the following fields:
     * * `entityClass`
     * * `entityModel`
     * * `entityType`
     * * `entityVersion`
     * * `hardwareVendor`
     */
    select?: pulumi.Input<string>;
}
