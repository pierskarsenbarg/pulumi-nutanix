// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Describes the Fetches the protection policy identified by an external identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const example = nutanix.getProtectionPolicyV2({
 *     extId: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getProtectionPolicyV2(args: GetProtectionPolicyV2Args, opts?: pulumi.InvokeOptions): Promise<GetProtectionPolicyV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getProtectionPolicyV2:getProtectionPolicyV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionPolicyV2.
 */
export interface GetProtectionPolicyV2Args {
    /**
     * -(Required) The external identifier of the protection policy.
     */
    extId: string;
}

/**
 * A collection of values returned by getProtectionPolicyV2.
 */
export interface GetProtectionPolicyV2Result {
    /**
     * - Host entity with its attributes.
     */
    readonly categoryIds: string[];
    /**
     * - Description of the protection policy.
     */
    readonly description: string;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * - Disks attached to host.
     */
    readonly isApprovalPolicyNeeded: boolean;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetProtectionPolicyV2Link[];
    /**
     * - Name of the protection policy.
     */
    readonly name: string;
    /**
     * - Node degraded status.
     */
    readonly ownerExtId: string;
    /**
     * - Cluster reference for an entity.
     */
    readonly replicationConfigurations: outputs.GetProtectionPolicyV2ReplicationConfiguration[];
    /**
     * - Hypervisor details.
     */
    readonly replicationLocations: outputs.GetProtectionPolicyV2ReplicationLocation[];
    /**
     * - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    readonly tenantId: string;
}
/**
 * Describes the Fetches the protection policy identified by an external identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const example = nutanix.getProtectionPolicyV2({
 *     extId: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getProtectionPolicyV2Output(args: GetProtectionPolicyV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProtectionPolicyV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getProtectionPolicyV2:getProtectionPolicyV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionPolicyV2.
 */
export interface GetProtectionPolicyV2OutputArgs {
    /**
     * -(Required) The external identifier of the protection policy.
     */
    extId: pulumi.Input<string>;
}
