// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the nutanix package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'nutanix';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * URL for Nutanix Prism (e.g IP or FQDN for cluster VIP
     * note, this is never the data services VIP, and should not be an
     * individual CVM address, as this would cause calls to fail during
     * cluster lifecycle management operations, such as AOS upgrades.
     */
    declare public readonly endpoint: pulumi.Output<string | undefined>;
    /**
     * endpoint for foundation VM (eg. Foundation VM IP)
     */
    declare public readonly foundationEndpoint: pulumi.Output<string | undefined>;
    /**
     * Port for foundation VM
     */
    declare public readonly foundationPort: pulumi.Output<string | undefined>;
    /**
     * endpoint for Era VM (era ip)
     */
    declare public readonly ndbEndpoint: pulumi.Output<string | undefined>;
    declare public readonly ndbPassword: pulumi.Output<string | undefined>;
    declare public readonly ndbUsername: pulumi.Output<string | undefined>;
    /**
     * Password for provided user name.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * Port for Nutanix Prism.
     */
    declare public readonly port: pulumi.Output<string | undefined>;
    declare public readonly proxyUrl: pulumi.Output<string | undefined>;
    /**
     * User name for Nutanix Prism. Could be
     * local cluster auth (e.g. 'admin') or directory auth.
     */
    declare public readonly username: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["endpoint"] = args?.endpoint;
            resourceInputs["foundationEndpoint"] = args?.foundationEndpoint;
            resourceInputs["foundationPort"] = args?.foundationPort;
            resourceInputs["insecure"] = pulumi.output(args?.insecure).apply(JSON.stringify);
            resourceInputs["ndbEndpoint"] = args?.ndbEndpoint;
            resourceInputs["ndbPassword"] = args?.ndbPassword;
            resourceInputs["ndbUsername"] = args?.ndbUsername;
            resourceInputs["password"] = args?.password;
            resourceInputs["port"] = args?.port;
            resourceInputs["proxyUrl"] = args?.proxyUrl;
            resourceInputs["sessionAuth"] = pulumi.output(args?.sessionAuth).apply(JSON.stringify);
            resourceInputs["username"] = args?.username;
            resourceInputs["waitTimeout"] = pulumi.output(args?.waitTimeout).apply(JSON.stringify);
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:nutanix/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * URL for Nutanix Prism (e.g IP or FQDN for cluster VIP
     * note, this is never the data services VIP, and should not be an
     * individual CVM address, as this would cause calls to fail during
     * cluster lifecycle management operations, such as AOS upgrades.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * endpoint for foundation VM (eg. Foundation VM IP)
     */
    foundationEndpoint?: pulumi.Input<string>;
    /**
     * Port for foundation VM
     */
    foundationPort?: pulumi.Input<string>;
    /**
     * Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * endpoint for Era VM (era ip)
     */
    ndbEndpoint?: pulumi.Input<string>;
    ndbPassword?: pulumi.Input<string>;
    ndbUsername?: pulumi.Input<string>;
    /**
     * Password for provided user name.
     */
    password?: pulumi.Input<string>;
    /**
     * Port for Nutanix Prism.
     */
    port?: pulumi.Input<string>;
    proxyUrl?: pulumi.Input<string>;
    /**
     * Use session authentification instead of basic auth for each request
     */
    sessionAuth?: pulumi.Input<boolean>;
    /**
     * User name for Nutanix Prism. Could be
     * local cluster auth (e.g. 'admin') or directory auth.
     */
    username?: pulumi.Input<string>;
    /**
     * Set if you know that the creation o update of a resource may take long time (minutes)
     */
    waitTimeout?: pulumi.Input<number>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
