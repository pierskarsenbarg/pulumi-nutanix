// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a Network Security Policy by ExtID
 */
export function getNetworkSecurityPolicyV2(args: GetNetworkSecurityPolicyV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkSecurityPolicyV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNetworkSecurityPolicyV2:getNetworkSecurityPolicyV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkSecurityPolicyV2.
 */
export interface GetNetworkSecurityPolicyV2Args {
    /**
     * Network security policy UUID.
     */
    extId: string;
}

/**
 * A collection of values returned by getNetworkSecurityPolicyV2.
 */
export interface GetNetworkSecurityPolicyV2Result {
    /**
     * created by.
     */
    readonly createdBy: string;
    /**
     * creation time of NSP
     */
    readonly creationTime: string;
    /**
     * A user defined annotation for a rule.
     */
    readonly description: string;
    /**
     * A globally unique identifier of an instance that is suitable for external consumption.
     */
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * If Hitlog is enabled.
     */
    readonly isHitlogEnabled: boolean;
    /**
     * If Ipv6 Traffic is allowed.
     */
    readonly isIpv6TrafficAllowed: boolean;
    /**
     * Is system defined NSP
     */
    readonly isSystemDefined: boolean;
    /**
     * last updated time
     */
    readonly lastUpdateTime: string;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetNetworkSecurityPolicyV2Link[];
    /**
     * Name of the Flow Network Security Policy.
     */
    readonly name: string;
    /**
     * A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
     */
    readonly rules: outputs.GetNetworkSecurityPolicyV2Rule[];
    /**
     * Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
     */
    readonly scope: string;
    /**
     * Uuids of the secured groups in the NSP.
     */
    readonly securedGroups: string[];
    /**
     * Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it.
     */
    readonly state: string;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    readonly tenantId: string;
    /**
     * Icmp service Type. Ignore this field if Type has to be ANY.
     */
    readonly type: string;
    /**
     * A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
     */
    readonly vpcReferences: string[];
}
/**
 * Get a Network Security Policy by ExtID
 */
export function getNetworkSecurityPolicyV2Output(args: GetNetworkSecurityPolicyV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkSecurityPolicyV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getNetworkSecurityPolicyV2:getNetworkSecurityPolicyV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkSecurityPolicyV2.
 */
export interface GetNetworkSecurityPolicyV2OutputArgs {
    /**
     * Network security policy UUID.
     */
    extId: pulumi.Input<string>;
}
