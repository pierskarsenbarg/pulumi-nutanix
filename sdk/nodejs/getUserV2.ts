// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a datasource to View a User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_user = nutanix.getUserV2({
 *     extId: "d3a3232a-9055-4740-b54f-b21a33524565",
 * });
 * ```
 *
 * ## Argument Reference
 *
 * The following arguments are supported:
 *
 * * `extId`: -(Required) External Identifier of the User.
 */
export function getUserV2(args: GetUserV2Args, opts?: pulumi.InvokeOptions): Promise<GetUserV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getUserV2:getUserV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserV2.
 */
export interface GetUserV2Args {
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId: string;
}

/**
 * A collection of values returned by getUserV2.
 */
export interface GetUserV2Result {
    /**
     * -  Any additional attribute for the User.
     */
    readonly additionalAttributes: outputs.GetUserV2AdditionalAttribute[];
    /**
     * - Bucket Access Keys for the User.
     */
    readonly bucketsAccessKeys: outputs.GetUserV2BucketsAccessKey[];
    /**
     * - User or Service who created the User.
     */
    readonly createdBy: string;
    /**
     * - Creation time for the Bucket Access Key.
     */
    readonly createdTime: string;
    /**
     * - Description of the user.
     */
    readonly description: string;
    /**
     * - Display name for the User.
     */
    readonly displayName: string;
    /**
     * - Email Id for the User.
     */
    readonly emailId: string;
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    readonly extId: string;
    /**
     * - First name for the User.
     */
    readonly firstName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * - Identifier of the IDP for the User.
     */
    readonly idpId: string;
    /**
     * - Flag to force the User to reset password.
     */
    readonly isForceResetPassword: boolean;
    /**
     * - Last successful logged in time for the User.
     */
    readonly lastLoginTime: string;
    /**
     * - Last name for the User.
     */
    readonly lastName: string;
    /**
     * - Last updated time of the User.
     */
    readonly lastUpdatedTime: string;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetUserV2Link[];
    /**
     * - Default locale for the User.
     */
    readonly locale: string;
    /**
     * - Middle name for the User.
     */
    readonly middleInitial: string;
    readonly password: string;
    /**
     * - Default Region for the User.
     */
    readonly region: string;
    /**
     * - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
     */
    readonly status: string;
    /**
     * - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
     * Type of the User.
     */
    readonly userType: string;
    /**
     * - Identifier for the User in the form an email address.
     */
    readonly username: string;
}
/**
 * Provides a datasource to View a User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_user = nutanix.getUserV2({
 *     extId: "d3a3232a-9055-4740-b54f-b21a33524565",
 * });
 * ```
 *
 * ## Argument Reference
 *
 * The following arguments are supported:
 *
 * * `extId`: -(Required) External Identifier of the User.
 */
export function getUserV2Output(args: GetUserV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getUserV2:getUserV2", {
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserV2.
 */
export interface GetUserV2OutputArgs {
    /**
     * - A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId: pulumi.Input<string>;
}
