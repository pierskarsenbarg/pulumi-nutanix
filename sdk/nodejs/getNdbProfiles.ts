// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List profiles in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const profiles = nutanix.getNdbProfiles({});
 * export const profilesList = profiles;
 * ```
 *
 * ## profiles
 *
 * The following attributes are exported for each profile:
 *
 * * `id`: - id of profile
 * * `name`: - profile name
 * * `description`: - description of profile
 * * `status`: - status of profile
 * * `owner`: - owner name
 * * `engineType`: - database engine type
 * * `dbVersion`: - database version
 * * `topology`: - topology
 * * `systemProfile`: - if system profile or not
 * * `assocDbServers`: - associated DB servers
 * * `assocDatabases`: - associated databases
 * * `latestVersion`: - latest version for engine software
 * * `latestVersionId`: - ID of latest version for engine software
 * * `versions`: - profile's different version config
 * * `clusterAvailability`: - list of clusters availability
 * * `nxClusterId`: - era cluster ID
 *
 * See detailed information in [Nutanix Database Service Profiles](https://www.nutanix.dev/api_references/ndb/#/74ae456d63b24-get-all-profiles).
 */
export function getNdbProfiles(args?: GetNdbProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbProfilesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbProfiles:getNdbProfiles", {
        "engine": args.engine,
        "profileType": args.profileType,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbProfiles.
 */
export interface GetNdbProfilesArgs {
    /**
     * Database engine. For eg. postgres_database
     */
    engine?: string;
    /**
     * profile type. Types: Software, Compute, Network and Database_Parameter
     */
    profileType?: string;
}

/**
 * A collection of values returned by getNdbProfiles.
 */
export interface GetNdbProfilesResult {
    readonly engine?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly profileType?: string;
    /**
     * List of profiles
     */
    readonly profiles: outputs.GetNdbProfilesProfile[];
}
/**
 * List profiles in Nutanix Database Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const profiles = nutanix.getNdbProfiles({});
 * export const profilesList = profiles;
 * ```
 *
 * ## profiles
 *
 * The following attributes are exported for each profile:
 *
 * * `id`: - id of profile
 * * `name`: - profile name
 * * `description`: - description of profile
 * * `status`: - status of profile
 * * `owner`: - owner name
 * * `engineType`: - database engine type
 * * `dbVersion`: - database version
 * * `topology`: - topology
 * * `systemProfile`: - if system profile or not
 * * `assocDbServers`: - associated DB servers
 * * `assocDatabases`: - associated databases
 * * `latestVersion`: - latest version for engine software
 * * `latestVersionId`: - ID of latest version for engine software
 * * `versions`: - profile's different version config
 * * `clusterAvailability`: - list of clusters availability
 * * `nxClusterId`: - era cluster ID
 *
 * See detailed information in [Nutanix Database Service Profiles](https://www.nutanix.dev/api_references/ndb/#/74ae456d63b24-get-all-profiles).
 */
export function getNdbProfilesOutput(args?: GetNdbProfilesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNdbProfilesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getNdbProfiles:getNdbProfiles", {
        "engine": args.engine,
        "profileType": args.profileType,
    }, opts);
}

/**
 * A collection of arguments for invoking getNdbProfiles.
 */
export interface GetNdbProfilesOutputArgs {
    /**
     * Database engine. For eg. postgres_database
     */
    engine?: pulumi.Input<string>;
    /**
     * profile type. Types: Software, Compute, Network and Database_Parameter
     */
    profileType?: pulumi.Input<string>;
}
