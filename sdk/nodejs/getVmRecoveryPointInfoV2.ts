// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get a single recovery point  corresponding to the extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const example = nutanix.getVmRecoveryPointInfoV2({
 *     extId: "<vm_recovery_point_uuid>",
 *     recoveryPointExtId: "<recovery_point_uuid>",
 * });
 * ```
 */
export function getVmRecoveryPointInfoV2(args: GetVmRecoveryPointInfoV2Args, opts?: pulumi.InvokeOptions): Promise<GetVmRecoveryPointInfoV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getVmRecoveryPointInfoV2:getVmRecoveryPointInfoV2", {
        "diskRecoveryPoints": args.diskRecoveryPoints,
        "extId": args.extId,
        "recoveryPointExtId": args.recoveryPointExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmRecoveryPointInfoV2.
 */
export interface GetVmRecoveryPointInfoV2Args {
    /**
     * array of disk recovery points.
     */
    diskRecoveryPoints?: inputs.GetVmRecoveryPointInfoV2DiskRecoveryPoint[];
    /**
     * The external identifier that can be used to identify a VM recovery point.
     */
    extId: string;
    recoveryPointExtId: string;
}

/**
 * A collection of values returned by getVmRecoveryPointInfoV2.
 */
export interface GetVmRecoveryPointInfoV2Result {
    /**
     * User-defined application-consistent properties for the recovery point.
     * *
     */
    readonly applicationConsistentProperties: outputs.GetVmRecoveryPointInfoV2ApplicationConsistentProperty[];
    /**
     * External identifier of the Consistency group which the VM was part of at the time of recovery point creation.
     */
    readonly consistencyGroupExtId: string;
    /**
     * array of disk recovery points.
     */
    readonly diskRecoveryPoints: outputs.GetVmRecoveryPointInfoV2DiskRecoveryPoint[];
    /**
     * recovery point UUID
     */
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetVmRecoveryPointInfoV2Link[];
    /**
     * Location agnostic identifier of the Recovery point.
     */
    readonly locationAgnosticId: string;
    readonly recoveryPointExtId: string;
    /**
     * A globally unique identifier that represents the tenant that owns this entity
     */
    readonly tenantId: string;
    /**
     * Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
     */
    readonly vmCategories: string[];
    /**
     * VM external identifier which is captured as a part of this recovery point.
     */
    readonly vmExtId: string;
}
/**
 * Get a single recovery point  corresponding to the extId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pulumi/nutanix";
 *
 * const example = nutanix.getVmRecoveryPointInfoV2({
 *     extId: "<vm_recovery_point_uuid>",
 *     recoveryPointExtId: "<recovery_point_uuid>",
 * });
 * ```
 */
export function getVmRecoveryPointInfoV2Output(args: GetVmRecoveryPointInfoV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVmRecoveryPointInfoV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getVmRecoveryPointInfoV2:getVmRecoveryPointInfoV2", {
        "diskRecoveryPoints": args.diskRecoveryPoints,
        "extId": args.extId,
        "recoveryPointExtId": args.recoveryPointExtId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmRecoveryPointInfoV2.
 */
export interface GetVmRecoveryPointInfoV2OutputArgs {
    /**
     * array of disk recovery points.
     */
    diskRecoveryPoints?: pulumi.Input<pulumi.Input<inputs.GetVmRecoveryPointInfoV2DiskRecoveryPointArgs>[]>;
    /**
     * The external identifier that can be used to identify a VM recovery point.
     */
    extId: pulumi.Input<string>;
    recoveryPointExtId: pulumi.Input<string>;
}
