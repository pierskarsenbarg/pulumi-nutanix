// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Attaches iSCSI initiator to a Volume Group identified by {extId}.
 */
export class VolumeGroupIscsiClientV2 extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroupIscsiClientV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeGroupIscsiClientV2State, opts?: pulumi.CustomResourceOptions): VolumeGroupIscsiClientV2 {
        return new VolumeGroupIscsiClientV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/volumeGroupIscsiClientV2:VolumeGroupIscsiClientV2';

    /**
     * Returns true if the given object is an instance of VolumeGroupIscsiClientV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeGroupIscsiClientV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeGroupIscsiClientV2.__pulumiType;
    }

    /**
     * -(Optional) The site where the Volume Group attach operation should be processed. This is an optional field. This field may only be set if Metro DR has been configured for this Volume Group. Valid values are SECONDARY, PRIMARY.
     */
    declare public readonly attachmentSite: pulumi.Output<string | undefined>;
    /**
     * -(Optional) iSCSI initiator client secret in case of CHAP authentication. This field should not be provided in case the authentication type is not set to CHAP.
     */
    declare public readonly clientSecret: pulumi.Output<string | undefined>;
    /**
     * -(Optional) (Optional) The authentication type enabled for the Volume Group. This is an optional field. If omitted, authentication is not configured for the Volume Group. If this is set to CHAP, the target/client secret must be provided. Valid values are CHAP, NONE
     */
    declare public readonly enabledAuthentications: pulumi.Output<string | undefined>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    declare public readonly extId: pulumi.Output<string>;
    /**
     * -iSCSI initiator name. During the attach operation, exactly one of iscsiInitiatorName and iscsiInitiatorNetworkId must be specified. This field is immutable.
     */
    declare public readonly iscsiInitiatorName: pulumi.Output<string | undefined>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    declare public readonly iscsiInitiatorNetworkIds: pulumi.Output<outputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkId[] | undefined>;
    /**
     * -(Optional) Number of virtual targets generated for the iSCSI target. This field is immutable.
     */
    declare public readonly numVirtualTargets: pulumi.Output<number | undefined>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    declare public readonly vgExtId: pulumi.Output<string>;

    /**
     * Create a VolumeGroupIscsiClientV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupIscsiClientV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeGroupIscsiClientV2Args | VolumeGroupIscsiClientV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeGroupIscsiClientV2State | undefined;
            resourceInputs["attachmentSite"] = state?.attachmentSite;
            resourceInputs["clientSecret"] = state?.clientSecret;
            resourceInputs["enabledAuthentications"] = state?.enabledAuthentications;
            resourceInputs["extId"] = state?.extId;
            resourceInputs["iscsiInitiatorName"] = state?.iscsiInitiatorName;
            resourceInputs["iscsiInitiatorNetworkIds"] = state?.iscsiInitiatorNetworkIds;
            resourceInputs["numVirtualTargets"] = state?.numVirtualTargets;
            resourceInputs["vgExtId"] = state?.vgExtId;
        } else {
            const args = argsOrState as VolumeGroupIscsiClientV2Args | undefined;
            if (args?.vgExtId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vgExtId'");
            }
            resourceInputs["attachmentSite"] = args?.attachmentSite;
            resourceInputs["clientSecret"] = args?.clientSecret;
            resourceInputs["enabledAuthentications"] = args?.enabledAuthentications;
            resourceInputs["extId"] = args?.extId;
            resourceInputs["iscsiInitiatorName"] = args?.iscsiInitiatorName;
            resourceInputs["iscsiInitiatorNetworkIds"] = args?.iscsiInitiatorNetworkIds;
            resourceInputs["numVirtualTargets"] = args?.numVirtualTargets;
            resourceInputs["vgExtId"] = args?.vgExtId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeGroupIscsiClientV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeGroupIscsiClientV2 resources.
 */
export interface VolumeGroupIscsiClientV2State {
    /**
     * -(Optional) The site where the Volume Group attach operation should be processed. This is an optional field. This field may only be set if Metro DR has been configured for this Volume Group. Valid values are SECONDARY, PRIMARY.
     */
    attachmentSite?: pulumi.Input<string>;
    /**
     * -(Optional) iSCSI initiator client secret in case of CHAP authentication. This field should not be provided in case the authentication type is not set to CHAP.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * -(Optional) (Optional) The authentication type enabled for the Volume Group. This is an optional field. If omitted, authentication is not configured for the Volume Group. If this is set to CHAP, the target/client secret must be provided. Valid values are CHAP, NONE
     */
    enabledAuthentications?: pulumi.Input<string>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * -iSCSI initiator name. During the attach operation, exactly one of iscsiInitiatorName and iscsiInitiatorNetworkId must be specified. This field is immutable.
     */
    iscsiInitiatorName?: pulumi.Input<string>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    iscsiInitiatorNetworkIds?: pulumi.Input<pulumi.Input<inputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkId>[]>;
    /**
     * -(Optional) Number of virtual targets generated for the iSCSI target. This field is immutable.
     */
    numVirtualTargets?: pulumi.Input<number>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    vgExtId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VolumeGroupIscsiClientV2 resource.
 */
export interface VolumeGroupIscsiClientV2Args {
    /**
     * -(Optional) The site where the Volume Group attach operation should be processed. This is an optional field. This field may only be set if Metro DR has been configured for this Volume Group. Valid values are SECONDARY, PRIMARY.
     */
    attachmentSite?: pulumi.Input<string>;
    /**
     * -(Optional) iSCSI initiator client secret in case of CHAP authentication. This field should not be provided in case the authentication type is not set to CHAP.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * -(Optional) (Optional) The authentication type enabled for the Volume Group. This is an optional field. If omitted, authentication is not configured for the Volume Group. If this is set to CHAP, the target/client secret must be provided. Valid values are CHAP, NONE
     */
    enabledAuthentications?: pulumi.Input<string>;
    /**
     * -(Required) A globally unique identifier of an instance that is suitable for external consumption.
     */
    extId?: pulumi.Input<string>;
    /**
     * -iSCSI initiator name. During the attach operation, exactly one of iscsiInitiatorName and iscsiInitiatorNetworkId must be specified. This field is immutable.
     */
    iscsiInitiatorName?: pulumi.Input<string>;
    /**
     * - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
     */
    iscsiInitiatorNetworkIds?: pulumi.Input<pulumi.Input<inputs.VolumeGroupIscsiClientV2IscsiInitiatorNetworkId>[]>;
    /**
     * -(Optional) Number of virtual targets generated for the iSCSI target. This field is immutable.
     */
    numVirtualTargets?: pulumi.Input<number>;
    /**
     * -(Required) The external identifier of the volume group.
     */
    vgExtId: pulumi.Input<string>;
}
