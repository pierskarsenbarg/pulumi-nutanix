// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get an Address Group by ExtID
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_addr_group = nutanix.getAddressGroupV2({
 *     extId: "0005b3b0-0b3b-4b3b-8b3b-0b3b3b3b3b3b",
 * });
 * ```
 */
export function getAddressGroupV2(args: GetAddressGroupV2Args, opts?: pulumi.InvokeOptions): Promise<GetAddressGroupV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getAddressGroupV2:getAddressGroupV2", {
        "extId": args.extId,
        "ipv4Addresses": args.ipv4Addresses,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddressGroupV2.
 */
export interface GetAddressGroupV2Args {
    /**
     * Address group UUID.
     */
    extId: string;
    /**
     * List of CIDR blocks in the Address Group.
     */
    ipv4Addresses?: inputs.GetAddressGroupV2Ipv4Address[];
}

/**
 * A collection of values returned by getAddressGroupV2.
 */
export interface GetAddressGroupV2Result {
    /**
     * created by.
     */
    readonly createdBy: string;
    /**
     * A user defined annotation for an Address Group.
     */
    readonly description: string;
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of IP range containing start and end IP
     */
    readonly ipRanges: outputs.GetAddressGroupV2IpRange[];
    /**
     * List of CIDR blocks in the Address Group.
     */
    readonly ipv4Addresses: outputs.GetAddressGroupV2Ipv4Address[];
    /**
     * A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetAddressGroupV2Link[];
    /**
     * A short identifier for an Address Group.
     */
    readonly name: string;
    /**
     * Reference to policy associated with Address Group.
     */
    readonly policyReferences: string[];
    /**
     * A globally unique identifier that represents the tenant that owns this entity.
     */
    readonly tenantId: string;
}
/**
 * Get an Address Group by ExtID
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_addr_group = nutanix.getAddressGroupV2({
 *     extId: "0005b3b0-0b3b-4b3b-8b3b-0b3b3b3b3b3b",
 * });
 * ```
 */
export function getAddressGroupV2Output(args: GetAddressGroupV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAddressGroupV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getAddressGroupV2:getAddressGroupV2", {
        "extId": args.extId,
        "ipv4Addresses": args.ipv4Addresses,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddressGroupV2.
 */
export interface GetAddressGroupV2OutputArgs {
    /**
     * Address group UUID.
     */
    extId: pulumi.Input<string>;
    /**
     * List of CIDR blocks in the Address Group.
     */
    ipv4Addresses?: pulumi.Input<pulumi.Input<inputs.GetAddressGroupV2Ipv4AddressArgs>[]>;
}
