// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Fetches the cluster entity details identified by {extId}.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_cluster = nutanix.getClusterV2({
 *     extId: "c2c249b0-98a0-43fa-9ff6-dcde578d3936",
 * });
 * ```
 */
export function getClusterV2(args: GetClusterV2Args, opts?: pulumi.InvokeOptions): Promise<GetClusterV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getClusterV2:getClusterV2", {
        "expand": args.expand,
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterV2.
 */
export interface GetClusterV2Args {
    /**
     * -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name.
     * The following expansion keys are supported:
     * - "clusterProfile".
     * - "storageSummary".
     */
    expand?: string;
    /**
     * -(Required) Represents clusters uuid
     */
    extId: string;
}

/**
 * A collection of values returned by getClusterV2.
 */
export interface GetClusterV2Result {
    /**
     * -  Score to indicate how much cluster is eligible for storing domain manager backup.
     */
    readonly backupEligibilityScore: number;
    /**
     * -  List of categories associated to the PE cluster.
     */
    readonly categories: string[];
    /**
     * -  Cluster profile UUID.
     */
    readonly clusterProfileExtId: string;
    /**
     * -  Cluster configuration details.
     */
    readonly configs: outputs.GetClusterV2Config[];
    /**
     * -  The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
     */
    readonly containerName: string;
    readonly expand?: string;
    /**
     * -  A globally unique identifier of an instance that is suitable for external consumption.
     */
    readonly extId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * -  Number of inefficient VMs in the cluster.
     */
    readonly inefficientVmCount: number;
    /**
     * - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
     */
    readonly links: outputs.GetClusterV2Link[];
    /**
     * - HTTP Proxy server name configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
     */
    readonly name: string;
    /**
     * -  Network details of a cluster.
     */
    readonly networks: outputs.GetClusterV2Network[];
    /**
     * -  Node reference for a cluster.
     */
    readonly nodes: outputs.GetClusterV2Node[];
    /**
     * -  globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
     */
    readonly tenantId: string;
    /**
     * -  Upgrade status of a cluster.
     * Valid values are:
     * - "CANCELLED"	The cluster upgrade is cancelled.
     * - "FAILED"	The cluster upgrade failed.
     * - "QUEUED"	The cluster upgrade is in the queue.
     * - "SUCCEEDED"	The cluster was upgraded successfully.
     * - "DOWNLOADING" The luster upgrade is downloading.
     * - "PENDING"The cluster upgrade is in pending state.
     * - "UPGRADING" The cluster is in upgrade state.
     * - "PREUPGRADE" The cluster is in pre-upgrade state.
     * - "SCHEDULED" The cluster upgrade is in scheduled state.
     */
    readonly upgradeStatus: string;
    /**
     * -  Number of VMs in the cluster.
     */
    readonly vmCount: number;
}
/**
 * Fetches the cluster entity details identified by {extId}.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nutanix from "@pierskarsenbarg/nutanix";
 *
 * const get_cluster = nutanix.getClusterV2({
 *     extId: "c2c249b0-98a0-43fa-9ff6-dcde578d3936",
 * });
 * ```
 */
export function getClusterV2Output(args: GetClusterV2OutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterV2Result> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nutanix:index/getClusterV2:getClusterV2", {
        "expand": args.expand,
        "extId": args.extId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterV2.
 */
export interface GetClusterV2OutputArgs {
    /**
     * -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name.
     * The following expansion keys are supported:
     * - "clusterProfile".
     * - "storageSummary".
     */
    expand?: pulumi.Input<string>;
    /**
     * -(Required) Represents clusters uuid
     */
    extId: pulumi.Input<string>;
}
