// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetOperationV2
    {
        /// <summary>
        /// Fetches an operation based on the external identifier.
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation = Nutanix.GetOperationV2.Invoke(new()
        ///     {
        ///         ExtId = "&lt;ext-id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOperationV2Result> InvokeAsync(GetOperationV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOperationV2Result>("nutanix:index/getOperationV2:getOperationV2", args ?? new GetOperationV2Args(), options.WithDefaults());

        /// <summary>
        /// Fetches an operation based on the external identifier.
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation = Nutanix.GetOperationV2.Invoke(new()
        ///     {
        ///         ExtId = "&lt;ext-id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOperationV2Result> Invoke(GetOperationV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOperationV2Result>("nutanix:index/getOperationV2:getOperationV2", args ?? new GetOperationV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches an operation based on the external identifier.
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation = Nutanix.GetOperationV2.Invoke(new()
        ///     {
        ///         ExtId = "&lt;ext-id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOperationV2Result> Invoke(GetOperationV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOperationV2Result>("nutanix:index/getOperationV2:getOperationV2", args ?? new GetOperationV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOperationV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ExtId of the Operation.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetOperationV2Args()
        {
        }
        public static new GetOperationV2Args Empty => new GetOperationV2Args();
    }

    public sealed class GetOperationV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ExtId of the Operation.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetOperationV2InvokeArgs()
        {
        }
        public static new GetOperationV2InvokeArgs Empty => new GetOperationV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetOperationV2Result
    {
        /// <summary>
        /// List of associated endpoint objects for the Operation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOperationV2AssociatedEndpointListResult> AssociatedEndpointLists;
        /// <summary>
        /// Client that created the entity.
        /// </summary>
        public readonly string ClientName;
        public readonly string CreatedTime;
        /// <summary>
        /// Permission description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Permission name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Type of entity associated with this Operation.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Permission last updated time.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// The Operation type. Currently we support INTERNAL, EXTERNAL and SYSTEM_DEFINED_ONLY.
        /// </summary>
        public readonly string OperationType;
        /// <summary>
        /// List of related Operations. These are the Operations which might need to be given access to, along with the current Operation, for certain workflows to succeed.
        /// </summary>
        public readonly ImmutableArray<string> RelatedOperationLists;

        [OutputConstructor]
        private GetOperationV2Result(
            ImmutableArray<Outputs.GetOperationV2AssociatedEndpointListResult> associatedEndpointLists,

            string clientName,

            string createdTime,

            string description,

            string displayName,

            string entityType,

            string extId,

            string id,

            string lastUpdatedTime,

            string operationType,

            ImmutableArray<string> relatedOperationLists)
        {
            AssociatedEndpointLists = associatedEndpointLists;
            ClientName = clientName;
            CreatedTime = createdTime;
            Description = description;
            DisplayName = displayName;
            EntityType = entityType;
            ExtId = extId;
            Id = id;
            LastUpdatedTime = lastUpdatedTime;
            OperationType = operationType;
            RelatedOperationLists = relatedOperationLists;
        }
    }
}
