// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Update LCM configuration.
    /// 
    /// ## Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Enable Auto Inventory, Add Auto Inventory Schedule and enable auto upgrade
    ///     var lcm_configuration_update = new Nutanix.LcmConfigV2("lcm-configuration-update", new()
    ///     {
    ///         AutoInventorySchedule = "16:30",
    ///         HasModuleAutoUpgradeEnabled = true,
    ///         IsAutoInventoryEnabled = true,
    ///         XClusterId = "0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b",
    ///     });
    /// 
    ///     // Update the LCM url to darksite server
    ///     var lcm_configuration_update_connectivity_type = new Nutanix.LcmConfigV2("lcm-configuration-update-connectivity-type", new()
    ///     {
    ///         ConnectivityType = "DARKSITE_WEB_SERVER",
    ///         Url = "https://x.x.x.x:8000/builds",
    ///         XClusterId = "0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/lcmConfigV2:LcmConfigV2")]
    public partial class LcmConfigV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when auto_inventory_enabled is set to True. The default schedule time is 03:00(AM).
        /// </summary>
        [Output("autoInventorySchedule")]
        public Output<string?> AutoInventorySchedule { get; private set; } = null!;

        /// <summary>
        /// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
        /// </summary>
        [Output("connectivityType")]
        public Output<string?> ConnectivityType { get; private set; } = null!;

        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
        /// 
        /// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&amp;version=v4.0#tag/Config/operation/updateConfig)
        /// </summary>
        [Output("hasModuleAutoUpgradeEnabled")]
        public Output<bool?> HasModuleAutoUpgradeEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates if the auto inventory operation is enabled. The default value is set to False.
        /// </summary>
        [Output("isAutoInventoryEnabled")]
        public Output<bool?> IsAutoInventoryEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates if the LCM URL has HTTPS enabled. The default value is True.
        /// </summary>
        [Output("isHttpsEnabled")]
        public Output<bool?> IsHttpsEnabled { get; private set; } = null!;

        /// <summary>
        /// URL of the LCM repository.
        /// </summary>
        [Output("url")]
        public Output<string?> Url { get; private set; } = null!;

        /// <summary>
        /// Cluster uuid on which the resource is present or operation is being performed.
        /// </summary>
        [Output("xClusterId")]
        public Output<string?> XClusterId { get; private set; } = null!;


        /// <summary>
        /// Create a LcmConfigV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LcmConfigV2(string name, LcmConfigV2Args? args = null, CustomResourceOptions? options = null)
            : base("nutanix:index/lcmConfigV2:LcmConfigV2", name, args ?? new LcmConfigV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private LcmConfigV2(string name, Input<string> id, LcmConfigV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/lcmConfigV2:LcmConfigV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LcmConfigV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LcmConfigV2 Get(string name, Input<string> id, LcmConfigV2State? state = null, CustomResourceOptions? options = null)
        {
            return new LcmConfigV2(name, id, state, options);
        }
    }

    public sealed class LcmConfigV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when auto_inventory_enabled is set to True. The default schedule time is 03:00(AM).
        /// </summary>
        [Input("autoInventorySchedule")]
        public Input<string>? AutoInventorySchedule { get; set; }

        /// <summary>
        /// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
        /// </summary>
        [Input("connectivityType")]
        public Input<string>? ConnectivityType { get; set; }

        /// <summary>
        /// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
        /// 
        /// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&amp;version=v4.0#tag/Config/operation/updateConfig)
        /// </summary>
        [Input("hasModuleAutoUpgradeEnabled")]
        public Input<bool>? HasModuleAutoUpgradeEnabled { get; set; }

        /// <summary>
        /// Indicates if the auto inventory operation is enabled. The default value is set to False.
        /// </summary>
        [Input("isAutoInventoryEnabled")]
        public Input<bool>? IsAutoInventoryEnabled { get; set; }

        /// <summary>
        /// Indicates if the LCM URL has HTTPS enabled. The default value is True.
        /// </summary>
        [Input("isHttpsEnabled")]
        public Input<bool>? IsHttpsEnabled { get; set; }

        /// <summary>
        /// URL of the LCM repository.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Cluster uuid on which the resource is present or operation is being performed.
        /// </summary>
        [Input("xClusterId")]
        public Input<string>? XClusterId { get; set; }

        public LcmConfigV2Args()
        {
        }
        public static new LcmConfigV2Args Empty => new LcmConfigV2Args();
    }

    public sealed class LcmConfigV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when auto_inventory_enabled is set to True. The default schedule time is 03:00(AM).
        /// </summary>
        [Input("autoInventorySchedule")]
        public Input<string>? AutoInventorySchedule { get; set; }

        /// <summary>
        /// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
        /// </summary>
        [Input("connectivityType")]
        public Input<string>? ConnectivityType { get; set; }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        /// <summary>
        /// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
        /// 
        /// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&amp;version=v4.0#tag/Config/operation/updateConfig)
        /// </summary>
        [Input("hasModuleAutoUpgradeEnabled")]
        public Input<bool>? HasModuleAutoUpgradeEnabled { get; set; }

        /// <summary>
        /// Indicates if the auto inventory operation is enabled. The default value is set to False.
        /// </summary>
        [Input("isAutoInventoryEnabled")]
        public Input<bool>? IsAutoInventoryEnabled { get; set; }

        /// <summary>
        /// Indicates if the LCM URL has HTTPS enabled. The default value is True.
        /// </summary>
        [Input("isHttpsEnabled")]
        public Input<bool>? IsHttpsEnabled { get; set; }

        /// <summary>
        /// URL of the LCM repository.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Cluster uuid on which the resource is present or operation is being performed.
        /// </summary>
        [Input("xClusterId")]
        public Input<string>? XClusterId { get; set; }

        public LcmConfigV2State()
        {
        }
        public static new LcmConfigV2State Empty => new LcmConfigV2State();
    }
}
