// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetPcRestoreSourceV2
    {
        /// <summary>
        /// Retrieves the restore source from the PE cache store and returns the restore source configuration and external identifier to the user.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     //defining nutanix configuration for PE
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Insecure = true,
        ///         Port = "9440",
        ///     });
        /// 
        ///     var restore_source = Nutanix.GetPcRestoreSourceV2.Invoke(new()
        ///     {
        ///         ExtId = "323860ca-bd10-411e-9fe0-1430b62eaf45",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPcRestoreSourceV2Result> InvokeAsync(GetPcRestoreSourceV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPcRestoreSourceV2Result>("nutanix:index/getPcRestoreSourceV2:getPcRestoreSourceV2", args ?? new GetPcRestoreSourceV2Args(), options.WithDefaults());

        /// <summary>
        /// Retrieves the restore source from the PE cache store and returns the restore source configuration and external identifier to the user.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     //defining nutanix configuration for PE
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Insecure = true,
        ///         Port = "9440",
        ///     });
        /// 
        ///     var restore_source = Nutanix.GetPcRestoreSourceV2.Invoke(new()
        ///     {
        ///         ExtId = "323860ca-bd10-411e-9fe0-1430b62eaf45",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPcRestoreSourceV2Result> Invoke(GetPcRestoreSourceV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPcRestoreSourceV2Result>("nutanix:index/getPcRestoreSourceV2:getPcRestoreSourceV2", args ?? new GetPcRestoreSourceV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the restore source from the PE cache store and returns the restore source configuration and external identifier to the user.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     //defining nutanix configuration for PE
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Insecure = true,
        ///         Port = "9440",
        ///     });
        /// 
        ///     var restore_source = Nutanix.GetPcRestoreSourceV2.Invoke(new()
        ///     {
        ///         ExtId = "323860ca-bd10-411e-9fe0-1430b62eaf45",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPcRestoreSourceV2Result> Invoke(GetPcRestoreSourceV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPcRestoreSourceV2Result>("nutanix:index/getPcRestoreSourceV2:getPcRestoreSourceV2", args ?? new GetPcRestoreSourceV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPcRestoreSourceV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetPcRestoreSourceV2Args()
        {
        }
        public static new GetPcRestoreSourceV2Args Empty => new GetPcRestoreSourceV2Args();
    }

    public sealed class GetPcRestoreSourceV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetPcRestoreSourceV2InvokeArgs()
        {
        }
        public static new GetPcRestoreSourceV2InvokeArgs Empty => new GetPcRestoreSourceV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetPcRestoreSourceV2Result
    {
        /// <summary>
        /// - Cluster UUID of a remote cluster.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPcRestoreSourceV2LinkResult> Links;
        /// <summary>
        /// - Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPcRestoreSourceV2LocationResult> Locations;
        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetPcRestoreSourceV2Result(
            string extId,

            string id,

            ImmutableArray<Outputs.GetPcRestoreSourceV2LinkResult> links,

            ImmutableArray<Outputs.GetPcRestoreSourceV2LocationResult> locations,

            string tenantId)
        {
            ExtId = extId;
            Id = id;
            Links = links;
            Locations = locations;
            TenantId = tenantId;
        }
    }
}
