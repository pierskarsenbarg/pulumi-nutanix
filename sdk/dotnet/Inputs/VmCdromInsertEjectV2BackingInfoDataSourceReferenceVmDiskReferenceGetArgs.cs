// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("diskAddresses")]
        private InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceDiskAddressGetArgs>? _diskAddresses;
        public InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceDiskAddressGetArgs> DiskAddresses
        {
            get => _diskAddresses ?? (_diskAddresses = new InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceDiskAddressGetArgs>());
            set => _diskAddresses = value;
        }

        [Input("diskExtId")]
        public Input<string>? DiskExtId { get; set; }

        [Input("vmReferences")]
        private InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceVmReferenceGetArgs>? _vmReferences;
        public InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceVmReferenceGetArgs> VmReferences
        {
            get => _vmReferences ?? (_vmReferences = new InputList<Inputs.VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceVmReferenceGetArgs>());
            set => _vmReferences = value;
        }

        public VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceGetArgs()
        {
        }
        public static new VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceGetArgs Empty => new VmCdromInsertEjectV2BackingInfoDataSourceReferenceVmDiskReferenceGetArgs();
    }
}
