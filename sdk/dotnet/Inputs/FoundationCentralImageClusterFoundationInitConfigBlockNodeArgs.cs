// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP address to be set for the cvm on the node.
        /// </summary>
        [Input("cvmIp")]
        public Input<string>? CvmIp { get; set; }

        /// <summary>
        /// Vlan tag of the cvm, if the cvm is on a vlan.
        /// </summary>
        [Input("cvmVlanId")]
        public Input<int>? CvmVlanId { get; set; }

        [Input("fcImagedNodeUuid")]
        public Input<string>? FcImagedNodeUuid { get; set; }

        [Input("hardwareAttributesOverride")]
        private InputMap<string>? _hardwareAttributesOverride;

        /// <summary>
        /// Hardware attributes override json for the node.
        /// </summary>
        public InputMap<string> HardwareAttributesOverride
        {
            get => _hardwareAttributesOverride ?? (_hardwareAttributesOverride = new InputMap<string>());
            set => _hardwareAttributesOverride = value;
        }

        [Input("hypervisor")]
        public Input<string>? Hypervisor { get; set; }

        /// <summary>
        /// Name to be set for the hypervisor host.
        /// </summary>
        [Input("hypervisorHostname")]
        public Input<string>? HypervisorHostname { get; set; }

        /// <summary>
        /// IP address to be set for the hypervisor on the node.
        /// </summary>
        [Input("hypervisorIp")]
        public Input<string>? HypervisorIp { get; set; }

        /// <summary>
        /// True, if the node should be imaged, False, otherwise.
        /// </summary>
        [Input("imageNow")]
        public Input<bool>? ImageNow { get; set; }

        /// <summary>
        /// IP address to be set for the ipmi of the node.
        /// </summary>
        [Input("ipmiIp")]
        public Input<string>? IpmiIp { get; set; }

        [Input("ipv6Address")]
        public Input<string>? Ipv6Address { get; set; }

        [Input("nodePosition")]
        public Input<string>? NodePosition { get; set; }

        [Input("nodeSerial")]
        public Input<string>? NodeSerial { get; set; }

        public FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs()
        {
        }
        public static new FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs Empty => new FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs();
    }
}
