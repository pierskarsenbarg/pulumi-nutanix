// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class ClusterV2ConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("authorizedPublicKeyLists")]
        private InputList<Inputs.ClusterV2ConfigAuthorizedPublicKeyListArgs>? _authorizedPublicKeyLists;

        /// <summary>
        /// - (Optional) Public ssh key details. This is part of payload for cluster update operation only.
        /// </summary>
        public InputList<Inputs.ClusterV2ConfigAuthorizedPublicKeyListArgs> AuthorizedPublicKeyLists
        {
            get => _authorizedPublicKeyLists ?? (_authorizedPublicKeyLists = new InputList<Inputs.ClusterV2ConfigAuthorizedPublicKeyListArgs>());
            set => _authorizedPublicKeyLists = value;
        }

        [Input("buildInfos")]
        private InputList<Inputs.ClusterV2ConfigBuildInfoArgs>? _buildInfos;

        /// <summary>
        /// - (Optional) Build information details.
        /// </summary>
        public InputList<Inputs.ClusterV2ConfigBuildInfoArgs> BuildInfos
        {
            get => _buildInfos ?? (_buildInfos = new InputList<Inputs.ClusterV2ConfigBuildInfoArgs>());
            set => _buildInfos = value;
        }

        /// <summary>
        /// - (Optional) Cluster arch.
        /// Valid values are:
        /// - "PPC64LE" PPC64LE cluster architecture type.
        /// - "X86_64" X86_64 cluster architecture type.
        /// </summary>
        [Input("clusterArch")]
        public Input<string>? ClusterArch { get; set; }

        [Input("clusterFunctions")]
        private InputList<string>? _clusterFunctions;

        /// <summary>
        /// - (Optional) Cluster function. This is part of payload for cluster
        /// create operation only (allowed enum values for creation are AOS, ONE_NODE &amp; TWO_NODE only).
        /// Valid values are:
        /// - "AOS"
        /// - "PRISM_CENTRAL"
        /// - "CLOUD_DATA_GATEWAY"
        /// - "AFS"
        /// - "ONE_NODE"
        /// - "TWO_NODE"
        /// - "ANALYTICS_PLATFORM"
        /// </summary>
        public InputList<string> ClusterFunctions
        {
            get => _clusterFunctions ?? (_clusterFunctions = new InputList<string>());
            set => _clusterFunctions = value;
        }

        [Input("clusterSoftwareMaps")]
        private InputList<Inputs.ClusterV2ConfigClusterSoftwareMapArgs>? _clusterSoftwareMaps;
        public InputList<Inputs.ClusterV2ConfigClusterSoftwareMapArgs> ClusterSoftwareMaps
        {
            get => _clusterSoftwareMaps ?? (_clusterSoftwareMaps = new InputList<Inputs.ClusterV2ConfigClusterSoftwareMapArgs>());
            set => _clusterSoftwareMaps = value;
        }

        /// <summary>
        /// - (Optional) Encryption in transit Status.
        /// Valid values are:
        /// - "DISABLED"	Disabled encryption status.
        /// - "ENABLED"	Enabled encryption status.
        /// </summary>
        [Input("encryptionInTransitStatus")]
        public Input<string>? EncryptionInTransitStatus { get; set; }

        [Input("encryptionOptions")]
        private InputList<string>? _encryptionOptions;
        public InputList<string> EncryptionOptions
        {
            get => _encryptionOptions ?? (_encryptionOptions = new InputList<string>());
            set => _encryptionOptions = value;
        }

        [Input("encryptionScopes")]
        private InputList<string>? _encryptionScopes;
        public InputList<string> EncryptionScopes
        {
            get => _encryptionScopes ?? (_encryptionScopes = new InputList<string>());
            set => _encryptionScopes = value;
        }

        [Input("faultToleranceStates")]
        private InputList<Inputs.ClusterV2ConfigFaultToleranceStateArgs>? _faultToleranceStates;

        /// <summary>
        /// - (Optional) Fault tolerant state of cluster.
        /// </summary>
        public InputList<Inputs.ClusterV2ConfigFaultToleranceStateArgs> FaultToleranceStates
        {
            get => _faultToleranceStates ?? (_faultToleranceStates = new InputList<Inputs.ClusterV2ConfigFaultToleranceStateArgs>());
            set => _faultToleranceStates = value;
        }

        [Input("hypervisorTypes")]
        private InputList<string>? _hypervisorTypes;
        public InputList<string> HypervisorTypes
        {
            get => _hypervisorTypes ?? (_hypervisorTypes = new InputList<string>());
            set => _hypervisorTypes = value;
        }

        [Input("incarnationId")]
        public Input<int>? IncarnationId { get; set; }

        [Input("isAvailable")]
        public Input<bool>? IsAvailable { get; set; }

        [Input("isLts")]
        public Input<bool>? IsLts { get; set; }

        [Input("isPasswordRemoteLoginEnabled")]
        public Input<bool>? IsPasswordRemoteLoginEnabled { get; set; }

        [Input("isRemoteSupportEnabled")]
        public Input<bool>? IsRemoteSupportEnabled { get; set; }

        /// <summary>
        /// - (Optional) Cluster operation mode. This is part of payload for cluster
        /// update operation only.
        /// Valid values are:
        /// - "OVERRIDE"	Override operation mode.
        /// - "STAND_ALONE"	Stand-alone operation mode.
        /// - "SWITCH_TO_TWO_NODE"	Switch to two-node operation mode.
        /// - "NORMAL"	Normal operation mode.
        /// - "READ_ONLY"	Read-only operation mode.
        /// </summary>
        [Input("operationMode")]
        public Input<string>? OperationMode { get; set; }

        [Input("pulseStatuses")]
        private InputList<Inputs.ClusterV2ConfigPulseStatusArgs>? _pulseStatuses;

        /// <summary>
        /// - (Optional) Pulse status for a cluster. `supported only for update operations and not available during creation.`
        /// </summary>
        public InputList<Inputs.ClusterV2ConfigPulseStatusArgs> PulseStatuses
        {
            get => _pulseStatuses ?? (_pulseStatuses = new InputList<Inputs.ClusterV2ConfigPulseStatusArgs>());
            set => _pulseStatuses = value;
        }

        /// <summary>
        /// - (Optional) Redundancy factor of a cluster. This is part of payload for both cluster create &amp; update operations.
        /// </summary>
        [Input("redundancyFactor")]
        public Input<int>? RedundancyFactor { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public ClusterV2ConfigArgs()
        {
        }
        public static new ClusterV2ConfigArgs Empty => new ClusterV2ConfigArgs();
    }
}
