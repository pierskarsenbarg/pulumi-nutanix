// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class VolumeGroupV2DiskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - Volume Disk description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("diskDataSourceReferences", required: true)]
        private InputList<Inputs.VolumeGroupV2DiskDiskDataSourceReferenceGetArgs>? _diskDataSourceReferences;

        /// <summary>
        /// -(Required) Disk Data Source Reference.
        /// </summary>
        public InputList<Inputs.VolumeGroupV2DiskDiskDataSourceReferenceGetArgs> DiskDataSourceReferences
        {
            get => _diskDataSourceReferences ?? (_diskDataSourceReferences = new InputList<Inputs.VolumeGroupV2DiskDiskDataSourceReferenceGetArgs>());
            set => _diskDataSourceReferences = value;
        }

        /// <summary>
        /// - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
        /// </summary>
        [Input("diskSizeBytes", required: true)]
        public Input<int> DiskSizeBytes { get; set; } = null!;

        [Input("diskStorageFeatures")]
        private InputList<Inputs.VolumeGroupV2DiskDiskStorageFeatureGetArgs>? _diskStorageFeatures;

        /// <summary>
        /// - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
        /// </summary>
        public InputList<Inputs.VolumeGroupV2DiskDiskStorageFeatureGetArgs> DiskStorageFeatures
        {
            get => _diskStorageFeatures ?? (_diskStorageFeatures = new InputList<Inputs.VolumeGroupV2DiskDiskStorageFeatureGetArgs>());
            set => _diskStorageFeatures = value;
        }

        /// <summary>
        /// - Index of the disk in a Volume Group. This field is optional and immutable.
        /// </summary>
        [Input("index")]
        public Input<int>? Index { get; set; }

        public VolumeGroupV2DiskGetArgs()
        {
        }
        public static new VolumeGroupV2DiskGetArgs Empty => new VolumeGroupV2DiskGetArgs();
    }
}
