// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class NdbClonePostgresqlInfoArgs : global::Pulumi.ResourceArgs
    {
        [Input("dbPassword", required: true)]
        private Input<string>? _dbPassword;

        /// <summary>
        /// password of the postgres superuser.
        /// </summary>
        public Input<string>? DbPassword
        {
            get => _dbPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dbPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// description for the dbserver.
        /// </summary>
        [Input("dbserverDescription")]
        public Input<string>? DbserverDescription { get; set; }

        /// <summary>
        /// OS command that you want to run after the instance is created.
        /// </summary>
        [Input("postCloneCmd")]
        public Input<string>? PostCloneCmd { get; set; }

        /// <summary>
        /// OS command that you want to run before the instance is created.
        /// </summary>
        [Input("preCloneCmd")]
        public Input<string>? PreCloneCmd { get; set; }

        /// <summary>
        /// name for the database server VM.
        /// </summary>
        [Input("vmName", required: true)]
        public Input<string> VmName { get; set; } = null!;

        public NdbClonePostgresqlInfoArgs()
        {
        }
        public static new NdbClonePostgresqlInfoArgs Empty => new NdbClonePostgresqlInfoArgs();
    }
}
