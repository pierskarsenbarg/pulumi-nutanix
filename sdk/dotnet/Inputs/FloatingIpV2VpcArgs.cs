// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class FloatingIpV2VpcArgs : global::Pulumi.ResourceArgs
    {
        [Input("commonDhcpOptions")]
        private InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionArgs>? _commonDhcpOptions;
        public InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionArgs> CommonDhcpOptions
        {
            get => _commonDhcpOptions ?? (_commonDhcpOptions = new InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionArgs>());
            set => _commonDhcpOptions = value;
        }

        /// <summary>
        /// Description for the Floating IP.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("externalRoutingDomainReference")]
        public Input<string>? ExternalRoutingDomainReference { get; set; }

        [Input("externalSubnets")]
        private InputList<Inputs.FloatingIpV2VpcExternalSubnetArgs>? _externalSubnets;
        public InputList<Inputs.FloatingIpV2VpcExternalSubnetArgs> ExternalSubnets
        {
            get => _externalSubnets ?? (_externalSubnets = new InputList<Inputs.FloatingIpV2VpcExternalSubnetArgs>());
            set => _externalSubnets = value;
        }

        [Input("externallyRoutablePrefixes")]
        private InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixArgs>? _externallyRoutablePrefixes;
        public InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixArgs> ExternallyRoutablePrefixes
        {
            get => _externallyRoutablePrefixes ?? (_externallyRoutablePrefixes = new InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixArgs>());
            set => _externallyRoutablePrefixes = value;
        }

        [Input("links")]
        private InputList<Inputs.FloatingIpV2VpcLinkArgs>? _links;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.FloatingIpV2VpcLinkArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.FloatingIpV2VpcLinkArgs>());
            set => _links = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.FloatingIpV2VpcMetadataArgs>? _metadatas;

        /// <summary>
        /// Metadata associated with this resource.
        /// </summary>
        public InputList<Inputs.FloatingIpV2VpcMetadataArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.FloatingIpV2VpcMetadataArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// Name of the floating IP.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("snatIps")]
        private InputList<Inputs.FloatingIpV2VpcSnatIpArgs>? _snatIps;
        public InputList<Inputs.FloatingIpV2VpcSnatIpArgs> SnatIps
        {
            get => _snatIps ?? (_snatIps = new InputList<Inputs.FloatingIpV2VpcSnatIpArgs>());
            set => _snatIps = value;
        }

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("vpcType")]
        public Input<string>? VpcType { get; set; }

        public FloatingIpV2VpcArgs()
        {
        }
        public static new FloatingIpV2VpcArgs Empty => new FloatingIpV2VpcArgs();
    }
}
