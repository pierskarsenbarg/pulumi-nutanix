// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class RecoveryPointsV2VolumeGroupRecoveryPointGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
        /// </summary>
        [Input("consistencyGroupExtId")]
        public Input<string>? ConsistencyGroupExtId { get; set; }

        [Input("diskRecoveryPoints")]
        private InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointGetArgs>? _diskRecoveryPoints;

        /// <summary>
        /// array of disk recovery points.
        /// </summary>
        public InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointGetArgs> DiskRecoveryPoints
        {
            get => _diskRecoveryPoints ?? (_diskRecoveryPoints = new InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointGetArgs>());
            set => _diskRecoveryPoints = value;
        }

        /// <summary>
        /// recovery point UUID
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("links")]
        private InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointLinkGetArgs>? _links;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.RecoveryPointsV2VolumeGroupRecoveryPointLinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
        /// </summary>
        [Input("locationAgnosticId")]
        public Input<string>? LocationAgnosticId { get; set; }

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("volumeGroupCategories")]
        private InputList<string>? _volumeGroupCategories;

        /// <summary>
        /// Category key-value pairs associated with the volume group at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
        /// </summary>
        public InputList<string> VolumeGroupCategories
        {
            get => _volumeGroupCategories ?? (_volumeGroupCategories = new InputList<string>());
            set => _volumeGroupCategories = value;
        }

        /// <summary>
        /// Volume Group external identifier which is captured as part of this recovery point.
        /// </summary>
        [Input("volumeGroupExtId", required: true)]
        public Input<string> VolumeGroupExtId { get; set; } = null!;

        public RecoveryPointsV2VolumeGroupRecoveryPointGetArgs()
        {
        }
        public static new RecoveryPointsV2VolumeGroupRecoveryPointGetArgs Empty => new RecoveryPointsV2VolumeGroupRecoveryPointGetArgs();
    }
}
