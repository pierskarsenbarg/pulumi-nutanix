// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class FloatingIpV2VpcGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("commonDhcpOptions")]
        private InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionGetArgs>? _commonDhcpOptions;
        public InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionGetArgs> CommonDhcpOptions
        {
            get => _commonDhcpOptions ?? (_commonDhcpOptions = new InputList<Inputs.FloatingIpV2VpcCommonDhcpOptionGetArgs>());
            set => _commonDhcpOptions = value;
        }

        /// <summary>
        /// Description for the Floating IP.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("externalRoutingDomainReference")]
        public Input<string>? ExternalRoutingDomainReference { get; set; }

        [Input("externalSubnets")]
        private InputList<Inputs.FloatingIpV2VpcExternalSubnetGetArgs>? _externalSubnets;
        public InputList<Inputs.FloatingIpV2VpcExternalSubnetGetArgs> ExternalSubnets
        {
            get => _externalSubnets ?? (_externalSubnets = new InputList<Inputs.FloatingIpV2VpcExternalSubnetGetArgs>());
            set => _externalSubnets = value;
        }

        [Input("externallyRoutablePrefixes")]
        private InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixGetArgs>? _externallyRoutablePrefixes;
        public InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixGetArgs> ExternallyRoutablePrefixes
        {
            get => _externallyRoutablePrefixes ?? (_externallyRoutablePrefixes = new InputList<Inputs.FloatingIpV2VpcExternallyRoutablePrefixGetArgs>());
            set => _externallyRoutablePrefixes = value;
        }

        [Input("links")]
        private InputList<Inputs.FloatingIpV2VpcLinkGetArgs>? _links;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.FloatingIpV2VpcLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.FloatingIpV2VpcLinkGetArgs>());
            set => _links = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.FloatingIpV2VpcMetadataGetArgs>? _metadatas;

        /// <summary>
        /// Metadata associated with this resource.
        /// </summary>
        public InputList<Inputs.FloatingIpV2VpcMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.FloatingIpV2VpcMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// Name of the floating IP.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("snatIps")]
        private InputList<Inputs.FloatingIpV2VpcSnatIpGetArgs>? _snatIps;
        public InputList<Inputs.FloatingIpV2VpcSnatIpGetArgs> SnatIps
        {
            get => _snatIps ?? (_snatIps = new InputList<Inputs.FloatingIpV2VpcSnatIpGetArgs>());
            set => _snatIps = value;
        }

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("vpcType")]
        public Input<string>? VpcType { get; set; }

        public FloatingIpV2VpcGetArgs()
        {
        }
        public static new FloatingIpV2VpcGetArgs Empty => new FloatingIpV2VpcGetArgs();
    }
}
