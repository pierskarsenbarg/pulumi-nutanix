// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class NdbRegisterDatabaseDatabaseNodeArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessLevel")]
        private InputMap<string>? _accessLevel;
        public InputMap<string> AccessLevel
        {
            get => _accessLevel ?? (_accessLevel = new InputMap<string>());
            set => _accessLevel = value;
        }

        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// status of database
        /// </summary>
        [Input("databaseStatus")]
        public Input<string>? DatabaseStatus { get; set; }

        /// <summary>
        /// date created for db instance
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// date modified for instance
        /// </summary>
        [Input("dateModified")]
        public Input<string>? DateModified { get; set; }

        [Input("dbserver")]
        private InputMap<string>? _dbserver;
        public InputMap<string> Dbserver
        {
            get => _dbserver ?? (_dbserver = new InputMap<string>());
            set => _dbserver = value;
        }

        [Input("dbserverId")]
        public Input<string>? DbserverId { get; set; }

        /// <summary>
        /// description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("infos")]
        private InputList<Inputs.NdbRegisterDatabaseDatabaseNodeInfoArgs>? _infos;

        /// <summary>
        /// info of instance
        /// </summary>
        public InputList<Inputs.NdbRegisterDatabaseDatabaseNodeInfoArgs> Infos
        {
            get => _infos ?? (_infos = new InputList<Inputs.NdbRegisterDatabaseDatabaseNodeInfoArgs>());
            set => _infos = value;
        }

        /// <summary>
        /// Name of database instance
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("primary")]
        public Input<bool>? Primary { get; set; }

        [Input("properties")]
        private InputList<Inputs.NdbRegisterDatabaseDatabaseNodePropertyArgs>? _properties;

        /// <summary>
        /// properties of database created
        /// </summary>
        public InputList<Inputs.NdbRegisterDatabaseDatabaseNodePropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.NdbRegisterDatabaseDatabaseNodePropertyArgs>());
            set => _properties = value;
        }

        [Input("protectionDomainId")]
        public Input<string>? ProtectionDomainId { get; set; }

        [Input("protectionDomains")]
        private InputList<Inputs.NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs>? _protectionDomains;
        public InputList<Inputs.NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs> ProtectionDomains
        {
            get => _protectionDomains ?? (_protectionDomains = new InputList<Inputs.NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs>());
            set => _protectionDomains = value;
        }

        [Input("softwareInstallationId")]
        public Input<string>? SoftwareInstallationId { get; set; }

        /// <summary>
        /// status of instance
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.NdbRegisterDatabaseDatabaseNodeTagArgs>? _tags;

        /// <summary>
        /// tags
        /// </summary>
        public InputList<Inputs.NdbRegisterDatabaseDatabaseNodeTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.NdbRegisterDatabaseDatabaseNodeTagArgs>());
            set => _tags = value;
        }

        public NdbRegisterDatabaseDatabaseNodeArgs()
        {
        }
        public static new NdbRegisterDatabaseDatabaseNodeArgs Empty => new NdbRegisterDatabaseDatabaseNodeArgs();
    }
}
