// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class VpcV2ExternalSubnetArgs : global::Pulumi.ResourceArgs
    {
        [Input("activeGatewayCount")]
        public Input<int>? ActiveGatewayCount { get; set; }

        [Input("activeGatewayNodes")]
        private InputList<Inputs.VpcV2ExternalSubnetActiveGatewayNodeArgs>? _activeGatewayNodes;
        public InputList<Inputs.VpcV2ExternalSubnetActiveGatewayNodeArgs> ActiveGatewayNodes
        {
            get => _activeGatewayNodes ?? (_activeGatewayNodes = new InputList<Inputs.VpcV2ExternalSubnetActiveGatewayNodeArgs>());
            set => _activeGatewayNodes = value;
        }

        [Input("externalIps")]
        private InputList<Inputs.VpcV2ExternalSubnetExternalIpArgs>? _externalIps;

        /// <summary>
        /// List of IP Addresses used for SNAT, if NAT is enabled on the external subnet. If NAT is not enabled, this specifies the IP address of the VPC port connected to the external gateway.
        /// </summary>
        public InputList<Inputs.VpcV2ExternalSubnetExternalIpArgs> ExternalIps
        {
            get => _externalIps ?? (_externalIps = new InputList<Inputs.VpcV2ExternalSubnetExternalIpArgs>());
            set => _externalIps = value;
        }

        [Input("gatewayNodes")]
        private InputList<string>? _gatewayNodes;
        public InputList<string> GatewayNodes
        {
            get => _gatewayNodes ?? (_gatewayNodes = new InputList<string>());
            set => _gatewayNodes = value;
        }

        /// <summary>
        /// External subnet reference.
        /// </summary>
        [Input("subnetReference", required: true)]
        public Input<string> SubnetReference { get; set; } = null!;

        public VpcV2ExternalSubnetArgs()
        {
        }
        public static new VpcV2ExternalSubnetArgs Empty => new VpcV2ExternalSubnetArgs();
    }
}
