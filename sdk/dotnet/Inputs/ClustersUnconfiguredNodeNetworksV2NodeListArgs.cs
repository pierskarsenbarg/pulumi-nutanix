// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class ClustersUnconfiguredNodeNetworksV2NodeListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -(Optional) Block ID.
        /// </summary>
        [Input("blockId")]
        public Input<string>? BlockId { get; set; }

        /// <summary>
        /// -(Optional) Current network interface.
        /// </summary>
        [Input("currentNetworkInterface")]
        public Input<string>? CurrentNetworkInterface { get; set; }

        [Input("cvmIps")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIpArgs>? _cvmIps;

        /// <summary>
        /// -(Optional) CVM IP.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIpArgs> CvmIps
        {
            get => _cvmIps ?? (_cvmIps = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListCvmIpArgs>());
            set => _cvmIps = value;
        }

        [Input("digitalCertificateMapLists")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListDigitalCertificateMapListArgs>? _digitalCertificateMapLists;

        /// <summary>
        /// -(Optional) Digital certificate map list.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListDigitalCertificateMapListArgs> DigitalCertificateMapLists
        {
            get => _digitalCertificateMapLists ?? (_digitalCertificateMapLists = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListDigitalCertificateMapListArgs>());
            set => _digitalCertificateMapLists = value;
        }

        [Input("hypervisorIps")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpArgs>? _hypervisorIps;

        /// <summary>
        /// -(Optional) Hypervisor IP.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpArgs> HypervisorIps
        {
            get => _hypervisorIps ?? (_hypervisorIps = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListHypervisorIpArgs>());
            set => _hypervisorIps = value;
        }

        /// <summary>
        /// -(Optional) Hypervisor type.
        /// </summary>
        [Input("hypervisorType")]
        public Input<string>? HypervisorType { get; set; }

        /// <summary>
        /// -(Optional) Hypervisor version.
        /// </summary>
        [Input("hypervisorVersion")]
        public Input<string>? HypervisorVersion { get; set; }

        [Input("ipmiIps")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpArgs>? _ipmiIps;

        /// <summary>
        /// -(Optional) IPMI IP.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpArgs> IpmiIps
        {
            get => _ipmiIps ?? (_ipmiIps = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListIpmiIpArgs>());
            set => _ipmiIps = value;
        }

        /// <summary>
        /// -(Optional) Is compute only.
        /// </summary>
        [Input("isComputeOnly")]
        public Input<bool>? IsComputeOnly { get; set; }

        [Input("isLightCompute")]
        public Input<bool>? IsLightCompute { get; set; }

        /// <summary>
        /// -(Optional) Is ROBO mixed hypervisor.
        /// </summary>
        [Input("isRoboMixedHypervisor")]
        public Input<bool>? IsRoboMixedHypervisor { get; set; }

        /// <summary>
        /// -(Optional) Model name.
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// -(Optional) Node position.
        /// </summary>
        [Input("nodePosition")]
        public Input<string>? NodePosition { get; set; }

        /// <summary>
        /// -(Optional) Node UUID.
        /// </summary>
        [Input("nodeUuid")]
        public Input<string>? NodeUuid { get; set; }

        /// <summary>
        /// -(Optional) NOS version.
        /// </summary>
        [Input("nosVersion")]
        public Input<string>? NosVersion { get; set; }

        public ClustersUnconfiguredNodeNetworksV2NodeListArgs()
        {
        }
        public static new ClustersUnconfiguredNodeNetworksV2NodeListArgs Empty => new ClustersUnconfiguredNodeNetworksV2NodeListArgs();
    }
}
