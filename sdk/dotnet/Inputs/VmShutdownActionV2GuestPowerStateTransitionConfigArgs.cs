// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class VmShutdownActionV2GuestPowerStateTransitionConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to run the set script before the VM shutdowns/restarts.
        /// </summary>
        [Input("shouldEnableScriptExec")]
        public Input<bool>? ShouldEnableScriptExec { get; set; }

        /// <summary>
        /// Indicates whether to abort VM shutdown/restart if the script fails.
        /// 
        /// 
        /// See detailed information in [Nutanix VMs Power Action Shutdown V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/shutdownVm).
        /// See detailed information in [Nutanix VMs Power Action Shutdown Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/shutdownGuestVm).
        /// See detailed information in [Nutanix VMs Power Action Reboot V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/rebootVm).
        /// See detailed information in [Nutanix VMs Power Action Reboot Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/rebootGuestVm).
        /// </summary>
        [Input("shouldFailOnScriptFailure")]
        public Input<bool>? ShouldFailOnScriptFailure { get; set; }

        public VmShutdownActionV2GuestPowerStateTransitionConfigArgs()
        {
        }
        public static new VmShutdownActionV2GuestPowerStateTransitionConfigArgs Empty => new VmShutdownActionV2GuestPowerStateTransitionConfigArgs();
    }
}
