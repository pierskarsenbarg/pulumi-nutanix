// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Inputs
{

    public sealed class FoundationCentralImageClusterFoundationInitConfigClusterGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// External management ip of the cluster.
        /// </summary>
        [Input("clusterExternalIp")]
        public Input<string>? ClusterExternalIp { get; set; }

        [Input("clusterInitNow")]
        public Input<bool>? ClusterInitNow { get; set; }

        [Input("clusterInitSuccessful")]
        public Input<bool>? ClusterInitSuccessful { get; set; }

        [Input("clusterMembers")]
        private InputList<string>? _clusterMembers;
        public InputList<string> ClusterMembers
        {
            get => _clusterMembers ?? (_clusterMembers = new InputList<string>());
            set => _clusterMembers = value;
        }

        /// <summary>
        /// Name of the cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("cvmDnsServers")]
        public Input<string>? CvmDnsServers { get; set; }

        [Input("cvmNtpServers")]
        public Input<string>? CvmNtpServers { get; set; }

        /// <summary>
        /// Redundancy factor of the cluster.
        /// </summary>
        [Input("redundancyFactor")]
        public Input<int>? RedundancyFactor { get; set; }

        /// <summary>
        /// Timezone to be set on the cluster.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public FoundationCentralImageClusterFoundationInitConfigClusterGetArgs()
        {
        }
        public static new FoundationCentralImageClusterFoundationInitConfigClusterGetArgs Empty => new FoundationCentralImageClusterFoundationInitConfigClusterGetArgs();
    }
}
