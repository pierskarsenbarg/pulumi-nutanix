// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetHostsV2
    {
        /// <summary>
        /// Describes the Lists of all host entities across clusters registered to Prism Central.
        /// </summary>
        public static Task<GetHostsV2Result> InvokeAsync(GetHostsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostsV2Result>("nutanix:index/getHostsV2:getHostsV2", args ?? new GetHostsV2Args(), options.WithDefaults());

        /// <summary>
        /// Describes the Lists of all host entities across clusters registered to Prism Central.
        /// </summary>
        public static Output<GetHostsV2Result> Invoke(GetHostsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostsV2Result>("nutanix:index/getHostsV2:getHostsV2", args ?? new GetHostsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Describes the Lists of all host entities across clusters registered to Prism Central.
        /// </summary>
        public static Output<GetHostsV2Result> Invoke(GetHostsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostsV2Result>("nutanix:index/getHostsV2:getHostsV2", args ?? new GetHostsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostsV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName. The groupby can be applied on the following fields:
        /// * `cluster/name`
        /// * `hypervisor/type`
        /// </summary>
        [Input("apply")]
        public string? Apply { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
        /// * `bootTimeUsecs`
        /// * `cluster/name`
        /// * `cluster/uuid`
        /// * `cpuCapacityHz`
        /// * `cpuFrequencyHz`
        /// * `cpuModel`
        /// * `defaultVhdContainerUuid`
        /// * `defaultVhdLocation`
        /// * `defaultVmContainerUuid`
        /// * `defaultVmLocation`
        /// * `extId`
        /// * `gpuDriverVersion`
        /// * `gpuList`
        /// * `hostName`
        /// * `hypervisor/type`
        /// * `memorySizeBytes`
        /// * `numberOfCpuCores`
        /// * `numberOfCpuSockets`
        /// * `numberOfCpuThreads`
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// -(Optional) A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// -(Optional) A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields:
        /// * `blockModel`
        /// * `blockSerial`
        /// * `bootTimeUsecs`
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetHostsV2Args()
        {
        }
        public static new GetHostsV2Args Empty => new GetHostsV2Args();
    }

    public sealed class GetHostsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName. The groupby can be applied on the following fields:
        /// * `cluster/name`
        /// * `hypervisor/type`
        /// </summary>
        [Input("apply")]
        public Input<string>? Apply { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
        /// * `bootTimeUsecs`
        /// * `cluster/name`
        /// * `cluster/uuid`
        /// * `cpuCapacityHz`
        /// * `cpuFrequencyHz`
        /// * `cpuModel`
        /// * `defaultVhdContainerUuid`
        /// * `defaultVhdLocation`
        /// * `defaultVmContainerUuid`
        /// * `defaultVmLocation`
        /// * `extId`
        /// * `gpuDriverVersion`
        /// * `gpuList`
        /// * `hostName`
        /// * `hypervisor/type`
        /// * `memorySizeBytes`
        /// * `numberOfCpuCores`
        /// * `numberOfCpuSockets`
        /// * `numberOfCpuThreads`
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// -(Optional) A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// -(Optional) A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields:
        /// * `blockModel`
        /// * `blockSerial`
        /// * `bootTimeUsecs`
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetHostsV2InvokeArgs()
        {
        }
        public static new GetHostsV2InvokeArgs Empty => new GetHostsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetHostsV2Result
    {
        public readonly string? Apply;
        public readonly string? Filter;
        /// <summary>
        /// - Lists all host entities across clusters registered to Prism Central.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostsV2HostEntityResult> HostEntities;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;

        [OutputConstructor]
        private GetHostsV2Result(
            string? apply,

            string? filter,

            ImmutableArray<Outputs.GetHostsV2HostEntityResult> hostEntities,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string? select)
        {
            Apply = apply;
            Filter = filter;
            HostEntities = hostEntities;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
        }
    }
}
