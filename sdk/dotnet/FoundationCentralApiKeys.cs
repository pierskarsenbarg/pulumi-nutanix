// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides a resource to create a new API key for nodes registration with Foundation Central.
    /// 
    /// ## Example Usage
    /// </summary>
    [NutanixResourceType("nutanix:index/foundationCentralApiKeys:FoundationCentralApiKeys")]
    public partial class FoundationCentralApiKeys : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - (Required) Alias for the api key to be created.
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// Api key in string format.
        /// </summary>
        [Output("apiKey")]
        public Output<string> ApiKey { get; private set; } = null!;

        /// <summary>
        /// Time when the api key was created.
        /// </summary>
        [Output("createdTimestamp")]
        public Output<string> CreatedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Current time of Foundation Central.
        /// </summary>
        [Output("currentTime")]
        public Output<string> CurrentTime { get; private set; } = null!;

        /// <summary>
        /// UUID of the api key.
        /// </summary>
        [Output("keyUuid")]
        public Output<string> KeyUuid { get; private set; } = null!;


        /// <summary>
        /// Create a FoundationCentralApiKeys resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FoundationCentralApiKeys(string name, FoundationCentralApiKeysArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/foundationCentralApiKeys:FoundationCentralApiKeys", name, args ?? new FoundationCentralApiKeysArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FoundationCentralApiKeys(string name, Input<string> id, FoundationCentralApiKeysState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/foundationCentralApiKeys:FoundationCentralApiKeys", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FoundationCentralApiKeys resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FoundationCentralApiKeys Get(string name, Input<string> id, FoundationCentralApiKeysState? state = null, CustomResourceOptions? options = null)
        {
            return new FoundationCentralApiKeys(name, id, state, options);
        }
    }

    public sealed class FoundationCentralApiKeysArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Required) Alias for the api key to be created.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        public FoundationCentralApiKeysArgs()
        {
        }
        public static new FoundationCentralApiKeysArgs Empty => new FoundationCentralApiKeysArgs();
    }

    public sealed class FoundationCentralApiKeysState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Required) Alias for the api key to be created.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// Api key in string format.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// Time when the api key was created.
        /// </summary>
        [Input("createdTimestamp")]
        public Input<string>? CreatedTimestamp { get; set; }

        /// <summary>
        /// Current time of Foundation Central.
        /// </summary>
        [Input("currentTime")]
        public Input<string>? CurrentTime { get; set; }

        /// <summary>
        /// UUID of the api key.
        /// </summary>
        [Input("keyUuid")]
        public Input<string>? KeyUuid { get; set; }

        public FoundationCentralApiKeysState()
        {
        }
        public static new FoundationCentralApiKeysState Empty => new FoundationCentralApiKeysState();
    }
}
