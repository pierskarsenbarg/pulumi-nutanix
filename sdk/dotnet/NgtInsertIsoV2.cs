// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides Nutanix resource toInserts the Nutanix Guest Tools installation and configuration ISO into a virtual machine.
    /// </summary>
    [NutanixResourceType("nutanix:index/ngtInsertIsoV2:NgtInsertIsoV2")]
    public partial class NgtInsertIsoV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Version of Nutanix Guest Tools available on the cluster.
        /// </summary>
        [Output("availableVersion")]
        public Output<string> AvailableVersion { get; private set; } = null!;

        /// <summary>
        /// The list of the application names that are enabled on the guest VM. [`SELF_SERVICE_RESTORE`, `VSS_SNAPSHOT`]
        /// </summary>
        [Output("capablities")]
        public Output<ImmutableArray<string>> Capablities { get; private set; } = null!;

        /// <summary>
        /// uuid of the Virtual Machine.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// Version of the operating system on the VM.
        /// </summary>
        [Output("guestOsVersion")]
        public Output<string> GuestOsVersion { get; private set; } = null!;

        /// <summary>
        /// Indicates that the Nutanix Guest Tools are already installed on the guest VM, and the ISO is being inserted to update the configuration of these tools.
        /// </summary>
        [Output("isConfigOnly")]
        public Output<bool> IsConfigOnly { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Nutanix Guest Tools is enabled or not.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Nutanix Guest Tools is installed on the VM or not.
        /// </summary>
        [Output("isInstalled")]
        public Output<bool> IsInstalled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Nutanix Guest Tools ISO is inserted or not.
        /// </summary>
        [Output("isIsoInserted")]
        public Output<bool> IsIsoInserted { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the communication from VM to CVM is active or not.
        /// </summary>
        [Output("isReachable")]
        public Output<bool> IsReachable { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the VM mobility drivers are installed on the VM or not.
        /// </summary>
        [Output("isVmMobilityDriversInstalled")]
        public Output<bool> IsVmMobilityDriversInstalled { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the VM is configured to take VSS snapshots through NGT or not.
        /// </summary>
        [Output("isVssSnapshotCapable")]
        public Output<bool> IsVssSnapshotCapable { get; private set; } = null!;

        /// <summary>
        /// Version of Nutanix Guest Tools installed on the VM.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a NgtInsertIsoV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NgtInsertIsoV2(string name, NgtInsertIsoV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/ngtInsertIsoV2:NgtInsertIsoV2", name, args ?? new NgtInsertIsoV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private NgtInsertIsoV2(string name, Input<string> id, NgtInsertIsoV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/ngtInsertIsoV2:NgtInsertIsoV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NgtInsertIsoV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NgtInsertIsoV2 Get(string name, Input<string> id, NgtInsertIsoV2State? state = null, CustomResourceOptions? options = null)
        {
            return new NgtInsertIsoV2(name, id, state, options);
        }
    }

    public sealed class NgtInsertIsoV2Args : global::Pulumi.ResourceArgs
    {
        [Input("capablities")]
        private InputList<string>? _capablities;

        /// <summary>
        /// The list of the application names that are enabled on the guest VM. [`SELF_SERVICE_RESTORE`, `VSS_SNAPSHOT`]
        /// </summary>
        public InputList<string> Capablities
        {
            get => _capablities ?? (_capablities = new InputList<string>());
            set => _capablities = value;
        }

        /// <summary>
        /// uuid of the Virtual Machine.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        /// <summary>
        /// Indicates that the Nutanix Guest Tools are already installed on the guest VM, and the ISO is being inserted to update the configuration of these tools.
        /// </summary>
        [Input("isConfigOnly")]
        public Input<bool>? IsConfigOnly { get; set; }

        public NgtInsertIsoV2Args()
        {
        }
        public static new NgtInsertIsoV2Args Empty => new NgtInsertIsoV2Args();
    }

    public sealed class NgtInsertIsoV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Version of Nutanix Guest Tools available on the cluster.
        /// </summary>
        [Input("availableVersion")]
        public Input<string>? AvailableVersion { get; set; }

        [Input("capablities")]
        private InputList<string>? _capablities;

        /// <summary>
        /// The list of the application names that are enabled on the guest VM. [`SELF_SERVICE_RESTORE`, `VSS_SNAPSHOT`]
        /// </summary>
        public InputList<string> Capablities
        {
            get => _capablities ?? (_capablities = new InputList<string>());
            set => _capablities = value;
        }

        /// <summary>
        /// uuid of the Virtual Machine.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        /// <summary>
        /// Version of the operating system on the VM.
        /// </summary>
        [Input("guestOsVersion")]
        public Input<string>? GuestOsVersion { get; set; }

        /// <summary>
        /// Indicates that the Nutanix Guest Tools are already installed on the guest VM, and the ISO is being inserted to update the configuration of these tools.
        /// </summary>
        [Input("isConfigOnly")]
        public Input<bool>? IsConfigOnly { get; set; }

        /// <summary>
        /// Indicates whether Nutanix Guest Tools is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Indicates whether Nutanix Guest Tools is installed on the VM or not.
        /// </summary>
        [Input("isInstalled")]
        public Input<bool>? IsInstalled { get; set; }

        /// <summary>
        /// Indicates whether Nutanix Guest Tools ISO is inserted or not.
        /// </summary>
        [Input("isIsoInserted")]
        public Input<bool>? IsIsoInserted { get; set; }

        /// <summary>
        /// Indicates whether the communication from VM to CVM is active or not.
        /// </summary>
        [Input("isReachable")]
        public Input<bool>? IsReachable { get; set; }

        /// <summary>
        /// Indicates whether the VM mobility drivers are installed on the VM or not.
        /// </summary>
        [Input("isVmMobilityDriversInstalled")]
        public Input<bool>? IsVmMobilityDriversInstalled { get; set; }

        /// <summary>
        /// Indicates whether the VM is configured to take VSS snapshots through NGT or not.
        /// </summary>
        [Input("isVssSnapshotCapable")]
        public Input<bool>? IsVssSnapshotCapable { get; set; }

        /// <summary>
        /// Version of Nutanix Guest Tools installed on the VM.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public NgtInsertIsoV2State()
        {
        }
        public static new NgtInsertIsoV2State Empty => new NgtInsertIsoV2State();
    }
}
