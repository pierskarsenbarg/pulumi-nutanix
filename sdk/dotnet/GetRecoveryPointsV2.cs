// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetRecoveryPointsV2
    {
        /// <summary>
        /// List all the service Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var recoveryPoints = Nutanix.GetRecoveryPointsV2.Invoke();
        /// 
        ///     var example = Nutanix.GetRecoveryPointsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'recovery_point_001'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRecoveryPointsV2Result> InvokeAsync(GetRecoveryPointsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecoveryPointsV2Result>("nutanix:index/getRecoveryPointsV2:getRecoveryPointsV2", args ?? new GetRecoveryPointsV2Args(), options.WithDefaults());

        /// <summary>
        /// List all the service Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var recoveryPoints = Nutanix.GetRecoveryPointsV2.Invoke();
        /// 
        ///     var example = Nutanix.GetRecoveryPointsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'recovery_point_001'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRecoveryPointsV2Result> Invoke(GetRecoveryPointsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecoveryPointsV2Result>("nutanix:index/getRecoveryPointsV2:getRecoveryPointsV2", args ?? new GetRecoveryPointsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List all the service Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var recoveryPoints = Nutanix.GetRecoveryPointsV2.Invoke();
        /// 
        ///     var example = Nutanix.GetRecoveryPointsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'recovery_point_001'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRecoveryPointsV2Result> Invoke(GetRecoveryPointsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecoveryPointsV2Result>("nutanix:index/getRecoveryPointsV2:getRecoveryPointsV2", args ?? new GetRecoveryPointsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecoveryPointsV2Args : global::Pulumi.InvokeArgs
    {
        [Input("apply")]
        public string? Apply { get; set; }

        /// <summary>
        /// Cluster type from which recovery points must be fetched.
        /// * supported values:
        /// * `AOS` (Default)
        /// * `MST`
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// * The filter can be applied to the following fields:
        /// * `creationTime`
        /// * `extId`
        /// * `locationAgnosticId`
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// * The orderby can be applied to the following fields:
        /// * `creationTime`
        /// * `expirationTime`
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
        /// * The select can be applied to the following fields:
        /// * `creationTime`
        /// * `expirationTime`
        /// * `extId`
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetRecoveryPointsV2Args()
        {
        }
        public static new GetRecoveryPointsV2Args Empty => new GetRecoveryPointsV2Args();
    }

    public sealed class GetRecoveryPointsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apply")]
        public Input<string>? Apply { get; set; }

        /// <summary>
        /// Cluster type from which recovery points must be fetched.
        /// * supported values:
        /// * `AOS` (Default)
        /// * `MST`
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// * The filter can be applied to the following fields:
        /// * `creationTime`
        /// * `extId`
        /// * `locationAgnosticId`
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// * The orderby can be applied to the following fields:
        /// * `creationTime`
        /// * `expirationTime`
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
        /// * The select can be applied to the following fields:
        /// * `creationTime`
        /// * `expirationTime`
        /// * `extId`
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetRecoveryPointsV2InvokeArgs()
        {
        }
        public static new GetRecoveryPointsV2InvokeArgs Empty => new GetRecoveryPointsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetRecoveryPointsV2Result
    {
        public readonly string? Apply;
        public readonly string? ClusterId;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly ImmutableArray<Outputs.GetRecoveryPointsV2RecoveryPointResult> RecoveryPoints;
        public readonly string? Select;

        [OutputConstructor]
        private GetRecoveryPointsV2Result(
            string? apply,

            string? clusterId,

            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            ImmutableArray<Outputs.GetRecoveryPointsV2RecoveryPointResult> recoveryPoints,

            string? select)
        {
            Apply = apply;
            ClusterId = clusterId;
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            RecoveryPoints = recoveryPoints;
            Select = select;
        }
    }
}
