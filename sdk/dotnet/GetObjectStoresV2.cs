// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetObjectStoresV2
    {
        /// <summary>
        /// Get an Object store for the provided UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var list = Nutanix.GetObjectStoresV2.Invoke();
        /// 
        ///     var filter = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'object_store_example'",
        ///     });
        /// 
        ///     var limit = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetObjectStoresV2Result> InvokeAsync(GetObjectStoresV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectStoresV2Result>("nutanix:index/getObjectStoresV2:getObjectStoresV2", args ?? new GetObjectStoresV2Args(), options.WithDefaults());

        /// <summary>
        /// Get an Object store for the provided UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var list = Nutanix.GetObjectStoresV2.Invoke();
        /// 
        ///     var filter = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'object_store_example'",
        ///     });
        /// 
        ///     var limit = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetObjectStoresV2Result> Invoke(GetObjectStoresV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStoresV2Result>("nutanix:index/getObjectStoresV2:getObjectStoresV2", args ?? new GetObjectStoresV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an Object store for the provided UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var list = Nutanix.GetObjectStoresV2.Invoke();
        /// 
        ///     var filter = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Filter = "name eq 'object_store_example'",
        ///     });
        /// 
        ///     var limit = Nutanix.GetObjectStoresV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetObjectStoresV2Result> Invoke(GetObjectStoresV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStoresV2Result>("nutanix:index/getObjectStoresV2:getObjectStoresV2", args ?? new GetObjectStoresV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectStoresV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported:
        /// - certificates
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. The filter can be applied to the following fields:
        /// - certificateExtIds
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkIps/ipv4/value
        /// - publicNetworkIps/ipv6/value
        /// - publicNetworkReference
        /// - region
        /// - storageNetworkDnsIp/ipv4/value
        /// - storageNetworkDnsIp/ipv6/value
        /// - storageNetworkReference
        /// - storageNetworkVip/ipv4/value
        /// - storageNetworkVip/ipv6/value
        /// - totalCapacityGiB
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. Default value is 50.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkReference
        /// - region
        /// - storageNetworkReference
        /// - totalCapacityGiB
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. Default value is 0.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. it can be applied to the following fields:
        /// - certificateExtIds
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkIps
        /// - publicNetworkIps/ipv4/value
        /// - publicNetworkReference
        /// - region
        /// - state
        /// - storageNetworkDnsIp
        /// - storageNetworkDnsIp/ipv4/value
        /// - storageNetworkReference
        /// - storageNetworkVip
        /// - storageNetworkVip/ipv4/value
        /// - totalCapacityGiB
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetObjectStoresV2Args()
        {
        }
        public static new GetObjectStoresV2Args Empty => new GetObjectStoresV2Args();
    }

    public sealed class GetObjectStoresV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported:
        /// - certificates
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. The filter can be applied to the following fields:
        /// - certificateExtIds
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkIps/ipv4/value
        /// - publicNetworkIps/ipv6/value
        /// - publicNetworkReference
        /// - region
        /// - storageNetworkDnsIp/ipv4/value
        /// - storageNetworkDnsIp/ipv6/value
        /// - storageNetworkReference
        /// - storageNetworkVip/ipv4/value
        /// - storageNetworkVip/ipv6/value
        /// - totalCapacityGiB
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. Default value is 50.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkReference
        /// - region
        /// - storageNetworkReference
        /// - totalCapacityGiB
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// -(Optional) A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. Default value is 0.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. it can be applied to the following fields:
        /// - certificateExtIds
        /// - clusterExtId
        /// - creationTime
        /// - deploymentVersion
        /// - description
        /// - domain
        /// - lastUpdateTime
        /// - name
        /// - numWorkerNodes
        /// - publicNetworkIps
        /// - publicNetworkIps/ipv4/value
        /// - publicNetworkReference
        /// - region
        /// - state
        /// - storageNetworkDnsIp
        /// - storageNetworkDnsIp/ipv4/value
        /// - storageNetworkReference
        /// - storageNetworkVip
        /// - storageNetworkVip/ipv4/value
        /// - totalCapacityGiB
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetObjectStoresV2InvokeArgs()
        {
        }
        public static new GetObjectStoresV2InvokeArgs Empty => new GetObjectStoresV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectStoresV2Result
    {
        public readonly string? Expand;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        /// <summary>
        /// - A list of Object stores.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetObjectStoresV2ObjectStoreResult> ObjectStores;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;

        [OutputConstructor]
        private GetObjectStoresV2Result(
            string? expand,

            string? filter,

            string id,

            int? limit,

            ImmutableArray<Outputs.GetObjectStoresV2ObjectStoreResult> objectStores,

            string? orderBy,

            int? page,

            string? select)
        {
            Expand = expand;
            Filter = filter;
            Id = id;
            Limit = limit;
            ObjectStores = objectStores;
            OrderBy = orderBy;
            Page = page;
            Select = select;
        }
    }
}
