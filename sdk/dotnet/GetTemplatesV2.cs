// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetTemplatesV2
    {
        /// <summary>
        /// List Templates with details like name, description, VM configuration, etc. This operation supports filtering, sorting &amp; pagination.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = Nutanix.GetTemplatesV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTemplatesV2Result> InvokeAsync(GetTemplatesV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTemplatesV2Result>("nutanix:index/getTemplatesV2:getTemplatesV2", args ?? new GetTemplatesV2Args(), options.WithDefaults());

        /// <summary>
        /// List Templates with details like name, description, VM configuration, etc. This operation supports filtering, sorting &amp; pagination.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = Nutanix.GetTemplatesV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplatesV2Result> Invoke(GetTemplatesV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplatesV2Result>("nutanix:index/getTemplatesV2:getTemplatesV2", args ?? new GetTemplatesV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List Templates with details like name, description, VM configuration, etc. This operation supports filtering, sorting &amp; pagination.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var templates = Nutanix.GetTemplatesV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplatesV2Result> Invoke(GetTemplatesV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplatesV2Result>("nutanix:index/getTemplatesV2:getTemplatesV2", args ?? new GetTemplatesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTemplatesV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. Default is 0.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        [Input("select")]
        public string? Select { get; set; }

        public GetTemplatesV2Args()
        {
        }
        public static new GetTemplatesV2Args Empty => new GetTemplatesV2Args();
    }

    public sealed class GetTemplatesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. Default is 0.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetTemplatesV2InvokeArgs()
        {
        }
        public static new GetTemplatesV2InvokeArgs Empty => new GetTemplatesV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetTemplatesV2Result
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateResult> Templates;

        [OutputConstructor]
        private GetTemplatesV2Result(
            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string? select,

            ImmutableArray<Outputs.GetTemplatesV2TemplateResult> templates)
        {
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
            Templates = templates;
        }
    }
}
