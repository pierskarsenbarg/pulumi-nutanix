// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetRoutesV2
    {
        /// <summary>
        /// Provides Nutanix resource to List Routes request.
        /// </summary>
        public static Task<GetRoutesV2Result> InvokeAsync(GetRoutesV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutesV2Result>("nutanix:index/getRoutesV2:getRoutesV2", args ?? new GetRoutesV2Args(), options.WithDefaults());

        /// <summary>
        /// Provides Nutanix resource to List Routes request.
        /// </summary>
        public static Output<GetRoutesV2Result> Invoke(GetRoutesV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutesV2Result>("nutanix:index/getRoutesV2:getRoutesV2", args ?? new GetRoutesV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides Nutanix resource to List Routes request.
        /// </summary>
        public static Output<GetRoutesV2Result> Invoke(GetRoutesV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutesV2Result>("nutanix:index/getRoutesV2:getRoutesV2", args ?? new GetRoutesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutesV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// - The filter can be applied to the following fields:
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// - The orderby can be applied to the following fields:
        /// - `isActive`
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// Route table UUID
        /// </summary>
        [Input("routeTableExtId", required: true)]
        public string RouteTableExtId { get; set; } = null!;

        public GetRoutesV2Args()
        {
        }
        public static new GetRoutesV2Args Empty => new GetRoutesV2Args();
    }

    public sealed class GetRoutesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// - The filter can be applied to the following fields:
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// - The orderby can be applied to the following fields:
        /// - `isActive`
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// Route table UUID
        /// </summary>
        [Input("routeTableExtId", required: true)]
        public Input<string> RouteTableExtId { get; set; } = null!;

        public GetRoutesV2InvokeArgs()
        {
        }
        public static new GetRoutesV2InvokeArgs Empty => new GetRoutesV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutesV2Result
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string RouteTableExtId;
        public readonly ImmutableArray<Outputs.GetRoutesV2RouteResult> Routes;

        [OutputConstructor]
        private GetRoutesV2Result(
            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string routeTableExtId,

            ImmutableArray<Outputs.GetRoutesV2RouteResult> routes)
        {
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            RouteTableExtId = routeTableExtId;
            Routes = routes;
        }
    }
}
