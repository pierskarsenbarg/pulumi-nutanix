// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Triggers custom action execution using it's name in Self Service Application.
    /// 
    /// ## Example Usage
    /// 
    /// ### 
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testSelfServiceAppProvision = new Nutanix.SelfServiceAppProvision("testSelfServiceAppProvision", new()
    ///     {
    ///         BpName = "NAME OF BLUEPRINT",
    ///         AppName = "NAME OF APPLICATION",
    ///         AppDescription = "DESCRIPTION OF APPLICATION",
    ///     });
    /// 
    ///     var testSelfServiceAppCustomAction = new Nutanix.SelfServiceAppCustomAction("testSelfServiceAppCustomAction", new()
    ///     {
    ///         AppName = testSelfServiceAppProvision.AppName,
    ///         ActionName = "NAME OF ACTION",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/selfServiceAppCustomAction:SelfServiceAppCustomAction")]
    public partial class SelfServiceAppCustomAction : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - (Required) The name of the action to run.
        /// 
        /// Both (`app_name` and `app_uuid`) are optional. You can provide either of them. But atleast one of them is required to make this resource work.
        /// </summary>
        [Output("actionName")]
        public Output<string> ActionName { get; private set; } = null!;

        /// <summary>
        /// - (Optional) The name of the application.
        /// </summary>
        [Output("appName")]
        public Output<string?> AppName { get; private set; } = null!;

        /// <summary>
        /// - (Optional) The UUID of the application.
        /// </summary>
        [Output("appUuid")]
        public Output<string?> AppUuid { get; private set; } = null!;

        /// <summary>
        /// - (Computed) The UUID of the runlog associated with the execution of the custom action. This can be used to track the progress or status of the action execution.
        /// </summary>
        [Output("runlogUuid")]
        public Output<string> RunlogUuid { get; private set; } = null!;


        /// <summary>
        /// Create a SelfServiceAppCustomAction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SelfServiceAppCustomAction(string name, SelfServiceAppCustomActionArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/selfServiceAppCustomAction:SelfServiceAppCustomAction", name, args ?? new SelfServiceAppCustomActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SelfServiceAppCustomAction(string name, Input<string> id, SelfServiceAppCustomActionState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/selfServiceAppCustomAction:SelfServiceAppCustomAction", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SelfServiceAppCustomAction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SelfServiceAppCustomAction Get(string name, Input<string> id, SelfServiceAppCustomActionState? state = null, CustomResourceOptions? options = null)
        {
            return new SelfServiceAppCustomAction(name, id, state, options);
        }
    }

    public sealed class SelfServiceAppCustomActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Required) The name of the action to run.
        /// 
        /// Both (`app_name` and `app_uuid`) are optional. You can provide either of them. But atleast one of them is required to make this resource work.
        /// </summary>
        [Input("actionName", required: true)]
        public Input<string> ActionName { get; set; } = null!;

        /// <summary>
        /// - (Optional) The name of the application.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the application.
        /// </summary>
        [Input("appUuid")]
        public Input<string>? AppUuid { get; set; }

        /// <summary>
        /// - (Computed) The UUID of the runlog associated with the execution of the custom action. This can be used to track the progress or status of the action execution.
        /// </summary>
        [Input("runlogUuid")]
        public Input<string>? RunlogUuid { get; set; }

        public SelfServiceAppCustomActionArgs()
        {
        }
        public static new SelfServiceAppCustomActionArgs Empty => new SelfServiceAppCustomActionArgs();
    }

    public sealed class SelfServiceAppCustomActionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Required) The name of the action to run.
        /// 
        /// Both (`app_name` and `app_uuid`) are optional. You can provide either of them. But atleast one of them is required to make this resource work.
        /// </summary>
        [Input("actionName")]
        public Input<string>? ActionName { get; set; }

        /// <summary>
        /// - (Optional) The name of the application.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the application.
        /// </summary>
        [Input("appUuid")]
        public Input<string>? AppUuid { get; set; }

        /// <summary>
        /// - (Computed) The UUID of the runlog associated with the execution of the custom action. This can be used to track the progress or status of the action execution.
        /// </summary>
        [Input("runlogUuid")]
        public Input<string>? RunlogUuid { get; set; }

        public SelfServiceAppCustomActionState()
        {
        }
        public static new SelfServiceAppCustomActionState Empty => new SelfServiceAppCustomActionState();
    }
}
