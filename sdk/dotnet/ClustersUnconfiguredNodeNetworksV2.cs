// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Get a dictionary of cluster networks and available uplinks on the given nodes. This API is not supported for XEN hypervisor type.
    /// </summary>
    [NutanixResourceType("nutanix:index/clustersUnconfiguredNodeNetworksV2:ClustersUnconfiguredNodeNetworksV2")]
    public partial class ClustersUnconfiguredNodeNetworksV2 : global::Pulumi.CustomResource
    {
        [Output("expand")]
        public Output<string?> Expand { get; private set; } = null!;

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// -(Required) List of nodes for which the network information is required.
        /// </summary>
        [Output("nodeLists")]
        public Output<ImmutableArray<Outputs.ClustersUnconfiguredNodeNetworksV2NodeList>> NodeLists { get; private set; } = null!;

        [Output("nodesNetworkingDetails")]
        public Output<ImmutableArray<Outputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetail>> NodesNetworkingDetails { get; private set; } = null!;

        /// <summary>
        /// -(Optional) Request type
        /// </summary>
        [Output("requestType")]
        public Output<string> RequestType { get; private set; } = null!;


        /// <summary>
        /// Create a ClustersUnconfiguredNodeNetworksV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClustersUnconfiguredNodeNetworksV2(string name, ClustersUnconfiguredNodeNetworksV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/clustersUnconfiguredNodeNetworksV2:ClustersUnconfiguredNodeNetworksV2", name, args ?? new ClustersUnconfiguredNodeNetworksV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ClustersUnconfiguredNodeNetworksV2(string name, Input<string> id, ClustersUnconfiguredNodeNetworksV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/clustersUnconfiguredNodeNetworksV2:ClustersUnconfiguredNodeNetworksV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClustersUnconfiguredNodeNetworksV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClustersUnconfiguredNodeNetworksV2 Get(string name, Input<string> id, ClustersUnconfiguredNodeNetworksV2State? state = null, CustomResourceOptions? options = null)
        {
            return new ClustersUnconfiguredNodeNetworksV2(name, id, state, options);
        }
    }

    public sealed class ClustersUnconfiguredNodeNetworksV2Args : global::Pulumi.ResourceArgs
    {
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        [Input("nodeLists", required: true)]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListArgs>? _nodeLists;

        /// <summary>
        /// -(Required) List of nodes for which the network information is required.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListArgs> NodeLists
        {
            get => _nodeLists ?? (_nodeLists = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListArgs>());
            set => _nodeLists = value;
        }

        /// <summary>
        /// -(Optional) Request type
        /// </summary>
        [Input("requestType")]
        public Input<string>? RequestType { get; set; }

        public ClustersUnconfiguredNodeNetworksV2Args()
        {
        }
        public static new ClustersUnconfiguredNodeNetworksV2Args Empty => new ClustersUnconfiguredNodeNetworksV2Args();
    }

    public sealed class ClustersUnconfiguredNodeNetworksV2State : global::Pulumi.ResourceArgs
    {
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("nodeLists")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListGetArgs>? _nodeLists;

        /// <summary>
        /// -(Required) List of nodes for which the network information is required.
        /// </summary>
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListGetArgs> NodeLists
        {
            get => _nodeLists ?? (_nodeLists = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodeListGetArgs>());
            set => _nodeLists = value;
        }

        [Input("nodesNetworkingDetails")]
        private InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailGetArgs>? _nodesNetworkingDetails;
        public InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailGetArgs> NodesNetworkingDetails
        {
            get => _nodesNetworkingDetails ?? (_nodesNetworkingDetails = new InputList<Inputs.ClustersUnconfiguredNodeNetworksV2NodesNetworkingDetailGetArgs>());
            set => _nodesNetworkingDetails = value;
        }

        /// <summary>
        /// -(Optional) Request type
        /// </summary>
        [Input("requestType")]
        public Input<string>? RequestType { get; set; }

        public ClustersUnconfiguredNodeNetworksV2State()
        {
        }
        public static new ClustersUnconfiguredNodeNetworksV2State Empty => new ClustersUnconfiguredNodeNetworksV2State();
    }
}
