// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class ClusterV2ConfigFaultToleranceState
    {
        public readonly string? CurrentClusterFaultTolerance;
        public readonly int? CurrentMaxFaultTolerance;
        public readonly string? DesiredClusterFaultTolerance;
        public readonly int? DesiredMaxFaultTolerance;
        /// <summary>
        /// Domain awareness level corresponds to unit of cluster group. This is part of payload for both cluster create &amp; update operations.
        /// Valid values are:
        /// - "RACK"	Rack level awareness.
        /// - "NODE"	Node level awareness.
        /// - "BLOCK"	Block level awareness.
        /// - "DISK"	Disk level awareness.
        /// </summary>
        public readonly string? DomainAwarenessLevel;
        public readonly ImmutableArray<Outputs.ClusterV2ConfigFaultToleranceStateRedundancyStatus> RedundancyStatuses;

        [OutputConstructor]
        private ClusterV2ConfigFaultToleranceState(
            string? currentClusterFaultTolerance,

            int? currentMaxFaultTolerance,

            string? desiredClusterFaultTolerance,

            int? desiredMaxFaultTolerance,

            string? domainAwarenessLevel,

            ImmutableArray<Outputs.ClusterV2ConfigFaultToleranceStateRedundancyStatus> redundancyStatuses)
        {
            CurrentClusterFaultTolerance = currentClusterFaultTolerance;
            CurrentMaxFaultTolerance = currentMaxFaultTolerance;
            DesiredClusterFaultTolerance = desiredClusterFaultTolerance;
            DesiredMaxFaultTolerance = desiredMaxFaultTolerance;
            DomainAwarenessLevel = domainAwarenessLevel;
            RedundancyStatuses = redundancyStatuses;
        }
    }
}
