// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class NdbProfileDatabaseParameterProfilePostgresDatabase
    {
        public readonly string? Autovacuum;
        public readonly string? AutovacuumFreezeMaxAge;
        public readonly string? AutovacuumMaxWorkers;
        public readonly string? AutovacuumVacuumCostDelay;
        public readonly string? AutovacuumVacuumScaleFactor;
        public readonly string? AutovacuumVacuumThreshold;
        public readonly string? AutovacuumWorkMem;
        public readonly string? CheckpointCompletionTarget;
        public readonly string? CheckpointTimeout;
        public readonly string? EffectiveIoConcurrency;
        public readonly string? MaxConnections;
        public readonly string? MaxLocksPerTransaction;
        public readonly string? MaxPreparedTransactions;
        public readonly string? MaxReplicationSlots;
        public readonly string? MaxWalSenders;
        public readonly string? MaxWalSize;
        public readonly string? MaxWorkerProcesses;
        public readonly string? MinWalSize;
        public readonly string? RandomPageCost;
        public readonly string? SynchronousCommit;
        public readonly string? Timezone;
        public readonly string? WalBuffers;
        public readonly string? WalKeepSegments;

        [OutputConstructor]
        private NdbProfileDatabaseParameterProfilePostgresDatabase(
            string? autovacuum,

            string? autovacuumFreezeMaxAge,

            string? autovacuumMaxWorkers,

            string? autovacuumVacuumCostDelay,

            string? autovacuumVacuumScaleFactor,

            string? autovacuumVacuumThreshold,

            string? autovacuumWorkMem,

            string? checkpointCompletionTarget,

            string? checkpointTimeout,

            string? effectiveIoConcurrency,

            string? maxConnections,

            string? maxLocksPerTransaction,

            string? maxPreparedTransactions,

            string? maxReplicationSlots,

            string? maxWalSenders,

            string? maxWalSize,

            string? maxWorkerProcesses,

            string? minWalSize,

            string? randomPageCost,

            string? synchronousCommit,

            string? timezone,

            string? walBuffers,

            string? walKeepSegments)
        {
            Autovacuum = autovacuum;
            AutovacuumFreezeMaxAge = autovacuumFreezeMaxAge;
            AutovacuumMaxWorkers = autovacuumMaxWorkers;
            AutovacuumVacuumCostDelay = autovacuumVacuumCostDelay;
            AutovacuumVacuumScaleFactor = autovacuumVacuumScaleFactor;
            AutovacuumVacuumThreshold = autovacuumVacuumThreshold;
            AutovacuumWorkMem = autovacuumWorkMem;
            CheckpointCompletionTarget = checkpointCompletionTarget;
            CheckpointTimeout = checkpointTimeout;
            EffectiveIoConcurrency = effectiveIoConcurrency;
            MaxConnections = maxConnections;
            MaxLocksPerTransaction = maxLocksPerTransaction;
            MaxPreparedTransactions = maxPreparedTransactions;
            MaxReplicationSlots = maxReplicationSlots;
            MaxWalSenders = maxWalSenders;
            MaxWalSize = maxWalSize;
            MaxWorkerProcesses = maxWorkerProcesses;
            MinWalSize = minWalSize;
            RandomPageCost = randomPageCost;
            SynchronousCommit = synchronousCommit;
            Timezone = timezone;
            WalBuffers = walBuffers;
            WalKeepSegments = walKeepSegments;
        }
    }
}
