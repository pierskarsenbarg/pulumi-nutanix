// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVolumeGroupDisksV2DiskResult
    {
        /// <summary>
        /// - Volume Disk description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// - Disk Data Source Reference.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskDiskDataSourceReferenceResult> DiskDataSourceReferences;
        /// <summary>
        /// - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
        /// </summary>
        public readonly int DiskSizeBytes;
        /// <summary>
        /// - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskDiskStorageFeatureResult> DiskStorageFeatures;
        /// <summary>
        /// - The external identifier of the Data Source Reference.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// - Index of the disk in a Volume Group. This field is optional and immutable.
        /// </summary>
        public readonly int Index;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskLinkResult> Links;
        /// <summary>
        /// - Storage container on which the disk must be created. This is a read-only field.
        /// </summary>
        public readonly string StorageContainerId;
        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetVolumeGroupDisksV2DiskResult(
            string description,

            ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskDiskDataSourceReferenceResult> diskDataSourceReferences,

            int diskSizeBytes,

            ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskDiskStorageFeatureResult> diskStorageFeatures,

            string extId,

            int index,

            ImmutableArray<Outputs.GetVolumeGroupDisksV2DiskLinkResult> links,

            string storageContainerId,

            string tenantId)
        {
            Description = description;
            DiskDataSourceReferences = diskDataSourceReferences;
            DiskSizeBytes = diskSizeBytes;
            DiskStorageFeatures = diskStorageFeatures;
            ExtId = extId;
            Index = index;
            Links = links;
            StorageContainerId = storageContainerId;
            TenantId = tenantId;
        }
    }
}
