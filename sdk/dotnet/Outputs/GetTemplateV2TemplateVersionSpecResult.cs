// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetTemplateV2TemplateVersionSpecResult
    {
        /// <summary>
        /// VM creation time
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User or Service who created the User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecCreatedByResult> CreatedBies;
        /// <summary>
        /// The identifier of a Template.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// Specify whether to mark the Template Version as active or not. The newly created Version during Template Creation, Updating or Guest OS Updating is set to Active by default unless specified otherwise.
        /// </summary>
        public readonly bool IsActiveVersion;
        /// <summary>
        /// Allow or disallow override of the Guest Customization during Template deployment.
        /// </summary>
        public readonly bool IsGcOverrideEnabled;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecLinkResult> Links;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The user defined description of a Template Version.
        /// </summary>
        public readonly string VersionDescription;
        /// <summary>
        /// The user defined name of a Template Version.
        /// </summary>
        public readonly string VersionName;
        /// <summary>
        /// VM configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecVmSpecResult> VmSpecs;

        [OutputConstructor]
        private GetTemplateV2TemplateVersionSpecResult(
            string createTime,

            ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecCreatedByResult> createdBies,

            string extId,

            bool isActiveVersion,

            bool isGcOverrideEnabled,

            ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecLinkResult> links,

            string tenantId,

            string versionDescription,

            string versionName,

            ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecVmSpecResult> vmSpecs)
        {
            CreateTime = createTime;
            CreatedBies = createdBies;
            ExtId = extId;
            IsActiveVersion = isActiveVersion;
            IsGcOverrideEnabled = isGcOverrideEnabled;
            Links = links;
            TenantId = tenantId;
            VersionDescription = versionDescription;
            VersionName = versionName;
            VmSpecs = vmSpecs;
        }
    }
}
