// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class VmShutdownActionV2GuestPowerStateTransitionConfig
    {
        /// <summary>
        /// Indicates whether to run the set script before the VM shutdowns/restarts.
        /// </summary>
        public readonly bool? ShouldEnableScriptExec;
        /// <summary>
        /// Indicates whether to abort VM shutdown/restart if the script fails.
        /// 
        /// 
        /// See detailed information in [Nutanix VMs Power Action Shutdown V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/shutdownVm).
        /// See detailed information in [Nutanix VMs Power Action Shutdown Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/shutdownGuestVm).
        /// See detailed information in [Nutanix VMs Power Action Reboot V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/rebootVm).
        /// See detailed information in [Nutanix VMs Power Action Reboot Guest Vm V4](https://developers.nutanix.com/api-reference?namespace=vmm&amp;version=v4.0#tag/Vm/operation/rebootGuestVm).
        /// </summary>
        public readonly bool? ShouldFailOnScriptFailure;

        [OutputConstructor]
        private VmShutdownActionV2GuestPowerStateTransitionConfig(
            bool? shouldEnableScriptExec,

            bool? shouldFailOnScriptFailure)
        {
            ShouldEnableScriptExec = shouldEnableScriptExec;
            ShouldFailOnScriptFailure = shouldFailOnScriptFailure;
        }
    }
}
