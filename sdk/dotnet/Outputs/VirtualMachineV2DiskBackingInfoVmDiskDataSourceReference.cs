// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class VirtualMachineV2DiskBackingInfoVmDiskDataSourceReference
    {
        /// <summary>
        /// Image Reference
        /// * `image_reference.image_ext_id`: (Required) The globally unique identifier of an image. It should be of type UUID.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceImageReference> ImageReferences;
        /// <summary>
        /// Vm Disk Reference
        /// * `vm_disk_reference.disk_ext_id`: (Optional) The globally unique identifier of a VM disk. It should be of type UUID.
        /// * `vm_disk_reference.disk_address`: (Optional) Disk address.
        /// * `vm_disk_reference.vm_reference`: (Optional) This is a reference to a VM.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference> VmDiskReferences;

        [OutputConstructor]
        private VirtualMachineV2DiskBackingInfoVmDiskDataSourceReference(
            ImmutableArray<Outputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceImageReference> imageReferences,

            ImmutableArray<Outputs.VirtualMachineV2DiskBackingInfoVmDiskDataSourceReferenceVmDiskReference> vmDiskReferences)
        {
            ImageReferences = imageReferences;
            VmDiskReferences = vmDiskReferences;
        }
    }
}
