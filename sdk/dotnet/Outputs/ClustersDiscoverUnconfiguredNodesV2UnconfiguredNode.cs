// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode
    {
        /// <summary>
        /// Cluster arch type.
        /// </summary>
        public readonly string? Arch;
        /// <summary>
        /// Attributes of a node.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeAttribute> Attributes;
        /// <summary>
        /// Cluster ID.
        /// </summary>
        public readonly string? ClusterId;
        /// <summary>
        /// CPU type.
        /// </summary>
        public readonly ImmutableArray<string> CpuTypes;
        /// <summary>
        /// Current CVM VLAN tag.
        /// </summary>
        public readonly string? CurrentCvmVlanTag;
        /// <summary>
        /// Current network interface of a node.
        /// </summary>
        public readonly string? CurrentNetworkInterface;
        /// <summary>
        /// CVM IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIp> CvmIps;
        /// <summary>
        /// Foundation version.
        /// </summary>
        public readonly string? FoundationVersion;
        /// <summary>
        /// Host type.
        /// </summary>
        public readonly string? HostType;
        /// <summary>
        /// Hypervisor IP Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIp> HypervisorIps;
        /// <summary>
        /// Hypervisor type.
        /// </summary>
        public readonly string? HypervisorType;
        /// <summary>
        /// Host version of the node.
        /// </summary>
        public readonly string? HypervisorVersion;
        /// <summary>
        /// Interface IPV6 address.
        /// </summary>
        public readonly string? InterfaceIpv6;
        /// <summary>
        /// IPMI IP Address.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIp> IpmiIps;
        /// <summary>
        /// Secure boot status.
        /// </summary>
        public readonly bool? IsSecureBooted;
        /// <summary>
        /// Position of a node in a rackable unit.
        /// </summary>
        public readonly string? NodePosition;
        /// <summary>
        /// UUID of the host.
        /// </summary>
        public readonly string? NodeUuid;
        /// <summary>
        /// NOS software version of a node.
        /// </summary>
        public readonly string? NosVersion;
        /// <summary>
        /// Maximum number of nodes in rackable-unit.
        /// </summary>
        public readonly int? RackableUnitMaxNodes;
        /// <summary>
        /// Rackable unit model type.
        /// </summary>
        public readonly string? RackableUnitModel;
        /// <summary>
        /// Rackable unit serial name.
        /// </summary>
        public readonly string? RackableUnitSerial;

        [OutputConstructor]
        private ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode(
            string? arch,

            ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeAttribute> attributes,

            string? clusterId,

            ImmutableArray<string> cpuTypes,

            string? currentCvmVlanTag,

            string? currentNetworkInterface,

            ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeCvmIp> cvmIps,

            string? foundationVersion,

            string? hostType,

            ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeHypervisorIp> hypervisorIps,

            string? hypervisorType,

            string? hypervisorVersion,

            string? interfaceIpv6,

            ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeIpmiIp> ipmiIps,

            bool? isSecureBooted,

            string? nodePosition,

            string? nodeUuid,

            string? nosVersion,

            int? rackableUnitMaxNodes,

            string? rackableUnitModel,

            string? rackableUnitSerial)
        {
            Arch = arch;
            Attributes = attributes;
            ClusterId = clusterId;
            CpuTypes = cpuTypes;
            CurrentCvmVlanTag = currentCvmVlanTag;
            CurrentNetworkInterface = currentNetworkInterface;
            CvmIps = cvmIps;
            FoundationVersion = foundationVersion;
            HostType = hostType;
            HypervisorIps = hypervisorIps;
            HypervisorType = hypervisorType;
            HypervisorVersion = hypervisorVersion;
            InterfaceIpv6 = interfaceIpv6;
            IpmiIps = ipmiIps;
            IsSecureBooted = isSecureBooted;
            NodePosition = nodePosition;
            NodeUuid = nodeUuid;
            NosVersion = nosVersion;
            RackableUnitMaxNodes = rackableUnitMaxNodes;
            RackableUnitModel = rackableUnitModel;
            RackableUnitSerial = rackableUnitSerial;
        }
    }
}
