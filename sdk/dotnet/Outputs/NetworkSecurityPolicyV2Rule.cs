// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class NetworkSecurityPolicyV2Rule
    {
        /// <summary>
        /// A user defined annotation for a rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string? ExtId;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkSecurityPolicyV2RuleLink> Links;
        /// <summary>
        /// Spec for rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkSecurityPolicyV2RuleSpec> Specs;
        /// <summary>
        /// The type for a ruleâ€”the value chosen here restricts which specification can be chosen. Acceptable values are "QUARANTINE", "TWO_ENV_ISOLATION", "APPLICATION", "INTRA_GROUP".
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private NetworkSecurityPolicyV2Rule(
            string? description,

            string? extId,

            ImmutableArray<Outputs.NetworkSecurityPolicyV2RuleLink> links,

            ImmutableArray<Outputs.NetworkSecurityPolicyV2RuleSpec> specs,

            string type)
        {
            Description = description;
            ExtId = extId;
            Links = links;
            Specs = specs;
            Type = type;
        }
    }
}
