// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetServiceGroupsV2ServiceGroupResult
    {
        /// <summary>
        /// created by.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// A user defined annotation for an service Group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// service group UUID.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// Icmp Type Code List.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupIcmpServiceResult> IcmpServices;
        /// <summary>
        /// Service Group is system defined or not.
        /// </summary>
        public readonly bool IsSystemDefined;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupLinkResult> Links;
        /// <summary>
        /// A short identifier for an service Group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Reference to policy associated with Service Group.
        /// </summary>
        public readonly ImmutableArray<string> PolicyReferences;
        /// <summary>
        /// List of TCP ports in the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupTcpServiceResult> TcpServices;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// List of UDP ports in the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupUdpServiceResult> UdpServices;

        [OutputConstructor]
        private GetServiceGroupsV2ServiceGroupResult(
            string createdBy,

            string description,

            string extId,

            ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupIcmpServiceResult> icmpServices,

            bool isSystemDefined,

            ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupLinkResult> links,

            string name,

            ImmutableArray<string> policyReferences,

            ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupTcpServiceResult> tcpServices,

            string tenantId,

            ImmutableArray<Outputs.GetServiceGroupsV2ServiceGroupUdpServiceResult> udpServices)
        {
            CreatedBy = createdBy;
            Description = description;
            ExtId = extId;
            IcmpServices = icmpServices;
            IsSystemDefined = isSystemDefined;
            Links = links;
            Name = name;
            PolicyReferences = policyReferences;
            TcpServices = tcpServices;
            TenantId = tenantId;
            UdpServices = udpServices;
        }
    }
}
