// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class ClusterAddNodeV2ConfigParam
    {
        /// <summary>
        /// -(Optional) HyperV Credentials.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2ConfigParamHiperv> Hipervs;
        /// <summary>
        /// -(Optional) Indicates whether the node is compute only or not.
        /// </summary>
        public readonly bool? IsComputeOnly;
        /// <summary>
        /// -(Optional) Indicates whether the node is marked to be never schedulable or not.
        /// </summary>
        public readonly bool? IsNeverSchedulable;
        /// <summary>
        /// -(Optional) Indicates if node is compatible or not.
        /// </summary>
        public readonly bool? IsNosCompatible;
        /// <summary>
        /// -(Optional) Indicates if node discovery need to be skipped or not.
        /// </summary>
        public readonly bool? ShouldSkipDiscovery;
        /// <summary>
        /// -(Optional) Indicates if node imaging needs to be skipped or not.
        /// </summary>
        public readonly bool? ShouldSkipImaging;
        /// <summary>
        /// -(Optional) Indicates if rack awareness needs to be validated or not.
        /// </summary>
        public readonly bool? ShouldValidateRackAwareness;
        /// <summary>
        /// -(Optional) Target hypervisor.
        /// </summary>
        public readonly string? TargetHypervisor;

        [OutputConstructor]
        private ClusterAddNodeV2ConfigParam(
            ImmutableArray<Outputs.ClusterAddNodeV2ConfigParamHiperv> hipervs,

            bool? isComputeOnly,

            bool? isNeverSchedulable,

            bool? isNosCompatible,

            bool? shouldSkipDiscovery,

            bool? shouldSkipImaging,

            bool? shouldValidateRackAwareness,

            string? targetHypervisor)
        {
            Hipervs = hipervs;
            IsComputeOnly = isComputeOnly;
            IsNeverSchedulable = isNeverSchedulable;
            IsNosCompatible = isNosCompatible;
            ShouldSkipDiscovery = shouldSkipDiscovery;
            ShouldSkipImaging = shouldSkipImaging;
            ShouldValidateRackAwareness = shouldValidateRackAwareness;
            TargetHypervisor = targetHypervisor;
        }
    }
}
