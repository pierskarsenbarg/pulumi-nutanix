// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetPermissionsEntityResult
    {
        /// <summary>
        /// version of the API
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// The categories for this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPermissionsEntityCategoryResult> Categories;
        /// <summary>
        /// A description for the permission.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// . The fields that can/cannot be accessed during the specified operation. field_name_list will be a list of fields. e.g. if field_mode = disallowed, field_name_list = [“xyz”] then the list of allowed fields is ALL fields minus xyz. Seee Field for more info.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPermissionsEntityFieldResult> Fields;
        /// <summary>
        /// (Required) The kind name (Default value: `project`).
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The permission kind metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// the name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The operation that is being performed on a given kind.
        /// </summary>
        public readonly string Operation;
        /// <summary>
        /// The reference to a user.
        /// </summary>
        public readonly ImmutableDictionary<string, string> OwnerReference;
        /// <summary>
        /// The reference to a project.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ProjectReference;
        /// <summary>
        /// The state of the permission.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetPermissionsEntityResult(
            string apiVersion,

            ImmutableArray<Outputs.GetPermissionsEntityCategoryResult> categories,

            string description,

            ImmutableArray<Outputs.GetPermissionsEntityFieldResult> fields,

            string kind,

            ImmutableDictionary<string, string> metadata,

            string name,

            string operation,

            ImmutableDictionary<string, string> ownerReference,

            ImmutableDictionary<string, string> projectReference,

            string state)
        {
            ApiVersion = apiVersion;
            Categories = categories;
            Description = description;
            Fields = fields;
            Kind = kind;
            Metadata = metadata;
            Name = name;
            Operation = operation;
            OwnerReference = ownerReference;
            ProjectReference = projectReference;
            State = state;
        }
    }
}
