// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class VirtualMachineV2BootConfigLegacyBoot
    {
        /// <summary>
        /// Boot Device object
        /// * `boot_device.boot_device_disk`: (Optional) Disk address.
        /// * `boot_device.boot_device_disk.disk_address.bus_type`: (Required) Bus type for the device
        /// * `boot_device.boot_device_disk.disk_address.index`: (Required) Device index on the bus. This field is ignored unless the bus details are specified.
        /// 
        /// * `boot_device.boot_device_nic`: (Optional) Disk Nic address.
        /// * `boot_device.boot_device_nic.mac_address`: (Required) mac address
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualMachineV2BootConfigLegacyBootBootDevice> BootDevices;
        /// <summary>
        /// Indicates the order of device types in which the VM should try to boot from. If the boot device order is not provided the system will decide an appropriate boot device order. Valid values are 'CDROM', 'DISK', 'NETWORK'.
        /// </summary>
        public readonly ImmutableArray<string> BootOrders;

        [OutputConstructor]
        private VirtualMachineV2BootConfigLegacyBoot(
            ImmutableArray<Outputs.VirtualMachineV2BootConfigLegacyBootBootDevice> bootDevices,

            ImmutableArray<string> bootOrders)
        {
            BootDevices = bootDevices;
            BootOrders = bootOrders;
        }
    }
}
