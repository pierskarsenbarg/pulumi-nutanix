// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class NdbCloneTimeMachine
    {
        public readonly string? AccessLevel;
        /// <summary>
        /// cloned or not
        /// </summary>
        public readonly bool? Clone;
        public readonly string? Clones;
        /// <summary>
        /// clone will be clustered or not
        /// </summary>
        public readonly bool? Clustered;
        public readonly string? Database;
        public readonly string? DatabaseId;
        /// <summary>
        /// date created for clone
        /// </summary>
        public readonly string? DateCreated;
        /// <summary>
        /// last modified date for clone
        /// </summary>
        public readonly string? DateModified;
        /// <summary>
        /// database instance description
        /// </summary>
        public readonly string? Description;
        public readonly string? EaStatus;
        public readonly string? Id;
        /// <summary>
        /// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
        /// </summary>
        public readonly string? Metric;
        /// <summary>
        /// database instance name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of all the properties
        /// </summary>
        public readonly ImmutableArray<Outputs.NdbCloneTimeMachineProperty> Properties;
        public readonly string? ScheduleId;
        public readonly ImmutableArray<Outputs.NdbCloneTimeMachineSchedule> Schedules;
        public readonly string? Scope;
        public readonly string? SlaId;
        public readonly bool? SlaUpdateInProgress;
        public readonly string? SlaUpdateMetadata;
        public readonly ImmutableArray<Outputs.NdbCloneTimeMachineSla> Slas;
        public readonly ImmutableArray<string> SourceNxClusters;
        /// <summary>
        /// status of clone
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.NdbCloneTimeMachineTag> Tags;
        /// <summary>
        /// type of clone
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private NdbCloneTimeMachine(
            string? accessLevel,

            bool? clone,

            string? clones,

            bool? clustered,

            string? database,

            string? databaseId,

            string? dateCreated,

            string? dateModified,

            string? description,

            string? eaStatus,

            string? id,

            string? metric,

            string? name,

            ImmutableArray<Outputs.NdbCloneTimeMachineProperty> properties,

            string? scheduleId,

            ImmutableArray<Outputs.NdbCloneTimeMachineSchedule> schedules,

            string? scope,

            string? slaId,

            bool? slaUpdateInProgress,

            string? slaUpdateMetadata,

            ImmutableArray<Outputs.NdbCloneTimeMachineSla> slas,

            ImmutableArray<string> sourceNxClusters,

            string? status,

            ImmutableArray<Outputs.NdbCloneTimeMachineTag> tags,

            string? type)
        {
            AccessLevel = accessLevel;
            Clone = clone;
            Clones = clones;
            Clustered = clustered;
            Database = database;
            DatabaseId = databaseId;
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            EaStatus = eaStatus;
            Id = id;
            Metric = metric;
            Name = name;
            Properties = properties;
            ScheduleId = scheduleId;
            Schedules = schedules;
            Scope = scope;
            SlaId = slaId;
            SlaUpdateInProgress = slaUpdateInProgress;
            SlaUpdateMetadata = slaUpdateMetadata;
            Slas = slas;
            SourceNxClusters = sourceNxClusters;
            Status = status;
            Tags = tags;
            Type = type;
        }
    }
}
