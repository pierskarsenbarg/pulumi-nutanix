// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class ClusterAddNodeV2NodeParamNodeList
    {
        /// <summary>
        /// -(Optional) Block ID.
        /// </summary>
        public readonly string? BlockId;
        /// <summary>
        /// -(Optional) Current network interface of a node.
        /// </summary>
        public readonly string? CurrentNetworkInterface;
        /// <summary>
        /// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListCvmIp> CvmIps;
        /// <summary>
        /// -(Optional) List of objects containing digital_certificate_base64 and key_management_server_uuid fields for key management server.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListDigitalCertificateMapList> DigitalCertificateMapLists;
        /// <summary>
        /// -(Optional) Name of the host.
        /// </summary>
        public readonly string? HypervisorHostname;
        /// <summary>
        /// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListHypervisorIp> HypervisorIps;
        /// <summary>
        /// -(Optional) Hypervisor type.
        /// Valid values are:
        /// - `XEN`: Xen hypervisor.
        /// - `HYPERV`: Hyper-V hypervisor.
        /// - `NATIVEHOST`: NativeHost type where AOS runs natively, without hypervisor.
        /// - `ESX`: ESX hypervisor.
        /// - `AHV`: AHV hypervisor.
        /// </summary>
        public readonly string? HypervisorType;
        /// <summary>
        /// -(Optional) Host version of the node.
        /// </summary>
        public readonly string? HypervisorVersion;
        /// <summary>
        /// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListIpmiIp> IpmiIps;
        public readonly bool? IsLightCompute;
        /// <summary>
        /// -(Optional) Is ROBO mixed hypervisor.
        /// </summary>
        public readonly bool? IsRoboMixedHypervisor;
        /// <summary>
        /// -(Optional) Rackable unit model name.
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// -(Optional) Active and standby uplink information of the target nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListNetwork> Networks;
        /// <summary>
        /// -(Optional) Node position.
        /// </summary>
        public readonly string? NodePosition;
        /// <summary>
        /// -(Optional) Node UUID.
        /// </summary>
        public readonly string? NodeUuid;
        /// <summary>
        /// -(Optional) NOS software version of a node.
        /// </summary>
        public readonly string? NosVersion;

        [OutputConstructor]
        private ClusterAddNodeV2NodeParamNodeList(
            string? blockId,

            string? currentNetworkInterface,

            ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListCvmIp> cvmIps,

            ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListDigitalCertificateMapList> digitalCertificateMapLists,

            string? hypervisorHostname,

            ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListHypervisorIp> hypervisorIps,

            string? hypervisorType,

            string? hypervisorVersion,

            ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListIpmiIp> ipmiIps,

            bool? isLightCompute,

            bool? isRoboMixedHypervisor,

            string? model,

            ImmutableArray<Outputs.ClusterAddNodeV2NodeParamNodeListNetwork> networks,

            string? nodePosition,

            string? nodeUuid,

            string? nosVersion)
        {
            BlockId = blockId;
            CurrentNetworkInterface = currentNetworkInterface;
            CvmIps = cvmIps;
            DigitalCertificateMapLists = digitalCertificateMapLists;
            HypervisorHostname = hypervisorHostname;
            HypervisorIps = hypervisorIps;
            HypervisorType = hypervisorType;
            HypervisorVersion = hypervisorVersion;
            IpmiIps = ipmiIps;
            IsLightCompute = isLightCompute;
            IsRoboMixedHypervisor = isRoboMixedHypervisor;
            Model = model;
            Networks = networks;
            NodePosition = nodePosition;
            NodeUuid = nodeUuid;
            NosVersion = nosVersion;
        }
    }
}
