// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetFloatingIpsV2FloatingIpVpcExternalSubnetResult
    {
        public readonly int ActiveGatewayCount;
        public readonly ImmutableArray<Outputs.GetFloatingIpsV2FloatingIpVpcExternalSubnetActiveGatewayNodeResult> ActiveGatewayNodes;
        public readonly ImmutableArray<Outputs.GetFloatingIpsV2FloatingIpVpcExternalSubnetExternalIpResult> ExternalIps;
        public readonly ImmutableArray<string> GatewayNodes;
        public readonly string SubnetReference;

        [OutputConstructor]
        private GetFloatingIpsV2FloatingIpVpcExternalSubnetResult(
            int activeGatewayCount,

            ImmutableArray<Outputs.GetFloatingIpsV2FloatingIpVpcExternalSubnetActiveGatewayNodeResult> activeGatewayNodes,

            ImmutableArray<Outputs.GetFloatingIpsV2FloatingIpVpcExternalSubnetExternalIpResult> externalIps,

            ImmutableArray<string> gatewayNodes,

            string subnetReference)
        {
            ActiveGatewayCount = activeGatewayCount;
            ActiveGatewayNodes = activeGatewayNodes;
            ExternalIps = externalIps;
            GatewayNodes = gatewayNodes;
            SubnetReference = subnetReference;
        }
    }
}
