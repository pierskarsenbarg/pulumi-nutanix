// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetDirectoryServicesV2DirectoryServiceResult
    {
        /// <summary>
        /// - User or Service who created the Directory Service.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// - Creation time of the Directory Service.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// - Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
        /// </summary>
        public readonly string DirectoryType;
        /// <summary>
        /// - Domain name for the Directory Service.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// - A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// - Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
        /// </summary>
        public readonly string GroupSearchType;
        /// <summary>
        /// - Last updated time of the Directory Service.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// - Name for the Directory Service.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// - Configuration for OpenLDAP Directory Service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectoryServicesV2DirectoryServiceOpenLdapConfigurationResult> OpenLdapConfigurations;
        /// <summary>
        /// - Secondary URL for the Directory Service.
        /// </summary>
        public readonly ImmutableArray<string> SecondaryUrls;
        /// <summary>
        /// - Information of Service account to connect to the Directory Service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectoryServicesV2DirectoryServiceServiceAccountResult> ServiceAccounts;
        /// <summary>
        /// - URL for the Directory Service.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// - List of allowed User Groups for the Directory Service.
        /// </summary>
        public readonly ImmutableArray<string> WhiteListedGroups;

        [OutputConstructor]
        private GetDirectoryServicesV2DirectoryServiceResult(
            string createdBy,

            string createdTime,

            string directoryType,

            string domainName,

            string extId,

            string groupSearchType,

            string lastUpdatedTime,

            string name,

            ImmutableArray<Outputs.GetDirectoryServicesV2DirectoryServiceOpenLdapConfigurationResult> openLdapConfigurations,

            ImmutableArray<string> secondaryUrls,

            ImmutableArray<Outputs.GetDirectoryServicesV2DirectoryServiceServiceAccountResult> serviceAccounts,

            string url,

            ImmutableArray<string> whiteListedGroups)
        {
            CreatedBy = createdBy;
            CreatedTime = createdTime;
            DirectoryType = directoryType;
            DomainName = domainName;
            ExtId = extId;
            GroupSearchType = groupSearchType;
            LastUpdatedTime = lastUpdatedTime;
            Name = name;
            OpenLdapConfigurations = openLdapConfigurations;
            SecondaryUrls = secondaryUrls;
            ServiceAccounts = serviceAccounts;
            Url = url;
            WhiteListedGroups = whiteListedGroups;
        }
    }
}
