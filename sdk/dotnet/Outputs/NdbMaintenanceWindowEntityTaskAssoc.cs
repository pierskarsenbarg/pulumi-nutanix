// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class NdbMaintenanceWindowEntityTaskAssoc
    {
        /// <summary>
        /// access level
        /// </summary>
        public readonly string? AccessLevel;
        /// <summary>
        /// created date of maintenance window
        /// </summary>
        public readonly string? DateCreated;
        /// <summary>
        /// modified date of maintenance window
        /// </summary>
        public readonly string? DateModified;
        /// <summary>
        /// Description for maintenance window
        /// </summary>
        public readonly string? Description;
        public readonly string? Entity;
        public readonly string? EntityId;
        public readonly string? EntityType;
        public readonly string? Id;
        public readonly string? MaintenanceWindowId;
        public readonly string? MaintenanceWindowOwnerId;
        /// <summary>
        /// Name for the maintenance window.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// owner id of maintenance window
        /// </summary>
        public readonly string? OwnerId;
        public readonly ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocPayload> Payloads;
        /// <summary>
        /// properties of maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocProperty> Properties;
        /// <summary>
        /// status of maintennace window
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// tags of maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocTag> Tags;
        public readonly string? TaskType;

        [OutputConstructor]
        private NdbMaintenanceWindowEntityTaskAssoc(
            string? accessLevel,

            string? dateCreated,

            string? dateModified,

            string? description,

            string? entity,

            string? entityId,

            string? entityType,

            string? id,

            string? maintenanceWindowId,

            string? maintenanceWindowOwnerId,

            string? name,

            string? ownerId,

            ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocPayload> payloads,

            ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocProperty> properties,

            string? status,

            ImmutableArray<Outputs.NdbMaintenanceWindowEntityTaskAssocTag> tags,

            string? taskType)
        {
            AccessLevel = accessLevel;
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            Entity = entity;
            EntityId = entityId;
            EntityType = entityType;
            Id = id;
            MaintenanceWindowId = maintenanceWindowId;
            MaintenanceWindowOwnerId = maintenanceWindowOwnerId;
            Name = name;
            OwnerId = ownerId;
            Payloads = payloads;
            Properties = properties;
            Status = status;
            Tags = tags;
            TaskType = taskType;
        }
    }
}
