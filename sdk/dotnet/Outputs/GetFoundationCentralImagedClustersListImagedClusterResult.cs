// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetFoundationCentralImagedClustersListImagedClusterResult
    {
        public readonly bool Archived;
        public readonly string ClusterExternalIp;
        public readonly string ClusterName;
        public readonly int ClusterSize;
        public readonly Outputs.GetFoundationCentralImagedClustersListImagedClusterClusterStatusResult ClusterStatus;
        public readonly Outputs.GetFoundationCentralImagedClustersListImagedClusterCommonNetworkSettingsResult CommonNetworkSettings;
        public readonly string CreatedTimestamp;
        public readonly string CurrentTime;
        public readonly bool Destroyed;
        public readonly ImmutableArray<Outputs.GetFoundationCentralImagedClustersListImagedClusterFoundationInitConfigResult> FoundationInitConfigs;
        public readonly string FoundationInitNodeUuid;
        public readonly string ImagedClusterUuid;
        public readonly ImmutableArray<string> ImagedNodeUuidLists;
        public readonly int? RedundancyFactor;
        public readonly int StorageNodeCount;
        public readonly string WorkflowType;

        [OutputConstructor]
        private GetFoundationCentralImagedClustersListImagedClusterResult(
            bool archived,

            string clusterExternalIp,

            string clusterName,

            int clusterSize,

            Outputs.GetFoundationCentralImagedClustersListImagedClusterClusterStatusResult clusterStatus,

            Outputs.GetFoundationCentralImagedClustersListImagedClusterCommonNetworkSettingsResult commonNetworkSettings,

            string createdTimestamp,

            string currentTime,

            bool destroyed,

            ImmutableArray<Outputs.GetFoundationCentralImagedClustersListImagedClusterFoundationInitConfigResult> foundationInitConfigs,

            string foundationInitNodeUuid,

            string imagedClusterUuid,

            ImmutableArray<string> imagedNodeUuidLists,

            int? redundancyFactor,

            int storageNodeCount,

            string workflowType)
        {
            Archived = archived;
            ClusterExternalIp = clusterExternalIp;
            ClusterName = clusterName;
            ClusterSize = clusterSize;
            ClusterStatus = clusterStatus;
            CommonNetworkSettings = commonNetworkSettings;
            CreatedTimestamp = createdTimestamp;
            CurrentTime = currentTime;
            Destroyed = destroyed;
            FoundationInitConfigs = foundationInitConfigs;
            FoundationInitNodeUuid = foundationInitNodeUuid;
            ImagedClusterUuid = imagedClusterUuid;
            ImagedNodeUuidLists = imagedNodeUuidLists;
            RedundancyFactor = redundancyFactor;
            StorageNodeCount = storageNodeCount;
            WorkflowType = workflowType;
        }
    }
}
