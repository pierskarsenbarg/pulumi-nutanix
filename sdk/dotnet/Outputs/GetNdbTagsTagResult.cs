// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbTagsTagResult
    {
        /// <summary>
        /// date created of the tag
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// modified date of tha tag
        /// </summary>
        public readonly string DateModified;
        /// <summary>
        /// description for the tag
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// entity for the tag to be associated with.
        /// </summary>
        public readonly string EntityType;
        public readonly string Id;
        /// <summary>
        /// name for the tag
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// owner id of the tag
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// tag value for entities.
        /// </summary>
        public readonly bool Required;
        /// <summary>
        /// Status of the tag
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// value for the tag
        /// </summary>
        public readonly int Values;

        [OutputConstructor]
        private GetNdbTagsTagResult(
            string dateCreated,

            string dateModified,

            string description,

            string entityType,

            string id,

            string name,

            string owner,

            bool required,

            string status,

            int values)
        {
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            EntityType = entityType;
            Id = id;
            Name = name;
            Owner = owner;
            Required = required;
            Status = status;
            Values = values;
        }
    }
}
