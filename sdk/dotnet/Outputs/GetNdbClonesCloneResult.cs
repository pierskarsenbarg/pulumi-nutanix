// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbClonesCloneResult
    {
        /// <summary>
        /// clone or not
        /// </summary>
        public readonly bool Clone;
        /// <summary>
        /// clustered or not
        /// </summary>
        public readonly bool Clustered;
        /// <summary>
        /// database cluster type
        /// </summary>
        public readonly string DatabaseClusterType;
        /// <summary>
        /// database name
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// database nodes associated with database instance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneDatabaseNodeResult> DatabaseNodes;
        /// <summary>
        /// database status
        /// </summary>
        public readonly string DatabaseStatus;
        /// <summary>
        /// database for a cloned instance
        /// </summary>
        public readonly ImmutableDictionary<string, string> Databases;
        /// <summary>
        /// date created for clone
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// last modified date for clone
        /// </summary>
        public readonly string DateModified;
        /// <summary>
        /// dbserver logical cluster
        /// </summary>
        public readonly ImmutableDictionary<string, string> DbserverLogicalCluster;
        /// <summary>
        /// dbserver logical cluster id
        /// </summary>
        public readonly string DbserverLogicalClusterId;
        /// <summary>
        /// cloned description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// cloned id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// cloned info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneInfoResult> Infos;
        /// <summary>
        /// LCM Config
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneLcmConfigResult> LcmConfigs;
        /// <summary>
        /// linked databases within database instance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneLinkedDatabaseResult> LinkedDatabases;
        /// <summary>
        /// Metric of clone
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metric;
        /// <summary>
        /// cloned name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// parent database id
        /// </summary>
        public readonly string ParentDatabaseId;
        /// <summary>
        /// parent source database id
        /// </summary>
        public readonly string ParentSourceDatabaseId;
        /// <summary>
        /// parent time machine id
        /// </summary>
        public readonly string ParentTimeMachineId;
        /// <summary>
        /// properties of clone
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesClonePropertyResult> Properties;
        /// <summary>
        /// status of clone
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneTagResult> Tags;
        /// <summary>
        /// time machine id
        /// </summary>
        public readonly string TimeMachineId;
        /// <summary>
        /// Time machine info
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneTimeMachineResult> TimeMachines;
        /// <summary>
        /// time zone
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetNdbClonesCloneResult(
            bool clone,

            bool clustered,

            string databaseClusterType,

            string databaseName,

            ImmutableArray<Outputs.GetNdbClonesCloneDatabaseNodeResult> databaseNodes,

            string databaseStatus,

            ImmutableDictionary<string, string> databases,

            string dateCreated,

            string dateModified,

            ImmutableDictionary<string, string> dbserverLogicalCluster,

            string dbserverLogicalClusterId,

            string description,

            string id,

            ImmutableArray<Outputs.GetNdbClonesCloneInfoResult> infos,

            ImmutableArray<Outputs.GetNdbClonesCloneLcmConfigResult> lcmConfigs,

            ImmutableArray<Outputs.GetNdbClonesCloneLinkedDatabaseResult> linkedDatabases,

            ImmutableDictionary<string, string> metric,

            string name,

            string parentDatabaseId,

            string parentSourceDatabaseId,

            string parentTimeMachineId,

            ImmutableArray<Outputs.GetNdbClonesClonePropertyResult> properties,

            string status,

            ImmutableArray<Outputs.GetNdbClonesCloneTagResult> tags,

            string timeMachineId,

            ImmutableArray<Outputs.GetNdbClonesCloneTimeMachineResult> timeMachines,

            string timeZone,

            string type)
        {
            Clone = clone;
            Clustered = clustered;
            DatabaseClusterType = databaseClusterType;
            DatabaseName = databaseName;
            DatabaseNodes = databaseNodes;
            DatabaseStatus = databaseStatus;
            Databases = databases;
            DateCreated = dateCreated;
            DateModified = dateModified;
            DbserverLogicalCluster = dbserverLogicalCluster;
            DbserverLogicalClusterId = dbserverLogicalClusterId;
            Description = description;
            Id = id;
            Infos = infos;
            LcmConfigs = lcmConfigs;
            LinkedDatabases = linkedDatabases;
            Metric = metric;
            Name = name;
            ParentDatabaseId = parentDatabaseId;
            ParentSourceDatabaseId = parentSourceDatabaseId;
            ParentTimeMachineId = parentTimeMachineId;
            Properties = properties;
            Status = status;
            Tags = tags;
            TimeMachineId = timeMachineId;
            TimeMachines = timeMachines;
            TimeZone = timeZone;
            Type = type;
        }
    }
}
