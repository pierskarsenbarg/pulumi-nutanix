// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbDatabasesDatabaseInstanceResult
    {
        public readonly bool Clone;
        public readonly bool Clustered;
        public readonly string DatabaseClusterType;
        public readonly string DatabaseName;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceDatabaseNodeResult> DatabaseNodes;
        public readonly ImmutableDictionary<string, string> Databases;
        public readonly string DateCreated;
        public readonly string DateModified;
        public readonly ImmutableDictionary<string, string> DbserverLogicalCluster;
        public readonly string DbserverLogicalClusterId;
        public readonly string Description;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceInfoResult> Infos;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceLcmConfigResult> LcmConfigs;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceLinkedDatabaseResult> LinkedDatabases;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceMetadataResult> Metadatas;
        public readonly ImmutableDictionary<string, string> Metric;
        public readonly string Name;
        public readonly string ParentDatabaseId;
        /// <summary>
        /// List of all the properties
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstancePropertyResult> Properties;
        public readonly string Status;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceTagResult> Tags;
        public readonly string TimeMachineId;
        public readonly ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceTimeMachineResult> TimeMachines;
        public readonly string TimeZone;
        public readonly string Type;

        [OutputConstructor]
        private GetNdbDatabasesDatabaseInstanceResult(
            bool clone,

            bool clustered,

            string databaseClusterType,

            string databaseName,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceDatabaseNodeResult> databaseNodes,

            ImmutableDictionary<string, string> databases,

            string dateCreated,

            string dateModified,

            ImmutableDictionary<string, string> dbserverLogicalCluster,

            string dbserverLogicalClusterId,

            string description,

            string id,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceInfoResult> infos,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceLcmConfigResult> lcmConfigs,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceLinkedDatabaseResult> linkedDatabases,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceMetadataResult> metadatas,

            ImmutableDictionary<string, string> metric,

            string name,

            string parentDatabaseId,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstancePropertyResult> properties,

            string status,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceTagResult> tags,

            string timeMachineId,

            ImmutableArray<Outputs.GetNdbDatabasesDatabaseInstanceTimeMachineResult> timeMachines,

            string timeZone,

            string type)
        {
            Clone = clone;
            Clustered = clustered;
            DatabaseClusterType = databaseClusterType;
            DatabaseName = databaseName;
            DatabaseNodes = databaseNodes;
            Databases = databases;
            DateCreated = dateCreated;
            DateModified = dateModified;
            DbserverLogicalCluster = dbserverLogicalCluster;
            DbserverLogicalClusterId = dbserverLogicalClusterId;
            Description = description;
            Id = id;
            Infos = infos;
            LcmConfigs = lcmConfigs;
            LinkedDatabases = linkedDatabases;
            Metadatas = metadatas;
            Metric = metric;
            Name = name;
            ParentDatabaseId = parentDatabaseId;
            Properties = properties;
            Status = status;
            Tags = tags;
            TimeMachineId = timeMachineId;
            TimeMachines = timeMachines;
            TimeZone = timeZone;
            Type = type;
        }
    }
}
