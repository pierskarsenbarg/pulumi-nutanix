// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetBlueprintRuntimeEditablesRuntimeEditableServiceListResult
    {
        /// <summary>
        /// (Optional, Computed) The context in which the runtime specification is applied. It is full address of where the entity in target is present.
        /// </summary>
        public readonly string Context;
        /// <summary>
        /// (Optional, Computed) A textual description of the runtime specification. This field provides additional information or context about the entity.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (Optional, Computed) The name of the runtime specification. This could be the name of an action, service, credential, or other runtime-editable resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Optional, Computed) The type of runtime specification. This field indicates the category or classification of the runtime resource, such as an action, service, or credential.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// (Optional, Computed) The unique identifier (UUID) associated with the runtime specification. This is useful for identifying specific resources or entities.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// (Optional, Computed) The value associated with the runtime specification. This can be a string value representing a configuration or setting.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetBlueprintRuntimeEditablesRuntimeEditableServiceListResult(
            string context,

            string description,

            string name,

            string type,

            string uuid,

            string value)
        {
            Context = context;
            Description = description;
            Name = name;
            Type = type;
            Uuid = uuid;
            Value = value;
        }
    }
}
