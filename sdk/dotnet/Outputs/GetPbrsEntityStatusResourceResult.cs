// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetPbrsEntityStatusResourceResult
    {
        /// <summary>
        /// Routing policy action
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrsEntityStatusResourceActionResult> Actions;
        /// <summary>
        /// destination address of an IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrsEntityStatusResourceDestinationResult> Destinations;
        /// <summary>
        /// Policy in reverse direction.
        /// </summary>
        public readonly bool IsBidirectional;
        /// <summary>
        /// priority of routing policy
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Routing policy IP protocol parameters
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrsEntityStatusResourceProtocolParameterResult> ProtocolParameters;
        /// <summary>
        /// Protocol type of routing policy
        /// </summary>
        public readonly string ProtocolType;
        public readonly ImmutableArray<Outputs.GetPbrsEntityStatusResourceRoutingPolicyCounterResult> RoutingPolicyCounters;
        /// <summary>
        /// source address of an IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrsEntityStatusResourceSourceResult> Sources;
        /// <summary>
        /// Reference to VPC
        /// </summary>
        public readonly ImmutableDictionary<string, string> VpcReference;

        [OutputConstructor]
        private GetPbrsEntityStatusResourceResult(
            ImmutableArray<Outputs.GetPbrsEntityStatusResourceActionResult> actions,

            ImmutableArray<Outputs.GetPbrsEntityStatusResourceDestinationResult> destinations,

            bool isBidirectional,

            int priority,

            ImmutableArray<Outputs.GetPbrsEntityStatusResourceProtocolParameterResult> protocolParameters,

            string protocolType,

            ImmutableArray<Outputs.GetPbrsEntityStatusResourceRoutingPolicyCounterResult> routingPolicyCounters,

            ImmutableArray<Outputs.GetPbrsEntityStatusResourceSourceResult> sources,

            ImmutableDictionary<string, string> vpcReference)
        {
            Actions = actions;
            Destinations = destinations;
            IsBidirectional = isBidirectional;
            Priority = priority;
            ProtocolParameters = protocolParameters;
            ProtocolType = protocolType;
            RoutingPolicyCounters = routingPolicyCounters;
            Sources = sources;
            VpcReference = vpcReference;
        }
    }
}
