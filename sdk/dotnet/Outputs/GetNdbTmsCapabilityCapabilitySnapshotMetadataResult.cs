// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbTmsCapabilityCapabilitySnapshotMetadataResult
    {
        public readonly bool Async;
        public readonly int CurationRetryCount;
        public readonly ImmutableDictionary<string, string> DeregisterInfo;
        public readonly string FromTimestamp;
        public readonly ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotMetadataInfoResult> Infos;
        public readonly string LastReplicationRetyrSourceSnapshotId;
        public readonly ImmutableArray<string> OperationsUsingSnapshots;
        public readonly int ReplicationRetryCount;
        public readonly ImmutableDictionary<string, string> SecureInfo;
        public readonly bool StandBy;
        public readonly string ToTimestamp;

        [OutputConstructor]
        private GetNdbTmsCapabilityCapabilitySnapshotMetadataResult(
            bool async,

            int curationRetryCount,

            ImmutableDictionary<string, string> deregisterInfo,

            string fromTimestamp,

            ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotMetadataInfoResult> infos,

            string lastReplicationRetyrSourceSnapshotId,

            ImmutableArray<string> operationsUsingSnapshots,

            int replicationRetryCount,

            ImmutableDictionary<string, string> secureInfo,

            bool standBy,

            string toTimestamp)
        {
            Async = async;
            CurationRetryCount = curationRetryCount;
            DeregisterInfo = deregisterInfo;
            FromTimestamp = fromTimestamp;
            Infos = infos;
            LastReplicationRetyrSourceSnapshotId = lastReplicationRetyrSourceSnapshotId;
            OperationsUsingSnapshots = operationsUsingSnapshots;
            ReplicationRetryCount = replicationRetryCount;
            SecureInfo = secureInfo;
            StandBy = standBy;
            ToTimestamp = toTimestamp;
        }
    }
}
