// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetPbrV2PolicyPolicyActionRerouteParamResult
    {
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamEgressServiceIpResult> EgressServiceIps;
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamIngressServiceIpResult> IngressServiceIps;
        /// <summary>
        /// Type of fallback action in reroute case when service VM is down.
        /// </summary>
        public readonly string RerouteFallbackAction;
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamServiceIpResult> ServiceIps;

        [OutputConstructor]
        private GetPbrV2PolicyPolicyActionRerouteParamResult(
            ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamEgressServiceIpResult> egressServiceIps,

            ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamIngressServiceIpResult> ingressServiceIps,

            string rerouteFallbackAction,

            ImmutableArray<Outputs.GetPbrV2PolicyPolicyActionRerouteParamServiceIpResult> serviceIps)
        {
            EgressServiceIps = egressServiceIps;
            IngressServiceIps = ingressServiceIps;
            RerouteFallbackAction = rerouteFallbackAction;
            ServiceIps = serviceIps;
        }
    }
}
