// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetStorageContainersV2StorageContainerResult
    {
        public readonly string AffinityHostExtId;
        public readonly string CacheDeduplication;
        public readonly string ClusterExtId;
        public readonly string ClusterName;
        public readonly int CompressionDelaySecs;
        public readonly string ContainerExtId;
        public readonly string ErasureCode;
        public readonly int ErasureCodeDelaySecs;
        public readonly string ExtId;
        public readonly bool HasHigherEcFaultDomainPreference;
        public readonly bool IsCompressionEnabled;
        public readonly bool IsEncrypted;
        public readonly bool IsInlineEcEnabled;
        public readonly bool IsInternal;
        public readonly bool IsMarkedForRemoval;
        public readonly bool IsNfsWhitelistInherited;
        public readonly bool IsSoftwareEncryptionEnabled;
        public readonly ImmutableArray<Outputs.GetStorageContainersV2StorageContainerLinkResult> Links;
        public readonly int LogicalAdvertisedCapacityBytes;
        public readonly int LogicalExplicitReservedCapacityBytes;
        public readonly int LogicalImplicitReservedCapacityBytes;
        public readonly int MaxCapacityBytes;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetStorageContainersV2StorageContainerNfsWhitelistAddressResult> NfsWhitelistAddresses;
        public readonly string OnDiskDedup;
        public readonly string OwnerExtId;
        public readonly int ReplicationFactor;
        public readonly string StoragePoolExtId;
        public readonly string TenantId;

        [OutputConstructor]
        private GetStorageContainersV2StorageContainerResult(
            string affinityHostExtId,

            string cacheDeduplication,

            string clusterExtId,

            string clusterName,

            int compressionDelaySecs,

            string containerExtId,

            string erasureCode,

            int erasureCodeDelaySecs,

            string extId,

            bool hasHigherEcFaultDomainPreference,

            bool isCompressionEnabled,

            bool isEncrypted,

            bool isInlineEcEnabled,

            bool isInternal,

            bool isMarkedForRemoval,

            bool isNfsWhitelistInherited,

            bool isSoftwareEncryptionEnabled,

            ImmutableArray<Outputs.GetStorageContainersV2StorageContainerLinkResult> links,

            int logicalAdvertisedCapacityBytes,

            int logicalExplicitReservedCapacityBytes,

            int logicalImplicitReservedCapacityBytes,

            int maxCapacityBytes,

            string name,

            ImmutableArray<Outputs.GetStorageContainersV2StorageContainerNfsWhitelistAddressResult> nfsWhitelistAddresses,

            string onDiskDedup,

            string ownerExtId,

            int replicationFactor,

            string storagePoolExtId,

            string tenantId)
        {
            AffinityHostExtId = affinityHostExtId;
            CacheDeduplication = cacheDeduplication;
            ClusterExtId = clusterExtId;
            ClusterName = clusterName;
            CompressionDelaySecs = compressionDelaySecs;
            ContainerExtId = containerExtId;
            ErasureCode = erasureCode;
            ErasureCodeDelaySecs = erasureCodeDelaySecs;
            ExtId = extId;
            HasHigherEcFaultDomainPreference = hasHigherEcFaultDomainPreference;
            IsCompressionEnabled = isCompressionEnabled;
            IsEncrypted = isEncrypted;
            IsInlineEcEnabled = isInlineEcEnabled;
            IsInternal = isInternal;
            IsMarkedForRemoval = isMarkedForRemoval;
            IsNfsWhitelistInherited = isNfsWhitelistInherited;
            IsSoftwareEncryptionEnabled = isSoftwareEncryptionEnabled;
            Links = links;
            LogicalAdvertisedCapacityBytes = logicalAdvertisedCapacityBytes;
            LogicalExplicitReservedCapacityBytes = logicalExplicitReservedCapacityBytes;
            LogicalImplicitReservedCapacityBytes = logicalImplicitReservedCapacityBytes;
            MaxCapacityBytes = maxCapacityBytes;
            Name = name;
            NfsWhitelistAddresses = nfsWhitelistAddresses;
            OnDiskDedup = onDiskDedup;
            OwnerExtId = ownerExtId;
            ReplicationFactor = replicationFactor;
            StoragePoolExtId = storagePoolExtId;
            TenantId = tenantId;
        }
    }
}
