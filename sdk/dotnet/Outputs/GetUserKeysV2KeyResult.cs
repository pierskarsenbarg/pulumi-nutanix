// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetUserKeysV2KeyResult
    {
        /// <summary>
        /// - External client to whom the given key is allocated.
        /// </summary>
        public readonly string AssignedTo;
        /// <summary>
        /// - User or service who created the key.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// - The creation time of the key.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// - The creation mechanism of this entity.
        /// </summary>
        public readonly string CreationType;
        /// <summary>
        /// - Brief description of the key.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// - The time when the key will expire.
        /// </summary>
        public readonly string ExpiryTime;
        /// <summary>
        /// The External Identifier of the User Group.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// - Details specific to type of the key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserKeysV2KeyKeyDetailResult> KeyDetails;
        /// <summary>
        /// - The type of key.
        /// </summary>
        public readonly string KeyType;
        /// <summary>
        /// - User who updated the key.
        /// </summary>
        public readonly string LastUpdatedBy;
        /// <summary>
        /// - The time when the key was updated.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// - The time when the key was last used.
        /// </summary>
        public readonly string LastUsedTime;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserKeysV2KeyLinkResult> Links;
        /// <summary>
        /// - Identifier for the key in the form of a name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// - The status of the key.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;
        public readonly string UserExtId;

        [OutputConstructor]
        private GetUserKeysV2KeyResult(
            string assignedTo,

            string createdBy,

            string createdTime,

            string creationType,

            string? description,

            string expiryTime,

            string extId,

            ImmutableArray<Outputs.GetUserKeysV2KeyKeyDetailResult> keyDetails,

            string keyType,

            string lastUpdatedBy,

            string lastUpdatedTime,

            string lastUsedTime,

            ImmutableArray<Outputs.GetUserKeysV2KeyLinkResult> links,

            string name,

            string status,

            string tenantId,

            string userExtId)
        {
            AssignedTo = assignedTo;
            CreatedBy = createdBy;
            CreatedTime = createdTime;
            CreationType = creationType;
            Description = description;
            ExpiryTime = expiryTime;
            ExtId = extId;
            KeyDetails = keyDetails;
            KeyType = keyType;
            LastUpdatedBy = lastUpdatedBy;
            LastUpdatedTime = lastUpdatedTime;
            LastUsedTime = lastUsedTime;
            Links = links;
            Name = name;
            Status = status;
            TenantId = tenantId;
            UserExtId = userExtId;
        }
    }
}
