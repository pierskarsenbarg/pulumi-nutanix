// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class NdbRegisterDatabasePostgressInfo
    {
        /// <summary>
        /// allow multiple databases. Default is true
        /// </summary>
        public readonly bool? AllowMultipleDatabases;
        /// <summary>
        /// backup policy of database. Default is prefer_secondary.
        /// </summary>
        public readonly string? BackupPolicy;
        /// <summary>
        /// name of the database server VM on which the instance you want to register is running.
        /// </summary>
        public readonly string DbName;
        /// <summary>
        /// database password
        /// </summary>
        public readonly string DbPassword;
        /// <summary>
        /// username of the NDB drive user account that has sudo access.
        /// </summary>
        public readonly string? DbUser;
        /// <summary>
        /// listner port of database
        /// </summary>
        public readonly string ListenerPort;
        /// <summary>
        /// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
        /// </summary>
        public readonly string PostgresSoftwareHome;
        /// <summary>
        /// path to the directory in which the PostgreSQL software is installed.
        /// </summary>
        public readonly string? SoftwareHome;
        /// <summary>
        /// switch log of database. Default is true
        /// </summary>
        public readonly bool? SwitchLog;
        /// <summary>
        /// VM IP of the database server VM on which the instance you want to register is running.
        /// </summary>
        public readonly string? VmIp;

        [OutputConstructor]
        private NdbRegisterDatabasePostgressInfo(
            bool? allowMultipleDatabases,

            string? backupPolicy,

            string dbName,

            string dbPassword,

            string? dbUser,

            string listenerPort,

            string postgresSoftwareHome,

            string? softwareHome,

            bool? switchLog,

            string? vmIp)
        {
            AllowMultipleDatabases = allowMultipleDatabases;
            BackupPolicy = backupPolicy;
            DbName = dbName;
            DbPassword = dbPassword;
            DbUser = dbUser;
            ListenerPort = listenerPort;
            PostgresSoftwareHome = postgresSoftwareHome;
            SoftwareHome = softwareHome;
            SwitchLog = switchLog;
            VmIp = vmIp;
        }
    }
}
