// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootResult
    {
        /// <summary>
        /// Boot Device object
        /// * `boot_device.boot_device_disk`: Disk address.
        /// * `boot_device.boot_device_disk.disk_address.bus_type`: Bus type for the device
        /// * `boot_device.boot_device_disk.disk_address.index`: Device index on the bus. This field is ignored unless the bus details are specified.
        /// 
        /// * `boot_device.boot_device_nic`: Disk Nic address.
        /// * `boot_device.boot_device_nic.mac_address`: mac address
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceResult> BootDevices;
        /// <summary>
        /// Indicates the order of device types in which the VM should try to boot from. If the boot device order is not provided the system will decide an appropriate boot device order.
        /// </summary>
        public readonly ImmutableArray<string> BootOrders;
        /// <summary>
        /// Indicate whether to enable secure boot or not
        /// </summary>
        public readonly bool IsSecureBootEnabled;
        /// <summary>
        /// Configuration for NVRAM to be presented to the VM.
        /// * `nvram_device.backing_storage_info`: Storage provided by Nutanix ADSF
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceResult> NvramDevices;

        [OutputConstructor]
        private GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootResult(
            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootBootDeviceResult> bootDevices,

            ImmutableArray<string> bootOrders,

            bool isSecureBootEnabled,

            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecBootConfigUefiBootNvramDeviceResult> nvramDevices)
        {
            BootDevices = bootDevices;
            BootOrders = bootOrders;
            IsSecureBootEnabled = isSecureBootEnabled;
            NvramDevices = nvramDevices;
        }
    }
}
