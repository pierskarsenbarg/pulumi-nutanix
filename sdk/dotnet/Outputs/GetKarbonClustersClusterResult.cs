// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetKarbonClustersClusterResult
    {
        public readonly string DeploymentType;
        /// <summary>
        /// - Configuration of the node pools that the nodes in the etcd cluster belong to. The etcd nodes require a minimum of 8,192 MiB memory and 409,60 MiB disk space.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKarbonClustersClusterEtcdNodePoolResult> EtcdNodePools;
        public readonly string KubeapiServerIpv4Address;
        /// <summary>
        /// - .
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKarbonClustersClusterMasterNodePoolResult> MasterNodePools;
        /// <summary>
        /// - Unique name of the node pool.
        /// </summary>
        public readonly string Name;
        public readonly string Status;
        public readonly string Uuid;
        /// <summary>
        /// - K8s version of the cluster.
        /// </summary>
        public readonly string Version;
        public readonly ImmutableArray<Outputs.GetKarbonClustersClusterWorkerNodePoolResult> WorkerNodePools;

        [OutputConstructor]
        private GetKarbonClustersClusterResult(
            string deploymentType,

            ImmutableArray<Outputs.GetKarbonClustersClusterEtcdNodePoolResult> etcdNodePools,

            string kubeapiServerIpv4Address,

            ImmutableArray<Outputs.GetKarbonClustersClusterMasterNodePoolResult> masterNodePools,

            string name,

            string status,

            string uuid,

            string version,

            ImmutableArray<Outputs.GetKarbonClustersClusterWorkerNodePoolResult> workerNodePools)
        {
            DeploymentType = deploymentType;
            EtcdNodePools = etcdNodePools;
            KubeapiServerIpv4Address = kubeapiServerIpv4Address;
            MasterNodePools = masterNodePools;
            Name = name;
            Status = status;
            Uuid = uuid;
            Version = version;
            WorkerNodePools = workerNodePools;
        }
    }
}
