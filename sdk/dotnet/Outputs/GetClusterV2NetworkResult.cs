// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetClusterV2NetworkResult
    {
        /// <summary>
        /// - Params associated to the backplane network segmentation. This is part of payload for cluster create operation only.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkBackplaneResult> Backplanes;
        /// <summary>
        /// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkExternalAddressResult> ExternalAddresses;
        /// <summary>
        /// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkExternalDataServicesIpResult> ExternalDataServicesIps;
        /// <summary>
        /// - Cluster external subnet address.
        /// </summary>
        public readonly string ExternalSubnet;
        /// <summary>
        /// - Fully Qualified Domain Name (FQDN) of the server.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// - List of HTTP Proxy server configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkHttpProxyListResult> HttpProxyLists;
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkHttpProxyWhiteListResult> HttpProxyWhiteLists;
        /// <summary>
        /// - Cluster internal subnet address.
        /// </summary>
        public readonly string InternalSubnet;
        /// <summary>
        /// - Key management server type.
        /// Valid values are:
        /// - "PRISM_CENTRAL"	Prism Central management server.
        /// - "EXTERNAL"	External management server.
        /// - "LOCAL"	Local management server.
        /// </summary>
        public readonly string KeyManagementServerType;
        /// <summary>
        /// - Management server information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkManagementServerResult> ManagementServers;
        /// <summary>
        /// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkMasqueradingIpResult> MasqueradingIps;
        /// <summary>
        /// - The port to connect to the cluster when using masquerading IP.
        /// </summary>
        public readonly string MasqueradingPort;
        /// <summary>
        /// - List of name servers on a cluster. This is part of payload for both cluster create &amp; update operations. For create operation, only ipv4 address / fqdn values are supported currently
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkNameServerIpListResult> NameServerIpLists;
        public readonly ImmutableArray<string> NfsSubnetWhiteLists;
        /// <summary>
        /// - List of NTP servers on a cluster. This is part of payload for both cluster create &amp; update operations. For create operation, only ipv4 address / fqdn values are supported currently.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkNtpServerIpListResult> NtpServerIpLists;
        /// <summary>
        /// - SMTP servers on a cluster. This is part of payload for cluster update operation only.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterV2NetworkSmtpServerResult> SmtpServers;

        [OutputConstructor]
        private GetClusterV2NetworkResult(
            ImmutableArray<Outputs.GetClusterV2NetworkBackplaneResult> backplanes,

            ImmutableArray<Outputs.GetClusterV2NetworkExternalAddressResult> externalAddresses,

            ImmutableArray<Outputs.GetClusterV2NetworkExternalDataServicesIpResult> externalDataServicesIps,

            string externalSubnet,

            string fqdn,

            ImmutableArray<Outputs.GetClusterV2NetworkHttpProxyListResult> httpProxyLists,

            ImmutableArray<Outputs.GetClusterV2NetworkHttpProxyWhiteListResult> httpProxyWhiteLists,

            string internalSubnet,

            string keyManagementServerType,

            ImmutableArray<Outputs.GetClusterV2NetworkManagementServerResult> managementServers,

            ImmutableArray<Outputs.GetClusterV2NetworkMasqueradingIpResult> masqueradingIps,

            string masqueradingPort,

            ImmutableArray<Outputs.GetClusterV2NetworkNameServerIpListResult> nameServerIpLists,

            ImmutableArray<string> nfsSubnetWhiteLists,

            ImmutableArray<Outputs.GetClusterV2NetworkNtpServerIpListResult> ntpServerIpLists,

            ImmutableArray<Outputs.GetClusterV2NetworkSmtpServerResult> smtpServers)
        {
            Backplanes = backplanes;
            ExternalAddresses = externalAddresses;
            ExternalDataServicesIps = externalDataServicesIps;
            ExternalSubnet = externalSubnet;
            Fqdn = fqdn;
            HttpProxyLists = httpProxyLists;
            HttpProxyWhiteLists = httpProxyWhiteLists;
            InternalSubnet = internalSubnet;
            KeyManagementServerType = keyManagementServerType;
            ManagementServers = managementServers;
            MasqueradingIps = masqueradingIps;
            MasqueradingPort = masqueradingPort;
            NameServerIpLists = nameServerIpLists;
            NfsSubnetWhiteLists = nfsSubnetWhiteLists;
            NtpServerIpLists = ntpServerIpLists;
            SmtpServers = smtpServers;
        }
    }
}
