// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetFoundationCentralImagedClustersListImagedClusterClusterStatusNodeProgressDetailResult
    {
        /// <summary>
        /// UUID of the node.
        /// </summary>
        public readonly string ImagedNodeUuid;
        /// <summary>
        /// Describes whether imaging has stopped. True indicates that process has stopped. False indicates that process is still going on. This field will only be used by phoenix nodes to update FC.
        /// </summary>
        public readonly bool ImagingStopped;
        /// <summary>
        /// Denotes whether the remote nodes has picked up the cluster creation intent.
        /// </summary>
        public readonly bool IntentPickedUp;
        /// <summary>
        /// List of messages for the client based on process state.
        /// </summary>
        public readonly ImmutableArray<string> MessageLists;
        /// <summary>
        /// Percent completion of cluster creation process.
        /// </summary>
        public readonly double PercentComplete;
        /// <summary>
        /// Current status of cluster creation process.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetFoundationCentralImagedClustersListImagedClusterClusterStatusNodeProgressDetailResult(
            string imagedNodeUuid,

            bool imagingStopped,

            bool intentPickedUp,

            ImmutableArray<string> messageLists,

            double percentComplete,

            string status)
        {
            ImagedNodeUuid = imagedNodeUuid;
            ImagingStopped = imagingStopped;
            IntentPickedUp = intentPickedUp;
            MessageLists = messageLists;
            PercentComplete = percentComplete;
            Status = status;
        }
    }
}
