// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetProtectionPolicyV2ReplicationConfigurationScheduleResult
    {
        /// <summary>
        /// - The Recovery point objective of the schedule in seconds and specified in multiple of 60 seconds. Only following RPO values can be provided for rollup retention type:
        /// - Minute(s): 1, 2, 3, 4, 5, 6, 10, 12, 15
        /// - Hour(s): 1, 2, 3, 4, 6, 8, 12
        /// - Day(s): 1
        /// - Week(s): 1, 2
        /// </summary>
        public readonly int? RecoveryPointObjectiveTimeSeconds;
        /// <summary>
        /// - Type of recovery point.
        /// * `CRASH_CONSISTENT`: Crash-consistent Recovery points capture all the VM and application level details.
        /// * `APP_CONSISTENT`: Application-consistent Recovery points can capture all the data stored in the memory and also the in-progress transaction details.
        /// </summary>
        public readonly string? RecoveryPointType;
        /// <summary>
        /// - Specifies the retention policy for the recovery point schedule.
        /// </summary>
        public readonly Outputs.GetProtectionPolicyV2ReplicationConfigurationScheduleRetentionResult? Retention;
        /// <summary>
        /// - Represents the protection start time for the new entities added to the policy after the policy is created in h:m format. The values must be between 00h:00m and 23h:59m and in UTC timezone. It specifies the time when the first snapshot is taken and replicated for any entity added to the policy. If this is not specified, the snapshot is taken immediately and replicated for any new entity added to the policy.
        /// </summary>
        public readonly string? StartTime;
        /// <summary>
        /// - Auto suspend timeout if there is a connection failure between locations for synchronous replication. If this value is not set, then the policy will not be suspended.
        /// </summary>
        public readonly int? SyncReplicationAutoSuspendTimeoutSeconds;

        [OutputConstructor]
        private GetProtectionPolicyV2ReplicationConfigurationScheduleResult(
            int? recoveryPointObjectiveTimeSeconds,

            string? recoveryPointType,

            Outputs.GetProtectionPolicyV2ReplicationConfigurationScheduleRetentionResult? retention,

            string? startTime,

            int? syncReplicationAutoSuspendTimeoutSeconds)
        {
            RecoveryPointObjectiveTimeSeconds = recoveryPointObjectiveTimeSeconds;
            RecoveryPointType = recoveryPointType;
            Retention = retention;
            StartTime = startTime;
            SyncReplicationAutoSuspendTimeoutSeconds = syncReplicationAutoSuspendTimeoutSeconds;
        }
    }
}
