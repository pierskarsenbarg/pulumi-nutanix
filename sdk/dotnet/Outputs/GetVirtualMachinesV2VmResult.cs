// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVirtualMachinesV2VmResult
    {
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmApcConfigResult> ApcConfigs;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmAvailabilityZoneResult> AvailabilityZones;
        public readonly string BiosUuid;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmBootConfigResult> BootConfigs;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmCategoryResult> Categories;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmCdRomResult> CdRoms;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmClusterResult> Clusters;
        public readonly string CreateTime;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmDiskResult> Disks;
        public readonly ImmutableArray<string> EnabledCpuFeatures;
        public readonly string ExtId;
        public readonly string GenerationUuid;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmGpusResult> Gpuses;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmGuestCustomizationResult> GuestCustomizations;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmGuestToolResult> GuestTools;
        public readonly string HardwareClockTimezone;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmHostResult> Hosts;
        public readonly bool IsAgentVm;
        public readonly bool IsBrandingEnabled;
        public readonly bool IsCpuHotplugEnabled;
        public readonly bool IsCpuPassthroughEnabled;
        public readonly bool IsGpuConsoleEnabled;
        public readonly bool IsMemoryOvercommitEnabled;
        public readonly bool IsScsiControllerEnabled;
        public readonly bool IsVcpuHardPinningEnabled;
        public readonly bool IsVgaConsoleEnabled;
        public readonly string MachineType;
        public readonly int MemorySizeBytes;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmNicResult> Nics;
        public readonly int NumCoresPerSocket;
        public readonly int NumNumaNodes;
        public readonly int NumSockets;
        public readonly int NumThreadsPerCore;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmOwnershipInfoResult> OwnershipInfos;
        public readonly string PowerState;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmProtectionPolicyStateResult> ProtectionPolicyStates;
        public readonly string ProtectionType;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmSerialPortResult> SerialPorts;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmSourceResult> Sources;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmStorageConfigResult> StorageConfigs;
        public readonly string UpdateTime;
        public readonly ImmutableArray<Outputs.GetVirtualMachinesV2VmVtpmConfigResult> VtpmConfigs;

        [OutputConstructor]
        private GetVirtualMachinesV2VmResult(
            ImmutableArray<Outputs.GetVirtualMachinesV2VmApcConfigResult> apcConfigs,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmAvailabilityZoneResult> availabilityZones,

            string biosUuid,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmBootConfigResult> bootConfigs,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmCategoryResult> categories,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmCdRomResult> cdRoms,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmClusterResult> clusters,

            string createTime,

            string description,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmDiskResult> disks,

            ImmutableArray<string> enabledCpuFeatures,

            string extId,

            string generationUuid,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmGpusResult> gpuses,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmGuestCustomizationResult> guestCustomizations,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmGuestToolResult> guestTools,

            string hardwareClockTimezone,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmHostResult> hosts,

            bool isAgentVm,

            bool isBrandingEnabled,

            bool isCpuHotplugEnabled,

            bool isCpuPassthroughEnabled,

            bool isGpuConsoleEnabled,

            bool isMemoryOvercommitEnabled,

            bool isScsiControllerEnabled,

            bool isVcpuHardPinningEnabled,

            bool isVgaConsoleEnabled,

            string machineType,

            int memorySizeBytes,

            string name,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmNicResult> nics,

            int numCoresPerSocket,

            int numNumaNodes,

            int numSockets,

            int numThreadsPerCore,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmOwnershipInfoResult> ownershipInfos,

            string powerState,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmProtectionPolicyStateResult> protectionPolicyStates,

            string protectionType,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmSerialPortResult> serialPorts,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmSourceResult> sources,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmStorageConfigResult> storageConfigs,

            string updateTime,

            ImmutableArray<Outputs.GetVirtualMachinesV2VmVtpmConfigResult> vtpmConfigs)
        {
            ApcConfigs = apcConfigs;
            AvailabilityZones = availabilityZones;
            BiosUuid = biosUuid;
            BootConfigs = bootConfigs;
            Categories = categories;
            CdRoms = cdRoms;
            Clusters = clusters;
            CreateTime = createTime;
            Description = description;
            Disks = disks;
            EnabledCpuFeatures = enabledCpuFeatures;
            ExtId = extId;
            GenerationUuid = generationUuid;
            Gpuses = gpuses;
            GuestCustomizations = guestCustomizations;
            GuestTools = guestTools;
            HardwareClockTimezone = hardwareClockTimezone;
            Hosts = hosts;
            IsAgentVm = isAgentVm;
            IsBrandingEnabled = isBrandingEnabled;
            IsCpuHotplugEnabled = isCpuHotplugEnabled;
            IsCpuPassthroughEnabled = isCpuPassthroughEnabled;
            IsGpuConsoleEnabled = isGpuConsoleEnabled;
            IsMemoryOvercommitEnabled = isMemoryOvercommitEnabled;
            IsScsiControllerEnabled = isScsiControllerEnabled;
            IsVcpuHardPinningEnabled = isVcpuHardPinningEnabled;
            IsVgaConsoleEnabled = isVgaConsoleEnabled;
            MachineType = machineType;
            MemorySizeBytes = memorySizeBytes;
            Name = name;
            Nics = nics;
            NumCoresPerSocket = numCoresPerSocket;
            NumNumaNodes = numNumaNodes;
            NumSockets = numSockets;
            NumThreadsPerCore = numThreadsPerCore;
            OwnershipInfos = ownershipInfos;
            PowerState = powerState;
            ProtectionPolicyStates = protectionPolicyStates;
            ProtectionType = protectionType;
            SerialPorts = serialPorts;
            Sources = sources;
            StorageConfigs = storageConfigs;
            UpdateTime = updateTime;
            VtpmConfigs = vtpmConfigs;
        }
    }
}
