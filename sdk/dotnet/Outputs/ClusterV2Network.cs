// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class ClusterV2Network
    {
        /// <summary>
        /// Params associated to the backplane network segmentation. This is part of payload for cluster(create operation only.)
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkBackplane> Backplanes;
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkExternalAddress> ExternalAddresses;
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkExternalDataServicesIp> ExternalDataServicesIps;
        public readonly string? ExternalSubnet;
        /// <summary>
        /// Cluster fully qualified domain name. This is part of payload for cluster update operation only.
        /// </summary>
        public readonly string? Fqdn;
        /// <summary>
        /// List of HTTP Proxy server configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkHttpProxyList> HttpProxyLists;
        public readonly ImmutableArray<Outputs.ClusterV2NetworkHttpProxyWhiteList> HttpProxyWhiteLists;
        public readonly string? InternalSubnet;
        /// <summary>
        /// Management server type.
        /// Valid values are:
        /// - "PRISM_CENTRAL"	Prism Central management server.
        /// - "EXTERNAL"	External management server.
        /// - "LOCAL"	Local management server.
        /// </summary>
        public readonly string? KeyManagementServerType;
        /// <summary>
        /// Management server information.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkManagementServer> ManagementServers;
        /// <summary>
        /// An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkMasqueradingIp> MasqueradingIps;
        public readonly string? MasqueradingPort;
        /// <summary>
        /// List of name servers on a cluster. This is part of payload for both cluster create &amp; update operations. For create operation, only ipv4 address / fqdn values are supported currently.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkNameServerIpList> NameServerIpLists;
        /// <summary>
        /// NFS subnet whitelist addresses. This is part of payload for cluster update operation only.
        /// </summary>
        public readonly ImmutableArray<string> NfsSubnetWhiteLists;
        /// <summary>
        /// List of NTP servers on a cluster. This is part of payload for both cluster create &amp; update operations. For create operation, only ipv4 address / fqdn values are supported currently.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkNtpServerIpList> NtpServerIpLists;
        /// <summary>
        /// SMTP servers on a cluster. This is part of payload for cluster update operation only.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2NetworkSmtpServer> SmtpServers;

        [OutputConstructor]
        private ClusterV2Network(
            ImmutableArray<Outputs.ClusterV2NetworkBackplane> backplanes,

            ImmutableArray<Outputs.ClusterV2NetworkExternalAddress> externalAddresses,

            ImmutableArray<Outputs.ClusterV2NetworkExternalDataServicesIp> externalDataServicesIps,

            string? externalSubnet,

            string? fqdn,

            ImmutableArray<Outputs.ClusterV2NetworkHttpProxyList> httpProxyLists,

            ImmutableArray<Outputs.ClusterV2NetworkHttpProxyWhiteList> httpProxyWhiteLists,

            string? internalSubnet,

            string? keyManagementServerType,

            ImmutableArray<Outputs.ClusterV2NetworkManagementServer> managementServers,

            ImmutableArray<Outputs.ClusterV2NetworkMasqueradingIp> masqueradingIps,

            string? masqueradingPort,

            ImmutableArray<Outputs.ClusterV2NetworkNameServerIpList> nameServerIpLists,

            ImmutableArray<string> nfsSubnetWhiteLists,

            ImmutableArray<Outputs.ClusterV2NetworkNtpServerIpList> ntpServerIpLists,

            ImmutableArray<Outputs.ClusterV2NetworkSmtpServer> smtpServers)
        {
            Backplanes = backplanes;
            ExternalAddresses = externalAddresses;
            ExternalDataServicesIps = externalDataServicesIps;
            ExternalSubnet = externalSubnet;
            Fqdn = fqdn;
            HttpProxyLists = httpProxyLists;
            HttpProxyWhiteLists = httpProxyWhiteLists;
            InternalSubnet = internalSubnet;
            KeyManagementServerType = keyManagementServerType;
            ManagementServers = managementServers;
            MasqueradingIps = masqueradingIps;
            MasqueradingPort = masqueradingPort;
            NameServerIpLists = nameServerIpLists;
            NfsSubnetWhiteLists = nfsSubnetWhiteLists;
            NtpServerIpLists = ntpServerIpLists;
            SmtpServers = smtpServers;
        }
    }
}
