// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVirtualMachineGpuListResult
    {
        public readonly int DeviceId;
        /// <summary>
        /// Fraction of the physical GPU assigned.
        /// * `mode`: - The mode of this GPU.
        /// * `num_virtual_display_heads`: - Number of supported virtual display heads.
        /// * `guest_driver_version`: - Last determined guest driver version.
        /// * `device_id`: - (Computed) The device ID of the GPU.
        /// </summary>
        public readonly int Fraction;
        public readonly int FrameBufferSizeMib;
        public readonly string GuestDriverVersion;
        public readonly string Mode;
        public readonly string Name;
        public readonly int NumVirtualDisplayHeads;
        /// <summary>
        /// GPU {segment:bus:device:function} (sbdf) address if assigned.
        /// </summary>
        public readonly string PciAddress;
        public readonly string Uuid;
        public readonly string Vendor;

        [OutputConstructor]
        private GetVirtualMachineGpuListResult(
            int deviceId,

            int fraction,

            int frameBufferSizeMib,

            string guestDriverVersion,

            string mode,

            string name,

            int numVirtualDisplayHeads,

            string pciAddress,

            string uuid,

            string vendor)
        {
            DeviceId = deviceId;
            Fraction = fraction;
            FrameBufferSizeMib = frameBufferSizeMib;
            GuestDriverVersion = guestDriverVersion;
            Mode = mode;
            Name = name;
            NumVirtualDisplayHeads = numVirtualDisplayHeads;
            PciAddress = pciAddress;
            Uuid = uuid;
            Vendor = vendor;
        }
    }
}
