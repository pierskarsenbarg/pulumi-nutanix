// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoResult
    {
        /// <summary>
        /// The IP address configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigResult> Ipv4Configs;
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoIpv4InfoResult> Ipv4Infos;
        /// <summary>
        /// The network function chain associates with the NIC. Only valid if nic_type is NORMAL_NIC.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoNetworkFunctionChainResult> NetworkFunctionChains;
        /// <summary>
        /// The type of this Network function NIC. Defaults to INGRESS.
        /// </summary>
        public readonly string NetworkFunctionNicType;
        /// <summary>
        /// NIC type. Defaults to NORMAL_NIC.
        /// </summary>
        public readonly string NicType;
        /// <summary>
        /// Indicates whether an unknown unicast traffic is forwarded to this NIC or not. This is applicable only for the NICs on the overlay subnets.
        /// </summary>
        public readonly bool ShouldAllowUnknownMacs;
        /// <summary>
        /// Network identifier for this adapter. Only valid if nic_type is NORMAL_NIC or DIRECT_NIC
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoSubnetResult> Subnets;
        /// <summary>
        /// List of networks to trunk if VLAN mode is marked as TRUNKED. If empty and VLAN mode is set to TRUNKED, all the VLANs are trunked.
        /// </summary>
        public readonly ImmutableArray<int> TrunkedVlans;
        /// <summary>
        /// all the virtual NICs are created in ACCESS mode, which permits only one VLAN per virtual network. TRUNKED mode allows multiple VLANs on a single VM NIC for network-aware user VMs.
        /// </summary>
        public readonly string VlanMode;

        [OutputConstructor]
        private GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoResult(
            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoIpv4ConfigResult> ipv4Configs,

            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoIpv4InfoResult> ipv4Infos,

            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoNetworkFunctionChainResult> networkFunctionChains,

            string networkFunctionNicType,

            string nicType,

            bool shouldAllowUnknownMacs,

            ImmutableArray<Outputs.GetTemplatesV2TemplateTemplateVersionSpecVmSpecNicNetworkInfoSubnetResult> subnets,

            ImmutableArray<int> trunkedVlans,

            string vlanMode)
        {
            Ipv4Configs = ipv4Configs;
            Ipv4Infos = ipv4Infos;
            NetworkFunctionChains = networkFunctionChains;
            NetworkFunctionNicType = networkFunctionNicType;
            NicType = nicType;
            ShouldAllowUnknownMacs = shouldAllowUnknownMacs;
            Subnets = subnets;
            TrunkedVlans = trunkedVlans;
            VlanMode = vlanMode;
        }
    }
}
