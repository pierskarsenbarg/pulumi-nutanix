// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetRecoveryPointV2VmRecoveryPointResult
    {
        /// <summary>
        /// User-defined application-consistent properties for the recovery point.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointApplicationConsistentPropertyResult> ApplicationConsistentProperties;
        /// <summary>
        /// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
        /// </summary>
        public readonly string ConsistencyGroupExtId;
        /// <summary>
        /// The UTC date and time in ISO-8601 format when the Recovery point is created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// array of disk recovery points.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointDiskRecoveryPointResult> DiskRecoveryPoints;
        /// <summary>
        /// The UTC date and time in ISO-8601 format when the current Recovery point expires and will be garbage collected.
        /// </summary>
        public readonly string ExpirationTime;
        /// <summary>
        /// recovery point UUID
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointLinkResult> Links;
        /// <summary>
        /// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
        /// </summary>
        public readonly string LocationAgnosticId;
        /// <summary>
        /// The name of the Recovery point.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type of the Recovery point.
        /// </summary>
        public readonly string RecoveryPointType;
        /// <summary>
        /// The status of the Recovery point, which indicates whether this Recovery point is fit to be consumed.
        /// * supported values:
        /// * `COMPLETE`: -  The Recovery point is in a complete state and ready to be consumed.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
        /// </summary>
        public readonly ImmutableArray<string> VmCategories;
        /// <summary>
        /// VM external identifier which is captured as a part of this recovery point.
        /// </summary>
        public readonly string VmExtId;

        [OutputConstructor]
        private GetRecoveryPointV2VmRecoveryPointResult(
            ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointApplicationConsistentPropertyResult> applicationConsistentProperties,

            string consistencyGroupExtId,

            string creationTime,

            ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointDiskRecoveryPointResult> diskRecoveryPoints,

            string expirationTime,

            string extId,

            ImmutableArray<Outputs.GetRecoveryPointV2VmRecoveryPointLinkResult> links,

            string locationAgnosticId,

            string name,

            string recoveryPointType,

            string status,

            string tenantId,

            ImmutableArray<string> vmCategories,

            string vmExtId)
        {
            ApplicationConsistentProperties = applicationConsistentProperties;
            ConsistencyGroupExtId = consistencyGroupExtId;
            CreationTime = creationTime;
            DiskRecoveryPoints = diskRecoveryPoints;
            ExpirationTime = expirationTime;
            ExtId = extId;
            Links = links;
            LocationAgnosticId = locationAgnosticId;
            Name = name;
            RecoveryPointType = recoveryPointType;
            Status = status;
            TenantId = tenantId;
            VmCategories = vmCategories;
            VmExtId = vmExtId;
        }
    }
}
