// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbTimeMachineScheduleResult
    {
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleContinuousScheduleResult> ContinuousSchedules;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleDailyScheduleResult> DailySchedules;
        /// <summary>
        /// date created
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// date modified
        /// </summary>
        public readonly string DateModified;
        /// <summary>
        /// time machine description
        /// </summary>
        public readonly string Description;
        public readonly bool GlobalPolicy;
        /// <summary>
        /// time machine id
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleMonthlyScheduleResult> MonthlySchedules;
        /// <summary>
        /// time machine name
        /// </summary>
        public readonly string Name;
        public readonly string OwnerId;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleQuartelyScheduleResult> QuartelySchedules;
        public readonly int ReferenceCount;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleSnapshotTimeOfDayResult> SnapshotTimeOfDays;
        public readonly string StartTime;
        public readonly bool SystemPolicy;
        public readonly string TimeZone;
        public readonly string UniqueName;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleWeeklyScheduleResult> WeeklySchedules;
        public readonly ImmutableArray<Outputs.GetNdbTimeMachineScheduleYearlyScheduleResult> YearlySchedules;

        [OutputConstructor]
        private GetNdbTimeMachineScheduleResult(
            ImmutableArray<Outputs.GetNdbTimeMachineScheduleContinuousScheduleResult> continuousSchedules,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleDailyScheduleResult> dailySchedules,

            string dateCreated,

            string dateModified,

            string description,

            bool globalPolicy,

            string id,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleMonthlyScheduleResult> monthlySchedules,

            string name,

            string ownerId,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleQuartelyScheduleResult> quartelySchedules,

            int referenceCount,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleSnapshotTimeOfDayResult> snapshotTimeOfDays,

            string startTime,

            bool systemPolicy,

            string timeZone,

            string uniqueName,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleWeeklyScheduleResult> weeklySchedules,

            ImmutableArray<Outputs.GetNdbTimeMachineScheduleYearlyScheduleResult> yearlySchedules)
        {
            ContinuousSchedules = continuousSchedules;
            DailySchedules = dailySchedules;
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            GlobalPolicy = globalPolicy;
            Id = id;
            MonthlySchedules = monthlySchedules;
            Name = name;
            OwnerId = ownerId;
            QuartelySchedules = quartelySchedules;
            ReferenceCount = referenceCount;
            SnapshotTimeOfDays = snapshotTimeOfDays;
            StartTime = startTime;
            SystemPolicy = systemPolicy;
            TimeZone = timeZone;
            UniqueName = uniqueName;
            WeeklySchedules = weeklySchedules;
            YearlySchedules = yearlySchedules;
        }
    }
}
