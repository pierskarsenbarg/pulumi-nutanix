// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVirtualMachineV2BootConfigUefiBootResult
    {
        /// <summary>
        /// Boot Device object
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualMachineV2BootConfigUefiBootBootDeviceResult> BootDevices;
        /// <summary>
        /// Indicates the order of device types in which the VM should try to boot from. If the boot device order is not provided the system will decide an appropriate boot device order.
        /// </summary>
        public readonly ImmutableArray<string> BootOrders;
        /// <summary>
        /// Indicate whether to enable secure boot or not
        /// </summary>
        public readonly bool IsSecureBootEnabled;
        /// <summary>
        /// Configuration for NVRAM to be presented to the VM.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualMachineV2BootConfigUefiBootNvramDeviceResult> NvramDevices;

        [OutputConstructor]
        private GetVirtualMachineV2BootConfigUefiBootResult(
            ImmutableArray<Outputs.GetVirtualMachineV2BootConfigUefiBootBootDeviceResult> bootDevices,

            ImmutableArray<string> bootOrders,

            bool isSecureBootEnabled,

            ImmutableArray<Outputs.GetVirtualMachineV2BootConfigUefiBootNvramDeviceResult> nvramDevices)
        {
            BootDevices = bootDevices;
            BootOrders = bootOrders;
            IsSecureBootEnabled = isSecureBootEnabled;
            NvramDevices = nvramDevices;
        }
    }
}
