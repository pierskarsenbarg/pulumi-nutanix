// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVpcsV2VpcExternalSubnetResult
    {
        /// <summary>
        /// Maximum number of active gateway nodes for the VPC external subnet association.
        /// </summary>
        public readonly int ActiveGatewayCount;
        /// <summary>
        /// Reference of gateway nodes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcsV2VpcExternalSubnetActiveGatewayNodeResult> ActiveGatewayNodes;
        /// <summary>
        /// List of IP Addresses used for SNAT, if NAT is enabled on the external subnet. If NAT is not enabled, this specifies the IP address of the VPC port connected to the external gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcsV2VpcExternalSubnetExternalIpResult> ExternalIps;
        /// <summary>
        /// List of gateway nodes that can be used for external connectivity.
        /// </summary>
        public readonly ImmutableArray<string> GatewayNodes;
        /// <summary>
        /// External subnet reference.
        /// </summary>
        public readonly string SubnetReference;

        [OutputConstructor]
        private GetVpcsV2VpcExternalSubnetResult(
            int activeGatewayCount,

            ImmutableArray<Outputs.GetVpcsV2VpcExternalSubnetActiveGatewayNodeResult> activeGatewayNodes,

            ImmutableArray<Outputs.GetVpcsV2VpcExternalSubnetExternalIpResult> externalIps,

            ImmutableArray<string> gatewayNodes,

            string subnetReference)
        {
            ActiveGatewayCount = activeGatewayCount;
            ActiveGatewayNodes = activeGatewayNodes;
            ExternalIps = externalIps;
            GatewayNodes = gatewayNodes;
            SubnetReference = subnetReference;
        }
    }
}
