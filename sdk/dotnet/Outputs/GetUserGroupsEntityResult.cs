// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetUserGroupsEntityResult
    {
        public readonly ImmutableArray<Outputs.GetUserGroupsEntityAccessControlPolicyReferenceListResult> AccessControlPolicyReferenceLists;
        /// <summary>
        /// The version of the API.
        /// * `metadata`: - The user group kind metadata.
        /// * `categories`: - The Categories for the user group.
        /// * `owner_reference`: - The reference to a user.
        /// * `project_reference`: - The reference to a project.
        /// * `user_group_type`: - The type of the user group.
        /// * `display_name`: - The display name of the user group.
        /// * `directory_service_user_group`: - A Directory Service User Group.
        /// * `project_reference_list`: - A list of projects the user is part of. See #reference for more details.
        /// * `access_control_policy_reference_list`: - List of ACP references. See #reference for more details.
        /// * `state`: - The state of the entity.
        /// </summary>
        public readonly string ApiVersion;
        public readonly ImmutableArray<Outputs.GetUserGroupsEntityCategoryResult> Categories;
        public readonly ImmutableArray<Outputs.GetUserGroupsEntityDirectoryServiceUserGroupResult> DirectoryServiceUserGroups;
        public readonly string DisplayName;
        public readonly ImmutableDictionary<string, string> Metadata;
        public readonly ImmutableDictionary<string, string> OwnerReference;
        public readonly ImmutableDictionary<string, string>? ProjectReference;
        public readonly ImmutableArray<Outputs.GetUserGroupsEntityProjectReferenceListResult> ProjectReferenceLists;
        public readonly string State;
        public readonly string UserGroupType;

        [OutputConstructor]
        private GetUserGroupsEntityResult(
            ImmutableArray<Outputs.GetUserGroupsEntityAccessControlPolicyReferenceListResult> accessControlPolicyReferenceLists,

            string apiVersion,

            ImmutableArray<Outputs.GetUserGroupsEntityCategoryResult> categories,

            ImmutableArray<Outputs.GetUserGroupsEntityDirectoryServiceUserGroupResult> directoryServiceUserGroups,

            string displayName,

            ImmutableDictionary<string, string> metadata,

            ImmutableDictionary<string, string> ownerReference,

            ImmutableDictionary<string, string>? projectReference,

            ImmutableArray<Outputs.GetUserGroupsEntityProjectReferenceListResult> projectReferenceLists,

            string state,

            string userGroupType)
        {
            AccessControlPolicyReferenceLists = accessControlPolicyReferenceLists;
            ApiVersion = apiVersion;
            Categories = categories;
            DirectoryServiceUserGroups = directoryServiceUserGroups;
            DisplayName = displayName;
            Metadata = metadata;
            OwnerReference = ownerReference;
            ProjectReference = projectReference;
            ProjectReferenceLists = projectReferenceLists;
            State = state;
            UserGroupType = userGroupType;
        }
    }
}
