// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetVirtualMachineV2GpusResult
    {
        /// <summary>
        /// The device Id of the GPU.
        /// </summary>
        public readonly int DeviceId;
        /// <summary>
        /// Represents virtual machine UUID
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// Fraction of the physical GPU assigned.
        /// </summary>
        public readonly int Fraction;
        /// <summary>
        /// GPU frame buffer size in bytes.
        /// </summary>
        public readonly int FrameBufferSizeBytes;
        /// <summary>
        /// Last determined guest driver version.
        /// </summary>
        public readonly string GuestDriverVersion;
        /// <summary>
        /// The mode of this GPU.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// Name of the GPU resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of supported virtual display heads.
        /// </summary>
        public readonly int NumVirtualDisplayHeads;
        /// <summary>
        /// The (S)egment:(B)us:(D)evice.(F)unction hardware address. See
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVirtualMachineV2GpusPciAddressResult> PciAddresses;
        /// <summary>
        /// The vendor of the GPU.
        /// </summary>
        public readonly string Vendor;

        [OutputConstructor]
        private GetVirtualMachineV2GpusResult(
            int deviceId,

            string extId,

            int fraction,

            int frameBufferSizeBytes,

            string guestDriverVersion,

            string mode,

            string name,

            int numVirtualDisplayHeads,

            ImmutableArray<Outputs.GetVirtualMachineV2GpusPciAddressResult> pciAddresses,

            string vendor)
        {
            DeviceId = deviceId;
            ExtId = extId;
            Fraction = fraction;
            FrameBufferSizeBytes = frameBufferSizeBytes;
            GuestDriverVersion = guestDriverVersion;
            Mode = mode;
            Name = name;
            NumVirtualDisplayHeads = numVirtualDisplayHeads;
            PciAddresses = pciAddresses;
            Vendor = vendor;
        }
    }
}
