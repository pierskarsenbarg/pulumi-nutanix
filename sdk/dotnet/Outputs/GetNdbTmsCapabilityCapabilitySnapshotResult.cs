// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbTmsCapabilityCapabilitySnapshotResult
    {
        public readonly string AppInfoVersion;
        public readonly ImmutableArray<string> ApplicableTypes;
        public readonly string DatabaseNodeId;
        public readonly bool DatabaseSnapshot;
        public readonly string DateCreated;
        public readonly string DateModified;
        public readonly string DbserverId;
        public readonly string DbserverIp;
        public readonly string DbserverName;
        public readonly int DbserverStorageMetadataVersion;
        public readonly string Description;
        public readonly string FromTimestamp;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotLcmConfigResult> LcmConfigs;
        public readonly ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotMetadataResult> Metadatas;
        public readonly string Name;
        public readonly string NxClusterId;
        public readonly string OwnerId;
        public readonly bool ParentSnapshot;
        public readonly string ParentSnapshotId;
        public readonly bool Processed;
        /// <summary>
        /// List of all the properties
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotPropertyResult> Properties;
        public readonly string ProtectionDomainId;
        public readonly ImmutableArray<string> ReplicatedSnapshots;
        public readonly bool Santized;
        public readonly string SantizedFromSnapshotId;
        public readonly string SantizedSnapshots;
        public readonly string SnapshotFamily;
        public readonly double SnapshotSize;
        public readonly string SnapshotTimestamp;
        public readonly int SnapshotTimestampDate;
        public readonly string SnapshotUuid;
        public readonly bool SoftwareDatabaseSnapshot;
        public readonly string SoftwareSnapshot;
        public readonly string SoftwareSnapshotId;
        public readonly string Status;
        public readonly ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotTagResult> Tags;
        public readonly string TimeMachineId;
        public readonly string Timezone;
        public readonly string ToTimestamp;
        public readonly string Type;

        [OutputConstructor]
        private GetNdbTmsCapabilityCapabilitySnapshotResult(
            string appInfoVersion,

            ImmutableArray<string> applicableTypes,

            string databaseNodeId,

            bool databaseSnapshot,

            string dateCreated,

            string dateModified,

            string dbserverId,

            string dbserverIp,

            string dbserverName,

            int dbserverStorageMetadataVersion,

            string description,

            string fromTimestamp,

            string id,

            ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotLcmConfigResult> lcmConfigs,

            ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotMetadataResult> metadatas,

            string name,

            string nxClusterId,

            string ownerId,

            bool parentSnapshot,

            string parentSnapshotId,

            bool processed,

            ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotPropertyResult> properties,

            string protectionDomainId,

            ImmutableArray<string> replicatedSnapshots,

            bool santized,

            string santizedFromSnapshotId,

            string santizedSnapshots,

            string snapshotFamily,

            double snapshotSize,

            string snapshotTimestamp,

            int snapshotTimestampDate,

            string snapshotUuid,

            bool softwareDatabaseSnapshot,

            string softwareSnapshot,

            string softwareSnapshotId,

            string status,

            ImmutableArray<Outputs.GetNdbTmsCapabilityCapabilitySnapshotTagResult> tags,

            string timeMachineId,

            string timezone,

            string toTimestamp,

            string type)
        {
            AppInfoVersion = appInfoVersion;
            ApplicableTypes = applicableTypes;
            DatabaseNodeId = databaseNodeId;
            DatabaseSnapshot = databaseSnapshot;
            DateCreated = dateCreated;
            DateModified = dateModified;
            DbserverId = dbserverId;
            DbserverIp = dbserverIp;
            DbserverName = dbserverName;
            DbserverStorageMetadataVersion = dbserverStorageMetadataVersion;
            Description = description;
            FromTimestamp = fromTimestamp;
            Id = id;
            LcmConfigs = lcmConfigs;
            Metadatas = metadatas;
            Name = name;
            NxClusterId = nxClusterId;
            OwnerId = ownerId;
            ParentSnapshot = parentSnapshot;
            ParentSnapshotId = parentSnapshotId;
            Processed = processed;
            Properties = properties;
            ProtectionDomainId = protectionDomainId;
            ReplicatedSnapshots = replicatedSnapshots;
            Santized = santized;
            SantizedFromSnapshotId = santizedFromSnapshotId;
            SantizedSnapshots = santizedSnapshots;
            SnapshotFamily = snapshotFamily;
            SnapshotSize = snapshotSize;
            SnapshotTimestamp = snapshotTimestamp;
            SnapshotTimestampDate = snapshotTimestampDate;
            SnapshotUuid = snapshotUuid;
            SoftwareDatabaseSnapshot = softwareDatabaseSnapshot;
            SoftwareSnapshot = softwareSnapshot;
            SoftwareSnapshotId = softwareSnapshotId;
            Status = status;
            Tags = tags;
            TimeMachineId = timeMachineId;
            Timezone = timezone;
            ToTimestamp = toTimestamp;
            Type = type;
        }
    }
}
