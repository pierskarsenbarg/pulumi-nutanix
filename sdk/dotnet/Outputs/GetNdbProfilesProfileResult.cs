// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix.Outputs
{

    [OutputType]
    public sealed class GetNdbProfilesProfileResult
    {
        public readonly ImmutableArray<string> AssocDatabases;
        public readonly ImmutableArray<string> AssocDbServers;
        public readonly ImmutableArray<Outputs.GetNdbProfilesProfileClusterAvailabilityResult> ClusterAvailabilities;
        public readonly string DbVersion;
        public readonly string Description;
        public readonly string EngineType;
        public readonly string Id;
        public readonly string LatestVersion;
        public readonly string LatestVersionId;
        public readonly string Name;
        public readonly string NxClusterId;
        public readonly string Owner;
        public readonly string Status;
        public readonly bool SystemProfile;
        public readonly string Topology;
        public readonly string Type;
        public readonly ImmutableArray<Outputs.GetNdbProfilesProfileVersionResult> Versions;

        [OutputConstructor]
        private GetNdbProfilesProfileResult(
            ImmutableArray<string> assocDatabases,

            ImmutableArray<string> assocDbServers,

            ImmutableArray<Outputs.GetNdbProfilesProfileClusterAvailabilityResult> clusterAvailabilities,

            string dbVersion,

            string description,

            string engineType,

            string id,

            string latestVersion,

            string latestVersionId,

            string name,

            string nxClusterId,

            string owner,

            string status,

            bool systemProfile,

            string topology,

            string type,

            ImmutableArray<Outputs.GetNdbProfilesProfileVersionResult> versions)
        {
            AssocDatabases = assocDatabases;
            AssocDbServers = assocDbServers;
            ClusterAvailabilities = clusterAvailabilities;
            DbVersion = dbVersion;
            Description = description;
            EngineType = engineType;
            Id = id;
            LatestVersion = latestVersion;
            LatestVersionId = latestVersionId;
            Name = name;
            NxClusterId = nxClusterId;
            Owner = owner;
            Status = status;
            SystemProfile = systemProfile;
            Topology = topology;
            Type = type;
            Versions = versions;
        }
    }
}
