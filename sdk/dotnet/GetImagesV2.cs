// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetImagesV2
    {
        /// <summary>
        /// List images owned by Prism Central along with the image details like name, description, type, etc. This operation supports filtering, sorting, selection &amp; pagination.
        /// </summary>
        public static Task<GetImagesV2Result> InvokeAsync(GetImagesV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImagesV2Result>("nutanix:index/getImagesV2:getImagesV2", args ?? new GetImagesV2Args(), options.WithDefaults());

        /// <summary>
        /// List images owned by Prism Central along with the image details like name, description, type, etc. This operation supports filtering, sorting, selection &amp; pagination.
        /// </summary>
        public static Output<GetImagesV2Result> Invoke(GetImagesV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagesV2Result>("nutanix:index/getImagesV2:getImagesV2", args ?? new GetImagesV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List images owned by Prism Central along with the image details like name, description, type, etc. This operation supports filtering, sorting, selection &amp; pagination.
        /// </summary>
        public static Output<GetImagesV2Result> Invoke(GetImagesV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagesV2Result>("nutanix:index/getImagesV2:getImagesV2", args ?? new GetImagesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagesV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetImagesV2Args()
        {
        }
        public static new GetImagesV2Args Empty => new GetImagesV2Args();
    }

    public sealed class GetImagesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetImagesV2InvokeArgs()
        {
        }
        public static new GetImagesV2InvokeArgs Empty => new GetImagesV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetImagesV2Result
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions
        /// </summary>
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of all images
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImagesV2ImageResult> Images;
        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        public readonly int? Limit;
        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        public readonly string? OrderBy;
        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        public readonly int? Page;
        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions.
        /// </summary>
        public readonly string? Select;

        [OutputConstructor]
        private GetImagesV2Result(
            string? filter,

            string id,

            ImmutableArray<Outputs.GetImagesV2ImageResult> images,

            int? limit,

            string? orderBy,

            int? page,

            string? select)
        {
            Filter = filter;
            Id = id;
            Images = images;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
        }
    }
}
