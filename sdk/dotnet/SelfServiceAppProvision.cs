// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    [NutanixResourceType("nutanix:index/selfServiceAppProvision:SelfServiceAppProvision")]
    public partial class SelfServiceAppProvision : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        [Output("actions")]
        public Output<ImmutableArray<Outputs.SelfServiceAppProvisionAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// - (Computed) API version used.
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// - (Optional) The description of application.
        /// 
        /// Both are `bp_name` and `bp_uuid` are optional but atleast one of them to be provided for this resource to work.
        /// </summary>
        [Output("appDescription")]
        public Output<string?> AppDescription { get; private set; } = null!;

        /// <summary>
        /// - (Required) The name of the application you want to set.
        /// </summary>
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        [Output("appSummaries")]
        public Output<ImmutableArray<Outputs.SelfServiceAppProvisionAppSummary>> AppSummaries { get; private set; } = null!;

        /// <summary>
        /// - (Optional) The name of the blueprint to launch.
        /// </summary>
        [Output("bpName")]
        public Output<string?> BpName { get; private set; } = null!;

        /// <summary>
        /// - (Optional) The UUID of the blueprint to launch.
        /// </summary>
        [Output("bpUuid")]
        public Output<string?> BpUuid { get; private set; } = null!;

        [Output("runtimeEditables")]
        public Output<ImmutableArray<Outputs.SelfServiceAppProvisionRuntimeEditable>> RuntimeEditables { get; private set; } = null!;

        /// <summary>
        /// - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
        /// </summary>
        [Output("softDelete")]
        public Output<bool?> SoftDelete { get; private set; } = null!;

        /// <summary>
        /// - (Computed) Application specification (JSON string).
        /// </summary>
        [Output("spec")]
        public Output<string> Spec { get; private set; } = null!;

        /// <summary>
        /// - (Computed) state of the application (e.g. running, stopped)
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// - (Computed) Application status coming as response from server.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("vms")]
        public Output<ImmutableArray<Outputs.SelfServiceAppProvisionVm>> Vms { get; private set; } = null!;


        /// <summary>
        /// Create a SelfServiceAppProvision resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SelfServiceAppProvision(string name, SelfServiceAppProvisionArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/selfServiceAppProvision:SelfServiceAppProvision", name, args ?? new SelfServiceAppProvisionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SelfServiceAppProvision(string name, Input<string> id, SelfServiceAppProvisionState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/selfServiceAppProvision:SelfServiceAppProvision", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SelfServiceAppProvision resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SelfServiceAppProvision Get(string name, Input<string> id, SelfServiceAppProvisionState? state = null, CustomResourceOptions? options = null)
        {
            return new SelfServiceAppProvision(name, id, state, options);
        }
    }

    public sealed class SelfServiceAppProvisionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// - (Optional) The description of application.
        /// 
        /// Both are `bp_name` and `bp_uuid` are optional but atleast one of them to be provided for this resource to work.
        /// </summary>
        [Input("appDescription")]
        public Input<string>? AppDescription { get; set; }

        /// <summary>
        /// - (Required) The name of the application you want to set.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// - (Optional) The name of the blueprint to launch.
        /// </summary>
        [Input("bpName")]
        public Input<string>? BpName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the blueprint to launch.
        /// </summary>
        [Input("bpUuid")]
        public Input<string>? BpUuid { get; set; }

        [Input("runtimeEditables")]
        private InputList<Inputs.SelfServiceAppProvisionRuntimeEditableArgs>? _runtimeEditables;
        public InputList<Inputs.SelfServiceAppProvisionRuntimeEditableArgs> RuntimeEditables
        {
            get => _runtimeEditables ?? (_runtimeEditables = new InputList<Inputs.SelfServiceAppProvisionRuntimeEditableArgs>());
            set => _runtimeEditables = value;
        }

        /// <summary>
        /// - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
        /// </summary>
        [Input("softDelete")]
        public Input<bool>? SoftDelete { get; set; }

        public SelfServiceAppProvisionArgs()
        {
        }
        public static new SelfServiceAppProvisionArgs Empty => new SelfServiceAppProvisionArgs();
    }

    public sealed class SelfServiceAppProvisionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Optional) System action to trigger after provisioning. Valid values: ["start", "stop", "restart"]
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("actions")]
        private InputList<Inputs.SelfServiceAppProvisionActionGetArgs>? _actions;
        public InputList<Inputs.SelfServiceAppProvisionActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.SelfServiceAppProvisionActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// - (Computed) API version used.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// - (Optional) The description of application.
        /// 
        /// Both are `bp_name` and `bp_uuid` are optional but atleast one of them to be provided for this resource to work.
        /// </summary>
        [Input("appDescription")]
        public Input<string>? AppDescription { get; set; }

        /// <summary>
        /// - (Required) The name of the application you want to set.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        [Input("appSummaries")]
        private InputList<Inputs.SelfServiceAppProvisionAppSummaryGetArgs>? _appSummaries;
        public InputList<Inputs.SelfServiceAppProvisionAppSummaryGetArgs> AppSummaries
        {
            get => _appSummaries ?? (_appSummaries = new InputList<Inputs.SelfServiceAppProvisionAppSummaryGetArgs>());
            set => _appSummaries = value;
        }

        /// <summary>
        /// - (Optional) The name of the blueprint to launch.
        /// </summary>
        [Input("bpName")]
        public Input<string>? BpName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the blueprint to launch.
        /// </summary>
        [Input("bpUuid")]
        public Input<string>? BpUuid { get; set; }

        [Input("runtimeEditables")]
        private InputList<Inputs.SelfServiceAppProvisionRuntimeEditableGetArgs>? _runtimeEditables;
        public InputList<Inputs.SelfServiceAppProvisionRuntimeEditableGetArgs> RuntimeEditables
        {
            get => _runtimeEditables ?? (_runtimeEditables = new InputList<Inputs.SelfServiceAppProvisionRuntimeEditableGetArgs>());
            set => _runtimeEditables = value;
        }

        /// <summary>
        /// - (Optional, Default: false) If true, the application is soft-deleted when the resource is destroyed.
        /// </summary>
        [Input("softDelete")]
        public Input<bool>? SoftDelete { get; set; }

        /// <summary>
        /// - (Computed) Application specification (JSON string).
        /// </summary>
        [Input("spec")]
        public Input<string>? Spec { get; set; }

        /// <summary>
        /// - (Computed) state of the application (e.g. running, stopped)
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// - (Computed) Application status coming as response from server.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("vms")]
        private InputList<Inputs.SelfServiceAppProvisionVmGetArgs>? _vms;
        public InputList<Inputs.SelfServiceAppProvisionVmGetArgs> Vms
        {
            get => _vms ?? (_vms = new InputList<Inputs.SelfServiceAppProvisionVmGetArgs>());
            set => _vms = value;
        }

        public SelfServiceAppProvisionState()
        {
        }
        public static new SelfServiceAppProvisionState Empty => new SelfServiceAppProvisionState();
    }
}
