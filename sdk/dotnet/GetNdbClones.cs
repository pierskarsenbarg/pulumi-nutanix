// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetNdbClones
    {
        /// <summary>
        /// List all the clone present in Nutanix Database Service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var clones = Nutanix.GetNdbClones.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Nutanix.Inputs.GetNdbClonesFilterInputArgs
        ///             {
        ///                 Detailed = "true",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNdbClonesResult> InvokeAsync(GetNdbClonesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNdbClonesResult>("nutanix:index/getNdbClones:getNdbClones", args ?? new GetNdbClonesArgs(), options.WithDefaults());

        /// <summary>
        /// List all the clone present in Nutanix Database Service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var clones = Nutanix.GetNdbClones.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Nutanix.Inputs.GetNdbClonesFilterInputArgs
        ///             {
        ///                 Detailed = "true",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNdbClonesResult> Invoke(GetNdbClonesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNdbClonesResult>("nutanix:index/getNdbClones:getNdbClones", args ?? new GetNdbClonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNdbClonesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetNdbClonesFilterArgs>? _filters;

        /// <summary>
        /// Fetches the clone info based on given params
        /// </summary>
        public List<Inputs.GetNdbClonesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNdbClonesFilterArgs>());
            set => _filters = value;
        }

        public GetNdbClonesArgs()
        {
        }
        public static new GetNdbClonesArgs Empty => new GetNdbClonesArgs();
    }

    public sealed class GetNdbClonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetNdbClonesFilterInputArgs>? _filters;

        /// <summary>
        /// Fetches the clone info based on given params
        /// </summary>
        public InputList<Inputs.GetNdbClonesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNdbClonesFilterInputArgs>());
            set => _filters = value;
        }

        public GetNdbClonesInvokeArgs()
        {
        }
        public static new GetNdbClonesInvokeArgs Empty => new GetNdbClonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNdbClonesResult
    {
        /// <summary>
        /// List of clones based on filters
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbClonesCloneResult> Clones;
        public readonly ImmutableArray<Outputs.GetNdbClonesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetNdbClonesResult(
            ImmutableArray<Outputs.GetNdbClonesCloneResult> clones,

            ImmutableArray<Outputs.GetNdbClonesFilterResult> filters,

            string id)
        {
            Clones = clones;
            Filters = filters;
            Id = id;
        }
    }
}
