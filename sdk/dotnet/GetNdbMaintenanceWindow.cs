// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetNdbMaintenanceWindow
    {
        /// <summary>
        /// Describes a maintenance window in Nutanix Database Service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var window = Nutanix.GetNdbMaintenanceWindow.Invoke(new()
        ///     {
        ///         Id = "{{ maintenance_window_id }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNdbMaintenanceWindowResult> InvokeAsync(GetNdbMaintenanceWindowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNdbMaintenanceWindowResult>("nutanix:index/getNdbMaintenanceWindow:getNdbMaintenanceWindow", args ?? new GetNdbMaintenanceWindowArgs(), options.WithDefaults());

        /// <summary>
        /// Describes a maintenance window in Nutanix Database Service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var window = Nutanix.GetNdbMaintenanceWindow.Invoke(new()
        ///     {
        ///         Id = "{{ maintenance_window_id }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNdbMaintenanceWindowResult> Invoke(GetNdbMaintenanceWindowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNdbMaintenanceWindowResult>("nutanix:index/getNdbMaintenanceWindow:getNdbMaintenanceWindow", args ?? new GetNdbMaintenanceWindowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNdbMaintenanceWindowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maintenance window id.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("tags")]
        private List<Inputs.GetNdbMaintenanceWindowTagArgs>? _tags;

        /// <summary>
        /// tags of maintenance window
        /// </summary>
        public List<Inputs.GetNdbMaintenanceWindowTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetNdbMaintenanceWindowTagArgs>());
            set => _tags = value;
        }

        public GetNdbMaintenanceWindowArgs()
        {
        }
        public static new GetNdbMaintenanceWindowArgs Empty => new GetNdbMaintenanceWindowArgs();
    }

    public sealed class GetNdbMaintenanceWindowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Maintenance window id.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.GetNdbMaintenanceWindowTagInputArgs>? _tags;

        /// <summary>
        /// tags of maintenance window
        /// </summary>
        public InputList<Inputs.GetNdbMaintenanceWindowTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetNdbMaintenanceWindowTagInputArgs>());
            set => _tags = value;
        }

        public GetNdbMaintenanceWindowInvokeArgs()
        {
        }
        public static new GetNdbMaintenanceWindowInvokeArgs Empty => new GetNdbMaintenanceWindowInvokeArgs();
    }


    [OutputType]
    public sealed class GetNdbMaintenanceWindowResult
    {
        /// <summary>
        /// access level
        /// </summary>
        public readonly string AccessLevel;
        /// <summary>
        /// created date of maintenance window
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// modified date of maintenance window
        /// </summary>
        public readonly string DateModified;
        /// <summary>
        /// description of maintenance window
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// entity task association for maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbMaintenanceWindowEntityTaskAssocResult> EntityTaskAssocs;
        public readonly string Id;
        /// <summary>
        /// name of maintenance window
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// next run time for maintenance window to trigger
        /// </summary>
        public readonly string NextRunTime;
        /// <summary>
        /// owner id of maintenance window
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// properties of maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbMaintenanceWindowPropertyResult> Properties;
        /// <summary>
        /// schedule of maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbMaintenanceWindowScheduleResult> Schedules;
        /// <summary>
        /// status of maintennace window
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// tags of maintenance window
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbMaintenanceWindowTagResult> Tags;
        /// <summary>
        /// timezone
        /// </summary>
        public readonly string Timezone;

        [OutputConstructor]
        private GetNdbMaintenanceWindowResult(
            string accessLevel,

            string dateCreated,

            string dateModified,

            string description,

            ImmutableArray<Outputs.GetNdbMaintenanceWindowEntityTaskAssocResult> entityTaskAssocs,

            string id,

            string name,

            string nextRunTime,

            string ownerId,

            ImmutableArray<Outputs.GetNdbMaintenanceWindowPropertyResult> properties,

            ImmutableArray<Outputs.GetNdbMaintenanceWindowScheduleResult> schedules,

            string status,

            ImmutableArray<Outputs.GetNdbMaintenanceWindowTagResult> tags,

            string timezone)
        {
            AccessLevel = accessLevel;
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            EntityTaskAssocs = entityTaskAssocs;
            Id = id;
            Name = name;
            NextRunTime = nextRunTime;
            OwnerId = ownerId;
            Properties = properties;
            Schedules = schedules;
            Status = status;
            Tags = tags;
            Timezone = timezone;
        }
    }
}
