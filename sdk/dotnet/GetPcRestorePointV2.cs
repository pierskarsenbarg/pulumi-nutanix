// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetPcRestorePointV2
    {
        /// <summary>
        /// Retrieves detailed information about a specific recovery point and provides essential domain manager information stored in the backup, which is required for the restoration process.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Port = "9440",
        ///         Insecure = true,
        ///     });
        /// 
        ///     var getRestorePoint = Nutanix.GetPcRestorePointV2.Invoke(new()
        ///     {
        ///         RestorableDomainManagerExtId = data.Nutanix_restorable_pcs_v2.Test.Restorable_pcs[0].Ext_id,
        ///         RestoreSourceExtId = nutanix_pc_restore_source_v2.Cluster_location.Id,
        ///         ExtId = data.Nutanix_pc_restore_points_v2.Test.Restore_points[0].Ext_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPcRestorePointV2Result> InvokeAsync(GetPcRestorePointV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPcRestorePointV2Result>("nutanix:index/getPcRestorePointV2:getPcRestorePointV2", args ?? new GetPcRestorePointV2Args(), options.WithDefaults());

        /// <summary>
        /// Retrieves detailed information about a specific recovery point and provides essential domain manager information stored in the backup, which is required for the restoration process.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Port = "9440",
        ///         Insecure = true,
        ///     });
        /// 
        ///     var getRestorePoint = Nutanix.GetPcRestorePointV2.Invoke(new()
        ///     {
        ///         RestorableDomainManagerExtId = data.Nutanix_restorable_pcs_v2.Test.Restorable_pcs[0].Ext_id,
        ///         RestoreSourceExtId = nutanix_pc_restore_source_v2.Cluster_location.Id,
        ///         ExtId = data.Nutanix_pc_restore_points_v2.Test.Restore_points[0].Ext_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPcRestorePointV2Result> Invoke(GetPcRestorePointV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPcRestorePointV2Result>("nutanix:index/getPcRestorePointV2:getPcRestorePointV2", args ?? new GetPcRestorePointV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves detailed information about a specific recovery point and provides essential domain manager information stored in the backup, which is required for the restoration process.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = PiersKarsenbarg.Nutanix;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var pe = new Nutanix.Provider("pe", new()
        ///     {
        ///         Username = @var.Nutanix_pe_username,
        ///         Password = @var.Nutanix_pe_password,
        ///         Endpoint = @var.Nutanix_pe_endpoint,
        ///         Port = "9440",
        ///         Insecure = true,
        ///     });
        /// 
        ///     var getRestorePoint = Nutanix.GetPcRestorePointV2.Invoke(new()
        ///     {
        ///         RestorableDomainManagerExtId = data.Nutanix_restorable_pcs_v2.Test.Restorable_pcs[0].Ext_id,
        ///         RestoreSourceExtId = nutanix_pc_restore_source_v2.Cluster_location.Id,
        ///         ExtId = data.Nutanix_pc_restore_points_v2.Test.Restore_points[0].Ext_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPcRestorePointV2Result> Invoke(GetPcRestorePointV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPcRestorePointV2Result>("nutanix:index/getPcRestorePointV2:getPcRestorePointV2", args ?? new GetPcRestorePointV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPcRestorePointV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Restore point ID for the backup created in cluster/object store.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        /// <summary>
        /// A unique identifier for the domain manager.
        /// </summary>
        [Input("restorableDomainManagerExtId", required: true)]
        public string RestorableDomainManagerExtId { get; set; } = null!;

        /// <summary>
        /// A unique identifier obtained from the restore source API that corresponds to the details provided for the restore source.
        /// </summary>
        [Input("restoreSourceExtId", required: true)]
        public string RestoreSourceExtId { get; set; } = null!;

        public GetPcRestorePointV2Args()
        {
        }
        public static new GetPcRestorePointV2Args Empty => new GetPcRestorePointV2Args();
    }

    public sealed class GetPcRestorePointV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Restore point ID for the backup created in cluster/object store.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        /// <summary>
        /// A unique identifier for the domain manager.
        /// </summary>
        [Input("restorableDomainManagerExtId", required: true)]
        public Input<string> RestorableDomainManagerExtId { get; set; } = null!;

        /// <summary>
        /// A unique identifier obtained from the restore source API that corresponds to the details provided for the restore source.
        /// </summary>
        [Input("restoreSourceExtId", required: true)]
        public Input<string> RestoreSourceExtId { get; set; } = null!;

        public GetPcRestorePointV2InvokeArgs()
        {
        }
        public static new GetPcRestorePointV2InvokeArgs Empty => new GetPcRestorePointV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetPcRestorePointV2Result
    {
        /// <summary>
        /// The UTC date and time in ISO-8601 format when the Restore point was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Domain manager (Prism Central) details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPcRestorePointV2DomainManagerResult> DomainManagers;
        /// <summary>
        /// - A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPcRestorePointV2LinkResult> Links;
        public readonly string RestorableDomainManagerExtId;
        public readonly string RestoreSourceExtId;
        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetPcRestorePointV2Result(
            string creationTime,

            ImmutableArray<Outputs.GetPcRestorePointV2DomainManagerResult> domainManagers,

            string extId,

            string id,

            ImmutableArray<Outputs.GetPcRestorePointV2LinkResult> links,

            string restorableDomainManagerExtId,

            string restoreSourceExtId,

            string tenantId)
        {
            CreationTime = creationTime;
            DomainManagers = domainManagers;
            ExtId = extId;
            Id = id;
            Links = links;
            RestorableDomainManagerExtId = restorableDomainManagerExtId;
            RestoreSourceExtId = restoreSourceExtId;
            TenantId = tenantId;
        }
    }
}
