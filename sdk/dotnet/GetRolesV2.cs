// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetRolesV2
    {
        /// <summary>
        /// Describes a List all the Role(s).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var roles = Nutanix.GetRolesV2.Invoke();
        /// 
        ///     var filtered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///     });
        /// 
        ///     var filtered_ordered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///         OrderBy = "createdTime desc",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` :A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
        ///   - clientName
        ///   - createdBy
        ///   - extId
        ///   - createdTime
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields:
        ///   - createdTime
        ///   - distinguishedName
        ///   - displayName
        ///   - extId-
        ///   - lastUpdatedTime
        /// * `select` : A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields:
        ///   - accessibleClients
        ///   - accessibleEntityTypes
        ///   - assignedUserGroupsCount
        ///   - assignedUsersCount
        ///   - clientName
        ///   - createdBy
        ///   - createdTime
        ///   - description
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        ///   - links
        ///   - operations
        ///   - tenantId
        /// </summary>
        public static Task<GetRolesV2Result> InvokeAsync(GetRolesV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRolesV2Result>("nutanix:index/getRolesV2:getRolesV2", args ?? new GetRolesV2Args(), options.WithDefaults());

        /// <summary>
        /// Describes a List all the Role(s).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var roles = Nutanix.GetRolesV2.Invoke();
        /// 
        ///     var filtered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///     });
        /// 
        ///     var filtered_ordered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///         OrderBy = "createdTime desc",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` :A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
        ///   - clientName
        ///   - createdBy
        ///   - extId
        ///   - createdTime
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields:
        ///   - createdTime
        ///   - distinguishedName
        ///   - displayName
        ///   - extId-
        ///   - lastUpdatedTime
        /// * `select` : A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields:
        ///   - accessibleClients
        ///   - accessibleEntityTypes
        ///   - assignedUserGroupsCount
        ///   - assignedUsersCount
        ///   - clientName
        ///   - createdBy
        ///   - createdTime
        ///   - description
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        ///   - links
        ///   - operations
        ///   - tenantId
        /// </summary>
        public static Output<GetRolesV2Result> Invoke(GetRolesV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRolesV2Result>("nutanix:index/getRolesV2:getRolesV2", args ?? new GetRolesV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Describes a List all the Role(s).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var roles = Nutanix.GetRolesV2.Invoke();
        /// 
        ///     var filtered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///     });
        /// 
        ///     var filtered_ordered_roles = Nutanix.GetRolesV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'example_role'",
        ///         OrderBy = "createdTime desc",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` :A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
        ///   - clientName
        ///   - createdBy
        ///   - extId
        ///   - createdTime
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields:
        ///   - createdTime
        ///   - distinguishedName
        ///   - displayName
        ///   - extId-
        ///   - lastUpdatedTime
        /// * `select` : A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields:
        ///   - accessibleClients
        ///   - accessibleEntityTypes
        ///   - assignedUserGroupsCount
        ///   - assignedUsersCount
        ///   - clientName
        ///   - createdBy
        ///   - createdTime
        ///   - description
        ///   - displayName
        ///   - extId
        ///   - isSystemDefined
        ///   - lastUpdatedTime
        ///   - links
        ///   - operations
        ///   - tenantId
        /// </summary>
        public static Output<GetRolesV2Result> Invoke(GetRolesV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRolesV2Result>("nutanix:index/getRolesV2:getRolesV2", args ?? new GetRolesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRolesV2Args : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public string? Filter { get; set; }

        [Input("limit")]
        public int? Limit { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("page")]
        public int? Page { get; set; }

        [Input("select")]
        public string? Select { get; set; }

        public GetRolesV2Args()
        {
        }
        public static new GetRolesV2Args Empty => new GetRolesV2Args();
    }

    public sealed class GetRolesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("page")]
        public Input<int>? Page { get; set; }

        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetRolesV2InvokeArgs()
        {
        }
        public static new GetRolesV2InvokeArgs Empty => new GetRolesV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetRolesV2Result
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        /// <summary>
        /// - List of Roles.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRolesV2RoleResult> Roles;
        public readonly string? Select;

        [OutputConstructor]
        private GetRolesV2Result(
            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            ImmutableArray<Outputs.GetRolesV2RoleResult> roles,

            string? select)
        {
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Roles = roles;
            Select = select;
        }
    }
}
