// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetOperationsV2
    {
        /// <summary>
        /// Lists the operations defined on the system. List of operations can be further filtered out using various filtering options.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation_list = Nutanix.GetOperationsV2.Invoke();
        /// 
        ///     var operation_list_filtered = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'Create_Role'",
        ///     });
        /// 
        ///     var operation_list_paginated = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///         Page = 1,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOperationsV2Result> InvokeAsync(GetOperationsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOperationsV2Result>("nutanix:index/getOperationsV2:getOperationsV2", args ?? new GetOperationsV2Args(), options.WithDefaults());

        /// <summary>
        /// Lists the operations defined on the system. List of operations can be further filtered out using various filtering options.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation_list = Nutanix.GetOperationsV2.Invoke();
        /// 
        ///     var operation_list_filtered = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'Create_Role'",
        ///     });
        /// 
        ///     var operation_list_paginated = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///         Page = 1,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOperationsV2Result> Invoke(GetOperationsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOperationsV2Result>("nutanix:index/getOperationsV2:getOperationsV2", args ?? new GetOperationsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Lists the operations defined on the system. List of operations can be further filtered out using various filtering options.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var operation_list = Nutanix.GetOperationsV2.Invoke();
        /// 
        ///     var operation_list_filtered = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Filter = "displayName eq 'Create_Role'",
        ///     });
        /// 
        ///     var operation_list_paginated = Nutanix.GetOperationsV2.Invoke(new()
        ///     {
        ///         Limit = 10,
        ///         Page = 1,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOperationsV2Result> Invoke(GetOperationsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOperationsV2Result>("nutanix:index/getOperationsV2:getOperationsV2", args ?? new GetOperationsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOperationsV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. The filter can be applied to the following fields:
        /// - clientName
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - operationType
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. it can be applied to the following fields:
        /// - associatedEndpointList
        /// - clientName
        /// - createdTime
        /// - description
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - links
        /// - operationType
        /// - relatedOperationList
        /// - tenantId
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetOperationsV2Args()
        {
        }
        public static new GetOperationsV2Args Empty => new GetOperationsV2Args();
    }

    public sealed class GetOperationsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. The filter can be applied to the following fields:
        /// - clientName
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - operationType
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. it can be applied to the following fields:
        /// - associatedEndpointList
        /// - clientName
        /// - createdTime
        /// - description
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - links
        /// - operationType
        /// - relatedOperationList
        /// - tenantId
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetOperationsV2InvokeArgs()
        {
        }
        public static new GetOperationsV2InvokeArgs Empty => new GetOperationsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetOperationsV2Result
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. The filter can be applied to the following fields:
        /// - clientName
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - operationType
        /// </summary>
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        public readonly int? Limit;
        /// <summary>
        /// List of all operations
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOperationsV2OperationResult> Operations;
        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. The orderby can be applied to the following fields:
        /// - createdTime
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// </summary>
        public readonly string? OrderBy;
        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        public readonly int? Page;
        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. it can be applied to the following fields:
        /// - associatedEndpointList
        /// - clientName
        /// - createdTime
        /// - description
        /// - displayName
        /// - entityType
        /// - extId
        /// - lastUpdatedTime
        /// - links
        /// - operationType
        /// - relatedOperationList
        /// - tenantId
        /// </summary>
        public readonly string? Select;

        [OutputConstructor]
        private GetOperationsV2Result(
            string? filter,

            string id,

            int? limit,

            ImmutableArray<Outputs.GetOperationsV2OperationResult> operations,

            string? orderBy,

            int? page,

            string? select)
        {
            Filter = filter;
            Id = id;
            Limit = limit;
            Operations = operations;
            OrderBy = orderBy;
            Page = page;
            Select = select;
        }
    }
}
