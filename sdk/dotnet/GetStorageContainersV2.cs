// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetStorageContainersV2
    {
        /// <summary>
        /// Provides a datasource to Lists the Storage Containers present in the system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var storage_containers = Nutanix.GetStorageContainersV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStorageContainersV2Result> InvokeAsync(GetStorageContainersV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageContainersV2Result>("nutanix:index/getStorageContainersV2:getStorageContainersV2", args ?? new GetStorageContainersV2Args(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to Lists the Storage Containers present in the system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var storage_containers = Nutanix.GetStorageContainersV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStorageContainersV2Result> Invoke(GetStorageContainersV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageContainersV2Result>("nutanix:index/getStorageContainersV2:getStorageContainersV2", args ?? new GetStorageContainersV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to Lists the Storage Containers present in the system.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var storage_containers = Nutanix.GetStorageContainersV2.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStorageContainersV2Result> Invoke(GetStorageContainersV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageContainersV2Result>("nutanix:index/getStorageContainersV2:getStorageContainersV2", args ?? new GetStorageContainersV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageContainersV2Args : global::Pulumi.InvokeArgs
    {
        [Input("apply")]
        public string? Apply { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default.
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetStorageContainersV2Args()
        {
        }
        public static new GetStorageContainersV2Args Empty => new GetStorageContainersV2Args();
    }

    public sealed class GetStorageContainersV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apply")]
        public Input<string>? Apply { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default.
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions.
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetStorageContainersV2InvokeArgs()
        {
        }
        public static new GetStorageContainersV2InvokeArgs Empty => new GetStorageContainersV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageContainersV2Result
    {
        public readonly string? Apply;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;
        public readonly ImmutableArray<Outputs.GetStorageContainersV2StorageContainerResult> StorageContainers;

        [OutputConstructor]
        private GetStorageContainersV2Result(
            string? apply,

            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string? select,

            ImmutableArray<Outputs.GetStorageContainersV2StorageContainerResult> storageContainers)
        {
            Apply = apply;
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
            StorageContainers = storageContainers;
        }
    }
}
