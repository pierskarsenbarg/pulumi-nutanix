// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides a resource to Registers a domain manager (Prism Central) instance to other entities like PE and PC. This process is asynchronous, creating a registration task and returning its UUID.
    /// </summary>
    [NutanixResourceType("nutanix:index/pcRegistrationV2:PcRegistrationV2")]
    public partial class PcRegistrationV2 : global::Pulumi.CustomResource
    {
        [Output("configs")]
        public Output<ImmutableArray<Outputs.PcRegistrationV2Config>> Configs { get; private set; } = null!;

        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        [Output("hostingClusterExtId")]
        public Output<string> HostingClusterExtId { get; private set; } = null!;

        [Output("isRegisteredWithHostingCluster")]
        public Output<bool> IsRegisteredWithHostingCluster { get; private set; } = null!;

        [Output("links")]
        public Output<ImmutableArray<Outputs.PcRegistrationV2Link>> Links { get; private set; } = null!;

        [Output("networks")]
        public Output<ImmutableArray<Outputs.PcRegistrationV2Network>> Networks { get; private set; } = null!;

        [Output("nodeExtIds")]
        public Output<ImmutableArray<string>> NodeExtIds { get; private set; } = null!;

        /// <summary>
        /// -(Required) The display name for the Role.
        /// </summary>
        [Output("pcExtId")]
        public Output<string> PcExtId { get; private set; } = null!;

        /// <summary>
        /// -(Required)  The registration request consists of the remote cluster details. Credentials must be of domain manager (Prism Central) role.
        /// The remote cluster details are different based on the object type. The object type is used to determine the type of remote cluster. The object type can be one of the following:
        /// * `prism.v4.management.DomainManagerRemoteClusterSpec`
        /// * `prism.v4.management.AOSRemoteClusterSpec`
        /// * `prism.v4.management.ClusterReference`
        /// </summary>
        [Output("remoteCluster")]
        public Output<Outputs.PcRegistrationV2RemoteCluster> RemoteCluster { get; private set; } = null!;

        [Output("shouldEnableHighAvailability")]
        public Output<bool> ShouldEnableHighAvailability { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a PcRegistrationV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PcRegistrationV2(string name, PcRegistrationV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/pcRegistrationV2:PcRegistrationV2", name, args ?? new PcRegistrationV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private PcRegistrationV2(string name, Input<string> id, PcRegistrationV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/pcRegistrationV2:PcRegistrationV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PcRegistrationV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PcRegistrationV2 Get(string name, Input<string> id, PcRegistrationV2State? state = null, CustomResourceOptions? options = null)
        {
            return new PcRegistrationV2(name, id, state, options);
        }
    }

    public sealed class PcRegistrationV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -(Required) The display name for the Role.
        /// </summary>
        [Input("pcExtId", required: true)]
        public Input<string> PcExtId { get; set; } = null!;

        /// <summary>
        /// -(Required)  The registration request consists of the remote cluster details. Credentials must be of domain manager (Prism Central) role.
        /// The remote cluster details are different based on the object type. The object type is used to determine the type of remote cluster. The object type can be one of the following:
        /// * `prism.v4.management.DomainManagerRemoteClusterSpec`
        /// * `prism.v4.management.AOSRemoteClusterSpec`
        /// * `prism.v4.management.ClusterReference`
        /// </summary>
        [Input("remoteCluster", required: true)]
        public Input<Inputs.PcRegistrationV2RemoteClusterArgs> RemoteCluster { get; set; } = null!;

        public PcRegistrationV2Args()
        {
        }
        public static new PcRegistrationV2Args Empty => new PcRegistrationV2Args();
    }

    public sealed class PcRegistrationV2State : global::Pulumi.ResourceArgs
    {
        [Input("configs")]
        private InputList<Inputs.PcRegistrationV2ConfigGetArgs>? _configs;
        public InputList<Inputs.PcRegistrationV2ConfigGetArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.PcRegistrationV2ConfigGetArgs>());
            set => _configs = value;
        }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("hostingClusterExtId")]
        public Input<string>? HostingClusterExtId { get; set; }

        [Input("isRegisteredWithHostingCluster")]
        public Input<bool>? IsRegisteredWithHostingCluster { get; set; }

        [Input("links")]
        private InputList<Inputs.PcRegistrationV2LinkGetArgs>? _links;
        public InputList<Inputs.PcRegistrationV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.PcRegistrationV2LinkGetArgs>());
            set => _links = value;
        }

        [Input("networks")]
        private InputList<Inputs.PcRegistrationV2NetworkGetArgs>? _networks;
        public InputList<Inputs.PcRegistrationV2NetworkGetArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.PcRegistrationV2NetworkGetArgs>());
            set => _networks = value;
        }

        [Input("nodeExtIds")]
        private InputList<string>? _nodeExtIds;
        public InputList<string> NodeExtIds
        {
            get => _nodeExtIds ?? (_nodeExtIds = new InputList<string>());
            set => _nodeExtIds = value;
        }

        /// <summary>
        /// -(Required) The display name for the Role.
        /// </summary>
        [Input("pcExtId")]
        public Input<string>? PcExtId { get; set; }

        /// <summary>
        /// -(Required)  The registration request consists of the remote cluster details. Credentials must be of domain manager (Prism Central) role.
        /// The remote cluster details are different based on the object type. The object type is used to determine the type of remote cluster. The object type can be one of the following:
        /// * `prism.v4.management.DomainManagerRemoteClusterSpec`
        /// * `prism.v4.management.AOSRemoteClusterSpec`
        /// * `prism.v4.management.ClusterReference`
        /// </summary>
        [Input("remoteCluster")]
        public Input<Inputs.PcRegistrationV2RemoteClusterGetArgs>? RemoteCluster { get; set; }

        [Input("shouldEnableHighAvailability")]
        public Input<bool>? ShouldEnableHighAvailability { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public PcRegistrationV2State()
        {
        }
        public static new PcRegistrationV2State Empty => new PcRegistrationV2State();
    }
}
