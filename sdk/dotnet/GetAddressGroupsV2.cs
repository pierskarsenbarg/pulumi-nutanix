// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetAddressGroupsV2
    {
        /// <summary>
        /// List all the Address Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var addrGroup = Nutanix.GetAddressGroupsV2.Invoke();
        /// 
        ///     var addrGroupFiltered = Nutanix.GetAddressGroupsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq '%[1]s'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAddressGroupsV2Result> InvokeAsync(GetAddressGroupsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddressGroupsV2Result>("nutanix:index/getAddressGroupsV2:getAddressGroupsV2", args ?? new GetAddressGroupsV2Args(), options.WithDefaults());

        /// <summary>
        /// List all the Address Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var addrGroup = Nutanix.GetAddressGroupsV2.Invoke();
        /// 
        ///     var addrGroupFiltered = Nutanix.GetAddressGroupsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq '%[1]s'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAddressGroupsV2Result> Invoke(GetAddressGroupsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddressGroupsV2Result>("nutanix:index/getAddressGroupsV2:getAddressGroupsV2", args ?? new GetAddressGroupsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List all the Address Groups.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var addrGroup = Nutanix.GetAddressGroupsV2.Invoke();
        /// 
        ///     var addrGroupFiltered = Nutanix.GetAddressGroupsV2.Invoke(new()
        ///     {
        ///         Filter = "name eq '%[1]s'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAddressGroupsV2Result> Invoke(GetAddressGroupsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddressGroupsV2Result>("nutanix:index/getAddressGroupsV2:getAddressGroupsV2", args ?? new GetAddressGroupsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddressGroupsV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetAddressGroupsV2Args()
        {
        }
        public static new GetAddressGroupsV2Args Empty => new GetAddressGroupsV2Args();
    }

    public sealed class GetAddressGroupsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetAddressGroupsV2InvokeArgs()
        {
        }
        public static new GetAddressGroupsV2InvokeArgs Empty => new GetAddressGroupsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetAddressGroupsV2Result
    {
        public readonly ImmutableArray<Outputs.GetAddressGroupsV2AddressGroupResult> AddressGroups;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;

        [OutputConstructor]
        private GetAddressGroupsV2Result(
            ImmutableArray<Outputs.GetAddressGroupsV2AddressGroupResult> addressGroups,

            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string? select)
        {
            AddressGroups = addressGroups;
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
        }
    }
}
