// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides Nutanix resource to Create key of a requested type for a user.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create key under service account, never expires
    ///     var createKey = new Nutanix.UserKeyV2("createKey", new()
    ///     {
    ///         AssignedTo = "developer_user_1",
    ///         ExpiryTime = "2125-01-01T00:00:00Z",
    ///         KeyType = "API_KEY",
    ///         UserExtId = "&lt;SERVICE_ACCOUNT_UUID&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// ## Argument Reference
    /// 
    /// The following arguments are supported:
    /// 
    /// * `UserExtId`: - ( Required ) External Identifier of the User.
    /// * `Name`: - ( Required ) Identifier for the key in the form of a name.
    /// * `Description`: - ( Optional ) Brief description of the key.
    /// * `KeyType`: - ( Required ) The type of key. Enum Values:
    ///       * "API_KEY":	A key type that is used to identify a service.
    ///       * "OBJECT_KEY":	A combination of access key and secret key to sign an API request.
    /// * `CreationType`: - ( Optional ) The creation mechanism of this entity. Enum Values:
    ///       * "PREDEFINED":	Predefined creator workflow type is for entity created by the system.
    ///       * "SERVICEDEFINED":	Servicedefined creator workflow type is for entity created by the service.
    ///       * "USERDEFINED":	Userdefined creator workflow type is for entity created by the users.
    /// * `ExpiryTime`: - ( Optional ) The time when the key will expire.
    /// * `Status`: - ( Optional ) The status of the key. Enum Values:
    ///       * "REVOKED":	Key is revoked.
    ///       * "VALID":	Key is valid.
    ///       * "EXPIRED":	Key is expired.
    /// * `AssignedTo`: - ( Optional ) External client to whom the given key is allocated.
    /// </summary>
    [NutanixResourceType("nutanix:index/userKeyV2:UserKeyV2")]
    public partial class UserKeyV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - External client to whom the given key is allocated.
        /// </summary>
        [Output("assignedTo")]
        public Output<string> AssignedTo { get; private set; } = null!;

        /// <summary>
        /// - User or service who created the key.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// - The creation time of the key.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// - The creation mechanism of this entity.
        /// </summary>
        [Output("creationType")]
        public Output<string> CreationType { get; private set; } = null!;

        /// <summary>
        /// - Brief description of the key.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// - The time when the key will expire.
        /// </summary>
        [Output("expiryTime")]
        public Output<string> ExpiryTime { get; private set; } = null!;

        /// <summary>
        /// - The External Identifier of the User Group.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// - Details specific to type of the key.
        /// </summary>
        [Output("keyDetails")]
        public Output<ImmutableArray<Outputs.UserKeyV2KeyDetail>> KeyDetails { get; private set; } = null!;

        /// <summary>
        /// - The type of key.
        /// </summary>
        [Output("keyType")]
        public Output<string> KeyType { get; private set; } = null!;

        /// <summary>
        /// - User who updated the key.
        /// </summary>
        [Output("lastUpdatedBy")]
        public Output<string> LastUpdatedBy { get; private set; } = null!;

        /// <summary>
        /// - The time when the key was updated.
        /// </summary>
        [Output("lastUpdatedTime")]
        public Output<string> LastUpdatedTime { get; private set; } = null!;

        /// <summary>
        /// - The time when the key was last used.
        /// </summary>
        [Output("lastUsedTime")]
        public Output<string> LastUsedTime { get; private set; } = null!;

        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.UserKeyV2Link>> Links { get; private set; } = null!;

        /// <summary>
        /// - Identifier for the key in the form of a name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// - The status of the key.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        [Output("userExtId")]
        public Output<string> UserExtId { get; private set; } = null!;


        /// <summary>
        /// Create a UserKeyV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserKeyV2(string name, UserKeyV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/userKeyV2:UserKeyV2", name, args ?? new UserKeyV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private UserKeyV2(string name, Input<string> id, UserKeyV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/userKeyV2:UserKeyV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserKeyV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserKeyV2 Get(string name, Input<string> id, UserKeyV2State? state = null, CustomResourceOptions? options = null)
        {
            return new UserKeyV2(name, id, state, options);
        }
    }

    public sealed class UserKeyV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - External client to whom the given key is allocated.
        /// </summary>
        [Input("assignedTo")]
        public Input<string>? AssignedTo { get; set; }

        /// <summary>
        /// - User or service who created the key.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// - The creation time of the key.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// - The creation mechanism of this entity.
        /// </summary>
        [Input("creationType")]
        public Input<string>? CreationType { get; set; }

        /// <summary>
        /// - Brief description of the key.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - The time when the key will expire.
        /// </summary>
        [Input("expiryTime")]
        public Input<string>? ExpiryTime { get; set; }

        /// <summary>
        /// - The type of key.
        /// </summary>
        [Input("keyType", required: true)]
        public Input<string> KeyType { get; set; } = null!;

        /// <summary>
        /// - User who updated the key.
        /// </summary>
        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        /// <summary>
        /// - The time when the key was updated.
        /// </summary>
        [Input("lastUpdatedTime")]
        public Input<string>? LastUpdatedTime { get; set; }

        /// <summary>
        /// - The time when the key was last used.
        /// </summary>
        [Input("lastUsedTime")]
        public Input<string>? LastUsedTime { get; set; }

        /// <summary>
        /// - Identifier for the key in the form of a name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// - The status of the key.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("userExtId", required: true)]
        public Input<string> UserExtId { get; set; } = null!;

        public UserKeyV2Args()
        {
        }
        public static new UserKeyV2Args Empty => new UserKeyV2Args();
    }

    public sealed class UserKeyV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - External client to whom the given key is allocated.
        /// </summary>
        [Input("assignedTo")]
        public Input<string>? AssignedTo { get; set; }

        /// <summary>
        /// - User or service who created the key.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// - The creation time of the key.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// - The creation mechanism of this entity.
        /// </summary>
        [Input("creationType")]
        public Input<string>? CreationType { get; set; }

        /// <summary>
        /// - Brief description of the key.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - The time when the key will expire.
        /// </summary>
        [Input("expiryTime")]
        public Input<string>? ExpiryTime { get; set; }

        /// <summary>
        /// - The External Identifier of the User Group.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("keyDetails")]
        private InputList<Inputs.UserKeyV2KeyDetailGetArgs>? _keyDetails;

        /// <summary>
        /// - Details specific to type of the key.
        /// </summary>
        public InputList<Inputs.UserKeyV2KeyDetailGetArgs> KeyDetails
        {
            get => _keyDetails ?? (_keyDetails = new InputList<Inputs.UserKeyV2KeyDetailGetArgs>());
            set => _keyDetails = value;
        }

        /// <summary>
        /// - The type of key.
        /// </summary>
        [Input("keyType")]
        public Input<string>? KeyType { get; set; }

        /// <summary>
        /// - User who updated the key.
        /// </summary>
        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        /// <summary>
        /// - The time when the key was updated.
        /// </summary>
        [Input("lastUpdatedTime")]
        public Input<string>? LastUpdatedTime { get; set; }

        /// <summary>
        /// - The time when the key was last used.
        /// </summary>
        [Input("lastUsedTime")]
        public Input<string>? LastUsedTime { get; set; }

        [Input("links")]
        private InputList<Inputs.UserKeyV2LinkGetArgs>? _links;

        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.UserKeyV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.UserKeyV2LinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// - Identifier for the key in the form of a name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// - The status of the key.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("userExtId")]
        public Input<string>? UserExtId { get; set; }

        public UserKeyV2State()
        {
        }
        public static new UserKeyV2State Empty => new UserKeyV2State();
    }
}
