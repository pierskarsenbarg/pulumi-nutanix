// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetSubnetsV2
    {
        /// <summary>
        /// Get the list of existing subnets.
        /// </summary>
        public static Task<GetSubnetsV2Result> InvokeAsync(GetSubnetsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubnetsV2Result>("nutanix:index/getSubnetsV2:getSubnetsV2", args ?? new GetSubnetsV2Args(), options.WithDefaults());

        /// <summary>
        /// Get the list of existing subnets.
        /// </summary>
        public static Output<GetSubnetsV2Result> Invoke(GetSubnetsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetsV2Result>("nutanix:index/getSubnetsV2:getSubnetsV2", args ?? new GetSubnetsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the list of existing subnets.
        /// </summary>
        public static Output<GetSubnetsV2Result> Invoke(GetSubnetsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetsV2Result>("nutanix:index/getSubnetsV2:getSubnetsV2", args ?? new GetSubnetsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetsV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved.
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public string? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public int? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type.
        /// </summary>
        [Input("select")]
        public string? Select { get; set; }

        public GetSubnetsV2Args()
        {
        }
        public static new GetSubnetsV2Args Empty => new GetSubnetsV2Args();
    }

    public sealed class GetSubnetsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved.
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to filter a collection of resources.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
        /// </summary>
        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        /// <summary>
        /// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        /// </summary>
        [Input("page")]
        public Input<int>? Page { get; set; }

        /// <summary>
        /// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type.
        /// </summary>
        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetSubnetsV2InvokeArgs()
        {
        }
        public static new GetSubnetsV2InvokeArgs Empty => new GetSubnetsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetsV2Result
    {
        public readonly string? Expand;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly string? OrderBy;
        public readonly int? Page;
        public readonly string? Select;
        public readonly ImmutableArray<Outputs.GetSubnetsV2SubnetResult> Subnets;

        [OutputConstructor]
        private GetSubnetsV2Result(
            string? expand,

            string? filter,

            string id,

            int? limit,

            string? orderBy,

            int? page,

            string? select,

            ImmutableArray<Outputs.GetSubnetsV2SubnetResult> subnets)
        {
            Expand = expand;
            Filter = filter;
            Id = id;
            Limit = limit;
            OrderBy = orderBy;
            Page = page;
            Select = select;
            Subnets = subnets;
        }
    }
}
