// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides Nutanix resource to Create a User.
    /// 
    /// ## Import
    /// 
    /// This helps to manage existing entities which are not created through terraform. Users can be imported using the `UUID`.  eg,
    /// 
    /// hcl
    /// 
    /// // create its configuration in the root module. For example:
    /// 
    /// resource "nutanix_users_v2" "import_user" {}
    /// 
    /// // execute this command
    /// 
    /// ```sh
    /// $ pulumi import nutanix:index/usersV2:UsersV2 import_user &lt;UUID&gt;
    /// ```
    /// 
    /// See detailed information in [Nutanix Users v4](https://developers.nutanix.com/api-reference?namespace=iam&amp;version=v4.0#tag/Users/operation/createUser).
    /// </summary>
    [NutanixResourceType("nutanix:index/usersV2:UsersV2")]
    public partial class UsersV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// -  Any additional attribute for the User.
        /// </summary>
        [Output("additionalAttributes")]
        public Output<ImmutableArray<Outputs.UsersV2AdditionalAttribute>> AdditionalAttributes { get; private set; } = null!;

        /// <summary>
        /// - Bucket Access Keys for the User.
        /// </summary>
        [Output("bucketsAccessKeys")]
        public Output<ImmutableArray<Outputs.UsersV2BucketsAccessKey>> BucketsAccessKeys { get; private set; } = null!;

        /// <summary>
        /// - User or Service who created the User.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// - Creation time for the Bucket Access Key.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// - Description of the user.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// - Display name for the User.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// - Email Id for the User.
        /// </summary>
        [Output("emailId")]
        public Output<string> EmailId { get; private set; } = null!;

        /// <summary>
        /// - A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// - First name for the User.
        /// </summary>
        [Output("firstName")]
        public Output<string> FirstName { get; private set; } = null!;

        [Output("forceResetPassword")]
        public Output<bool> ForceResetPassword { get; private set; } = null!;

        /// <summary>
        /// - Identifier of the IDP for the User.
        /// </summary>
        [Output("idpId")]
        public Output<string> IdpId { get; private set; } = null!;

        /// <summary>
        /// - Last successful logged in time for the User.
        /// </summary>
        [Output("lastLoginTime")]
        public Output<string> LastLoginTime { get; private set; } = null!;

        /// <summary>
        /// - Last name for the User.
        /// </summary>
        [Output("lastName")]
        public Output<string> LastName { get; private set; } = null!;

        /// <summary>
        /// - Last updated time of the User.
        /// </summary>
        [Output("lastUpdatedTime")]
        public Output<string> LastUpdatedTime { get; private set; } = null!;

        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.UsersV2Link>> Links { get; private set; } = null!;

        /// <summary>
        /// - Default locale for the User.
        /// </summary>
        [Output("locale")]
        public Output<string> Locale { get; private set; } = null!;

        /// <summary>
        /// - Middle name for the User.
        /// </summary>
        [Output("middleInitial")]
        public Output<string> MiddleInitial { get; private set; } = null!;

        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// - Default Region for the User.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
        /// Type of the User.
        /// </summary>
        [Output("userType")]
        public Output<string> UserType { get; private set; } = null!;

        /// <summary>
        /// - Identifier for the User in the form an email address.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a UsersV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UsersV2(string name, UsersV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/usersV2:UsersV2", name, args ?? new UsersV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private UsersV2(string name, Input<string> id, UsersV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/usersV2:UsersV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UsersV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UsersV2 Get(string name, Input<string> id, UsersV2State? state = null, CustomResourceOptions? options = null)
        {
            return new UsersV2(name, id, state, options);
        }
    }

    public sealed class UsersV2Args : global::Pulumi.ResourceArgs
    {
        [Input("additionalAttributes")]
        private InputList<Inputs.UsersV2AdditionalAttributeArgs>? _additionalAttributes;

        /// <summary>
        /// -  Any additional attribute for the User.
        /// </summary>
        public InputList<Inputs.UsersV2AdditionalAttributeArgs> AdditionalAttributes
        {
            get => _additionalAttributes ?? (_additionalAttributes = new InputList<Inputs.UsersV2AdditionalAttributeArgs>());
            set => _additionalAttributes = value;
        }

        /// <summary>
        /// - Description of the user.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - Display name for the User.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// - Email Id for the User.
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        /// <summary>
        /// - First name for the User.
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        [Input("forceResetPassword")]
        public Input<bool>? ForceResetPassword { get; set; }

        /// <summary>
        /// - Identifier of the IDP for the User.
        /// </summary>
        [Input("idpId")]
        public Input<string>? IdpId { get; set; }

        /// <summary>
        /// - Last name for the User.
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// - Default locale for the User.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// - Middle name for the User.
        /// </summary>
        [Input("middleInitial")]
        public Input<string>? MiddleInitial { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// - Default Region for the User.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
        /// Type of the User.
        /// </summary>
        [Input("userType", required: true)]
        public Input<string> UserType { get; set; } = null!;

        /// <summary>
        /// - Identifier for the User in the form an email address.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public UsersV2Args()
        {
        }
        public static new UsersV2Args Empty => new UsersV2Args();
    }

    public sealed class UsersV2State : global::Pulumi.ResourceArgs
    {
        [Input("additionalAttributes")]
        private InputList<Inputs.UsersV2AdditionalAttributeGetArgs>? _additionalAttributes;

        /// <summary>
        /// -  Any additional attribute for the User.
        /// </summary>
        public InputList<Inputs.UsersV2AdditionalAttributeGetArgs> AdditionalAttributes
        {
            get => _additionalAttributes ?? (_additionalAttributes = new InputList<Inputs.UsersV2AdditionalAttributeGetArgs>());
            set => _additionalAttributes = value;
        }

        [Input("bucketsAccessKeys")]
        private InputList<Inputs.UsersV2BucketsAccessKeyGetArgs>? _bucketsAccessKeys;

        /// <summary>
        /// - Bucket Access Keys for the User.
        /// </summary>
        public InputList<Inputs.UsersV2BucketsAccessKeyGetArgs> BucketsAccessKeys
        {
            get => _bucketsAccessKeys ?? (_bucketsAccessKeys = new InputList<Inputs.UsersV2BucketsAccessKeyGetArgs>());
            set => _bucketsAccessKeys = value;
        }

        /// <summary>
        /// - User or Service who created the User.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// - Creation time for the Bucket Access Key.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// - Description of the user.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - Display name for the User.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// - Email Id for the User.
        /// </summary>
        [Input("emailId")]
        public Input<string>? EmailId { get; set; }

        /// <summary>
        /// - A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        /// <summary>
        /// - First name for the User.
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        [Input("forceResetPassword")]
        public Input<bool>? ForceResetPassword { get; set; }

        /// <summary>
        /// - Identifier of the IDP for the User.
        /// </summary>
        [Input("idpId")]
        public Input<string>? IdpId { get; set; }

        /// <summary>
        /// - Last successful logged in time for the User.
        /// </summary>
        [Input("lastLoginTime")]
        public Input<string>? LastLoginTime { get; set; }

        /// <summary>
        /// - Last name for the User.
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// - Last updated time of the User.
        /// </summary>
        [Input("lastUpdatedTime")]
        public Input<string>? LastUpdatedTime { get; set; }

        [Input("links")]
        private InputList<Inputs.UsersV2LinkGetArgs>? _links;

        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.UsersV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.UsersV2LinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// - Default locale for the User.
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// - Middle name for the User.
        /// </summary>
        [Input("middleInitial")]
        public Input<string>? MiddleInitial { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// - Default Region for the User.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
        /// Type of the User.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        /// <summary>
        /// - Identifier for the User in the form an email address.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public UsersV2State()
        {
        }
        public static new UsersV2State Empty => new UsersV2State();
    }
}
