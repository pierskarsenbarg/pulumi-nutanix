// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetBlueprintRuntimeEditables
    {
        /// <summary>
        /// Describes runtime editables that are present in a blueprint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using System.Text.Json;
        /// using Pulumi;
        /// using Local = Pulumi.Local;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetBlueprintRuntimeEditables.Invoke(new()
        ///     {
        ///         BpName = "NAME OF BLUEPRINT",
        ///     });
        /// 
        ///     // dumps read value into a readable json file
        ///     var dumpRuntimeValue = new Local.File("dumpRuntimeValue", new()
        ///     {
        ///         Content = JsonSerializer.Serialize(example.Apply(getBlueprintRuntimeEditablesResult =&gt; getBlueprintRuntimeEditablesResult.RuntimeEditables)),
        ///         Filename = "runtime_value.json",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBlueprintRuntimeEditablesResult> InvokeAsync(GetBlueprintRuntimeEditablesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBlueprintRuntimeEditablesResult>("nutanix:index/getBlueprintRuntimeEditables:getBlueprintRuntimeEditables", args ?? new GetBlueprintRuntimeEditablesArgs(), options.WithDefaults());

        /// <summary>
        /// Describes runtime editables that are present in a blueprint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using System.Text.Json;
        /// using Pulumi;
        /// using Local = Pulumi.Local;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetBlueprintRuntimeEditables.Invoke(new()
        ///     {
        ///         BpName = "NAME OF BLUEPRINT",
        ///     });
        /// 
        ///     // dumps read value into a readable json file
        ///     var dumpRuntimeValue = new Local.File("dumpRuntimeValue", new()
        ///     {
        ///         Content = JsonSerializer.Serialize(example.Apply(getBlueprintRuntimeEditablesResult =&gt; getBlueprintRuntimeEditablesResult.RuntimeEditables)),
        ///         Filename = "runtime_value.json",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBlueprintRuntimeEditablesResult> Invoke(GetBlueprintRuntimeEditablesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBlueprintRuntimeEditablesResult>("nutanix:index/getBlueprintRuntimeEditables:getBlueprintRuntimeEditables", args ?? new GetBlueprintRuntimeEditablesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Describes runtime editables that are present in a blueprint.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using System.Text.Json;
        /// using Pulumi;
        /// using Local = Pulumi.Local;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetBlueprintRuntimeEditables.Invoke(new()
        ///     {
        ///         BpName = "NAME OF BLUEPRINT",
        ///     });
        /// 
        ///     // dumps read value into a readable json file
        ///     var dumpRuntimeValue = new Local.File("dumpRuntimeValue", new()
        ///     {
        ///         Content = JsonSerializer.Serialize(example.Apply(getBlueprintRuntimeEditablesResult =&gt; getBlueprintRuntimeEditablesResult.RuntimeEditables)),
        ///         Filename = "runtime_value.json",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBlueprintRuntimeEditablesResult> Invoke(GetBlueprintRuntimeEditablesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBlueprintRuntimeEditablesResult>("nutanix:index/getBlueprintRuntimeEditables:getBlueprintRuntimeEditables", args ?? new GetBlueprintRuntimeEditablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBlueprintRuntimeEditablesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Optional) The name of the blueprint for which runtime editables will be listed. If this is provided, it will return runtime editables for the specified blueprint.
        /// 
        /// Both (`bp_uuid` and `bp_name`) are optional but atleast one of them to be provided for this data source to work.
        /// </summary>
        [Input("bpName")]
        public string? BpName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the blueprint for which runtime editables will be listed. If this is provided, it will return runtime editables for the specified blueprint.
        /// </summary>
        [Input("bpUuid")]
        public string? BpUuid { get; set; }

        public GetBlueprintRuntimeEditablesArgs()
        {
        }
        public static new GetBlueprintRuntimeEditablesArgs Empty => new GetBlueprintRuntimeEditablesArgs();
    }

    public sealed class GetBlueprintRuntimeEditablesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Optional) The name of the blueprint for which runtime editables will be listed. If this is provided, it will return runtime editables for the specified blueprint.
        /// 
        /// Both (`bp_uuid` and `bp_name`) are optional but atleast one of them to be provided for this data source to work.
        /// </summary>
        [Input("bpName")]
        public Input<string>? BpName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the blueprint for which runtime editables will be listed. If this is provided, it will return runtime editables for the specified blueprint.
        /// </summary>
        [Input("bpUuid")]
        public Input<string>? BpUuid { get; set; }

        public GetBlueprintRuntimeEditablesInvokeArgs()
        {
        }
        public static new GetBlueprintRuntimeEditablesInvokeArgs Empty => new GetBlueprintRuntimeEditablesInvokeArgs();
    }


    [OutputType]
    public sealed class GetBlueprintRuntimeEditablesResult
    {
        public readonly string? BpName;
        public readonly string? BpUuid;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetBlueprintRuntimeEditablesRuntimeEditableResult> RuntimeEditables;

        [OutputConstructor]
        private GetBlueprintRuntimeEditablesResult(
            string? bpName,

            string? bpUuid,

            string id,

            ImmutableArray<Outputs.GetBlueprintRuntimeEditablesRuntimeEditableResult> runtimeEditables)
        {
            BpName = bpName;
            BpUuid = bpUuid;
            Id = id;
            RuntimeEditables = runtimeEditables;
        }
    }
}
