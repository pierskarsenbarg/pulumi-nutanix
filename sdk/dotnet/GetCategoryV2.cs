// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetCategoryV2
    {
        /// <summary>
        /// Fetch a category
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var get_category = Nutanix.GetCategoryV2.Invoke(new()
        ///     {
        ///         ExtId = "85e68112-5b2b-4220-bc8d-e529e4bf420e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCategoryV2Result> InvokeAsync(GetCategoryV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCategoryV2Result>("nutanix:index/getCategoryV2:getCategoryV2", args ?? new GetCategoryV2Args(), options.WithDefaults());

        /// <summary>
        /// Fetch a category
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var get_category = Nutanix.GetCategoryV2.Invoke(new()
        ///     {
        ///         ExtId = "85e68112-5b2b-4220-bc8d-e529e4bf420e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCategoryV2Result> Invoke(GetCategoryV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCategoryV2Result>("nutanix:index/getCategoryV2:getCategoryV2", args ?? new GetCategoryV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetch a category
        /// 
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var get_category = Nutanix.GetCategoryV2.Invoke(new()
        ///     {
        ///         ExtId = "85e68112-5b2b-4220-bc8d-e529e4bf420e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCategoryV2Result> Invoke(GetCategoryV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCategoryV2Result>("nutanix:index/getCategoryV2:getCategoryV2", args ?? new GetCategoryV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCategoryV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported:
        /// - associations
        /// - detailedAssociations
        /// </summary>
        [Input("expand")]
        public string? Expand { get; set; }

        /// <summary>
        /// The extID for the category.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetCategoryV2Args()
        {
        }
        public static new GetCategoryV2Args Empty => new GetCategoryV2Args();
    }

    public sealed class GetCategoryV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported:
        /// - associations
        /// - detailedAssociations
        /// </summary>
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        /// <summary>
        /// The extID for the category.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetCategoryV2InvokeArgs()
        {
        }
        public static new GetCategoryV2InvokeArgs Empty => new GetCategoryV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetCategoryV2Result
    {
        /// <summary>
        /// This field gives basic information about resources that are associated to the category.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCategoryV2AssociationResult> Associations;
        /// <summary>
        /// A string consisting of the description of the category as defined by the user.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// This field gives detailed information about resources that are associated to the category.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCategoryV2DetailedAssociationResult> DetailedAssociations;
        public readonly string? Expand;
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The key of a category when it is represented in key:value format.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCategoryV2LinkResult> Links;
        /// <summary>
        /// This field contains the UUID of a user who owns the category.
        /// </summary>
        public readonly string OwnerUuid;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Denotes the type of a category.
        /// There are three types of categories: SYSTEM, INTERNAL, and USER.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value of a category when it is represented in key:value format
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetCategoryV2Result(
            ImmutableArray<Outputs.GetCategoryV2AssociationResult> associations,

            string description,

            ImmutableArray<Outputs.GetCategoryV2DetailedAssociationResult> detailedAssociations,

            string? expand,

            string extId,

            string id,

            string key,

            ImmutableArray<Outputs.GetCategoryV2LinkResult> links,

            string ownerUuid,

            string tenantId,

            string type,

            string value)
        {
            Associations = associations;
            Description = description;
            DetailedAssociations = detailedAssociations;
            Expand = expand;
            ExtId = extId;
            Id = id;
            Key = key;
            Links = links;
            OwnerUuid = ownerUuid;
            TenantId = tenantId;
            Type = type;
            Value = value;
        }
    }
}
