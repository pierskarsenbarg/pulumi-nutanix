// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Restore the specified protected resource from its state at the given timestamp on the given cluster. This is only relevant if the entity is protected in a minutely schedule at the given timestamp.
    /// 
    /// ## Example 1: Restore Virtual Machine
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Restore a protected virtual machine on remote site
    ///     // This example demonstrates how to restore a protected virtual machine on remote site.
    ///     // steps:
    ///     // 1. Define the provider for the remote site
    ///     // 2. Create a category and a protection policy, on the local site
    ///     // 3. Create a virtual machine and associate it with the protection policy, on local site
    ///     // 4. Restore the virtual machine on the remote site
    ///     // define another alias for the provider, this time for the remote PC
    ///     var remote = new Nutanix.Provider("remote", new()
    ///     {
    ///         Username = @var.Nutanix_remote_username,
    ///         Password = @var.Nutanix_remote_password,
    ///         Endpoint = @var.Nutanix_remote_endpoint,
    ///         Insecure = true,
    ///         Port = "9440",
    ///     });
    /// 
    ///     // create a category and a protection policy on the local site
    ///     // restore the protected virtual machine on the remote site
    ///     var rp_vm = new Nutanix.RestoreProtectedResourceV2("rp-vm", new()
    ///     {
    ///         ExtId = "d22529bb-f02d-4710-894b-d1de772d7832",
    ///         ClusterExtId = "0005b6b1-1b16-4983-b5ff-204840f85e07",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = nutanix.Remote,
    ///     });
    /// 
    ///     // remote cluster ext_id
    /// });
    /// ```
    /// 
    /// ## Example 2: Restore Volume Group
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Restore a protected volume group on remote site
    ///     // This example demonstrates how to restore a protected volume group on remote site.
    ///     // steps:
    ///     // 1. Define the provider for the remote site
    ///     // 2. Create a category and a protection policy, on the local site
    ///     // 3. Create a volume group and associate it with the category on the local site
    ///     // 4. Restore the volume group on the remote site
    ///     // define another alias for the provider, this time for the remote PC
    ///     var remote = new Nutanix.Provider("remote", new()
    ///     {
    ///         Username = @var.Nutanix_remote_username,
    ///         Password = @var.Nutanix_remote_password,
    ///         Endpoint = @var.Nutanix_remote_endpoint,
    ///         Insecure = true,
    ///         Port = "9440",
    ///     });
    /// 
    ///     // create a category , a protection policy and VG on the local site
    ///     // restore the protected volume group on the remote site
    ///     var rp_vg = new Nutanix.RestoreProtectedResourceV2("rp-vg", new()
    ///     {
    ///         ExtId = "246c651a-1b16-4983-b5ff-204840f85e07",
    ///         ClusterExtId = "0005b6b1-1b16-4983-b5ff-204840f85e07",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = nutanix.Remote,
    ///     });
    /// 
    ///     // remote cluster ext_id
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/restoreProtectedResourceV2:RestoreProtectedResourceV2")]
    public partial class RestoreProtectedResourceV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// -(Required) The external identifier of the cluster on which the entity has valid restorable time ranges. The restored entity will be created on the same cluster.
        /// </summary>
        [Output("clusterExtId")]
        public Output<string> ClusterExtId { get; private set; } = null!;

        /// <summary>
        /// -(Required) The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// -(Optional) UTC date and time in ISO 8601 format representing the time from when the state of the entity should be restored. This needs to be a valid time within the restorable time range(s) for the protected resource.
        /// 
        /// 
        /// See detailed information in [Nutanix Restore Protected Resource v4](https://developers.nutanix.com/api-reference?namespace=dataprotection&amp;version=v4.0#tag/ProtectedResources/operation/restoreProtectedResourcen).
        /// </summary>
        [Output("restoreTime")]
        public Output<string?> RestoreTime { get; private set; } = null!;


        /// <summary>
        /// Create a RestoreProtectedResourceV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RestoreProtectedResourceV2(string name, RestoreProtectedResourceV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/restoreProtectedResourceV2:RestoreProtectedResourceV2", name, args ?? new RestoreProtectedResourceV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private RestoreProtectedResourceV2(string name, Input<string> id, RestoreProtectedResourceV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/restoreProtectedResourceV2:RestoreProtectedResourceV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RestoreProtectedResourceV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RestoreProtectedResourceV2 Get(string name, Input<string> id, RestoreProtectedResourceV2State? state = null, CustomResourceOptions? options = null)
        {
            return new RestoreProtectedResourceV2(name, id, state, options);
        }
    }

    public sealed class RestoreProtectedResourceV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -(Required) The external identifier of the cluster on which the entity has valid restorable time ranges. The restored entity will be created on the same cluster.
        /// </summary>
        [Input("clusterExtId", required: true)]
        public Input<string> ClusterExtId { get; set; } = null!;

        /// <summary>
        /// -(Required) The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        /// <summary>
        /// -(Optional) UTC date and time in ISO 8601 format representing the time from when the state of the entity should be restored. This needs to be a valid time within the restorable time range(s) for the protected resource.
        /// 
        /// 
        /// See detailed information in [Nutanix Restore Protected Resource v4](https://developers.nutanix.com/api-reference?namespace=dataprotection&amp;version=v4.0#tag/ProtectedResources/operation/restoreProtectedResourcen).
        /// </summary>
        [Input("restoreTime")]
        public Input<string>? RestoreTime { get; set; }

        public RestoreProtectedResourceV2Args()
        {
        }
        public static new RestoreProtectedResourceV2Args Empty => new RestoreProtectedResourceV2Args();
    }

    public sealed class RestoreProtectedResourceV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -(Required) The external identifier of the cluster on which the entity has valid restorable time ranges. The restored entity will be created on the same cluster.
        /// </summary>
        [Input("clusterExtId")]
        public Input<string>? ClusterExtId { get; set; }

        /// <summary>
        /// -(Required) The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        /// <summary>
        /// -(Optional) UTC date and time in ISO 8601 format representing the time from when the state of the entity should be restored. This needs to be a valid time within the restorable time range(s) for the protected resource.
        /// 
        /// 
        /// See detailed information in [Nutanix Restore Protected Resource v4](https://developers.nutanix.com/api-reference?namespace=dataprotection&amp;version=v4.0#tag/ProtectedResources/operation/restoreProtectedResourcen).
        /// </summary>
        [Input("restoreTime")]
        public Input<string>? RestoreTime { get; set; }

        public RestoreProtectedResourceV2State()
        {
        }
        public static new RestoreProtectedResourceV2State Empty => new RestoreProtectedResourceV2State();
    }
}
