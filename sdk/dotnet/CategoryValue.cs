// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides a Nutanix Category value resource to Create a category value.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test_category_key = new Nutanix.CategoryKey("test-category-key", new()
    ///     {
    ///         Description = "App Support Category Key",
    ///     });
    /// 
    ///     var test = new Nutanix.CategoryValue("test", new()
    ///     {
    ///         Description = "Test Category Value",
    ///         Value = "test-value",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/categoryValue:CategoryValue")]
    public partial class CategoryValue : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Optional) The version of the API.
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// - (Optional) A description for category value.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// - (Required) The category_key name for the category value.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// - Specifying whether its a system defined category.
        /// </summary>
        [Output("systemDefined")]
        public Output<bool> SystemDefined { get; private set; } = null!;

        /// <summary>
        /// The value for the category value.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a CategoryValue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CategoryValue(string name, CategoryValueArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/categoryValue:CategoryValue", name, args ?? new CategoryValueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CategoryValue(string name, Input<string> id, CategoryValueState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/categoryValue:CategoryValue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CategoryValue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CategoryValue Get(string name, Input<string> id, CategoryValueState? state = null, CustomResourceOptions? options = null)
        {
            return new CategoryValue(name, id, state, options);
        }
    }

    public sealed class CategoryValueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Optional) A description for category value.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - (Required) The category_key name for the category value.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The value for the category value.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public CategoryValueArgs()
        {
        }
        public static new CategoryValueArgs Empty => new CategoryValueArgs();
    }

    public sealed class CategoryValueState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional) The version of the API.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// - (Optional) A description for category value.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// - (Required) The category_key name for the category value.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// - Specifying whether its a system defined category.
        /// </summary>
        [Input("systemDefined")]
        public Input<bool>? SystemDefined { get; set; }

        /// <summary>
        /// The value for the category value.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public CategoryValueState()
        {
        }
        public static new CategoryValueState Empty => new CategoryValueState();
    }
}
