// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetFloatingIp
    {
        /// <summary>
        /// Provides a datasource to retrieve floating IPs with floating_ip_uuid .
        /// </summary>
        public static Task<GetFloatingIpResult> InvokeAsync(GetFloatingIpArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFloatingIpResult>("nutanix:index/getFloatingIp:getFloatingIp", args ?? new GetFloatingIpArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to retrieve floating IPs with floating_ip_uuid .
        /// </summary>
        public static Output<GetFloatingIpResult> Invoke(GetFloatingIpInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFloatingIpResult>("nutanix:index/getFloatingIp:getFloatingIp", args ?? new GetFloatingIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFloatingIpArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Floating IP UUID
        /// </summary>
        [Input("floatingIpUuid", required: true)]
        public string FloatingIpUuid { get; set; } = null!;

        public GetFloatingIpArgs()
        {
        }
    }

    public sealed class GetFloatingIpInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Floating IP UUID
        /// </summary>
        [Input("floatingIpUuid", required: true)]
        public Input<string> FloatingIpUuid { get; set; } = null!;

        public GetFloatingIpInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFloatingIpResult
    {
        /// <summary>
        /// The version of the API.
        /// </summary>
        public readonly string ApiVersion;
        public readonly string FloatingIpUuid;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// Floating IP spec
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFloatingIpSpecResult> Specs;
        /// <summary>
        /// Floating IP output status
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFloatingIpStatusResult> Statuses;

        [OutputConstructor]
        private GetFloatingIpResult(
            string apiVersion,

            string floatingIpUuid,

            string id,

            ImmutableDictionary<string, string> metadata,

            ImmutableArray<Outputs.GetFloatingIpSpecResult> specs,

            ImmutableArray<Outputs.GetFloatingIpStatusResult> statuses)
        {
            ApiVersion = apiVersion;
            FloatingIpUuid = floatingIpUuid;
            Id = id;
            Metadata = metadata;
            Specs = specs;
            Statuses = statuses;
        }
    }
}
