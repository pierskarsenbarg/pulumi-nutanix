// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetTemplateV2
    {
        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "{{ ext_id of template }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTemplateV2Result> InvokeAsync(GetTemplateV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2Args(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "{{ ext_id of template }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplateV2Result> Invoke(GetTemplateV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "{{ ext_id of template }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplateV2Result> Invoke(GetTemplateV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTemplateV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of a Template.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetTemplateV2Args()
        {
        }
        public static new GetTemplateV2Args Empty => new GetTemplateV2Args();
    }

    public sealed class GetTemplateV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of a Template.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetTemplateV2InvokeArgs()
        {
        }
        public static new GetTemplateV2InvokeArgs Empty => new GetTemplateV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetTemplateV2Result
    {
        /// <summary>
        /// VM creation time
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User or Service who created the User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2CreatedByResult> CreatedBies;
        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// Status of a Guest Update.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2GuestUpdateStatusResult> GuestUpdateStatuses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTemplateV2LinkResult> Links;
        /// <summary>
        /// The user defined description of a Template.
        /// </summary>
        public readonly string TemplateDescription;
        /// <summary>
        /// The user defined name of a Template.
        /// </summary>
        public readonly string TemplateName;
        /// <summary>
        /// A model that represents an object instance that is accessible through an API endpoint. Instances of this type get an extId field that contains the globally unique identifier for that instance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecResult> TemplateVersionSpecs;
        public readonly string TenantId;
        /// <summary>
        /// VM last updated time.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Last updated by this User ID.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2UpdatedByResult> UpdatedBies;

        [OutputConstructor]
        private GetTemplateV2Result(
            string createTime,

            ImmutableArray<Outputs.GetTemplateV2CreatedByResult> createdBies,

            string extId,

            ImmutableArray<Outputs.GetTemplateV2GuestUpdateStatusResult> guestUpdateStatuses,

            string id,

            ImmutableArray<Outputs.GetTemplateV2LinkResult> links,

            string templateDescription,

            string templateName,

            ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecResult> templateVersionSpecs,

            string tenantId,

            string updateTime,

            ImmutableArray<Outputs.GetTemplateV2UpdatedByResult> updatedBies)
        {
            CreateTime = createTime;
            CreatedBies = createdBies;
            ExtId = extId;
            GuestUpdateStatuses = guestUpdateStatuses;
            Id = id;
            Links = links;
            TemplateDescription = templateDescription;
            TemplateName = templateName;
            TemplateVersionSpecs = templateVersionSpecs;
            TenantId = tenantId;
            UpdateTime = updateTime;
            UpdatedBies = updatedBies;
        }
    }
}
