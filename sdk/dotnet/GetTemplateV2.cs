// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetTemplateV2
    {
        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "7ad31035-9e8b-4fb1-b8fd-fa39326887d8",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTemplateV2Result> InvokeAsync(GetTemplateV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2Args(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "7ad31035-9e8b-4fb1-b8fd-fa39326887d8",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplateV2Result> Invoke(GetTemplateV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the Template details for the given Template identifier.
        /// 
        /// ## Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var template = Nutanix.GetTemplateV2.Invoke(new()
        ///     {
        ///         ExtId = "7ad31035-9e8b-4fb1-b8fd-fa39326887d8",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTemplateV2Result> Invoke(GetTemplateV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplateV2Result>("nutanix:index/getTemplateV2:getTemplateV2", args ?? new GetTemplateV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTemplateV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of a Template.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetTemplateV2Args()
        {
        }
        public static new GetTemplateV2Args Empty => new GetTemplateV2Args();
    }

    public sealed class GetTemplateV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The identifier of a Template.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetTemplateV2InvokeArgs()
        {
        }
        public static new GetTemplateV2InvokeArgs Empty => new GetTemplateV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetTemplateV2Result
    {
        /// <summary>
        /// VM creation time
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User or Service who created the User.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2CreatedByResult> CreatedBies;
        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// Status of a Guest Update.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2GuestUpdateStatusResult> GuestUpdateStatuses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2LinkResult> Links;
        /// <summary>
        /// The user defined description of a Template.
        /// </summary>
        public readonly string TemplateDescription;
        /// <summary>
        /// The user defined name of a Template.
        /// </summary>
        public readonly string TemplateName;
        /// <summary>
        /// A model that represents an object instance that is accessible through an API endpoint. Instances of this type get an extId field that contains the globally unique identifier for that instance
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecResult> TemplateVersionSpecs;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// VM last updated time.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Last updated by this User ID.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTemplateV2UpdatedByResult> UpdatedBies;

        [OutputConstructor]
        private GetTemplateV2Result(
            string createTime,

            ImmutableArray<Outputs.GetTemplateV2CreatedByResult> createdBies,

            string extId,

            ImmutableArray<Outputs.GetTemplateV2GuestUpdateStatusResult> guestUpdateStatuses,

            string id,

            ImmutableArray<Outputs.GetTemplateV2LinkResult> links,

            string templateDescription,

            string templateName,

            ImmutableArray<Outputs.GetTemplateV2TemplateVersionSpecResult> templateVersionSpecs,

            string tenantId,

            string updateTime,

            ImmutableArray<Outputs.GetTemplateV2UpdatedByResult> updatedBies)
        {
            CreateTime = createTime;
            CreatedBies = createdBies;
            ExtId = extId;
            GuestUpdateStatuses = guestUpdateStatuses;
            Id = id;
            Links = links;
            TemplateDescription = templateDescription;
            TemplateName = templateName;
            TemplateVersionSpecs = templateVersionSpecs;
            TenantId = tenantId;
            UpdateTime = updateTime;
            UpdatedBies = updatedBies;
        }
    }
}
