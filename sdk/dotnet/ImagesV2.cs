// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    [NutanixResourceType("nutanix:index/imagesV2:ImagesV2")]
    public partial class ImagesV2 : global::Pulumi.CustomResource
    {
        [Output("categoryExtIds")]
        public Output<ImmutableArray<string>> CategoryExtIds { get; private set; } = null!;

        [Output("checksums")]
        public Output<ImmutableArray<Outputs.ImagesV2Checksum>> Checksums { get; private set; } = null!;

        [Output("clusterLocationExtIds")]
        public Output<ImmutableArray<string>> ClusterLocationExtIds { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("lastUpdateTime")]
        public Output<string> LastUpdateTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ownerExtId")]
        public Output<string> OwnerExtId { get; private set; } = null!;

        [Output("placementPolicyStatuses")]
        public Output<ImmutableArray<Outputs.ImagesV2PlacementPolicyStatus>> PlacementPolicyStatuses { get; private set; } = null!;

        [Output("sizeBytes")]
        public Output<int> SizeBytes { get; private set; } = null!;

        [Output("sources")]
        public Output<ImmutableArray<Outputs.ImagesV2Source>> Sources { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ImagesV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImagesV2(string name, ImagesV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/imagesV2:ImagesV2", name, args ?? new ImagesV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ImagesV2(string name, Input<string> id, ImagesV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/imagesV2:ImagesV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImagesV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImagesV2 Get(string name, Input<string> id, ImagesV2State? state = null, CustomResourceOptions? options = null)
        {
            return new ImagesV2(name, id, state, options);
        }
    }

    public sealed class ImagesV2Args : global::Pulumi.ResourceArgs
    {
        [Input("categoryExtIds")]
        private InputList<string>? _categoryExtIds;
        public InputList<string> CategoryExtIds
        {
            get => _categoryExtIds ?? (_categoryExtIds = new InputList<string>());
            set => _categoryExtIds = value;
        }

        [Input("checksums")]
        private InputList<Inputs.ImagesV2ChecksumArgs>? _checksums;
        public InputList<Inputs.ImagesV2ChecksumArgs> Checksums
        {
            get => _checksums ?? (_checksums = new InputList<Inputs.ImagesV2ChecksumArgs>());
            set => _checksums = value;
        }

        [Input("clusterLocationExtIds")]
        private InputList<string>? _clusterLocationExtIds;
        public InputList<string> ClusterLocationExtIds
        {
            get => _clusterLocationExtIds ?? (_clusterLocationExtIds = new InputList<string>());
            set => _clusterLocationExtIds = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources")]
        private InputList<Inputs.ImagesV2SourceArgs>? _sources;
        public InputList<Inputs.ImagesV2SourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.ImagesV2SourceArgs>());
            set => _sources = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ImagesV2Args()
        {
        }
        public static new ImagesV2Args Empty => new ImagesV2Args();
    }

    public sealed class ImagesV2State : global::Pulumi.ResourceArgs
    {
        [Input("categoryExtIds")]
        private InputList<string>? _categoryExtIds;
        public InputList<string> CategoryExtIds
        {
            get => _categoryExtIds ?? (_categoryExtIds = new InputList<string>());
            set => _categoryExtIds = value;
        }

        [Input("checksums")]
        private InputList<Inputs.ImagesV2ChecksumGetArgs>? _checksums;
        public InputList<Inputs.ImagesV2ChecksumGetArgs> Checksums
        {
            get => _checksums ?? (_checksums = new InputList<Inputs.ImagesV2ChecksumGetArgs>());
            set => _checksums = value;
        }

        [Input("clusterLocationExtIds")]
        private InputList<string>? _clusterLocationExtIds;
        public InputList<string> ClusterLocationExtIds
        {
            get => _clusterLocationExtIds ?? (_clusterLocationExtIds = new InputList<string>());
            set => _clusterLocationExtIds = value;
        }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ownerExtId")]
        public Input<string>? OwnerExtId { get; set; }

        [Input("placementPolicyStatuses")]
        private InputList<Inputs.ImagesV2PlacementPolicyStatusGetArgs>? _placementPolicyStatuses;
        public InputList<Inputs.ImagesV2PlacementPolicyStatusGetArgs> PlacementPolicyStatuses
        {
            get => _placementPolicyStatuses ?? (_placementPolicyStatuses = new InputList<Inputs.ImagesV2PlacementPolicyStatusGetArgs>());
            set => _placementPolicyStatuses = value;
        }

        [Input("sizeBytes")]
        public Input<int>? SizeBytes { get; set; }

        [Input("sources")]
        private InputList<Inputs.ImagesV2SourceGetArgs>? _sources;
        public InputList<Inputs.ImagesV2SourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.ImagesV2SourceGetArgs>());
            set => _sources = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ImagesV2State()
        {
        }
        public static new ImagesV2State Empty => new ImagesV2State();
    }
}
