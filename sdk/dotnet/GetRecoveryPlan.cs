// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetRecoveryPlan
    {
        /// <summary>
        /// Describe a Nutanix Recovery Plan and its values (if it has them).
        /// </summary>
        public static Task<GetRecoveryPlanResult> InvokeAsync(GetRecoveryPlanArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecoveryPlanResult>("nutanix:index/getRecoveryPlan:getRecoveryPlan", args ?? new GetRecoveryPlanArgs(), options.WithDefaults());

        /// <summary>
        /// Describe a Nutanix Recovery Plan and its values (if it has them).
        /// </summary>
        public static Output<GetRecoveryPlanResult> Invoke(GetRecoveryPlanInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecoveryPlanResult>("nutanix:index/getRecoveryPlan:getRecoveryPlan", args ?? new GetRecoveryPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecoveryPlanArgs : global::Pulumi.InvokeArgs
    {
        [Input("categories")]
        private List<Inputs.GetRecoveryPlanCategoryArgs>? _categories;
        public List<Inputs.GetRecoveryPlanCategoryArgs> Categories
        {
            get => _categories ?? (_categories = new List<Inputs.GetRecoveryPlanCategoryArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// - (Required) The `id` of the Recovery Plan.
        /// </summary>
        [Input("recoveryPlanId")]
        public string? RecoveryPlanId { get; set; }

        [Input("recoveryPlanName")]
        public string? RecoveryPlanName { get; set; }

        public GetRecoveryPlanArgs()
        {
        }
        public static new GetRecoveryPlanArgs Empty => new GetRecoveryPlanArgs();
    }

    public sealed class GetRecoveryPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("categories")]
        private InputList<Inputs.GetRecoveryPlanCategoryInputArgs>? _categories;
        public InputList<Inputs.GetRecoveryPlanCategoryInputArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.GetRecoveryPlanCategoryInputArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// - (Required) The `id` of the Recovery Plan.
        /// </summary>
        [Input("recoveryPlanId")]
        public Input<string>? RecoveryPlanId { get; set; }

        [Input("recoveryPlanName")]
        public Input<string>? RecoveryPlanName { get; set; }

        public GetRecoveryPlanInvokeArgs()
        {
        }
        public static new GetRecoveryPlanInvokeArgs Empty => new GetRecoveryPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecoveryPlanResult
    {
        public readonly string ApiVersion;
        public readonly ImmutableArray<Outputs.GetRecoveryPlanCategoryResult> Categories;
        /// <summary>
        /// A description for Recovery Plan.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// (Optional) the name.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetRecoveryPlanOwnerReferenceResult> OwnerReferences;
        /// <summary>
        /// (Required) Parameters for the Recovery Plan.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryPlanParameterResult> Parameters;
        public readonly ImmutableArray<Outputs.GetRecoveryPlanProjectReferenceResult> ProjectReferences;
        public readonly string? RecoveryPlanId;
        public readonly string? RecoveryPlanName;
        /// <summary>
        /// (Required) Input for the stages of the Recovery Plan. Each stage will perform a predefined type of task.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecoveryPlanStageListResult> StageLists;
        public readonly string State;

        [OutputConstructor]
        private GetRecoveryPlanResult(
            string apiVersion,

            ImmutableArray<Outputs.GetRecoveryPlanCategoryResult> categories,

            string description,

            string id,

            ImmutableDictionary<string, string> metadata,

            string name,

            ImmutableArray<Outputs.GetRecoveryPlanOwnerReferenceResult> ownerReferences,

            ImmutableArray<Outputs.GetRecoveryPlanParameterResult> parameters,

            ImmutableArray<Outputs.GetRecoveryPlanProjectReferenceResult> projectReferences,

            string? recoveryPlanId,

            string? recoveryPlanName,

            ImmutableArray<Outputs.GetRecoveryPlanStageListResult> stageLists,

            string state)
        {
            ApiVersion = apiVersion;
            Categories = categories;
            Description = description;
            Id = id;
            Metadata = metadata;
            Name = name;
            OwnerReferences = ownerReferences;
            Parameters = parameters;
            ProjectReferences = projectReferences;
            RecoveryPlanId = recoveryPlanId;
            RecoveryPlanName = recoveryPlanName;
            StageLists = stageLists;
            State = state;
        }
    }
}
