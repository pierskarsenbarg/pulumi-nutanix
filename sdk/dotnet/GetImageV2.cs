// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetImageV2
    {
        /// <summary>
        /// Retrieve the image details for the provided external identifier.
        /// </summary>
        public static Task<GetImageV2Result> InvokeAsync(GetImageV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageV2Result>("nutanix:index/getImageV2:getImageV2", args ?? new GetImageV2Args(), options.WithDefaults());

        /// <summary>
        /// Retrieve the image details for the provided external identifier.
        /// </summary>
        public static Output<GetImageV2Result> Invoke(GetImageV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageV2Result>("nutanix:index/getImageV2:getImageV2", args ?? new GetImageV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the image details for the provided external identifier.
        /// </summary>
        public static Output<GetImageV2Result> Invoke(GetImageV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageV2Result>("nutanix:index/getImageV2:getImageV2", args ?? new GetImageV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The external identifier of an image.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetImageV2Args()
        {
        }
        public static new GetImageV2Args Empty => new GetImageV2Args();
    }

    public sealed class GetImageV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The external identifier of an image.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetImageV2InvokeArgs()
        {
        }
        public static new GetImageV2InvokeArgs Empty => new GetImageV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetImageV2Result
    {
        /// <summary>
        /// List of category external identifiers for an image.
        /// </summary>
        public readonly ImmutableArray<string> CategoryExtIds;
        /// <summary>
        /// The checksum of an image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageV2ChecksumResult> Checksums;
        /// <summary>
        /// List of cluster external identifiers where the image is located.
        /// </summary>
        public readonly ImmutableArray<string> ClusterLocationExtIds;
        /// <summary>
        /// Create time of an image.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The user defined description of an image.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The external identifier of VM Disk.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Last update time of an image.
        /// </summary>
        public readonly string LastUpdateTime;
        /// <summary>
        /// The user defined name of an image.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// External identifier of the owner of the image
        /// </summary>
        public readonly string OwnerExtId;
        /// <summary>
        /// Status of an image placement policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageV2PlacementPolicyStatusResult> PlacementPolicyStatuses;
        /// <summary>
        /// The size in bytes of an image file.
        /// </summary>
        public readonly int SizeBytes;
        /// <summary>
        /// The source of an image. It can be a VM disk or a URL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageV2SourceResult> Sources;
        /// <summary>
        /// The type of an image.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetImageV2Result(
            ImmutableArray<string> categoryExtIds,

            ImmutableArray<Outputs.GetImageV2ChecksumResult> checksums,

            ImmutableArray<string> clusterLocationExtIds,

            string createTime,

            string description,

            string extId,

            string id,

            string lastUpdateTime,

            string name,

            string ownerExtId,

            ImmutableArray<Outputs.GetImageV2PlacementPolicyStatusResult> placementPolicyStatuses,

            int sizeBytes,

            ImmutableArray<Outputs.GetImageV2SourceResult> sources,

            string type)
        {
            CategoryExtIds = categoryExtIds;
            Checksums = checksums;
            ClusterLocationExtIds = clusterLocationExtIds;
            CreateTime = createTime;
            Description = description;
            ExtId = extId;
            Id = id;
            LastUpdateTime = lastUpdateTime;
            Name = name;
            OwnerExtId = ownerExtId;
            PlacementPolicyStatuses = placementPolicyStatuses;
            SizeBytes = sizeBytes;
            Sources = sources;
            Type = type;
        }
    }
}
