// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    [NutanixResourceType("nutanix:index/foundationIpmiConfig:FoundationIpmiConfig")]
    public partial class FoundationIpmiConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - (Required) List of blocks.
        /// </summary>
        [Output("blocks")]
        public Output<ImmutableArray<Outputs.FoundationIpmiConfigBlock>> Blocks { get; private set; } = null!;

        /// <summary>
        /// - (Required) IPMI gateway.
        /// </summary>
        [Output("ipmiGateway")]
        public Output<string> IpmiGateway { get; private set; } = null!;

        /// <summary>
        /// - (Required) IPMI netmask.
        /// </summary>
        [Output("ipmiNetmask")]
        public Output<string> IpmiNetmask { get; private set; } = null!;

        /// <summary>
        /// - (Required) IPMI password.
        /// </summary>
        [Output("ipmiPassword")]
        public Output<string> IpmiPassword { get; private set; } = null!;

        /// <summary>
        /// - (Required) IPMI username.
        /// </summary>
        [Output("ipmiUser")]
        public Output<string> IpmiUser { get; private set; } = null!;


        /// <summary>
        /// Create a FoundationIpmiConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FoundationIpmiConfig(string name, FoundationIpmiConfigArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/foundationIpmiConfig:FoundationIpmiConfig", name, args ?? new FoundationIpmiConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FoundationIpmiConfig(string name, Input<string> id, FoundationIpmiConfigState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/foundationIpmiConfig:FoundationIpmiConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/pierskarsenbarg/pulumi-nutanix/releases/download/${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FoundationIpmiConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FoundationIpmiConfig Get(string name, Input<string> id, FoundationIpmiConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new FoundationIpmiConfig(name, id, state, options);
        }
    }

    public sealed class FoundationIpmiConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("blocks", required: true)]
        private InputList<Inputs.FoundationIpmiConfigBlockArgs>? _blocks;

        /// <summary>
        /// - (Required) List of blocks.
        /// </summary>
        public InputList<Inputs.FoundationIpmiConfigBlockArgs> Blocks
        {
            get => _blocks ?? (_blocks = new InputList<Inputs.FoundationIpmiConfigBlockArgs>());
            set => _blocks = value;
        }

        /// <summary>
        /// - (Required) IPMI gateway.
        /// </summary>
        [Input("ipmiGateway", required: true)]
        public Input<string> IpmiGateway { get; set; } = null!;

        /// <summary>
        /// - (Required) IPMI netmask.
        /// </summary>
        [Input("ipmiNetmask", required: true)]
        public Input<string> IpmiNetmask { get; set; } = null!;

        /// <summary>
        /// - (Required) IPMI password.
        /// </summary>
        [Input("ipmiPassword", required: true)]
        public Input<string> IpmiPassword { get; set; } = null!;

        /// <summary>
        /// - (Required) IPMI username.
        /// </summary>
        [Input("ipmiUser", required: true)]
        public Input<string> IpmiUser { get; set; } = null!;

        public FoundationIpmiConfigArgs()
        {
        }
        public static new FoundationIpmiConfigArgs Empty => new FoundationIpmiConfigArgs();
    }

    public sealed class FoundationIpmiConfigState : global::Pulumi.ResourceArgs
    {
        [Input("blocks")]
        private InputList<Inputs.FoundationIpmiConfigBlockGetArgs>? _blocks;

        /// <summary>
        /// - (Required) List of blocks.
        /// </summary>
        public InputList<Inputs.FoundationIpmiConfigBlockGetArgs> Blocks
        {
            get => _blocks ?? (_blocks = new InputList<Inputs.FoundationIpmiConfigBlockGetArgs>());
            set => _blocks = value;
        }

        /// <summary>
        /// - (Required) IPMI gateway.
        /// </summary>
        [Input("ipmiGateway")]
        public Input<string>? IpmiGateway { get; set; }

        /// <summary>
        /// - (Required) IPMI netmask.
        /// </summary>
        [Input("ipmiNetmask")]
        public Input<string>? IpmiNetmask { get; set; }

        /// <summary>
        /// - (Required) IPMI password.
        /// </summary>
        [Input("ipmiPassword")]
        public Input<string>? IpmiPassword { get; set; }

        /// <summary>
        /// - (Required) IPMI username.
        /// </summary>
        [Input("ipmiUser")]
        public Input<string>? IpmiUser { get; set; }

        public FoundationIpmiConfigState()
        {
        }
        public static new FoundationIpmiConfigState Empty => new FoundationIpmiConfigState();
    }
}
