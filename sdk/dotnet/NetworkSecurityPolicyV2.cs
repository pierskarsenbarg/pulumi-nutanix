// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Create a Network Security Policy
    /// 
    /// ## Example
    /// </summary>
    [NutanixResourceType("nutanix:index/networkSecurityPolicyV2:NetworkSecurityPolicyV2")]
    public partial class NetworkSecurityPolicyV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// created by.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// creation time of NSP
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// A user defined annotation for a policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// If Hitlog is enabled.
        /// </summary>
        [Output("isHitlogEnabled")]
        public Output<bool?> IsHitlogEnabled { get; private set; } = null!;

        /// <summary>
        /// If Ipv6 Traffic is allowed.
        /// </summary>
        [Output("isIpv6TrafficAllowed")]
        public Output<bool?> IsIpv6TrafficAllowed { get; private set; } = null!;

        /// <summary>
        /// Is system defined NSP
        /// </summary>
        [Output("isSystemDefined")]
        public Output<bool> IsSystemDefined { get; private set; } = null!;

        /// <summary>
        /// last updated time
        /// </summary>
        [Output("lastUpdateTime")]
        public Output<string> LastUpdateTime { get; private set; } = null!;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.NetworkSecurityPolicyV2Link>> Links { get; private set; } = null!;

        /// <summary>
        /// Name of the Flow Network Security Policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.NetworkSecurityPolicyV2Rule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// Uuids of the secured groups in the NSP.
        /// </summary>
        [Output("securedGroups")]
        public Output<ImmutableArray<string>> SecuredGroups { get; private set; } = null!;

        /// <summary>
        /// Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it. Acceptable values are "SAVE", "MONITOR", "ENFORCE".
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// Defines the type of rules that can be used in a policy. Acceptable values are "QUARANTINE", "ISOLATION", "APPLICATION".
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
        /// </summary>
        [Output("vpcReferences")]
        public Output<ImmutableArray<string>> VpcReferences { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkSecurityPolicyV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkSecurityPolicyV2(string name, NetworkSecurityPolicyV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/networkSecurityPolicyV2:NetworkSecurityPolicyV2", name, args ?? new NetworkSecurityPolicyV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkSecurityPolicyV2(string name, Input<string> id, NetworkSecurityPolicyV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/networkSecurityPolicyV2:NetworkSecurityPolicyV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkSecurityPolicyV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkSecurityPolicyV2 Get(string name, Input<string> id, NetworkSecurityPolicyV2State? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkSecurityPolicyV2(name, id, state, options);
        }
    }

    public sealed class NetworkSecurityPolicyV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A user defined annotation for a policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// If Hitlog is enabled.
        /// </summary>
        [Input("isHitlogEnabled")]
        public Input<bool>? IsHitlogEnabled { get; set; }

        /// <summary>
        /// If Ipv6 Traffic is allowed.
        /// </summary>
        [Input("isIpv6TrafficAllowed")]
        public Input<bool>? IsIpv6TrafficAllowed { get; set; }

        /// <summary>
        /// Name of the Flow Network Security Policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.NetworkSecurityPolicyV2RuleArgs>? _rules;

        /// <summary>
        /// A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
        /// </summary>
        public InputList<Inputs.NetworkSecurityPolicyV2RuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NetworkSecurityPolicyV2RuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it. Acceptable values are "SAVE", "MONITOR", "ENFORCE".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Defines the type of rules that can be used in a policy. Acceptable values are "QUARANTINE", "ISOLATION", "APPLICATION".
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("vpcReferences")]
        private InputList<string>? _vpcReferences;

        /// <summary>
        /// A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
        /// </summary>
        public InputList<string> VpcReferences
        {
            get => _vpcReferences ?? (_vpcReferences = new InputList<string>());
            set => _vpcReferences = value;
        }

        public NetworkSecurityPolicyV2Args()
        {
        }
        public static new NetworkSecurityPolicyV2Args Empty => new NetworkSecurityPolicyV2Args();
    }

    public sealed class NetworkSecurityPolicyV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// created by.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// creation time of NSP
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// A user defined annotation for a policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        /// <summary>
        /// If Hitlog is enabled.
        /// </summary>
        [Input("isHitlogEnabled")]
        public Input<bool>? IsHitlogEnabled { get; set; }

        /// <summary>
        /// If Ipv6 Traffic is allowed.
        /// </summary>
        [Input("isIpv6TrafficAllowed")]
        public Input<bool>? IsIpv6TrafficAllowed { get; set; }

        /// <summary>
        /// Is system defined NSP
        /// </summary>
        [Input("isSystemDefined")]
        public Input<bool>? IsSystemDefined { get; set; }

        /// <summary>
        /// last updated time
        /// </summary>
        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        [Input("links")]
        private InputList<Inputs.NetworkSecurityPolicyV2LinkGetArgs>? _links;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.NetworkSecurityPolicyV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.NetworkSecurityPolicyV2LinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// Name of the Flow Network Security Policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.NetworkSecurityPolicyV2RuleGetArgs>? _rules;

        /// <summary>
        /// A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
        /// </summary>
        public InputList<Inputs.NetworkSecurityPolicyV2RuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.NetworkSecurityPolicyV2RuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("securedGroups")]
        private InputList<string>? _securedGroups;

        /// <summary>
        /// Uuids of the secured groups in the NSP.
        /// </summary>
        public InputList<string> SecuredGroups
        {
            get => _securedGroups ?? (_securedGroups = new InputList<string>());
            set => _securedGroups = value;
        }

        /// <summary>
        /// Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it. Acceptable values are "SAVE", "MONITOR", "ENFORCE".
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        /// <summary>
        /// Defines the type of rules that can be used in a policy. Acceptable values are "QUARANTINE", "ISOLATION", "APPLICATION".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcReferences")]
        private InputList<string>? _vpcReferences;

        /// <summary>
        /// A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
        /// </summary>
        public InputList<string> VpcReferences
        {
            get => _vpcReferences ?? (_vpcReferences = new InputList<string>());
            set => _vpcReferences = value;
        }

        public NetworkSecurityPolicyV2State()
        {
        }
        public static new NetworkSecurityPolicyV2State Empty => new NetworkSecurityPolicyV2State();
    }
}
