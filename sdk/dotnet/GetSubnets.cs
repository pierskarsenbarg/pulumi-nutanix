// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetSubnets
    {
        /// <summary>
        /// Describes a list of subnets
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var subnets = Output.Create(Nutanix.GetSubnets.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubnetsResult> InvokeAsync(GetSubnetsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubnetsResult>("nutanix:index/getSubnets:getSubnets", args ?? new GetSubnetsArgs(), options.WithDefaults());

        /// <summary>
        /// Describes a list of subnets
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var subnets = Output.Create(Nutanix.GetSubnets.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubnetsResult> Invoke(GetSubnetsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubnetsResult>("nutanix:index/getSubnets:getSubnets", args ?? new GetSubnetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetsArgs : Pulumi.InvokeArgs
    {
        [Input("metadatas")]
        private List<Inputs.GetSubnetsMetadataArgs>? _metadatas;
        public List<Inputs.GetSubnetsMetadataArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new List<Inputs.GetSubnetsMetadataArgs>());
            set => _metadatas = value;
        }

        public GetSubnetsArgs()
        {
        }
    }

    public sealed class GetSubnetsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("metadatas")]
        private InputList<Inputs.GetSubnetsMetadataInputArgs>? _metadatas;
        public InputList<Inputs.GetSubnetsMetadataInputArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.GetSubnetsMetadataInputArgs>());
            set => _metadatas = value;
        }

        public GetSubnetsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSubnetsResult
    {
        public readonly string ApiVersion;
        public readonly ImmutableArray<Outputs.GetSubnetsEntityResult> Entities;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetSubnetsMetadataResult> Metadatas;

        [OutputConstructor]
        private GetSubnetsResult(
            string apiVersion,

            ImmutableArray<Outputs.GetSubnetsEntityResult> entities,

            string id,

            ImmutableArray<Outputs.GetSubnetsMetadataResult> metadatas)
        {
            ApiVersion = apiVersion;
            Entities = entities;
            Id = id;
            Metadatas = metadatas;
        }
    }
}
