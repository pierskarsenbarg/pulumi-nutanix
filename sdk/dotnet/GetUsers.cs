// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetUsers
    {
        /// <summary>
        /// Provides a datasource to retrieve all the users.
        /// 
        /// ## Example Usage
        /// 
        /// ``` hcl
        /// resource "nutanix_user" "user" {
        /// 	directory_service_user {
        /// 		user_principal_name = "test-user@ntnxlab.local"
        /// 		directory_service_reference {
        /// 		uuid = "&lt;directory-service-uuid&gt;"
        /// 		}
        /// 	}
        /// }
        /// 
        /// data "nutanix_user" "users" {}
        /// ```
        /// </summary>
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("nutanix:index/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to retrieve all the users.
        /// 
        /// ## Example Usage
        /// 
        /// ``` hcl
        /// resource "nutanix_user" "user" {
        /// 	directory_service_user {
        /// 		user_principal_name = "test-user@ntnxlab.local"
        /// 		directory_service_reference {
        /// 		uuid = "&lt;directory-service-uuid&gt;"
        /// 		}
        /// 	}
        /// }
        /// 
        /// data "nutanix_user" "users" {}
        /// ```
        /// </summary>
        public static Output<GetUsersResult> Invoke(GetUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsersResult>("nutanix:index/getUsers:getUsers", args ?? new GetUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("metadatas")]
        private List<Inputs.GetUsersMetadataArgs>? _metadatas;

        /// <summary>
        /// - The user kind metadata.
        /// </summary>
        public List<Inputs.GetUsersMetadataArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new List<Inputs.GetUsersMetadataArgs>());
            set => _metadatas = value;
        }

        public GetUsersArgs()
        {
        }
        public static new GetUsersArgs Empty => new GetUsersArgs();
    }

    public sealed class GetUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("metadatas")]
        private InputList<Inputs.GetUsersMetadataInputArgs>? _metadatas;

        /// <summary>
        /// - The user kind metadata.
        /// </summary>
        public InputList<Inputs.GetUsersMetadataInputArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.GetUsersMetadataInputArgs>());
            set => _metadatas = value;
        }

        public GetUsersInvokeArgs()
        {
        }
        public static new GetUsersInvokeArgs Empty => new GetUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        /// <summary>
        /// The version of the API.
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// List of Users
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersEntityResult> Entities;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - The user kind metadata.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUsersMetadataResult> Metadatas;

        [OutputConstructor]
        private GetUsersResult(
            string apiVersion,

            ImmutableArray<Outputs.GetUsersEntityResult> entities,

            string id,

            ImmutableArray<Outputs.GetUsersMetadataResult> metadatas)
        {
            ApiVersion = apiVersion;
            Entities = entities;
            Id = id;
            Metadatas = metadatas;
        }
    }
}
