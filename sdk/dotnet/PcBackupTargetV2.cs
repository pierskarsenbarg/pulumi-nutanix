// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Create a cluster or object store as the backup target. For a given Prism Central, there can be up to 3 clusters as backup targets and 1 object store as backup target. If any cluster or object store is not eligible for backup or lacks appropriate permissions, the API request will fail. For object store backup targets, specifying backup policy is mandatory along with the location of the object store.
    /// 
    /// ## Example Usage
    /// 
    /// ### Object Store Location
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     //using object store location
    ///     var object_store_location = new Nutanix.PcBackupTargetV2("object-store-location", new()
    ///     {
    ///         DomainManagerExtId = "75dde184-3a0e-4f59-a185-03ca1efead17",
    ///         Location = new Nutanix.Inputs.PcBackupTargetV2LocationArgs
    ///         {
    ///             ObjectStoreLocations = new[]
    ///             {
    ///                 new Nutanix.Inputs.PcBackupTargetV2LocationObjectStoreLocationArgs
    ///                 {
    ///                     ProviderConfigs = new[]
    ///                     {
    ///                         new Nutanix.Inputs.PcBackupTargetV2LocationObjectStoreLocationProviderConfigArgs
    ///                         {
    ///                             BucketName = "nutanix-terraform-bucket",
    ///                             Region = "us-west-1",
    ///                             Credentials = new Nutanix.Inputs.PcBackupTargetV2LocationObjectStoreLocationProviderConfigCredentialsArgs
    ///                             {
    ///                                 AccessKeyId = "IHSAJHDHADFWYTKJHFGCJKHASGJHKDSA",
    ///                                 SecretAccessKey = "JGSDHJYHGFHGHDS+JKBASDF/HSDAFHJ+SjkfbdsASDfdJFdSDFJfk",
    ///                             },
    ///                         },
    ///                     },
    ///                     BackupPolicies = new[]
    ///                     {
    ///                         new Nutanix.Inputs.PcBackupTargetV2LocationObjectStoreLocationBackupPolicyArgs
    ///                         {
    ///                             RpoInMinutes = 120,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/pcBackupTargetV2:PcBackupTargetV2")]
    public partial class PcBackupTargetV2 : global::Pulumi.CustomResource
    {
        [Output("backupPauseReason")]
        public Output<string> BackupPauseReason { get; private set; } = null!;

        /// <summary>
        /// -(Required) A unique identifier for the domain manager.
        /// </summary>
        [Output("domainManagerExtId")]
        public Output<string> DomainManagerExtId { get; private set; } = null!;

        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        [Output("isBackupPaused")]
        public Output<bool> IsBackupPaused { get; private set; } = null!;

        [Output("lastSyncTime")]
        public Output<string> LastSyncTime { get; private set; } = null!;

        [Output("links")]
        public Output<ImmutableArray<Outputs.PcBackupTargetV2Link>> Links { get; private set; } = null!;

        /// <summary>
        /// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
        /// </summary>
        [Output("location")]
        public Output<Outputs.PcBackupTargetV2Location> Location { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a PcBackupTargetV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PcBackupTargetV2(string name, PcBackupTargetV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/pcBackupTargetV2:PcBackupTargetV2", name, args ?? new PcBackupTargetV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private PcBackupTargetV2(string name, Input<string> id, PcBackupTargetV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/pcBackupTargetV2:PcBackupTargetV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PcBackupTargetV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PcBackupTargetV2 Get(string name, Input<string> id, PcBackupTargetV2State? state = null, CustomResourceOptions? options = null)
        {
            return new PcBackupTargetV2(name, id, state, options);
        }
    }

    public sealed class PcBackupTargetV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -(Required) A unique identifier for the domain manager.
        /// </summary>
        [Input("domainManagerExtId", required: true)]
        public Input<string> DomainManagerExtId { get; set; } = null!;

        /// <summary>
        /// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
        /// </summary>
        [Input("location", required: true)]
        public Input<Inputs.PcBackupTargetV2LocationArgs> Location { get; set; } = null!;

        public PcBackupTargetV2Args()
        {
        }
        public static new PcBackupTargetV2Args Empty => new PcBackupTargetV2Args();
    }

    public sealed class PcBackupTargetV2State : global::Pulumi.ResourceArgs
    {
        [Input("backupPauseReason")]
        public Input<string>? BackupPauseReason { get; set; }

        /// <summary>
        /// -(Required) A unique identifier for the domain manager.
        /// </summary>
        [Input("domainManagerExtId")]
        public Input<string>? DomainManagerExtId { get; set; }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("isBackupPaused")]
        public Input<bool>? IsBackupPaused { get; set; }

        [Input("lastSyncTime")]
        public Input<string>? LastSyncTime { get; set; }

        [Input("links")]
        private InputList<Inputs.PcBackupTargetV2LinkGetArgs>? _links;
        public InputList<Inputs.PcBackupTargetV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.PcBackupTargetV2LinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
        /// </summary>
        [Input("location")]
        public Input<Inputs.PcBackupTargetV2LocationGetArgs>? Location { get; set; }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        public PcBackupTargetV2State()
        {
        }
        public static new PcBackupTargetV2State Empty => new PcBackupTargetV2State();
    }
}
