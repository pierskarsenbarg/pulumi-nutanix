// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    [NutanixResourceType("nutanix:index/ndbLinkedDatabases:NdbLinkedDatabases")]
    public partial class NdbLinkedDatabases : global::Pulumi.CustomResource
    {
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        [Output("databaseName")]
        public Output<string?> DatabaseName { get; private set; } = null!;

        [Output("databaseStatus")]
        public Output<string> DatabaseStatus { get; private set; } = null!;

        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        [Output("dateModified")]
        public Output<string> DateModified { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("infos")]
        public Output<ImmutableArray<Outputs.NdbLinkedDatabasesInfo>> Infos { get; private set; } = null!;

        [Output("metric")]
        public Output<ImmutableDictionary<string, string>> Metric { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parentDatabaseId")]
        public Output<string> ParentDatabaseId { get; private set; } = null!;

        [Output("parentLinkedDatabaseId")]
        public Output<string> ParentLinkedDatabaseId { get; private set; } = null!;

        [Output("snapshotId")]
        public Output<string> SnapshotId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a NdbLinkedDatabases resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NdbLinkedDatabases(string name, NdbLinkedDatabasesArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/ndbLinkedDatabases:NdbLinkedDatabases", name, args ?? new NdbLinkedDatabasesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NdbLinkedDatabases(string name, Input<string> id, NdbLinkedDatabasesState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/ndbLinkedDatabases:NdbLinkedDatabases", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NdbLinkedDatabases resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NdbLinkedDatabases Get(string name, Input<string> id, NdbLinkedDatabasesState? state = null, CustomResourceOptions? options = null)
        {
            return new NdbLinkedDatabases(name, id, state, options);
        }
    }

    public sealed class NdbLinkedDatabasesArgs : global::Pulumi.ResourceArgs
    {
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        public NdbLinkedDatabasesArgs()
        {
        }
        public static new NdbLinkedDatabasesArgs Empty => new NdbLinkedDatabasesArgs();
    }

    public sealed class NdbLinkedDatabasesState : global::Pulumi.ResourceArgs
    {
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        [Input("databaseStatus")]
        public Input<string>? DatabaseStatus { get; set; }

        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        [Input("dateModified")]
        public Input<string>? DateModified { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("infos")]
        private InputList<Inputs.NdbLinkedDatabasesInfoGetArgs>? _infos;
        public InputList<Inputs.NdbLinkedDatabasesInfoGetArgs> Infos
        {
            get => _infos ?? (_infos = new InputList<Inputs.NdbLinkedDatabasesInfoGetArgs>());
            set => _infos = value;
        }

        [Input("metric")]
        private InputMap<string>? _metric;
        public InputMap<string> Metric
        {
            get => _metric ?? (_metric = new InputMap<string>());
            set => _metric = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentDatabaseId")]
        public Input<string>? ParentDatabaseId { get; set; }

        [Input("parentLinkedDatabaseId")]
        public Input<string>? ParentLinkedDatabaseId { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public NdbLinkedDatabasesState()
        {
        }
        public static new NdbLinkedDatabasesState Empty => new NdbLinkedDatabasesState();
    }
}
