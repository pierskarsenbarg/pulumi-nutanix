// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides a resource to perform the refresh clone of database based on the input parameters.
    /// 
    /// ## Example Usage
    /// 
    /// ### resource to refresh clone with snapshot id
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var acctest_managed = new Nutanix.NdbCloneRefresh("acctest-managed", new()
    ///     {
    ///         CloneId = "{{ clone_id }}",
    ///         SnapshotId = "{{ snapshot_id }}",
    ///         Timezone = "Asia/Calcutta",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/ndbCloneRefresh:NdbCloneRefresh")]
    public partial class NdbCloneRefresh : global::Pulumi.CustomResource
    {
        /// <summary>
        /// clone id
        /// </summary>
        [Output("cloneId")]
        public Output<string> CloneId { get; private set; } = null!;

        /// <summary>
        /// snapshot id where clone has to be refreshed
        /// </summary>
        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// timezone. Default is Asia/Calcutta. 
        /// 
        /// See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
        /// </summary>
        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        [Output("userPitrTimestamp")]
        public Output<string?> UserPitrTimestamp { get; private set; } = null!;


        /// <summary>
        /// Create a NdbCloneRefresh resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NdbCloneRefresh(string name, NdbCloneRefreshArgs args, CustomResourceOptions? options = null)
            : base("nutanix:index/ndbCloneRefresh:NdbCloneRefresh", name, args ?? new NdbCloneRefreshArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NdbCloneRefresh(string name, Input<string> id, NdbCloneRefreshState? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/ndbCloneRefresh:NdbCloneRefresh", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NdbCloneRefresh resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NdbCloneRefresh Get(string name, Input<string> id, NdbCloneRefreshState? state = null, CustomResourceOptions? options = null)
        {
            return new NdbCloneRefresh(name, id, state, options);
        }
    }

    public sealed class NdbCloneRefreshArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// clone id
        /// </summary>
        [Input("cloneId", required: true)]
        public Input<string> CloneId { get; set; } = null!;

        /// <summary>
        /// snapshot id where clone has to be refreshed
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// timezone. Default is Asia/Calcutta. 
        /// 
        /// See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("userPitrTimestamp")]
        public Input<string>? UserPitrTimestamp { get; set; }

        public NdbCloneRefreshArgs()
        {
        }
        public static new NdbCloneRefreshArgs Empty => new NdbCloneRefreshArgs();
    }

    public sealed class NdbCloneRefreshState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// clone id
        /// </summary>
        [Input("cloneId")]
        public Input<string>? CloneId { get; set; }

        /// <summary>
        /// snapshot id where clone has to be refreshed
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// timezone. Default is Asia/Calcutta. 
        /// 
        /// See detailed information in [NDB Clone Refresh](https://www.nutanix.dev/api_references/ndb/#/d4e53fff274fa-start-refresh-operation-for-the-given-clone).
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("userPitrTimestamp")]
        public Input<string>? UserPitrTimestamp { get; set; }

        public NdbCloneRefreshState()
        {
        }
        public static new NdbCloneRefreshState Empty => new NdbCloneRefreshState();
    }
}
