// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    [NutanixResourceType("nutanix:index/vmCloneV2:VmCloneV2")]
    public partial class VmCloneV2 : global::Pulumi.CustomResource
    {
        [Output("apcConfigs")]
        public Output<ImmutableArray<Outputs.VmCloneV2ApcConfig>> ApcConfigs { get; private set; } = null!;

        [Output("biosUuid")]
        public Output<string> BiosUuid { get; private set; } = null!;

        [Output("bootConfigs")]
        public Output<ImmutableArray<Outputs.VmCloneV2BootConfig>> BootConfigs { get; private set; } = null!;

        [Output("categories")]
        public Output<ImmutableArray<Outputs.VmCloneV2Category>> Categories { get; private set; } = null!;

        [Output("cdRoms")]
        public Output<ImmutableArray<Outputs.VmCloneV2CdRom>> CdRoms { get; private set; } = null!;

        [Output("clusters")]
        public Output<ImmutableArray<Outputs.VmCloneV2Cluster>> Clusters { get; private set; } = null!;

        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("disks")]
        public Output<ImmutableArray<Outputs.VmCloneV2Disk>> Disks { get; private set; } = null!;

        [Output("enabledCpuFeatures")]
        public Output<ImmutableArray<string>> EnabledCpuFeatures { get; private set; } = null!;

        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        [Output("generationUuid")]
        public Output<string> GenerationUuid { get; private set; } = null!;

        [Output("gpuses")]
        public Output<ImmutableArray<Outputs.VmCloneV2Gpus>> Gpuses { get; private set; } = null!;

        [Output("guestCustomizations")]
        public Output<ImmutableArray<Outputs.VmCloneV2GuestCustomization>> GuestCustomizations { get; private set; } = null!;

        [Output("guestTools")]
        public Output<ImmutableArray<Outputs.VmCloneV2GuestTool>> GuestTools { get; private set; } = null!;

        [Output("hardwareClockTimezone")]
        public Output<string> HardwareClockTimezone { get; private set; } = null!;

        [Output("hosts")]
        public Output<ImmutableArray<Outputs.VmCloneV2Host>> Hosts { get; private set; } = null!;

        [Output("isAgentVm")]
        public Output<bool> IsAgentVm { get; private set; } = null!;

        [Output("isBrandingEnabled")]
        public Output<bool> IsBrandingEnabled { get; private set; } = null!;

        [Output("isCpuHotplugEnabled")]
        public Output<bool> IsCpuHotplugEnabled { get; private set; } = null!;

        [Output("isCpuPassthroughEnabled")]
        public Output<bool> IsCpuPassthroughEnabled { get; private set; } = null!;

        [Output("isGpuConsoleEnabled")]
        public Output<bool> IsGpuConsoleEnabled { get; private set; } = null!;

        [Output("isMemoryOvercommitEnabled")]
        public Output<bool> IsMemoryOvercommitEnabled { get; private set; } = null!;

        [Output("isScsiControllerEnabled")]
        public Output<bool> IsScsiControllerEnabled { get; private set; } = null!;

        [Output("isVcpuHardPinningEnabled")]
        public Output<bool> IsVcpuHardPinningEnabled { get; private set; } = null!;

        [Output("isVgaConsoleEnabled")]
        public Output<bool> IsVgaConsoleEnabled { get; private set; } = null!;

        [Output("links")]
        public Output<ImmutableArray<Outputs.VmCloneV2Link>> Links { get; private set; } = null!;

        [Output("machineType")]
        public Output<string> MachineType { get; private set; } = null!;

        [Output("memorySizeBytes")]
        public Output<int> MemorySizeBytes { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nics")]
        public Output<ImmutableArray<Outputs.VmCloneV2Nic>> Nics { get; private set; } = null!;

        [Output("numCoresPerSocket")]
        public Output<int> NumCoresPerSocket { get; private set; } = null!;

        [Output("numNumaNodes")]
        public Output<int> NumNumaNodes { get; private set; } = null!;

        [Output("numSockets")]
        public Output<int> NumSockets { get; private set; } = null!;

        [Output("numThreadsPerCore")]
        public Output<int> NumThreadsPerCore { get; private set; } = null!;

        [Output("ownershipInfos")]
        public Output<ImmutableArray<Outputs.VmCloneV2OwnershipInfo>> OwnershipInfos { get; private set; } = null!;

        [Output("powerState")]
        public Output<string> PowerState { get; private set; } = null!;

        [Output("protectionPolicyStates")]
        public Output<ImmutableArray<Outputs.VmCloneV2ProtectionPolicyState>> ProtectionPolicyStates { get; private set; } = null!;

        [Output("protectionType")]
        public Output<string> ProtectionType { get; private set; } = null!;

        [Output("serialPorts")]
        public Output<ImmutableArray<Outputs.VmCloneV2SerialPort>> SerialPorts { get; private set; } = null!;

        [Output("sources")]
        public Output<ImmutableArray<Outputs.VmCloneV2Source>> Sources { get; private set; } = null!;

        [Output("storageConfigs")]
        public Output<ImmutableArray<Outputs.VmCloneV2StorageConfig>> StorageConfigs { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("vmExtId")]
        public Output<string> VmExtId { get; private set; } = null!;

        [Output("vtpmConfigs")]
        public Output<ImmutableArray<Outputs.VmCloneV2VtpmConfig>> VtpmConfigs { get; private set; } = null!;


        /// <summary>
        /// Create a VmCloneV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VmCloneV2(string name, VmCloneV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/vmCloneV2:VmCloneV2", name, args ?? new VmCloneV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private VmCloneV2(string name, Input<string> id, VmCloneV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/vmCloneV2:VmCloneV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VmCloneV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VmCloneV2 Get(string name, Input<string> id, VmCloneV2State? state = null, CustomResourceOptions? options = null)
        {
            return new VmCloneV2(name, id, state, options);
        }
    }

    public sealed class VmCloneV2Args : global::Pulumi.ResourceArgs
    {
        [Input("bootConfigs")]
        private InputList<Inputs.VmCloneV2BootConfigArgs>? _bootConfigs;
        public InputList<Inputs.VmCloneV2BootConfigArgs> BootConfigs
        {
            get => _bootConfigs ?? (_bootConfigs = new InputList<Inputs.VmCloneV2BootConfigArgs>());
            set => _bootConfigs = value;
        }

        [Input("guestCustomizations")]
        private InputList<Inputs.VmCloneV2GuestCustomizationArgs>? _guestCustomizations;
        public InputList<Inputs.VmCloneV2GuestCustomizationArgs> GuestCustomizations
        {
            get => _guestCustomizations ?? (_guestCustomizations = new InputList<Inputs.VmCloneV2GuestCustomizationArgs>());
            set => _guestCustomizations = value;
        }

        [Input("memorySizeBytes")]
        public Input<int>? MemorySizeBytes { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nics")]
        private InputList<Inputs.VmCloneV2NicArgs>? _nics;
        public InputList<Inputs.VmCloneV2NicArgs> Nics
        {
            get => _nics ?? (_nics = new InputList<Inputs.VmCloneV2NicArgs>());
            set => _nics = value;
        }

        [Input("numCoresPerSocket")]
        public Input<int>? NumCoresPerSocket { get; set; }

        [Input("numSockets")]
        public Input<int>? NumSockets { get; set; }

        [Input("numThreadsPerCore")]
        public Input<int>? NumThreadsPerCore { get; set; }

        [Input("vmExtId", required: true)]
        public Input<string> VmExtId { get; set; } = null!;

        public VmCloneV2Args()
        {
        }
        public static new VmCloneV2Args Empty => new VmCloneV2Args();
    }

    public sealed class VmCloneV2State : global::Pulumi.ResourceArgs
    {
        [Input("apcConfigs")]
        private InputList<Inputs.VmCloneV2ApcConfigGetArgs>? _apcConfigs;
        public InputList<Inputs.VmCloneV2ApcConfigGetArgs> ApcConfigs
        {
            get => _apcConfigs ?? (_apcConfigs = new InputList<Inputs.VmCloneV2ApcConfigGetArgs>());
            set => _apcConfigs = value;
        }

        [Input("biosUuid")]
        public Input<string>? BiosUuid { get; set; }

        [Input("bootConfigs")]
        private InputList<Inputs.VmCloneV2BootConfigGetArgs>? _bootConfigs;
        public InputList<Inputs.VmCloneV2BootConfigGetArgs> BootConfigs
        {
            get => _bootConfigs ?? (_bootConfigs = new InputList<Inputs.VmCloneV2BootConfigGetArgs>());
            set => _bootConfigs = value;
        }

        [Input("categories")]
        private InputList<Inputs.VmCloneV2CategoryGetArgs>? _categories;
        public InputList<Inputs.VmCloneV2CategoryGetArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.VmCloneV2CategoryGetArgs>());
            set => _categories = value;
        }

        [Input("cdRoms")]
        private InputList<Inputs.VmCloneV2CdRomGetArgs>? _cdRoms;
        public InputList<Inputs.VmCloneV2CdRomGetArgs> CdRoms
        {
            get => _cdRoms ?? (_cdRoms = new InputList<Inputs.VmCloneV2CdRomGetArgs>());
            set => _cdRoms = value;
        }

        [Input("clusters")]
        private InputList<Inputs.VmCloneV2ClusterGetArgs>? _clusters;
        public InputList<Inputs.VmCloneV2ClusterGetArgs> Clusters
        {
            get => _clusters ?? (_clusters = new InputList<Inputs.VmCloneV2ClusterGetArgs>());
            set => _clusters = value;
        }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disks")]
        private InputList<Inputs.VmCloneV2DiskGetArgs>? _disks;
        public InputList<Inputs.VmCloneV2DiskGetArgs> Disks
        {
            get => _disks ?? (_disks = new InputList<Inputs.VmCloneV2DiskGetArgs>());
            set => _disks = value;
        }

        [Input("enabledCpuFeatures")]
        private InputList<string>? _enabledCpuFeatures;
        public InputList<string> EnabledCpuFeatures
        {
            get => _enabledCpuFeatures ?? (_enabledCpuFeatures = new InputList<string>());
            set => _enabledCpuFeatures = value;
        }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("generationUuid")]
        public Input<string>? GenerationUuid { get; set; }

        [Input("gpuses")]
        private InputList<Inputs.VmCloneV2GpusGetArgs>? _gpuses;
        public InputList<Inputs.VmCloneV2GpusGetArgs> Gpuses
        {
            get => _gpuses ?? (_gpuses = new InputList<Inputs.VmCloneV2GpusGetArgs>());
            set => _gpuses = value;
        }

        [Input("guestCustomizations")]
        private InputList<Inputs.VmCloneV2GuestCustomizationGetArgs>? _guestCustomizations;
        public InputList<Inputs.VmCloneV2GuestCustomizationGetArgs> GuestCustomizations
        {
            get => _guestCustomizations ?? (_guestCustomizations = new InputList<Inputs.VmCloneV2GuestCustomizationGetArgs>());
            set => _guestCustomizations = value;
        }

        [Input("guestTools")]
        private InputList<Inputs.VmCloneV2GuestToolGetArgs>? _guestTools;
        public InputList<Inputs.VmCloneV2GuestToolGetArgs> GuestTools
        {
            get => _guestTools ?? (_guestTools = new InputList<Inputs.VmCloneV2GuestToolGetArgs>());
            set => _guestTools = value;
        }

        [Input("hardwareClockTimezone")]
        public Input<string>? HardwareClockTimezone { get; set; }

        [Input("hosts")]
        private InputList<Inputs.VmCloneV2HostGetArgs>? _hosts;
        public InputList<Inputs.VmCloneV2HostGetArgs> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<Inputs.VmCloneV2HostGetArgs>());
            set => _hosts = value;
        }

        [Input("isAgentVm")]
        public Input<bool>? IsAgentVm { get; set; }

        [Input("isBrandingEnabled")]
        public Input<bool>? IsBrandingEnabled { get; set; }

        [Input("isCpuHotplugEnabled")]
        public Input<bool>? IsCpuHotplugEnabled { get; set; }

        [Input("isCpuPassthroughEnabled")]
        public Input<bool>? IsCpuPassthroughEnabled { get; set; }

        [Input("isGpuConsoleEnabled")]
        public Input<bool>? IsGpuConsoleEnabled { get; set; }

        [Input("isMemoryOvercommitEnabled")]
        public Input<bool>? IsMemoryOvercommitEnabled { get; set; }

        [Input("isScsiControllerEnabled")]
        public Input<bool>? IsScsiControllerEnabled { get; set; }

        [Input("isVcpuHardPinningEnabled")]
        public Input<bool>? IsVcpuHardPinningEnabled { get; set; }

        [Input("isVgaConsoleEnabled")]
        public Input<bool>? IsVgaConsoleEnabled { get; set; }

        [Input("links")]
        private InputList<Inputs.VmCloneV2LinkGetArgs>? _links;
        public InputList<Inputs.VmCloneV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.VmCloneV2LinkGetArgs>());
            set => _links = value;
        }

        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("memorySizeBytes")]
        public Input<int>? MemorySizeBytes { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nics")]
        private InputList<Inputs.VmCloneV2NicGetArgs>? _nics;
        public InputList<Inputs.VmCloneV2NicGetArgs> Nics
        {
            get => _nics ?? (_nics = new InputList<Inputs.VmCloneV2NicGetArgs>());
            set => _nics = value;
        }

        [Input("numCoresPerSocket")]
        public Input<int>? NumCoresPerSocket { get; set; }

        [Input("numNumaNodes")]
        public Input<int>? NumNumaNodes { get; set; }

        [Input("numSockets")]
        public Input<int>? NumSockets { get; set; }

        [Input("numThreadsPerCore")]
        public Input<int>? NumThreadsPerCore { get; set; }

        [Input("ownershipInfos")]
        private InputList<Inputs.VmCloneV2OwnershipInfoGetArgs>? _ownershipInfos;
        public InputList<Inputs.VmCloneV2OwnershipInfoGetArgs> OwnershipInfos
        {
            get => _ownershipInfos ?? (_ownershipInfos = new InputList<Inputs.VmCloneV2OwnershipInfoGetArgs>());
            set => _ownershipInfos = value;
        }

        [Input("powerState")]
        public Input<string>? PowerState { get; set; }

        [Input("protectionPolicyStates")]
        private InputList<Inputs.VmCloneV2ProtectionPolicyStateGetArgs>? _protectionPolicyStates;
        public InputList<Inputs.VmCloneV2ProtectionPolicyStateGetArgs> ProtectionPolicyStates
        {
            get => _protectionPolicyStates ?? (_protectionPolicyStates = new InputList<Inputs.VmCloneV2ProtectionPolicyStateGetArgs>());
            set => _protectionPolicyStates = value;
        }

        [Input("protectionType")]
        public Input<string>? ProtectionType { get; set; }

        [Input("serialPorts")]
        private InputList<Inputs.VmCloneV2SerialPortGetArgs>? _serialPorts;
        public InputList<Inputs.VmCloneV2SerialPortGetArgs> SerialPorts
        {
            get => _serialPorts ?? (_serialPorts = new InputList<Inputs.VmCloneV2SerialPortGetArgs>());
            set => _serialPorts = value;
        }

        [Input("sources")]
        private InputList<Inputs.VmCloneV2SourceGetArgs>? _sources;
        public InputList<Inputs.VmCloneV2SourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.VmCloneV2SourceGetArgs>());
            set => _sources = value;
        }

        [Input("storageConfigs")]
        private InputList<Inputs.VmCloneV2StorageConfigGetArgs>? _storageConfigs;
        public InputList<Inputs.VmCloneV2StorageConfigGetArgs> StorageConfigs
        {
            get => _storageConfigs ?? (_storageConfigs = new InputList<Inputs.VmCloneV2StorageConfigGetArgs>());
            set => _storageConfigs = value;
        }

        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("vmExtId")]
        public Input<string>? VmExtId { get; set; }

        [Input("vtpmConfigs")]
        private InputList<Inputs.VmCloneV2VtpmConfigGetArgs>? _vtpmConfigs;
        public InputList<Inputs.VmCloneV2VtpmConfigGetArgs> VtpmConfigs
        {
            get => _vtpmConfigs ?? (_vtpmConfigs = new InputList<Inputs.VmCloneV2VtpmConfigGetArgs>());
            set => _vtpmConfigs = value;
        }

        public VmCloneV2State()
        {
        }
        public static new VmCloneV2State Empty => new VmCloneV2State();
    }
}
