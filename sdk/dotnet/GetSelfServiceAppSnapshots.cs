// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetSelfServiceAppSnapshots
    {
        /// <summary>
        /// Describes recovery points (snapshots taken) present in an NCM Self Service Application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Nutanix.GetSelfServiceAppSnapshots.Invoke(new()
        ///     {
        ///         AppName = "NAME OF APPLICATION",
        ///         Length = 250,
        ///         Offset = 0,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSelfServiceAppSnapshotsResult> InvokeAsync(GetSelfServiceAppSnapshotsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSelfServiceAppSnapshotsResult>("nutanix:index/getSelfServiceAppSnapshots:getSelfServiceAppSnapshots", args ?? new GetSelfServiceAppSnapshotsArgs(), options.WithDefaults());

        /// <summary>
        /// Describes recovery points (snapshots taken) present in an NCM Self Service Application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Nutanix.GetSelfServiceAppSnapshots.Invoke(new()
        ///     {
        ///         AppName = "NAME OF APPLICATION",
        ///         Length = 250,
        ///         Offset = 0,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSelfServiceAppSnapshotsResult> Invoke(GetSelfServiceAppSnapshotsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSelfServiceAppSnapshotsResult>("nutanix:index/getSelfServiceAppSnapshots:getSelfServiceAppSnapshots", args ?? new GetSelfServiceAppSnapshotsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Describes recovery points (snapshots taken) present in an NCM Self Service Application.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Nutanix.GetSelfServiceAppSnapshots.Invoke(new()
        ///     {
        ///         AppName = "NAME OF APPLICATION",
        ///         Length = 250,
        ///         Offset = 0,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSelfServiceAppSnapshotsResult> Invoke(GetSelfServiceAppSnapshotsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSelfServiceAppSnapshotsResult>("nutanix:index/getSelfServiceAppSnapshots:getSelfServiceAppSnapshots", args ?? new GetSelfServiceAppSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSelfServiceAppSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Optional) The name of the application.
        /// </summary>
        [Input("appName")]
        public string? AppName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the application.
        /// 
        /// Both (`app_name` and `app_uuid`) are optional but atleast one of them to be provided for this data source to work.
        /// </summary>
        [Input("appUuid")]
        public string? AppUuid { get; set; }

        /// <summary>
        /// - (Required) The number of snapshots to retrieve.
        /// </summary>
        [Input("length", required: true)]
        public int Length { get; set; }

        /// <summary>
        /// - (Required) The index of the first snapshot to return (for pagination). Default value: 0
        /// </summary>
        [Input("offset", required: true)]
        public int Offset { get; set; }

        public GetSelfServiceAppSnapshotsArgs()
        {
        }
        public static new GetSelfServiceAppSnapshotsArgs Empty => new GetSelfServiceAppSnapshotsArgs();
    }

    public sealed class GetSelfServiceAppSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Optional) The name of the application.
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// - (Optional) The UUID of the application.
        /// 
        /// Both (`app_name` and `app_uuid`) are optional but atleast one of them to be provided for this data source to work.
        /// </summary>
        [Input("appUuid")]
        public Input<string>? AppUuid { get; set; }

        /// <summary>
        /// - (Required) The number of snapshots to retrieve.
        /// </summary>
        [Input("length", required: true)]
        public Input<int> Length { get; set; } = null!;

        /// <summary>
        /// - (Required) The index of the first snapshot to return (for pagination). Default value: 0
        /// </summary>
        [Input("offset", required: true)]
        public Input<int> Offset { get; set; } = null!;

        public GetSelfServiceAppSnapshotsInvokeArgs()
        {
        }
        public static new GetSelfServiceAppSnapshotsInvokeArgs Empty => new GetSelfServiceAppSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSelfServiceAppSnapshotsResult
    {
        /// <summary>
        /// - The API version used to retrieve the snapshot data.
        /// </summary>
        public readonly string ApiVersion;
        public readonly string? AppName;
        public readonly string? AppUuid;
        public readonly ImmutableArray<Outputs.GetSelfServiceAppSnapshotsEntityResult> Entities;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// -  The type of resource represented by the snapshot specification.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// - (Required) The number of snapshots to retrieve.
        /// </summary>
        public readonly int Length;
        /// <summary>
        /// - (Required) The index of the first snapshot to return (for pagination). Default value: 0
        /// </summary>
        public readonly int Offset;
        /// <summary>
        /// - The total number of recovery points available for the application.
        /// </summary>
        public readonly int TotalMatches;

        [OutputConstructor]
        private GetSelfServiceAppSnapshotsResult(
            string apiVersion,

            string? appName,

            string? appUuid,

            ImmutableArray<Outputs.GetSelfServiceAppSnapshotsEntityResult> entities,

            string id,

            string kind,

            int length,

            int offset,

            int totalMatches)
        {
            ApiVersion = apiVersion;
            AppName = appName;
            AppUuid = appUuid;
            Entities = entities;
            Id = id;
            Kind = kind;
            Length = length;
            Offset = offset;
            TotalMatches = totalMatches;
        }
    }
}
