// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetProtectedResourceV2
    {
        /// <summary>
        /// Get the details of the specified protected resource such as the restorable time ranges available on the local Prism Central and the state of replication to the targets specified in the applied protection policies. This applies only if the entity is protected in a minutely or synchronous schedule. Other protection schedules are not served by this endpoint yet, and are considered not protected.
        /// 
        /// 
        /// ## Example 1: Get Protected Virtual Machine
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vm = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "d22529bb-f02d-4710-894b-d1de772d7832",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Example 2: Get Protected Volume Group
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vg = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "246c651a-1b16-4983-b5ff-204840f85e07",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProtectedResourceV2Result> InvokeAsync(GetProtectedResourceV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProtectedResourceV2Result>("nutanix:index/getProtectedResourceV2:getProtectedResourceV2", args ?? new GetProtectedResourceV2Args(), options.WithDefaults());

        /// <summary>
        /// Get the details of the specified protected resource such as the restorable time ranges available on the local Prism Central and the state of replication to the targets specified in the applied protection policies. This applies only if the entity is protected in a minutely or synchronous schedule. Other protection schedules are not served by this endpoint yet, and are considered not protected.
        /// 
        /// 
        /// ## Example 1: Get Protected Virtual Machine
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vm = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "d22529bb-f02d-4710-894b-d1de772d7832",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Example 2: Get Protected Volume Group
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vg = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "246c651a-1b16-4983-b5ff-204840f85e07",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectedResourceV2Result> Invoke(GetProtectedResourceV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectedResourceV2Result>("nutanix:index/getProtectedResourceV2:getProtectedResourceV2", args ?? new GetProtectedResourceV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the details of the specified protected resource such as the restorable time ranges available on the local Prism Central and the state of replication to the targets specified in the applied protection policies. This applies only if the entity is protected in a minutely or synchronous schedule. Other protection schedules are not served by this endpoint yet, and are considered not protected.
        /// 
        /// 
        /// ## Example 1: Get Protected Virtual Machine
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vm = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "d22529bb-f02d-4710-894b-d1de772d7832",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Example 2: Get Protected Volume Group
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var protected_vg = Nutanix.GetProtectedResourceV2.Invoke(new()
        ///     {
        ///         ExtId = "246c651a-1b16-4983-b5ff-204840f85e07",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectedResourceV2Result> Invoke(GetProtectedResourceV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectedResourceV2Result>("nutanix:index/getProtectedResourceV2:getProtectedResourceV2", args ?? new GetProtectedResourceV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProtectedResourceV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetProtectedResourceV2Args()
        {
        }
        public static new GetProtectedResourceV2Args Empty => new GetProtectedResourceV2Args();
    }

    public sealed class GetProtectedResourceV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetProtectedResourceV2InvokeArgs()
        {
        }
        public static new GetProtectedResourceV2InvokeArgs Empty => new GetProtectedResourceV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetProtectedResourceV2Result
    {
        /// <summary>
        /// Category key-value pairs associated with the protected resource at the time of protection. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
        /// </summary>
        public readonly ImmutableArray<string> CategoryFqNames;
        /// <summary>
        /// External identifier of the Consistency group which the protected resource is part of.
        /// </summary>
        public readonly string ConsistencyGroupExtId;
        /// <summary>
        /// The external identifier of the VM or the volume group associated with the protected resource.
        /// </summary>
        public readonly string EntityExtId;
        /// <summary>
        /// Protected resource entity type. Possible values are: VM, VOLUME_GROUP.
        /// </summary>
        public readonly string EntityType;
        /// <summary>
        /// - The external identifier of a protected VM or volume group that can be used to retrieve the protected resource.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectedResourceV2LinkResult> Links;
        /// <summary>
        /// Replication related information about the protected resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectedResourceV2ReplicationStateResult> ReplicationStates;
        /// <summary>
        /// The data protection details for the protected resource that are relevant to any of the sites in the local Prism Central, like the time ranges available for recovery.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectedResourceV2SiteProtectionInfoResult> SiteProtectionInfos;
        /// <summary>
        /// Details about the data protection site in the Prism Central.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectedResourceV2SourceSiteReferenceResult> SourceSiteReferences;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetProtectedResourceV2Result(
            ImmutableArray<string> categoryFqNames,

            string consistencyGroupExtId,

            string entityExtId,

            string entityType,

            string extId,

            string id,

            ImmutableArray<Outputs.GetProtectedResourceV2LinkResult> links,

            ImmutableArray<Outputs.GetProtectedResourceV2ReplicationStateResult> replicationStates,

            ImmutableArray<Outputs.GetProtectedResourceV2SiteProtectionInfoResult> siteProtectionInfos,

            ImmutableArray<Outputs.GetProtectedResourceV2SourceSiteReferenceResult> sourceSiteReferences,

            string tenantId)
        {
            CategoryFqNames = categoryFqNames;
            ConsistencyGroupExtId = consistencyGroupExtId;
            EntityExtId = entityExtId;
            EntityType = entityType;
            ExtId = extId;
            Id = id;
            Links = links;
            ReplicationStates = replicationStates;
            SiteProtectionInfos = siteProtectionInfos;
            SourceSiteReferences = sourceSiteReferences;
            TenantId = tenantId;
        }
    }
}
