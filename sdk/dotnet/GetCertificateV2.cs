// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetCertificateV2
    {
        public static Task<GetCertificateV2Result> InvokeAsync(GetCertificateV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateV2Result>("nutanix:index/getCertificateV2:getCertificateV2", args ?? new GetCertificateV2Args(), options.WithDefaults());

        public static Output<GetCertificateV2Result> Invoke(GetCertificateV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateV2Result>("nutanix:index/getCertificateV2:getCertificateV2", args ?? new GetCertificateV2InvokeArgs(), options.WithDefaults());

        public static Output<GetCertificateV2Result> Invoke(GetCertificateV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateV2Result>("nutanix:index/getCertificateV2:getCertificateV2", args ?? new GetCertificateV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateV2Args : global::Pulumi.InvokeArgs
    {
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        [Input("objectStoreExtId", required: true)]
        public string ObjectStoreExtId { get; set; } = null!;

        public GetCertificateV2Args()
        {
        }
        public static new GetCertificateV2Args Empty => new GetCertificateV2Args();
    }

    public sealed class GetCertificateV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        [Input("objectStoreExtId", required: true)]
        public Input<string> ObjectStoreExtId { get; set; } = null!;

        public GetCertificateV2InvokeArgs()
        {
        }
        public static new GetCertificateV2InvokeArgs Empty => new GetCertificateV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateV2Result
    {
        public readonly ImmutableArray<Outputs.GetCertificateV2AlternateFqdnResult> AlternateFqdns;
        public readonly ImmutableArray<Outputs.GetCertificateV2AlternateIpResult> AlternateIps;
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetCertificateV2LinkResult> Links;
        public readonly ImmutableArray<Outputs.GetCertificateV2MetadataResult> Metadatas;
        public readonly string ObjectStoreExtId;
        public readonly string TenantId;

        [OutputConstructor]
        private GetCertificateV2Result(
            ImmutableArray<Outputs.GetCertificateV2AlternateFqdnResult> alternateFqdns,

            ImmutableArray<Outputs.GetCertificateV2AlternateIpResult> alternateIps,

            string extId,

            string id,

            ImmutableArray<Outputs.GetCertificateV2LinkResult> links,

            ImmutableArray<Outputs.GetCertificateV2MetadataResult> metadatas,

            string objectStoreExtId,

            string tenantId)
        {
            AlternateFqdns = alternateFqdns;
            AlternateIps = alternateIps;
            ExtId = extId;
            Id = id;
            Links = links;
            Metadatas = metadatas;
            ObjectStoreExtId = objectStoreExtId;
            TenantId = tenantId;
        }
    }
}
