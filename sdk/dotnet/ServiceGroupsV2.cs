// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Create an service Group
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var service_group = new Nutanix.ServiceGroupsV2("service-group", new()
    ///     {
    ///         Description = "{{ desc }}",
    ///         TcpServices = new[]
    ///         {
    ///             new Nutanix.Inputs.ServiceGroupsV2TcpServiceArgs
    ///             {
    ///                 EndPort = 232,
    ///                 StartPort = 232,
    ///             },
    ///         },
    ///         UdpServices = new[]
    ///         {
    ///             new Nutanix.Inputs.ServiceGroupsV2UdpServiceArgs
    ///             {
    ///                 EndPort = 232,
    ///                 StartPort = 232,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/serviceGroupsV2:ServiceGroupsV2")]
    public partial class ServiceGroupsV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// created by.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Description of the service group
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// address group uuid.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// Icmp Type Code List.
        /// </summary>
        [Output("icmpServices")]
        public Output<ImmutableArray<Outputs.ServiceGroupsV2IcmpService>> IcmpServices { get; private set; } = null!;

        /// <summary>
        /// Service Group is system defined or not.
        /// </summary>
        [Output("isSystemDefined")]
        public Output<bool> IsSystemDefined { get; private set; } = null!;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.ServiceGroupsV2Link>> Links { get; private set; } = null!;

        /// <summary>
        /// Name of the service group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Reference to policy associated with Address Group.
        /// </summary>
        [Output("policyReferences")]
        public Output<ImmutableArray<string>> PolicyReferences { get; private set; } = null!;

        /// <summary>
        /// List of TCP ports in the service.
        /// </summary>
        [Output("tcpServices")]
        public Output<ImmutableArray<Outputs.ServiceGroupsV2TcpService>> TcpServices { get; private set; } = null!;

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        /// <summary>
        /// List of UDP ports in the service.
        /// </summary>
        [Output("udpServices")]
        public Output<ImmutableArray<Outputs.ServiceGroupsV2UdpService>> UdpServices { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceGroupsV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceGroupsV2(string name, ServiceGroupsV2Args? args = null, CustomResourceOptions? options = null)
            : base("nutanix:index/serviceGroupsV2:ServiceGroupsV2", name, args ?? new ServiceGroupsV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceGroupsV2(string name, Input<string> id, ServiceGroupsV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/serviceGroupsV2:ServiceGroupsV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceGroupsV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceGroupsV2 Get(string name, Input<string> id, ServiceGroupsV2State? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceGroupsV2(name, id, state, options);
        }
    }

    public sealed class ServiceGroupsV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the service group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("icmpServices")]
        private InputList<Inputs.ServiceGroupsV2IcmpServiceArgs>? _icmpServices;

        /// <summary>
        /// Icmp Type Code List.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2IcmpServiceArgs> IcmpServices
        {
            get => _icmpServices ?? (_icmpServices = new InputList<Inputs.ServiceGroupsV2IcmpServiceArgs>());
            set => _icmpServices = value;
        }

        /// <summary>
        /// Name of the service group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tcpServices")]
        private InputList<Inputs.ServiceGroupsV2TcpServiceArgs>? _tcpServices;

        /// <summary>
        /// List of TCP ports in the service.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2TcpServiceArgs> TcpServices
        {
            get => _tcpServices ?? (_tcpServices = new InputList<Inputs.ServiceGroupsV2TcpServiceArgs>());
            set => _tcpServices = value;
        }

        [Input("udpServices")]
        private InputList<Inputs.ServiceGroupsV2UdpServiceArgs>? _udpServices;

        /// <summary>
        /// List of UDP ports in the service.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2UdpServiceArgs> UdpServices
        {
            get => _udpServices ?? (_udpServices = new InputList<Inputs.ServiceGroupsV2UdpServiceArgs>());
            set => _udpServices = value;
        }

        public ServiceGroupsV2Args()
        {
        }
        public static new ServiceGroupsV2Args Empty => new ServiceGroupsV2Args();
    }

    public sealed class ServiceGroupsV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// created by.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// Description of the service group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// address group uuid.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("icmpServices")]
        private InputList<Inputs.ServiceGroupsV2IcmpServiceGetArgs>? _icmpServices;

        /// <summary>
        /// Icmp Type Code List.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2IcmpServiceGetArgs> IcmpServices
        {
            get => _icmpServices ?? (_icmpServices = new InputList<Inputs.ServiceGroupsV2IcmpServiceGetArgs>());
            set => _icmpServices = value;
        }

        /// <summary>
        /// Service Group is system defined or not.
        /// </summary>
        [Input("isSystemDefined")]
        public Input<bool>? IsSystemDefined { get; set; }

        [Input("links")]
        private InputList<Inputs.ServiceGroupsV2LinkGetArgs>? _links;

        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2LinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.ServiceGroupsV2LinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// Name of the service group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyReferences")]
        private InputList<string>? _policyReferences;

        /// <summary>
        /// Reference to policy associated with Address Group.
        /// </summary>
        public InputList<string> PolicyReferences
        {
            get => _policyReferences ?? (_policyReferences = new InputList<string>());
            set => _policyReferences = value;
        }

        [Input("tcpServices")]
        private InputList<Inputs.ServiceGroupsV2TcpServiceGetArgs>? _tcpServices;

        /// <summary>
        /// List of TCP ports in the service.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2TcpServiceGetArgs> TcpServices
        {
            get => _tcpServices ?? (_tcpServices = new InputList<Inputs.ServiceGroupsV2TcpServiceGetArgs>());
            set => _tcpServices = value;
        }

        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("udpServices")]
        private InputList<Inputs.ServiceGroupsV2UdpServiceGetArgs>? _udpServices;

        /// <summary>
        /// List of UDP ports in the service.
        /// </summary>
        public InputList<Inputs.ServiceGroupsV2UdpServiceGetArgs> UdpServices
        {
            get => _udpServices ?? (_udpServices = new InputList<Inputs.ServiceGroupsV2UdpServiceGetArgs>());
            set => _udpServices = value;
        }

        public ServiceGroupsV2State()
        {
        }
        public static new ServiceGroupsV2State Empty => new ServiceGroupsV2State();
    }
}
