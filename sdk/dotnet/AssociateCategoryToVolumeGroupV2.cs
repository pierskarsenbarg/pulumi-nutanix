// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Provides a resource to Creates a new Volume Disk.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Nutanix = PiersKarsenbarg.Nutanix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Associate categories to volume group
    ///     var example = new Nutanix.AssociateCategoryToVolumeGroupV2("example", new()
    ///     {
    ///         Categories = new[]
    ///         {
    ///             new Nutanix.Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs
    ///             {
    ///                 ExtId = "85e68112-5b2b-4220-bc8d-e529e4bf420e",
    ///             },
    ///             new Nutanix.Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs
    ///             {
    ///                 ExtId = "45588de3-7c18-4230-a147-7e26ad92d8a6",
    ///             },
    ///             new Nutanix.Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs
    ///             {
    ///                 ExtId = "1c6638f2-5215-4086-8f21-a30e75cb8068",
    ///             },
    ///         },
    ///         ExtId = "f0c0a4ac-c734-4770-b5d7-eca6793eeeb7",
    ///     });
    /// 
    ///     // Volume Group extId
    /// });
    /// ```
    /// </summary>
    [NutanixResourceType("nutanix:index/associateCategoryToVolumeGroupV2:AssociateCategoryToVolumeGroupV2")]
    public partial class AssociateCategoryToVolumeGroupV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// -(Required) The category to be associated/disassociated with the Volume Group. This is a mandatory field.
        /// </summary>
        [Output("categories")]
        public Output<ImmutableArray<Outputs.AssociateCategoryToVolumeGroupV2Category>> Categories { get; private set; } = null!;

        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;


        /// <summary>
        /// Create a AssociateCategoryToVolumeGroupV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssociateCategoryToVolumeGroupV2(string name, AssociateCategoryToVolumeGroupV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/associateCategoryToVolumeGroupV2:AssociateCategoryToVolumeGroupV2", name, args ?? new AssociateCategoryToVolumeGroupV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private AssociateCategoryToVolumeGroupV2(string name, Input<string> id, AssociateCategoryToVolumeGroupV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/associateCategoryToVolumeGroupV2:AssociateCategoryToVolumeGroupV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssociateCategoryToVolumeGroupV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssociateCategoryToVolumeGroupV2 Get(string name, Input<string> id, AssociateCategoryToVolumeGroupV2State? state = null, CustomResourceOptions? options = null)
        {
            return new AssociateCategoryToVolumeGroupV2(name, id, state, options);
        }
    }

    public sealed class AssociateCategoryToVolumeGroupV2Args : global::Pulumi.ResourceArgs
    {
        [Input("categories")]
        private InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs>? _categories;

        /// <summary>
        /// -(Required) The category to be associated/disassociated with the Volume Group. This is a mandatory field.
        /// </summary>
        public InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryArgs>());
            set => _categories = value;
        }

        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public AssociateCategoryToVolumeGroupV2Args()
        {
        }
        public static new AssociateCategoryToVolumeGroupV2Args Empty => new AssociateCategoryToVolumeGroupV2Args();
    }

    public sealed class AssociateCategoryToVolumeGroupV2State : global::Pulumi.ResourceArgs
    {
        [Input("categories")]
        private InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryGetArgs>? _categories;

        /// <summary>
        /// -(Required) The category to be associated/disassociated with the Volume Group. This is a mandatory field.
        /// </summary>
        public InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryGetArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.AssociateCategoryToVolumeGroupV2CategoryGetArgs>());
            set => _categories = value;
        }

        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        public AssociateCategoryToVolumeGroupV2State()
        {
        }
        public static new AssociateCategoryToVolumeGroupV2State Empty => new AssociateCategoryToVolumeGroupV2State();
    }
}
