// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetStaticRoutes
    {
        /// <summary>
        /// Provides a datasource to retrieve static routes within VPCs given vpc_uuid.
        /// </summary>
        public static Task<GetStaticRoutesResult> InvokeAsync(GetStaticRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticRoutesResult>("nutanix:index/getStaticRoutes:getStaticRoutes", args ?? new GetStaticRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to retrieve static routes within VPCs given vpc_uuid.
        /// </summary>
        public static Output<GetStaticRoutesResult> Invoke(GetStaticRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticRoutesResult>("nutanix:index/getStaticRoutes:getStaticRoutes", args ?? new GetStaticRoutesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a datasource to retrieve static routes within VPCs given vpc_uuid.
        /// </summary>
        public static Output<GetStaticRoutesResult> Invoke(GetStaticRoutesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticRoutesResult>("nutanix:index/getStaticRoutes:getStaticRoutes", args ?? new GetStaticRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticRoutesArgs : global::Pulumi.InvokeArgs
    {
        [Input("vpcName")]
        public string? VpcName { get; set; }

        /// <summary>
        /// vpc UUID
        /// </summary>
        [Input("vpcReferenceUuid")]
        public string? VpcReferenceUuid { get; set; }

        public GetStaticRoutesArgs()
        {
        }
        public static new GetStaticRoutesArgs Empty => new GetStaticRoutesArgs();
    }

    public sealed class GetStaticRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        /// <summary>
        /// vpc UUID
        /// </summary>
        [Input("vpcReferenceUuid")]
        public Input<string>? VpcReferenceUuid { get; set; }

        public GetStaticRoutesInvokeArgs()
        {
        }
        public static new GetStaticRoutesInvokeArgs Empty => new GetStaticRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticRoutesResult
    {
        /// <summary>
        /// API version
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The vpc_route_table kind metadata
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// An intentful representation of a vpc_route_table spec
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStaticRoutesSpecResult> Specs;
        /// <summary>
        /// An intentful representation of a vpc_route_table status
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStaticRoutesStatusResult> Statuses;
        public readonly string? VpcName;
        public readonly string? VpcReferenceUuid;

        [OutputConstructor]
        private GetStaticRoutesResult(
            string apiVersion,

            string id,

            ImmutableDictionary<string, string> metadata,

            ImmutableArray<Outputs.GetStaticRoutesSpecResult> specs,

            ImmutableArray<Outputs.GetStaticRoutesStatusResult> statuses,

            string? vpcName,

            string? vpcReferenceUuid)
        {
            ApiVersion = apiVersion;
            Id = id;
            Metadata = metadata;
            Specs = specs;
            Statuses = statuses;
            VpcName = vpcName;
            VpcReferenceUuid = vpcReferenceUuid;
        }
    }
}
