// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetVolumeIscsiClientsV2
    {
        /// <summary>
        /// Fetches the list of iSCSI clients.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var volumeGroups = Nutanix.GetVolumeIscsiClientsV2.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` : A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clusterReference, extId.
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: clusterReference, extId.
        /// * `expand` : A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported. The expand can be applied to the following fields: cluster.
        /// * `select` : A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields: clusterReference, extId.
        /// </summary>
        public static Task<GetVolumeIscsiClientsV2Result> InvokeAsync(GetVolumeIscsiClientsV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeIscsiClientsV2Result>("nutanix:index/getVolumeIscsiClientsV2:getVolumeIscsiClientsV2", args ?? new GetVolumeIscsiClientsV2Args(), options.WithDefaults());

        /// <summary>
        /// Fetches the list of iSCSI clients.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var volumeGroups = Nutanix.GetVolumeIscsiClientsV2.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` : A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clusterReference, extId.
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: clusterReference, extId.
        /// * `expand` : A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported. The expand can be applied to the following fields: cluster.
        /// * `select` : A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields: clusterReference, extId.
        /// </summary>
        public static Output<GetVolumeIscsiClientsV2Result> Invoke(GetVolumeIscsiClientsV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeIscsiClientsV2Result>("nutanix:index/getVolumeIscsiClientsV2:getVolumeIscsiClientsV2", args ?? new GetVolumeIscsiClientsV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches the list of iSCSI clients.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var volumeGroups = Nutanix.GetVolumeIscsiClientsV2.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ##  Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// * `page`: - A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
        /// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        /// * `filter` : A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clusterReference, extId.
        /// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: clusterReference, extId.
        /// * `expand` : A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported. The expand can be applied to the following fields: cluster.
        /// * `select` : A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields: clusterReference, extId.
        /// </summary>
        public static Output<GetVolumeIscsiClientsV2Result> Invoke(GetVolumeIscsiClientsV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeIscsiClientsV2Result>("nutanix:index/getVolumeIscsiClientsV2:getVolumeIscsiClientsV2", args ?? new GetVolumeIscsiClientsV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeIscsiClientsV2Args : global::Pulumi.InvokeArgs
    {
        [Input("expand")]
        public string? Expand { get; set; }

        [Input("filter")]
        public string? Filter { get; set; }

        [Input("limit")]
        public int? Limit { get; set; }

        [Input("orderby")]
        public string? Orderby { get; set; }

        [Input("page")]
        public int? Page { get; set; }

        [Input("select")]
        public string? Select { get; set; }

        public GetVolumeIscsiClientsV2Args()
        {
        }
        public static new GetVolumeIscsiClientsV2Args Empty => new GetVolumeIscsiClientsV2Args();
    }

    public sealed class GetVolumeIscsiClientsV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("expand")]
        public Input<string>? Expand { get; set; }

        [Input("filter")]
        public Input<string>? Filter { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("orderby")]
        public Input<string>? Orderby { get; set; }

        [Input("page")]
        public Input<int>? Page { get; set; }

        [Input("select")]
        public Input<string>? Select { get; set; }

        public GetVolumeIscsiClientsV2InvokeArgs()
        {
        }
        public static new GetVolumeIscsiClientsV2InvokeArgs Empty => new GetVolumeIscsiClientsV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeIscsiClientsV2Result
    {
        public readonly string? Expand;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - List all the iSCSI clients.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVolumeIscsiClientsV2IscsiClientResult> IscsiClients;
        public readonly int? Limit;
        public readonly string? Orderby;
        public readonly int? Page;
        public readonly string? Select;

        [OutputConstructor]
        private GetVolumeIscsiClientsV2Result(
            string? expand,

            string? filter,

            string id,

            ImmutableArray<Outputs.GetVolumeIscsiClientsV2IscsiClientResult> iscsiClients,

            int? limit,

            string? orderby,

            int? page,

            string? select)
        {
            Expand = expand;
            Filter = filter;
            Id = id;
            IscsiClients = iscsiClients;
            Limit = limit;
            Orderby = orderby;
            Page = page;
            Select = select;
        }
    }
}
