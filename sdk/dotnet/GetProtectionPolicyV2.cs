// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetProtectionPolicyV2
    {
        /// <summary>
        /// Describes the Fetches the protection policy identified by an external identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetProtectionPolicyV2.Invoke(new()
        ///     {
        ///         ExtId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProtectionPolicyV2Result> InvokeAsync(GetProtectionPolicyV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProtectionPolicyV2Result>("nutanix:index/getProtectionPolicyV2:getProtectionPolicyV2", args ?? new GetProtectionPolicyV2Args(), options.WithDefaults());

        /// <summary>
        /// Describes the Fetches the protection policy identified by an external identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetProtectionPolicyV2.Invoke(new()
        ///     {
        ///         ExtId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectionPolicyV2Result> Invoke(GetProtectionPolicyV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectionPolicyV2Result>("nutanix:index/getProtectionPolicyV2:getProtectionPolicyV2", args ?? new GetProtectionPolicyV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Describes the Fetches the protection policy identified by an external identifier.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nutanix.GetProtectionPolicyV2.Invoke(new()
        ///     {
        ///         ExtId = "00000000-0000-0000-0000-000000000000",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProtectionPolicyV2Result> Invoke(GetProtectionPolicyV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProtectionPolicyV2Result>("nutanix:index/getProtectionPolicyV2:getProtectionPolicyV2", args ?? new GetProtectionPolicyV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProtectionPolicyV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) The external identifier of the protection policy.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetProtectionPolicyV2Args()
        {
        }
        public static new GetProtectionPolicyV2Args Empty => new GetProtectionPolicyV2Args();
    }

    public sealed class GetProtectionPolicyV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// -(Required) The external identifier of the protection policy.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetProtectionPolicyV2InvokeArgs()
        {
        }
        public static new GetProtectionPolicyV2InvokeArgs Empty => new GetProtectionPolicyV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetProtectionPolicyV2Result
    {
        /// <summary>
        /// - Host entity with its attributes.
        /// </summary>
        public readonly ImmutableArray<string> CategoryIds;
        /// <summary>
        /// - Description of the protection policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// - A globally unique identifier of an instance that is suitable for external consumption.
        /// </summary>
        public readonly string ExtId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// - Disks attached to host.
        /// </summary>
        public readonly bool IsApprovalPolicyNeeded;
        /// <summary>
        /// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectionPolicyV2LinkResult> Links;
        /// <summary>
        /// - Name of the protection policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// - Node degraded status.
        /// </summary>
        public readonly string OwnerExtId;
        /// <summary>
        /// - Cluster reference for an entity.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectionPolicyV2ReplicationConfigurationResult> ReplicationConfigurations;
        /// <summary>
        /// - Hypervisor details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProtectionPolicyV2ReplicationLocationResult> ReplicationLocations;
        /// <summary>
        /// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
        /// </summary>
        public readonly string TenantId;

        [OutputConstructor]
        private GetProtectionPolicyV2Result(
            ImmutableArray<string> categoryIds,

            string description,

            string extId,

            string id,

            bool isApprovalPolicyNeeded,

            ImmutableArray<Outputs.GetProtectionPolicyV2LinkResult> links,

            string name,

            string ownerExtId,

            ImmutableArray<Outputs.GetProtectionPolicyV2ReplicationConfigurationResult> replicationConfigurations,

            ImmutableArray<Outputs.GetProtectionPolicyV2ReplicationLocationResult> replicationLocations,

            string tenantId)
        {
            CategoryIds = categoryIds;
            Description = description;
            ExtId = extId;
            Id = id;
            IsApprovalPolicyNeeded = isApprovalPolicyNeeded;
            Links = links;
            Name = name;
            OwnerExtId = ownerExtId;
            ReplicationConfigurations = replicationConfigurations;
            ReplicationLocations = replicationLocations;
            TenantId = tenantId;
        }
    }
}
