// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetKarbonPrivateRegistry
    {
        /// <summary>
        /// Describes Karbon private registry entry
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var registry = Output.Create(Nutanix.GetKarbonPrivateRegistry.InvokeAsync(new Nutanix.GetKarbonPrivateRegistryArgs
        ///         {
        ///             ClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKarbonPrivateRegistryResult> InvokeAsync(GetKarbonPrivateRegistryArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKarbonPrivateRegistryResult>("nutanix:index/getKarbonPrivateRegistry:getKarbonPrivateRegistry", args ?? new GetKarbonPrivateRegistryArgs(), options.WithDefaults());

        /// <summary>
        /// Describes Karbon private registry entry
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var registry = Output.Create(Nutanix.GetKarbonPrivateRegistry.InvokeAsync(new Nutanix.GetKarbonPrivateRegistryArgs
        ///         {
        ///             ClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKarbonPrivateRegistryResult> Invoke(GetKarbonPrivateRegistryInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKarbonPrivateRegistryResult>("nutanix:index/getKarbonPrivateRegistry:getKarbonPrivateRegistry", args ?? new GetKarbonPrivateRegistryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKarbonPrivateRegistryArgs : Pulumi.InvokeArgs
    {
        [Input("privateRegistryId")]
        public string? PrivateRegistryId { get; set; }

        [Input("privateRegistryName")]
        public string? PrivateRegistryName { get; set; }

        public GetKarbonPrivateRegistryArgs()
        {
        }
    }

    public sealed class GetKarbonPrivateRegistryInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("privateRegistryId")]
        public Input<string>? PrivateRegistryId { get; set; }

        [Input("privateRegistryName")]
        public Input<string>? PrivateRegistryName { get; set; }

        public GetKarbonPrivateRegistryInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKarbonPrivateRegistryResult
    {
        public readonly string Endpoint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? PrivateRegistryId;
        public readonly string? PrivateRegistryName;
        public readonly string Uuid;

        [OutputConstructor]
        private GetKarbonPrivateRegistryResult(
            string endpoint,

            string id,

            string name,

            string? privateRegistryId,

            string? privateRegistryName,

            string uuid)
        {
            Endpoint = endpoint;
            Id = id;
            Name = name;
            PrivateRegistryId = privateRegistryId;
            PrivateRegistryName = privateRegistryName;
            Uuid = uuid;
        }
    }
}
