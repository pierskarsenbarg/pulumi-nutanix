// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetServiceGroupV2
    {
        /// <summary>
        /// Get an service Group by ExtID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var serviceGroup = Nutanix.GetServiceGroupV2.Invoke(new()
        ///     {
        ///         ExtId = "07167778-266d-4052-9992-f30cbfd52e83",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceGroupV2Result> InvokeAsync(GetServiceGroupV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceGroupV2Result>("nutanix:index/getServiceGroupV2:getServiceGroupV2", args ?? new GetServiceGroupV2Args(), options.WithDefaults());

        /// <summary>
        /// Get an service Group by ExtID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var serviceGroup = Nutanix.GetServiceGroupV2.Invoke(new()
        ///     {
        ///         ExtId = "07167778-266d-4052-9992-f30cbfd52e83",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceGroupV2Result> Invoke(GetServiceGroupV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceGroupV2Result>("nutanix:index/getServiceGroupV2:getServiceGroupV2", args ?? new GetServiceGroupV2InvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get an service Group by ExtID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var serviceGroup = Nutanix.GetServiceGroupV2.Invoke(new()
        ///     {
        ///         ExtId = "07167778-266d-4052-9992-f30cbfd52e83",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceGroupV2Result> Invoke(GetServiceGroupV2InvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceGroupV2Result>("nutanix:index/getServiceGroupV2:getServiceGroupV2", args ?? new GetServiceGroupV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceGroupV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// service group UUID.
        /// </summary>
        [Input("extId", required: true)]
        public string ExtId { get; set; } = null!;

        public GetServiceGroupV2Args()
        {
        }
        public static new GetServiceGroupV2Args Empty => new GetServiceGroupV2Args();
    }

    public sealed class GetServiceGroupV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// service group UUID.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        public GetServiceGroupV2InvokeArgs()
        {
        }
        public static new GetServiceGroupV2InvokeArgs Empty => new GetServiceGroupV2InvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceGroupV2Result
    {
        /// <summary>
        /// created by.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// A user defined annotation for a Service Group.
        /// </summary>
        public readonly string Description;
        public readonly string ExtId;
        /// <summary>
        /// Icmp Type Code List.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupV2IcmpServiceResult> IcmpServices;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service Group is system defined or not.
        /// </summary>
        public readonly bool IsSystemDefined;
        /// <summary>
        /// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupV2LinkResult> Links;
        /// <summary>
        /// A short identifier for a Service Group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Reference to policy associated with Service Group.
        /// </summary>
        public readonly ImmutableArray<string> PolicyReferences;
        /// <summary>
        /// List of TCP ports in the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupV2TcpServiceResult> TcpServices;
        /// <summary>
        /// A globally unique identifier that represents the tenant that owns this entity.
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// List of UDP ports in the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceGroupV2UdpServiceResult> UdpServices;

        [OutputConstructor]
        private GetServiceGroupV2Result(
            string createdBy,

            string description,

            string extId,

            ImmutableArray<Outputs.GetServiceGroupV2IcmpServiceResult> icmpServices,

            string id,

            bool isSystemDefined,

            ImmutableArray<Outputs.GetServiceGroupV2LinkResult> links,

            string name,

            ImmutableArray<string> policyReferences,

            ImmutableArray<Outputs.GetServiceGroupV2TcpServiceResult> tcpServices,

            string tenantId,

            ImmutableArray<Outputs.GetServiceGroupV2UdpServiceResult> udpServices)
        {
            CreatedBy = createdBy;
            Description = description;
            ExtId = extId;
            IcmpServices = icmpServices;
            Id = id;
            IsSystemDefined = isSystemDefined;
            Links = links;
            Name = name;
            PolicyReferences = policyReferences;
            TcpServices = tcpServices;
            TenantId = tenantId;
            UdpServices = udpServices;
        }
    }
}
