// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetNdbNetworkAvailableIps
    {
        /// <summary>
        /// List of available IPs in Network
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var network = Nutanix.GetNdbNetworkAvailableIps.Invoke(new()
        ///     {
        ///         ProfileId = "{{ network_profile_id }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNdbNetworkAvailableIpsResult> InvokeAsync(GetNdbNetworkAvailableIpsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNdbNetworkAvailableIpsResult>("nutanix:index/getNdbNetworkAvailableIps:getNdbNetworkAvailableIps", args ?? new GetNdbNetworkAvailableIpsArgs(), options.WithDefaults());

        /// <summary>
        /// List of available IPs in Network
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var network = Nutanix.GetNdbNetworkAvailableIps.Invoke(new()
        ///     {
        ///         ProfileId = "{{ network_profile_id }}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNdbNetworkAvailableIpsResult> Invoke(GetNdbNetworkAvailableIpsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNdbNetworkAvailableIpsResult>("nutanix:index/getNdbNetworkAvailableIps:getNdbNetworkAvailableIps", args ?? new GetNdbNetworkAvailableIpsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNdbNetworkAvailableIpsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) Network Profile id.
        /// </summary>
        [Input("profileId", required: true)]
        public string ProfileId { get; set; } = null!;

        public GetNdbNetworkAvailableIpsArgs()
        {
        }
        public static new GetNdbNetworkAvailableIpsArgs Empty => new GetNdbNetworkAvailableIpsArgs();
    }

    public sealed class GetNdbNetworkAvailableIpsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) Network Profile id.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        public GetNdbNetworkAvailableIpsInvokeArgs()
        {
        }
        public static new GetNdbNetworkAvailableIpsInvokeArgs Empty => new GetNdbNetworkAvailableIpsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNdbNetworkAvailableIpsResult
    {
        /// <summary>
        /// List of network available ips
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNdbNetworkAvailableIpsAvailableIpResult> AvailableIps;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required) Network Profile id.
        /// </summary>
        public readonly string ProfileId;

        [OutputConstructor]
        private GetNdbNetworkAvailableIpsResult(
            ImmutableArray<Outputs.GetNdbNetworkAvailableIpsAvailableIpResult> availableIps,

            string id,

            string profileId)
        {
            AvailableIps = availableIps;
            Id = id;
            ProfileId = profileId;
        }
    }
}
