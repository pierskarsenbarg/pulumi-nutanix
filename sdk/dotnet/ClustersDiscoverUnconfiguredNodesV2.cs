// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    /// <summary>
    /// Get the unconfigured node details such as node UUID, node position, node IP, foundation version and more.
    /// </summary>
    [NutanixResourceType("nutanix:index/clustersDiscoverUnconfiguredNodesV2:ClustersDiscoverUnconfiguredNodesV2")]
    public partial class ClustersDiscoverUnconfiguredNodesV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// - (Optional) Address type.
        /// Valid values are:
        /// - "IPV4"	IPV4 address type.
        /// - "IPV6"	IPV6 address type.
        /// </summary>
        [Output("addressType")]
        public Output<string?> AddressType { get; private set; } = null!;

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Output("extId")]
        public Output<string> ExtId { get; private set; } = null!;

        /// <summary>
        /// - (Optional) Interface name that is used for packet broadcasting.
        /// </summary>
        [Output("interfaceFilterLists")]
        public Output<ImmutableArray<string>> InterfaceFilterLists { get; private set; } = null!;

        /// <summary>
        /// - (Optional) IP addresses of the unconfigured nodes.
        /// </summary>
        [Output("ipFilterLists")]
        public Output<ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2IpFilterList>> IpFilterLists { get; private set; } = null!;

        /// <summary>
        /// - (Optional) Indicates if the discovery is manual or not.
        /// </summary>
        [Output("isManualDiscovery")]
        public Output<bool?> IsManualDiscovery { get; private set; } = null!;

        /// <summary>
        /// - (Optional) Timeout for the workflow in seconds.
        /// </summary>
        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        [Output("unconfiguredNodes")]
        public Output<ImmutableArray<Outputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNode>> UnconfiguredNodes { get; private set; } = null!;

        /// <summary>
        /// - (Optional) Unconfigured node UUIDs.
        /// </summary>
        [Output("uuidFilterLists")]
        public Output<ImmutableArray<string>> UuidFilterLists { get; private set; } = null!;


        /// <summary>
        /// Create a ClustersDiscoverUnconfiguredNodesV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClustersDiscoverUnconfiguredNodesV2(string name, ClustersDiscoverUnconfiguredNodesV2Args args, CustomResourceOptions? options = null)
            : base("nutanix:index/clustersDiscoverUnconfiguredNodesV2:ClustersDiscoverUnconfiguredNodesV2", name, args ?? new ClustersDiscoverUnconfiguredNodesV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ClustersDiscoverUnconfiguredNodesV2(string name, Input<string> id, ClustersDiscoverUnconfiguredNodesV2State? state = null, CustomResourceOptions? options = null)
            : base("nutanix:index/clustersDiscoverUnconfiguredNodesV2:ClustersDiscoverUnconfiguredNodesV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-nutanix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClustersDiscoverUnconfiguredNodesV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClustersDiscoverUnconfiguredNodesV2 Get(string name, Input<string> id, ClustersDiscoverUnconfiguredNodesV2State? state = null, CustomResourceOptions? options = null)
        {
            return new ClustersDiscoverUnconfiguredNodesV2(name, id, state, options);
        }
    }

    public sealed class ClustersDiscoverUnconfiguredNodesV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Optional) Address type.
        /// Valid values are:
        /// - "IPV4"	IPV4 address type.
        /// - "IPV6"	IPV6 address type.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Input("extId", required: true)]
        public Input<string> ExtId { get; set; } = null!;

        [Input("interfaceFilterLists")]
        private InputList<string>? _interfaceFilterLists;

        /// <summary>
        /// - (Optional) Interface name that is used for packet broadcasting.
        /// </summary>
        public InputList<string> InterfaceFilterLists
        {
            get => _interfaceFilterLists ?? (_interfaceFilterLists = new InputList<string>());
            set => _interfaceFilterLists = value;
        }

        [Input("ipFilterLists")]
        private InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListArgs>? _ipFilterLists;

        /// <summary>
        /// - (Optional) IP addresses of the unconfigured nodes.
        /// </summary>
        public InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListArgs> IpFilterLists
        {
            get => _ipFilterLists ?? (_ipFilterLists = new InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListArgs>());
            set => _ipFilterLists = value;
        }

        /// <summary>
        /// - (Optional) Indicates if the discovery is manual or not.
        /// </summary>
        [Input("isManualDiscovery")]
        public Input<bool>? IsManualDiscovery { get; set; }

        /// <summary>
        /// - (Optional) Timeout for the workflow in seconds.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("uuidFilterLists")]
        private InputList<string>? _uuidFilterLists;

        /// <summary>
        /// - (Optional) Unconfigured node UUIDs.
        /// </summary>
        public InputList<string> UuidFilterLists
        {
            get => _uuidFilterLists ?? (_uuidFilterLists = new InputList<string>());
            set => _uuidFilterLists = value;
        }

        public ClustersDiscoverUnconfiguredNodesV2Args()
        {
        }
        public static new ClustersDiscoverUnconfiguredNodesV2Args Empty => new ClustersDiscoverUnconfiguredNodesV2Args();
    }

    public sealed class ClustersDiscoverUnconfiguredNodesV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// - (Optional) Address type.
        /// Valid values are:
        /// - "IPV4"	IPV4 address type.
        /// - "IPV6"	IPV6 address type.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// -(Required) Cluster UUID.
        /// </summary>
        [Input("extId")]
        public Input<string>? ExtId { get; set; }

        [Input("interfaceFilterLists")]
        private InputList<string>? _interfaceFilterLists;

        /// <summary>
        /// - (Optional) Interface name that is used for packet broadcasting.
        /// </summary>
        public InputList<string> InterfaceFilterLists
        {
            get => _interfaceFilterLists ?? (_interfaceFilterLists = new InputList<string>());
            set => _interfaceFilterLists = value;
        }

        [Input("ipFilterLists")]
        private InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListGetArgs>? _ipFilterLists;

        /// <summary>
        /// - (Optional) IP addresses of the unconfigured nodes.
        /// </summary>
        public InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListGetArgs> IpFilterLists
        {
            get => _ipFilterLists ?? (_ipFilterLists = new InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2IpFilterListGetArgs>());
            set => _ipFilterLists = value;
        }

        /// <summary>
        /// - (Optional) Indicates if the discovery is manual or not.
        /// </summary>
        [Input("isManualDiscovery")]
        public Input<bool>? IsManualDiscovery { get; set; }

        /// <summary>
        /// - (Optional) Timeout for the workflow in seconds.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("unconfiguredNodes")]
        private InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeGetArgs>? _unconfiguredNodes;
        public InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeGetArgs> UnconfiguredNodes
        {
            get => _unconfiguredNodes ?? (_unconfiguredNodes = new InputList<Inputs.ClustersDiscoverUnconfiguredNodesV2UnconfiguredNodeGetArgs>());
            set => _unconfiguredNodes = value;
        }

        [Input("uuidFilterLists")]
        private InputList<string>? _uuidFilterLists;

        /// <summary>
        /// - (Optional) Unconfigured node UUIDs.
        /// </summary>
        public InputList<string> UuidFilterLists
        {
            get => _uuidFilterLists ?? (_uuidFilterLists = new InputList<string>());
            set => _uuidFilterLists = value;
        }

        public ClustersDiscoverUnconfiguredNodesV2State()
        {
        }
        public static new ClustersDiscoverUnconfiguredNodesV2State Empty => new ClustersDiscoverUnconfiguredNodesV2State();
    }
}
