// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetKarbonClusterKubeconfig
    {
        /// <summary>
        /// Describes the SSH config from a Karbon Cluster
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var configbyid = Nutanix.GetKarbonClusterKubeconfig.Invoke(new()
        ///     {
        ///         KarbonClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///     });
        /// 
        ///     var configbyname = Nutanix.GetKarbonClusterKubeconfig.Invoke(new()
        ///     {
        ///         KarbonClusterName = "&lt;YOUR-CLUSTER-NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetKarbonClusterKubeconfigResult> InvokeAsync(GetKarbonClusterKubeconfigArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKarbonClusterKubeconfigResult>("nutanix:index/getKarbonClusterKubeconfig:getKarbonClusterKubeconfig", args ?? new GetKarbonClusterKubeconfigArgs(), options.WithDefaults());

        /// <summary>
        /// Describes the SSH config from a Karbon Cluster
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var configbyid = Nutanix.GetKarbonClusterKubeconfig.Invoke(new()
        ///     {
        ///         KarbonClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///     });
        /// 
        ///     var configbyname = Nutanix.GetKarbonClusterKubeconfig.Invoke(new()
        ///     {
        ///         KarbonClusterName = "&lt;YOUR-CLUSTER-NAME&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKarbonClusterKubeconfigResult> Invoke(GetKarbonClusterKubeconfigInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKarbonClusterKubeconfigResult>("nutanix:index/getKarbonClusterKubeconfig:getKarbonClusterKubeconfig", args ?? new GetKarbonClusterKubeconfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKarbonClusterKubeconfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Represents karbon cluster uuid
        /// </summary>
        [Input("karbonClusterId")]
        public string? KarbonClusterId { get; set; }

        /// <summary>
        /// Represents the name of karbon cluster
        /// </summary>
        [Input("karbonClusterName")]
        public string? KarbonClusterName { get; set; }

        public GetKarbonClusterKubeconfigArgs()
        {
        }
        public static new GetKarbonClusterKubeconfigArgs Empty => new GetKarbonClusterKubeconfigArgs();
    }

    public sealed class GetKarbonClusterKubeconfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Represents karbon cluster uuid
        /// </summary>
        [Input("karbonClusterId")]
        public Input<string>? KarbonClusterId { get; set; }

        /// <summary>
        /// Represents the name of karbon cluster
        /// </summary>
        [Input("karbonClusterName")]
        public Input<string>? KarbonClusterName { get; set; }

        public GetKarbonClusterKubeconfigInvokeArgs()
        {
        }
        public static new GetKarbonClusterKubeconfigInvokeArgs Empty => new GetKarbonClusterKubeconfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetKarbonClusterKubeconfigResult
    {
        public readonly string AccessToken;
        public readonly string ClusterCaCertificate;
        public readonly string ClusterUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? KarbonClusterId;
        public readonly string? KarbonClusterName;
        public readonly string Name;

        [OutputConstructor]
        private GetKarbonClusterKubeconfigResult(
            string accessToken,

            string clusterCaCertificate,

            string clusterUrl,

            string id,

            string? karbonClusterId,

            string? karbonClusterName,

            string name)
        {
            AccessToken = accessToken;
            ClusterCaCertificate = clusterCaCertificate;
            ClusterUrl = clusterUrl;
            Id = id;
            KarbonClusterId = karbonClusterId;
            KarbonClusterName = karbonClusterName;
            Name = name;
        }
    }
}
