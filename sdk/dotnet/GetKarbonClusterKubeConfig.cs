// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Nutanix
{
    public static class GetKarbonClusterKubeConfig
    {
        /// <summary>
        /// Describes the SSH config from a Karbon Cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configbyid = Output.Create(Nutanix.GetKarbonClusterKubeConfig.InvokeAsync(new Nutanix.GetKarbonClusterKubeConfigArgs
        ///         {
        ///             KarbonClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///         }));
        ///         var configbyname = Output.Create(Nutanix.GetKarbonClusterKubeConfig.InvokeAsync(new Nutanix.GetKarbonClusterKubeConfigArgs
        ///         {
        ///             KarbonClusterName = "&lt;YOUR-CLUSTER-NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKarbonClusterKubeConfigResult> InvokeAsync(GetKarbonClusterKubeConfigArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKarbonClusterKubeConfigResult>("nutanix:index/getKarbonClusterKubeConfig:getKarbonClusterKubeConfig", args ?? new GetKarbonClusterKubeConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Describes the SSH config from a Karbon Cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nutanix = Pulumi.Nutanix;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configbyid = Output.Create(Nutanix.GetKarbonClusterKubeConfig.InvokeAsync(new Nutanix.GetKarbonClusterKubeConfigArgs
        ///         {
        ///             KarbonClusterId = "&lt;YOUR-CLUSTER-ID&gt;",
        ///         }));
        ///         var configbyname = Output.Create(Nutanix.GetKarbonClusterKubeConfig.InvokeAsync(new Nutanix.GetKarbonClusterKubeConfigArgs
        ///         {
        ///             KarbonClusterName = "&lt;YOUR-CLUSTER-NAME&gt;",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKarbonClusterKubeConfigResult> Invoke(GetKarbonClusterKubeConfigInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKarbonClusterKubeConfigResult>("nutanix:index/getKarbonClusterKubeConfig:getKarbonClusterKubeConfig", args ?? new GetKarbonClusterKubeConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKarbonClusterKubeConfigArgs : Pulumi.InvokeArgs
    {
        [Input("karbonClusterId")]
        public string? KarbonClusterId { get; set; }

        [Input("karbonClusterName")]
        public string? KarbonClusterName { get; set; }

        public GetKarbonClusterKubeConfigArgs()
        {
        }
    }

    public sealed class GetKarbonClusterKubeConfigInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("karbonClusterId")]
        public Input<string>? KarbonClusterId { get; set; }

        [Input("karbonClusterName")]
        public Input<string>? KarbonClusterName { get; set; }

        public GetKarbonClusterKubeConfigInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKarbonClusterKubeConfigResult
    {
        public readonly string AccessToken;
        public readonly string ClusterCaCertificate;
        public readonly string ClusterUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? KarbonClusterId;
        public readonly string? KarbonClusterName;
        public readonly string Name;

        [OutputConstructor]
        private GetKarbonClusterKubeConfigResult(
            string accessToken,

            string clusterCaCertificate,

            string clusterUrl,

            string id,

            string? karbonClusterId,

            string? karbonClusterName,

            string name)
        {
            AccessToken = accessToken;
            ClusterCaCertificate = clusterCaCertificate;
            ClusterUrl = clusterUrl;
            Id = id;
            KarbonClusterId = karbonClusterId;
            KarbonClusterName = karbonClusterName;
            Name = name;
        }
    }
}
