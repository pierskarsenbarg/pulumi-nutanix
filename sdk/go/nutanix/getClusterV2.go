// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the cluster entity details identified by {extId}.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupClusterV2(ctx, &nutanix.LookupClusterV2Args{
//				ExtId: "<YOUR-CLUSTER-ID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupClusterV2(ctx *pulumi.Context, args *LookupClusterV2Args, opts ...pulumi.InvokeOption) (*LookupClusterV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterV2Result
	err := ctx.Invoke("nutanix:index/getClusterV2:getClusterV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterV2.
type LookupClusterV2Args struct {
	// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name.
	// The following expansion keys are supported:
	// - "clusterProfile".
	// - "storageSummary".
	Expand *string `pulumi:"expand"`
	// -(Required) Represents clusters uuid
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getClusterV2.
type LookupClusterV2Result struct {
	// -  Score to indicate how much cluster is eligible for storing domain manager backup.
	BackupEligibilityScore int `pulumi:"backupEligibilityScore"`
	// -  List of categories associated to the PE cluster.
	Categories []string `pulumi:"categories"`
	// -  Cluster profile UUID.
	ClusterProfileExtId string `pulumi:"clusterProfileExtId"`
	// -  Cluster configuration details.
	Configs []GetClusterV2Config `pulumi:"configs"`
	// -  The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
	ContainerName string  `pulumi:"containerName"`
	Expand        *string `pulumi:"expand"`
	// -  A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// -  Number of inefficient VMs in the cluster.
	InefficientVmCount int `pulumi:"inefficientVmCount"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetClusterV2Link `pulumi:"links"`
	// - HTTP Proxy server name configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
	Name string `pulumi:"name"`
	// -  Network details of a cluster.
	Networks []GetClusterV2Network `pulumi:"networks"`
	// -  Node reference for a cluster.
	Nodes []GetClusterV2Node `pulumi:"nodes"`
	// -  globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
	// -  Upgrade status of a cluster.
	//    Valid values are:
	// - "CANCELLED"	The cluster upgrade is cancelled.
	// - "FAILED"	The cluster upgrade failed.
	// - "QUEUED"	The cluster upgrade is in the queue.
	// - "SUCCEEDED"	The cluster was upgraded successfully.
	// - "DOWNLOADING" The luster upgrade is downloading.
	// - "PENDING"The cluster upgrade is in pending state.
	// - "UPGRADING" The cluster is in upgrade state.
	// - "PREUPGRADE" The cluster is in pre-upgrade state.
	// - "SCHEDULED" The cluster upgrade is in scheduled state.
	UpgradeStatus string `pulumi:"upgradeStatus"`
	// -  Number of VMs in the cluster.
	VmCount int `pulumi:"vmCount"`
}

func LookupClusterV2Output(ctx *pulumi.Context, args LookupClusterV2OutputArgs, opts ...pulumi.InvokeOption) LookupClusterV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterV2ResultOutput, error) {
			args := v.(LookupClusterV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getClusterV2:getClusterV2", args, LookupClusterV2ResultOutput{}, options).(LookupClusterV2ResultOutput), nil
		}).(LookupClusterV2ResultOutput)
}

// A collection of arguments for invoking getClusterV2.
type LookupClusterV2OutputArgs struct {
	// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name.
	// The following expansion keys are supported:
	// - "clusterProfile".
	// - "storageSummary".
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// -(Required) Represents clusters uuid
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (LookupClusterV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterV2Args)(nil)).Elem()
}

// A collection of values returned by getClusterV2.
type LookupClusterV2ResultOutput struct{ *pulumi.OutputState }

func (LookupClusterV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterV2Result)(nil)).Elem()
}

func (o LookupClusterV2ResultOutput) ToLookupClusterV2ResultOutput() LookupClusterV2ResultOutput {
	return o
}

func (o LookupClusterV2ResultOutput) ToLookupClusterV2ResultOutputWithContext(ctx context.Context) LookupClusterV2ResultOutput {
	return o
}

// -  Score to indicate how much cluster is eligible for storing domain manager backup.
func (o LookupClusterV2ResultOutput) BackupEligibilityScore() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterV2Result) int { return v.BackupEligibilityScore }).(pulumi.IntOutput)
}

// -  List of categories associated to the PE cluster.
func (o LookupClusterV2ResultOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterV2Result) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// -  Cluster profile UUID.
func (o LookupClusterV2ResultOutput) ClusterProfileExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.ClusterProfileExtId }).(pulumi.StringOutput)
}

// -  Cluster configuration details.
func (o LookupClusterV2ResultOutput) Configs() GetClusterV2ConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterV2Result) []GetClusterV2Config { return v.Configs }).(GetClusterV2ConfigArrayOutput)
}

// -  The name of the default container created as part of cluster creation. This is part of payload for cluster create operation only.
func (o LookupClusterV2ResultOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o LookupClusterV2ResultOutput) Expand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterV2Result) *string { return v.Expand }).(pulumi.StringPtrOutput)
}

// -  A globally unique identifier of an instance that is suitable for external consumption.
func (o LookupClusterV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupClusterV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// -  Number of inefficient VMs in the cluster.
func (o LookupClusterV2ResultOutput) InefficientVmCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterV2Result) int { return v.InefficientVmCount }).(pulumi.IntOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupClusterV2ResultOutput) Links() GetClusterV2LinkArrayOutput {
	return o.ApplyT(func(v LookupClusterV2Result) []GetClusterV2Link { return v.Links }).(GetClusterV2LinkArrayOutput)
}

// - HTTP Proxy server name configuration needed to access a cluster which is hosted behind a HTTP Proxy to not reveal its identity.
func (o LookupClusterV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// -  Network details of a cluster.
func (o LookupClusterV2ResultOutput) Networks() GetClusterV2NetworkArrayOutput {
	return o.ApplyT(func(v LookupClusterV2Result) []GetClusterV2Network { return v.Networks }).(GetClusterV2NetworkArrayOutput)
}

// -  Node reference for a cluster.
func (o LookupClusterV2ResultOutput) Nodes() GetClusterV2NodeArrayOutput {
	return o.ApplyT(func(v LookupClusterV2Result) []GetClusterV2Node { return v.Nodes }).(GetClusterV2NodeArrayOutput)
}

// -  globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o LookupClusterV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

//   - Upgrade status of a cluster.
//     Valid values are:
//   - "CANCELLED"	The cluster upgrade is cancelled.
//   - "FAILED"	The cluster upgrade failed.
//   - "QUEUED"	The cluster upgrade is in the queue.
//   - "SUCCEEDED"	The cluster was upgraded successfully.
//   - "DOWNLOADING" The luster upgrade is downloading.
//   - "PENDING"The cluster upgrade is in pending state.
//   - "UPGRADING" The cluster is in upgrade state.
//   - "PREUPGRADE" The cluster is in pre-upgrade state.
//   - "SCHEDULED" The cluster upgrade is in scheduled state.
func (o LookupClusterV2ResultOutput) UpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterV2Result) string { return v.UpgradeStatus }).(pulumi.StringOutput)
}

// -  Number of VMs in the cluster.
func (o LookupClusterV2ResultOutput) VmCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterV2Result) int { return v.VmCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterV2ResultOutput{})
}
