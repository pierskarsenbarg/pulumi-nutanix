// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a datasource to retrieve all the permissions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nutanix.GetPermission(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPermissions(ctx *pulumi.Context, args *GetPermissionsArgs, opts ...pulumi.InvokeOption) (*GetPermissionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPermissionsResult
	err := ctx.Invoke("nutanix:index/getPermissions:getPermissions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissions.
type GetPermissionsArgs struct {
	Metadatas []GetPermissionsMetadata `pulumi:"metadatas"`
}

// A collection of values returned by getPermissions.
type GetPermissionsResult struct {
	ApiVersion string                 `pulumi:"apiVersion"`
	Entities   []GetPermissionsEntity `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                   `pulumi:"id"`
	Metadatas []GetPermissionsMetadata `pulumi:"metadatas"`
}

func GetPermissionsOutput(ctx *pulumi.Context, args GetPermissionsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionsResult, error) {
			args := v.(GetPermissionsArgs)
			r, err := GetPermissions(ctx, &args, opts...)
			var s GetPermissionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionsResultOutput)
}

// A collection of arguments for invoking getPermissions.
type GetPermissionsOutputArgs struct {
	Metadatas GetPermissionsMetadataArrayInput `pulumi:"metadatas"`
}

func (GetPermissionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissions.
type GetPermissionsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsResult)(nil)).Elem()
}

func (o GetPermissionsResultOutput) ToGetPermissionsResultOutput() GetPermissionsResultOutput {
	return o
}

func (o GetPermissionsResultOutput) ToGetPermissionsResultOutputWithContext(ctx context.Context) GetPermissionsResultOutput {
	return o
}

func (o GetPermissionsResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetPermissionsResultOutput) Entities() GetPermissionsEntityArrayOutput {
	return o.ApplyT(func(v GetPermissionsResult) []GetPermissionsEntity { return v.Entities }).(GetPermissionsEntityArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPermissionsResultOutput) Metadatas() GetPermissionsMetadataArrayOutput {
	return o.ApplyT(func(v GetPermissionsResult) []GetPermissionsMetadata { return v.Metadatas }).(GetPermissionsMetadataArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionsResultOutput{})
}
