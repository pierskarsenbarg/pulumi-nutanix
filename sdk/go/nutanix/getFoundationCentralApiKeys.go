// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an api key given its UUID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupFoundationCentralApiKeys(ctx, &nutanix.LookupFoundationCentralApiKeysArgs{
//				KeyUuid: "<KEY_UUID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFoundationCentralApiKeys(ctx *pulumi.Context, args *LookupFoundationCentralApiKeysArgs, opts ...pulumi.InvokeOption) (*LookupFoundationCentralApiKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFoundationCentralApiKeysResult
	err := ctx.Invoke("nutanix:index/getFoundationCentralApiKeys:getFoundationCentralApiKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFoundationCentralApiKeys.
type LookupFoundationCentralApiKeysArgs struct {
	// UUID of the key which needs to be fetched.
	KeyUuid string `pulumi:"keyUuid"`
}

// A collection of values returned by getFoundationCentralApiKeys.
type LookupFoundationCentralApiKeysResult struct {
	// Alias of the api key.
	Alias string `pulumi:"alias"`
	// Api key in string format.
	ApiKey string `pulumi:"apiKey"`
	// Time when the api key was created.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// Current time of Foundation Central.
	CurrentTime string `pulumi:"currentTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// UUID of the api key.
	KeyUuid string `pulumi:"keyUuid"`
}

func LookupFoundationCentralApiKeysOutput(ctx *pulumi.Context, args LookupFoundationCentralApiKeysOutputArgs, opts ...pulumi.InvokeOption) LookupFoundationCentralApiKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFoundationCentralApiKeysResultOutput, error) {
			args := v.(LookupFoundationCentralApiKeysArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFoundationCentralApiKeysResult
			secret, err := ctx.InvokePackageRaw("nutanix:index/getFoundationCentralApiKeys:getFoundationCentralApiKeys", args, &rv, "", opts...)
			if err != nil {
				return LookupFoundationCentralApiKeysResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFoundationCentralApiKeysResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFoundationCentralApiKeysResultOutput), nil
			}
			return output, nil
		}).(LookupFoundationCentralApiKeysResultOutput)
}

// A collection of arguments for invoking getFoundationCentralApiKeys.
type LookupFoundationCentralApiKeysOutputArgs struct {
	// UUID of the key which needs to be fetched.
	KeyUuid pulumi.StringInput `pulumi:"keyUuid"`
}

func (LookupFoundationCentralApiKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFoundationCentralApiKeysArgs)(nil)).Elem()
}

// A collection of values returned by getFoundationCentralApiKeys.
type LookupFoundationCentralApiKeysResultOutput struct{ *pulumi.OutputState }

func (LookupFoundationCentralApiKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFoundationCentralApiKeysResult)(nil)).Elem()
}

func (o LookupFoundationCentralApiKeysResultOutput) ToLookupFoundationCentralApiKeysResultOutput() LookupFoundationCentralApiKeysResultOutput {
	return o
}

func (o LookupFoundationCentralApiKeysResultOutput) ToLookupFoundationCentralApiKeysResultOutputWithContext(ctx context.Context) LookupFoundationCentralApiKeysResultOutput {
	return o
}

// Alias of the api key.
func (o LookupFoundationCentralApiKeysResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.Alias }).(pulumi.StringOutput)
}

// Api key in string format.
func (o LookupFoundationCentralApiKeysResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Time when the api key was created.
func (o LookupFoundationCentralApiKeysResultOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// Current time of Foundation Central.
func (o LookupFoundationCentralApiKeysResultOutput) CurrentTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.CurrentTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFoundationCentralApiKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// UUID of the api key.
func (o LookupFoundationCentralApiKeysResultOutput) KeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFoundationCentralApiKeysResult) string { return v.KeyUuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFoundationCentralApiKeysResultOutput{})
}
