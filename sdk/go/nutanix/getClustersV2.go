// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists all cluster entities registered to Prism Central.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetClustersV2(ctx, &nutanix.GetClustersV2Args{
//				Filter: pulumi.StringRef("startswith(name, 'PC_')"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClustersV2(ctx *pulumi.Context, args *GetClustersV2Args, opts ...pulumi.InvokeOption) (*GetClustersV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersV2Result
	err := ctx.Invoke("nutanix:index/getClustersV2:getClustersV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClustersV2.
type GetClustersV2Args struct {
	// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName.
	// The apply can be applied on the following fields:
	// - config/buildInfo/version
	// - nodes/numberOfNodes
	Apply *string `pulumi:"apply"`
	// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby.
	// The `expand` can be applied on the following fields:
	// - clusterProfile
	// - storageSummary
	Expand *string `pulumi:"expand"`
	// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
	// The filter can be applied to the following fields:
	// - backupEligibilityScore
	// - clusterProfileExtId
	// - config/buildInfo/version
	// - config/clusterFunction
	// - config/encryptionInTransitStatus
	// - config/encryptionOption
	// - config/encryptionScope
	// - config/hypervisorTypes
	// - config/isAvailable
	// - extId
	// - name
	// - network/keyManagementServerType
	// - upgradeStatus
	Filter *string `pulumi:"filter"`
	// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit *int `pulumi:"limit"`
	// -(Optional) A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order.
	// The orderby can be applied to the following fields:
	// - backupEligibilityScore
	// - config/buildInfo/version
	// - config/isAvailable
	// - extId
	// - inefficientVmCount
	// - name
	// - network/keyManagementServerType
	// - nodes/numberOfNodes
	// - upgradeStatus
	// - vmCount
	OrderBy *string `pulumi:"orderBy"`
	// -(Optional) A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page *int `pulumi:"page"`
	// -(Optional) A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
	// The select  can be applied to the following fields:
	// - backupEligibilityScore
	// - inefficientVmCount
	// - name
	// - upgradeStatus
	// - vmCount
	Select *string `pulumi:"select"`
}

// A collection of values returned by getClustersV2.
type GetClustersV2Result struct {
	Apply           *string                      `pulumi:"apply"`
	ClusterEntities []GetClustersV2ClusterEntity `pulumi:"clusterEntities"`
	Expand          *string                      `pulumi:"expand"`
	Filter          *string                      `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	Page    *int    `pulumi:"page"`
	Select  *string `pulumi:"select"`
}

func GetClustersV2Output(ctx *pulumi.Context, args GetClustersV2OutputArgs, opts ...pulumi.InvokeOption) GetClustersV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetClustersV2ResultOutput, error) {
			args := v.(GetClustersV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getClustersV2:getClustersV2", args, GetClustersV2ResultOutput{}, options).(GetClustersV2ResultOutput), nil
		}).(GetClustersV2ResultOutput)
}

// A collection of arguments for invoking getClustersV2.
type GetClustersV2OutputArgs struct {
	// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName.
	// The apply can be applied on the following fields:
	// - config/buildInfo/version
	// - nodes/numberOfNodes
	Apply pulumi.StringPtrInput `pulumi:"apply"`
	// -(Optional) A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby.
	// The `expand` can be applied on the following fields:
	// - clusterProfile
	// - storageSummary
	Expand pulumi.StringPtrInput `pulumi:"expand"`
	// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
	// The filter can be applied to the following fields:
	// - backupEligibilityScore
	// - clusterProfileExtId
	// - config/buildInfo/version
	// - config/clusterFunction
	// - config/encryptionInTransitStatus
	// - config/encryptionOption
	// - config/encryptionScope
	// - config/hypervisorTypes
	// - config/isAvailable
	// - extId
	// - name
	// - network/keyManagementServerType
	// - upgradeStatus
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// -(Optional) A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order.
	// The orderby can be applied to the following fields:
	// - backupEligibilityScore
	// - config/buildInfo/version
	// - config/isAvailable
	// - extId
	// - inefficientVmCount
	// - name
	// - network/keyManagementServerType
	// - nodes/numberOfNodes
	// - upgradeStatus
	// - vmCount
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// -(Optional) A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// -(Optional) A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
	// The select  can be applied to the following fields:
	// - backupEligibilityScore
	// - inefficientVmCount
	// - name
	// - upgradeStatus
	// - vmCount
	Select pulumi.StringPtrInput `pulumi:"select"`
}

func (GetClustersV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersV2Args)(nil)).Elem()
}

// A collection of values returned by getClustersV2.
type GetClustersV2ResultOutput struct{ *pulumi.OutputState }

func (GetClustersV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersV2Result)(nil)).Elem()
}

func (o GetClustersV2ResultOutput) ToGetClustersV2ResultOutput() GetClustersV2ResultOutput {
	return o
}

func (o GetClustersV2ResultOutput) ToGetClustersV2ResultOutputWithContext(ctx context.Context) GetClustersV2ResultOutput {
	return o
}

func (o GetClustersV2ResultOutput) Apply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *string { return v.Apply }).(pulumi.StringPtrOutput)
}

func (o GetClustersV2ResultOutput) ClusterEntities() GetClustersV2ClusterEntityArrayOutput {
	return o.ApplyT(func(v GetClustersV2Result) []GetClustersV2ClusterEntity { return v.ClusterEntities }).(GetClustersV2ClusterEntityArrayOutput)
}

func (o GetClustersV2ResultOutput) Expand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *string { return v.Expand }).(pulumi.StringPtrOutput)
}

func (o GetClustersV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetClustersV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetClustersV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetClustersV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersV2ResultOutput{})
}
