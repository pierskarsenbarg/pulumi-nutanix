// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List image placement policies details.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetImagePlacementPoliciesV2(ctx, &nutanix.GetImagePlacementPoliciesV2Args{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.GetImagePlacementPoliciesV2(ctx, &nutanix.GetImagePlacementPoliciesV2Args{
//				Filter: pulumi.StringRef("startswith(name,'ipp_name')"),
//				Limit:  pulumi.IntRef(10),
//				Page:   pulumi.IntRef(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImagePlacementPoliciesV2(ctx *pulumi.Context, args *GetImagePlacementPoliciesV2Args, opts ...pulumi.InvokeOption) (*GetImagePlacementPoliciesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImagePlacementPoliciesV2Result
	err := ctx.Invoke("nutanix:index/getImagePlacementPoliciesV2:getImagePlacementPoliciesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImagePlacementPoliciesV2.
type GetImagePlacementPoliciesV2Args struct {
	// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions. For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
	// - description
	// - enforcementState
	// - name
	Filter *string `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit *int `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields:
	// - description
	// - enforcementState
	// - name
	OrderBy *string `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page *int `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. The select can be applied to the following fields:
	// - createTime
	// - description
	// - enforcementState
	// - extId
	// - lastUpdateTime
	// - links
	// - name
	// - ownerExtId
	// - placementType
	// - tenantId
	Select *string `pulumi:"select"`
}

// A collection of values returned by getImagePlacementPoliciesV2.
type GetImagePlacementPoliciesV2Result struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	Page    *int    `pulumi:"page"`
	// List of all image placement policies
	PlacementPolicies []GetImagePlacementPoliciesV2PlacementPolicy `pulumi:"placementPolicies"`
	Select            *string                                      `pulumi:"select"`
}

func GetImagePlacementPoliciesV2Output(ctx *pulumi.Context, args GetImagePlacementPoliciesV2OutputArgs, opts ...pulumi.InvokeOption) GetImagePlacementPoliciesV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetImagePlacementPoliciesV2ResultOutput, error) {
			args := v.(GetImagePlacementPoliciesV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getImagePlacementPoliciesV2:getImagePlacementPoliciesV2", args, GetImagePlacementPoliciesV2ResultOutput{}, options).(GetImagePlacementPoliciesV2ResultOutput), nil
		}).(GetImagePlacementPoliciesV2ResultOutput)
}

// A collection of arguments for invoking getImagePlacementPoliciesV2.
type GetImagePlacementPoliciesV2OutputArgs struct {
	// A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the OData V4.01 URL conventions. For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
	// - description
	// - enforcementState
	// - name
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields:
	// - description
	// - enforcementState
	// - name
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. The select can be applied to the following fields:
	// - createTime
	// - description
	// - enforcementState
	// - extId
	// - lastUpdateTime
	// - links
	// - name
	// - ownerExtId
	// - placementType
	// - tenantId
	Select pulumi.StringPtrInput `pulumi:"select"`
}

func (GetImagePlacementPoliciesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePlacementPoliciesV2Args)(nil)).Elem()
}

// A collection of values returned by getImagePlacementPoliciesV2.
type GetImagePlacementPoliciesV2ResultOutput struct{ *pulumi.OutputState }

func (GetImagePlacementPoliciesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePlacementPoliciesV2Result)(nil)).Elem()
}

func (o GetImagePlacementPoliciesV2ResultOutput) ToGetImagePlacementPoliciesV2ResultOutput() GetImagePlacementPoliciesV2ResultOutput {
	return o
}

func (o GetImagePlacementPoliciesV2ResultOutput) ToGetImagePlacementPoliciesV2ResultOutputWithContext(ctx context.Context) GetImagePlacementPoliciesV2ResultOutput {
	return o
}

func (o GetImagePlacementPoliciesV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagePlacementPoliciesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImagePlacementPoliciesV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetImagePlacementPoliciesV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetImagePlacementPoliciesV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

// List of all image placement policies
func (o GetImagePlacementPoliciesV2ResultOutput) PlacementPolicies() GetImagePlacementPoliciesV2PlacementPolicyArrayOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) []GetImagePlacementPoliciesV2PlacementPolicy {
		return v.PlacementPolicies
	}).(GetImagePlacementPoliciesV2PlacementPolicyArrayOutput)
}

func (o GetImagePlacementPoliciesV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagePlacementPoliciesV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagePlacementPoliciesV2ResultOutput{})
}
