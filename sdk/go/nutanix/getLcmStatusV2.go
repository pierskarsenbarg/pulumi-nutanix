// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the LCM framework status. Represents the Status of LCM. Status represents details about a pending or ongoing action in LCM.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetLcmStatusV2(ctx, &nutanix.GetLcmStatusV2Args{
//				XClusterId: pulumi.StringRef("0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLcmStatusV2(ctx *pulumi.Context, args *GetLcmStatusV2Args, opts ...pulumi.InvokeOption) (*GetLcmStatusV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLcmStatusV2Result
	err := ctx.Invoke("nutanix:index/getLcmStatusV2:getLcmStatusV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLcmStatusV2.
type GetLcmStatusV2Args struct {
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId *string `pulumi:"xClusterId"`
}

// A collection of values returned by getLcmStatusV2.
type GetLcmStatusV2Result struct {
	// A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// LCM framework version information.
	FrameworkVersions []GetLcmStatusV2FrameworkVersion `pulumi:"frameworkVersions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Operation type and UUID of an ongoing operation in LCM.
	InProgressOperations []GetLcmStatusV2InProgressOperation `pulumi:"inProgressOperations"`
	// Boolean that indicates if cancel intent for LCM update is set or not.
	IsCancelIntentSet bool `pulumi:"isCancelIntentSet"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetLcmStatusV2Link `pulumi:"links"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
	// Upload task UUID.
	UploadTaskUuid string  `pulumi:"uploadTaskUuid"`
	XClusterId     *string `pulumi:"xClusterId"`
}

func GetLcmStatusV2Output(ctx *pulumi.Context, args GetLcmStatusV2OutputArgs, opts ...pulumi.InvokeOption) GetLcmStatusV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLcmStatusV2ResultOutput, error) {
			args := v.(GetLcmStatusV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getLcmStatusV2:getLcmStatusV2", args, GetLcmStatusV2ResultOutput{}, options).(GetLcmStatusV2ResultOutput), nil
		}).(GetLcmStatusV2ResultOutput)
}

// A collection of arguments for invoking getLcmStatusV2.
type GetLcmStatusV2OutputArgs struct {
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId pulumi.StringPtrInput `pulumi:"xClusterId"`
}

func (GetLcmStatusV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmStatusV2Args)(nil)).Elem()
}

// A collection of values returned by getLcmStatusV2.
type GetLcmStatusV2ResultOutput struct{ *pulumi.OutputState }

func (GetLcmStatusV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmStatusV2Result)(nil)).Elem()
}

func (o GetLcmStatusV2ResultOutput) ToGetLcmStatusV2ResultOutput() GetLcmStatusV2ResultOutput {
	return o
}

func (o GetLcmStatusV2ResultOutput) ToGetLcmStatusV2ResultOutputWithContext(ctx context.Context) GetLcmStatusV2ResultOutput {
	return o
}

// A globally unique identifier of an instance that is suitable for external consumption.
func (o GetLcmStatusV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// LCM framework version information.
func (o GetLcmStatusV2ResultOutput) FrameworkVersions() GetLcmStatusV2FrameworkVersionArrayOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) []GetLcmStatusV2FrameworkVersion { return v.FrameworkVersions }).(GetLcmStatusV2FrameworkVersionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLcmStatusV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Operation type and UUID of an ongoing operation in LCM.
func (o GetLcmStatusV2ResultOutput) InProgressOperations() GetLcmStatusV2InProgressOperationArrayOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) []GetLcmStatusV2InProgressOperation { return v.InProgressOperations }).(GetLcmStatusV2InProgressOperationArrayOutput)
}

// Boolean that indicates if cancel intent for LCM update is set or not.
func (o GetLcmStatusV2ResultOutput) IsCancelIntentSet() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) bool { return v.IsCancelIntentSet }).(pulumi.BoolOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o GetLcmStatusV2ResultOutput) Links() GetLcmStatusV2LinkArrayOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) []GetLcmStatusV2Link { return v.Links }).(GetLcmStatusV2LinkArrayOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o GetLcmStatusV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

// Upload task UUID.
func (o GetLcmStatusV2ResultOutput) UploadTaskUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) string { return v.UploadTaskUuid }).(pulumi.StringOutput)
}

func (o GetLcmStatusV2ResultOutput) XClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLcmStatusV2Result) *string { return v.XClusterId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLcmStatusV2ResultOutput{})
}
