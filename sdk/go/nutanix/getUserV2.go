// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a datasource to View a User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetUserV2(ctx, &nutanix.GetUserV2Args{
//				ExtId: "<user ext Id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Argument Reference
//
// The following arguments are supported:
//
// * `extId`: -(Required) External Identifier of the User.
func GetUserV2(ctx *pulumi.Context, args *GetUserV2Args, opts ...pulumi.InvokeOption) (*GetUserV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserV2Result
	err := ctx.Invoke("nutanix:index/getUserV2:getUserV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserV2.
type GetUserV2Args struct {
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getUserV2.
type GetUserV2Result struct {
	// -  Any additional attribute for the User.
	AdditionalAttributes []GetUserV2AdditionalAttribute `pulumi:"additionalAttributes"`
	// - Bucket Access Keys for the User.
	BucketsAccessKeys []GetUserV2BucketsAccessKey `pulumi:"bucketsAccessKeys"`
	// - User or Service who created the User.
	CreatedBy string `pulumi:"createdBy"`
	// - Creation time for the Bucket Access Key.
	CreatedTime string `pulumi:"createdTime"`
	// - Display name for the User.
	DisplayName string `pulumi:"displayName"`
	// - Email Id for the User.
	EmailId string `pulumi:"emailId"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// - First name for the User.
	FirstName string `pulumi:"firstName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Identifier of the IDP for the User.
	IdpId string `pulumi:"idpId"`
	// - Flag to force the User to reset password.
	IsForceResetPassword bool `pulumi:"isForceResetPassword"`
	// - Last successful logged in time for the User.
	LastLoginTime string `pulumi:"lastLoginTime"`
	// - Last name for the User.
	LastName string `pulumi:"lastName"`
	// - Last updated time of the User.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetUserV2Link `pulumi:"links"`
	// - Default locale for the User.
	Locale string `pulumi:"locale"`
	// - Middle name for the User.
	MiddleInitial string `pulumi:"middleInitial"`
	Password      string `pulumi:"password"`
	// - Default Region for the User.
	Region string `pulumi:"region"`
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status string `pulumi:"status"`
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType string `pulumi:"userType"`
	// - Identifier for the User in the form an email address.
	Username string `pulumi:"username"`
}

func GetUserV2Output(ctx *pulumi.Context, args GetUserV2OutputArgs, opts ...pulumi.InvokeOption) GetUserV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserV2ResultOutput, error) {
			args := v.(GetUserV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getUserV2:getUserV2", args, GetUserV2ResultOutput{}, options).(GetUserV2ResultOutput), nil
		}).(GetUserV2ResultOutput)
}

// A collection of arguments for invoking getUserV2.
type GetUserV2OutputArgs struct {
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (GetUserV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserV2Args)(nil)).Elem()
}

// A collection of values returned by getUserV2.
type GetUserV2ResultOutput struct{ *pulumi.OutputState }

func (GetUserV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserV2Result)(nil)).Elem()
}

func (o GetUserV2ResultOutput) ToGetUserV2ResultOutput() GetUserV2ResultOutput {
	return o
}

func (o GetUserV2ResultOutput) ToGetUserV2ResultOutputWithContext(ctx context.Context) GetUserV2ResultOutput {
	return o
}

// -  Any additional attribute for the User.
func (o GetUserV2ResultOutput) AdditionalAttributes() GetUserV2AdditionalAttributeArrayOutput {
	return o.ApplyT(func(v GetUserV2Result) []GetUserV2AdditionalAttribute { return v.AdditionalAttributes }).(GetUserV2AdditionalAttributeArrayOutput)
}

// - Bucket Access Keys for the User.
func (o GetUserV2ResultOutput) BucketsAccessKeys() GetUserV2BucketsAccessKeyArrayOutput {
	return o.ApplyT(func(v GetUserV2Result) []GetUserV2BucketsAccessKey { return v.BucketsAccessKeys }).(GetUserV2BucketsAccessKeyArrayOutput)
}

// - User or Service who created the User.
func (o GetUserV2ResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// - Creation time for the Bucket Access Key.
func (o GetUserV2ResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// - Display name for the User.
func (o GetUserV2ResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.DisplayName }).(pulumi.StringOutput)
}

// - Email Id for the User.
func (o GetUserV2ResultOutput) EmailId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.EmailId }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o GetUserV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// - First name for the User.
func (o GetUserV2ResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.FirstName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Identifier of the IDP for the User.
func (o GetUserV2ResultOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.IdpId }).(pulumi.StringOutput)
}

// - Flag to force the User to reset password.
func (o GetUserV2ResultOutput) IsForceResetPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserV2Result) bool { return v.IsForceResetPassword }).(pulumi.BoolOutput)
}

// - Last successful logged in time for the User.
func (o GetUserV2ResultOutput) LastLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.LastLoginTime }).(pulumi.StringOutput)
}

// - Last name for the User.
func (o GetUserV2ResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.LastName }).(pulumi.StringOutput)
}

// - Last updated time of the User.
func (o GetUserV2ResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o GetUserV2ResultOutput) Links() GetUserV2LinkArrayOutput {
	return o.ApplyT(func(v GetUserV2Result) []GetUserV2Link { return v.Links }).(GetUserV2LinkArrayOutput)
}

// - Default locale for the User.
func (o GetUserV2ResultOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Locale }).(pulumi.StringOutput)
}

// - Middle name for the User.
func (o GetUserV2ResultOutput) MiddleInitial() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.MiddleInitial }).(pulumi.StringOutput)
}

func (o GetUserV2ResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Password }).(pulumi.StringOutput)
}

// - Default Region for the User.
func (o GetUserV2ResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Region }).(pulumi.StringOutput)
}

// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
func (o GetUserV2ResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Status }).(pulumi.StringOutput)
}

//   - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
//     Type of the User.
func (o GetUserV2ResultOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.UserType }).(pulumi.StringOutput)
}

// - Identifier for the User in the form an email address.
func (o GetUserV2ResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserV2Result) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserV2ResultOutput{})
}
