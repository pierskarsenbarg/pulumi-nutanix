// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List profiles in Nutanix Database Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			profiles, err := nutanix.GetNdbProfiles(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("profilesList", profiles)
//			return nil
//		})
//	}
//
// ```
//
// ## profiles
//
// The following attributes are exported for each profile:
//
// * `id`: - id of profile
// * `name`: - profile name
// * `description`: - description of profile
// * `status`: - status of profile
// * `owner`: - owner name
// * `engineType`: - database engine type
// * `dbVersion`: - database version
// * `topology`: - topology
// * `systemProfile`: - if system profile or not
// * `assocDbServers`: - associated DB servers
// * `assocDatabases`: - associated databases
// * `latestVersion`: - latest version for engine software
// * `latestVersionId`: - ID of latest version for engine software
// * `versions`: - profile's different version config
// * `clusterAvailability`: - list of clusters availability
// * `nxClusterId`: - era cluster ID
//
// See detailed information in [Nutanix Database Service Profiles](https://www.nutanix.dev/api_references/ndb/#/74ae456d63b24-get-all-profiles).
func GetNdbProfiles(ctx *pulumi.Context, args *GetNdbProfilesArgs, opts ...pulumi.InvokeOption) (*GetNdbProfilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNdbProfilesResult
	err := ctx.Invoke("nutanix:index/getNdbProfiles:getNdbProfiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbProfiles.
type GetNdbProfilesArgs struct {
	// Database engine. For eg. postgres_database
	Engine *string `pulumi:"engine"`
	// profile type. Types: Software, Compute, Network and Database_Parameter
	ProfileType *string `pulumi:"profileType"`
}

// A collection of values returned by getNdbProfiles.
type GetNdbProfilesResult struct {
	Engine *string `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	ProfileType *string `pulumi:"profileType"`
	// List of profiles
	Profiles []GetNdbProfilesProfile `pulumi:"profiles"`
}

func GetNdbProfilesOutput(ctx *pulumi.Context, args GetNdbProfilesOutputArgs, opts ...pulumi.InvokeOption) GetNdbProfilesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNdbProfilesResultOutput, error) {
			args := v.(GetNdbProfilesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetNdbProfilesResult
			secret, err := ctx.InvokePackageRaw("nutanix:index/getNdbProfiles:getNdbProfiles", args, &rv, "", opts...)
			if err != nil {
				return GetNdbProfilesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetNdbProfilesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetNdbProfilesResultOutput), nil
			}
			return output, nil
		}).(GetNdbProfilesResultOutput)
}

// A collection of arguments for invoking getNdbProfiles.
type GetNdbProfilesOutputArgs struct {
	// Database engine. For eg. postgres_database
	Engine pulumi.StringPtrInput `pulumi:"engine"`
	// profile type. Types: Software, Compute, Network and Database_Parameter
	ProfileType pulumi.StringPtrInput `pulumi:"profileType"`
}

func (GetNdbProfilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbProfilesArgs)(nil)).Elem()
}

// A collection of values returned by getNdbProfiles.
type GetNdbProfilesResultOutput struct{ *pulumi.OutputState }

func (GetNdbProfilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbProfilesResult)(nil)).Elem()
}

func (o GetNdbProfilesResultOutput) ToGetNdbProfilesResultOutput() GetNdbProfilesResultOutput {
	return o
}

func (o GetNdbProfilesResultOutput) ToGetNdbProfilesResultOutputWithContext(ctx context.Context) GetNdbProfilesResultOutput {
	return o
}

func (o GetNdbProfilesResultOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNdbProfilesResult) *string { return v.Engine }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNdbProfilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdbProfilesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNdbProfilesResultOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNdbProfilesResult) *string { return v.ProfileType }).(pulumi.StringPtrOutput)
}

// List of profiles
func (o GetNdbProfilesResultOutput) Profiles() GetNdbProfilesProfileArrayOutput {
	return o.ApplyT(func(v GetNdbProfilesResult) []GetNdbProfilesProfile { return v.Profiles }).(GetNdbProfilesProfileArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNdbProfilesResultOutput{})
}
