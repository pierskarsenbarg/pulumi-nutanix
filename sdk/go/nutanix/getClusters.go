// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes Clusters
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetClusters(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Reference
//
// The `projectReference`, `ownerReference`, `availabilityZoneReference`, `clusterReference`, attributes supports the following:
//
// * `kind`: - The kind name (Default value: project).
// * `name`: - the name.
// * `UUID`: - the UUID.
//
// ### Version
//
// The version attribute supports the following:
//
// * `productName`: - Name of the producer/distribution of the image. For example windows or red hat.
// * `productVersion`: - Version string for the disk image.
//
// See detailed information in [Nutanix Clusters](https://www.nutanix.dev/api_references/prism-central-v3/#/d93c30e04327e-get-a-list-of-existing-clusters).
func GetClusters(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("nutanix:index/getClusters:getClusters", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	// The API version.
	ApiVersion string `pulumi:"apiVersion"`
	// List of Clusters
	Entities []GetClustersEntity `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetClustersOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetClustersResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("nutanix:index/getClusters:getClusters", nil, GetClustersResultOutput{}, options).(GetClustersResultOutput), nil
	}).(GetClustersResultOutput)
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// The API version.
func (o GetClustersResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of Clusters
func (o GetClustersResultOutput) Entities() GetClustersEntityArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersEntity { return v.Entities }).(GetClustersEntityArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
