// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Nutanix Protection Rule resource to Create a Protection Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nutanix.NewProtectionRule(ctx, "protectionRuleTest", &nutanix.ProtectionRuleArgs{
// 			AvailabilityZoneConnectivityLists: ProtectionRuleAvailabilityZoneConnectivityListArray{
// 				&ProtectionRuleAvailabilityZoneConnectivityListArgs{
// 					SnapshotScheduleLists: ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray{
// 						&ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{
// 							LocalSnapshotRetentionPolicy: &ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{
// 								NumSnapshots: pulumi.Int(1),
// 							},
// 							RecoveryPointObjectiveSecs: pulumi.Int(3600),
// 							SnapshotType:               pulumi.String("CRASH_CONSISTENT"),
// 						},
// 					},
// 				},
// 			},
// 			CategoryFilter: &ProtectionRuleCategoryFilterArgs{
// 				Params: ProtectionRuleCategoryFilterParamArray{
// 					&ProtectionRuleCategoryFilterParamArgs{
// 						Name: pulumi.String("Environment"),
// 						Values: pulumi.StringArray{
// 							pulumi.String("Dev"),
// 						},
// 					},
// 				},
// 			},
// 			Description: pulumi.String("test"),
// 			OrderedAvailabilityZoneLists: ProtectionRuleOrderedAvailabilityZoneListArray{
// 				&ProtectionRuleOrderedAvailabilityZoneListArgs{
// 					AvailabilityZoneUrl: pulumi.String("ab788130-0820-4d07-a1b5-b0ba4d3a42asd"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type ProtectionRule struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
	// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	AvailabilityZoneConnectivityLists ProtectionRuleAvailabilityZoneConnectivityListArrayOutput `pulumi:"availabilityZoneConnectivityLists"`
	Categories                        ProtectionRuleCategoryArrayOutput                         `pulumi:"categories"`
	// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
	// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
	// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
	CategoryFilter ProtectionRuleCategoryFilterOutput `pulumi:"categoryFilter"`
	// A description for protection rule.
	Description pulumi.StringOutput    `pulumi:"description"`
	Metadata    pulumi.StringMapOutput `pulumi:"metadata"`
	// The name for the protection rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
	// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
	// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
	OrderedAvailabilityZoneLists ProtectionRuleOrderedAvailabilityZoneListArrayOutput `pulumi:"orderedAvailabilityZoneLists"`
	OwnerReference               ProtectionRuleOwnerReferenceOutput                   `pulumi:"ownerReference"`
	ProjectReference             ProtectionRuleProjectReferenceOutput                 `pulumi:"projectReference"`
	StartTime                    pulumi.StringOutput                                  `pulumi:"startTime"`
	State                        pulumi.StringOutput                                  `pulumi:"state"`
}

// NewProtectionRule registers a new resource with the given unique name, arguments, and options.
func NewProtectionRule(ctx *pulumi.Context,
	name string, args *ProtectionRuleArgs, opts ...pulumi.ResourceOption) (*ProtectionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZoneConnectivityLists == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZoneConnectivityLists'")
	}
	if args.OrderedAvailabilityZoneLists == nil {
		return nil, errors.New("invalid value for required argument 'OrderedAvailabilityZoneLists'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ProtectionRule
	err := ctx.RegisterResource("nutanix:index/protectionRule:ProtectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectionRule gets an existing ProtectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionRuleState, opts ...pulumi.ResourceOption) (*ProtectionRule, error) {
	var resource ProtectionRule
	err := ctx.ReadResource("nutanix:index/protectionRule:ProtectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectionRule resources.
type protectionRuleState struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
	// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	AvailabilityZoneConnectivityLists []ProtectionRuleAvailabilityZoneConnectivityList `pulumi:"availabilityZoneConnectivityLists"`
	Categories                        []ProtectionRuleCategory                         `pulumi:"categories"`
	// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
	// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
	// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
	CategoryFilter *ProtectionRuleCategoryFilter `pulumi:"categoryFilter"`
	// A description for protection rule.
	Description *string           `pulumi:"description"`
	Metadata    map[string]string `pulumi:"metadata"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
	// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
	// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
	OrderedAvailabilityZoneLists []ProtectionRuleOrderedAvailabilityZoneList `pulumi:"orderedAvailabilityZoneLists"`
	OwnerReference               *ProtectionRuleOwnerReference               `pulumi:"ownerReference"`
	ProjectReference             *ProtectionRuleProjectReference             `pulumi:"projectReference"`
	StartTime                    *string                                     `pulumi:"startTime"`
	State                        *string                                     `pulumi:"state"`
}

type ProtectionRuleState struct {
	ApiVersion pulumi.StringPtrInput
	// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
	// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	AvailabilityZoneConnectivityLists ProtectionRuleAvailabilityZoneConnectivityListArrayInput
	Categories                        ProtectionRuleCategoryArrayInput
	// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
	// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
	// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
	CategoryFilter ProtectionRuleCategoryFilterPtrInput
	// A description for protection rule.
	Description pulumi.StringPtrInput
	Metadata    pulumi.StringMapInput
	// The name for the protection rule.
	Name pulumi.StringPtrInput
	// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
	// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
	// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
	OrderedAvailabilityZoneLists ProtectionRuleOrderedAvailabilityZoneListArrayInput
	OwnerReference               ProtectionRuleOwnerReferencePtrInput
	ProjectReference             ProtectionRuleProjectReferencePtrInput
	StartTime                    pulumi.StringPtrInput
	State                        pulumi.StringPtrInput
}

func (ProtectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionRuleState)(nil)).Elem()
}

type protectionRuleArgs struct {
	// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
	// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	AvailabilityZoneConnectivityLists []ProtectionRuleAvailabilityZoneConnectivityList `pulumi:"availabilityZoneConnectivityLists"`
	Categories                        []ProtectionRuleCategory                         `pulumi:"categories"`
	// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
	// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
	// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
	CategoryFilter *ProtectionRuleCategoryFilter `pulumi:"categoryFilter"`
	// A description for protection rule.
	Description *string `pulumi:"description"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
	// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
	// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
	OrderedAvailabilityZoneLists []ProtectionRuleOrderedAvailabilityZoneList `pulumi:"orderedAvailabilityZoneLists"`
	OwnerReference               *ProtectionRuleOwnerReference               `pulumi:"ownerReference"`
	ProjectReference             *ProtectionRuleProjectReference             `pulumi:"projectReference"`
	StartTime                    *string                                     `pulumi:"startTime"`
}

// The set of arguments for constructing a ProtectionRule resource.
type ProtectionRuleArgs struct {
	// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
	// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
	// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
	AvailabilityZoneConnectivityLists ProtectionRuleAvailabilityZoneConnectivityListArrayInput
	Categories                        ProtectionRuleCategoryArrayInput
	// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
	// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
	// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
	CategoryFilter ProtectionRuleCategoryFilterPtrInput
	// A description for protection rule.
	Description pulumi.StringPtrInput
	// The name for the protection rule.
	Name pulumi.StringPtrInput
	// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
	// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
	// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
	OrderedAvailabilityZoneLists ProtectionRuleOrderedAvailabilityZoneListArrayInput
	OwnerReference               ProtectionRuleOwnerReferencePtrInput
	ProjectReference             ProtectionRuleProjectReferencePtrInput
	StartTime                    pulumi.StringPtrInput
}

func (ProtectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionRuleArgs)(nil)).Elem()
}

type ProtectionRuleInput interface {
	pulumi.Input

	ToProtectionRuleOutput() ProtectionRuleOutput
	ToProtectionRuleOutputWithContext(ctx context.Context) ProtectionRuleOutput
}

func (*ProtectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRule)(nil)).Elem()
}

func (i *ProtectionRule) ToProtectionRuleOutput() ProtectionRuleOutput {
	return i.ToProtectionRuleOutputWithContext(context.Background())
}

func (i *ProtectionRule) ToProtectionRuleOutputWithContext(ctx context.Context) ProtectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOutput)
}

// ProtectionRuleArrayInput is an input type that accepts ProtectionRuleArray and ProtectionRuleArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleArrayInput` via:
//
//          ProtectionRuleArray{ ProtectionRuleArgs{...} }
type ProtectionRuleArrayInput interface {
	pulumi.Input

	ToProtectionRuleArrayOutput() ProtectionRuleArrayOutput
	ToProtectionRuleArrayOutputWithContext(context.Context) ProtectionRuleArrayOutput
}

type ProtectionRuleArray []ProtectionRuleInput

func (ProtectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectionRule)(nil)).Elem()
}

func (i ProtectionRuleArray) ToProtectionRuleArrayOutput() ProtectionRuleArrayOutput {
	return i.ToProtectionRuleArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleArray) ToProtectionRuleArrayOutputWithContext(ctx context.Context) ProtectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleArrayOutput)
}

// ProtectionRuleMapInput is an input type that accepts ProtectionRuleMap and ProtectionRuleMapOutput values.
// You can construct a concrete instance of `ProtectionRuleMapInput` via:
//
//          ProtectionRuleMap{ "key": ProtectionRuleArgs{...} }
type ProtectionRuleMapInput interface {
	pulumi.Input

	ToProtectionRuleMapOutput() ProtectionRuleMapOutput
	ToProtectionRuleMapOutputWithContext(context.Context) ProtectionRuleMapOutput
}

type ProtectionRuleMap map[string]ProtectionRuleInput

func (ProtectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectionRule)(nil)).Elem()
}

func (i ProtectionRuleMap) ToProtectionRuleMapOutput() ProtectionRuleMapOutput {
	return i.ToProtectionRuleMapOutputWithContext(context.Background())
}

func (i ProtectionRuleMap) ToProtectionRuleMapOutputWithContext(ctx context.Context) ProtectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleMapOutput)
}

type ProtectionRuleOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRule)(nil)).Elem()
}

func (o ProtectionRuleOutput) ToProtectionRuleOutput() ProtectionRuleOutput {
	return o
}

func (o ProtectionRuleOutput) ToProtectionRuleOutputWithContext(ctx context.Context) ProtectionRuleOutput {
	return o
}

func (o ProtectionRuleOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// This encodes the datapipes between various availability zones and\nthe backup policy of the pipes.
// * `availability_zone_connectivity_list.destination_availability_zone_index` - (Optional/Computed) Index of the availability zone.
// * `availability_zone_connectivity_list.source_availability_zone_index` - (Optional/Computed) Index of the availability zone.
// * `availability_zone_connectivity_list.snapshot_schedule_list` - (Optional/Computed) Snapshot schedules for the pair of the availability zones.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.recovery_point_objective_secs` - (Required) "A recovery point objective (RPO) is the maximum acceptable amount of data loss.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.num_snapshots` - (Optional/Computed) Number of snapshots need to be retained.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_multiple` - (Optional/Computed) Multiplier to 'snapshot_interval_type'.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.local_snapshot_retention_policy.0.rollup_retention_policy_snapshot_interval_type` - (Optional/Computed)
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.auto_suspend_timeout_secs` - (Optional/Computed) Auto suspend timeout in case of connection failure between the sites.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.snapshot_type` - (Optional/Computed) Crash consistent or Application Consistent snapshot.
// * `availability_zone_connectivity_list.snapshot_schedule_list.#.remote_snapshot_retention_policy` - (Optional/Computed) This describes the snapshot retention policy for this availability zone.
func (o ProtectionRuleOutput) AvailabilityZoneConnectivityLists() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
		return v.AvailabilityZoneConnectivityLists
	}).(ProtectionRuleAvailabilityZoneConnectivityListArrayOutput)
}

func (o ProtectionRuleOutput) Categories() ProtectionRuleCategoryArrayOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleCategoryArrayOutput { return v.Categories }).(ProtectionRuleCategoryArrayOutput)
}

// * `category_filter.0.type` - (Optional/Computed) The type of the filter being used.
// * `category_filter.0.kind_list` - (Optional/Computed) List of kinds associated with this filter.
// * `category_filter.0.params` - (Optional/Computed) A list of category key and list of values.
func (o ProtectionRuleOutput) CategoryFilter() ProtectionRuleCategoryFilterOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleCategoryFilterOutput { return v.CategoryFilter }).(ProtectionRuleCategoryFilterOutput)
}

// A description for protection rule.
func (o ProtectionRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o ProtectionRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name for the protection rule.
func (o ProtectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.
// * `ordered_availability_zone_list.#.cluster_uuid` - (Optional/Computed) UUID of specific cluster to which we will be replicating.
// * `ordered_availability_zone_list.#.availability_zone_url` - (Optional/Computed) The FQDN or IP address of the availability zone.
func (o ProtectionRuleOutput) OrderedAvailabilityZoneLists() ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
		return v.OrderedAvailabilityZoneLists
	}).(ProtectionRuleOrderedAvailabilityZoneListArrayOutput)
}

func (o ProtectionRuleOutput) OwnerReference() ProtectionRuleOwnerReferenceOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleOwnerReferenceOutput { return v.OwnerReference }).(ProtectionRuleOwnerReferenceOutput)
}

func (o ProtectionRuleOutput) ProjectReference() ProtectionRuleProjectReferenceOutput {
	return o.ApplyT(func(v *ProtectionRule) ProtectionRuleProjectReferenceOutput { return v.ProjectReference }).(ProtectionRuleProjectReferenceOutput)
}

func (o ProtectionRuleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

func (o ProtectionRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectionRule) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type ProtectionRuleArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectionRule)(nil)).Elem()
}

func (o ProtectionRuleArrayOutput) ToProtectionRuleArrayOutput() ProtectionRuleArrayOutput {
	return o
}

func (o ProtectionRuleArrayOutput) ToProtectionRuleArrayOutputWithContext(ctx context.Context) ProtectionRuleArrayOutput {
	return o
}

func (o ProtectionRuleArrayOutput) Index(i pulumi.IntInput) ProtectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProtectionRule {
		return vs[0].([]*ProtectionRule)[vs[1].(int)]
	}).(ProtectionRuleOutput)
}

type ProtectionRuleMapOutput struct{ *pulumi.OutputState }

func (ProtectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectionRule)(nil)).Elem()
}

func (o ProtectionRuleMapOutput) ToProtectionRuleMapOutput() ProtectionRuleMapOutput {
	return o
}

func (o ProtectionRuleMapOutput) ToProtectionRuleMapOutputWithContext(ctx context.Context) ProtectionRuleMapOutput {
	return o
}

func (o ProtectionRuleMapOutput) MapIndex(k pulumi.StringInput) ProtectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProtectionRule {
		return vs[0].(map[string]*ProtectionRule)[vs[1].(string)]
	}).(ProtectionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleInput)(nil)).Elem(), &ProtectionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleArrayInput)(nil)).Elem(), ProtectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleMapInput)(nil)).Elem(), ProtectionRuleMap{})
	pulumi.RegisterOutputType(ProtectionRuleOutput{})
	pulumi.RegisterOutputType(ProtectionRuleArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleMapOutput{})
}
