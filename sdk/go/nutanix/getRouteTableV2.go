// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix datasource Get the route table for the specified extId.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetRouteTableV2(ctx, &nutanix.GetRouteTableV2Args{
//				ExtId: "ad7692ff-50f8-4a47-b3c9-fd5a3462d455",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRouteTableV2(ctx *pulumi.Context, args *GetRouteTableV2Args, opts ...pulumi.InvokeOption) (*GetRouteTableV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteTableV2Result
	err := ctx.Invoke("nutanix:index/getRouteTableV2:getRouteTableV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTableV2.
type GetRouteTableV2Args struct {
	// Route UUID
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getRouteTableV2.
type GetRouteTableV2Result struct {
	// Route UUID
	ExtId string `pulumi:"extId"`
	// External routing domain associated with this route table.
	ExternalRoutingDomainReference string `pulumi:"externalRoutingDomainReference"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetRouteTableV2Link `pulumi:"links"`
	// Metadata associated with this resource.
	Metadatas []GetRouteTableV2Metadata `pulumi:"metadatas"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId string `pulumi:"tenantId"`
	// VPC reference.
	VpcReference string `pulumi:"vpcReference"`
}

func GetRouteTableV2Output(ctx *pulumi.Context, args GetRouteTableV2OutputArgs, opts ...pulumi.InvokeOption) GetRouteTableV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRouteTableV2ResultOutput, error) {
			args := v.(GetRouteTableV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getRouteTableV2:getRouteTableV2", args, GetRouteTableV2ResultOutput{}, options).(GetRouteTableV2ResultOutput), nil
		}).(GetRouteTableV2ResultOutput)
}

// A collection of arguments for invoking getRouteTableV2.
type GetRouteTableV2OutputArgs struct {
	// Route UUID
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (GetRouteTableV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableV2Args)(nil)).Elem()
}

// A collection of values returned by getRouteTableV2.
type GetRouteTableV2ResultOutput struct{ *pulumi.OutputState }

func (GetRouteTableV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableV2Result)(nil)).Elem()
}

func (o GetRouteTableV2ResultOutput) ToGetRouteTableV2ResultOutput() GetRouteTableV2ResultOutput {
	return o
}

func (o GetRouteTableV2ResultOutput) ToGetRouteTableV2ResultOutputWithContext(ctx context.Context) GetRouteTableV2ResultOutput {
	return o
}

// Route UUID
func (o GetRouteTableV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// External routing domain associated with this route table.
func (o GetRouteTableV2ResultOutput) ExternalRoutingDomainReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) string { return v.ExternalRoutingDomainReference }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRouteTableV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o GetRouteTableV2ResultOutput) Links() GetRouteTableV2LinkArrayOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) []GetRouteTableV2Link { return v.Links }).(GetRouteTableV2LinkArrayOutput)
}

// Metadata associated with this resource.
func (o GetRouteTableV2ResultOutput) Metadatas() GetRouteTableV2MetadataArrayOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) []GetRouteTableV2Metadata { return v.Metadatas }).(GetRouteTableV2MetadataArrayOutput)
}

// A globally unique identifier that represents the tenant that owns this entity
func (o GetRouteTableV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

// VPC reference.
func (o GetRouteTableV2ResultOutput) VpcReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableV2Result) string { return v.VpcReference }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteTableV2ResultOutput{})
}
