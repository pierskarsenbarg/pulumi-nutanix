// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix resource to List Routes request.
func LookupRoutesV2(ctx *pulumi.Context, args *LookupRoutesV2Args, opts ...pulumi.InvokeOption) (*LookupRoutesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoutesV2Result
	err := ctx.Invoke("nutanix:index/getRoutesV2:getRoutesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutesV2.
type LookupRoutesV2Args struct {
	// A URL query parameter that allows clients to filter a collection of resources.
	// - The filter can be applied to the following fields:
	Filter *string `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit *int `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
	// - The orderby can be applied to the following fields:
	// - `isActive`
	OrderBy *string `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page *int `pulumi:"page"`
	// Route table UUID
	RouteTableExtId string `pulumi:"routeTableExtId"`
}

// A collection of values returned by getRoutesV2.
type LookupRoutesV2Result struct {
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id              string             `pulumi:"id"`
	Limit           *int               `pulumi:"limit"`
	OrderBy         *string            `pulumi:"orderBy"`
	Page            *int               `pulumi:"page"`
	RouteTableExtId string             `pulumi:"routeTableExtId"`
	Routes          []GetRoutesV2Route `pulumi:"routes"`
}

func LookupRoutesV2Output(ctx *pulumi.Context, args LookupRoutesV2OutputArgs, opts ...pulumi.InvokeOption) LookupRoutesV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoutesV2ResultOutput, error) {
			args := v.(LookupRoutesV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getRoutesV2:getRoutesV2", args, LookupRoutesV2ResultOutput{}, options).(LookupRoutesV2ResultOutput), nil
		}).(LookupRoutesV2ResultOutput)
}

// A collection of arguments for invoking getRoutesV2.
type LookupRoutesV2OutputArgs struct {
	// A URL query parameter that allows clients to filter a collection of resources.
	// - The filter can be applied to the following fields:
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
	// - The orderby can be applied to the following fields:
	// - `isActive`
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// Route table UUID
	RouteTableExtId pulumi.StringInput `pulumi:"routeTableExtId"`
}

func (LookupRoutesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutesV2Args)(nil)).Elem()
}

// A collection of values returned by getRoutesV2.
type LookupRoutesV2ResultOutput struct{ *pulumi.OutputState }

func (LookupRoutesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutesV2Result)(nil)).Elem()
}

func (o LookupRoutesV2ResultOutput) ToLookupRoutesV2ResultOutput() LookupRoutesV2ResultOutput {
	return o
}

func (o LookupRoutesV2ResultOutput) ToLookupRoutesV2ResultOutputWithContext(ctx context.Context) LookupRoutesV2ResultOutput {
	return o
}

func (o LookupRoutesV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRoutesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRoutesV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o LookupRoutesV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o LookupRoutesV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o LookupRoutesV2ResultOutput) RouteTableExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) string { return v.RouteTableExtId }).(pulumi.StringOutput)
}

func (o LookupRoutesV2ResultOutput) Routes() GetRoutesV2RouteArrayOutput {
	return o.ApplyT(func(v LookupRoutesV2Result) []GetRoutesV2Route { return v.Routes }).(GetRoutesV2RouteArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoutesV2ResultOutput{})
}
