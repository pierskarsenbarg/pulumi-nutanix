// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This operation Revert VM identified by {extId}. This does an in-place VM restore from a specified VM Recovery Point.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// revert Vm
//			_, err := nutanix.NewVmRevertV2(ctx, "example", &nutanix.VmRevertV2Args{
//				ExtId:                pulumi.String("8a938cc5-282b-48c4-81be-de22de145d07"),
//				VmRecoveryPointExtId: pulumi.String("c2c249b0-98a0-43fa-9ff6-dcde578d3936"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VmRevertV2 struct {
	pulumi.CustomResourceState

	// -(Required) The globally unique identifier of a VM. It should be of type UUID.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// - The status of the Revert operation.
	Status pulumi.StringOutput `pulumi:"status"`
	// -(Required) The external identifier of the VM Recovery Point.
	VmRecoveryPointExtId pulumi.StringOutput `pulumi:"vmRecoveryPointExtId"`
}

// NewVmRevertV2 registers a new resource with the given unique name, arguments, and options.
func NewVmRevertV2(ctx *pulumi.Context,
	name string, args *VmRevertV2Args, opts ...pulumi.ResourceOption) (*VmRevertV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtId == nil {
		return nil, errors.New("invalid value for required argument 'ExtId'")
	}
	if args.VmRecoveryPointExtId == nil {
		return nil, errors.New("invalid value for required argument 'VmRecoveryPointExtId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VmRevertV2
	err := ctx.RegisterResource("nutanix:index/vmRevertV2:VmRevertV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmRevertV2 gets an existing VmRevertV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmRevertV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmRevertV2State, opts ...pulumi.ResourceOption) (*VmRevertV2, error) {
	var resource VmRevertV2
	err := ctx.ReadResource("nutanix:index/vmRevertV2:VmRevertV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmRevertV2 resources.
type vmRevertV2State struct {
	// -(Required) The globally unique identifier of a VM. It should be of type UUID.
	ExtId *string `pulumi:"extId"`
	// - The status of the Revert operation.
	Status *string `pulumi:"status"`
	// -(Required) The external identifier of the VM Recovery Point.
	VmRecoveryPointExtId *string `pulumi:"vmRecoveryPointExtId"`
}

type VmRevertV2State struct {
	// -(Required) The globally unique identifier of a VM. It should be of type UUID.
	ExtId pulumi.StringPtrInput
	// - The status of the Revert operation.
	Status pulumi.StringPtrInput
	// -(Required) The external identifier of the VM Recovery Point.
	VmRecoveryPointExtId pulumi.StringPtrInput
}

func (VmRevertV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*vmRevertV2State)(nil)).Elem()
}

type vmRevertV2Args struct {
	// -(Required) The globally unique identifier of a VM. It should be of type UUID.
	ExtId string `pulumi:"extId"`
	// -(Required) The external identifier of the VM Recovery Point.
	VmRecoveryPointExtId string `pulumi:"vmRecoveryPointExtId"`
}

// The set of arguments for constructing a VmRevertV2 resource.
type VmRevertV2Args struct {
	// -(Required) The globally unique identifier of a VM. It should be of type UUID.
	ExtId pulumi.StringInput
	// -(Required) The external identifier of the VM Recovery Point.
	VmRecoveryPointExtId pulumi.StringInput
}

func (VmRevertV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*vmRevertV2Args)(nil)).Elem()
}

type VmRevertV2Input interface {
	pulumi.Input

	ToVmRevertV2Output() VmRevertV2Output
	ToVmRevertV2OutputWithContext(ctx context.Context) VmRevertV2Output
}

func (*VmRevertV2) ElementType() reflect.Type {
	return reflect.TypeOf((**VmRevertV2)(nil)).Elem()
}

func (i *VmRevertV2) ToVmRevertV2Output() VmRevertV2Output {
	return i.ToVmRevertV2OutputWithContext(context.Background())
}

func (i *VmRevertV2) ToVmRevertV2OutputWithContext(ctx context.Context) VmRevertV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VmRevertV2Output)
}

// VmRevertV2ArrayInput is an input type that accepts VmRevertV2Array and VmRevertV2ArrayOutput values.
// You can construct a concrete instance of `VmRevertV2ArrayInput` via:
//
//	VmRevertV2Array{ VmRevertV2Args{...} }
type VmRevertV2ArrayInput interface {
	pulumi.Input

	ToVmRevertV2ArrayOutput() VmRevertV2ArrayOutput
	ToVmRevertV2ArrayOutputWithContext(context.Context) VmRevertV2ArrayOutput
}

type VmRevertV2Array []VmRevertV2Input

func (VmRevertV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmRevertV2)(nil)).Elem()
}

func (i VmRevertV2Array) ToVmRevertV2ArrayOutput() VmRevertV2ArrayOutput {
	return i.ToVmRevertV2ArrayOutputWithContext(context.Background())
}

func (i VmRevertV2Array) ToVmRevertV2ArrayOutputWithContext(ctx context.Context) VmRevertV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmRevertV2ArrayOutput)
}

// VmRevertV2MapInput is an input type that accepts VmRevertV2Map and VmRevertV2MapOutput values.
// You can construct a concrete instance of `VmRevertV2MapInput` via:
//
//	VmRevertV2Map{ "key": VmRevertV2Args{...} }
type VmRevertV2MapInput interface {
	pulumi.Input

	ToVmRevertV2MapOutput() VmRevertV2MapOutput
	ToVmRevertV2MapOutputWithContext(context.Context) VmRevertV2MapOutput
}

type VmRevertV2Map map[string]VmRevertV2Input

func (VmRevertV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmRevertV2)(nil)).Elem()
}

func (i VmRevertV2Map) ToVmRevertV2MapOutput() VmRevertV2MapOutput {
	return i.ToVmRevertV2MapOutputWithContext(context.Background())
}

func (i VmRevertV2Map) ToVmRevertV2MapOutputWithContext(ctx context.Context) VmRevertV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmRevertV2MapOutput)
}

type VmRevertV2Output struct{ *pulumi.OutputState }

func (VmRevertV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**VmRevertV2)(nil)).Elem()
}

func (o VmRevertV2Output) ToVmRevertV2Output() VmRevertV2Output {
	return o
}

func (o VmRevertV2Output) ToVmRevertV2OutputWithContext(ctx context.Context) VmRevertV2Output {
	return o
}

// -(Required) The globally unique identifier of a VM. It should be of type UUID.
func (o VmRevertV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmRevertV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - The status of the Revert operation.
func (o VmRevertV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VmRevertV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// -(Required) The external identifier of the VM Recovery Point.
func (o VmRevertV2Output) VmRecoveryPointExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmRevertV2) pulumi.StringOutput { return v.VmRecoveryPointExtId }).(pulumi.StringOutput)
}

type VmRevertV2ArrayOutput struct{ *pulumi.OutputState }

func (VmRevertV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmRevertV2)(nil)).Elem()
}

func (o VmRevertV2ArrayOutput) ToVmRevertV2ArrayOutput() VmRevertV2ArrayOutput {
	return o
}

func (o VmRevertV2ArrayOutput) ToVmRevertV2ArrayOutputWithContext(ctx context.Context) VmRevertV2ArrayOutput {
	return o
}

func (o VmRevertV2ArrayOutput) Index(i pulumi.IntInput) VmRevertV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VmRevertV2 {
		return vs[0].([]*VmRevertV2)[vs[1].(int)]
	}).(VmRevertV2Output)
}

type VmRevertV2MapOutput struct{ *pulumi.OutputState }

func (VmRevertV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmRevertV2)(nil)).Elem()
}

func (o VmRevertV2MapOutput) ToVmRevertV2MapOutput() VmRevertV2MapOutput {
	return o
}

func (o VmRevertV2MapOutput) ToVmRevertV2MapOutputWithContext(ctx context.Context) VmRevertV2MapOutput {
	return o
}

func (o VmRevertV2MapOutput) MapIndex(k pulumi.StringInput) VmRevertV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VmRevertV2 {
		return vs[0].(map[string]*VmRevertV2)[vs[1].(string)]
	}).(VmRevertV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmRevertV2Input)(nil)).Elem(), &VmRevertV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmRevertV2ArrayInput)(nil)).Elem(), VmRevertV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmRevertV2MapInput)(nil)).Elem(), VmRevertV2Map{})
	pulumi.RegisterOutputType(VmRevertV2Output{})
	pulumi.RegisterOutputType(VmRevertV2ArrayOutput{})
	pulumi.RegisterOutputType(VmRevertV2MapOutput{})
}
