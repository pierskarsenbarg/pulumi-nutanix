// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get details about all LCM entities.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetLcmEntityV2(ctx, &nutanix.GetLcmEntityV2Args{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.GetLcmEntitiesV2(ctx, &nutanix.GetLcmEntitiesV2Args{
//				Filter: pulumi.StringRef("entityModel eq 'Calm Policy Engine'"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.GetLcmEntitiesV2(ctx, &nutanix.GetLcmEntitiesV2Args{
//				Limit: pulumi.IntRef(5),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLcmEntitiesV2(ctx *pulumi.Context, args *GetLcmEntitiesV2Args, opts ...pulumi.InvokeOption) (*GetLcmEntitiesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLcmEntitiesV2Result
	err := ctx.Invoke("nutanix:index/getLcmEntitiesV2:getLcmEntitiesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLcmEntitiesV2.
type GetLcmEntitiesV2Args struct {
	// A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clientName, createdBy, extId, createdTime, displayName, extId, isSystemDefined, lastUpdatedTime.
	// * The filter can be applied to the following fields:
	// * `clusterExtId`
	// * `entityClass`
	// * `entityModel`
	// * `entityType`
	// * `entityVersion`
	// * `hardwareVendor`
	Filter *string `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	// - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page *int `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields: accessibleClients, accessibleEntityTypes, assignedUserGroupsCount, assignedUsersCount, clientName, createdBy, createdTime, description, displayName, extId, isSystemDefined, lastUpdatedTime, links, operations, tenantId.
	// * The select can be applied to the following fields:
	// * `entityClass`
	// * `entityModel`
	// * `entityType`
	// * `entityVersion`
	// * `hardwareVendor`
	Select *string `pulumi:"select"`
}

// A collection of values returned by getLcmEntitiesV2.
type GetLcmEntitiesV2Result struct {
	// List of LCM entities.
	Entities []GetLcmEntitiesV2Entity `pulumi:"entities"`
	Filter   *string                  `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	Page    *int    `pulumi:"page"`
	Select  *string `pulumi:"select"`
}

func GetLcmEntitiesV2Output(ctx *pulumi.Context, args GetLcmEntitiesV2OutputArgs, opts ...pulumi.InvokeOption) GetLcmEntitiesV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLcmEntitiesV2ResultOutput, error) {
			args := v.(GetLcmEntitiesV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getLcmEntitiesV2:getLcmEntitiesV2", args, GetLcmEntitiesV2ResultOutput{}, options).(GetLcmEntitiesV2ResultOutput), nil
		}).(GetLcmEntitiesV2ResultOutput)
}

// A collection of arguments for invoking getLcmEntitiesV2.
type GetLcmEntitiesV2OutputArgs struct {
	// A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clientName, createdBy, extId, createdTime, displayName, extId, isSystemDefined, lastUpdatedTime.
	// * The filter can be applied to the following fields:
	// * `clusterExtId`
	// * `entityClass`
	// * `entityModel`
	// * `entityType`
	// * `entityVersion`
	// * `hardwareVendor`
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit   pulumi.IntPtrInput    `pulumi:"limit"`
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// - A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. following fields: accessibleClients, accessibleEntityTypes, assignedUserGroupsCount, assignedUsersCount, clientName, createdBy, createdTime, description, displayName, extId, isSystemDefined, lastUpdatedTime, links, operations, tenantId.
	// * The select can be applied to the following fields:
	// * `entityClass`
	// * `entityModel`
	// * `entityType`
	// * `entityVersion`
	// * `hardwareVendor`
	Select pulumi.StringPtrInput `pulumi:"select"`
}

func (GetLcmEntitiesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmEntitiesV2Args)(nil)).Elem()
}

// A collection of values returned by getLcmEntitiesV2.
type GetLcmEntitiesV2ResultOutput struct{ *pulumi.OutputState }

func (GetLcmEntitiesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmEntitiesV2Result)(nil)).Elem()
}

func (o GetLcmEntitiesV2ResultOutput) ToGetLcmEntitiesV2ResultOutput() GetLcmEntitiesV2ResultOutput {
	return o
}

func (o GetLcmEntitiesV2ResultOutput) ToGetLcmEntitiesV2ResultOutputWithContext(ctx context.Context) GetLcmEntitiesV2ResultOutput {
	return o
}

// List of LCM entities.
func (o GetLcmEntitiesV2ResultOutput) Entities() GetLcmEntitiesV2EntityArrayOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) []GetLcmEntitiesV2Entity { return v.Entities }).(GetLcmEntitiesV2EntityArrayOutput)
}

func (o GetLcmEntitiesV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLcmEntitiesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLcmEntitiesV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetLcmEntitiesV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetLcmEntitiesV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetLcmEntitiesV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLcmEntitiesV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLcmEntitiesV2ResultOutput{})
}
