// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves the backup targets (cluster or object store) from a domain manager and returns the backup configuration and lastSyncTimestamp parameter to the user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupPcBackupTargetV2(ctx, &nutanix.LookupPcBackupTargetV2Args{
//				DomainManagerExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
//				ExtId:              "00062d3d-5d07-0da6-0000-000000028f57",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPcBackupTargetV2(ctx *pulumi.Context, args *LookupPcBackupTargetV2Args, opts ...pulumi.InvokeOption) (*LookupPcBackupTargetV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPcBackupTargetV2Result
	err := ctx.Invoke("nutanix:index/getPcBackupTargetV2:getPcBackupTargetV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPcBackupTargetV2.
type LookupPcBackupTargetV2Args struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId string `pulumi:"domainManagerExtId"`
	// -(Required) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getPcBackupTargetV2.
type LookupPcBackupTargetV2Result struct {
	// - Specifies a reason why the backup might have paused. This will be empty if the isBackupPaused field is false.
	BackupPauseReason  string `pulumi:"backupPauseReason"`
	DomainManagerExtId string `pulumi:"domainManagerExtId"`
	// - Cluster UUID of a remote cluster.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Whether the backup is paused on the given cluster or not.
	IsBackupPaused bool `pulumi:"isBackupPaused"`
	// - Represents the time when the domain manager was last synchronized or copied its configuration data to the backup target. This field is updated every 30 minutes.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetPcBackupTargetV2Link `pulumi:"links"`
	// - Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Locations []GetPcBackupTargetV2Location `pulumi:"locations"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
}

func LookupPcBackupTargetV2Output(ctx *pulumi.Context, args LookupPcBackupTargetV2OutputArgs, opts ...pulumi.InvokeOption) LookupPcBackupTargetV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPcBackupTargetV2ResultOutput, error) {
			args := v.(LookupPcBackupTargetV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getPcBackupTargetV2:getPcBackupTargetV2", args, LookupPcBackupTargetV2ResultOutput{}, options).(LookupPcBackupTargetV2ResultOutput), nil
		}).(LookupPcBackupTargetV2ResultOutput)
}

// A collection of arguments for invoking getPcBackupTargetV2.
type LookupPcBackupTargetV2OutputArgs struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId pulumi.StringInput `pulumi:"domainManagerExtId"`
	// -(Required) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (LookupPcBackupTargetV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPcBackupTargetV2Args)(nil)).Elem()
}

// A collection of values returned by getPcBackupTargetV2.
type LookupPcBackupTargetV2ResultOutput struct{ *pulumi.OutputState }

func (LookupPcBackupTargetV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPcBackupTargetV2Result)(nil)).Elem()
}

func (o LookupPcBackupTargetV2ResultOutput) ToLookupPcBackupTargetV2ResultOutput() LookupPcBackupTargetV2ResultOutput {
	return o
}

func (o LookupPcBackupTargetV2ResultOutput) ToLookupPcBackupTargetV2ResultOutputWithContext(ctx context.Context) LookupPcBackupTargetV2ResultOutput {
	return o
}

// - Specifies a reason why the backup might have paused. This will be empty if the isBackupPaused field is false.
func (o LookupPcBackupTargetV2ResultOutput) BackupPauseReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.BackupPauseReason }).(pulumi.StringOutput)
}

func (o LookupPcBackupTargetV2ResultOutput) DomainManagerExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.DomainManagerExtId }).(pulumi.StringOutput)
}

// - Cluster UUID of a remote cluster.
func (o LookupPcBackupTargetV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPcBackupTargetV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Whether the backup is paused on the given cluster or not.
func (o LookupPcBackupTargetV2ResultOutput) IsBackupPaused() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) bool { return v.IsBackupPaused }).(pulumi.BoolOutput)
}

// - Represents the time when the domain manager was last synchronized or copied its configuration data to the backup target. This field is updated every 30 minutes.
func (o LookupPcBackupTargetV2ResultOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupPcBackupTargetV2ResultOutput) Links() GetPcBackupTargetV2LinkArrayOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) []GetPcBackupTargetV2Link { return v.Links }).(GetPcBackupTargetV2LinkArrayOutput)
}

// - Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
func (o LookupPcBackupTargetV2ResultOutput) Locations() GetPcBackupTargetV2LocationArrayOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) []GetPcBackupTargetV2Location { return v.Locations }).(GetPcBackupTargetV2LocationArrayOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o LookupPcBackupTargetV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPcBackupTargetV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPcBackupTargetV2ResultOutput{})
}
