// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a network in Nutanix Database Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupNdbNetwork(ctx, &nutanix.LookupNdbNetworkArgs{
//				Id: pulumi.StringRef("{{ id of network }}"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNdbNetwork(ctx *pulumi.Context, args *LookupNdbNetworkArgs, opts ...pulumi.InvokeOption) (*LookupNdbNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNdbNetworkResult
	err := ctx.Invoke("nutanix:index/getNdbNetwork:getNdbNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbNetwork.
type LookupNdbNetworkArgs struct {
	// id of network
	Id *string `pulumi:"id"`
	// name of network
	Name *string `pulumi:"name"`
}

// A collection of values returned by getNdbNetwork.
type LookupNdbNetworkResult struct {
	// cluster id where network is present
	ClusterId string `pulumi:"clusterId"`
	// network id
	Id string `pulumi:"id"`
	// IP addresses of network
	IpAddresses []GetNdbNetworkIpAddress `pulumi:"ipAddresses"`
	// IP Pools of network
	IpPools []GetNdbNetworkIpPool `pulumi:"ipPools"`
	// network managed by NDB or not
	Managed bool `pulumi:"managed"`
	// network name
	Name string `pulumi:"name"`
	// properties of network
	Properties []GetNdbNetworkProperty `pulumi:"properties"`
	// properties map of network
	PropertiesMaps []GetNdbNetworkPropertiesMap `pulumi:"propertiesMaps"`
	// stretched vlan id
	StretchedVlanId string `pulumi:"stretchedVlanId"`
	// type of network
	Type string `pulumi:"type"`
}

func LookupNdbNetworkOutput(ctx *pulumi.Context, args LookupNdbNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupNdbNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNdbNetworkResult, error) {
			args := v.(LookupNdbNetworkArgs)
			r, err := LookupNdbNetwork(ctx, &args, opts...)
			var s LookupNdbNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNdbNetworkResultOutput)
}

// A collection of arguments for invoking getNdbNetwork.
type LookupNdbNetworkOutputArgs struct {
	// id of network
	Id pulumi.StringPtrInput `pulumi:"id"`
	// name of network
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupNdbNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNdbNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getNdbNetwork.
type LookupNdbNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupNdbNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNdbNetworkResult)(nil)).Elem()
}

func (o LookupNdbNetworkResultOutput) ToLookupNdbNetworkResultOutput() LookupNdbNetworkResultOutput {
	return o
}

func (o LookupNdbNetworkResultOutput) ToLookupNdbNetworkResultOutputWithContext(ctx context.Context) LookupNdbNetworkResultOutput {
	return o
}

// cluster id where network is present
func (o LookupNdbNetworkResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// network id
func (o LookupNdbNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP addresses of network
func (o LookupNdbNetworkResultOutput) IpAddresses() GetNdbNetworkIpAddressArrayOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) []GetNdbNetworkIpAddress { return v.IpAddresses }).(GetNdbNetworkIpAddressArrayOutput)
}

// IP Pools of network
func (o LookupNdbNetworkResultOutput) IpPools() GetNdbNetworkIpPoolArrayOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) []GetNdbNetworkIpPool { return v.IpPools }).(GetNdbNetworkIpPoolArrayOutput)
}

// network managed by NDB or not
func (o LookupNdbNetworkResultOutput) Managed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) bool { return v.Managed }).(pulumi.BoolOutput)
}

// network name
func (o LookupNdbNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// properties of network
func (o LookupNdbNetworkResultOutput) Properties() GetNdbNetworkPropertyArrayOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) []GetNdbNetworkProperty { return v.Properties }).(GetNdbNetworkPropertyArrayOutput)
}

// properties map of network
func (o LookupNdbNetworkResultOutput) PropertiesMaps() GetNdbNetworkPropertiesMapArrayOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) []GetNdbNetworkPropertiesMap { return v.PropertiesMaps }).(GetNdbNetworkPropertiesMapArrayOutput)
}

// stretched vlan id
func (o LookupNdbNetworkResultOutput) StretchedVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) string { return v.StretchedVlanId }).(pulumi.StringOutput)
}

// type of network
func (o LookupNdbNetworkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbNetworkResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNdbNetworkResultOutput{})
}
