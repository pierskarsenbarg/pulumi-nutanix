// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get details about an LCM entity.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetLcmEntityV2(ctx, &nutanix.GetLcmEntityV2Args{
//				ExtId: "613no9d0-7caf-49y7-k582-1db5a5df580c",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLcmEntityV2(ctx *pulumi.Context, args *GetLcmEntityV2Args, opts ...pulumi.InvokeOption) (*GetLcmEntityV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLcmEntityV2Result
	err := ctx.Invoke("nutanix:index/getLcmEntityV2:getLcmEntityV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLcmEntityV2.
type GetLcmEntityV2Args struct {
	// ExtId of the LCM entity.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getLcmEntityV2.
type GetLcmEntityV2Result struct {
	// List of available versions for an LCM entity to update.
	AvailableVersions []GetLcmEntityV2AvailableVersion `pulumi:"availableVersions"`
	// Component information for the payload based entity.
	ChildEntities []string `pulumi:"childEntities"`
	// Cluster uuid on which the resource is present or operation is being performed.
	ClusterExtId string `pulumi:"clusterExtId"`
	// Unique identifier of an LCM entity e.g. "HDD serial number".
	DeviceId string `pulumi:"deviceId"`
	// LCM entity class.
	EntityClass string `pulumi:"entityClass"`
	// Description of an LCM entity.
	EntityDescription string `pulumi:"entityDescription"`
	// Detailed information for the LCM entity. For example, firmware entities contain additional information about NIC and so on.
	EntityDetails []GetLcmEntityV2EntityDetail `pulumi:"entityDetails"`
	// LCM entity model.
	EntityModel string `pulumi:"entityModel"`
	// Type of an LCM entity.  Enum Values:
	// * `FIRMWARE`: LCM entity type firmware.
	// * `SOFTWARE`: LCM entity type software.
	EntityType string `pulumi:"entityType"`
	// Current version of an LCM entity.
	EntityVersion string `pulumi:"entityVersion"`
	// A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// UUID of the group that this LCM entity is part of.
	GroupUuid string `pulumi:"groupUuid"`
	// A hardware family for a LCM entity.
	HardwareFamily string `pulumi:"hardwareFamily"`
	// Hardware vendor information.
	HardwareVendor string `pulumi:"hardwareVendor"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// UTC date and time in RFC-3339 format when the task was last updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetLcmEntityV2Link `pulumi:"links"`
	// Location info corresponds to a tuple of location type (either node/cluster) and ExtID
	LocationInfos []GetLcmEntityV2LocationInfo `pulumi:"locationInfos"`
	// A list of sub-entities applicable to the entity.
	SubEntities []GetLcmEntityV2SubEntity `pulumi:"subEntities"`
	// The requested update version of an LCM entity.
	TargetVersion string `pulumi:"targetVersion"`
	// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
}

func GetLcmEntityV2Output(ctx *pulumi.Context, args GetLcmEntityV2OutputArgs, opts ...pulumi.InvokeOption) GetLcmEntityV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLcmEntityV2ResultOutput, error) {
			args := v.(GetLcmEntityV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getLcmEntityV2:getLcmEntityV2", args, GetLcmEntityV2ResultOutput{}, options).(GetLcmEntityV2ResultOutput), nil
		}).(GetLcmEntityV2ResultOutput)
}

// A collection of arguments for invoking getLcmEntityV2.
type GetLcmEntityV2OutputArgs struct {
	// ExtId of the LCM entity.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (GetLcmEntityV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmEntityV2Args)(nil)).Elem()
}

// A collection of values returned by getLcmEntityV2.
type GetLcmEntityV2ResultOutput struct{ *pulumi.OutputState }

func (GetLcmEntityV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLcmEntityV2Result)(nil)).Elem()
}

func (o GetLcmEntityV2ResultOutput) ToGetLcmEntityV2ResultOutput() GetLcmEntityV2ResultOutput {
	return o
}

func (o GetLcmEntityV2ResultOutput) ToGetLcmEntityV2ResultOutputWithContext(ctx context.Context) GetLcmEntityV2ResultOutput {
	return o
}

// List of available versions for an LCM entity to update.
func (o GetLcmEntityV2ResultOutput) AvailableVersions() GetLcmEntityV2AvailableVersionArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []GetLcmEntityV2AvailableVersion { return v.AvailableVersions }).(GetLcmEntityV2AvailableVersionArrayOutput)
}

// Component information for the payload based entity.
func (o GetLcmEntityV2ResultOutput) ChildEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []string { return v.ChildEntities }).(pulumi.StringArrayOutput)
}

// Cluster uuid on which the resource is present or operation is being performed.
func (o GetLcmEntityV2ResultOutput) ClusterExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.ClusterExtId }).(pulumi.StringOutput)
}

// Unique identifier of an LCM entity e.g. "HDD serial number".
func (o GetLcmEntityV2ResultOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.DeviceId }).(pulumi.StringOutput)
}

// LCM entity class.
func (o GetLcmEntityV2ResultOutput) EntityClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.EntityClass }).(pulumi.StringOutput)
}

// Description of an LCM entity.
func (o GetLcmEntityV2ResultOutput) EntityDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.EntityDescription }).(pulumi.StringOutput)
}

// Detailed information for the LCM entity. For example, firmware entities contain additional information about NIC and so on.
func (o GetLcmEntityV2ResultOutput) EntityDetails() GetLcmEntityV2EntityDetailArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []GetLcmEntityV2EntityDetail { return v.EntityDetails }).(GetLcmEntityV2EntityDetailArrayOutput)
}

// LCM entity model.
func (o GetLcmEntityV2ResultOutput) EntityModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.EntityModel }).(pulumi.StringOutput)
}

// Type of an LCM entity.  Enum Values:
// * `FIRMWARE`: LCM entity type firmware.
// * `SOFTWARE`: LCM entity type software.
func (o GetLcmEntityV2ResultOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.EntityType }).(pulumi.StringOutput)
}

// Current version of an LCM entity.
func (o GetLcmEntityV2ResultOutput) EntityVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.EntityVersion }).(pulumi.StringOutput)
}

// A globally unique identifier of an instance that is suitable for external consumption.
func (o GetLcmEntityV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// UUID of the group that this LCM entity is part of.
func (o GetLcmEntityV2ResultOutput) GroupUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.GroupUuid }).(pulumi.StringOutput)
}

// A hardware family for a LCM entity.
func (o GetLcmEntityV2ResultOutput) HardwareFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.HardwareFamily }).(pulumi.StringOutput)
}

// Hardware vendor information.
func (o GetLcmEntityV2ResultOutput) HardwareVendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.HardwareVendor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLcmEntityV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// UTC date and time in RFC-3339 format when the task was last updated.
func (o GetLcmEntityV2ResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o GetLcmEntityV2ResultOutput) Links() GetLcmEntityV2LinkArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []GetLcmEntityV2Link { return v.Links }).(GetLcmEntityV2LinkArrayOutput)
}

// Location info corresponds to a tuple of location type (either node/cluster) and ExtID
func (o GetLcmEntityV2ResultOutput) LocationInfos() GetLcmEntityV2LocationInfoArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []GetLcmEntityV2LocationInfo { return v.LocationInfos }).(GetLcmEntityV2LocationInfoArrayOutput)
}

// A list of sub-entities applicable to the entity.
func (o GetLcmEntityV2ResultOutput) SubEntities() GetLcmEntityV2SubEntityArrayOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) []GetLcmEntityV2SubEntity { return v.SubEntities }).(GetLcmEntityV2SubEntityArrayOutput)
}

// The requested update version of an LCM entity.
func (o GetLcmEntityV2ResultOutput) TargetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.TargetVersion }).(pulumi.StringOutput)
}

// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o GetLcmEntityV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLcmEntityV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLcmEntityV2ResultOutput{})
}
