// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the attributes associated with the domain manager (Prism Central) resource based on the provided external identifier. It includes attributes like config, network, node and other information such as size, environment and resource specifications.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetPcV2(ctx, &nutanix.GetPcV2Args{
//				ExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPcV2(ctx *pulumi.Context, args *GetPcV2Args, opts ...pulumi.InvokeOption) (*GetPcV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPcV2Result
	err := ctx.Invoke("nutanix:index/getPcV2:getPcV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPcV2.
type GetPcV2Args struct {
	// -(Required) The external identifier of the domain manager (Prism Central) entity.
	ExtId string `pulumi:"extId"`
	// - This configuration enables Prism Central to be deployed in scale-out mode.
	ShouldEnableHighAvailability *bool `pulumi:"shouldEnableHighAvailability"`
}

// A collection of values returned by getPcV2.
type GetPcV2Result struct {
	// - Domain manager (Prism Central) cluster configuration details.
	Configs []GetPcV2Config `pulumi:"configs"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// - The external identifier of the cluster hosting the domain manager (Prism Central) instance.
	HostingClusterExtId string `pulumi:"hostingClusterExtId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Boolean value indicating if the domain manager (Prism Central) is registered with the hosting cluster, that is, Prism Element.
	IsRegisteredWithHostingCluster bool `pulumi:"isRegisteredWithHostingCluster"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetPcV2Link `pulumi:"links"`
	// - Domain manager (Prism Central) network configuration details.
	Networks []GetPcV2Network `pulumi:"networks"`
	// - Domain manager (Prism Central) nodes external identifier.
	NodeExtIds []string `pulumi:"nodeExtIds"`
	// - This configuration enables Prism Central to be deployed in scale-out mode.
	ShouldEnableHighAvailability *bool `pulumi:"shouldEnableHighAvailability"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
}

func GetPcV2Output(ctx *pulumi.Context, args GetPcV2OutputArgs, opts ...pulumi.InvokeOption) GetPcV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPcV2ResultOutput, error) {
			args := v.(GetPcV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getPcV2:getPcV2", args, GetPcV2ResultOutput{}, options).(GetPcV2ResultOutput), nil
		}).(GetPcV2ResultOutput)
}

// A collection of arguments for invoking getPcV2.
type GetPcV2OutputArgs struct {
	// -(Required) The external identifier of the domain manager (Prism Central) entity.
	ExtId pulumi.StringInput `pulumi:"extId"`
	// - This configuration enables Prism Central to be deployed in scale-out mode.
	ShouldEnableHighAvailability pulumi.BoolPtrInput `pulumi:"shouldEnableHighAvailability"`
}

func (GetPcV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPcV2Args)(nil)).Elem()
}

// A collection of values returned by getPcV2.
type GetPcV2ResultOutput struct{ *pulumi.OutputState }

func (GetPcV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPcV2Result)(nil)).Elem()
}

func (o GetPcV2ResultOutput) ToGetPcV2ResultOutput() GetPcV2ResultOutput {
	return o
}

func (o GetPcV2ResultOutput) ToGetPcV2ResultOutputWithContext(ctx context.Context) GetPcV2ResultOutput {
	return o
}

// - Domain manager (Prism Central) cluster configuration details.
func (o GetPcV2ResultOutput) Configs() GetPcV2ConfigArrayOutput {
	return o.ApplyT(func(v GetPcV2Result) []GetPcV2Config { return v.Configs }).(GetPcV2ConfigArrayOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o GetPcV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// - The external identifier of the cluster hosting the domain manager (Prism Central) instance.
func (o GetPcV2ResultOutput) HostingClusterExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcV2Result) string { return v.HostingClusterExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPcV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Boolean value indicating if the domain manager (Prism Central) is registered with the hosting cluster, that is, Prism Element.
func (o GetPcV2ResultOutput) IsRegisteredWithHostingCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPcV2Result) bool { return v.IsRegisteredWithHostingCluster }).(pulumi.BoolOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o GetPcV2ResultOutput) Links() GetPcV2LinkArrayOutput {
	return o.ApplyT(func(v GetPcV2Result) []GetPcV2Link { return v.Links }).(GetPcV2LinkArrayOutput)
}

// - Domain manager (Prism Central) network configuration details.
func (o GetPcV2ResultOutput) Networks() GetPcV2NetworkArrayOutput {
	return o.ApplyT(func(v GetPcV2Result) []GetPcV2Network { return v.Networks }).(GetPcV2NetworkArrayOutput)
}

// - Domain manager (Prism Central) nodes external identifier.
func (o GetPcV2ResultOutput) NodeExtIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPcV2Result) []string { return v.NodeExtIds }).(pulumi.StringArrayOutput)
}

// - This configuration enables Prism Central to be deployed in scale-out mode.
func (o GetPcV2ResultOutput) ShouldEnableHighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPcV2Result) *bool { return v.ShouldEnableHighAvailability }).(pulumi.BoolPtrOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o GetPcV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPcV2ResultOutput{})
}
