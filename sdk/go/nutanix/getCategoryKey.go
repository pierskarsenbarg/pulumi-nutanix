// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describe a Nutanix Category Key and its values (if it has them).
func LookupCategoryKey(ctx *pulumi.Context, args *LookupCategoryKeyArgs, opts ...pulumi.InvokeOption) (*LookupCategoryKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCategoryKeyResult
	err := ctx.Invoke("nutanix:index/getCategoryKey:getCategoryKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCategoryKey.
type LookupCategoryKeyArgs struct {
	// - (Required) The name for the category key.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCategoryKey.
type LookupCategoryKeyResult struct {
	// The version of the API.
	ApiVersion string `pulumi:"apiVersion"`
	// - A description for category key.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// - Specifying whether its a system defined category.
	SystemDefined bool `pulumi:"systemDefined"`
	// - A list of the values from this category key (if it has them).
	Values []string `pulumi:"values"`
}

func LookupCategoryKeyOutput(ctx *pulumi.Context, args LookupCategoryKeyOutputArgs, opts ...pulumi.InvokeOption) LookupCategoryKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCategoryKeyResultOutput, error) {
			args := v.(LookupCategoryKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getCategoryKey:getCategoryKey", args, LookupCategoryKeyResultOutput{}, options).(LookupCategoryKeyResultOutput), nil
		}).(LookupCategoryKeyResultOutput)
}

// A collection of arguments for invoking getCategoryKey.
type LookupCategoryKeyOutputArgs struct {
	// - (Required) The name for the category key.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupCategoryKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCategoryKeyArgs)(nil)).Elem()
}

// A collection of values returned by getCategoryKey.
type LookupCategoryKeyResultOutput struct{ *pulumi.OutputState }

func (LookupCategoryKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCategoryKeyResult)(nil)).Elem()
}

func (o LookupCategoryKeyResultOutput) ToLookupCategoryKeyResultOutput() LookupCategoryKeyResultOutput {
	return o
}

func (o LookupCategoryKeyResultOutput) ToLookupCategoryKeyResultOutputWithContext(ctx context.Context) LookupCategoryKeyResultOutput {
	return o
}

// The version of the API.
func (o LookupCategoryKeyResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// - A description for category key.
func (o LookupCategoryKeyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCategoryKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCategoryKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// - Specifying whether its a system defined category.
func (o LookupCategoryKeyResultOutput) SystemDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) bool { return v.SystemDefined }).(pulumi.BoolOutput)
}

// - A list of the values from this category key (if it has them).
func (o LookupCategoryKeyResultOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCategoryKeyResult) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCategoryKeyResultOutput{})
}
