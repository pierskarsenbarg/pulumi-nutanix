// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the requested key through the provided external identifier for the user and the key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupUserKeyV2(ctx, &nutanix.LookupUserKeyV2Args{
//				ExtId:     "<USER_KEY_UUID>",
//				UserExtId: "<SERVICE_ACCOUNT_UUID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Argument Reference
//
// The following arguments are supported:
//
// * `userExtId`: - ( Required ) External Identifier of the User.
// * `extId`: - ( Required ) External identifier of the key.
func LookupUserKeyV2(ctx *pulumi.Context, args *LookupUserKeyV2Args, opts ...pulumi.InvokeOption) (*LookupUserKeyV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserKeyV2Result
	err := ctx.Invoke("nutanix:index/getUserKeyV2:getUserKeyV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserKeyV2.
type LookupUserKeyV2Args struct {
	// - Brief description of the key.
	Description *string `pulumi:"description"`
	// The External Identifier of the User Group.
	ExtId     string `pulumi:"extId"`
	UserExtId string `pulumi:"userExtId"`
}

// A collection of values returned by getUserKeyV2.
type LookupUserKeyV2Result struct {
	// - External client to whom the given key is allocated.
	AssignedTo string `pulumi:"assignedTo"`
	// - User or service who created the key.
	CreatedBy string `pulumi:"createdBy"`
	// - The creation time of the key.
	CreatedTime string `pulumi:"createdTime"`
	// - The creation mechanism of this entity.
	CreationType string `pulumi:"creationType"`
	// - Brief description of the key.
	Description *string `pulumi:"description"`
	// - The time when the key will expire.
	ExpiryTime string `pulumi:"expiryTime"`
	// The External Identifier of the User Group.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Details specific to type of the key.
	KeyDetails []GetUserKeyV2KeyDetail `pulumi:"keyDetails"`
	// - The type of key.
	KeyType string `pulumi:"keyType"`
	// - User who updated the key.
	LastUpdatedBy string `pulumi:"lastUpdatedBy"`
	// - The time when the key was updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// - The time when the key was last used.
	LastUsedTime string `pulumi:"lastUsedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetUserKeyV2Link `pulumi:"links"`
	// - Identifier for the key in the form of a name.
	Name string `pulumi:"name"`
	// - The status of the key.
	Status string `pulumi:"status"`
	// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId  string `pulumi:"tenantId"`
	UserExtId string `pulumi:"userExtId"`
}

func LookupUserKeyV2Output(ctx *pulumi.Context, args LookupUserKeyV2OutputArgs, opts ...pulumi.InvokeOption) LookupUserKeyV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserKeyV2ResultOutput, error) {
			args := v.(LookupUserKeyV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getUserKeyV2:getUserKeyV2", args, LookupUserKeyV2ResultOutput{}, options).(LookupUserKeyV2ResultOutput), nil
		}).(LookupUserKeyV2ResultOutput)
}

// A collection of arguments for invoking getUserKeyV2.
type LookupUserKeyV2OutputArgs struct {
	// - Brief description of the key.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The External Identifier of the User Group.
	ExtId     pulumi.StringInput `pulumi:"extId"`
	UserExtId pulumi.StringInput `pulumi:"userExtId"`
}

func (LookupUserKeyV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserKeyV2Args)(nil)).Elem()
}

// A collection of values returned by getUserKeyV2.
type LookupUserKeyV2ResultOutput struct{ *pulumi.OutputState }

func (LookupUserKeyV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserKeyV2Result)(nil)).Elem()
}

func (o LookupUserKeyV2ResultOutput) ToLookupUserKeyV2ResultOutput() LookupUserKeyV2ResultOutput {
	return o
}

func (o LookupUserKeyV2ResultOutput) ToLookupUserKeyV2ResultOutputWithContext(ctx context.Context) LookupUserKeyV2ResultOutput {
	return o
}

// - External client to whom the given key is allocated.
func (o LookupUserKeyV2ResultOutput) AssignedTo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.AssignedTo }).(pulumi.StringOutput)
}

// - User or service who created the key.
func (o LookupUserKeyV2ResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// - The creation time of the key.
func (o LookupUserKeyV2ResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// - The creation mechanism of this entity.
func (o LookupUserKeyV2ResultOutput) CreationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.CreationType }).(pulumi.StringOutput)
}

// - Brief description of the key.
func (o LookupUserKeyV2ResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - The time when the key will expire.
func (o LookupUserKeyV2ResultOutput) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.ExpiryTime }).(pulumi.StringOutput)
}

// The External Identifier of the User Group.
func (o LookupUserKeyV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserKeyV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Details specific to type of the key.
func (o LookupUserKeyV2ResultOutput) KeyDetails() GetUserKeyV2KeyDetailArrayOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) []GetUserKeyV2KeyDetail { return v.KeyDetails }).(GetUserKeyV2KeyDetailArrayOutput)
}

// - The type of key.
func (o LookupUserKeyV2ResultOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.KeyType }).(pulumi.StringOutput)
}

// - User who updated the key.
func (o LookupUserKeyV2ResultOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// - The time when the key was updated.
func (o LookupUserKeyV2ResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - The time when the key was last used.
func (o LookupUserKeyV2ResultOutput) LastUsedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.LastUsedTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupUserKeyV2ResultOutput) Links() GetUserKeyV2LinkArrayOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) []GetUserKeyV2Link { return v.Links }).(GetUserKeyV2LinkArrayOutput)
}

// - Identifier for the key in the form of a name.
func (o LookupUserKeyV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// - The status of the key.
func (o LookupUserKeyV2ResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.Status }).(pulumi.StringOutput)
}

// A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o LookupUserKeyV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o LookupUserKeyV2ResultOutput) UserExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserKeyV2Result) string { return v.UserExtId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserKeyV2ResultOutput{})
}
