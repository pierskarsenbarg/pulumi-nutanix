// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a datasource to retrieve all Directory Service(s).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetDirectoryServiceV2(ctx, &nutanix.GetDirectoryServiceV2Args{
//				ExtId: "directory service ext id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDirectoryServiceV2(ctx *pulumi.Context, args *GetDirectoryServiceV2Args, opts ...pulumi.InvokeOption) (*GetDirectoryServiceV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDirectoryServiceV2Result
	err := ctx.Invoke("nutanix:index/getDirectoryServiceV2:getDirectoryServiceV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectoryServiceV2.
type GetDirectoryServiceV2Args struct {
	// -(Required) External identifier of the Directory Service.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getDirectoryServiceV2.
type GetDirectoryServiceV2Result struct {
	// - User or Service who created the Directory Service.
	CreatedBy string `pulumi:"createdBy"`
	// - Creation time of the Directory Service.
	CreatedTime string `pulumi:"createdTime"`
	// - Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType string `pulumi:"directoryType"`
	// - Domain name for the Directory Service.
	DomainName string `pulumi:"domainName"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// - Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType string `pulumi:"groupSearchType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Last updated time of the Directory Service.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// - Name for the Directory Service.
	Name string `pulumi:"name"`
	// - Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations []GetDirectoryServiceV2OpenLdapConfiguration `pulumi:"openLdapConfigurations"`
	// - Secondary URL for the Directory Service.
	SecondaryUrls []string `pulumi:"secondaryUrls"`
	// - Information of Service account to connect to the Directory Service.
	ServiceAccounts []GetDirectoryServiceV2ServiceAccount `pulumi:"serviceAccounts"`
	// - URL for the Directory Service.
	Url string `pulumi:"url"`
	// - List of allowed User Groups for the Directory Service.
	WhiteListedGroups []string `pulumi:"whiteListedGroups"`
}

func GetDirectoryServiceV2Output(ctx *pulumi.Context, args GetDirectoryServiceV2OutputArgs, opts ...pulumi.InvokeOption) GetDirectoryServiceV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDirectoryServiceV2ResultOutput, error) {
			args := v.(GetDirectoryServiceV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getDirectoryServiceV2:getDirectoryServiceV2", args, GetDirectoryServiceV2ResultOutput{}, options).(GetDirectoryServiceV2ResultOutput), nil
		}).(GetDirectoryServiceV2ResultOutput)
}

// A collection of arguments for invoking getDirectoryServiceV2.
type GetDirectoryServiceV2OutputArgs struct {
	// -(Required) External identifier of the Directory Service.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (GetDirectoryServiceV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryServiceV2Args)(nil)).Elem()
}

// A collection of values returned by getDirectoryServiceV2.
type GetDirectoryServiceV2ResultOutput struct{ *pulumi.OutputState }

func (GetDirectoryServiceV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryServiceV2Result)(nil)).Elem()
}

func (o GetDirectoryServiceV2ResultOutput) ToGetDirectoryServiceV2ResultOutput() GetDirectoryServiceV2ResultOutput {
	return o
}

func (o GetDirectoryServiceV2ResultOutput) ToGetDirectoryServiceV2ResultOutputWithContext(ctx context.Context) GetDirectoryServiceV2ResultOutput {
	return o
}

// - User or Service who created the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// - Creation time of the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// - Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
func (o GetDirectoryServiceV2ResultOutput) DirectoryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.DirectoryType }).(pulumi.StringOutput)
}

// - Domain name for the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.DomainName }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o GetDirectoryServiceV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// - Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
func (o GetDirectoryServiceV2ResultOutput) GroupSearchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.GroupSearchType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDirectoryServiceV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Last updated time of the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - Name for the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// - Configuration for OpenLDAP Directory Service.
func (o GetDirectoryServiceV2ResultOutput) OpenLdapConfigurations() GetDirectoryServiceV2OpenLdapConfigurationArrayOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) []GetDirectoryServiceV2OpenLdapConfiguration {
		return v.OpenLdapConfigurations
	}).(GetDirectoryServiceV2OpenLdapConfigurationArrayOutput)
}

// - Secondary URL for the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) SecondaryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) []string { return v.SecondaryUrls }).(pulumi.StringArrayOutput)
}

// - Information of Service account to connect to the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) ServiceAccounts() GetDirectoryServiceV2ServiceAccountArrayOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) []GetDirectoryServiceV2ServiceAccount { return v.ServiceAccounts }).(GetDirectoryServiceV2ServiceAccountArrayOutput)
}

// - URL for the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) string { return v.Url }).(pulumi.StringOutput)
}

// - List of allowed User Groups for the Directory Service.
func (o GetDirectoryServiceV2ResultOutput) WhiteListedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryServiceV2Result) []string { return v.WhiteListedGroups }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDirectoryServiceV2ResultOutput{})
}
