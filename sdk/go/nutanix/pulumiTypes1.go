// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NdbDatabaseSnapshotLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbDatabaseSnapshotLcmConfigRefreshDetailInput is an input type that accepts NdbDatabaseSnapshotLcmConfigRefreshDetailArgs and NdbDatabaseSnapshotLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigRefreshDetailInput` via:
//
//	NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{...}
type NdbDatabaseSnapshotLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput
	ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput)
}

// NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigRefreshDetailArray and NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigRefreshDetailArray{ NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{...} }
type NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput
	ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArray []NdbDatabaseSnapshotLcmConfigRefreshDetailInput

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfigRefreshDetail {
		return vs[0].([]NdbDatabaseSnapshotLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput)
}

type NdbDatabaseSnapshotProperty struct {
	// description of snapshot
	Description *string `pulumi:"description"`
	// Snapshot name. Default value is era_manual_snapshot.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseSnapshotPropertyInput is an input type that accepts NdbDatabaseSnapshotPropertyArgs and NdbDatabaseSnapshotPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotPropertyInput` via:
//
//	NdbDatabaseSnapshotPropertyArgs{...}
type NdbDatabaseSnapshotPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput
	ToNdbDatabaseSnapshotPropertyOutputWithContext(context.Context) NdbDatabaseSnapshotPropertyOutput
}

type NdbDatabaseSnapshotPropertyArgs struct {
	// description of snapshot
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Snapshot name. Default value is era_manual_snapshot.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseSnapshotPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (i NdbDatabaseSnapshotPropertyArgs) ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput {
	return i.ToNdbDatabaseSnapshotPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotPropertyArgs) ToNdbDatabaseSnapshotPropertyOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotPropertyOutput)
}

// NdbDatabaseSnapshotPropertyArrayInput is an input type that accepts NdbDatabaseSnapshotPropertyArray and NdbDatabaseSnapshotPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotPropertyArrayInput` via:
//
//	NdbDatabaseSnapshotPropertyArray{ NdbDatabaseSnapshotPropertyArgs{...} }
type NdbDatabaseSnapshotPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput
	ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(context.Context) NdbDatabaseSnapshotPropertyArrayOutput
}

type NdbDatabaseSnapshotPropertyArray []NdbDatabaseSnapshotPropertyInput

func (NdbDatabaseSnapshotPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (i NdbDatabaseSnapshotPropertyArray) ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput {
	return i.ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotPropertyArray) ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotPropertyArrayOutput)
}

type NdbDatabaseSnapshotPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (o NdbDatabaseSnapshotPropertyOutput) ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyOutput) ToNdbDatabaseSnapshotPropertyOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyOutput {
	return o
}

// description of snapshot
func (o NdbDatabaseSnapshotPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Snapshot name. Default value is era_manual_snapshot.
func (o NdbDatabaseSnapshotPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotProperty {
		return vs[0].([]NdbDatabaseSnapshotProperty)[vs[1].(int)]
	}).(NdbDatabaseSnapshotPropertyOutput)
}

type NdbDatabaseSnapshotTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseSnapshotTagInput is an input type that accepts NdbDatabaseSnapshotTagArgs and NdbDatabaseSnapshotTagOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotTagInput` via:
//
//	NdbDatabaseSnapshotTagArgs{...}
type NdbDatabaseSnapshotTagInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput
	ToNdbDatabaseSnapshotTagOutputWithContext(context.Context) NdbDatabaseSnapshotTagOutput
}

type NdbDatabaseSnapshotTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseSnapshotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (i NdbDatabaseSnapshotTagArgs) ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput {
	return i.ToNdbDatabaseSnapshotTagOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotTagArgs) ToNdbDatabaseSnapshotTagOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotTagOutput)
}

// NdbDatabaseSnapshotTagArrayInput is an input type that accepts NdbDatabaseSnapshotTagArray and NdbDatabaseSnapshotTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotTagArrayInput` via:
//
//	NdbDatabaseSnapshotTagArray{ NdbDatabaseSnapshotTagArgs{...} }
type NdbDatabaseSnapshotTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput
	ToNdbDatabaseSnapshotTagArrayOutputWithContext(context.Context) NdbDatabaseSnapshotTagArrayOutput
}

type NdbDatabaseSnapshotTagArray []NdbDatabaseSnapshotTagInput

func (NdbDatabaseSnapshotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (i NdbDatabaseSnapshotTagArray) ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput {
	return i.ToNdbDatabaseSnapshotTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotTagArray) ToNdbDatabaseSnapshotTagArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotTagArrayOutput)
}

type NdbDatabaseSnapshotTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (o NdbDatabaseSnapshotTagOutput) ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput {
	return o
}

func (o NdbDatabaseSnapshotTagOutput) ToNdbDatabaseSnapshotTagOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagOutput {
	return o
}

func (o NdbDatabaseSnapshotTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (o NdbDatabaseSnapshotTagArrayOutput) ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotTagArrayOutput) ToNdbDatabaseSnapshotTagArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotTag {
		return vs[0].([]NdbDatabaseSnapshotTag)[vs[1].(int)]
	}).(NdbDatabaseSnapshotTagOutput)
}

type NdbDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbDatabaseTagInput is an input type that accepts NdbDatabaseTagArgs and NdbDatabaseTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTagInput` via:
//
//	NdbDatabaseTagArgs{...}
type NdbDatabaseTagInput interface {
	pulumi.Input

	ToNdbDatabaseTagOutput() NdbDatabaseTagOutput
	ToNdbDatabaseTagOutputWithContext(context.Context) NdbDatabaseTagOutput
}

type NdbDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTag)(nil)).Elem()
}

func (i NdbDatabaseTagArgs) ToNdbDatabaseTagOutput() NdbDatabaseTagOutput {
	return i.ToNdbDatabaseTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTagArgs) ToNdbDatabaseTagOutputWithContext(ctx context.Context) NdbDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTagOutput)
}

// NdbDatabaseTagArrayInput is an input type that accepts NdbDatabaseTagArray and NdbDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTagArrayInput` via:
//
//	NdbDatabaseTagArray{ NdbDatabaseTagArgs{...} }
type NdbDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput
	ToNdbDatabaseTagArrayOutputWithContext(context.Context) NdbDatabaseTagArrayOutput
}

type NdbDatabaseTagArray []NdbDatabaseTagInput

func (NdbDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTag)(nil)).Elem()
}

func (i NdbDatabaseTagArray) ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput {
	return i.ToNdbDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTagArray) ToNdbDatabaseTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTagArrayOutput)
}

type NdbDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTag)(nil)).Elem()
}

func (o NdbDatabaseTagOutput) ToNdbDatabaseTagOutput() NdbDatabaseTagOutput {
	return o
}

func (o NdbDatabaseTagOutput) ToNdbDatabaseTagOutputWithContext(ctx context.Context) NdbDatabaseTagOutput {
	return o
}

func (o NdbDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTag)(nil)).Elem()
}

func (o NdbDatabaseTagArrayOutput) ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput {
	return o
}

func (o NdbDatabaseTagArrayOutput) ToNdbDatabaseTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTagArrayOutput {
	return o
}

func (o NdbDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTag {
		return vs[0].([]NdbDatabaseTag)[vs[1].(int)]
	}).(NdbDatabaseTagOutput)
}

type NdbDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	Clone       *bool   `pulumi:"clone"`
	Clones      *string `pulumi:"clones"`
	// - (Optional) If clustered database. Default: false
	Clustered    *bool   `pulumi:"clustered"`
	Database     *string `pulumi:"database"`
	DatabaseId   *string `pulumi:"databaseId"`
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// - (Optional) The description
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	Metric      *string `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name *string `pulumi:"name"`
	// List of all the properties
	Properties []NdbDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId *string                          `pulumi:"scheduleId"`
	// - (Optional) schedule for snapshots
	Schedules           []NdbDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                          `pulumi:"scope"`
	SlaId               *string                          `pulumi:"slaId"`
	SlaUpdateInProgress *bool                            `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                          `pulumi:"slaUpdateMetadata"`
	Slas                []NdbDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                         `pulumi:"sourceNxClusters"`
	Status              *string                          `pulumi:"status"`
	// - (Optional) tags
	Tags []NdbDatabaseTimeMachineTag `pulumi:"tags"`
	Type *string                     `pulumi:"type"`
}

// NdbDatabaseTimeMachineInput is an input type that accepts NdbDatabaseTimeMachineArgs and NdbDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineInput` via:
//
//	NdbDatabaseTimeMachineArgs{...}
type NdbDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput
	ToNdbDatabaseTimeMachineOutputWithContext(context.Context) NdbDatabaseTimeMachineOutput
}

type NdbDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	Clone       pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones      pulumi.StringPtrInput `pulumi:"clones"`
	// - (Optional) If clustered database. Default: false
	Clustered    pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database     pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId   pulumi.StringPtrInput `pulumi:"databaseId"`
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Metric      pulumi.StringPtrInput `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all the properties
	Properties NdbDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId pulumi.StringPtrInput                    `pulumi:"scheduleId"`
	// - (Optional) schedule for snapshots
	Schedules           NdbDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                    `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                    `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                      `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                    `pulumi:"slaUpdateMetadata"`
	Slas                NdbDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                  `pulumi:"sourceNxClusters"`
	Status              pulumi.StringPtrInput                    `pulumi:"status"`
	// - (Optional) tags
	Tags NdbDatabaseTimeMachineTagArrayInput `pulumi:"tags"`
	Type pulumi.StringPtrInput               `pulumi:"type"`
}

func (NdbDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineArgs) ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput {
	return i.ToNdbDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineArgs) ToNdbDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineOutput)
}

// NdbDatabaseTimeMachineArrayInput is an input type that accepts NdbDatabaseTimeMachineArray and NdbDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineArrayInput` via:
//
//	NdbDatabaseTimeMachineArray{ NdbDatabaseTimeMachineArgs{...} }
type NdbDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput
	ToNdbDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineArrayOutput
}

type NdbDatabaseTimeMachineArray []NdbDatabaseTimeMachineInput

func (NdbDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineArray) ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput {
	return i.ToNdbDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineArray) ToNdbDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineArrayOutput)
}

type NdbDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineOutput) ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput {
	return o
}

func (o NdbDatabaseTimeMachineOutput) ToNdbDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineOutput {
	return o
}

func (o NdbDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

// - (Optional) If clustered database. Default: false
func (o NdbDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all the properties
func (o NdbDatabaseTimeMachineOutput) Properties() NdbDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineProperty { return v.Properties }).(NdbDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbDatabaseTimeMachineOutput) Schedules() NdbDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineSchedule { return v.Schedules }).(NdbDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Slas() NdbDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineSla { return v.Slas }).(NdbDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbDatabaseTimeMachineOutput) Tags() NdbDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineTag { return v.Tags }).(NdbDatabaseTimeMachineTagArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineArrayOutput) ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineArrayOutput) ToNdbDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachine {
		return vs[0].([]NdbDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineOutput)
}

type NdbDatabaseTimeMachineProperty struct {
	// - (Optional) The description
	Description *string `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbDatabaseTimeMachinePropertyInput is an input type that accepts NdbDatabaseTimeMachinePropertyArgs and NdbDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachinePropertyInput` via:
//
//	NdbDatabaseTimeMachinePropertyArgs{...}
type NdbDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput
	ToNdbDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbDatabaseTimeMachinePropertyOutput
}

type NdbDatabaseTimeMachinePropertyArgs struct {
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseTimeMachinePropertyArgs) ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput {
	return i.ToNdbDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachinePropertyArgs) ToNdbDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachinePropertyOutput)
}

// NdbDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbDatabaseTimeMachinePropertyArray and NdbDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbDatabaseTimeMachinePropertyArray{ NdbDatabaseTimeMachinePropertyArgs{...} }
type NdbDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput
	ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbDatabaseTimeMachinePropertyArrayOutput
}

type NdbDatabaseTimeMachinePropertyArray []NdbDatabaseTimeMachinePropertyInput

func (NdbDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseTimeMachinePropertyArray) ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachinePropertyArray) ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachinePropertyArrayOutput)
}

type NdbDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseTimeMachinePropertyOutput) ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyOutput) ToNdbDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyOutput {
	return o
}

// - (Optional) The description
func (o NdbDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// - (Required) value for argument
func (o NdbDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineProperty {
		return vs[0].([]NdbDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbDatabaseTimeMachinePropertyOutput)
}

type NdbDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	DateCreated         *string                                            `pulumi:"dateCreated"`
	DateModified        *string                                            `pulumi:"dateModified"`
	// - (Optional) The description
	Description      *string                                         `pulumi:"description"`
	GlobalPolicy     *bool                                           `pulumi:"globalPolicy"`
	Id               *string                                         `pulumi:"id"`
	MonthlySchedules []NdbDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// - (Required) Name of the instance.
	Name               *string                                           `pulumi:"name"`
	OwnerId            *string                                           `pulumi:"ownerId"`
	QuartelySchedules  []NdbDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                              `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                           `pulumi:"startTime"`
	SystemPolicy       *bool                                             `pulumi:"systemPolicy"`
	TimeZone           *string                                           `pulumi:"timeZone"`
	UniqueName         *string                                           `pulumi:"uniqueName"`
	WeeklySchedules    []NdbDatabaseTimeMachineScheduleWeeklySchedule    `pulumi:"weeklySchedules"`
	YearlySchedules    []NdbDatabaseTimeMachineScheduleYearlySchedule    `pulumi:"yearlySchedules"`
}

// NdbDatabaseTimeMachineScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleArgs and NdbDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput
	ToNdbDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleOutput
}

type NdbDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	DateCreated         pulumi.StringPtrInput                                      `pulumi:"dateCreated"`
	DateModified        pulumi.StringPtrInput                                      `pulumi:"dateModified"`
	// - (Optional) The description
	Description      pulumi.StringPtrInput                                   `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                     `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                   `pulumi:"id"`
	MonthlySchedules NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// - (Required) Name of the instance.
	Name               pulumi.StringPtrInput                                     `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                     `pulumi:"ownerId"`
	QuartelySchedules  NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                        `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                     `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                       `pulumi:"systemPolicy"`
	TimeZone           pulumi.StringPtrInput                                     `pulumi:"timeZone"`
	UniqueName         pulumi.StringPtrInput                                     `pulumi:"uniqueName"`
	WeeklySchedules    NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput    `pulumi:"weeklySchedules"`
	YearlySchedules    NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput    `pulumi:"yearlySchedules"`
}

func (NdbDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleArgs) ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleArgs) ToNdbDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleArray and NdbDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleArray{ NdbDatabaseTimeMachineScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleArray []NdbDatabaseTimeMachineScheduleInput

func (NdbDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleArray) ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleArray) ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleOutput) ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleOutput) ToNdbDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DailySchedules() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineSchedule {
		return vs[0].([]NdbDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleContinuousScheduleArray and NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArray []NdbDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleDailyScheduleArgs and NdbDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleDailyScheduleArray and NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleDailyScheduleArray{ NdbDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArray []NdbDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra *bool `pulumi:"extra"`
	// - (Required) hours
	Hours *int `pulumi:"hours"`
	// - (Required) minutes
	Minutes *int `pulumi:"minutes"`
	// - (Required) seconds
	Seconds *int `pulumi:"seconds"`
}

// NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra pulumi.BoolPtrInput `pulumi:"extra"`
	// - (Required) hours
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// - (Required) minutes
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// - (Required) seconds
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

// - (Required) hours
func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// - (Required) minutes
func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// - (Required) seconds
func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleYearlyScheduleArray and NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArray []NdbDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// - (Required) month for snapshot
func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	DateCreated            *string `pulumi:"dateCreated"`
	DateModified           *string `pulumi:"dateModified"`
	// - (Optional) The description
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// - (Required) Name of the instance.
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbDatabaseTimeMachineSlaInput is an input type that accepts NdbDatabaseTimeMachineSlaArgs and NdbDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineSlaInput` via:
//
//	NdbDatabaseTimeMachineSlaArgs{...}
type NdbDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput
	ToNdbDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbDatabaseTimeMachineSlaOutput
}

type NdbDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	DateCreated            pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified           pulumi.StringPtrInput `pulumi:"dateModified"`
	// - (Optional) The description
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// - (Required) Name of the instance.
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineSlaArgs) ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput {
	return i.ToNdbDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineSlaArgs) ToNdbDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineSlaOutput)
}

// NdbDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbDatabaseTimeMachineSlaArray and NdbDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbDatabaseTimeMachineSlaArray{ NdbDatabaseTimeMachineSlaArgs{...} }
type NdbDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput
	ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineSlaArrayOutput
}

type NdbDatabaseTimeMachineSlaArray []NdbDatabaseTimeMachineSlaInput

func (NdbDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineSlaArray) ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineSlaArray) ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineSlaArrayOutput)
}

type NdbDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineSlaOutput) ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaOutput) ToNdbDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineSla {
		return vs[0].([]NdbDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineSlaOutput)
}

type NdbDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbDatabaseTimeMachineTagInput is an input type that accepts NdbDatabaseTimeMachineTagArgs and NdbDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineTagInput` via:
//
//	NdbDatabaseTimeMachineTagArgs{...}
type NdbDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput
	ToNdbDatabaseTimeMachineTagOutputWithContext(context.Context) NdbDatabaseTimeMachineTagOutput
}

type NdbDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineTagArgs) ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput {
	return i.ToNdbDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineTagArgs) ToNdbDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineTagOutput)
}

// NdbDatabaseTimeMachineTagArrayInput is an input type that accepts NdbDatabaseTimeMachineTagArray and NdbDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineTagArrayInput` via:
//
//	NdbDatabaseTimeMachineTagArray{ NdbDatabaseTimeMachineTagArgs{...} }
type NdbDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput
	ToNdbDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineTagArrayOutput
}

type NdbDatabaseTimeMachineTagArray []NdbDatabaseTimeMachineTagInput

func (NdbDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineTagArray) ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineTagArray) ToNdbDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineTagArrayOutput)
}

type NdbDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineTagOutput) ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagOutput) ToNdbDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineTagArrayOutput) ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagArrayOutput) ToNdbDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineTag {
		return vs[0].([]NdbDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineTagOutput)
}

type NdbDatabaseTimemachineinfo struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive *bool `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description *string `pulumi:"description"`
	// - (Required) name of time machine
	Name string `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbDatabaseTimemachineinfoSchedule `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails []NdbDatabaseTimemachineinfoSlaDetail `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid *string `pulumi:"slaid"`
	// - (Optional) tags
	Tags []NdbDatabaseTimemachineinfoTag `pulumi:"tags"`
}

// NdbDatabaseTimemachineinfoInput is an input type that accepts NdbDatabaseTimemachineinfoArgs and NdbDatabaseTimemachineinfoOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoInput` via:
//
//	NdbDatabaseTimemachineinfoArgs{...}
type NdbDatabaseTimemachineinfoInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput
	ToNdbDatabaseTimemachineinfoOutputWithContext(context.Context) NdbDatabaseTimemachineinfoOutput
}

type NdbDatabaseTimemachineinfoArgs struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive pulumi.BoolPtrInput `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) name of time machine
	Name pulumi.StringInput `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbDatabaseTimemachineinfoScheduleInput `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails NdbDatabaseTimemachineinfoSlaDetailArrayInput `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid pulumi.StringPtrInput `pulumi:"slaid"`
	// - (Optional) tags
	Tags NdbDatabaseTimemachineinfoTagArrayInput `pulumi:"tags"`
}

func (NdbDatabaseTimemachineinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput {
	return i.ToNdbDatabaseTimemachineinfoOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoOutput)
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoOutput).ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoPtrInput is an input type that accepts NdbDatabaseTimemachineinfoArgs, NdbDatabaseTimemachineinfoPtr and NdbDatabaseTimemachineinfoPtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoPtrInput` via:
//
//	        NdbDatabaseTimemachineinfoArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoPtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput
	ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoPtrOutput
}

type ndbDatabaseTimemachineinfoPtrType NdbDatabaseTimemachineinfoArgs

func NdbDatabaseTimemachineinfoPtr(v *NdbDatabaseTimemachineinfoArgs) NdbDatabaseTimemachineinfoPtrInput {
	return (*ndbDatabaseTimemachineinfoPtrType)(v)
}

func (*ndbDatabaseTimemachineinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoPtrType) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoPtrType) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoPtrOutput)
}

type NdbDatabaseTimemachineinfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return o.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfo) *NdbDatabaseTimemachineinfo {
		return &v
	}).(NdbDatabaseTimemachineinfoPtrOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbDatabaseTimemachineinfoOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *bool { return v.Autotunelogdrive }).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbDatabaseTimemachineinfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbDatabaseTimemachineinfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) string { return v.Name }).(pulumi.StringOutput)
}

// - (Optional) schedule for snapshots
func (o NdbDatabaseTimemachineinfoOutput) Schedule() NdbDatabaseTimemachineinfoScheduleOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) NdbDatabaseTimemachineinfoSchedule { return v.Schedule }).(NdbDatabaseTimemachineinfoScheduleOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbDatabaseTimemachineinfoOutput) SlaDetails() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoSlaDetail { return v.SlaDetails }).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbDatabaseTimemachineinfoOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *string { return v.Slaid }).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbDatabaseTimemachineinfoOutput) Tags() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoTag { return v.Tags }).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoPtrOutput) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoPtrOutput) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoPtrOutput) Elem() NdbDatabaseTimemachineinfoOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) NdbDatabaseTimemachineinfo {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfo
		return ret
	}).(NdbDatabaseTimemachineinfoOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbDatabaseTimemachineinfoPtrOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *bool {
		if v == nil {
			return nil
		}
		return v.Autotunelogdrive
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbDatabaseTimemachineinfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbDatabaseTimemachineinfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbDatabaseTimemachineinfoPtrOutput) Schedule() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *NdbDatabaseTimemachineinfoSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbDatabaseTimemachineinfoPtrOutput) SlaDetails() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoSlaDetail {
		if v == nil {
			return nil
		}
		return v.SlaDetails
	}).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbDatabaseTimemachineinfoPtrOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return v.Slaid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbDatabaseTimemachineinfoPtrOutput) Tags() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoSchedule struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule *NdbDatabaseTimemachineinfoScheduleContinuousschedule `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule *NdbDatabaseTimemachineinfoScheduleMonthlyschedule `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule *NdbDatabaseTimemachineinfoScheduleQuartelyschedule `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule *NdbDatabaseTimemachineinfoScheduleWeeklyschedule `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule *NdbDatabaseTimemachineinfoScheduleYearlyschedule `pulumi:"yearlyschedule"`
}

// NdbDatabaseTimemachineinfoScheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleArgs and NdbDatabaseTimemachineinfoScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleArgs struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput `pulumi:"yearlyschedule"`
}

func (NdbDatabaseTimemachineinfoScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleOutput).ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoSchedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleArgs, NdbDatabaseTimemachineinfoSchedulePtr and NdbDatabaseTimemachineinfoSchedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSchedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoSchedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput
	ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput
}

type ndbDatabaseTimemachineinfoSchedulePtrType NdbDatabaseTimemachineinfoScheduleArgs

func NdbDatabaseTimemachineinfoSchedulePtr(v *NdbDatabaseTimemachineinfoScheduleArgs) NdbDatabaseTimemachineinfoSchedulePtrInput {
	return (*ndbDatabaseTimemachineinfoSchedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoSchedulePtrType) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoSchedulePtrType) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoSchedule {
		return &v
	}).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Continuousschedule() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		return v.Continuousschedule
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Monthlyschedule() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		return v.Monthlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Quartelyschedule() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		return v.Quartelyschedule
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Snapshottimeofday() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		return v.Snapshottimeofday
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Weeklyschedule() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		return v.Weeklyschedule
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Yearlyschedule() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		return v.Yearlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoSchedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) NdbDatabaseTimemachineinfoSchedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoSchedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Continuousschedule() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		if v == nil {
			return nil
		}
		return v.Continuousschedule
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Monthlyschedule() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		if v == nil {
			return nil
		}
		return v.Monthlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Quartelyschedule() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		if v == nil {
			return nil
		}
		return v.Quartelyschedule
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Snapshottimeofday() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		if v == nil {
			return nil
		}
		return v.Snapshottimeofday
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Weeklyschedule() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		if v == nil {
			return nil
		}
		return v.Weeklyschedule
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Yearlyschedule() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		if v == nil {
			return nil
		}
		return v.Yearlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousschedule struct {
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) log catchup interval for database
	Logbackupinterval int `pulumi:"logbackupinterval"`
	// - (Required) num of snapshots per day
	Snapshotsperday int `pulumi:"snapshotsperday"`
}

// NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs and NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs struct {
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) log catchup interval for database
	Logbackupinterval pulumi.IntInput `pulumi:"logbackupinterval"`
	// - (Required) num of snapshots per day
	Snapshotsperday pulumi.IntInput `pulumi:"snapshotsperday"`
}

func (NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs, NdbDatabaseTimemachineinfoScheduleContinuousschedulePtr and NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs

func NdbDatabaseTimemachineinfoScheduleContinuousschedulePtr(v *NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleContinuousschedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) log catchup interval for database
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Logbackupinterval() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) int { return v.Logbackupinterval }).(pulumi.IntOutput)
}

// - (Required) num of snapshots per day
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Snapshotsperday() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) int { return v.Snapshotsperday }).(pulumi.IntOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleContinuousschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) log catchup interval for database
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Logbackupinterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Logbackupinterval
	}).(pulumi.IntPtrOutput)
}

// - (Required) num of snapshots per day
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Snapshotsperday() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Snapshotsperday
	}).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyschedule struct {
	// - (Required) day of month to take snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
}

// NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs and NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs struct {
	// - (Required) day of month to take snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs, NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtr and NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleMonthlyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyschedule struct {
	// - (Required) month's day for snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) quarter start month
	Startmonth string `pulumi:"startmonth"`
}

// NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs and NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs struct {
	// - (Required) month's day for snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) quarter start month
	Startmonth pulumi.StringInput `pulumi:"startmonth"`
}

func (NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs, NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtr and NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Required) month's day for snapshot
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) quarter start month
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Startmonth() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) string { return v.Startmonth }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleQuartelyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput)
}

// - (Required) month's day for snapshot
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) quarter start month
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Startmonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Startmonth
	}).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofday struct {
	// - (Required) hours
	Hours int `pulumi:"hours"`
	// - (Required) minutes
	Minutes int `pulumi:"minutes"`
	// - (Required) seconds
	Seconds int `pulumi:"seconds"`
}

// NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs and NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{...}
type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput
	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs struct {
	// - (Required) hours
	Hours pulumi.IntInput `pulumi:"hours"`
	// - (Required) minutes
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// - (Required) seconds
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput).ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs, NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtr and NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput
	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput
}

type ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs

func NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtr(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Required) hours
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Hours }).(pulumi.IntOutput)
}

// - (Required) minutes
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Minutes }).(pulumi.IntOutput)
}

// - (Required) seconds
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Seconds }).(pulumi.IntOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleSnapshottimeofday
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput)
}

// - (Required) hours
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// - (Required) minutes
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// - (Required) seconds
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyschedule struct {
	// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
	Dayofweek string `pulumi:"dayofweek"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
}

// NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs and NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs struct {
	// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
	Dayofweek pulumi.StringInput `pulumi:"dayofweek"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs, NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtr and NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) Dayofweek() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) string { return v.Dayofweek }).(pulumi.StringOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleWeeklyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput)
}

// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Dayofweek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Dayofweek
	}).(pulumi.StringPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyschedule struct {
	// - (Required) day of month to take snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month string `pulumi:"month"`
}

// NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs and NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs struct {
	// - (Required) day of month to take snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month pulumi.StringInput `pulumi:"month"`
}

func (NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs, NdbDatabaseTimemachineinfoScheduleYearlyschedulePtr and NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleYearlyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleYearlyschedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) month for snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) string { return v.Month }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleYearlyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) month for snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoSlaDetail struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas []NdbDatabaseTimemachineinfoSlaDetailPrimarySla `pulumi:"primarySlas"`
}

// NdbDatabaseTimemachineinfoSlaDetailInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailArgs and NdbDatabaseTimemachineinfoSlaDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailArgs{...}
type NdbDatabaseTimemachineinfoSlaDetailInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput
	ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput
}

type NdbDatabaseTimemachineinfoSlaDetailArgs struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput `pulumi:"primarySlas"`
}

func (NdbDatabaseTimemachineinfoSlaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailArgs) ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailArgs) ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailOutput)
}

// NdbDatabaseTimemachineinfoSlaDetailArrayInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailArray and NdbDatabaseTimemachineinfoSlaDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailArrayInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailArray{ NdbDatabaseTimemachineinfoSlaDetailArgs{...} }
type NdbDatabaseTimemachineinfoSlaDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput
	ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput
}

type NdbDatabaseTimemachineinfoSlaDetailArray []NdbDatabaseTimemachineinfoSlaDetailInput

func (NdbDatabaseTimemachineinfoSlaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailArray) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailArray) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailOutput) ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailOutput) ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return o
}

// - (Required) primary sla details
// * `primary_sla.sla_id` :- (Required) sla id
// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
func (o NdbDatabaseTimemachineinfoSlaDetailOutput) PrimarySlas() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetail) []NdbDatabaseTimemachineinfoSlaDetailPrimarySla {
		return v.PrimarySlas
	}).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoSlaDetail {
		return vs[0].([]NdbDatabaseTimemachineinfoSlaDetail)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoSlaDetailOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySla struct {
	NxClusterIds []string `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId string `pulumi:"slaId"`
}

// NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs and NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{...}
type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput
	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs struct {
	NxClusterIds pulumi.StringArrayInput `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId pulumi.StringInput `pulumi:"slaId"`
}

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput)
}

// NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray and NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray{ NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{...} }
type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput
	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray []NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) NxClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetailPrimarySla) []string { return v.NxClusterIds }).(pulumi.StringArrayOutput)
}

// description of SLA ID.
func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) SlaId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetailPrimarySla) string { return v.SlaId }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoSlaDetailPrimarySla {
		return vs[0].([]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput)
}

type NdbDatabaseTimemachineinfoTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbDatabaseTimemachineinfoTagInput is an input type that accepts NdbDatabaseTimemachineinfoTagArgs and NdbDatabaseTimemachineinfoTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoTagInput` via:
//
//	NdbDatabaseTimemachineinfoTagArgs{...}
type NdbDatabaseTimemachineinfoTagInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput
	ToNdbDatabaseTimemachineinfoTagOutputWithContext(context.Context) NdbDatabaseTimemachineinfoTagOutput
}

type NdbDatabaseTimemachineinfoTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimemachineinfoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoTagArgs) ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput {
	return i.ToNdbDatabaseTimemachineinfoTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoTagArgs) ToNdbDatabaseTimemachineinfoTagOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoTagOutput)
}

// NdbDatabaseTimemachineinfoTagArrayInput is an input type that accepts NdbDatabaseTimemachineinfoTagArray and NdbDatabaseTimemachineinfoTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoTagArrayInput` via:
//
//	NdbDatabaseTimemachineinfoTagArray{ NdbDatabaseTimemachineinfoTagArgs{...} }
type NdbDatabaseTimemachineinfoTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput
	ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoTagArrayOutput
}

type NdbDatabaseTimemachineinfoTagArray []NdbDatabaseTimemachineinfoTagInput

func (NdbDatabaseTimemachineinfoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoTagArray) ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoTagArray) ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoTagOutput) ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagOutput) ToNdbDatabaseTimemachineinfoTagOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbDatabaseTimemachineinfoTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoTag {
		return vs[0].([]NdbDatabaseTimemachineinfoTag)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoTagOutput)
}

type NdbDbserverVmCredential struct {
	Label    *string `pulumi:"label"`
	Password string  `pulumi:"password"`
	Username string  `pulumi:"username"`
}

// NdbDbserverVmCredentialInput is an input type that accepts NdbDbserverVmCredentialArgs and NdbDbserverVmCredentialOutput values.
// You can construct a concrete instance of `NdbDbserverVmCredentialInput` via:
//
//	NdbDbserverVmCredentialArgs{...}
type NdbDbserverVmCredentialInput interface {
	pulumi.Input

	ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput
	ToNdbDbserverVmCredentialOutputWithContext(context.Context) NdbDbserverVmCredentialOutput
}

type NdbDbserverVmCredentialArgs struct {
	Label    pulumi.StringPtrInput `pulumi:"label"`
	Password pulumi.StringInput    `pulumi:"password"`
	Username pulumi.StringInput    `pulumi:"username"`
}

func (NdbDbserverVmCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmCredential)(nil)).Elem()
}

func (i NdbDbserverVmCredentialArgs) ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput {
	return i.ToNdbDbserverVmCredentialOutputWithContext(context.Background())
}

func (i NdbDbserverVmCredentialArgs) ToNdbDbserverVmCredentialOutputWithContext(ctx context.Context) NdbDbserverVmCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmCredentialOutput)
}

// NdbDbserverVmCredentialArrayInput is an input type that accepts NdbDbserverVmCredentialArray and NdbDbserverVmCredentialArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmCredentialArrayInput` via:
//
//	NdbDbserverVmCredentialArray{ NdbDbserverVmCredentialArgs{...} }
type NdbDbserverVmCredentialArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput
	ToNdbDbserverVmCredentialArrayOutputWithContext(context.Context) NdbDbserverVmCredentialArrayOutput
}

type NdbDbserverVmCredentialArray []NdbDbserverVmCredentialInput

func (NdbDbserverVmCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmCredential)(nil)).Elem()
}

func (i NdbDbserverVmCredentialArray) ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput {
	return i.ToNdbDbserverVmCredentialArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmCredentialArray) ToNdbDbserverVmCredentialArrayOutputWithContext(ctx context.Context) NdbDbserverVmCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmCredentialArrayOutput)
}

type NdbDbserverVmCredentialOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmCredential)(nil)).Elem()
}

func (o NdbDbserverVmCredentialOutput) ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput {
	return o
}

func (o NdbDbserverVmCredentialOutput) ToNdbDbserverVmCredentialOutputWithContext(ctx context.Context) NdbDbserverVmCredentialOutput {
	return o
}

func (o NdbDbserverVmCredentialOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o NdbDbserverVmCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) string { return v.Username }).(pulumi.StringOutput)
}

type NdbDbserverVmCredentialArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmCredential)(nil)).Elem()
}

func (o NdbDbserverVmCredentialArrayOutput) ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput {
	return o
}

func (o NdbDbserverVmCredentialArrayOutput) ToNdbDbserverVmCredentialArrayOutputWithContext(ctx context.Context) NdbDbserverVmCredentialArrayOutput {
	return o
}

func (o NdbDbserverVmCredentialArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmCredential {
		return vs[0].([]NdbDbserverVmCredential)[vs[1].(int)]
	}).(NdbDbserverVmCredentialOutput)
}

type NdbDbserverVmMaintenanceTasks struct {
	// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// Tasks for the maintenance.
	// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
	// * `tasks.pre_command`: add pre (operating system and database patching) commands.
	// * `tasks.post_command`:add post (operating system and database patching) commands.
	Tasks []NdbDbserverVmMaintenanceTasksTask `pulumi:"tasks"`
}

// NdbDbserverVmMaintenanceTasksInput is an input type that accepts NdbDbserverVmMaintenanceTasksArgs and NdbDbserverVmMaintenanceTasksOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksInput` via:
//
//	NdbDbserverVmMaintenanceTasksArgs{...}
type NdbDbserverVmMaintenanceTasksInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput
	ToNdbDbserverVmMaintenanceTasksOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksOutput
}

type NdbDbserverVmMaintenanceTasksArgs struct {
	// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
	MaintenanceWindowId pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	// Tasks for the maintenance.
	// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
	// * `tasks.pre_command`: add pre (operating system and database patching) commands.
	// * `tasks.post_command`:add post (operating system and database patching) commands.
	Tasks NdbDbserverVmMaintenanceTasksTaskArrayInput `pulumi:"tasks"`
}

func (NdbDbserverVmMaintenanceTasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput {
	return i.ToNdbDbserverVmMaintenanceTasksOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksOutput)
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return i.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksOutput).ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx)
}

// NdbDbserverVmMaintenanceTasksPtrInput is an input type that accepts NdbDbserverVmMaintenanceTasksArgs, NdbDbserverVmMaintenanceTasksPtr and NdbDbserverVmMaintenanceTasksPtrOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksPtrInput` via:
//
//	        NdbDbserverVmMaintenanceTasksArgs{...}
//
//	or:
//
//	        nil
type NdbDbserverVmMaintenanceTasksPtrInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput
	ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksPtrOutput
}

type ndbDbserverVmMaintenanceTasksPtrType NdbDbserverVmMaintenanceTasksArgs

func NdbDbserverVmMaintenanceTasksPtr(v *NdbDbserverVmMaintenanceTasksArgs) NdbDbserverVmMaintenanceTasksPtrInput {
	return (*ndbDbserverVmMaintenanceTasksPtrType)(v)
}

func (*ndbDbserverVmMaintenanceTasksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (i *ndbDbserverVmMaintenanceTasksPtrType) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return i.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i *ndbDbserverVmMaintenanceTasksPtrType) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksPtrOutput)
}

type NdbDbserverVmMaintenanceTasksOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return o.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDbserverVmMaintenanceTasks) *NdbDbserverVmMaintenanceTasks {
		return &v
	}).(NdbDbserverVmMaintenanceTasksPtrOutput)
}

// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
func (o NdbDbserverVmMaintenanceTasksOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasks) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

// Tasks for the maintenance.
// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
// * `tasks.pre_command`: add pre (operating system and database patching) commands.
// * `tasks.post_command`:add post (operating system and database patching) commands.
func (o NdbDbserverVmMaintenanceTasksOutput) Tasks() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasks) []NdbDbserverVmMaintenanceTasksTask { return v.Tasks }).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksPtrOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) Elem() NdbDbserverVmMaintenanceTasksOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) NdbDbserverVmMaintenanceTasks {
		if v != nil {
			return *v
		}
		var ret NdbDbserverVmMaintenanceTasks
		return ret
	}).(NdbDbserverVmMaintenanceTasksOutput)
}

// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
func (o NdbDbserverVmMaintenanceTasksPtrOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) *string {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowId
	}).(pulumi.StringPtrOutput)
}

// Tasks for the maintenance.
// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
// * `tasks.pre_command`: add pre (operating system and database patching) commands.
// * `tasks.post_command`:add post (operating system and database patching) commands.
func (o NdbDbserverVmMaintenanceTasksPtrOutput) Tasks() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) []NdbDbserverVmMaintenanceTasksTask {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksTask struct {
	PostCommand *string `pulumi:"postCommand"`
	PreCommand  *string `pulumi:"preCommand"`
	TaskType    *string `pulumi:"taskType"`
}

// NdbDbserverVmMaintenanceTasksTaskInput is an input type that accepts NdbDbserverVmMaintenanceTasksTaskArgs and NdbDbserverVmMaintenanceTasksTaskOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksTaskInput` via:
//
//	NdbDbserverVmMaintenanceTasksTaskArgs{...}
type NdbDbserverVmMaintenanceTasksTaskInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput
	ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksTaskOutput
}

type NdbDbserverVmMaintenanceTasksTaskArgs struct {
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	PreCommand  pulumi.StringPtrInput `pulumi:"preCommand"`
	TaskType    pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbDbserverVmMaintenanceTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksTaskArgs) ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput {
	return i.ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksTaskArgs) ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksTaskOutput)
}

// NdbDbserverVmMaintenanceTasksTaskArrayInput is an input type that accepts NdbDbserverVmMaintenanceTasksTaskArray and NdbDbserverVmMaintenanceTasksTaskArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksTaskArrayInput` via:
//
//	NdbDbserverVmMaintenanceTasksTaskArray{ NdbDbserverVmMaintenanceTasksTaskArgs{...} }
type NdbDbserverVmMaintenanceTasksTaskArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput
	ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput
}

type NdbDbserverVmMaintenanceTasksTaskArray []NdbDbserverVmMaintenanceTasksTaskInput

func (NdbDbserverVmMaintenanceTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksTaskArray) ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return i.ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksTaskArray) ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksTaskOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmMaintenanceTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmMaintenanceTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmMaintenanceTasksTask {
		return vs[0].([]NdbDbserverVmMaintenanceTasksTask)[vs[1].(int)]
	}).(NdbDbserverVmMaintenanceTasksTaskOutput)
}

type NdbDbserverVmPostgresDatabase struct {
	// use SSH public keys to access the database server VM.
	ClientPublicKey *string `pulumi:"clientPublicKey"`
	// name for the database server VM.
	VmName string `pulumi:"vmName"`
}

// NdbDbserverVmPostgresDatabaseInput is an input type that accepts NdbDbserverVmPostgresDatabaseArgs and NdbDbserverVmPostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbDbserverVmPostgresDatabaseInput` via:
//
//	NdbDbserverVmPostgresDatabaseArgs{...}
type NdbDbserverVmPostgresDatabaseInput interface {
	pulumi.Input

	ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput
	ToNdbDbserverVmPostgresDatabaseOutputWithContext(context.Context) NdbDbserverVmPostgresDatabaseOutput
}

type NdbDbserverVmPostgresDatabaseArgs struct {
	// use SSH public keys to access the database server VM.
	ClientPublicKey pulumi.StringPtrInput `pulumi:"clientPublicKey"`
	// name for the database server VM.
	VmName pulumi.StringInput `pulumi:"vmName"`
}

func (NdbDbserverVmPostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (i NdbDbserverVmPostgresDatabaseArgs) ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput {
	return i.ToNdbDbserverVmPostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbDbserverVmPostgresDatabaseArgs) ToNdbDbserverVmPostgresDatabaseOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPostgresDatabaseOutput)
}

// NdbDbserverVmPostgresDatabaseArrayInput is an input type that accepts NdbDbserverVmPostgresDatabaseArray and NdbDbserverVmPostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmPostgresDatabaseArrayInput` via:
//
//	NdbDbserverVmPostgresDatabaseArray{ NdbDbserverVmPostgresDatabaseArgs{...} }
type NdbDbserverVmPostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput
	ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(context.Context) NdbDbserverVmPostgresDatabaseArrayOutput
}

type NdbDbserverVmPostgresDatabaseArray []NdbDbserverVmPostgresDatabaseInput

func (NdbDbserverVmPostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (i NdbDbserverVmPostgresDatabaseArray) ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput {
	return i.ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmPostgresDatabaseArray) ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPostgresDatabaseArrayOutput)
}

type NdbDbserverVmPostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (o NdbDbserverVmPostgresDatabaseOutput) ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseOutput) ToNdbDbserverVmPostgresDatabaseOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseOutput {
	return o
}

// use SSH public keys to access the database server VM.
func (o NdbDbserverVmPostgresDatabaseOutput) ClientPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmPostgresDatabase) *string { return v.ClientPublicKey }).(pulumi.StringPtrOutput)
}

// name for the database server VM.
func (o NdbDbserverVmPostgresDatabaseOutput) VmName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmPostgresDatabase) string { return v.VmName }).(pulumi.StringOutput)
}

type NdbDbserverVmPostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseArrayOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmPostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmPostgresDatabase {
		return vs[0].([]NdbDbserverVmPostgresDatabase)[vs[1].(int)]
	}).(NdbDbserverVmPostgresDatabaseOutput)
}

type NdbDbserverVmProperty struct {
	// name of the dbserver vm
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbDbserverVmPropertyInput is an input type that accepts NdbDbserverVmPropertyArgs and NdbDbserverVmPropertyOutput values.
// You can construct a concrete instance of `NdbDbserverVmPropertyInput` via:
//
//	NdbDbserverVmPropertyArgs{...}
type NdbDbserverVmPropertyInput interface {
	pulumi.Input

	ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput
	ToNdbDbserverVmPropertyOutputWithContext(context.Context) NdbDbserverVmPropertyOutput
}

type NdbDbserverVmPropertyArgs struct {
	// name of the dbserver vm
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDbserverVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmProperty)(nil)).Elem()
}

func (i NdbDbserverVmPropertyArgs) ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput {
	return i.ToNdbDbserverVmPropertyOutputWithContext(context.Background())
}

func (i NdbDbserverVmPropertyArgs) ToNdbDbserverVmPropertyOutputWithContext(ctx context.Context) NdbDbserverVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPropertyOutput)
}

// NdbDbserverVmPropertyArrayInput is an input type that accepts NdbDbserverVmPropertyArray and NdbDbserverVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmPropertyArrayInput` via:
//
//	NdbDbserverVmPropertyArray{ NdbDbserverVmPropertyArgs{...} }
type NdbDbserverVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput
	ToNdbDbserverVmPropertyArrayOutputWithContext(context.Context) NdbDbserverVmPropertyArrayOutput
}

type NdbDbserverVmPropertyArray []NdbDbserverVmPropertyInput

func (NdbDbserverVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmProperty)(nil)).Elem()
}

func (i NdbDbserverVmPropertyArray) ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput {
	return i.ToNdbDbserverVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmPropertyArray) ToNdbDbserverVmPropertyArrayOutputWithContext(ctx context.Context) NdbDbserverVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPropertyArrayOutput)
}

type NdbDbserverVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmProperty)(nil)).Elem()
}

func (o NdbDbserverVmPropertyOutput) ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput {
	return o
}

func (o NdbDbserverVmPropertyOutput) ToNdbDbserverVmPropertyOutputWithContext(ctx context.Context) NdbDbserverVmPropertyOutput {
	return o
}

// name of the dbserver vm
func (o NdbDbserverVmPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmProperty)(nil)).Elem()
}

func (o NdbDbserverVmPropertyArrayOutput) ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput {
	return o
}

func (o NdbDbserverVmPropertyArrayOutput) ToNdbDbserverVmPropertyArrayOutputWithContext(ctx context.Context) NdbDbserverVmPropertyArrayOutput {
	return o
}

func (o NdbDbserverVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmProperty {
		return vs[0].([]NdbDbserverVmProperty)[vs[1].(int)]
	}).(NdbDbserverVmPropertyOutput)
}

type NdbDbserverVmTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDbserverVmTagInput is an input type that accepts NdbDbserverVmTagArgs and NdbDbserverVmTagOutput values.
// You can construct a concrete instance of `NdbDbserverVmTagInput` via:
//
//	NdbDbserverVmTagArgs{...}
type NdbDbserverVmTagInput interface {
	pulumi.Input

	ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput
	ToNdbDbserverVmTagOutputWithContext(context.Context) NdbDbserverVmTagOutput
}

type NdbDbserverVmTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDbserverVmTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmTag)(nil)).Elem()
}

func (i NdbDbserverVmTagArgs) ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput {
	return i.ToNdbDbserverVmTagOutputWithContext(context.Background())
}

func (i NdbDbserverVmTagArgs) ToNdbDbserverVmTagOutputWithContext(ctx context.Context) NdbDbserverVmTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmTagOutput)
}

// NdbDbserverVmTagArrayInput is an input type that accepts NdbDbserverVmTagArray and NdbDbserverVmTagArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmTagArrayInput` via:
//
//	NdbDbserverVmTagArray{ NdbDbserverVmTagArgs{...} }
type NdbDbserverVmTagArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput
	ToNdbDbserverVmTagArrayOutputWithContext(context.Context) NdbDbserverVmTagArrayOutput
}

type NdbDbserverVmTagArray []NdbDbserverVmTagInput

func (NdbDbserverVmTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmTag)(nil)).Elem()
}

func (i NdbDbserverVmTagArray) ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput {
	return i.ToNdbDbserverVmTagArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmTagArray) ToNdbDbserverVmTagArrayOutputWithContext(ctx context.Context) NdbDbserverVmTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmTagArrayOutput)
}

type NdbDbserverVmTagOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmTag)(nil)).Elem()
}

func (o NdbDbserverVmTagOutput) ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput {
	return o
}

func (o NdbDbserverVmTagOutput) ToNdbDbserverVmTagOutputWithContext(ctx context.Context) NdbDbserverVmTagOutput {
	return o
}

func (o NdbDbserverVmTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmTag)(nil)).Elem()
}

func (o NdbDbserverVmTagArrayOutput) ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput {
	return o
}

func (o NdbDbserverVmTagArrayOutput) ToNdbDbserverVmTagArrayOutputWithContext(ctx context.Context) NdbDbserverVmTagArrayOutput {
	return o
}

func (o NdbDbserverVmTagArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmTag {
		return vs[0].([]NdbDbserverVmTag)[vs[1].(int)]
	}).(NdbDbserverVmTagOutput)
}

type NdbLinkedDatabasesInfo struct {
	Infos      []NdbLinkedDatabasesInfoInfo `pulumi:"infos"`
	SecureInfo map[string]string            `pulumi:"secureInfo"`
}

// NdbLinkedDatabasesInfoInput is an input type that accepts NdbLinkedDatabasesInfoArgs and NdbLinkedDatabasesInfoOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInput` via:
//
//	NdbLinkedDatabasesInfoArgs{...}
type NdbLinkedDatabasesInfoInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput
	ToNdbLinkedDatabasesInfoOutputWithContext(context.Context) NdbLinkedDatabasesInfoOutput
}

type NdbLinkedDatabasesInfoArgs struct {
	Infos      NdbLinkedDatabasesInfoInfoArrayInput `pulumi:"infos"`
	SecureInfo pulumi.StringMapInput                `pulumi:"secureInfo"`
}

func (NdbLinkedDatabasesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoArgs) ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput {
	return i.ToNdbLinkedDatabasesInfoOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoArgs) ToNdbLinkedDatabasesInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoOutput)
}

// NdbLinkedDatabasesInfoArrayInput is an input type that accepts NdbLinkedDatabasesInfoArray and NdbLinkedDatabasesInfoArrayOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoArrayInput` via:
//
//	NdbLinkedDatabasesInfoArray{ NdbLinkedDatabasesInfoArgs{...} }
type NdbLinkedDatabasesInfoArrayInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput
	ToNdbLinkedDatabasesInfoArrayOutputWithContext(context.Context) NdbLinkedDatabasesInfoArrayOutput
}

type NdbLinkedDatabasesInfoArray []NdbLinkedDatabasesInfoInput

func (NdbLinkedDatabasesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoArray) ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput {
	return i.ToNdbLinkedDatabasesInfoArrayOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoArray) ToNdbLinkedDatabasesInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoArrayOutput)
}

type NdbLinkedDatabasesInfoOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoOutput) ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoOutput) ToNdbLinkedDatabasesInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoOutput) Infos() NdbLinkedDatabasesInfoInfoArrayOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfo) []NdbLinkedDatabasesInfoInfo { return v.Infos }).(NdbLinkedDatabasesInfoInfoArrayOutput)
}

func (o NdbLinkedDatabasesInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbLinkedDatabasesInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoArrayOutput) ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoArrayOutput) ToNdbLinkedDatabasesInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoArrayOutput) Index(i pulumi.IntInput) NdbLinkedDatabasesInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbLinkedDatabasesInfo {
		return vs[0].([]NdbLinkedDatabasesInfo)[vs[1].(int)]
	}).(NdbLinkedDatabasesInfoOutput)
}

type NdbLinkedDatabasesInfoInfo struct {
	CreatedBy *string `pulumi:"createdBy"`
}

// NdbLinkedDatabasesInfoInfoInput is an input type that accepts NdbLinkedDatabasesInfoInfoArgs and NdbLinkedDatabasesInfoInfoOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInfoInput` via:
//
//	NdbLinkedDatabasesInfoInfoArgs{...}
type NdbLinkedDatabasesInfoInfoInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput
	ToNdbLinkedDatabasesInfoInfoOutputWithContext(context.Context) NdbLinkedDatabasesInfoInfoOutput
}

type NdbLinkedDatabasesInfoInfoArgs struct {
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
}

func (NdbLinkedDatabasesInfoInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoInfoArgs) ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput {
	return i.ToNdbLinkedDatabasesInfoInfoOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoInfoArgs) ToNdbLinkedDatabasesInfoInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoInfoOutput)
}

// NdbLinkedDatabasesInfoInfoArrayInput is an input type that accepts NdbLinkedDatabasesInfoInfoArray and NdbLinkedDatabasesInfoInfoArrayOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInfoArrayInput` via:
//
//	NdbLinkedDatabasesInfoInfoArray{ NdbLinkedDatabasesInfoInfoArgs{...} }
type NdbLinkedDatabasesInfoInfoArrayInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput
	ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(context.Context) NdbLinkedDatabasesInfoInfoArrayOutput
}

type NdbLinkedDatabasesInfoInfoArray []NdbLinkedDatabasesInfoInfoInput

func (NdbLinkedDatabasesInfoInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoInfoArray) ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput {
	return i.ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoInfoArray) ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoInfoArrayOutput)
}

type NdbLinkedDatabasesInfoInfoOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoInfoOutput) ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoOutput) ToNdbLinkedDatabasesInfoInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfoInfo) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

type NdbLinkedDatabasesInfoInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) Index(i pulumi.IntInput) NdbLinkedDatabasesInfoInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbLinkedDatabasesInfoInfo {
		return vs[0].([]NdbLinkedDatabasesInfoInfo)[vs[1].(int)]
	}).(NdbLinkedDatabasesInfoInfoOutput)
}

type NdbMaintenanceTaskEntityTaskAssociation struct {
	// access level of tasks
	AccessLevel *string `pulumi:"accessLevel"`
	// created date of task
	DateCreated *string `pulumi:"dateCreated"`
	// modified date of task
	DateModified *string `pulumi:"dateModified"`
	// description of maintenance window
	Description *string `pulumi:"description"`
	Entity      *string `pulumi:"entity"`
	// entity id
	EntityId *string `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType *string `pulumi:"entityType"`
	// id of maintenance window
	Id *string `pulumi:"id"`
	// maintenance window id which has to be associated
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// maintenance window owner id
	MaintenanceWindowOwnerId *string `pulumi:"maintenanceWindowOwnerId"`
	// name of of maintenance window
	Name *string `pulumi:"name"`
	// owner id of task
	OwnerId *string `pulumi:"ownerId"`
	// list of pre post commands of OS or DB task
	Payloads []NdbMaintenanceTaskEntityTaskAssociationPayload `pulumi:"payloads"`
	// properties of task
	Properties []NdbMaintenanceTaskEntityTaskAssociationProperty `pulumi:"properties"`
	// status of task
	Status *string `pulumi:"status"`
	// tags of task
	Tags []NdbMaintenanceTaskEntityTaskAssociationTag `pulumi:"tags"`
	// type of the task. OS or DB
	TaskType *string `pulumi:"taskType"`
}

// NdbMaintenanceTaskEntityTaskAssociationInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationArgs and NdbMaintenanceTaskEntityTaskAssociationOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput
	ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput
}

type NdbMaintenanceTaskEntityTaskAssociationArgs struct {
	// access level of tasks
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// created date of task
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// modified date of task
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of maintenance window
	Description pulumi.StringPtrInput `pulumi:"description"`
	Entity      pulumi.StringPtrInput `pulumi:"entity"`
	// entity id
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// id of maintenance window
	Id pulumi.StringPtrInput `pulumi:"id"`
	// maintenance window id which has to be associated
	MaintenanceWindowId pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	// maintenance window owner id
	MaintenanceWindowOwnerId pulumi.StringPtrInput `pulumi:"maintenanceWindowOwnerId"`
	// name of of maintenance window
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner id of task
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// list of pre post commands of OS or DB task
	Payloads NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput `pulumi:"payloads"`
	// properties of task
	Properties NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput `pulumi:"properties"`
	// status of task
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags of task
	Tags NdbMaintenanceTaskEntityTaskAssociationTagArrayInput `pulumi:"tags"`
	// type of the task. OS or DB
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbMaintenanceTaskEntityTaskAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationArgs) ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationArgs) ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationArray and NdbMaintenanceTaskEntityTaskAssociationArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationArray{ NdbMaintenanceTaskEntityTaskAssociationArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationArray []NdbMaintenanceTaskEntityTaskAssociationInput

func (NdbMaintenanceTaskEntityTaskAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationArray) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationArray) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return o
}

// access level of tasks
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// created date of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// modified date of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// entity id
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// type of the entity. i.e. DBSERVER
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// id of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// maintenance window id which has to be associated
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

// maintenance window owner id
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) MaintenanceWindowOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.MaintenanceWindowOwnerId }).(pulumi.StringPtrOutput)
}

// name of of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner id of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// list of pre post commands of OS or DB task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Payloads() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationPayload {
		return v.Payloads
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput)
}

// properties of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Properties() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationProperty {
		return v.Properties
	}).(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput)
}

// status of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Tags() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationTag {
		return v.Tags
	}).(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput)
}

// type of the task. OS or DB
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociation {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociation)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayload struct {
	// Pre Post command of Task
	PrePostCommands []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand `pulumi:"prePostCommands"`
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadArgs and NdbMaintenanceTaskEntityTaskAssociationPayloadOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPayloadInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArgs struct {
	// Pre Post command of Task
	PrePostCommands NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput `pulumi:"prePostCommands"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadArray and NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadArray{ NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArray []NdbMaintenanceTaskEntityTaskAssociationPayloadInput

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return o
}

// Pre Post command of Task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) PrePostCommands() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayload) []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand {
		return v.PrePostCommands
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationPayload {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationPayload)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand struct {
	// post command of task
	PostCommand *string `pulumi:"postCommand"`
	// pre command of task
	PreCommand *string `pulumi:"preCommand"`
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs and NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs struct {
	// post command of task
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	// pre command of task
	PreCommand pulumi.StringPtrInput `pulumi:"preCommand"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray and NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray{ NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return o
}

// post command of task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

// pre command of task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationProperty struct {
	// name of of maintenance window
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceTaskEntityTaskAssociationPropertyInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPropertyArgs and NdbMaintenanceTaskEntityTaskAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPropertyInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArgs struct {
	// name of of maintenance window
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPropertyArray and NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPropertyArray{ NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArray []NdbMaintenanceTaskEntityTaskAssociationPropertyInput

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return o
}

// name of of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationProperty {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationProperty)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTag struct {
	// entity id
	EntityId *string `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceTaskEntityTaskAssociationTagInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationTagArgs and NdbMaintenanceTaskEntityTaskAssociationTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationTagInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationTagArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationTagInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput
	ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput
}

type NdbMaintenanceTaskEntityTaskAssociationTagArgs struct {
	// entity id
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceTaskEntityTaskAssociationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArgs) ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArgs) ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationTagOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationTagArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationTagArray and NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationTagArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationTagArray{ NdbMaintenanceTaskEntityTaskAssociationTagArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationTagArray []NdbMaintenanceTaskEntityTaskAssociationTagInput

func (NdbMaintenanceTaskEntityTaskAssociationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArray) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArray) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return o
}

// entity id
func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// type of the entity. i.e. DBSERVER
func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationTag {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationTag)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationTagOutput)
}

type NdbMaintenanceTaskTask struct {
	// command that you want to run after patching the OS/DB
	PostCommand *string `pulumi:"postCommand"`
	// command that you want to run before patching the OS/DB
	PreCommand *string `pulumi:"preCommand"`
	// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
	TaskType *string `pulumi:"taskType"`
}

// NdbMaintenanceTaskTaskInput is an input type that accepts NdbMaintenanceTaskTaskArgs and NdbMaintenanceTaskTaskOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskTaskInput` via:
//
//	NdbMaintenanceTaskTaskArgs{...}
type NdbMaintenanceTaskTaskInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput
	ToNdbMaintenanceTaskTaskOutputWithContext(context.Context) NdbMaintenanceTaskTaskOutput
}

type NdbMaintenanceTaskTaskArgs struct {
	// command that you want to run after patching the OS/DB
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	// command that you want to run before patching the OS/DB
	PreCommand pulumi.StringPtrInput `pulumi:"preCommand"`
	// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbMaintenanceTaskTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskTask)(nil)).Elem()
}

func (i NdbMaintenanceTaskTaskArgs) ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput {
	return i.ToNdbMaintenanceTaskTaskOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskTaskArgs) ToNdbMaintenanceTaskTaskOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskTaskOutput)
}

// NdbMaintenanceTaskTaskArrayInput is an input type that accepts NdbMaintenanceTaskTaskArray and NdbMaintenanceTaskTaskArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskTaskArrayInput` via:
//
//	NdbMaintenanceTaskTaskArray{ NdbMaintenanceTaskTaskArgs{...} }
type NdbMaintenanceTaskTaskArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput
	ToNdbMaintenanceTaskTaskArrayOutputWithContext(context.Context) NdbMaintenanceTaskTaskArrayOutput
}

type NdbMaintenanceTaskTaskArray []NdbMaintenanceTaskTaskInput

func (NdbMaintenanceTaskTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskTask)(nil)).Elem()
}

func (i NdbMaintenanceTaskTaskArray) ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput {
	return i.ToNdbMaintenanceTaskTaskArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskTaskArray) ToNdbMaintenanceTaskTaskArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskTaskArrayOutput)
}

type NdbMaintenanceTaskTaskOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskTask)(nil)).Elem()
}

func (o NdbMaintenanceTaskTaskOutput) ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput {
	return o
}

func (o NdbMaintenanceTaskTaskOutput) ToNdbMaintenanceTaskTaskOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskOutput {
	return o
}

// command that you want to run after patching the OS/DB
func (o NdbMaintenanceTaskTaskOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

// command that you want to run before patching the OS/DB
func (o NdbMaintenanceTaskTaskOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
func (o NdbMaintenanceTaskTaskOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskTaskArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskTask)(nil)).Elem()
}

func (o NdbMaintenanceTaskTaskArrayOutput) ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput {
	return o
}

func (o NdbMaintenanceTaskTaskArrayOutput) ToNdbMaintenanceTaskTaskArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskArrayOutput {
	return o
}

func (o NdbMaintenanceTaskTaskArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskTask {
		return vs[0].([]NdbMaintenanceTaskTask)[vs[1].(int)]
	}).(NdbMaintenanceTaskTaskOutput)
}

type NdbMaintenanceWindowEntityTaskAssoc struct {
	// access level
	AccessLevel *string `pulumi:"accessLevel"`
	// created date of maintenance window
	DateCreated *string `pulumi:"dateCreated"`
	// modified date of maintenance window
	DateModified *string `pulumi:"dateModified"`
	// Description for maintenance window
	Description              *string `pulumi:"description"`
	Entity                   *string `pulumi:"entity"`
	EntityId                 *string `pulumi:"entityId"`
	EntityType               *string `pulumi:"entityType"`
	Id                       *string `pulumi:"id"`
	MaintenanceWindowId      *string `pulumi:"maintenanceWindowId"`
	MaintenanceWindowOwnerId *string `pulumi:"maintenanceWindowOwnerId"`
	// Name for the maintenance window.
	Name *string `pulumi:"name"`
	// owner id of maintenance window
	OwnerId  *string                                      `pulumi:"ownerId"`
	Payloads []NdbMaintenanceWindowEntityTaskAssocPayload `pulumi:"payloads"`
	// properties of maintenance window
	Properties []NdbMaintenanceWindowEntityTaskAssocProperty `pulumi:"properties"`
	// status of maintennace window
	Status *string `pulumi:"status"`
	// tags of maintenance window
	Tags     []NdbMaintenanceWindowEntityTaskAssocTag `pulumi:"tags"`
	TaskType *string                                  `pulumi:"taskType"`
}

// NdbMaintenanceWindowEntityTaskAssocInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocArgs and NdbMaintenanceWindowEntityTaskAssocOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocArgs{...}
type NdbMaintenanceWindowEntityTaskAssocInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput
	ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocOutput
}

type NdbMaintenanceWindowEntityTaskAssocArgs struct {
	// access level
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// created date of maintenance window
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// modified date of maintenance window
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// Description for maintenance window
	Description              pulumi.StringPtrInput `pulumi:"description"`
	Entity                   pulumi.StringPtrInput `pulumi:"entity"`
	EntityId                 pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType               pulumi.StringPtrInput `pulumi:"entityType"`
	Id                       pulumi.StringPtrInput `pulumi:"id"`
	MaintenanceWindowId      pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	MaintenanceWindowOwnerId pulumi.StringPtrInput `pulumi:"maintenanceWindowOwnerId"`
	// Name for the maintenance window.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner id of maintenance window
	OwnerId  pulumi.StringPtrInput                                `pulumi:"ownerId"`
	Payloads NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput `pulumi:"payloads"`
	// properties of maintenance window
	Properties NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput `pulumi:"properties"`
	// status of maintennace window
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags of maintenance window
	Tags     NdbMaintenanceWindowEntityTaskAssocTagArrayInput `pulumi:"tags"`
	TaskType pulumi.StringPtrInput                            `pulumi:"taskType"`
}

func (NdbMaintenanceWindowEntityTaskAssocArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocArgs) ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocArgs) ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocOutput)
}

// NdbMaintenanceWindowEntityTaskAssocArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocArray and NdbMaintenanceWindowEntityTaskAssocArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocArray{ NdbMaintenanceWindowEntityTaskAssocArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocArray []NdbMaintenanceWindowEntityTaskAssocInput

func (NdbMaintenanceWindowEntityTaskAssocArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocArray) ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocArray) ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocOutput {
	return o
}

// access level
func (o NdbMaintenanceWindowEntityTaskAssocOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// created date of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// modified date of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// Description for maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) MaintenanceWindowOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.MaintenanceWindowOwnerId }).(pulumi.StringPtrOutput)
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner id of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Payloads() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocPayload {
		return v.Payloads
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput)
}

// properties of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Properties() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocProperty {
		return v.Properties
	}).(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput)
}

// status of maintennace window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Tags() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocTag { return v.Tags }).(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssoc {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssoc)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayload struct {
	PrePostCommands []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand `pulumi:"prePostCommands"`
}

// NdbMaintenanceWindowEntityTaskAssocPayloadInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadArgs and NdbMaintenanceWindowEntityTaskAssocPayloadOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPayloadInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArgs struct {
	PrePostCommands NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput `pulumi:"prePostCommands"`
}

func (NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadArray and NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadArray{ NdbMaintenanceWindowEntityTaskAssocPayloadArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArray []NdbMaintenanceWindowEntityTaskAssocPayloadInput

func (NdbMaintenanceWindowEntityTaskAssocPayloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) PrePostCommands() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayload) []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand {
		return v.PrePostCommands
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocPayload {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocPayload)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand struct {
	PostCommand *string `pulumi:"postCommand"`
	PreCommand  *string `pulumi:"preCommand"`
}

// NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs and NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs struct {
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	PreCommand  pulumi.StringPtrInput `pulumi:"preCommand"`
}

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray and NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray{ NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput)
}

type NdbMaintenanceWindowEntityTaskAssocProperty struct {
	// Name for the maintenance window.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceWindowEntityTaskAssocPropertyInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPropertyArgs and NdbMaintenanceWindowEntityTaskAssocPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPropertyInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPropertyArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput
	ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArgs struct {
	// Name for the maintenance window.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPropertyOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPropertyArray and NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPropertyArray{ NdbMaintenanceWindowEntityTaskAssocPropertyArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArray []NdbMaintenanceWindowEntityTaskAssocPropertyInput

func (NdbMaintenanceWindowEntityTaskAssocPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArray) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArray) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return o
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocProperty {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocProperty)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPropertyOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceWindowEntityTaskAssocTagInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocTagArgs and NdbMaintenanceWindowEntityTaskAssocTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocTagInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocTagArgs{...}
type NdbMaintenanceWindowEntityTaskAssocTagInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput
	ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput
}

type NdbMaintenanceWindowEntityTaskAssocTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowEntityTaskAssocTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArgs) ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArgs) ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocTagOutput)
}

// NdbMaintenanceWindowEntityTaskAssocTagArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocTagArray and NdbMaintenanceWindowEntityTaskAssocTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocTagArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocTagArray{ NdbMaintenanceWindowEntityTaskAssocTagArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocTagArray []NdbMaintenanceWindowEntityTaskAssocTagInput

func (NdbMaintenanceWindowEntityTaskAssocTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArray) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArray) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocTag {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocTag)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocTagOutput)
}

type NdbMaintenanceWindowProperty struct {
	// Name for the maintenance window.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceWindowPropertyInput is an input type that accepts NdbMaintenanceWindowPropertyArgs and NdbMaintenanceWindowPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowPropertyInput` via:
//
//	NdbMaintenanceWindowPropertyArgs{...}
type NdbMaintenanceWindowPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput
	ToNdbMaintenanceWindowPropertyOutputWithContext(context.Context) NdbMaintenanceWindowPropertyOutput
}

type NdbMaintenanceWindowPropertyArgs struct {
	// Name for the maintenance window.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowPropertyArgs) ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput {
	return i.ToNdbMaintenanceWindowPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowPropertyArgs) ToNdbMaintenanceWindowPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowPropertyOutput)
}

// NdbMaintenanceWindowPropertyArrayInput is an input type that accepts NdbMaintenanceWindowPropertyArray and NdbMaintenanceWindowPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowPropertyArrayInput` via:
//
//	NdbMaintenanceWindowPropertyArray{ NdbMaintenanceWindowPropertyArgs{...} }
type NdbMaintenanceWindowPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput
	ToNdbMaintenanceWindowPropertyArrayOutputWithContext(context.Context) NdbMaintenanceWindowPropertyArrayOutput
}

type NdbMaintenanceWindowPropertyArray []NdbMaintenanceWindowPropertyInput

func (NdbMaintenanceWindowPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowPropertyArray) ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput {
	return i.ToNdbMaintenanceWindowPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowPropertyArray) ToNdbMaintenanceWindowPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowPropertyArrayOutput)
}

type NdbMaintenanceWindowPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowPropertyOutput) ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyOutput) ToNdbMaintenanceWindowPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyOutput {
	return o
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowPropertyArrayOutput) ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyArrayOutput) ToNdbMaintenanceWindowPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowProperty {
		return vs[0].([]NdbMaintenanceWindowProperty)[vs[1].(int)]
	}).(NdbMaintenanceWindowPropertyOutput)
}

type NdbMaintenanceWindowSchedule struct {
	// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// duration in hours. Default is 2
	Duration *int `pulumi:"duration"`
	Hour     *int `pulumi:"hour"`
	Minute   *int `pulumi:"minute"`
	// Supported values [ MONTHLY, WEEKLY ]
	Recurrence *string `pulumi:"recurrence"`
	// start time for maintenance window to trigger
	StartTime *string `pulumi:"startTime"`
	Threshold *string `pulumi:"threshold"`
	// timezone . Default is Asia/Calcutta .
	Timezone *string `pulumi:"timezone"`
	// week of the month. Supports [1, 2, 3, 4] .
	WeekOfMonth *int `pulumi:"weekOfMonth"`
}

// NdbMaintenanceWindowScheduleInput is an input type that accepts NdbMaintenanceWindowScheduleArgs and NdbMaintenanceWindowScheduleOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowScheduleInput` via:
//
//	NdbMaintenanceWindowScheduleArgs{...}
type NdbMaintenanceWindowScheduleInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput
	ToNdbMaintenanceWindowScheduleOutputWithContext(context.Context) NdbMaintenanceWindowScheduleOutput
}

type NdbMaintenanceWindowScheduleArgs struct {
	// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// duration in hours. Default is 2
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	Hour     pulumi.IntPtrInput `pulumi:"hour"`
	Minute   pulumi.IntPtrInput `pulumi:"minute"`
	// Supported values [ MONTHLY, WEEKLY ]
	Recurrence pulumi.StringPtrInput `pulumi:"recurrence"`
	// start time for maintenance window to trigger
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// timezone . Default is Asia/Calcutta .
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// week of the month. Supports [1, 2, 3, 4] .
	WeekOfMonth pulumi.IntPtrInput `pulumi:"weekOfMonth"`
}

func (NdbMaintenanceWindowScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (i NdbMaintenanceWindowScheduleArgs) ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput {
	return i.ToNdbMaintenanceWindowScheduleOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowScheduleArgs) ToNdbMaintenanceWindowScheduleOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowScheduleOutput)
}

// NdbMaintenanceWindowScheduleArrayInput is an input type that accepts NdbMaintenanceWindowScheduleArray and NdbMaintenanceWindowScheduleArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowScheduleArrayInput` via:
//
//	NdbMaintenanceWindowScheduleArray{ NdbMaintenanceWindowScheduleArgs{...} }
type NdbMaintenanceWindowScheduleArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput
	ToNdbMaintenanceWindowScheduleArrayOutputWithContext(context.Context) NdbMaintenanceWindowScheduleArrayOutput
}

type NdbMaintenanceWindowScheduleArray []NdbMaintenanceWindowScheduleInput

func (NdbMaintenanceWindowScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (i NdbMaintenanceWindowScheduleArray) ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput {
	return i.ToNdbMaintenanceWindowScheduleArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowScheduleArray) ToNdbMaintenanceWindowScheduleArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowScheduleArrayOutput)
}

type NdbMaintenanceWindowScheduleOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (o NdbMaintenanceWindowScheduleOutput) ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleOutput) ToNdbMaintenanceWindowScheduleOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleOutput {
	return o
}

// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
func (o NdbMaintenanceWindowScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// duration in hours. Default is 2
func (o NdbMaintenanceWindowScheduleOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

// Supported values [ MONTHLY, WEEKLY ]
func (o NdbMaintenanceWindowScheduleOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Recurrence }).(pulumi.StringPtrOutput)
}

// start time for maintenance window to trigger
func (o NdbMaintenanceWindowScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// timezone . Default is Asia/Calcutta .
func (o NdbMaintenanceWindowScheduleOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// week of the month. Supports [1, 2, 3, 4] .
func (o NdbMaintenanceWindowScheduleOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.WeekOfMonth }).(pulumi.IntPtrOutput)
}

type NdbMaintenanceWindowScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (o NdbMaintenanceWindowScheduleArrayOutput) ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleArrayOutput) ToNdbMaintenanceWindowScheduleArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleArrayOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowSchedule {
		return vs[0].([]NdbMaintenanceWindowSchedule)[vs[1].(int)]
	}).(NdbMaintenanceWindowScheduleOutput)
}

type NdbMaintenanceWindowTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceWindowTagInput is an input type that accepts NdbMaintenanceWindowTagArgs and NdbMaintenanceWindowTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowTagInput` via:
//
//	NdbMaintenanceWindowTagArgs{...}
type NdbMaintenanceWindowTagInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput
	ToNdbMaintenanceWindowTagOutputWithContext(context.Context) NdbMaintenanceWindowTagOutput
}

type NdbMaintenanceWindowTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowTagArgs) ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput {
	return i.ToNdbMaintenanceWindowTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowTagArgs) ToNdbMaintenanceWindowTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowTagOutput)
}

// NdbMaintenanceWindowTagArrayInput is an input type that accepts NdbMaintenanceWindowTagArray and NdbMaintenanceWindowTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowTagArrayInput` via:
//
//	NdbMaintenanceWindowTagArray{ NdbMaintenanceWindowTagArgs{...} }
type NdbMaintenanceWindowTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput
	ToNdbMaintenanceWindowTagArrayOutputWithContext(context.Context) NdbMaintenanceWindowTagArrayOutput
}

type NdbMaintenanceWindowTagArray []NdbMaintenanceWindowTagInput

func (NdbMaintenanceWindowTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowTagArray) ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput {
	return i.ToNdbMaintenanceWindowTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowTagArray) ToNdbMaintenanceWindowTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowTagArrayOutput)
}

type NdbMaintenanceWindowTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowTagOutput) ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput {
	return o
}

func (o NdbMaintenanceWindowTagOutput) ToNdbMaintenanceWindowTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagOutput {
	return o
}

func (o NdbMaintenanceWindowTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowTagArrayOutput) ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowTagArrayOutput) ToNdbMaintenanceWindowTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowTag {
		return vs[0].([]NdbMaintenanceWindowTag)[vs[1].(int)]
	}).(NdbMaintenanceWindowTagOutput)
}

type NdbNetworkIpPool struct {
	Addresses []NdbNetworkIpPoolAddress `pulumi:"addresses"`
	// ending IP address range for new database servers
	EndIp      *string `pulumi:"endIp"`
	Id         *string `pulumi:"id"`
	ModifiedBy *string `pulumi:"modifiedBy"`
	// starting IP address range for new database servers
	StartIp *string `pulumi:"startIp"`
}

// NdbNetworkIpPoolInput is an input type that accepts NdbNetworkIpPoolArgs and NdbNetworkIpPoolOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolInput` via:
//
//	NdbNetworkIpPoolArgs{...}
type NdbNetworkIpPoolInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput
	ToNdbNetworkIpPoolOutputWithContext(context.Context) NdbNetworkIpPoolOutput
}

type NdbNetworkIpPoolArgs struct {
	Addresses NdbNetworkIpPoolAddressArrayInput `pulumi:"addresses"`
	// ending IP address range for new database servers
	EndIp      pulumi.StringPtrInput `pulumi:"endIp"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	ModifiedBy pulumi.StringPtrInput `pulumi:"modifiedBy"`
	// starting IP address range for new database servers
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (NdbNetworkIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPool)(nil)).Elem()
}

func (i NdbNetworkIpPoolArgs) ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput {
	return i.ToNdbNetworkIpPoolOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolArgs) ToNdbNetworkIpPoolOutputWithContext(ctx context.Context) NdbNetworkIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolOutput)
}

// NdbNetworkIpPoolArrayInput is an input type that accepts NdbNetworkIpPoolArray and NdbNetworkIpPoolArrayOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolArrayInput` via:
//
//	NdbNetworkIpPoolArray{ NdbNetworkIpPoolArgs{...} }
type NdbNetworkIpPoolArrayInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput
	ToNdbNetworkIpPoolArrayOutputWithContext(context.Context) NdbNetworkIpPoolArrayOutput
}

type NdbNetworkIpPoolArray []NdbNetworkIpPoolInput

func (NdbNetworkIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPool)(nil)).Elem()
}

func (i NdbNetworkIpPoolArray) ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput {
	return i.ToNdbNetworkIpPoolArrayOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolArray) ToNdbNetworkIpPoolArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolArrayOutput)
}

type NdbNetworkIpPoolOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPool)(nil)).Elem()
}

func (o NdbNetworkIpPoolOutput) ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput {
	return o
}

func (o NdbNetworkIpPoolOutput) ToNdbNetworkIpPoolOutputWithContext(ctx context.Context) NdbNetworkIpPoolOutput {
	return o
}

func (o NdbNetworkIpPoolOutput) Addresses() NdbNetworkIpPoolAddressArrayOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) []NdbNetworkIpPoolAddress { return v.Addresses }).(NdbNetworkIpPoolAddressArrayOutput)
}

// ending IP address range for new database servers
func (o NdbNetworkIpPoolOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolOutput) ModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.ModifiedBy }).(pulumi.StringPtrOutput)
}

// starting IP address range for new database servers
func (o NdbNetworkIpPoolOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type NdbNetworkIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPool)(nil)).Elem()
}

func (o NdbNetworkIpPoolArrayOutput) ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput {
	return o
}

func (o NdbNetworkIpPoolArrayOutput) ToNdbNetworkIpPoolArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolArrayOutput {
	return o
}

func (o NdbNetworkIpPoolArrayOutput) Index(i pulumi.IntInput) NdbNetworkIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkIpPool {
		return vs[0].([]NdbNetworkIpPool)[vs[1].(int)]
	}).(NdbNetworkIpPoolOutput)
}

type NdbNetworkIpPoolAddress struct {
	Ip     *string `pulumi:"ip"`
	Status *string `pulumi:"status"`
}

// NdbNetworkIpPoolAddressInput is an input type that accepts NdbNetworkIpPoolAddressArgs and NdbNetworkIpPoolAddressOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolAddressInput` via:
//
//	NdbNetworkIpPoolAddressArgs{...}
type NdbNetworkIpPoolAddressInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput
	ToNdbNetworkIpPoolAddressOutputWithContext(context.Context) NdbNetworkIpPoolAddressOutput
}

type NdbNetworkIpPoolAddressArgs struct {
	Ip     pulumi.StringPtrInput `pulumi:"ip"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbNetworkIpPoolAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (i NdbNetworkIpPoolAddressArgs) ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput {
	return i.ToNdbNetworkIpPoolAddressOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolAddressArgs) ToNdbNetworkIpPoolAddressOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolAddressOutput)
}

// NdbNetworkIpPoolAddressArrayInput is an input type that accepts NdbNetworkIpPoolAddressArray and NdbNetworkIpPoolAddressArrayOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolAddressArrayInput` via:
//
//	NdbNetworkIpPoolAddressArray{ NdbNetworkIpPoolAddressArgs{...} }
type NdbNetworkIpPoolAddressArrayInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput
	ToNdbNetworkIpPoolAddressArrayOutputWithContext(context.Context) NdbNetworkIpPoolAddressArrayOutput
}

type NdbNetworkIpPoolAddressArray []NdbNetworkIpPoolAddressInput

func (NdbNetworkIpPoolAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (i NdbNetworkIpPoolAddressArray) ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput {
	return i.ToNdbNetworkIpPoolAddressArrayOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolAddressArray) ToNdbNetworkIpPoolAddressArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolAddressArrayOutput)
}

type NdbNetworkIpPoolAddressOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (o NdbNetworkIpPoolAddressOutput) ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput {
	return o
}

func (o NdbNetworkIpPoolAddressOutput) ToNdbNetworkIpPoolAddressOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressOutput {
	return o
}

func (o NdbNetworkIpPoolAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPoolAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolAddressOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPoolAddress) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbNetworkIpPoolAddressArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (o NdbNetworkIpPoolAddressArrayOutput) ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput {
	return o
}

func (o NdbNetworkIpPoolAddressArrayOutput) ToNdbNetworkIpPoolAddressArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressArrayOutput {
	return o
}

func (o NdbNetworkIpPoolAddressArrayOutput) Index(i pulumi.IntInput) NdbNetworkIpPoolAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkIpPoolAddress {
		return vs[0].([]NdbNetworkIpPoolAddress)[vs[1].(int)]
	}).(NdbNetworkIpPoolAddressOutput)
}

type NdbNetworkPropertiesMap struct {
	VlanGateway      *string `pulumi:"vlanGateway"`
	VlanPrimaryDns   *string `pulumi:"vlanPrimaryDns"`
	VlanSecondaryDns *string `pulumi:"vlanSecondaryDns"`
	VlanSubnetMask   *string `pulumi:"vlanSubnetMask"`
}

// NdbNetworkPropertiesMapInput is an input type that accepts NdbNetworkPropertiesMap and NdbNetworkPropertiesMapOutput values.
// You can construct a concrete instance of `NdbNetworkPropertiesMapInput` via:
//
//	NdbNetworkPropertiesMap{ "key": NdbNetworkPropertiesArgs{...} }
type NdbNetworkPropertiesMapInput interface {
	pulumi.Input

	ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput
	ToNdbNetworkPropertiesMapOutputWithContext(context.Context) NdbNetworkPropertiesMapOutput
}

type NdbNetworkPropertiesMapArgs struct {
	VlanGateway      pulumi.StringPtrInput `pulumi:"vlanGateway"`
	VlanPrimaryDns   pulumi.StringPtrInput `pulumi:"vlanPrimaryDns"`
	VlanSecondaryDns pulumi.StringPtrInput `pulumi:"vlanSecondaryDns"`
	VlanSubnetMask   pulumi.StringPtrInput `pulumi:"vlanSubnetMask"`
}

func (NdbNetworkPropertiesMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkPropertiesMap)(nil)).Elem()
}

func (i NdbNetworkPropertiesMapArgs) ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput {
	return i.ToNdbNetworkPropertiesMapOutputWithContext(context.Background())
}

func (i NdbNetworkPropertiesMapArgs) ToNdbNetworkPropertiesMapOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertiesMapOutput)
}

// NdbNetworkPropertiesMapArrayInput is an input type that accepts NdbNetworkPropertiesMapArray and NdbNetworkPropertiesMapArrayOutput values.
// You can construct a concrete instance of `NdbNetworkPropertiesMapArrayInput` via:
//
//	NdbNetworkPropertiesMapArray{ NdbNetworkPropertiesMapArgs{...} }
type NdbNetworkPropertiesMapArrayInput interface {
	pulumi.Input

	ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput
	ToNdbNetworkPropertiesMapArrayOutputWithContext(context.Context) NdbNetworkPropertiesMapArrayOutput
}

type NdbNetworkPropertiesMapArray []NdbNetworkPropertiesMapInput

func (NdbNetworkPropertiesMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkPropertiesMap)(nil)).Elem()
}

func (i NdbNetworkPropertiesMapArray) ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput {
	return i.ToNdbNetworkPropertiesMapArrayOutputWithContext(context.Background())
}

func (i NdbNetworkPropertiesMapArray) ToNdbNetworkPropertiesMapArrayOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertiesMapArrayOutput)
}

type NdbNetworkPropertiesMapOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkPropertiesMap)(nil)).Elem()
}

func (o NdbNetworkPropertiesMapOutput) ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput {
	return o
}

func (o NdbNetworkPropertiesMapOutput) ToNdbNetworkPropertiesMapOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapOutput {
	return o
}

func (o NdbNetworkPropertiesMapOutput) VlanGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanGateway }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanPrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanPrimaryDns }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanSecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanSecondaryDns }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanSubnetMask }).(pulumi.StringPtrOutput)
}

type NdbNetworkPropertiesMapArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertiesMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkPropertiesMap)(nil)).Elem()
}

func (o NdbNetworkPropertiesMapArrayOutput) ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput {
	return o
}

func (o NdbNetworkPropertiesMapArrayOutput) ToNdbNetworkPropertiesMapArrayOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapArrayOutput {
	return o
}

func (o NdbNetworkPropertiesMapArrayOutput) Index(i pulumi.IntInput) NdbNetworkPropertiesMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkPropertiesMap {
		return vs[0].([]NdbNetworkPropertiesMap)[vs[1].(int)]
	}).(NdbNetworkPropertiesMapOutput)
}

type NdbNetworkProperty struct {
	// Name of the vlan to be attached in NDB
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbNetworkPropertyInput is an input type that accepts NdbNetworkPropertyArgs and NdbNetworkPropertyOutput values.
// You can construct a concrete instance of `NdbNetworkPropertyInput` via:
//
//	NdbNetworkPropertyArgs{...}
type NdbNetworkPropertyInput interface {
	pulumi.Input

	ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput
	ToNdbNetworkPropertyOutputWithContext(context.Context) NdbNetworkPropertyOutput
}

type NdbNetworkPropertyArgs struct {
	// Name of the vlan to be attached in NDB
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbNetworkPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkProperty)(nil)).Elem()
}

func (i NdbNetworkPropertyArgs) ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput {
	return i.ToNdbNetworkPropertyOutputWithContext(context.Background())
}

func (i NdbNetworkPropertyArgs) ToNdbNetworkPropertyOutputWithContext(ctx context.Context) NdbNetworkPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertyOutput)
}

// NdbNetworkPropertyArrayInput is an input type that accepts NdbNetworkPropertyArray and NdbNetworkPropertyArrayOutput values.
// You can construct a concrete instance of `NdbNetworkPropertyArrayInput` via:
//
//	NdbNetworkPropertyArray{ NdbNetworkPropertyArgs{...} }
type NdbNetworkPropertyArrayInput interface {
	pulumi.Input

	ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput
	ToNdbNetworkPropertyArrayOutputWithContext(context.Context) NdbNetworkPropertyArrayOutput
}

type NdbNetworkPropertyArray []NdbNetworkPropertyInput

func (NdbNetworkPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkProperty)(nil)).Elem()
}

func (i NdbNetworkPropertyArray) ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput {
	return i.ToNdbNetworkPropertyArrayOutputWithContext(context.Background())
}

func (i NdbNetworkPropertyArray) ToNdbNetworkPropertyArrayOutputWithContext(ctx context.Context) NdbNetworkPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertyArrayOutput)
}

type NdbNetworkPropertyOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkProperty)(nil)).Elem()
}

func (o NdbNetworkPropertyOutput) ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput {
	return o
}

func (o NdbNetworkPropertyOutput) ToNdbNetworkPropertyOutputWithContext(ctx context.Context) NdbNetworkPropertyOutput {
	return o
}

// Name of the vlan to be attached in NDB
func (o NdbNetworkPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbNetworkPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbNetworkPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkProperty)(nil)).Elem()
}

func (o NdbNetworkPropertyArrayOutput) ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput {
	return o
}

func (o NdbNetworkPropertyArrayOutput) ToNdbNetworkPropertyArrayOutputWithContext(ctx context.Context) NdbNetworkPropertyArrayOutput {
	return o
}

func (o NdbNetworkPropertyArrayOutput) Index(i pulumi.IntInput) NdbNetworkPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkProperty {
		return vs[0].([]NdbNetworkProperty)[vs[1].(int)]
	}).(NdbNetworkPropertyOutput)
}

type NdbProfileClusterAvailability struct {
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId *string `pulumi:"nxClusterId"`
	OwnerId     *string `pulumi:"ownerId"`
	ProfileId   *string `pulumi:"profileId"`
	// status of profile
	Status *string `pulumi:"status"`
}

// NdbProfileClusterAvailabilityInput is an input type that accepts NdbProfileClusterAvailabilityArgs and NdbProfileClusterAvailabilityOutput values.
// You can construct a concrete instance of `NdbProfileClusterAvailabilityInput` via:
//
//	NdbProfileClusterAvailabilityArgs{...}
type NdbProfileClusterAvailabilityInput interface {
	pulumi.Input

	ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput
	ToNdbProfileClusterAvailabilityOutputWithContext(context.Context) NdbProfileClusterAvailabilityOutput
}

type NdbProfileClusterAvailabilityArgs struct {
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	ProfileId   pulumi.StringPtrInput `pulumi:"profileId"`
	// status of profile
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbProfileClusterAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileClusterAvailability)(nil)).Elem()
}

func (i NdbProfileClusterAvailabilityArgs) ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput {
	return i.ToNdbProfileClusterAvailabilityOutputWithContext(context.Background())
}

func (i NdbProfileClusterAvailabilityArgs) ToNdbProfileClusterAvailabilityOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileClusterAvailabilityOutput)
}

// NdbProfileClusterAvailabilityArrayInput is an input type that accepts NdbProfileClusterAvailabilityArray and NdbProfileClusterAvailabilityArrayOutput values.
// You can construct a concrete instance of `NdbProfileClusterAvailabilityArrayInput` via:
//
//	NdbProfileClusterAvailabilityArray{ NdbProfileClusterAvailabilityArgs{...} }
type NdbProfileClusterAvailabilityArrayInput interface {
	pulumi.Input

	ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput
	ToNdbProfileClusterAvailabilityArrayOutputWithContext(context.Context) NdbProfileClusterAvailabilityArrayOutput
}

type NdbProfileClusterAvailabilityArray []NdbProfileClusterAvailabilityInput

func (NdbProfileClusterAvailabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileClusterAvailability)(nil)).Elem()
}

func (i NdbProfileClusterAvailabilityArray) ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput {
	return i.ToNdbProfileClusterAvailabilityArrayOutputWithContext(context.Background())
}

func (i NdbProfileClusterAvailabilityArray) ToNdbProfileClusterAvailabilityArrayOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileClusterAvailabilityArrayOutput)
}

type NdbProfileClusterAvailabilityOutput struct{ *pulumi.OutputState }

func (NdbProfileClusterAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileClusterAvailability)(nil)).Elem()
}

func (o NdbProfileClusterAvailabilityOutput) ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput {
	return o
}

func (o NdbProfileClusterAvailabilityOutput) ToNdbProfileClusterAvailabilityOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityOutput {
	return o
}

func (o NdbProfileClusterAvailabilityOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// cluster on which profile created
func (o NdbProfileClusterAvailabilityOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// status of profile
func (o NdbProfileClusterAvailabilityOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbProfileClusterAvailabilityArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileClusterAvailabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileClusterAvailability)(nil)).Elem()
}

func (o NdbProfileClusterAvailabilityArrayOutput) ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput {
	return o
}

func (o NdbProfileClusterAvailabilityArrayOutput) ToNdbProfileClusterAvailabilityArrayOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityArrayOutput {
	return o
}

func (o NdbProfileClusterAvailabilityArrayOutput) Index(i pulumi.IntInput) NdbProfileClusterAvailabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileClusterAvailability {
		return vs[0].([]NdbProfileClusterAvailability)[vs[1].(int)]
	}).(NdbProfileClusterAvailabilityOutput)
}

type NdbProfileComputeProfile struct {
	// number of cores per vCPU for the database server VM.
	CorePerCpu *string `pulumi:"corePerCpu"`
	// number of vCPUs for the database server VM.
	Cpus *string `pulumi:"cpus"`
	// amount of memory for the database server VM.
	MemorySize *string `pulumi:"memorySize"`
}

// NdbProfileComputeProfileInput is an input type that accepts NdbProfileComputeProfileArgs and NdbProfileComputeProfileOutput values.
// You can construct a concrete instance of `NdbProfileComputeProfileInput` via:
//
//	NdbProfileComputeProfileArgs{...}
type NdbProfileComputeProfileInput interface {
	pulumi.Input

	ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput
	ToNdbProfileComputeProfileOutputWithContext(context.Context) NdbProfileComputeProfileOutput
}

type NdbProfileComputeProfileArgs struct {
	// number of cores per vCPU for the database server VM.
	CorePerCpu pulumi.StringPtrInput `pulumi:"corePerCpu"`
	// number of vCPUs for the database server VM.
	Cpus pulumi.StringPtrInput `pulumi:"cpus"`
	// amount of memory for the database server VM.
	MemorySize pulumi.StringPtrInput `pulumi:"memorySize"`
}

func (NdbProfileComputeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileComputeProfile)(nil)).Elem()
}

func (i NdbProfileComputeProfileArgs) ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput {
	return i.ToNdbProfileComputeProfileOutputWithContext(context.Background())
}

func (i NdbProfileComputeProfileArgs) ToNdbProfileComputeProfileOutputWithContext(ctx context.Context) NdbProfileComputeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileComputeProfileOutput)
}

// NdbProfileComputeProfileArrayInput is an input type that accepts NdbProfileComputeProfileArray and NdbProfileComputeProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileComputeProfileArrayInput` via:
//
//	NdbProfileComputeProfileArray{ NdbProfileComputeProfileArgs{...} }
type NdbProfileComputeProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput
	ToNdbProfileComputeProfileArrayOutputWithContext(context.Context) NdbProfileComputeProfileArrayOutput
}

type NdbProfileComputeProfileArray []NdbProfileComputeProfileInput

func (NdbProfileComputeProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileComputeProfile)(nil)).Elem()
}

func (i NdbProfileComputeProfileArray) ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput {
	return i.ToNdbProfileComputeProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileComputeProfileArray) ToNdbProfileComputeProfileArrayOutputWithContext(ctx context.Context) NdbProfileComputeProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileComputeProfileArrayOutput)
}

type NdbProfileComputeProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileComputeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileComputeProfile)(nil)).Elem()
}

func (o NdbProfileComputeProfileOutput) ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput {
	return o
}

func (o NdbProfileComputeProfileOutput) ToNdbProfileComputeProfileOutputWithContext(ctx context.Context) NdbProfileComputeProfileOutput {
	return o
}

// number of cores per vCPU for the database server VM.
func (o NdbProfileComputeProfileOutput) CorePerCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.CorePerCpu }).(pulumi.StringPtrOutput)
}

// number of vCPUs for the database server VM.
func (o NdbProfileComputeProfileOutput) Cpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.Cpus }).(pulumi.StringPtrOutput)
}

// amount of memory for the database server VM.
func (o NdbProfileComputeProfileOutput) MemorySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.MemorySize }).(pulumi.StringPtrOutput)
}

type NdbProfileComputeProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileComputeProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileComputeProfile)(nil)).Elem()
}

func (o NdbProfileComputeProfileArrayOutput) ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput {
	return o
}

func (o NdbProfileComputeProfileArrayOutput) ToNdbProfileComputeProfileArrayOutputWithContext(ctx context.Context) NdbProfileComputeProfileArrayOutput {
	return o
}

func (o NdbProfileComputeProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileComputeProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileComputeProfile {
		return vs[0].([]NdbProfileComputeProfile)[vs[1].(int)]
	}).(NdbProfileComputeProfileOutput)
}

type NdbProfileDatabaseParameterProfile struct {
	// Database parameters suuported for postgress.
	// * `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
	// * `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
	// * `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
	// * `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
	// * `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
	// * `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
	// * `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
	// * `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
	// * `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
	// * `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
	// * `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
	// * `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
	// * `postgres_database.checkpoint_completion_target`: (Optional)
	//   Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
	// * `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
	// * `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
	// * `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
	// * `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
	// * `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
	// * `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
	// * `postgres_database.wal_buffers`: (Optional)
	//   Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
	// * `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
	// * `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
	// * `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
	PostgresDatabases []NdbProfileDatabaseParameterProfilePostgresDatabase `pulumi:"postgresDatabases"`
}

// NdbProfileDatabaseParameterProfileInput is an input type that accepts NdbProfileDatabaseParameterProfileArgs and NdbProfileDatabaseParameterProfileOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfileInput` via:
//
//	NdbProfileDatabaseParameterProfileArgs{...}
type NdbProfileDatabaseParameterProfileInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput
	ToNdbProfileDatabaseParameterProfileOutputWithContext(context.Context) NdbProfileDatabaseParameterProfileOutput
}

type NdbProfileDatabaseParameterProfileArgs struct {
	// Database parameters suuported for postgress.
	// * `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
	// * `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
	// * `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
	// * `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
	// * `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
	// * `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
	// * `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
	// * `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
	// * `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
	// * `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
	// * `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
	// * `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
	// * `postgres_database.checkpoint_completion_target`: (Optional)
	//   Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
	// * `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
	// * `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
	// * `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
	// * `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
	// * `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
	// * `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
	// * `postgres_database.wal_buffers`: (Optional)
	//   Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
	// * `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
	// * `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
	// * `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
	PostgresDatabases NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
}

func (NdbProfileDatabaseParameterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfileArgs) ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput {
	return i.ToNdbProfileDatabaseParameterProfileOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfileArgs) ToNdbProfileDatabaseParameterProfileOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfileOutput)
}

// NdbProfileDatabaseParameterProfileArrayInput is an input type that accepts NdbProfileDatabaseParameterProfileArray and NdbProfileDatabaseParameterProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfileArrayInput` via:
//
//	NdbProfileDatabaseParameterProfileArray{ NdbProfileDatabaseParameterProfileArgs{...} }
type NdbProfileDatabaseParameterProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput
	ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(context.Context) NdbProfileDatabaseParameterProfileArrayOutput
}

type NdbProfileDatabaseParameterProfileArray []NdbProfileDatabaseParameterProfileInput

func (NdbProfileDatabaseParameterProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfileArray) ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput {
	return i.ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfileArray) ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfileArrayOutput)
}

type NdbProfileDatabaseParameterProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfileOutput) ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileOutput) ToNdbProfileDatabaseParameterProfileOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileOutput {
	return o
}

// Database parameters suuported for postgress.
//   - `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
//   - `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
//   - `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
//   - `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
//   - `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
//   - `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
//   - `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
//   - `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
//   - `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
//   - `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
//   - `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
//   - `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
//   - `postgres_database.checkpoint_completion_target`: (Optional)
//     Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
//   - `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
//   - `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
//   - `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
//   - `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
//   - `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
//   - `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
//   - `postgres_database.wal_buffers`: (Optional)
//     Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
//   - `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
//   - `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
//   - `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
func (o NdbProfileDatabaseParameterProfileOutput) PostgresDatabases() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfile) []NdbProfileDatabaseParameterProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput)
}

type NdbProfileDatabaseParameterProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileDatabaseParameterProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileDatabaseParameterProfile {
		return vs[0].([]NdbProfileDatabaseParameterProfile)[vs[1].(int)]
	}).(NdbProfileDatabaseParameterProfileOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabase struct {
	Autovacuum                  *string `pulumi:"autovacuum"`
	AutovacuumFreezeMaxAge      *string `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers        *string `pulumi:"autovacuumMaxWorkers"`
	AutovacuumVacuumCostDelay   *string `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumScaleFactor *string `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold   *string `pulumi:"autovacuumVacuumThreshold"`
	AutovacuumWorkMem           *string `pulumi:"autovacuumWorkMem"`
	CheckpointCompletionTarget  *string `pulumi:"checkpointCompletionTarget"`
	CheckpointTimeout           *string `pulumi:"checkpointTimeout"`
	EffectiveIoConcurrency      *string `pulumi:"effectiveIoConcurrency"`
	MaxConnections              *string `pulumi:"maxConnections"`
	MaxLocksPerTransaction      *string `pulumi:"maxLocksPerTransaction"`
	MaxPreparedTransactions     *string `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots         *string `pulumi:"maxReplicationSlots"`
	MaxWalSenders               *string `pulumi:"maxWalSenders"`
	MaxWalSize                  *string `pulumi:"maxWalSize"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	MinWalSize                  *string `pulumi:"minWalSize"`
	RandomPageCost              *string `pulumi:"randomPageCost"`
	SynchronousCommit           *string `pulumi:"synchronousCommit"`
	Timezone                    *string `pulumi:"timezone"`
	WalBuffers                  *string `pulumi:"walBuffers"`
	WalKeepSegments             *string `pulumi:"walKeepSegments"`
}

// NdbProfileDatabaseParameterProfilePostgresDatabaseInput is an input type that accepts NdbProfileDatabaseParameterProfilePostgresDatabaseArgs and NdbProfileDatabaseParameterProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfilePostgresDatabaseInput` via:
//
//	NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{...}
type NdbProfileDatabaseParameterProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput
	ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArgs struct {
	Autovacuum                  pulumi.StringPtrInput `pulumi:"autovacuum"`
	AutovacuumFreezeMaxAge      pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers        pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	AutovacuumVacuumCostDelay   pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold   pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	AutovacuumWorkMem           pulumi.StringPtrInput `pulumi:"autovacuumWorkMem"`
	CheckpointCompletionTarget  pulumi.StringPtrInput `pulumi:"checkpointCompletionTarget"`
	CheckpointTimeout           pulumi.StringPtrInput `pulumi:"checkpointTimeout"`
	EffectiveIoConcurrency      pulumi.StringPtrInput `pulumi:"effectiveIoConcurrency"`
	MaxConnections              pulumi.StringPtrInput `pulumi:"maxConnections"`
	MaxLocksPerTransaction      pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	MaxPreparedTransactions     pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots         pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	MaxWalSenders               pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	MaxWalSize                  pulumi.StringPtrInput `pulumi:"maxWalSize"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	MinWalSize                  pulumi.StringPtrInput `pulumi:"minWalSize"`
	RandomPageCost              pulumi.StringPtrInput `pulumi:"randomPageCost"`
	SynchronousCommit           pulumi.StringPtrInput `pulumi:"synchronousCommit"`
	Timezone                    pulumi.StringPtrInput `pulumi:"timezone"`
	WalBuffers                  pulumi.StringPtrInput `pulumi:"walBuffers"`
	WalKeepSegments             pulumi.StringPtrInput `pulumi:"walKeepSegments"`
}

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return i.ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput)
}

// NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileDatabaseParameterProfilePostgresDatabaseArray and NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileDatabaseParameterProfilePostgresDatabaseArray{ NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{...} }
type NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput
	ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArray []NdbProfileDatabaseParameterProfilePostgresDatabaseInput

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) Autovacuum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.Autovacuum }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string {
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) CheckpointCompletionTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string {
		return v.CheckpointCompletionTarget
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) CheckpointTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.CheckpointTimeout }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) EffectiveIoConcurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.EffectiveIoConcurrency }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxConnections }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWalSize }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MinWalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MinWalSize }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) RandomPageCost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.RandomPageCost }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) SynchronousCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.SynchronousCommit }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) WalBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.WalBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) WalKeepSegments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.WalKeepSegments }).(pulumi.StringPtrOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileDatabaseParameterProfilePostgresDatabase {
		return vs[0].([]NdbProfileDatabaseParameterProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput)
}

type NdbProfileNetworkProfile struct {
	// Postgres Info to create network profile
	//
	// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
	// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
	// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
	//
	// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
	// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
	// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
	// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
	// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
	PostgresDatabases []NdbProfileNetworkProfilePostgresDatabase `pulumi:"postgresDatabases"`
	// Topology supported for network profile. Allowed values are "cluster" and "single"
	Topology string `pulumi:"topology"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations []NdbProfileNetworkProfileVersionClusterAssociation `pulumi:"versionClusterAssociations"`
}

// NdbProfileNetworkProfileInput is an input type that accepts NdbProfileNetworkProfileArgs and NdbProfileNetworkProfileOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileInput` via:
//
//	NdbProfileNetworkProfileArgs{...}
type NdbProfileNetworkProfileInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput
	ToNdbProfileNetworkProfileOutputWithContext(context.Context) NdbProfileNetworkProfileOutput
}

type NdbProfileNetworkProfileArgs struct {
	// Postgres Info to create network profile
	//
	// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
	// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
	// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
	//
	// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
	// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
	// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
	// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
	// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
	PostgresDatabases NdbProfileNetworkProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
	// Topology supported for network profile. Allowed values are "cluster" and "single"
	Topology pulumi.StringInput `pulumi:"topology"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations NdbProfileNetworkProfileVersionClusterAssociationArrayInput `pulumi:"versionClusterAssociations"`
}

func (NdbProfileNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfile)(nil)).Elem()
}

func (i NdbProfileNetworkProfileArgs) ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput {
	return i.ToNdbProfileNetworkProfileOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileArgs) ToNdbProfileNetworkProfileOutputWithContext(ctx context.Context) NdbProfileNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileOutput)
}

// NdbProfileNetworkProfileArrayInput is an input type that accepts NdbProfileNetworkProfileArray and NdbProfileNetworkProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileArrayInput` via:
//
//	NdbProfileNetworkProfileArray{ NdbProfileNetworkProfileArgs{...} }
type NdbProfileNetworkProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput
	ToNdbProfileNetworkProfileArrayOutputWithContext(context.Context) NdbProfileNetworkProfileArrayOutput
}

type NdbProfileNetworkProfileArray []NdbProfileNetworkProfileInput

func (NdbProfileNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfile)(nil)).Elem()
}

func (i NdbProfileNetworkProfileArray) ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput {
	return i.ToNdbProfileNetworkProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileArray) ToNdbProfileNetworkProfileArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileArrayOutput)
}

type NdbProfileNetworkProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfile)(nil)).Elem()
}

func (o NdbProfileNetworkProfileOutput) ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput {
	return o
}

func (o NdbProfileNetworkProfileOutput) ToNdbProfileNetworkProfileOutputWithContext(ctx context.Context) NdbProfileNetworkProfileOutput {
	return o
}

// Postgres Info to create network profile
//
// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
//
// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
func (o NdbProfileNetworkProfileOutput) PostgresDatabases() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) []NdbProfileNetworkProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileNetworkProfilePostgresDatabaseArrayOutput)
}

// Topology supported for network profile. Allowed values are "cluster" and "single"
func (o NdbProfileNetworkProfileOutput) Topology() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) string { return v.Topology }).(pulumi.StringOutput)
}

// cluster associated with VLAN. this is used with Single instance for postgres database.
// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
func (o NdbProfileNetworkProfileOutput) VersionClusterAssociations() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) []NdbProfileNetworkProfileVersionClusterAssociation {
		return v.VersionClusterAssociations
	}).(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput)
}

type NdbProfileNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfile)(nil)).Elem()
}

func (o NdbProfileNetworkProfileArrayOutput) ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileArrayOutput) ToNdbProfileNetworkProfileArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfile {
		return vs[0].([]NdbProfileNetworkProfile)[vs[1].(int)]
	}).(NdbProfileNetworkProfileOutput)
}

type NdbProfileNetworkProfilePostgresDatabase struct {
	HaInstances     []NdbProfileNetworkProfilePostgresDatabaseHaInstance     `pulumi:"haInstances"`
	SingleInstances []NdbProfileNetworkProfilePostgresDatabaseSingleInstance `pulumi:"singleInstances"`
}

// NdbProfileNetworkProfilePostgresDatabaseInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseArgs and NdbProfileNetworkProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput
	ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput
}

type NdbProfileNetworkProfilePostgresDatabaseArgs struct {
	HaInstances     NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput     `pulumi:"haInstances"`
	SingleInstances NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput `pulumi:"singleInstances"`
}

func (NdbProfileNetworkProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseArgs) ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseArgs) ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseArray and NdbProfileNetworkProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseArray{ NdbProfileNetworkProfilePostgresDatabaseArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseArray []NdbProfileNetworkProfilePostgresDatabaseInput

func (NdbProfileNetworkProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseArray) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseArray) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) HaInstances() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabase) []NdbProfileNetworkProfilePostgresDatabaseHaInstance {
		return v.HaInstances
	}).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) SingleInstances() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabase) []NdbProfileNetworkProfilePostgresDatabaseSingleInstance {
		return v.SingleInstances
	}).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabase {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstance struct {
	ClusterIds    []string `pulumi:"clusterIds"`
	ClusterNames  []string `pulumi:"clusterNames"`
	NumOfClusters *string  `pulumi:"numOfClusters"`
	VlanNames     []string `pulumi:"vlanNames"`
}

// NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs and NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput
	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs struct {
	ClusterIds    pulumi.StringArrayInput `pulumi:"clusterIds"`
	ClusterNames  pulumi.StringArrayInput `pulumi:"clusterNames"`
	NumOfClusters pulumi.StringPtrInput   `pulumi:"numOfClusters"`
	VlanNames     pulumi.StringArrayInput `pulumi:"vlanNames"`
}

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray and NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray{ NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray []NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ClusterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.ClusterNames }).(pulumi.StringArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) NumOfClusters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) *string { return v.NumOfClusters }).(pulumi.StringPtrOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) VlanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.VlanNames }).(pulumi.StringArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabaseHaInstance {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabaseHaInstance)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstance struct {
	EnableIpAddressSelection *string `pulumi:"enableIpAddressSelection"`
	VlanName                 *string `pulumi:"vlanName"`
}

// NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs and NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput
	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs struct {
	EnableIpAddressSelection pulumi.StringPtrInput `pulumi:"enableIpAddressSelection"`
	VlanName                 pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray and NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray{ NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray []NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) EnableIpAddressSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseSingleInstance) *string {
		return v.EnableIpAddressSelection
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseSingleInstance) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabaseSingleInstance {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociation struct {
	// cluster on which profile created
	NxClusterId string `pulumi:"nxClusterId"`
}

// NdbProfileNetworkProfileVersionClusterAssociationInput is an input type that accepts NdbProfileNetworkProfileVersionClusterAssociationArgs and NdbProfileNetworkProfileVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileVersionClusterAssociationInput` via:
//
//	NdbProfileNetworkProfileVersionClusterAssociationArgs{...}
type NdbProfileNetworkProfileVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput
	ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput
}

type NdbProfileNetworkProfileVersionClusterAssociationArgs struct {
	// cluster on which profile created
	NxClusterId pulumi.StringInput `pulumi:"nxClusterId"`
}

func (NdbProfileNetworkProfileVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArgs) ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return i.ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArgs) ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileVersionClusterAssociationOutput)
}

// NdbProfileNetworkProfileVersionClusterAssociationArrayInput is an input type that accepts NdbProfileNetworkProfileVersionClusterAssociationArray and NdbProfileNetworkProfileVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileVersionClusterAssociationArrayInput` via:
//
//	NdbProfileNetworkProfileVersionClusterAssociationArray{ NdbProfileNetworkProfileVersionClusterAssociationArgs{...} }
type NdbProfileNetworkProfileVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput
	ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput
}

type NdbProfileNetworkProfileVersionClusterAssociationArray []NdbProfileNetworkProfileVersionClusterAssociationInput

func (NdbProfileNetworkProfileVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArray) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return i.ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArray) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return o
}

// cluster on which profile created
func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) NxClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfileVersionClusterAssociation) string { return v.NxClusterId }).(pulumi.StringOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfileVersionClusterAssociation {
		return vs[0].([]NdbProfileNetworkProfileVersionClusterAssociation)[vs[1].(int)]
	}).(NdbProfileNetworkProfileVersionClusterAssociationOutput)
}

type NdbProfileSoftwareProfile struct {
	// specify Nutanix clusters where this profile is available.
	AvailableClusterIds []string `pulumi:"availableClusterIds"`
	// Software profile info about postgres database.
	// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
	// * `postgres_database.base_profile_version_name`: name for the software profile version.
	// * `postgres_database.base_profile_version_description`: description for the software profile version.
	// * `postgres_database.os_notes`: a note to provide additional information about the operating system
	// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
	PostgresDatabases []NdbProfileSoftwareProfilePostgresDatabase `pulumi:"postgresDatabases"`
	// Topology of software profile. Allowed values are "cluster" and "single"
	Topology string `pulumi:"topology"`
}

// NdbProfileSoftwareProfileInput is an input type that accepts NdbProfileSoftwareProfileArgs and NdbProfileSoftwareProfileOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfileInput` via:
//
//	NdbProfileSoftwareProfileArgs{...}
type NdbProfileSoftwareProfileInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput
	ToNdbProfileSoftwareProfileOutputWithContext(context.Context) NdbProfileSoftwareProfileOutput
}

type NdbProfileSoftwareProfileArgs struct {
	// specify Nutanix clusters where this profile is available.
	AvailableClusterIds pulumi.StringArrayInput `pulumi:"availableClusterIds"`
	// Software profile info about postgres database.
	// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
	// * `postgres_database.base_profile_version_name`: name for the software profile version.
	// * `postgres_database.base_profile_version_description`: description for the software profile version.
	// * `postgres_database.os_notes`: a note to provide additional information about the operating system
	// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
	PostgresDatabases NdbProfileSoftwareProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
	// Topology of software profile. Allowed values are "cluster" and "single"
	Topology pulumi.StringInput `pulumi:"topology"`
}

func (NdbProfileSoftwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfile)(nil)).Elem()
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput {
	return i.ToNdbProfileSoftwareProfileOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfileOutputWithContext(ctx context.Context) NdbProfileSoftwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfileOutput)
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return i.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfileOutput).ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx)
}

// NdbProfileSoftwareProfilePtrInput is an input type that accepts NdbProfileSoftwareProfileArgs, NdbProfileSoftwareProfilePtr and NdbProfileSoftwareProfilePtrOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePtrInput` via:
//
//	        NdbProfileSoftwareProfileArgs{...}
//
//	or:
//
//	        nil
type NdbProfileSoftwareProfilePtrInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput
	ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Context) NdbProfileSoftwareProfilePtrOutput
}

type ndbProfileSoftwareProfilePtrType NdbProfileSoftwareProfileArgs

func NdbProfileSoftwareProfilePtr(v *NdbProfileSoftwareProfileArgs) NdbProfileSoftwareProfilePtrInput {
	return (*ndbProfileSoftwareProfilePtrType)(v)
}

func (*ndbProfileSoftwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbProfileSoftwareProfile)(nil)).Elem()
}

func (i *ndbProfileSoftwareProfilePtrType) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return i.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (i *ndbProfileSoftwareProfilePtrType) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePtrOutput)
}

type NdbProfileSoftwareProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfile)(nil)).Elem()
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput {
	return o
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfileOutputWithContext(ctx context.Context) NdbProfileSoftwareProfileOutput {
	return o
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return o.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbProfileSoftwareProfile) *NdbProfileSoftwareProfile {
		return &v
	}).(NdbProfileSoftwareProfilePtrOutput)
}

// specify Nutanix clusters where this profile is available.
func (o NdbProfileSoftwareProfileOutput) AvailableClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) []string { return v.AvailableClusterIds }).(pulumi.StringArrayOutput)
}

// Software profile info about postgres database.
// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
// * `postgres_database.base_profile_version_name`: name for the software profile version.
// * `postgres_database.base_profile_version_description`: description for the software profile version.
// * `postgres_database.os_notes`: a note to provide additional information about the operating system
// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
func (o NdbProfileSoftwareProfileOutput) PostgresDatabases() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) []NdbProfileSoftwareProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

// Topology of software profile. Allowed values are "cluster" and "single"
func (o NdbProfileSoftwareProfileOutput) Topology() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) string { return v.Topology }).(pulumi.StringOutput)
}

type NdbProfileSoftwareProfilePtrOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbProfileSoftwareProfile)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePtrOutput) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return o
}

func (o NdbProfileSoftwareProfilePtrOutput) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return o
}

func (o NdbProfileSoftwareProfilePtrOutput) Elem() NdbProfileSoftwareProfileOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) NdbProfileSoftwareProfile {
		if v != nil {
			return *v
		}
		var ret NdbProfileSoftwareProfile
		return ret
	}).(NdbProfileSoftwareProfileOutput)
}

// specify Nutanix clusters where this profile is available.
func (o NdbProfileSoftwareProfilePtrOutput) AvailableClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) []string {
		if v == nil {
			return nil
		}
		return v.AvailableClusterIds
	}).(pulumi.StringArrayOutput)
}

// Software profile info about postgres database.
// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
// * `postgres_database.base_profile_version_name`: name for the software profile version.
// * `postgres_database.base_profile_version_description`: description for the software profile version.
// * `postgres_database.os_notes`: a note to provide additional information about the operating system
// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
func (o NdbProfileSoftwareProfilePtrOutput) PostgresDatabases() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) []NdbProfileSoftwareProfilePostgresDatabase {
		if v == nil {
			return nil
		}
		return v.PostgresDatabases
	}).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

// Topology of software profile. Allowed values are "cluster" and "single"
func (o NdbProfileSoftwareProfilePtrOutput) Topology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Topology
	}).(pulumi.StringPtrOutput)
}

type NdbProfileSoftwareProfilePostgresDatabase struct {
	BaseProfileVersionDescription *string `pulumi:"baseProfileVersionDescription"`
	BaseProfileVersionName        *string `pulumi:"baseProfileVersionName"`
	DbSoftwareNotes               *string `pulumi:"dbSoftwareNotes"`
	OsNotes                       *string `pulumi:"osNotes"`
	SourceDbserverId              *string `pulumi:"sourceDbserverId"`
}

// NdbProfileSoftwareProfilePostgresDatabaseInput is an input type that accepts NdbProfileSoftwareProfilePostgresDatabaseArgs and NdbProfileSoftwareProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePostgresDatabaseInput` via:
//
//	NdbProfileSoftwareProfilePostgresDatabaseArgs{...}
type NdbProfileSoftwareProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput
	ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput
}

type NdbProfileSoftwareProfilePostgresDatabaseArgs struct {
	BaseProfileVersionDescription pulumi.StringPtrInput `pulumi:"baseProfileVersionDescription"`
	BaseProfileVersionName        pulumi.StringPtrInput `pulumi:"baseProfileVersionName"`
	DbSoftwareNotes               pulumi.StringPtrInput `pulumi:"dbSoftwareNotes"`
	OsNotes                       pulumi.StringPtrInput `pulumi:"osNotes"`
	SourceDbserverId              pulumi.StringPtrInput `pulumi:"sourceDbserverId"`
}

func (NdbProfileSoftwareProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArgs) ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return i.ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArgs) ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePostgresDatabaseOutput)
}

// NdbProfileSoftwareProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileSoftwareProfilePostgresDatabaseArray and NdbProfileSoftwareProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileSoftwareProfilePostgresDatabaseArray{ NdbProfileSoftwareProfilePostgresDatabaseArgs{...} }
type NdbProfileSoftwareProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput
	ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput
}

type NdbProfileSoftwareProfilePostgresDatabaseArray []NdbProfileSoftwareProfilePostgresDatabaseInput

func (NdbProfileSoftwareProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArray) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArray) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

type NdbProfileSoftwareProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) BaseProfileVersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.BaseProfileVersionDescription }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) BaseProfileVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.BaseProfileVersionName }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) DbSoftwareNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.DbSoftwareNotes }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) OsNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.OsNotes }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) SourceDbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.SourceDbserverId }).(pulumi.StringPtrOutput)
}

type NdbProfileSoftwareProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileSoftwareProfilePostgresDatabase {
		return vs[0].([]NdbProfileSoftwareProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileSoftwareProfilePostgresDatabaseOutput)
}

type NdbProfileVersion struct {
	DbVersion  *string `pulumi:"dbVersion"`
	Deprecated *bool   `pulumi:"deprecated"`
	// Description of profile
	Description *string `pulumi:"description"`
	// Engine Type of database
	EngineType *string `pulumi:"engineType"`
	Id         *string `pulumi:"id"`
	// Name of profile
	Name *string `pulumi:"name"`
	// owner  of profile
	Owner         *string                     `pulumi:"owner"`
	ProfileId     *string                     `pulumi:"profileId"`
	Properties    []NdbProfileVersionProperty `pulumi:"properties"`
	PropertiesMap map[string]string           `pulumi:"propertiesMap"`
	// Publish for all users
	Published *bool `pulumi:"published"`
	// status of profile
	Status        *string `pulumi:"status"`
	SystemProfile *bool   `pulumi:"systemProfile"`
	Topology      *string `pulumi:"topology"`
	Type          *string `pulumi:"type"`
	Version       *string `pulumi:"version"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations []NdbProfileVersionVersionClusterAssociation `pulumi:"versionClusterAssociations"`
}

// NdbProfileVersionInput is an input type that accepts NdbProfileVersionArgs and NdbProfileVersionOutput values.
// You can construct a concrete instance of `NdbProfileVersionInput` via:
//
//	NdbProfileVersionArgs{...}
type NdbProfileVersionInput interface {
	pulumi.Input

	ToNdbProfileVersionOutput() NdbProfileVersionOutput
	ToNdbProfileVersionOutputWithContext(context.Context) NdbProfileVersionOutput
}

type NdbProfileVersionArgs struct {
	DbVersion  pulumi.StringPtrInput `pulumi:"dbVersion"`
	Deprecated pulumi.BoolPtrInput   `pulumi:"deprecated"`
	// Description of profile
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Engine Type of database
	EngineType pulumi.StringPtrInput `pulumi:"engineType"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner  of profile
	Owner         pulumi.StringPtrInput               `pulumi:"owner"`
	ProfileId     pulumi.StringPtrInput               `pulumi:"profileId"`
	Properties    NdbProfileVersionPropertyArrayInput `pulumi:"properties"`
	PropertiesMap pulumi.StringMapInput               `pulumi:"propertiesMap"`
	// Publish for all users
	Published pulumi.BoolPtrInput `pulumi:"published"`
	// status of profile
	Status        pulumi.StringPtrInput `pulumi:"status"`
	SystemProfile pulumi.BoolPtrInput   `pulumi:"systemProfile"`
	Topology      pulumi.StringPtrInput `pulumi:"topology"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
	Version       pulumi.StringPtrInput `pulumi:"version"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations NdbProfileVersionVersionClusterAssociationArrayInput `pulumi:"versionClusterAssociations"`
}

func (NdbProfileVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersion)(nil)).Elem()
}

func (i NdbProfileVersionArgs) ToNdbProfileVersionOutput() NdbProfileVersionOutput {
	return i.ToNdbProfileVersionOutputWithContext(context.Background())
}

func (i NdbProfileVersionArgs) ToNdbProfileVersionOutputWithContext(ctx context.Context) NdbProfileVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionOutput)
}

// NdbProfileVersionArrayInput is an input type that accepts NdbProfileVersionArray and NdbProfileVersionArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionArrayInput` via:
//
//	NdbProfileVersionArray{ NdbProfileVersionArgs{...} }
type NdbProfileVersionArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput
	ToNdbProfileVersionArrayOutputWithContext(context.Context) NdbProfileVersionArrayOutput
}

type NdbProfileVersionArray []NdbProfileVersionInput

func (NdbProfileVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersion)(nil)).Elem()
}

func (i NdbProfileVersionArray) ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput {
	return i.ToNdbProfileVersionArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionArray) ToNdbProfileVersionArrayOutputWithContext(ctx context.Context) NdbProfileVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionArrayOutput)
}

type NdbProfileVersionOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersion)(nil)).Elem()
}

func (o NdbProfileVersionOutput) ToNdbProfileVersionOutput() NdbProfileVersionOutput {
	return o
}

func (o NdbProfileVersionOutput) ToNdbProfileVersionOutputWithContext(ctx context.Context) NdbProfileVersionOutput {
	return o
}

func (o NdbProfileVersionOutput) DbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.DbVersion }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// Description of profile
func (o NdbProfileVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Engine Type of database
func (o NdbProfileVersionOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.EngineType }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of profile
func (o NdbProfileVersionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner  of profile
func (o NdbProfileVersionOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Properties() NdbProfileVersionPropertyArrayOutput {
	return o.ApplyT(func(v NdbProfileVersion) []NdbProfileVersionProperty { return v.Properties }).(NdbProfileVersionPropertyArrayOutput)
}

func (o NdbProfileVersionOutput) PropertiesMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbProfileVersion) map[string]string { return v.PropertiesMap }).(pulumi.StringMapOutput)
}

// Publish for all users
func (o NdbProfileVersionOutput) Published() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.Published }).(pulumi.BoolPtrOutput)
}

// status of profile
func (o NdbProfileVersionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) SystemProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.SystemProfile }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionOutput) Topology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Topology }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// cluster associated with VLAN. this is used with Single instance for postgres database.
// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
func (o NdbProfileVersionOutput) VersionClusterAssociations() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o.ApplyT(func(v NdbProfileVersion) []NdbProfileVersionVersionClusterAssociation {
		return v.VersionClusterAssociations
	}).(NdbProfileVersionVersionClusterAssociationArrayOutput)
}

type NdbProfileVersionArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersion)(nil)).Elem()
}

func (o NdbProfileVersionArrayOutput) ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput {
	return o
}

func (o NdbProfileVersionArrayOutput) ToNdbProfileVersionArrayOutputWithContext(ctx context.Context) NdbProfileVersionArrayOutput {
	return o
}

func (o NdbProfileVersionArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersion {
		return vs[0].([]NdbProfileVersion)[vs[1].(int)]
	}).(NdbProfileVersionOutput)
}

type NdbProfileVersionProperty struct {
	// Name of profile
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbProfileVersionPropertyInput is an input type that accepts NdbProfileVersionPropertyArgs and NdbProfileVersionPropertyOutput values.
// You can construct a concrete instance of `NdbProfileVersionPropertyInput` via:
//
//	NdbProfileVersionPropertyArgs{...}
type NdbProfileVersionPropertyInput interface {
	pulumi.Input

	ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput
	ToNdbProfileVersionPropertyOutputWithContext(context.Context) NdbProfileVersionPropertyOutput
}

type NdbProfileVersionPropertyArgs struct {
	// Name of profile
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbProfileVersionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionProperty)(nil)).Elem()
}

func (i NdbProfileVersionPropertyArgs) ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput {
	return i.ToNdbProfileVersionPropertyOutputWithContext(context.Background())
}

func (i NdbProfileVersionPropertyArgs) ToNdbProfileVersionPropertyOutputWithContext(ctx context.Context) NdbProfileVersionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionPropertyOutput)
}

// NdbProfileVersionPropertyArrayInput is an input type that accepts NdbProfileVersionPropertyArray and NdbProfileVersionPropertyArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionPropertyArrayInput` via:
//
//	NdbProfileVersionPropertyArray{ NdbProfileVersionPropertyArgs{...} }
type NdbProfileVersionPropertyArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput
	ToNdbProfileVersionPropertyArrayOutputWithContext(context.Context) NdbProfileVersionPropertyArrayOutput
}

type NdbProfileVersionPropertyArray []NdbProfileVersionPropertyInput

func (NdbProfileVersionPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionProperty)(nil)).Elem()
}

func (i NdbProfileVersionPropertyArray) ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput {
	return i.ToNdbProfileVersionPropertyArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionPropertyArray) ToNdbProfileVersionPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionPropertyArrayOutput)
}

type NdbProfileVersionPropertyOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionProperty)(nil)).Elem()
}

func (o NdbProfileVersionPropertyOutput) ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput {
	return o
}

func (o NdbProfileVersionPropertyOutput) ToNdbProfileVersionPropertyOutputWithContext(ctx context.Context) NdbProfileVersionPropertyOutput {
	return o
}

// Name of profile
func (o NdbProfileVersionPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionProperty)(nil)).Elem()
}

func (o NdbProfileVersionPropertyArrayOutput) ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionPropertyArrayOutput) ToNdbProfileVersionPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionPropertyArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionProperty {
		return vs[0].([]NdbProfileVersionProperty)[vs[1].(int)]
	}).(NdbProfileVersionPropertyOutput)
}

type NdbProfileVersionVersionClusterAssociation struct {
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId              *string                                              `pulumi:"nxClusterId"`
	OptimizedForProvisioning *bool                                                `pulumi:"optimizedForProvisioning"`
	OwnerId                  *string                                              `pulumi:"ownerId"`
	ProfileVersionId         *string                                              `pulumi:"profileVersionId"`
	Properties               []NdbProfileVersionVersionClusterAssociationProperty `pulumi:"properties"`
	// status of profile
	Status *string `pulumi:"status"`
}

// NdbProfileVersionVersionClusterAssociationInput is an input type that accepts NdbProfileVersionVersionClusterAssociationArgs and NdbProfileVersionVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationInput` via:
//
//	NdbProfileVersionVersionClusterAssociationArgs{...}
type NdbProfileVersionVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput
	ToNdbProfileVersionVersionClusterAssociationOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationOutput
}

type NdbProfileVersionVersionClusterAssociationArgs struct {
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId              pulumi.StringPtrInput                                        `pulumi:"nxClusterId"`
	OptimizedForProvisioning pulumi.BoolPtrInput                                          `pulumi:"optimizedForProvisioning"`
	OwnerId                  pulumi.StringPtrInput                                        `pulumi:"ownerId"`
	ProfileVersionId         pulumi.StringPtrInput                                        `pulumi:"profileVersionId"`
	Properties               NdbProfileVersionVersionClusterAssociationPropertyArrayInput `pulumi:"properties"`
	// status of profile
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbProfileVersionVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationArgs) ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationArgs) ToNdbProfileVersionVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationOutput)
}

// NdbProfileVersionVersionClusterAssociationArrayInput is an input type that accepts NdbProfileVersionVersionClusterAssociationArray and NdbProfileVersionVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationArrayInput` via:
//
//	NdbProfileVersionVersionClusterAssociationArray{ NdbProfileVersionVersionClusterAssociationArgs{...} }
type NdbProfileVersionVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput
	ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput
}

type NdbProfileVersionVersionClusterAssociationArray []NdbProfileVersionVersionClusterAssociationInput

func (NdbProfileVersionVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationArray) ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationArray) ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationArrayOutput)
}

type NdbProfileVersionVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ToNdbProfileVersionVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// cluster on which profile created
func (o NdbProfileVersionVersionClusterAssociationOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) OptimizedForProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *bool { return v.OptimizedForProvisioning }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ProfileVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.ProfileVersionId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) Properties() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) []NdbProfileVersionVersionClusterAssociationProperty {
		return v.Properties
	}).(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput)
}

// status of profile
func (o NdbProfileVersionVersionClusterAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionVersionClusterAssociation {
		return vs[0].([]NdbProfileVersionVersionClusterAssociation)[vs[1].(int)]
	}).(NdbProfileVersionVersionClusterAssociationOutput)
}

type NdbProfileVersionVersionClusterAssociationProperty struct {
	// Name of profile
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbProfileVersionVersionClusterAssociationPropertyInput is an input type that accepts NdbProfileVersionVersionClusterAssociationPropertyArgs and NdbProfileVersionVersionClusterAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationPropertyInput` via:
//
//	NdbProfileVersionVersionClusterAssociationPropertyArgs{...}
type NdbProfileVersionVersionClusterAssociationPropertyInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput
	ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput
}

type NdbProfileVersionVersionClusterAssociationPropertyArgs struct {
	// Name of profile
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbProfileVersionVersionClusterAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArgs) ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArgs) ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationPropertyOutput)
}

// NdbProfileVersionVersionClusterAssociationPropertyArrayInput is an input type that accepts NdbProfileVersionVersionClusterAssociationPropertyArray and NdbProfileVersionVersionClusterAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationPropertyArrayInput` via:
//
//	NdbProfileVersionVersionClusterAssociationPropertyArray{ NdbProfileVersionVersionClusterAssociationPropertyArgs{...} }
type NdbProfileVersionVersionClusterAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput
	ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput
}

type NdbProfileVersionVersionClusterAssociationPropertyArray []NdbProfileVersionVersionClusterAssociationPropertyInput

func (NdbProfileVersionVersionClusterAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArray) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArray) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput)
}

type NdbProfileVersionVersionClusterAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return o
}

// Name of profile
func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionVersionClusterAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionVersionClusterAssociationProperty {
		return vs[0].([]NdbProfileVersionVersionClusterAssociationProperty)[vs[1].(int)]
	}).(NdbProfileVersionVersionClusterAssociationPropertyOutput)
}

type NdbRegisterDatabaseActionargument struct {
	// - (Required) name of argument
	Name string `pulumi:"name"`
	// - (Required) value for argument
	Value string `pulumi:"value"`
}

// NdbRegisterDatabaseActionargumentInput is an input type that accepts NdbRegisterDatabaseActionargumentArgs and NdbRegisterDatabaseActionargumentOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseActionargumentInput` via:
//
//	NdbRegisterDatabaseActionargumentArgs{...}
type NdbRegisterDatabaseActionargumentInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput
	ToNdbRegisterDatabaseActionargumentOutputWithContext(context.Context) NdbRegisterDatabaseActionargumentOutput
}

type NdbRegisterDatabaseActionargumentArgs struct {
	// - (Required) name of argument
	Name pulumi.StringInput `pulumi:"name"`
	// - (Required) value for argument
	Value pulumi.StringInput `pulumi:"value"`
}

func (NdbRegisterDatabaseActionargumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (i NdbRegisterDatabaseActionargumentArgs) ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput {
	return i.ToNdbRegisterDatabaseActionargumentOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseActionargumentArgs) ToNdbRegisterDatabaseActionargumentOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseActionargumentOutput)
}

// NdbRegisterDatabaseActionargumentArrayInput is an input type that accepts NdbRegisterDatabaseActionargumentArray and NdbRegisterDatabaseActionargumentArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseActionargumentArrayInput` via:
//
//	NdbRegisterDatabaseActionargumentArray{ NdbRegisterDatabaseActionargumentArgs{...} }
type NdbRegisterDatabaseActionargumentArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput
	ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(context.Context) NdbRegisterDatabaseActionargumentArrayOutput
}

type NdbRegisterDatabaseActionargumentArray []NdbRegisterDatabaseActionargumentInput

func (NdbRegisterDatabaseActionargumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (i NdbRegisterDatabaseActionargumentArray) ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput {
	return i.ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseActionargumentArray) ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseActionargumentArrayOutput)
}

type NdbRegisterDatabaseActionargumentOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseActionargumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (o NdbRegisterDatabaseActionargumentOutput) ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentOutput) ToNdbRegisterDatabaseActionargumentOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentOutput {
	return o
}

// - (Required) name of argument
func (o NdbRegisterDatabaseActionargumentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseActionargument) string { return v.Name }).(pulumi.StringOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseActionargumentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseActionargument) string { return v.Value }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseActionargumentArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseActionargumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseActionargumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseActionargument {
		return vs[0].([]NdbRegisterDatabaseActionargument)[vs[1].(int)]
	}).(NdbRegisterDatabaseActionargumentOutput)
}

type NdbRegisterDatabaseDatabaseNode struct {
	AccessLevel map[string]string `pulumi:"accessLevel"`
	DatabaseId  *string           `pulumi:"databaseId"`
	// status of database
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbRegisterDatabaseDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbRegisterDatabaseDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                           `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbRegisterDatabaseDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                           `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// tags
	Tags []NdbRegisterDatabaseDatabaseNodeTag `pulumi:"tags"`
}

// NdbRegisterDatabaseDatabaseNodeInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeArgs and NdbRegisterDatabaseDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeArgs{...}
type NdbRegisterDatabaseDatabaseNodeInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput
	ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeOutput
}

type NdbRegisterDatabaseDatabaseNodeArgs struct {
	AccessLevel pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId  pulumi.StringPtrInput `pulumi:"databaseId"`
	// status of database
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbRegisterDatabaseDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbRegisterDatabaseDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                     `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                     `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags
	Tags NdbRegisterDatabaseDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbRegisterDatabaseDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeArgs) ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeArgs) ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeOutput)
}

// NdbRegisterDatabaseDatabaseNodeArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeArray and NdbRegisterDatabaseDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeArray{ NdbRegisterDatabaseDatabaseNodeArgs{...} }
type NdbRegisterDatabaseDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeArray []NdbRegisterDatabaseDatabaseNodeInput

func (NdbRegisterDatabaseDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeArray) ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeArray) ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// status of database
func (o NdbRegisterDatabaseDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Infos() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeInfo { return v.Infos }).(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseDatabaseNodeOutput) Properties() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeProperty { return v.Properties }).(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ProtectionDomains() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags
func (o NdbRegisterDatabaseDatabaseNodeOutput) Tags() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeTag { return v.Tags }).(NdbRegisterDatabaseDatabaseNodeTagArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNode {
		return vs[0].([]NdbRegisterDatabaseDatabaseNode)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseDatabaseNodeInfoInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeInfoArgs and NdbRegisterDatabaseDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInfoInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeInfoArgs{...}
type NdbRegisterDatabaseDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput
	ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput
}

type NdbRegisterDatabaseDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArgs) ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArgs) ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeInfoOutput)
}

// NdbRegisterDatabaseDatabaseNodeInfoArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeInfoArray and NdbRegisterDatabaseDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInfoArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeInfoArray{ NdbRegisterDatabaseDatabaseNodeInfoArgs{...} }
type NdbRegisterDatabaseDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeInfoArray []NdbRegisterDatabaseDatabaseNodeInfoInput

func (NdbRegisterDatabaseDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArray) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArray) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeInfo {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeInfoOutput)
}

type NdbRegisterDatabaseDatabaseNodeProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodePropertyInput is an input type that accepts NdbRegisterDatabaseDatabaseNodePropertyArgs and NdbRegisterDatabaseDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodePropertyInput` via:
//
//	NdbRegisterDatabaseDatabaseNodePropertyArgs{...}
type NdbRegisterDatabaseDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput
	ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput
}

type NdbRegisterDatabaseDatabaseNodePropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArgs) ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArgs) ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodePropertyOutput)
}

// NdbRegisterDatabaseDatabaseNodePropertyArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodePropertyArray and NdbRegisterDatabaseDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodePropertyArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodePropertyArray{ NdbRegisterDatabaseDatabaseNodePropertyArgs{...} }
type NdbRegisterDatabaseDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput
	ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput
}

type NdbRegisterDatabaseDatabaseNodePropertyArray []NdbRegisterDatabaseDatabaseNodePropertyInput

func (NdbRegisterDatabaseDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArray) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArray) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProperty {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodePropertyOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs and NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{...}
type NdbRegisterDatabaseDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput)
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainArray and NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainArray{ NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{...} }
type NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArray []NdbRegisterDatabaseDatabaseNodeProtectionDomainInput

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Properties() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) []NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProtectionDomain {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs and NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray and NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray{ NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray []NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbRegisterDatabaseDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodeTagInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeTagArgs and NdbRegisterDatabaseDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeTagInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeTagArgs{...}
type NdbRegisterDatabaseDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput
	ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput
}

type NdbRegisterDatabaseDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeTagArgs) ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeTagArgs) ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeTagOutput)
}

// NdbRegisterDatabaseDatabaseNodeTagArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeTagArray and NdbRegisterDatabaseDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeTagArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeTagArray{ NdbRegisterDatabaseDatabaseNodeTagArgs{...} }
type NdbRegisterDatabaseDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeTagArray []NdbRegisterDatabaseDatabaseNodeTagInput

func (NdbRegisterDatabaseDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeTagArray) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeTagArray) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeTagArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeTag {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeTagOutput)
}

type NdbRegisterDatabaseInfo struct {
	BpgConfigs []NdbRegisterDatabaseInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string                  `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseInfoInput is an input type that accepts NdbRegisterDatabaseInfoArgs and NdbRegisterDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoInput` via:
//
//	NdbRegisterDatabaseInfoArgs{...}
type NdbRegisterDatabaseInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput
	ToNdbRegisterDatabaseInfoOutputWithContext(context.Context) NdbRegisterDatabaseInfoOutput
}

type NdbRegisterDatabaseInfoArgs struct {
	BpgConfigs NdbRegisterDatabaseInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                      `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoArgs) ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput {
	return i.ToNdbRegisterDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoArgs) ToNdbRegisterDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoOutput)
}

// NdbRegisterDatabaseInfoArrayInput is an input type that accepts NdbRegisterDatabaseInfoArray and NdbRegisterDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoArrayInput` via:
//
//	NdbRegisterDatabaseInfoArray{ NdbRegisterDatabaseInfoArgs{...} }
type NdbRegisterDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput
	ToNdbRegisterDatabaseInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoArrayOutput
}

type NdbRegisterDatabaseInfoArray []NdbRegisterDatabaseInfoInput

func (NdbRegisterDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoArray) ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput {
	return i.ToNdbRegisterDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoArray) ToNdbRegisterDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoArrayOutput)
}

type NdbRegisterDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoOutput) ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseInfoOutput) ToNdbRegisterDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseInfoOutput) BpgConfigs() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfo) []NdbRegisterDatabaseInfoBpgConfig { return v.BpgConfigs }).(NdbRegisterDatabaseInfoBpgConfigArrayOutput)
}

func (o NdbRegisterDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoArrayOutput) ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoArrayOutput) ToNdbRegisterDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfo {
		return vs[0].([]NdbRegisterDatabaseInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoOutput)
}

type NdbRegisterDatabaseInfoBpgConfig struct {
	BpgDbParams  []NdbRegisterDatabaseInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbRegisterDatabaseInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbRegisterDatabaseInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbRegisterDatabaseInfoBpgConfigInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigArgs and NdbRegisterDatabaseInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigArgs{...}
type NdbRegisterDatabaseInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput
	ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigOutput
}

type NdbRegisterDatabaseInfoBpgConfigArgs struct {
	BpgDbParams  NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbRegisterDatabaseInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbRegisterDatabaseInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigArgs) ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigArgs) ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigOutput)
}

// NdbRegisterDatabaseInfoBpgConfigArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigArray and NdbRegisterDatabaseInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigArray{ NdbRegisterDatabaseInfoBpgConfigArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigArray []NdbRegisterDatabaseInfoBpgConfigInput

func (NdbRegisterDatabaseInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigArray) ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigArray) ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) BpgDbParams() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigBpgDbParam {
		return v.BpgDbParams
	}).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) Storages() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigStorage { return v.Storages }).(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) VmProperties() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigVmProperty {
		return v.VmProperties
	}).(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfig {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfig)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs and NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{...}
type NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput
	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput)
}

// NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray and NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray{ NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray []NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorage struct {
	ArchiveStorages []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbRegisterDatabaseInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbRegisterDatabaseInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArgs and NdbRegisterDatabaseInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArray and NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArray{ NdbRegisterDatabaseInfoBpgConfigStorageArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArray []NdbRegisterDatabaseInfoBpgConfigStorageInput

func (NdbRegisterDatabaseInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ArchiveStorages() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) DataDisks() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) LogDisks() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorage {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs and NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray and NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray{ NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs and NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray and NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray{ NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray []NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs and NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray and NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray{ NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray []NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbRegisterDatabaseInfoBpgConfigVmPropertyInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs and NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigVmPropertyInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{...}
type NdbRegisterDatabaseInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput
	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput)
}

// NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigVmPropertyArray and NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigVmPropertyArray{ NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArray []NdbRegisterDatabaseInfoBpgConfigVmPropertyInput

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigVmProperty {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput)
}

type NdbRegisterDatabaseLcmConfig struct {
	ExpiryDetails      []NdbRegisterDatabaseLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbRegisterDatabaseLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbRegisterDatabaseLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbRegisterDatabaseLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbRegisterDatabaseLcmConfigInput is an input type that accepts NdbRegisterDatabaseLcmConfigArgs and NdbRegisterDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigInput` via:
//
//	NdbRegisterDatabaseLcmConfigArgs{...}
type NdbRegisterDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput
	ToNdbRegisterDatabaseLcmConfigOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigOutput
}

type NdbRegisterDatabaseLcmConfigArgs struct {
	ExpiryDetails      NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbRegisterDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigArgs) ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput {
	return i.ToNdbRegisterDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigArgs) ToNdbRegisterDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigOutput)
}

// NdbRegisterDatabaseLcmConfigArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigArray and NdbRegisterDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigArray{ NdbRegisterDatabaseLcmConfigArgs{...} }
type NdbRegisterDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput
	ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigArrayOutput
}

type NdbRegisterDatabaseLcmConfigArray []NdbRegisterDatabaseLcmConfigInput

func (NdbRegisterDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigArray) ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigArray) ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigArrayOutput)
}

type NdbRegisterDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigOutput) ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigOutput) ToNdbRegisterDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigOutput) ExpiryDetails() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigExpiryDetail {
		return v.ExpiryDetails
	}).(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) PostDeleteCommands() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) PreDeleteCommands() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) RefreshDetails() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigRefreshDetail {
		return v.RefreshDetails
	}).(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfig {
		return vs[0].([]NdbRegisterDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase *bool `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbRegisterDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbRegisterDatabaseLcmConfigExpiryDetailArgs and NdbRegisterDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbRegisterDatabaseLcmConfigExpiryDetailArgs{...}
type NdbRegisterDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput
	ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase pulumi.BoolPtrInput `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigExpiryDetailOutput)
}

// NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigExpiryDetailArray and NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigExpiryDetailArray{ NdbRegisterDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArray []NdbRegisterDatabaseLcmConfigExpiryDetailInput

func (NdbRegisterDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArray) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArray) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbRegisterDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigExpiryDetailOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbRegisterDatabaseLcmConfigPostDeleteCommandInput is an input type that accepts NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs and NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPostDeleteCommandInput` via:
//
//	NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{...}
type NdbRegisterDatabaseLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput
	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput)
}

// NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigPostDeleteCommandArray and NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigPostDeleteCommandArray{ NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{...} }
type NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput
	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArray []NdbRegisterDatabaseLcmConfigPostDeleteCommandInput

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigPostDeleteCommand {
		return vs[0].([]NdbRegisterDatabaseLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbRegisterDatabaseLcmConfigPreDeleteCommandInput is an input type that accepts NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs and NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPreDeleteCommandInput` via:
//
//	NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{...}
type NdbRegisterDatabaseLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput
	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput)
}

// NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigPreDeleteCommandArray and NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigPreDeleteCommandArray{ NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{...} }
type NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput
	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArray []NdbRegisterDatabaseLcmConfigPreDeleteCommandInput

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigPreDeleteCommand {
		return vs[0].([]NdbRegisterDatabaseLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbRegisterDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbRegisterDatabaseLcmConfigRefreshDetailArgs and NdbRegisterDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbRegisterDatabaseLcmConfigRefreshDetailArgs{...}
type NdbRegisterDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput
	ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigRefreshDetailOutput)
}

// NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigRefreshDetailArray and NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigRefreshDetailArray{ NdbRegisterDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArray []NdbRegisterDatabaseLcmConfigRefreshDetailInput

func (NdbRegisterDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArray) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArray) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbRegisterDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigRefreshDetailOutput)
}

type NdbRegisterDatabaseLinkedDatabase struct {
	// name of database
	DatabaseName *string `pulumi:"databaseName"`
	// status of database
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbRegisterDatabaseLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbRegisterDatabaseLinkedDatabaseInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseArgs and NdbRegisterDatabaseLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseArgs{...}
type NdbRegisterDatabaseLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput
	ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseOutput
}

type NdbRegisterDatabaseLinkedDatabaseArgs struct {
	// name of database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// status of database
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbRegisterDatabaseLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbRegisterDatabaseLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseArgs) ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseArgs) ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseOutput)
}

// NdbRegisterDatabaseLinkedDatabaseArrayInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseArray and NdbRegisterDatabaseLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseArrayInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseArray{ NdbRegisterDatabaseLinkedDatabaseArgs{...} }
type NdbRegisterDatabaseLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput
	ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput
}

type NdbRegisterDatabaseLinkedDatabaseArray []NdbRegisterDatabaseLinkedDatabaseInput

func (NdbRegisterDatabaseLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseArray) ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseArray) ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseArrayOutput)
}

type NdbRegisterDatabaseLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// status of database
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Infos() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) []NdbRegisterDatabaseLinkedDatabaseInfo { return v.Infos }).(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbRegisterDatabaseLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLinkedDatabase {
		return vs[0].([]NdbRegisterDatabaseLinkedDatabase)[vs[1].(int)]
	}).(NdbRegisterDatabaseLinkedDatabaseOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseLinkedDatabaseInfoInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseInfoArgs and NdbRegisterDatabaseLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInfoInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseInfoArgs{...}
type NdbRegisterDatabaseLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput
	ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput
}

type NdbRegisterDatabaseLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArgs) ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArgs) ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseInfoOutput)
}

// NdbRegisterDatabaseLinkedDatabaseInfoArrayInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseInfoArray and NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInfoArrayInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseInfoArray{ NdbRegisterDatabaseLinkedDatabaseInfoArgs{...} }
type NdbRegisterDatabaseLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput
	ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput
}

type NdbRegisterDatabaseLinkedDatabaseInfoArray []NdbRegisterDatabaseLinkedDatabaseInfoInput

func (NdbRegisterDatabaseLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArray) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArray) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLinkedDatabaseInfo {
		return vs[0].([]NdbRegisterDatabaseLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseLinkedDatabaseInfoOutput)
}

type NdbRegisterDatabasePostgressInfo struct {
	// allow multiple databases. Default is true
	AllowMultipleDatabases *bool `pulumi:"allowMultipleDatabases"`
	// backup policy of database. Default is prefer_secondary.
	BackupPolicy *string `pulumi:"backupPolicy"`
	// name of the database server VM on which the instance you want to register is running.
	DbName string `pulumi:"dbName"`
	// database password
	DbPassword string `pulumi:"dbPassword"`
	// username of the NDB drive user account that has sudo access.
	DbUser *string `pulumi:"dbUser"`
	// listner port of database
	ListenerPort string `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
	PostgresSoftwareHome string `pulumi:"postgresSoftwareHome"`
	// path to the directory in which the PostgreSQL software is installed.
	SoftwareHome *string `pulumi:"softwareHome"`
	// switch log of database. Default is true
	SwitchLog *bool `pulumi:"switchLog"`
	// VM IP of the database server VM on which the instance you want to register is running.
	VmIp *string `pulumi:"vmIp"`
}

// NdbRegisterDatabasePostgressInfoInput is an input type that accepts NdbRegisterDatabasePostgressInfoArgs and NdbRegisterDatabasePostgressInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePostgressInfoInput` via:
//
//	NdbRegisterDatabasePostgressInfoArgs{...}
type NdbRegisterDatabasePostgressInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput
	ToNdbRegisterDatabasePostgressInfoOutputWithContext(context.Context) NdbRegisterDatabasePostgressInfoOutput
}

type NdbRegisterDatabasePostgressInfoArgs struct {
	// allow multiple databases. Default is true
	AllowMultipleDatabases pulumi.BoolPtrInput `pulumi:"allowMultipleDatabases"`
	// backup policy of database. Default is prefer_secondary.
	BackupPolicy pulumi.StringPtrInput `pulumi:"backupPolicy"`
	// name of the database server VM on which the instance you want to register is running.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// database password
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// username of the NDB drive user account that has sudo access.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// listner port of database
	ListenerPort pulumi.StringInput `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
	PostgresSoftwareHome pulumi.StringInput `pulumi:"postgresSoftwareHome"`
	// path to the directory in which the PostgreSQL software is installed.
	SoftwareHome pulumi.StringPtrInput `pulumi:"softwareHome"`
	// switch log of database. Default is true
	SwitchLog pulumi.BoolPtrInput `pulumi:"switchLog"`
	// VM IP of the database server VM on which the instance you want to register is running.
	VmIp pulumi.StringPtrInput `pulumi:"vmIp"`
}

func (NdbRegisterDatabasePostgressInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (i NdbRegisterDatabasePostgressInfoArgs) ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput {
	return i.ToNdbRegisterDatabasePostgressInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePostgressInfoArgs) ToNdbRegisterDatabasePostgressInfoOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePostgressInfoOutput)
}

// NdbRegisterDatabasePostgressInfoArrayInput is an input type that accepts NdbRegisterDatabasePostgressInfoArray and NdbRegisterDatabasePostgressInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePostgressInfoArrayInput` via:
//
//	NdbRegisterDatabasePostgressInfoArray{ NdbRegisterDatabasePostgressInfoArgs{...} }
type NdbRegisterDatabasePostgressInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput
	ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(context.Context) NdbRegisterDatabasePostgressInfoArrayOutput
}

type NdbRegisterDatabasePostgressInfoArray []NdbRegisterDatabasePostgressInfoInput

func (NdbRegisterDatabasePostgressInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (i NdbRegisterDatabasePostgressInfoArray) ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput {
	return i.ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePostgressInfoArray) ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePostgressInfoArrayOutput)
}

type NdbRegisterDatabasePostgressInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePostgressInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (o NdbRegisterDatabasePostgressInfoOutput) ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoOutput) ToNdbRegisterDatabasePostgressInfoOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoOutput {
	return o
}

// allow multiple databases. Default is true
func (o NdbRegisterDatabasePostgressInfoOutput) AllowMultipleDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *bool { return v.AllowMultipleDatabases }).(pulumi.BoolPtrOutput)
}

// backup policy of database. Default is prefer_secondary.
func (o NdbRegisterDatabasePostgressInfoOutput) BackupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.BackupPolicy }).(pulumi.StringPtrOutput)
}

// name of the database server VM on which the instance you want to register is running.
func (o NdbRegisterDatabasePostgressInfoOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.DbName }).(pulumi.StringOutput)
}

// database password
func (o NdbRegisterDatabasePostgressInfoOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.DbPassword }).(pulumi.StringOutput)
}

// username of the NDB drive user account that has sudo access.
func (o NdbRegisterDatabasePostgressInfoOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// listner port of database
func (o NdbRegisterDatabasePostgressInfoOutput) ListenerPort() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.ListenerPort }).(pulumi.StringOutput)
}

// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
func (o NdbRegisterDatabasePostgressInfoOutput) PostgresSoftwareHome() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.PostgresSoftwareHome }).(pulumi.StringOutput)
}

// path to the directory in which the PostgreSQL software is installed.
func (o NdbRegisterDatabasePostgressInfoOutput) SoftwareHome() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.SoftwareHome }).(pulumi.StringPtrOutput)
}

// switch log of database. Default is true
func (o NdbRegisterDatabasePostgressInfoOutput) SwitchLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *bool { return v.SwitchLog }).(pulumi.BoolPtrOutput)
}

// VM IP of the database server VM on which the instance you want to register is running.
func (o NdbRegisterDatabasePostgressInfoOutput) VmIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.VmIp }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabasePostgressInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePostgressInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabasePostgressInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabasePostgressInfo {
		return vs[0].([]NdbRegisterDatabasePostgressInfo)[vs[1].(int)]
	}).(NdbRegisterDatabasePostgressInfoOutput)
}

type NdbRegisterDatabaseProperty struct {
	// Name of database instance
	Name *string `pulumi:"name"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabasePropertyInput is an input type that accepts NdbRegisterDatabasePropertyArgs and NdbRegisterDatabasePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePropertyInput` via:
//
//	NdbRegisterDatabasePropertyArgs{...}
type NdbRegisterDatabasePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput
	ToNdbRegisterDatabasePropertyOutputWithContext(context.Context) NdbRegisterDatabasePropertyOutput
}

type NdbRegisterDatabasePropertyArgs struct {
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabasePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (i NdbRegisterDatabasePropertyArgs) ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput {
	return i.ToNdbRegisterDatabasePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePropertyArgs) ToNdbRegisterDatabasePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePropertyOutput)
}

// NdbRegisterDatabasePropertyArrayInput is an input type that accepts NdbRegisterDatabasePropertyArray and NdbRegisterDatabasePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePropertyArrayInput` via:
//
//	NdbRegisterDatabasePropertyArray{ NdbRegisterDatabasePropertyArgs{...} }
type NdbRegisterDatabasePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput
	ToNdbRegisterDatabasePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabasePropertyArrayOutput
}

type NdbRegisterDatabasePropertyArray []NdbRegisterDatabasePropertyInput

func (NdbRegisterDatabasePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (i NdbRegisterDatabasePropertyArray) ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput {
	return i.ToNdbRegisterDatabasePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePropertyArray) ToNdbRegisterDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePropertyArrayOutput)
}

type NdbRegisterDatabasePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (o NdbRegisterDatabasePropertyOutput) ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput {
	return o
}

func (o NdbRegisterDatabasePropertyOutput) ToNdbRegisterDatabasePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyOutput {
	return o
}

// Name of database instance
func (o NdbRegisterDatabasePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabasePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabasePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (o NdbRegisterDatabasePropertyArrayOutput) ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabasePropertyArrayOutput) ToNdbRegisterDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabasePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabasePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseProperty {
		return vs[0].([]NdbRegisterDatabaseProperty)[vs[1].(int)]
	}).(NdbRegisterDatabasePropertyOutput)
}

type NdbRegisterDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseTagInput is an input type that accepts NdbRegisterDatabaseTagArgs and NdbRegisterDatabaseTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTagInput` via:
//
//	NdbRegisterDatabaseTagArgs{...}
type NdbRegisterDatabaseTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput
	ToNdbRegisterDatabaseTagOutputWithContext(context.Context) NdbRegisterDatabaseTagOutput
}

type NdbRegisterDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTagArgs) ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput {
	return i.ToNdbRegisterDatabaseTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTagArgs) ToNdbRegisterDatabaseTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTagOutput)
}

// NdbRegisterDatabaseTagArrayInput is an input type that accepts NdbRegisterDatabaseTagArray and NdbRegisterDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTagArrayInput` via:
//
//	NdbRegisterDatabaseTagArray{ NdbRegisterDatabaseTagArgs{...} }
type NdbRegisterDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput
	ToNdbRegisterDatabaseTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTagArrayOutput
}

type NdbRegisterDatabaseTagArray []NdbRegisterDatabaseTagInput

func (NdbRegisterDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTagArray) ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput {
	return i.ToNdbRegisterDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTagArray) ToNdbRegisterDatabaseTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTagArrayOutput)
}

type NdbRegisterDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTagOutput) ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput {
	return o
}

func (o NdbRegisterDatabaseTagOutput) ToNdbRegisterDatabaseTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagOutput {
	return o
}

func (o NdbRegisterDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTagArrayOutput) ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTagArrayOutput) ToNdbRegisterDatabaseTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTag {
		return vs[0].([]NdbRegisterDatabaseTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTagOutput)
}

type NdbRegisterDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone  *bool   `pulumi:"clone"`
	Clones *string `pulumi:"clones"`
	// clustered or not. Default is false
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties []NdbRegisterDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId *string                                  `pulumi:"scheduleId"`
	// - (Optional) schedule for snapshots
	Schedules           []NdbRegisterDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                                  `pulumi:"scope"`
	SlaId               *string                                  `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                    `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                                  `pulumi:"slaUpdateMetadata"`
	Slas                []NdbRegisterDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                                 `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// tags
	Tags []NdbRegisterDatabaseTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbRegisterDatabaseTimeMachineInput is an input type that accepts NdbRegisterDatabaseTimeMachineArgs and NdbRegisterDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInput` via:
//
//	NdbRegisterDatabaseTimeMachineArgs{...}
type NdbRegisterDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput
	ToNdbRegisterDatabaseTimeMachineOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineOutput
}

type NdbRegisterDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone  pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones pulumi.StringPtrInput `pulumi:"clones"`
	// clustered or not. Default is false
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties NdbRegisterDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId pulumi.StringPtrInput                            `pulumi:"scheduleId"`
	// - (Optional) schedule for snapshots
	Schedules           NdbRegisterDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                            `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                            `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                              `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                            `pulumi:"slaUpdateMetadata"`
	Slas                NdbRegisterDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                          `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags
	Tags NdbRegisterDatabaseTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbRegisterDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineArgs) ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput {
	return i.ToNdbRegisterDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineArgs) ToNdbRegisterDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineOutput)
}

// NdbRegisterDatabaseTimeMachineArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineArray and NdbRegisterDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineArray{ NdbRegisterDatabaseTimeMachineArgs{...} }
type NdbRegisterDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput
	ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineArrayOutput
}

type NdbRegisterDatabaseTimeMachineArray []NdbRegisterDatabaseTimeMachineInput

func (NdbRegisterDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineArray) ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineArray) ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineArrayOutput)
}

type NdbRegisterDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineOutput) ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineOutput) ToNdbRegisterDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbRegisterDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

// clustered or not. Default is false
func (o NdbRegisterDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbRegisterDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseTimeMachineOutput) Properties() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineProperty { return v.Properties }).(NdbRegisterDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbRegisterDatabaseTimeMachineOutput) Schedules() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineSchedule { return v.Schedules }).(NdbRegisterDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Slas() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineSla { return v.Slas }).(NdbRegisterDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbRegisterDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags
func (o NdbRegisterDatabaseTimeMachineOutput) Tags() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineTag { return v.Tags }).(NdbRegisterDatabaseTimeMachineTagArrayOutput)
}

// type of database
func (o NdbRegisterDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachine {
		return vs[0].([]NdbRegisterDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineOutput)
}

type NdbRegisterDatabaseTimeMachineInfo struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive *bool `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description *string `pulumi:"description"`
	// - (Required) name of time machine
	Name string `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbRegisterDatabaseTimeMachineInfoSchedule `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails []NdbRegisterDatabaseTimeMachineInfoSlaDetail `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid *string `pulumi:"slaid"`
	// - (Optional) tags
	Tags []NdbRegisterDatabaseTimeMachineInfoTag `pulumi:"tags"`
}

// NdbRegisterDatabaseTimeMachineInfoInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoArgs and NdbRegisterDatabaseTimeMachineInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoArgs{...}
type NdbRegisterDatabaseTimeMachineInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput
	ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoOutput
}

type NdbRegisterDatabaseTimeMachineInfoArgs struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive pulumi.BoolPtrInput `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) name of time machine
	Name pulumi.StringInput `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbRegisterDatabaseTimeMachineInfoScheduleInput `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid pulumi.StringPtrInput `pulumi:"slaid"`
	// - (Optional) tags
	Tags NdbRegisterDatabaseTimeMachineInfoTagArrayInput `pulumi:"tags"`
}

func (NdbRegisterDatabaseTimeMachineInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoOutput).ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoPtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoArgs, NdbRegisterDatabaseTimeMachineInfoPtr and NdbRegisterDatabaseTimeMachineInfoPtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoPtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoPtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoPtrType NdbRegisterDatabaseTimeMachineInfoArgs

func NdbRegisterDatabaseTimeMachineInfoPtr(v *NdbRegisterDatabaseTimeMachineInfoArgs) NdbRegisterDatabaseTimeMachineInfoPtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoPtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoPtrType) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoPtrType) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfo) *NdbRegisterDatabaseTimeMachineInfo {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoPtrOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *bool { return v.Autotunelogdrive }).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) string { return v.Name }).(pulumi.StringOutput)
}

// - (Optional) schedule for snapshots
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Schedule() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) NdbRegisterDatabaseTimeMachineInfoSchedule {
		return v.Schedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbRegisterDatabaseTimeMachineInfoOutput) SlaDetails() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		return v.SlaDetails
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *string { return v.Slaid }).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Tags() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoTag { return v.Tags }).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoPtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) NdbRegisterDatabaseTimeMachineInfo {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfo
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Autotunelogdrive
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Schedule() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *NdbRegisterDatabaseTimeMachineInfoSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) SlaDetails() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		if v == nil {
			return nil
		}
		return v.SlaDetails
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return v.Slaid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Tags() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSchedule struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule `pulumi:"yearlyschedule"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleArgs struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput `pulumi:"yearlyschedule"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleArgs, NdbRegisterDatabaseTimeMachineInfoSchedulePtr and NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoSchedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleArgs

func NdbRegisterDatabaseTimeMachineInfoSchedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleArgs) NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoSchedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoSchedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Continuousschedule() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		return v.Continuousschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Monthlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		return v.Monthlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Quartelyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		return v.Quartelyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Snapshottimeofday() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		return v.Snapshottimeofday
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Weeklyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		return v.Weeklyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Yearlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		return v.Yearlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) NdbRegisterDatabaseTimeMachineInfoSchedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoSchedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Continuousschedule() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		if v == nil {
			return nil
		}
		return v.Continuousschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Monthlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		if v == nil {
			return nil
		}
		return v.Monthlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Quartelyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		if v == nil {
			return nil
		}
		return v.Quartelyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Snapshottimeofday() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		if v == nil {
			return nil
		}
		return v.Snapshottimeofday
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Weeklyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		if v == nil {
			return nil
		}
		return v.Weeklyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Yearlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		if v == nil {
			return nil
		}
		return v.Yearlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule struct {
	Enabled           bool `pulumi:"enabled"`
	Logbackupinterval int  `pulumi:"logbackupinterval"`
	Snapshotsperday   int  `pulumi:"snapshotsperday"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs struct {
	Enabled           pulumi.BoolInput `pulumi:"enabled"`
	Logbackupinterval pulumi.IntInput  `pulumi:"logbackupinterval"`
	Snapshotsperday   pulumi.IntInput  `pulumi:"snapshotsperday"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Logbackupinterval() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) int { return v.Logbackupinterval }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Snapshotsperday() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) int { return v.Snapshotsperday }).(pulumi.IntOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Logbackupinterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Logbackupinterval
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Snapshotsperday() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Snapshotsperday
	}).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule struct {
	Dayofmonth int  `pulumi:"dayofmonth"`
	Enabled    bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs struct {
	Dayofmonth pulumi.IntInput  `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule struct {
	Dayofmonth int    `pulumi:"dayofmonth"`
	Enabled    bool   `pulumi:"enabled"`
	Startmonth string `pulumi:"startmonth"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs struct {
	Dayofmonth pulumi.IntInput    `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput   `pulumi:"enabled"`
	Startmonth pulumi.StringInput `pulumi:"startmonth"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Startmonth() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) string { return v.Startmonth }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Startmonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Startmonth
	}).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday struct {
	Hours   int `pulumi:"hours"`
	Minutes int `pulumi:"minutes"`
	Seconds int `pulumi:"seconds"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs and NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs struct {
	Hours   pulumi.IntInput `pulumi:"hours"`
	Minutes pulumi.IntInput `pulumi:"minutes"`
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs, NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtr and NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Hours }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Minutes }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Seconds }).(pulumi.IntOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule struct {
	Dayofweek string `pulumi:"dayofweek"`
	Enabled   bool   `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs struct {
	Dayofweek pulumi.StringInput `pulumi:"dayofweek"`
	Enabled   pulumi.BoolInput   `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) Dayofweek() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) string { return v.Dayofweek }).(pulumi.StringOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Dayofweek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Dayofweek
	}).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule struct {
	Dayofmonth int    `pulumi:"dayofmonth"`
	Enabled    bool   `pulumi:"enabled"`
	Month      string `pulumi:"month"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs struct {
	Dayofmonth pulumi.IntInput    `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput   `pulumi:"enabled"`
	Month      pulumi.StringInput `pulumi:"month"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) string { return v.Month }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetail struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla `pulumi:"primarySlas"`
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs and NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{...}
type NdbRegisterDatabaseTimeMachineInfoSlaDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput `pulumi:"primarySlas"`
}

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput)
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailArray and NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailArray{ NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArray []NdbRegisterDatabaseTimeMachineInfoSlaDetailInput

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return o
}

// - (Required) primary sla details
// * `primary_sla.sla_id` :- (Required) sla id
// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) PrimarySlas() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetail) []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla {
		return v.PrimarySlas
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoSlaDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla struct {
	NxClusterIds []string `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId string `pulumi:"slaId"`
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs and NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{...}
type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs struct {
	NxClusterIds pulumi.StringArrayInput `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId pulumi.StringInput `pulumi:"slaId"`
}

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput)
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray and NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray{ NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) NxClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla) []string { return v.NxClusterIds }).(pulumi.StringArrayOutput)
}

// description of SLA ID.
func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) SlaId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla) string { return v.SlaId }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachineInfoTagInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoTagArgs and NdbRegisterDatabaseTimeMachineInfoTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoTagInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoTagArgs{...}
type NdbRegisterDatabaseTimeMachineInfoTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput
	ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput
}

type NdbRegisterDatabaseTimeMachineInfoTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachineInfoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArgs) ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArgs) ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoTagOutput)
}

// NdbRegisterDatabaseTimeMachineInfoTagArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoTagArray and NdbRegisterDatabaseTimeMachineInfoTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoTagArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoTagArray{ NdbRegisterDatabaseTimeMachineInfoTagArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoTagArray []NdbRegisterDatabaseTimeMachineInfoTagInput

func (NdbRegisterDatabaseTimeMachineInfoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArray) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArray) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoTag {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoTagOutput)
}

type NdbRegisterDatabaseTimeMachineProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachinePropertyInput is an input type that accepts NdbRegisterDatabaseTimeMachinePropertyArgs and NdbRegisterDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachinePropertyInput` via:
//
//	NdbRegisterDatabaseTimeMachinePropertyArgs{...}
type NdbRegisterDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput
	ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput
}

type NdbRegisterDatabaseTimeMachinePropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachinePropertyArgs) ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput {
	return i.ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachinePropertyArgs) ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachinePropertyOutput)
}

// NdbRegisterDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachinePropertyArray and NdbRegisterDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachinePropertyArray{ NdbRegisterDatabaseTimeMachinePropertyArgs{...} }
type NdbRegisterDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput
	ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput
}

type NdbRegisterDatabaseTimeMachinePropertyArray []NdbRegisterDatabaseTimeMachinePropertyInput

func (NdbRegisterDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachinePropertyArray) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachinePropertyArray) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachinePropertyArrayOutput)
}

type NdbRegisterDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineProperty {
		return vs[0].([]NdbRegisterDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachinePropertyOutput)
}

type NdbRegisterDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbRegisterDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description      *string                                                 `pulumi:"description"`
	GlobalPolicy     *bool                                                   `pulumi:"globalPolicy"`
	Id               *string                                                 `pulumi:"id"`
	MonthlySchedules []NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                   `pulumi:"name"`
	OwnerId            *string                                                   `pulumi:"ownerId"`
	QuartelySchedules  []NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                      `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                   `pulumi:"startTime"`
	SystemPolicy       *bool                                                     `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                                `pulumi:"timeZone"`
	UniqueName      *string                                                `pulumi:"uniqueName"`
	WeeklySchedules []NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbRegisterDatabaseTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbRegisterDatabaseTimeMachineScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description      pulumi.StringPtrInput                                           `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                             `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                           `pulumi:"id"`
	MonthlySchedules NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                             `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                             `pulumi:"ownerId"`
	QuartelySchedules  NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                                `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                             `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                               `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                          `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                          `pulumi:"uniqueName"`
	WeeklySchedules NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbRegisterDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleArray and NdbRegisterDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleArray []NdbRegisterDatabaseTimeMachineScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DailySchedules() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineSchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray and NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray []NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbRegisterDatabaseTimeMachineSlaInput is an input type that accepts NdbRegisterDatabaseTimeMachineSlaArgs and NdbRegisterDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineSlaInput` via:
//
//	NdbRegisterDatabaseTimeMachineSlaArgs{...}
type NdbRegisterDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput
	ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineSlaOutput
}

type NdbRegisterDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbRegisterDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineSlaArgs) ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput {
	return i.ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineSlaArgs) ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineSlaOutput)
}

// NdbRegisterDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineSlaArray and NdbRegisterDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineSlaArray{ NdbRegisterDatabaseTimeMachineSlaArgs{...} }
type NdbRegisterDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput
	ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput
}

type NdbRegisterDatabaseTimeMachineSlaArray []NdbRegisterDatabaseTimeMachineSlaInput

func (NdbRegisterDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineSlaArray) ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineSlaArray) ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineSlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineSla {
		return vs[0].([]NdbRegisterDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineSlaOutput)
}

type NdbRegisterDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	// - (Required) value for argument
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachineTagInput is an input type that accepts NdbRegisterDatabaseTimeMachineTagArgs and NdbRegisterDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineTagInput` via:
//
//	NdbRegisterDatabaseTimeMachineTagArgs{...}
type NdbRegisterDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput
	ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineTagOutput
}

type NdbRegisterDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	// - (Required) value for argument
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineTagArgs) ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput {
	return i.ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineTagArgs) ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineTagOutput)
}

// NdbRegisterDatabaseTimeMachineTagArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineTagArray and NdbRegisterDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineTagArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineTagArray{ NdbRegisterDatabaseTimeMachineTagArgs{...} }
type NdbRegisterDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput
	ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput
}

type NdbRegisterDatabaseTimeMachineTagArray []NdbRegisterDatabaseTimeMachineTagInput

func (NdbRegisterDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineTagArray) ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineTagArray) ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineTag {
		return vs[0].([]NdbRegisterDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineTagOutput)
}

type NdbRegisterDbserverCredential struct {
	Label *string `pulumi:"label"`
	// password of the NDB drive user account. Conflicts with ssh_key.
	Password string `pulumi:"password"`
	// username of the NDB drive user account that has sudo access
	Username string `pulumi:"username"`
}

// NdbRegisterDbserverCredentialInput is an input type that accepts NdbRegisterDbserverCredentialArgs and NdbRegisterDbserverCredentialOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverCredentialInput` via:
//
//	NdbRegisterDbserverCredentialArgs{...}
type NdbRegisterDbserverCredentialInput interface {
	pulumi.Input

	ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput
	ToNdbRegisterDbserverCredentialOutputWithContext(context.Context) NdbRegisterDbserverCredentialOutput
}

type NdbRegisterDbserverCredentialArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	// password of the NDB drive user account. Conflicts with ssh_key.
	Password pulumi.StringInput `pulumi:"password"`
	// username of the NDB drive user account that has sudo access
	Username pulumi.StringInput `pulumi:"username"`
}

func (NdbRegisterDbserverCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverCredential)(nil)).Elem()
}

func (i NdbRegisterDbserverCredentialArgs) ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput {
	return i.ToNdbRegisterDbserverCredentialOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverCredentialArgs) ToNdbRegisterDbserverCredentialOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverCredentialOutput)
}

// NdbRegisterDbserverCredentialArrayInput is an input type that accepts NdbRegisterDbserverCredentialArray and NdbRegisterDbserverCredentialArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverCredentialArrayInput` via:
//
//	NdbRegisterDbserverCredentialArray{ NdbRegisterDbserverCredentialArgs{...} }
type NdbRegisterDbserverCredentialArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput
	ToNdbRegisterDbserverCredentialArrayOutputWithContext(context.Context) NdbRegisterDbserverCredentialArrayOutput
}

type NdbRegisterDbserverCredentialArray []NdbRegisterDbserverCredentialInput

func (NdbRegisterDbserverCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverCredential)(nil)).Elem()
}

func (i NdbRegisterDbserverCredentialArray) ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput {
	return i.ToNdbRegisterDbserverCredentialArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverCredentialArray) ToNdbRegisterDbserverCredentialArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverCredentialArrayOutput)
}

type NdbRegisterDbserverCredentialOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverCredential)(nil)).Elem()
}

func (o NdbRegisterDbserverCredentialOutput) ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput {
	return o
}

func (o NdbRegisterDbserverCredentialOutput) ToNdbRegisterDbserverCredentialOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialOutput {
	return o
}

func (o NdbRegisterDbserverCredentialOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// password of the NDB drive user account. Conflicts with ssh_key.
func (o NdbRegisterDbserverCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) string { return v.Password }).(pulumi.StringOutput)
}

// username of the NDB drive user account that has sudo access
func (o NdbRegisterDbserverCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) string { return v.Username }).(pulumi.StringOutput)
}

type NdbRegisterDbserverCredentialArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverCredential)(nil)).Elem()
}

func (o NdbRegisterDbserverCredentialArrayOutput) ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput {
	return o
}

func (o NdbRegisterDbserverCredentialArrayOutput) ToNdbRegisterDbserverCredentialArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialArrayOutput {
	return o
}

func (o NdbRegisterDbserverCredentialArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverCredential {
		return vs[0].([]NdbRegisterDbserverCredential)[vs[1].(int)]
	}).(NdbRegisterDbserverCredentialOutput)
}

type NdbRegisterDbserverPostgresDatabase struct {
	// listener port of db server
	ListenerPort *string `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed
	PostgresSoftwareHome *string `pulumi:"postgresSoftwareHome"`
}

// NdbRegisterDbserverPostgresDatabaseInput is an input type that accepts NdbRegisterDbserverPostgresDatabaseArgs and NdbRegisterDbserverPostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPostgresDatabaseInput` via:
//
//	NdbRegisterDbserverPostgresDatabaseArgs{...}
type NdbRegisterDbserverPostgresDatabaseInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput
	ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(context.Context) NdbRegisterDbserverPostgresDatabaseOutput
}

type NdbRegisterDbserverPostgresDatabaseArgs struct {
	// listener port of db server
	ListenerPort pulumi.StringPtrInput `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed
	PostgresSoftwareHome pulumi.StringPtrInput `pulumi:"postgresSoftwareHome"`
}

func (NdbRegisterDbserverPostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (i NdbRegisterDbserverPostgresDatabaseArgs) ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput {
	return i.ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPostgresDatabaseArgs) ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPostgresDatabaseOutput)
}

// NdbRegisterDbserverPostgresDatabaseArrayInput is an input type that accepts NdbRegisterDbserverPostgresDatabaseArray and NdbRegisterDbserverPostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPostgresDatabaseArrayInput` via:
//
//	NdbRegisterDbserverPostgresDatabaseArray{ NdbRegisterDbserverPostgresDatabaseArgs{...} }
type NdbRegisterDbserverPostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput
	ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput
}

type NdbRegisterDbserverPostgresDatabaseArray []NdbRegisterDbserverPostgresDatabaseInput

func (NdbRegisterDbserverPostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (i NdbRegisterDbserverPostgresDatabaseArray) ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return i.ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPostgresDatabaseArray) ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPostgresDatabaseArrayOutput)
}

type NdbRegisterDbserverPostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (o NdbRegisterDbserverPostgresDatabaseOutput) ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseOutput) ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseOutput {
	return o
}

// listener port of db server
func (o NdbRegisterDbserverPostgresDatabaseOutput) ListenerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverPostgresDatabase) *string { return v.ListenerPort }).(pulumi.StringPtrOutput)
}

// path to the PostgreSQL home directory in which the PostgreSQL software is installed
func (o NdbRegisterDbserverPostgresDatabaseOutput) PostgresSoftwareHome() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverPostgresDatabase) *string { return v.PostgresSoftwareHome }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverPostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverPostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverPostgresDatabase {
		return vs[0].([]NdbRegisterDbserverPostgresDatabase)[vs[1].(int)]
	}).(NdbRegisterDbserverPostgresDatabaseOutput)
}

type NdbRegisterDbserverProperty struct {
	// Name of db server vm. Should be used in Update Method only.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbRegisterDbserverPropertyInput is an input type that accepts NdbRegisterDbserverPropertyArgs and NdbRegisterDbserverPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPropertyInput` via:
//
//	NdbRegisterDbserverPropertyArgs{...}
type NdbRegisterDbserverPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput
	ToNdbRegisterDbserverPropertyOutputWithContext(context.Context) NdbRegisterDbserverPropertyOutput
}

type NdbRegisterDbserverPropertyArgs struct {
	// Name of db server vm. Should be used in Update Method only.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDbserverPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverProperty)(nil)).Elem()
}

func (i NdbRegisterDbserverPropertyArgs) ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput {
	return i.ToNdbRegisterDbserverPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPropertyArgs) ToNdbRegisterDbserverPropertyOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPropertyOutput)
}

// NdbRegisterDbserverPropertyArrayInput is an input type that accepts NdbRegisterDbserverPropertyArray and NdbRegisterDbserverPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPropertyArrayInput` via:
//
//	NdbRegisterDbserverPropertyArray{ NdbRegisterDbserverPropertyArgs{...} }
type NdbRegisterDbserverPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput
	ToNdbRegisterDbserverPropertyArrayOutputWithContext(context.Context) NdbRegisterDbserverPropertyArrayOutput
}

type NdbRegisterDbserverPropertyArray []NdbRegisterDbserverPropertyInput

func (NdbRegisterDbserverPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverProperty)(nil)).Elem()
}

func (i NdbRegisterDbserverPropertyArray) ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput {
	return i.ToNdbRegisterDbserverPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPropertyArray) ToNdbRegisterDbserverPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPropertyArrayOutput)
}

type NdbRegisterDbserverPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverProperty)(nil)).Elem()
}

func (o NdbRegisterDbserverPropertyOutput) ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput {
	return o
}

func (o NdbRegisterDbserverPropertyOutput) ToNdbRegisterDbserverPropertyOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyOutput {
	return o
}

// Name of db server vm. Should be used in Update Method only.
func (o NdbRegisterDbserverPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverProperty)(nil)).Elem()
}

func (o NdbRegisterDbserverPropertyArrayOutput) ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput {
	return o
}

func (o NdbRegisterDbserverPropertyArrayOutput) ToNdbRegisterDbserverPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyArrayOutput {
	return o
}

func (o NdbRegisterDbserverPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverProperty {
		return vs[0].([]NdbRegisterDbserverProperty)[vs[1].(int)]
	}).(NdbRegisterDbserverPropertyOutput)
}

type NdbRegisterDbserverTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDbserverTagInput is an input type that accepts NdbRegisterDbserverTagArgs and NdbRegisterDbserverTagOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverTagInput` via:
//
//	NdbRegisterDbserverTagArgs{...}
type NdbRegisterDbserverTagInput interface {
	pulumi.Input

	ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput
	ToNdbRegisterDbserverTagOutputWithContext(context.Context) NdbRegisterDbserverTagOutput
}

type NdbRegisterDbserverTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDbserverTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverTag)(nil)).Elem()
}

func (i NdbRegisterDbserverTagArgs) ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput {
	return i.ToNdbRegisterDbserverTagOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverTagArgs) ToNdbRegisterDbserverTagOutputWithContext(ctx context.Context) NdbRegisterDbserverTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverTagOutput)
}

// NdbRegisterDbserverTagArrayInput is an input type that accepts NdbRegisterDbserverTagArray and NdbRegisterDbserverTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverTagArrayInput` via:
//
//	NdbRegisterDbserverTagArray{ NdbRegisterDbserverTagArgs{...} }
type NdbRegisterDbserverTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput
	ToNdbRegisterDbserverTagArrayOutputWithContext(context.Context) NdbRegisterDbserverTagArrayOutput
}

type NdbRegisterDbserverTagArray []NdbRegisterDbserverTagInput

func (NdbRegisterDbserverTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverTag)(nil)).Elem()
}

func (i NdbRegisterDbserverTagArray) ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput {
	return i.ToNdbRegisterDbserverTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverTagArray) ToNdbRegisterDbserverTagArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverTagArrayOutput)
}

type NdbRegisterDbserverTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverTag)(nil)).Elem()
}

func (o NdbRegisterDbserverTagOutput) ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput {
	return o
}

func (o NdbRegisterDbserverTagOutput) ToNdbRegisterDbserverTagOutputWithContext(ctx context.Context) NdbRegisterDbserverTagOutput {
	return o
}

func (o NdbRegisterDbserverTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverTag)(nil)).Elem()
}

func (o NdbRegisterDbserverTagArrayOutput) ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput {
	return o
}

func (o NdbRegisterDbserverTagArrayOutput) ToNdbRegisterDbserverTagArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverTagArrayOutput {
	return o
}

func (o NdbRegisterDbserverTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverTag {
		return vs[0].([]NdbRegisterDbserverTag)[vs[1].(int)]
	}).(NdbRegisterDbserverTagOutput)
}

type NdbScaleDatabaseDatabaseNode struct {
	AccessLevel    map[string]string `pulumi:"accessLevel"`
	DatabaseId     *string           `pulumi:"databaseId"`
	DatabaseStatus *string           `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbScaleDatabaseDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbScaleDatabaseDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                        `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbScaleDatabaseDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                        `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbScaleDatabaseDatabaseNodeTag `pulumi:"tags"`
}

// NdbScaleDatabaseDatabaseNodeInput is an input type that accepts NdbScaleDatabaseDatabaseNodeArgs and NdbScaleDatabaseDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInput` via:
//
//	NdbScaleDatabaseDatabaseNodeArgs{...}
type NdbScaleDatabaseDatabaseNodeInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput
	ToNdbScaleDatabaseDatabaseNodeOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeOutput
}

type NdbScaleDatabaseDatabaseNodeArgs struct {
	AccessLevel    pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbScaleDatabaseDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbScaleDatabaseDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                  `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                  `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbScaleDatabaseDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbScaleDatabaseDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeArgs) ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeArgs) ToNdbScaleDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeOutput)
}

// NdbScaleDatabaseDatabaseNodeArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeArray and NdbScaleDatabaseDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeArray{ NdbScaleDatabaseDatabaseNodeArgs{...} }
type NdbScaleDatabaseDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput
	ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput
}

type NdbScaleDatabaseDatabaseNodeArray []NdbScaleDatabaseDatabaseNodeInput

func (NdbScaleDatabaseDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeArray) ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeArray) ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ToNdbScaleDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Infos() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeInfo { return v.Infos }).(NdbScaleDatabaseDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseDatabaseNodeOutput) Properties() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeProperty { return v.Properties }).(NdbScaleDatabaseDatabaseNodePropertyArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ProtectionDomains() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbScaleDatabaseDatabaseNodeOutput) Tags() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeTag { return v.Tags }).(NdbScaleDatabaseDatabaseNodeTagArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNode {
		return vs[0].([]NdbScaleDatabaseDatabaseNode)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeOutput)
}

type NdbScaleDatabaseDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbScaleDatabaseDatabaseNodeInfoInput is an input type that accepts NdbScaleDatabaseDatabaseNodeInfoArgs and NdbScaleDatabaseDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInfoInput` via:
//
//	NdbScaleDatabaseDatabaseNodeInfoArgs{...}
type NdbScaleDatabaseDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput
	ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput
}

type NdbScaleDatabaseDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeInfoArgs) ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeInfoArgs) ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeInfoOutput)
}

// NdbScaleDatabaseDatabaseNodeInfoArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeInfoArray and NdbScaleDatabaseDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInfoArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeInfoArray{ NdbScaleDatabaseDatabaseNodeInfoArgs{...} }
type NdbScaleDatabaseDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput
	ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput
}

type NdbScaleDatabaseDatabaseNodeInfoArray []NdbScaleDatabaseDatabaseNodeInfoInput

func (NdbScaleDatabaseDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeInfoArray) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeInfoArray) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeInfoArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbScaleDatabaseDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeInfo {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeInfoOutput)
}

type NdbScaleDatabaseDatabaseNodeProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodePropertyInput is an input type that accepts NdbScaleDatabaseDatabaseNodePropertyArgs and NdbScaleDatabaseDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodePropertyInput` via:
//
//	NdbScaleDatabaseDatabaseNodePropertyArgs{...}
type NdbScaleDatabaseDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput
	ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput
}

type NdbScaleDatabaseDatabaseNodePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodePropertyArgs) ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput {
	return i.ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodePropertyArgs) ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodePropertyOutput)
}

// NdbScaleDatabaseDatabaseNodePropertyArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodePropertyArray and NdbScaleDatabaseDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodePropertyArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodePropertyArray{ NdbScaleDatabaseDatabaseNodePropertyArgs{...} }
type NdbScaleDatabaseDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput
	ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput
}

type NdbScaleDatabaseDatabaseNodePropertyArray []NdbScaleDatabaseDatabaseNodePropertyInput

func (NdbScaleDatabaseDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodePropertyArray) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodePropertyArray) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodePropertyArrayOutput)
}

type NdbScaleDatabaseDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProperty {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodePropertyOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbScaleDatabaseDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainArgs and NdbScaleDatabaseDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{...}
type NdbScaleDatabaseDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput)
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainArray and NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainArray{ NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{...} }
type NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArray []NdbScaleDatabaseDatabaseNodeProtectionDomainInput

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Properties() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) []NdbScaleDatabaseDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProtectionDomain {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs and NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray and NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray{ NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray []NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbScaleDatabaseDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodeTagInput is an input type that accepts NdbScaleDatabaseDatabaseNodeTagArgs and NdbScaleDatabaseDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeTagInput` via:
//
//	NdbScaleDatabaseDatabaseNodeTagArgs{...}
type NdbScaleDatabaseDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput
	ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeTagOutput
}

type NdbScaleDatabaseDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeTagArgs) ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeTagArgs) ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeTagOutput)
}

// NdbScaleDatabaseDatabaseNodeTagArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeTagArray and NdbScaleDatabaseDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeTagArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeTagArray{ NdbScaleDatabaseDatabaseNodeTagArgs{...} }
type NdbScaleDatabaseDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput
	ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput
}

type NdbScaleDatabaseDatabaseNodeTagArray []NdbScaleDatabaseDatabaseNodeTagInput

func (NdbScaleDatabaseDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeTagArray) ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeTagArray) ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeTagArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeTag {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeTag)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeTagOutput)
}

type NdbScaleDatabaseInfo struct {
	BpgConfigs []NdbScaleDatabaseInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string               `pulumi:"secureInfo"`
}

// NdbScaleDatabaseInfoInput is an input type that accepts NdbScaleDatabaseInfoArgs and NdbScaleDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoInput` via:
//
//	NdbScaleDatabaseInfoArgs{...}
type NdbScaleDatabaseInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput
	ToNdbScaleDatabaseInfoOutputWithContext(context.Context) NdbScaleDatabaseInfoOutput
}

type NdbScaleDatabaseInfoArgs struct {
	BpgConfigs NdbScaleDatabaseInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                   `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoArgs) ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput {
	return i.ToNdbScaleDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoArgs) ToNdbScaleDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoOutput)
}

// NdbScaleDatabaseInfoArrayInput is an input type that accepts NdbScaleDatabaseInfoArray and NdbScaleDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoArrayInput` via:
//
//	NdbScaleDatabaseInfoArray{ NdbScaleDatabaseInfoArgs{...} }
type NdbScaleDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput
	ToNdbScaleDatabaseInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoArrayOutput
}

type NdbScaleDatabaseInfoArray []NdbScaleDatabaseInfoInput

func (NdbScaleDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoArray) ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput {
	return i.ToNdbScaleDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoArray) ToNdbScaleDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoArrayOutput)
}

type NdbScaleDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoOutput) ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseInfoOutput) ToNdbScaleDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseInfoOutput) BpgConfigs() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfo) []NdbScaleDatabaseInfoBpgConfig { return v.BpgConfigs }).(NdbScaleDatabaseInfoBpgConfigArrayOutput)
}

func (o NdbScaleDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoArrayOutput) ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoArrayOutput) ToNdbScaleDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfo {
		return vs[0].([]NdbScaleDatabaseInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoOutput)
}

type NdbScaleDatabaseInfoBpgConfig struct {
	BpgDbParams  []NdbScaleDatabaseInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbScaleDatabaseInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbScaleDatabaseInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbScaleDatabaseInfoBpgConfigInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigArgs and NdbScaleDatabaseInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigArgs{...}
type NdbScaleDatabaseInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput
	ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigOutput
}

type NdbScaleDatabaseInfoBpgConfigArgs struct {
	BpgDbParams  NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbScaleDatabaseInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbScaleDatabaseInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigArgs) ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigArgs) ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigOutput)
}

// NdbScaleDatabaseInfoBpgConfigArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigArray and NdbScaleDatabaseInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigArray{ NdbScaleDatabaseInfoBpgConfigArgs{...} }
type NdbScaleDatabaseInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigArray []NdbScaleDatabaseInfoBpgConfigInput

func (NdbScaleDatabaseInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigArray) ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigArray) ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) BpgDbParams() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigBpgDbParam { return v.BpgDbParams }).(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) Storages() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigStorage { return v.Storages }).(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) VmProperties() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigVmProperty { return v.VmProperties }).(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfig {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfig)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbScaleDatabaseInfoBpgConfigBpgDbParamInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs and NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigBpgDbParamInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{...}
type NdbScaleDatabaseInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput
	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput)
}

// NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigBpgDbParamArray and NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigBpgDbParamArray{ NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{...} }
type NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArray []NdbScaleDatabaseInfoBpgConfigBpgDbParamInput

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorage struct {
	ArchiveStorages []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbScaleDatabaseInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbScaleDatabaseInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbScaleDatabaseInfoBpgConfigStorageInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArgs and NdbScaleDatabaseInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArray and NdbScaleDatabaseInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArray{ NdbScaleDatabaseInfoBpgConfigStorageArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArray []NdbScaleDatabaseInfoBpgConfigStorageInput

func (NdbScaleDatabaseInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ArchiveStorages() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) DataDisks() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) LogDisks() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorage {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs and NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray and NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray{ NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs and NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray and NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray{ NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray []NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs and NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray and NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray{ NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray []NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbScaleDatabaseInfoBpgConfigVmPropertyInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigVmPropertyArgs and NdbScaleDatabaseInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigVmPropertyInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{...}
type NdbScaleDatabaseInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput
	ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput)
}

// NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigVmPropertyArray and NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigVmPropertyArray{ NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{...} }
type NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArray []NdbScaleDatabaseInfoBpgConfigVmPropertyInput

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigVmProperty {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput)
}

type NdbScaleDatabaseLcmConfig struct {
	ExpiryDetails      []NdbScaleDatabaseLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbScaleDatabaseLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbScaleDatabaseLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbScaleDatabaseLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbScaleDatabaseLcmConfigInput is an input type that accepts NdbScaleDatabaseLcmConfigArgs and NdbScaleDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigInput` via:
//
//	NdbScaleDatabaseLcmConfigArgs{...}
type NdbScaleDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput
	ToNdbScaleDatabaseLcmConfigOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigOutput
}

type NdbScaleDatabaseLcmConfigArgs struct {
	ExpiryDetails      NdbScaleDatabaseLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbScaleDatabaseLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbScaleDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigArgs) ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput {
	return i.ToNdbScaleDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigArgs) ToNdbScaleDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigOutput)
}

// NdbScaleDatabaseLcmConfigArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigArray and NdbScaleDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigArray{ NdbScaleDatabaseLcmConfigArgs{...} }
type NdbScaleDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput
	ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigArrayOutput
}

type NdbScaleDatabaseLcmConfigArray []NdbScaleDatabaseLcmConfigInput

func (NdbScaleDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigArray) ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigArray) ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigArrayOutput)
}

type NdbScaleDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigOutput) ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigOutput) ToNdbScaleDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigOutput) ExpiryDetails() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigExpiryDetail { return v.ExpiryDetails }).(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) PostDeleteCommands() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) PreDeleteCommands() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) RefreshDetails() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigRefreshDetail { return v.RefreshDetails }).(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfig {
		return vs[0].([]NdbScaleDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbScaleDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbScaleDatabaseLcmConfigExpiryDetailArgs and NdbScaleDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbScaleDatabaseLcmConfigExpiryDetailArgs{...}
type NdbScaleDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput
	ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput
}

type NdbScaleDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbScaleDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArgs) ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArgs) ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigExpiryDetailOutput)
}

// NdbScaleDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigExpiryDetailArray and NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigExpiryDetailArray{ NdbScaleDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbScaleDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbScaleDatabaseLcmConfigExpiryDetailArray []NdbScaleDatabaseLcmConfigExpiryDetailInput

func (NdbScaleDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArray) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArray) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbScaleDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigExpiryDetailOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbScaleDatabaseLcmConfigPostDeleteCommandInput is an input type that accepts NdbScaleDatabaseLcmConfigPostDeleteCommandArgs and NdbScaleDatabaseLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPostDeleteCommandInput` via:
//
//	NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{...}
type NdbScaleDatabaseLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput
	ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return i.ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput)
}

// NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigPostDeleteCommandArray and NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigPostDeleteCommandArray{ NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{...} }
type NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput
	ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArray []NdbScaleDatabaseLcmConfigPostDeleteCommandInput

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigPostDeleteCommand {
		return vs[0].([]NdbScaleDatabaseLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbScaleDatabaseLcmConfigPreDeleteCommandInput is an input type that accepts NdbScaleDatabaseLcmConfigPreDeleteCommandArgs and NdbScaleDatabaseLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPreDeleteCommandInput` via:
//
//	NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{...}
type NdbScaleDatabaseLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput
	ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return i.ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput)
}

// NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigPreDeleteCommandArray and NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigPreDeleteCommandArray{ NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{...} }
type NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput
	ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArray []NdbScaleDatabaseLcmConfigPreDeleteCommandInput

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigPreDeleteCommand {
		return vs[0].([]NdbScaleDatabaseLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbScaleDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbScaleDatabaseLcmConfigRefreshDetailArgs and NdbScaleDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbScaleDatabaseLcmConfigRefreshDetailArgs{...}
type NdbScaleDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput
	ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput
}

type NdbScaleDatabaseLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbScaleDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArgs) ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArgs) ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigRefreshDetailOutput)
}

// NdbScaleDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigRefreshDetailArray and NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigRefreshDetailArray{ NdbScaleDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbScaleDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbScaleDatabaseLcmConfigRefreshDetailArray []NdbScaleDatabaseLcmConfigRefreshDetailInput

func (NdbScaleDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArray) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArray) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbScaleDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigRefreshDetailOutput)
}

type NdbScaleDatabaseLinkedDatabase struct {
	// name of database
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbScaleDatabaseLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbScaleDatabaseLinkedDatabaseInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseArgs and NdbScaleDatabaseLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseArgs{...}
type NdbScaleDatabaseLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput
	ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseOutput
}

type NdbScaleDatabaseLinkedDatabaseArgs struct {
	// name of database
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbScaleDatabaseLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbScaleDatabaseLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseArgs) ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseArgs) ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseOutput)
}

// NdbScaleDatabaseLinkedDatabaseArrayInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseArray and NdbScaleDatabaseLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseArrayInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseArray{ NdbScaleDatabaseLinkedDatabaseArgs{...} }
type NdbScaleDatabaseLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput
	ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput
}

type NdbScaleDatabaseLinkedDatabaseArray []NdbScaleDatabaseLinkedDatabaseInput

func (NdbScaleDatabaseLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseArray) ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseArray) ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseArrayOutput)
}

type NdbScaleDatabaseLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbScaleDatabaseLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Infos() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) []NdbScaleDatabaseLinkedDatabaseInfo { return v.Infos }).(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbScaleDatabaseLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbScaleDatabaseLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLinkedDatabase {
		return vs[0].([]NdbScaleDatabaseLinkedDatabase)[vs[1].(int)]
	}).(NdbScaleDatabaseLinkedDatabaseOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbScaleDatabaseLinkedDatabaseInfoInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseInfoArgs and NdbScaleDatabaseLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInfoInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseInfoArgs{...}
type NdbScaleDatabaseLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput
	ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput
}

type NdbScaleDatabaseLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArgs) ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArgs) ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseInfoOutput)
}

// NdbScaleDatabaseLinkedDatabaseInfoArrayInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseInfoArray and NdbScaleDatabaseLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInfoArrayInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseInfoArray{ NdbScaleDatabaseLinkedDatabaseInfoArgs{...} }
type NdbScaleDatabaseLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput
	ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput
}

type NdbScaleDatabaseLinkedDatabaseInfoArray []NdbScaleDatabaseLinkedDatabaseInfoInput

func (NdbScaleDatabaseLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArray) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArray) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLinkedDatabaseInfo {
		return vs[0].([]NdbScaleDatabaseLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseLinkedDatabaseInfoOutput)
}

type NdbScaleDatabaseProperty struct {
	// Name of database instance
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbScaleDatabasePropertyInput is an input type that accepts NdbScaleDatabasePropertyArgs and NdbScaleDatabasePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabasePropertyInput` via:
//
//	NdbScaleDatabasePropertyArgs{...}
type NdbScaleDatabasePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput
	ToNdbScaleDatabasePropertyOutputWithContext(context.Context) NdbScaleDatabasePropertyOutput
}

type NdbScaleDatabasePropertyArgs struct {
	// Name of database instance
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabasePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseProperty)(nil)).Elem()
}

func (i NdbScaleDatabasePropertyArgs) ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput {
	return i.ToNdbScaleDatabasePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabasePropertyArgs) ToNdbScaleDatabasePropertyOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabasePropertyOutput)
}

// NdbScaleDatabasePropertyArrayInput is an input type that accepts NdbScaleDatabasePropertyArray and NdbScaleDatabasePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabasePropertyArrayInput` via:
//
//	NdbScaleDatabasePropertyArray{ NdbScaleDatabasePropertyArgs{...} }
type NdbScaleDatabasePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput
	ToNdbScaleDatabasePropertyArrayOutputWithContext(context.Context) NdbScaleDatabasePropertyArrayOutput
}

type NdbScaleDatabasePropertyArray []NdbScaleDatabasePropertyInput

func (NdbScaleDatabasePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseProperty)(nil)).Elem()
}

func (i NdbScaleDatabasePropertyArray) ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput {
	return i.ToNdbScaleDatabasePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabasePropertyArray) ToNdbScaleDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabasePropertyArrayOutput)
}

type NdbScaleDatabasePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabasePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseProperty)(nil)).Elem()
}

func (o NdbScaleDatabasePropertyOutput) ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput {
	return o
}

func (o NdbScaleDatabasePropertyOutput) ToNdbScaleDatabasePropertyOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyOutput {
	return o
}

// Name of database instance
func (o NdbScaleDatabasePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabasePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabasePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabasePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseProperty)(nil)).Elem()
}

func (o NdbScaleDatabasePropertyArrayOutput) ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabasePropertyArrayOutput) ToNdbScaleDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabasePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabasePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseProperty {
		return vs[0].([]NdbScaleDatabaseProperty)[vs[1].(int)]
	}).(NdbScaleDatabasePropertyOutput)
}

type NdbScaleDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseTagInput is an input type that accepts NdbScaleDatabaseTagArgs and NdbScaleDatabaseTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTagInput` via:
//
//	NdbScaleDatabaseTagArgs{...}
type NdbScaleDatabaseTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput
	ToNdbScaleDatabaseTagOutputWithContext(context.Context) NdbScaleDatabaseTagOutput
}

type NdbScaleDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTagArgs) ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput {
	return i.ToNdbScaleDatabaseTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTagArgs) ToNdbScaleDatabaseTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTagOutput)
}

// NdbScaleDatabaseTagArrayInput is an input type that accepts NdbScaleDatabaseTagArray and NdbScaleDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTagArrayInput` via:
//
//	NdbScaleDatabaseTagArray{ NdbScaleDatabaseTagArgs{...} }
type NdbScaleDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput
	ToNdbScaleDatabaseTagArrayOutputWithContext(context.Context) NdbScaleDatabaseTagArrayOutput
}

type NdbScaleDatabaseTagArray []NdbScaleDatabaseTagInput

func (NdbScaleDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTagArray) ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput {
	return i.ToNdbScaleDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTagArray) ToNdbScaleDatabaseTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTagArrayOutput)
}

type NdbScaleDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTagOutput) ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput {
	return o
}

func (o NdbScaleDatabaseTagOutput) ToNdbScaleDatabaseTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTagOutput {
	return o
}

func (o NdbScaleDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTagArrayOutput) ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTagArrayOutput) ToNdbScaleDatabaseTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTag {
		return vs[0].([]NdbScaleDatabaseTag)[vs[1].(int)]
	}).(NdbScaleDatabaseTagOutput)
}

type NdbScaleDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      *bool   `pulumi:"clone"`
	Clones     *string `pulumi:"clones"`
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties          []NdbScaleDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                               `pulumi:"scheduleId"`
	Schedules           []NdbScaleDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                               `pulumi:"scope"`
	SlaId               *string                               `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                 `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                               `pulumi:"slaUpdateMetadata"`
	Slas                []NdbScaleDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                              `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbScaleDatabaseTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbScaleDatabaseTimeMachineInput is an input type that accepts NdbScaleDatabaseTimeMachineArgs and NdbScaleDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineInput` via:
//
//	NdbScaleDatabaseTimeMachineArgs{...}
type NdbScaleDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput
	ToNdbScaleDatabaseTimeMachineOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineOutput
}

type NdbScaleDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones     pulumi.StringPtrInput `pulumi:"clones"`
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties          NdbScaleDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                         `pulumi:"scheduleId"`
	Schedules           NdbScaleDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                         `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                         `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                           `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                         `pulumi:"slaUpdateMetadata"`
	Slas                NdbScaleDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                       `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbScaleDatabaseTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbScaleDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineArgs) ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput {
	return i.ToNdbScaleDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineArgs) ToNdbScaleDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineOutput)
}

// NdbScaleDatabaseTimeMachineArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineArray and NdbScaleDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineArray{ NdbScaleDatabaseTimeMachineArgs{...} }
type NdbScaleDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput
	ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineArrayOutput
}

type NdbScaleDatabaseTimeMachineArray []NdbScaleDatabaseTimeMachineInput

func (NdbScaleDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineArray) ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineArray) ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineArrayOutput)
}

type NdbScaleDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineOutput) ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineOutput) ToNdbScaleDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbScaleDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbScaleDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseTimeMachineOutput) Properties() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineProperty { return v.Properties }).(NdbScaleDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Schedules() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineSchedule { return v.Schedules }).(NdbScaleDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Slas() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineSla { return v.Slas }).(NdbScaleDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbScaleDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbScaleDatabaseTimeMachineOutput) Tags() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineTag { return v.Tags }).(NdbScaleDatabaseTimeMachineTagArrayOutput)
}

// type of database
func (o NdbScaleDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachine {
		return vs[0].([]NdbScaleDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineOutput)
}

type NdbScaleDatabaseTimeMachineProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseTimeMachinePropertyInput is an input type that accepts NdbScaleDatabaseTimeMachinePropertyArgs and NdbScaleDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachinePropertyInput` via:
//
//	NdbScaleDatabaseTimeMachinePropertyArgs{...}
type NdbScaleDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput
	ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbScaleDatabaseTimeMachinePropertyOutput
}

type NdbScaleDatabaseTimeMachinePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachinePropertyArgs) ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput {
	return i.ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachinePropertyArgs) ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachinePropertyOutput)
}

// NdbScaleDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbScaleDatabaseTimeMachinePropertyArray and NdbScaleDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbScaleDatabaseTimeMachinePropertyArray{ NdbScaleDatabaseTimeMachinePropertyArgs{...} }
type NdbScaleDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput
	ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput
}

type NdbScaleDatabaseTimeMachinePropertyArray []NdbScaleDatabaseTimeMachinePropertyInput

func (NdbScaleDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachinePropertyArray) ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachinePropertyArray) ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachinePropertyArrayOutput)
}

type NdbScaleDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineProperty {
		return vs[0].([]NdbScaleDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachinePropertyOutput)
}

type NdbScaleDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbScaleDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbScaleDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string                                              `pulumi:"description"`
	GlobalPolicy     *bool                                                `pulumi:"globalPolicy"`
	Id               *string                                              `pulumi:"id"`
	MonthlySchedules []NdbScaleDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                `pulumi:"name"`
	OwnerId            *string                                                `pulumi:"ownerId"`
	QuartelySchedules  []NdbScaleDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                   `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                `pulumi:"startTime"`
	SystemPolicy       *bool                                                  `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                             `pulumi:"timeZone"`
	UniqueName      *string                                             `pulumi:"uniqueName"`
	WeeklySchedules []NdbScaleDatabaseTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbScaleDatabaseTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbScaleDatabaseTimeMachineScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleArgs and NdbScaleDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput                                        `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                          `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                        `pulumi:"id"`
	MonthlySchedules NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                          `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                          `pulumi:"ownerId"`
	QuartelySchedules  NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                             `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                          `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                            `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                       `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                       `pulumi:"uniqueName"`
	WeeklySchedules NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbScaleDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleArray and NdbScaleDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleArray{ NdbScaleDatabaseTimeMachineScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleArray []NdbScaleDatabaseTimeMachineScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) DailySchedules() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbScaleDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineSchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray and NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray []NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray and NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray []NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray and NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray []NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbScaleDatabaseTimeMachineSlaInput is an input type that accepts NdbScaleDatabaseTimeMachineSlaArgs and NdbScaleDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineSlaInput` via:
//
//	NdbScaleDatabaseTimeMachineSlaArgs{...}
type NdbScaleDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput
	ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineSlaOutput
}

type NdbScaleDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbScaleDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineSlaArgs) ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput {
	return i.ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineSlaArgs) ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineSlaOutput)
}

// NdbScaleDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineSlaArray and NdbScaleDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineSlaArray{ NdbScaleDatabaseTimeMachineSlaArgs{...} }
type NdbScaleDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput
	ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput
}

type NdbScaleDatabaseTimeMachineSlaArray []NdbScaleDatabaseTimeMachineSlaInput

func (NdbScaleDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineSlaArray) ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineSlaArray) ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineSlaArrayOutput)
}

type NdbScaleDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineSla {
		return vs[0].([]NdbScaleDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineSlaOutput)
}

type NdbScaleDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseTimeMachineTagInput is an input type that accepts NdbScaleDatabaseTimeMachineTagArgs and NdbScaleDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineTagInput` via:
//
//	NdbScaleDatabaseTimeMachineTagArgs{...}
type NdbScaleDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput
	ToNdbScaleDatabaseTimeMachineTagOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineTagOutput
}

type NdbScaleDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineTagArgs) ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput {
	return i.ToNdbScaleDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineTagArgs) ToNdbScaleDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineTagOutput)
}

// NdbScaleDatabaseTimeMachineTagArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineTagArray and NdbScaleDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineTagArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineTagArray{ NdbScaleDatabaseTimeMachineTagArgs{...} }
type NdbScaleDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput
	ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput
}

type NdbScaleDatabaseTimeMachineTagArray []NdbScaleDatabaseTimeMachineTagInput

func (NdbScaleDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineTagArray) ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineTagArray) ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineTagArrayOutput)
}

type NdbScaleDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineTagOutput) ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagOutput) ToNdbScaleDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineTag {
		return vs[0].([]NdbScaleDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineTagOutput)
}

type NdbSoftwareVersionProfilePostgresDatabase struct {
	// db software notes
	DbSoftwareNotes *string `pulumi:"dbSoftwareNotes"`
	// os notes for software profile
	OsNotes *string `pulumi:"osNotes"`
	// source dbserver id
	SourceDbserverId *string `pulumi:"sourceDbserverId"`
}

// NdbSoftwareVersionProfilePostgresDatabaseInput is an input type that accepts NdbSoftwareVersionProfilePostgresDatabaseArgs and NdbSoftwareVersionProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePostgresDatabaseInput` via:
//
//	NdbSoftwareVersionProfilePostgresDatabaseArgs{...}
type NdbSoftwareVersionProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput
	ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput
}

type NdbSoftwareVersionProfilePostgresDatabaseArgs struct {
	// db software notes
	DbSoftwareNotes pulumi.StringPtrInput `pulumi:"dbSoftwareNotes"`
	// os notes for software profile
	OsNotes pulumi.StringPtrInput `pulumi:"osNotes"`
	// source dbserver id
	SourceDbserverId pulumi.StringPtrInput `pulumi:"sourceDbserverId"`
}

func (NdbSoftwareVersionProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArgs) ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return i.ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArgs) ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePostgresDatabaseOutput)
}

// NdbSoftwareVersionProfilePostgresDatabaseArrayInput is an input type that accepts NdbSoftwareVersionProfilePostgresDatabaseArray and NdbSoftwareVersionProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePostgresDatabaseArrayInput` via:
//
//	NdbSoftwareVersionProfilePostgresDatabaseArray{ NdbSoftwareVersionProfilePostgresDatabaseArgs{...} }
type NdbSoftwareVersionProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput
	ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput
}

type NdbSoftwareVersionProfilePostgresDatabaseArray []NdbSoftwareVersionProfilePostgresDatabaseInput

func (NdbSoftwareVersionProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArray) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return i.ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArray) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePostgresDatabaseArrayOutput)
}

type NdbSoftwareVersionProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return o
}

// db software notes
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) DbSoftwareNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.DbSoftwareNotes }).(pulumi.StringPtrOutput)
}

// os notes for software profile
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) OsNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.OsNotes }).(pulumi.StringPtrOutput)
}

// source dbserver id
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) SourceDbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.SourceDbserverId }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfilePostgresDatabase {
		return vs[0].([]NdbSoftwareVersionProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbSoftwareVersionProfilePostgresDatabaseOutput)
}

type NdbSoftwareVersionProfileProperty struct {
	// Name of profile
	Name *string `pulumi:"name"`
	// secure or not
	Secure *bool `pulumi:"secure"`
	// value of property
	Value *string `pulumi:"value"`
}

// NdbSoftwareVersionProfilePropertyInput is an input type that accepts NdbSoftwareVersionProfilePropertyArgs and NdbSoftwareVersionProfilePropertyOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePropertyInput` via:
//
//	NdbSoftwareVersionProfilePropertyArgs{...}
type NdbSoftwareVersionProfilePropertyInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput
	ToNdbSoftwareVersionProfilePropertyOutputWithContext(context.Context) NdbSoftwareVersionProfilePropertyOutput
}

type NdbSoftwareVersionProfilePropertyArgs struct {
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// secure or not
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// value of property
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbSoftwareVersionProfilePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePropertyArgs) ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput {
	return i.ToNdbSoftwareVersionProfilePropertyOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePropertyArgs) ToNdbSoftwareVersionProfilePropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePropertyOutput)
}

// NdbSoftwareVersionProfilePropertyArrayInput is an input type that accepts NdbSoftwareVersionProfilePropertyArray and NdbSoftwareVersionProfilePropertyArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePropertyArrayInput` via:
//
//	NdbSoftwareVersionProfilePropertyArray{ NdbSoftwareVersionProfilePropertyArgs{...} }
type NdbSoftwareVersionProfilePropertyArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput
	ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(context.Context) NdbSoftwareVersionProfilePropertyArrayOutput
}

type NdbSoftwareVersionProfilePropertyArray []NdbSoftwareVersionProfilePropertyInput

func (NdbSoftwareVersionProfilePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePropertyArray) ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput {
	return i.ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePropertyArray) ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePropertyArrayOutput)
}

type NdbSoftwareVersionProfilePropertyOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePropertyOutput) ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyOutput) ToNdbSoftwareVersionProfilePropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyOutput {
	return o
}

// Name of profile
func (o NdbSoftwareVersionProfilePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// secure or not
func (o NdbSoftwareVersionProfilePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// value of property
func (o NdbSoftwareVersionProfilePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfilePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfilePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileProperty {
		return vs[0].([]NdbSoftwareVersionProfileProperty)[vs[1].(int)]
	}).(NdbSoftwareVersionProfilePropertyOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociation struct {
	// date created of profile
	DateCreated *string `pulumi:"dateCreated"`
	// date modified of profile
	DateModified *string `pulumi:"dateModified"`
	// nutanix cluster id
	NxClusterId *string `pulumi:"nxClusterId"`
	// version optimized for provisioning
	OptimizedForProvisioning *bool `pulumi:"optimizedForProvisioning"`
	// owner id
	OwnerId *string `pulumi:"ownerId"`
	// profile version id
	ProfileVersionId *string `pulumi:"profileVersionId"`
	// properties of software profile
	Properties []NdbSoftwareVersionProfileVersionClusterAssociationProperty `pulumi:"properties"`
	// status of profile. Allowed Values are "deprecated", "published", "unpublished"
	Status *string `pulumi:"status"`
}

// NdbSoftwareVersionProfileVersionClusterAssociationInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationArgs and NdbSoftwareVersionProfileVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationArgs{...}
type NdbSoftwareVersionProfileVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationArgs struct {
	// date created of profile
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified of profile
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// nutanix cluster id
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	// version optimized for provisioning
	OptimizedForProvisioning pulumi.BoolPtrInput `pulumi:"optimizedForProvisioning"`
	// owner id
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// profile version id
	ProfileVersionId pulumi.StringPtrInput `pulumi:"profileVersionId"`
	// properties of software profile
	Properties NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput `pulumi:"properties"`
	// status of profile. Allowed Values are "deprecated", "published", "unpublished"
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbSoftwareVersionProfileVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationOutput)
}

// NdbSoftwareVersionProfileVersionClusterAssociationArrayInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationArray and NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationArrayInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationArray{ NdbSoftwareVersionProfileVersionClusterAssociationArgs{...} }
type NdbSoftwareVersionProfileVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationArray []NdbSoftwareVersionProfileVersionClusterAssociationInput

func (NdbSoftwareVersionProfileVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArray) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArray) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return o
}

// date created of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// nutanix cluster id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

// version optimized for provisioning
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) OptimizedForProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *bool { return v.OptimizedForProvisioning }).(pulumi.BoolPtrOutput)
}

// owner id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// profile version id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ProfileVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.ProfileVersionId }).(pulumi.StringPtrOutput)
}

// properties of software profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) Properties() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) []NdbSoftwareVersionProfileVersionClusterAssociationProperty {
		return v.Properties
	}).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput)
}

// status of profile. Allowed Values are "deprecated", "published", "unpublished"
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileVersionClusterAssociation {
		return vs[0].([]NdbSoftwareVersionProfileVersionClusterAssociation)[vs[1].(int)]
	}).(NdbSoftwareVersionProfileVersionClusterAssociationOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationProperty struct {
	// Name of profile
	Name *string `pulumi:"name"`
	// secure or not
	Secure *bool `pulumi:"secure"`
	// value of property
	Value *string `pulumi:"value"`
}

// NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs and NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{...}
type NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs struct {
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// secure or not
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// value of property
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput)
}

// NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray and NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray{ NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{...} }
type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray []NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return o
}

// Name of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// secure or not
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// value of property
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileVersionClusterAssociationProperty {
		return vs[0].([]NdbSoftwareVersionProfileVersionClusterAssociationProperty)[vs[1].(int)]
	}).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput)
}

type NdbStretchedVlanMetadata struct {
	Gateway    *string `pulumi:"gateway"`
	SubnetMask *string `pulumi:"subnetMask"`
}

// NdbStretchedVlanMetadataInput is an input type that accepts NdbStretchedVlanMetadataArgs and NdbStretchedVlanMetadataOutput values.
// You can construct a concrete instance of `NdbStretchedVlanMetadataInput` via:
//
//	NdbStretchedVlanMetadataArgs{...}
type NdbStretchedVlanMetadataInput interface {
	pulumi.Input

	ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput
	ToNdbStretchedVlanMetadataOutputWithContext(context.Context) NdbStretchedVlanMetadataOutput
}

type NdbStretchedVlanMetadataArgs struct {
	Gateway    pulumi.StringPtrInput `pulumi:"gateway"`
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (NdbStretchedVlanMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanMetadata)(nil)).Elem()
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput {
	return i.ToNdbStretchedVlanMetadataOutputWithContext(context.Background())
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataOutput)
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return i.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataOutput).ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx)
}

// NdbStretchedVlanMetadataPtrInput is an input type that accepts NdbStretchedVlanMetadataArgs, NdbStretchedVlanMetadataPtr and NdbStretchedVlanMetadataPtrOutput values.
// You can construct a concrete instance of `NdbStretchedVlanMetadataPtrInput` via:
//
//	        NdbStretchedVlanMetadataArgs{...}
//
//	or:
//
//	        nil
type NdbStretchedVlanMetadataPtrInput interface {
	pulumi.Input

	ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput
	ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Context) NdbStretchedVlanMetadataPtrOutput
}

type ndbStretchedVlanMetadataPtrType NdbStretchedVlanMetadataArgs

func NdbStretchedVlanMetadataPtr(v *NdbStretchedVlanMetadataArgs) NdbStretchedVlanMetadataPtrInput {
	return (*ndbStretchedVlanMetadataPtrType)(v)
}

func (*ndbStretchedVlanMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbStretchedVlanMetadata)(nil)).Elem()
}

func (i *ndbStretchedVlanMetadataPtrType) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return i.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (i *ndbStretchedVlanMetadataPtrType) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataPtrOutput)
}

type NdbStretchedVlanMetadataOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanMetadata)(nil)).Elem()
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput {
	return o
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataOutput {
	return o
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return o.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbStretchedVlanMetadata) *NdbStretchedVlanMetadata {
		return &v
	}).(NdbStretchedVlanMetadataPtrOutput)
}

func (o NdbStretchedVlanMetadataOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanMetadata) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanMetadataOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanMetadata) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanMetadataPtrOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbStretchedVlanMetadata)(nil)).Elem()
}

func (o NdbStretchedVlanMetadataPtrOutput) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return o
}

func (o NdbStretchedVlanMetadataPtrOutput) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return o
}

func (o NdbStretchedVlanMetadataPtrOutput) Elem() NdbStretchedVlanMetadataOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) NdbStretchedVlanMetadata {
		if v != nil {
			return *v
		}
		var ret NdbStretchedVlanMetadata
		return ret
	}).(NdbStretchedVlanMetadataOutput)
}

func (o NdbStretchedVlanMetadataPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanMetadataPtrOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SubnetMask
	}).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansList struct {
	// cluster id where network is present
	ClusterId *string `pulumi:"clusterId"`
	// network id
	Id *string `pulumi:"id"`
	// network managed by NDB or not
	Managed *bool `pulumi:"managed"`
	// name for the stretched VLAN
	Name *string `pulumi:"name"`
	// properties of network
	Properties []NdbStretchedVlanVlansListProperty `pulumi:"properties"`
	// properties map of network
	PropertiesMaps []NdbStretchedVlanVlansListPropertiesMap `pulumi:"propertiesMaps"`
	// stretched vlan id
	StretchedVlanId *string `pulumi:"stretchedVlanId"`
	// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
	Type *string `pulumi:"type"`
}

// NdbStretchedVlanVlansListInput is an input type that accepts NdbStretchedVlanVlansListArgs and NdbStretchedVlanVlansListOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListInput` via:
//
//	NdbStretchedVlanVlansListArgs{...}
type NdbStretchedVlanVlansListInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput
	ToNdbStretchedVlanVlansListOutputWithContext(context.Context) NdbStretchedVlanVlansListOutput
}

type NdbStretchedVlanVlansListArgs struct {
	// cluster id where network is present
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// network id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// network managed by NDB or not
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// name for the stretched VLAN
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of network
	Properties NdbStretchedVlanVlansListPropertyArrayInput `pulumi:"properties"`
	// properties map of network
	PropertiesMaps NdbStretchedVlanVlansListPropertiesMapArrayInput `pulumi:"propertiesMaps"`
	// stretched vlan id
	StretchedVlanId pulumi.StringPtrInput `pulumi:"stretchedVlanId"`
	// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbStretchedVlanVlansListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansList)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListArgs) ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput {
	return i.ToNdbStretchedVlanVlansListOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListArgs) ToNdbStretchedVlanVlansListOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListOutput)
}

// NdbStretchedVlanVlansListArrayInput is an input type that accepts NdbStretchedVlanVlansListArray and NdbStretchedVlanVlansListArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListArrayInput` via:
//
//	NdbStretchedVlanVlansListArray{ NdbStretchedVlanVlansListArgs{...} }
type NdbStretchedVlanVlansListArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput
	ToNdbStretchedVlanVlansListArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListArrayOutput
}

type NdbStretchedVlanVlansListArray []NdbStretchedVlanVlansListInput

func (NdbStretchedVlanVlansListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansList)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListArray) ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput {
	return i.ToNdbStretchedVlanVlansListArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListArray) ToNdbStretchedVlanVlansListArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListArrayOutput)
}

type NdbStretchedVlanVlansListOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansList)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListOutput) ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput {
	return o
}

func (o NdbStretchedVlanVlansListOutput) ToNdbStretchedVlanVlansListOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListOutput {
	return o
}

// cluster id where network is present
func (o NdbStretchedVlanVlansListOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// network id
func (o NdbStretchedVlanVlansListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// network managed by NDB or not
func (o NdbStretchedVlanVlansListOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// name for the stretched VLAN
func (o NdbStretchedVlanVlansListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of network
func (o NdbStretchedVlanVlansListOutput) Properties() NdbStretchedVlanVlansListPropertyArrayOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) []NdbStretchedVlanVlansListProperty { return v.Properties }).(NdbStretchedVlanVlansListPropertyArrayOutput)
}

// properties map of network
func (o NdbStretchedVlanVlansListOutput) PropertiesMaps() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) []NdbStretchedVlanVlansListPropertiesMap { return v.PropertiesMaps }).(NdbStretchedVlanVlansListPropertiesMapArrayOutput)
}

// stretched vlan id
func (o NdbStretchedVlanVlansListOutput) StretchedVlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.StretchedVlanId }).(pulumi.StringPtrOutput)
}

// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
func (o NdbStretchedVlanVlansListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansList)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListArrayOutput) ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListArrayOutput) ToNdbStretchedVlanVlansListArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansList {
		return vs[0].([]NdbStretchedVlanVlansList)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListOutput)
}

type NdbStretchedVlanVlansListPropertiesMap struct {
	// gateway of vlan
	VlanGateway *string `pulumi:"vlanGateway"`
	// primary dns of vlan
	VlanPrimaryDns *string `pulumi:"vlanPrimaryDns"`
	// secondary dns of vlan
	VlanSecondaryDns *string `pulumi:"vlanSecondaryDns"`
	// subnet mask of vlan
	VlanSubnetMask *string `pulumi:"vlanSubnetMask"`
}

// NdbStretchedVlanVlansListPropertiesMapInput is an input type that accepts NdbStretchedVlanVlansListPropertiesMap and NdbStretchedVlanVlansListPropertiesMapOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertiesMapInput` via:
//
//	NdbStretchedVlanVlansListPropertiesMap{ "key": NdbStretchedVlanVlansListPropertiesArgs{...} }
type NdbStretchedVlanVlansListPropertiesMapInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput
	ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertiesMapOutput
}

type NdbStretchedVlanVlansListPropertiesMapArgs struct {
	// gateway of vlan
	VlanGateway pulumi.StringPtrInput `pulumi:"vlanGateway"`
	// primary dns of vlan
	VlanPrimaryDns pulumi.StringPtrInput `pulumi:"vlanPrimaryDns"`
	// secondary dns of vlan
	VlanSecondaryDns pulumi.StringPtrInput `pulumi:"vlanSecondaryDns"`
	// subnet mask of vlan
	VlanSubnetMask pulumi.StringPtrInput `pulumi:"vlanSubnetMask"`
}

func (NdbStretchedVlanVlansListPropertiesMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertiesMapArgs) ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput {
	return i.ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertiesMapArgs) ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertiesMapOutput)
}

// NdbStretchedVlanVlansListPropertiesMapArrayInput is an input type that accepts NdbStretchedVlanVlansListPropertiesMapArray and NdbStretchedVlanVlansListPropertiesMapArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertiesMapArrayInput` via:
//
//	NdbStretchedVlanVlansListPropertiesMapArray{ NdbStretchedVlanVlansListPropertiesMapArgs{...} }
type NdbStretchedVlanVlansListPropertiesMapArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput
	ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput
}

type NdbStretchedVlanVlansListPropertiesMapArray []NdbStretchedVlanVlansListPropertiesMapInput

func (NdbStretchedVlanVlansListPropertiesMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertiesMapArray) ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return i.ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertiesMapArray) ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertiesMapArrayOutput)
}

type NdbStretchedVlanVlansListPropertiesMapOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertiesMapOutput) ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapOutput) ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapOutput {
	return o
}

// gateway of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanGateway }).(pulumi.StringPtrOutput)
}

// primary dns of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanPrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanPrimaryDns }).(pulumi.StringPtrOutput)
}

// secondary dns of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanSecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanSecondaryDns }).(pulumi.StringPtrOutput)
}

// subnet mask of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanSubnetMask }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListPropertiesMapArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertiesMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListPropertiesMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansListPropertiesMap {
		return vs[0].([]NdbStretchedVlanVlansListPropertiesMap)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListPropertiesMapOutput)
}

type NdbStretchedVlanVlansListProperty struct {
	// name for the stretched VLAN
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbStretchedVlanVlansListPropertyInput is an input type that accepts NdbStretchedVlanVlansListPropertyArgs and NdbStretchedVlanVlansListPropertyOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertyInput` via:
//
//	NdbStretchedVlanVlansListPropertyArgs{...}
type NdbStretchedVlanVlansListPropertyInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput
	ToNdbStretchedVlanVlansListPropertyOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertyOutput
}

type NdbStretchedVlanVlansListPropertyArgs struct {
	// name for the stretched VLAN
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbStretchedVlanVlansListPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertyArgs) ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput {
	return i.ToNdbStretchedVlanVlansListPropertyOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertyArgs) ToNdbStretchedVlanVlansListPropertyOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertyOutput)
}

// NdbStretchedVlanVlansListPropertyArrayInput is an input type that accepts NdbStretchedVlanVlansListPropertyArray and NdbStretchedVlanVlansListPropertyArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertyArrayInput` via:
//
//	NdbStretchedVlanVlansListPropertyArray{ NdbStretchedVlanVlansListPropertyArgs{...} }
type NdbStretchedVlanVlansListPropertyArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput
	ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertyArrayOutput
}

type NdbStretchedVlanVlansListPropertyArray []NdbStretchedVlanVlansListPropertyInput

func (NdbStretchedVlanVlansListPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertyArray) ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput {
	return i.ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertyArray) ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertyArrayOutput)
}

type NdbStretchedVlanVlansListPropertyOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertyOutput) ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyOutput) ToNdbStretchedVlanVlansListPropertyOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyOutput {
	return o
}

// name for the stretched VLAN
func (o NdbStretchedVlanVlansListPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanVlansListPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbStretchedVlanVlansListPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansListProperty {
		return vs[0].([]NdbStretchedVlanVlansListProperty)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListPropertyOutput)
}

type NetworkSecurityPolicyV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// NetworkSecurityPolicyV2LinkInput is an input type that accepts NetworkSecurityPolicyV2LinkArgs and NetworkSecurityPolicyV2LinkOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2LinkInput` via:
//
//	NetworkSecurityPolicyV2LinkArgs{...}
type NetworkSecurityPolicyV2LinkInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2LinkOutput() NetworkSecurityPolicyV2LinkOutput
	ToNetworkSecurityPolicyV2LinkOutputWithContext(context.Context) NetworkSecurityPolicyV2LinkOutput
}

type NetworkSecurityPolicyV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (NetworkSecurityPolicyV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2Link)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2LinkArgs) ToNetworkSecurityPolicyV2LinkOutput() NetworkSecurityPolicyV2LinkOutput {
	return i.ToNetworkSecurityPolicyV2LinkOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2LinkArgs) ToNetworkSecurityPolicyV2LinkOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2LinkOutput)
}

// NetworkSecurityPolicyV2LinkArrayInput is an input type that accepts NetworkSecurityPolicyV2LinkArray and NetworkSecurityPolicyV2LinkArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2LinkArrayInput` via:
//
//	NetworkSecurityPolicyV2LinkArray{ NetworkSecurityPolicyV2LinkArgs{...} }
type NetworkSecurityPolicyV2LinkArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2LinkArrayOutput() NetworkSecurityPolicyV2LinkArrayOutput
	ToNetworkSecurityPolicyV2LinkArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2LinkArrayOutput
}

type NetworkSecurityPolicyV2LinkArray []NetworkSecurityPolicyV2LinkInput

func (NetworkSecurityPolicyV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2Link)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2LinkArray) ToNetworkSecurityPolicyV2LinkArrayOutput() NetworkSecurityPolicyV2LinkArrayOutput {
	return i.ToNetworkSecurityPolicyV2LinkArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2LinkArray) ToNetworkSecurityPolicyV2LinkArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2LinkArrayOutput)
}

type NetworkSecurityPolicyV2LinkOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2Link)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2LinkOutput) ToNetworkSecurityPolicyV2LinkOutput() NetworkSecurityPolicyV2LinkOutput {
	return o
}

func (o NetworkSecurityPolicyV2LinkOutput) ToNetworkSecurityPolicyV2LinkOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2LinkOutput {
	return o
}

func (o NetworkSecurityPolicyV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityPolicyV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type NetworkSecurityPolicyV2LinkArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2Link)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2LinkArrayOutput) ToNetworkSecurityPolicyV2LinkArrayOutput() NetworkSecurityPolicyV2LinkArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2LinkArrayOutput) ToNetworkSecurityPolicyV2LinkArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2LinkArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2LinkArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2Link {
		return vs[0].([]NetworkSecurityPolicyV2Link)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2LinkOutput)
}

type NetworkSecurityPolicyV2Rule struct {
	// A user defined annotation for a rule.
	Description *string `pulumi:"description"`
	// A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []NetworkSecurityPolicyV2RuleLink `pulumi:"links"`
	// Spec for rules.
	Specs []NetworkSecurityPolicyV2RuleSpec `pulumi:"specs"`
	// The type for a rule—the value chosen here restricts which specification can be chosen. Acceptable values are "QUARANTINE", "TWO_ENV_ISOLATION", "APPLICATION", "INTRA_GROUP".
	Type string `pulumi:"type"`
}

// NetworkSecurityPolicyV2RuleInput is an input type that accepts NetworkSecurityPolicyV2RuleArgs and NetworkSecurityPolicyV2RuleOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleInput` via:
//
//	NetworkSecurityPolicyV2RuleArgs{...}
type NetworkSecurityPolicyV2RuleInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleOutput() NetworkSecurityPolicyV2RuleOutput
	ToNetworkSecurityPolicyV2RuleOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleOutput
}

type NetworkSecurityPolicyV2RuleArgs struct {
	// A user defined annotation for a rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links NetworkSecurityPolicyV2RuleLinkArrayInput `pulumi:"links"`
	// Spec for rules.
	Specs NetworkSecurityPolicyV2RuleSpecArrayInput `pulumi:"specs"`
	// The type for a rule—the value chosen here restricts which specification can be chosen. Acceptable values are "QUARANTINE", "TWO_ENV_ISOLATION", "APPLICATION", "INTRA_GROUP".
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityPolicyV2RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2Rule)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleArgs) ToNetworkSecurityPolicyV2RuleOutput() NetworkSecurityPolicyV2RuleOutput {
	return i.ToNetworkSecurityPolicyV2RuleOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleArgs) ToNetworkSecurityPolicyV2RuleOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleOutput)
}

// NetworkSecurityPolicyV2RuleArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleArray and NetworkSecurityPolicyV2RuleArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleArray{ NetworkSecurityPolicyV2RuleArgs{...} }
type NetworkSecurityPolicyV2RuleArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleArrayOutput() NetworkSecurityPolicyV2RuleArrayOutput
	ToNetworkSecurityPolicyV2RuleArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleArrayOutput
}

type NetworkSecurityPolicyV2RuleArray []NetworkSecurityPolicyV2RuleInput

func (NetworkSecurityPolicyV2RuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2Rule)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleArray) ToNetworkSecurityPolicyV2RuleArrayOutput() NetworkSecurityPolicyV2RuleArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleArray) ToNetworkSecurityPolicyV2RuleArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleArrayOutput)
}

type NetworkSecurityPolicyV2RuleOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2Rule)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleOutput) ToNetworkSecurityPolicyV2RuleOutput() NetworkSecurityPolicyV2RuleOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleOutput) ToNetworkSecurityPolicyV2RuleOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleOutput {
	return o
}

// A user defined annotation for a rule.
func (o NetworkSecurityPolicyV2RuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Rule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A globally unique identifier of an instance that is suitable for external consumption.
func (o NetworkSecurityPolicyV2RuleOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Rule) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o NetworkSecurityPolicyV2RuleOutput) Links() NetworkSecurityPolicyV2RuleLinkArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Rule) []NetworkSecurityPolicyV2RuleLink { return v.Links }).(NetworkSecurityPolicyV2RuleLinkArrayOutput)
}

// Spec for rules.
func (o NetworkSecurityPolicyV2RuleOutput) Specs() NetworkSecurityPolicyV2RuleSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Rule) []NetworkSecurityPolicyV2RuleSpec { return v.Specs }).(NetworkSecurityPolicyV2RuleSpecArrayOutput)
}

// The type for a rule—the value chosen here restricts which specification can be chosen. Acceptable values are "QUARANTINE", "TWO_ENV_ISOLATION", "APPLICATION", "INTRA_GROUP".
func (o NetworkSecurityPolicyV2RuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2Rule) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityPolicyV2RuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2Rule)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleArrayOutput) ToNetworkSecurityPolicyV2RuleArrayOutput() NetworkSecurityPolicyV2RuleArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleArrayOutput) ToNetworkSecurityPolicyV2RuleArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2Rule {
		return vs[0].([]NetworkSecurityPolicyV2Rule)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleOutput)
}

type NetworkSecurityPolicyV2RuleLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// NetworkSecurityPolicyV2RuleLinkInput is an input type that accepts NetworkSecurityPolicyV2RuleLinkArgs and NetworkSecurityPolicyV2RuleLinkOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleLinkInput` via:
//
//	NetworkSecurityPolicyV2RuleLinkArgs{...}
type NetworkSecurityPolicyV2RuleLinkInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleLinkOutput() NetworkSecurityPolicyV2RuleLinkOutput
	ToNetworkSecurityPolicyV2RuleLinkOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleLinkOutput
}

type NetworkSecurityPolicyV2RuleLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (NetworkSecurityPolicyV2RuleLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleLink)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleLinkArgs) ToNetworkSecurityPolicyV2RuleLinkOutput() NetworkSecurityPolicyV2RuleLinkOutput {
	return i.ToNetworkSecurityPolicyV2RuleLinkOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleLinkArgs) ToNetworkSecurityPolicyV2RuleLinkOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleLinkOutput)
}

// NetworkSecurityPolicyV2RuleLinkArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleLinkArray and NetworkSecurityPolicyV2RuleLinkArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleLinkArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleLinkArray{ NetworkSecurityPolicyV2RuleLinkArgs{...} }
type NetworkSecurityPolicyV2RuleLinkArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleLinkArrayOutput() NetworkSecurityPolicyV2RuleLinkArrayOutput
	ToNetworkSecurityPolicyV2RuleLinkArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleLinkArrayOutput
}

type NetworkSecurityPolicyV2RuleLinkArray []NetworkSecurityPolicyV2RuleLinkInput

func (NetworkSecurityPolicyV2RuleLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleLink)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleLinkArray) ToNetworkSecurityPolicyV2RuleLinkArrayOutput() NetworkSecurityPolicyV2RuleLinkArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleLinkArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleLinkArray) ToNetworkSecurityPolicyV2RuleLinkArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleLinkArrayOutput)
}

type NetworkSecurityPolicyV2RuleLinkOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleLink)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleLinkOutput) ToNetworkSecurityPolicyV2RuleLinkOutput() NetworkSecurityPolicyV2RuleLinkOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleLinkOutput) ToNetworkSecurityPolicyV2RuleLinkOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleLinkOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityPolicyV2RuleLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type NetworkSecurityPolicyV2RuleLinkArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleLink)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleLinkArrayOutput) ToNetworkSecurityPolicyV2RuleLinkArrayOutput() NetworkSecurityPolicyV2RuleLinkArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleLinkArrayOutput) ToNetworkSecurityPolicyV2RuleLinkArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleLinkArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleLinkArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleLink {
		return vs[0].([]NetworkSecurityPolicyV2RuleLink)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleLinkOutput)
}

type NetworkSecurityPolicyV2RuleSpec struct {
	// Application Rule Spec.
	ApplicationRuleSpecs []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec `pulumi:"applicationRuleSpecs"`
	// Intra entity group Rule Spec
	IntraEntityGroupRuleSpecs []NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec `pulumi:"intraEntityGroupRuleSpecs"`
	// Multi Environment Isolation Rule Spec.
	MultiEnvIsolationRuleSpecs []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec `pulumi:"multiEnvIsolationRuleSpecs"`
	// Two Environment Isolation Rule Spec.
	TwoEnvIsolationRuleSpecs []NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec `pulumi:"twoEnvIsolationRuleSpecs"`
}

// NetworkSecurityPolicyV2RuleSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecArgs and NetworkSecurityPolicyV2RuleSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecOutput() NetworkSecurityPolicyV2RuleSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecArgs struct {
	// Application Rule Spec.
	ApplicationRuleSpecs NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayInput `pulumi:"applicationRuleSpecs"`
	// Intra entity group Rule Spec
	IntraEntityGroupRuleSpecs NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayInput `pulumi:"intraEntityGroupRuleSpecs"`
	// Multi Environment Isolation Rule Spec.
	MultiEnvIsolationRuleSpecs NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayInput `pulumi:"multiEnvIsolationRuleSpecs"`
	// Two Environment Isolation Rule Spec.
	TwoEnvIsolationRuleSpecs NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayInput `pulumi:"twoEnvIsolationRuleSpecs"`
}

func (NetworkSecurityPolicyV2RuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecOutput() NetworkSecurityPolicyV2RuleSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecArray and NetworkSecurityPolicyV2RuleSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecArray{ NetworkSecurityPolicyV2RuleSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecArray []NetworkSecurityPolicyV2RuleSpecInput

func (NetworkSecurityPolicyV2RuleSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecOutput() NetworkSecurityPolicyV2RuleSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecOutput {
	return o
}

// Application Rule Spec.
func (o NetworkSecurityPolicyV2RuleSpecOutput) ApplicationRuleSpecs() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec {
		return v.ApplicationRuleSpecs
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput)
}

// Intra entity group Rule Spec
func (o NetworkSecurityPolicyV2RuleSpecOutput) IntraEntityGroupRuleSpecs() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpec) []NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec {
		return v.IntraEntityGroupRuleSpecs
	}).(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput)
}

// Multi Environment Isolation Rule Spec.
func (o NetworkSecurityPolicyV2RuleSpecOutput) MultiEnvIsolationRuleSpecs() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpec) []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec {
		return v.MultiEnvIsolationRuleSpecs
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput)
}

// Two Environment Isolation Rule Spec.
func (o NetworkSecurityPolicyV2RuleSpecOutput) TwoEnvIsolationRuleSpecs() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpec) []NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec {
		return v.TwoEnvIsolationRuleSpecs
	}).(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec struct {
	// A list of address group references.
	DestAddressGroupReferences []string `pulumi:"destAddressGroupReferences"`
	// A specification to how allow mode traffic should be applied, either ALL or NONE.
	DestAllowSpec *string `pulumi:"destAllowSpec"`
	// List of categories that define a set of network endpoints as outbound.
	DestCategoryReferences []string `pulumi:"destCategoryReferences"`
	// destination subnet value
	DestSubnets []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet `pulumi:"destSubnets"`
	// icmp services
	IcmpServices []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService `pulumi:"icmpServices"`
	// Denotes if rule allows traffic for all protocol.
	IsAllProtocolAllowed *bool `pulumi:"isAllProtocolAllowed"`
	// A reference to the network function chain in the rule.
	NetworkFunctionChainReference *string `pulumi:"networkFunctionChainReference"`
	// A set of network endpoints which is protected by a Network Security Policy and defined as a list of categories.
	SecuredGroupCategoryReferences []string `pulumi:"securedGroupCategoryReferences"`
	// A list of service group references.
	ServiceGroupReferences []string `pulumi:"serviceGroupReferences"`
	// A list of address group references.
	SrcAddressGroupReferences []string `pulumi:"srcAddressGroupReferences"`
	// A specification to how allow mode traffic should be applied, either ALL or NONE.
	SrcAllowSpec *string `pulumi:"srcAllowSpec"`
	// List of categories that define a set of network endpoints as inbound.
	SrcCategoryReferences []string `pulumi:"srcCategoryReferences"`
	// source subnet value
	SrcSubnets []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet `pulumi:"srcSubnets"`
	// tcp services
	TcpServices []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService `pulumi:"tcpServices"`
	// udp services
	UdpServices []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService `pulumi:"udpServices"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs struct {
	// A list of address group references.
	DestAddressGroupReferences pulumi.StringArrayInput `pulumi:"destAddressGroupReferences"`
	// A specification to how allow mode traffic should be applied, either ALL or NONE.
	DestAllowSpec pulumi.StringPtrInput `pulumi:"destAllowSpec"`
	// List of categories that define a set of network endpoints as outbound.
	DestCategoryReferences pulumi.StringArrayInput `pulumi:"destCategoryReferences"`
	// destination subnet value
	DestSubnets NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayInput `pulumi:"destSubnets"`
	// icmp services
	IcmpServices NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayInput `pulumi:"icmpServices"`
	// Denotes if rule allows traffic for all protocol.
	IsAllProtocolAllowed pulumi.BoolPtrInput `pulumi:"isAllProtocolAllowed"`
	// A reference to the network function chain in the rule.
	NetworkFunctionChainReference pulumi.StringPtrInput `pulumi:"networkFunctionChainReference"`
	// A set of network endpoints which is protected by a Network Security Policy and defined as a list of categories.
	SecuredGroupCategoryReferences pulumi.StringArrayInput `pulumi:"securedGroupCategoryReferences"`
	// A list of service group references.
	ServiceGroupReferences pulumi.StringArrayInput `pulumi:"serviceGroupReferences"`
	// A list of address group references.
	SrcAddressGroupReferences pulumi.StringArrayInput `pulumi:"srcAddressGroupReferences"`
	// A specification to how allow mode traffic should be applied, either ALL or NONE.
	SrcAllowSpec pulumi.StringPtrInput `pulumi:"srcAllowSpec"`
	// List of categories that define a set of network endpoints as inbound.
	SrcCategoryReferences pulumi.StringArrayInput `pulumi:"srcCategoryReferences"`
	// source subnet value
	SrcSubnets NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayInput `pulumi:"srcSubnets"`
	// tcp services
	TcpServices NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayInput `pulumi:"tcpServices"`
	// udp services
	UdpServices NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayInput `pulumi:"udpServices"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput {
	return o
}

// A list of address group references.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) DestAddressGroupReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string {
		return v.DestAddressGroupReferences
	}).(pulumi.StringArrayOutput)
}

// A specification to how allow mode traffic should be applied, either ALL or NONE.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) DestAllowSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) *string { return v.DestAllowSpec }).(pulumi.StringPtrOutput)
}

// List of categories that define a set of network endpoints as outbound.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) DestCategoryReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string { return v.DestCategoryReferences }).(pulumi.StringArrayOutput)
}

// destination subnet value
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) DestSubnets() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet {
		return v.DestSubnets
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput)
}

// icmp services
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) IcmpServices() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService {
		return v.IcmpServices
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput)
}

// Denotes if rule allows traffic for all protocol.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) IsAllProtocolAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) *bool { return v.IsAllProtocolAllowed }).(pulumi.BoolPtrOutput)
}

// A reference to the network function chain in the rule.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) NetworkFunctionChainReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) *string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringPtrOutput)
}

// A set of network endpoints which is protected by a Network Security Policy and defined as a list of categories.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) SecuredGroupCategoryReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string {
		return v.SecuredGroupCategoryReferences
	}).(pulumi.StringArrayOutput)
}

// A list of service group references.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) ServiceGroupReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string { return v.ServiceGroupReferences }).(pulumi.StringArrayOutput)
}

// A list of address group references.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) SrcAddressGroupReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string {
		return v.SrcAddressGroupReferences
	}).(pulumi.StringArrayOutput)
}

// A specification to how allow mode traffic should be applied, either ALL or NONE.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) SrcAllowSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) *string { return v.SrcAllowSpec }).(pulumi.StringPtrOutput)
}

// List of categories that define a set of network endpoints as inbound.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) SrcCategoryReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []string { return v.SrcCategoryReferences }).(pulumi.StringArrayOutput)
}

// source subnet value
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) SrcSubnets() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet {
		return v.SrcSubnets
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput)
}

// tcp services
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) TcpServices() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService {
		return v.TcpServices
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput)
}

// udp services
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput) UdpServices() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec) []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService {
		return v.UdpServices
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet struct {
	PrefixLength *string `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs struct {
	PrefixLength pulumi.StringPtrInput `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput) PrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet) *string { return v.PrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnet)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService struct {
	// Icmp service Code. Ignore this field if Code has to be ANY.
	Code *int `pulumi:"code"`
	// Set this field to true if both Type and Code is ANY.
	IsAllAllowed *bool `pulumi:"isAllAllowed"`
	// Icmp service Type. Ignore this field if Type has to be ANY.
	Type *int `pulumi:"type"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs struct {
	// Icmp service Code. Ignore this field if Code has to be ANY.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Set this field to true if both Type and Code is ANY.
	IsAllAllowed pulumi.BoolPtrInput `pulumi:"isAllAllowed"`
	// Icmp service Type. Ignore this field if Type has to be ANY.
	Type pulumi.IntPtrInput `pulumi:"type"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput {
	return o
}

// Icmp service Code. Ignore this field if Code has to be ANY.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Set this field to true if both Type and Code is ANY.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) IsAllAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService) *bool { return v.IsAllAllowed }).(pulumi.BoolPtrOutput)
}

// Icmp service Type. Ignore this field if Type has to be ANY.
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService) *int { return v.Type }).(pulumi.IntPtrOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpService)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet struct {
	PrefixLength *string `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs struct {
	PrefixLength pulumi.StringPtrInput `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput) PrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet) *string { return v.PrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnet)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService struct {
	// end port
	EndPort int `pulumi:"endPort"`
	// start port
	StartPort int `pulumi:"startPort"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs struct {
	// end port
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// start port
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput {
	return o
}

// end port
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService) int { return v.EndPort }).(pulumi.IntOutput)
}

// start port
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService) int { return v.StartPort }).(pulumi.IntOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpService)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService struct {
	// end port
	EndPort int `pulumi:"endPort"`
	// start port
	StartPort int `pulumi:"startPort"`
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs{...}
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs struct {
	// end port
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// start port
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput)
}

// NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray and NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray{ NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs{...} }
type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray []NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceInput

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput {
	return o
}

// end port
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService) int { return v.EndPort }).(pulumi.IntOutput)
}

// start port
func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService) int { return v.StartPort }).(pulumi.IntOutput)
}

type NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput() NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput) ToNetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpService)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput)
}

type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec struct {
	// List of secured group action.
	SecuredGroupAction *string `pulumi:"securedGroupAction"`
	// A specification to whether traffic between intra secured group entities should be allowed or denied.
	SecuredGroupCategoryReferences []string `pulumi:"securedGroupCategoryReferences"`
}

// NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs and NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs struct {
	// List of secured group action.
	SecuredGroupAction pulumi.StringPtrInput `pulumi:"securedGroupAction"`
	// A specification to whether traffic between intra secured group entities should be allowed or denied.
	SecuredGroupCategoryReferences pulumi.StringArrayInput `pulumi:"securedGroupCategoryReferences"`
}

func (NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray and NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray{ NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray []NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecInput

func (NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput {
	return o
}

// List of secured group action.
func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput) SecuredGroupAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec) *string { return v.SecuredGroupAction }).(pulumi.StringPtrOutput)
}

// A specification to whether traffic between intra secured group entities should be allowed or denied.
func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput) SecuredGroupCategoryReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec) []string {
		return v.SecuredGroupCategoryReferences
	}).(pulumi.StringArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec struct {
	// Multi Environment Isolation Rule Spec.
	Specs []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec `pulumi:"specs"`
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs struct {
	// Multi Environment Isolation Rule Spec.
	Specs NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayInput `pulumi:"specs"`
}

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray{ NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecInput

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput {
	return o
}

// Multi Environment Isolation Rule Spec.
func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput) Specs() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec) []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec {
		return v.Specs
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec struct {
	// all to all isolation groups
	AllToAllIsolationGroups []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup `pulumi:"allToAllIsolationGroups"`
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs struct {
	// all to all isolation groups
	AllToAllIsolationGroups NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayInput `pulumi:"allToAllIsolationGroups"`
}

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray{ NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecInput

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput {
	return o
}

// all to all isolation groups
func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput) AllToAllIsolationGroups() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec) []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup {
		return v.AllToAllIsolationGroups
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup struct {
	// Denotes the list of secured groups that will be used in All to All mutual isolation.
	IsolationGroups []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup `pulumi:"isolationGroups"`
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs{...}
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs struct {
	// Denotes the list of secured groups that will be used in All to All mutual isolation.
	IsolationGroups NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayInput `pulumi:"isolationGroups"`
}

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput)
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray{ NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs{...} }
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupInput

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput {
	return o
}

// Denotes the list of secured groups that will be used in All to All mutual isolation.
func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput) IsolationGroups() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup) []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup {
		return v.IsolationGroups
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroup)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup struct {
	// External identifiers of categories belonging to the isolation group.
	GroupCategoryReferences []string `pulumi:"groupCategoryReferences"`
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs{...}
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs struct {
	// External identifiers of categories belonging to the isolation group.
	GroupCategoryReferences pulumi.StringArrayInput `pulumi:"groupCategoryReferences"`
}

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput)
}

// NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray and NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray{ NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs{...} }
type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray []NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupInput

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput {
	return o
}

// External identifiers of categories belonging to the isolation group.
func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput) GroupCategoryReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup) []string {
		return v.GroupCategoryReferences
	}).(pulumi.StringArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput() NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput) ToNetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroup)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput)
}

type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec struct {
	// Denotes the first group of category uuids that will be used in an isolation policy.
	FirstIsolationGroups []string `pulumi:"firstIsolationGroups"`
	// Denotes the second group of category uuids that will be used in an isolation policy.
	SecondIsolationGroups []string `pulumi:"secondIsolationGroups"`
}

// NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs and NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs{...}
type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput
	ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput
}

type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs struct {
	// Denotes the first group of category uuids that will be used in an isolation policy.
	FirstIsolationGroups pulumi.StringArrayInput `pulumi:"firstIsolationGroups"`
	// Denotes the second group of category uuids that will be used in an isolation policy.
	SecondIsolationGroups pulumi.StringArrayInput `pulumi:"secondIsolationGroups"`
}

func (NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput)
}

// NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayInput is an input type that accepts NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray and NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayInput` via:
//
//	NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray{ NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs{...} }
type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayInput interface {
	pulumi.Input

	ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput
	ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutputWithContext(context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput
}

type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray []NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecInput

func (NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec)(nil)).Elem()
}

func (i NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput {
	return i.ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput {
	return o
}

// Denotes the first group of category uuids that will be used in an isolation policy.
func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput) FirstIsolationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec) []string { return v.FirstIsolationGroups }).(pulumi.StringArrayOutput)
}

// Denotes the second group of category uuids that will be used in an isolation policy.
func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput) SecondIsolationGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec) []string {
		return v.SecondIsolationGroups
	}).(pulumi.StringArrayOutput)
}

type NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec)(nil)).Elem()
}

func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput() NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput) ToNetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutputWithContext(ctx context.Context) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput {
	return o
}

func (o NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput) Index(i pulumi.IntInput) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec {
		return vs[0].([]NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpec)[vs[1].(int)]
	}).(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                              `pulumi:"expirationTime"`
	FilterKindLists               []string                                                             `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAdRuleInboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                              `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                              `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                              `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                    `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                              `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                              `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAdRuleInboundAllowListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListArgs and NetworkSecurityRuleAdRuleInboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                        `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                      `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                        `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                        `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                        `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                        `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                        `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                        `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListArray and NetworkSecurityRuleAdRuleInboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListArray{ NetworkSecurityRuleAdRuleInboundAllowListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListArray []NetworkSecurityRuleAdRuleInboundAllowListInput

func (NetworkSecurityRuleAdRuleInboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArray) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArray) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterParams() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs and NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray and NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray{ NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray []NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs and NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray and NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray{ NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                               `pulumi:"expirationTime"`
	FilterKindLists               []string                                                              `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAdRuleOutboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                               `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                               `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                               `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                     `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                               `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                               `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListArgs and NetworkSecurityRuleAdRuleOutboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                         `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                       `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                         `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                         `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                         `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                         `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                         `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                         `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListArray and NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListArray{ NetworkSecurityRuleAdRuleOutboundAllowListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListArray []NetworkSecurityRuleAdRuleOutboundAllowListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterParams() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs and NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray and NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray{ NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray []NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs and NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray and NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray{ NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleTargetGroupFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs and NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleTargetGroupFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{...}
type NetworkSecurityRuleAdRuleTargetGroupFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput
	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput)
}

// NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleTargetGroupFilterParamArray and NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleTargetGroupFilterParamArray{ NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArray []NetworkSecurityRuleAdRuleTargetGroupFilterParamInput

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleTargetGroupFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleTargetGroupFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleTargetGroupFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleTargetGroupFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                               `pulumi:"expirationTime"`
	FilterKindLists               []string                                                              `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAppRuleInboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                               `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                               `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                               `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                     `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                               `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                               `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAppRuleInboundAllowListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListArgs and NetworkSecurityRuleAppRuleInboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                         `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                       `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                         `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                         `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                         `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                         `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                         `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                         `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListArray and NetworkSecurityRuleAppRuleInboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListArray{ NetworkSecurityRuleAppRuleInboundAllowListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListArray []NetworkSecurityRuleAppRuleInboundAllowListInput

func (NetworkSecurityRuleAppRuleInboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArray) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArray) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterParams() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs and NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray and NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray{ NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray []NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs and NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray and NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray{ NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                                `pulumi:"expirationTime"`
	FilterKindLists               []string                                                               `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAppRuleOutboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                                `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                                `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                                `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                      `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                                `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                                `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListArgs and NetworkSecurityRuleAppRuleOutboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                          `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                        `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                          `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                          `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                          `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                          `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                          `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                          `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListArray and NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListArray{ NetworkSecurityRuleAppRuleOutboundAllowListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListArray []NetworkSecurityRuleAppRuleOutboundAllowListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterParams() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs and NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray and NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray{ NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray []NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs and NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray and NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray{ NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleTargetGroupFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs and NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleTargetGroupFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{...}
type NetworkSecurityRuleAppRuleTargetGroupFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput
	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput)
}

// NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleTargetGroupFilterParamArray and NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleTargetGroupFilterParamArray{ NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArray []NetworkSecurityRuleAppRuleTargetGroupFilterParamInput

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleTargetGroupFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleTargetGroupFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleTargetGroupFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleTargetGroupFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput)
}

type NetworkSecurityRuleCategory struct {
	// - (Required) The name for the network_security_rule.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NetworkSecurityRuleCategoryInput is an input type that accepts NetworkSecurityRuleCategoryArgs and NetworkSecurityRuleCategoryOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleCategoryInput` via:
//
//	NetworkSecurityRuleCategoryArgs{...}
type NetworkSecurityRuleCategoryInput interface {
	pulumi.Input

	ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput
	ToNetworkSecurityRuleCategoryOutputWithContext(context.Context) NetworkSecurityRuleCategoryOutput
}

type NetworkSecurityRuleCategoryArgs struct {
	// - (Required) The name for the network_security_rule.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkSecurityRuleCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleCategory)(nil)).Elem()
}

func (i NetworkSecurityRuleCategoryArgs) ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput {
	return i.ToNetworkSecurityRuleCategoryOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleCategoryArgs) ToNetworkSecurityRuleCategoryOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleCategoryOutput)
}

// NetworkSecurityRuleCategoryArrayInput is an input type that accepts NetworkSecurityRuleCategoryArray and NetworkSecurityRuleCategoryArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleCategoryArrayInput` via:
//
//	NetworkSecurityRuleCategoryArray{ NetworkSecurityRuleCategoryArgs{...} }
type NetworkSecurityRuleCategoryArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput
	ToNetworkSecurityRuleCategoryArrayOutputWithContext(context.Context) NetworkSecurityRuleCategoryArrayOutput
}

type NetworkSecurityRuleCategoryArray []NetworkSecurityRuleCategoryInput

func (NetworkSecurityRuleCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleCategory)(nil)).Elem()
}

func (i NetworkSecurityRuleCategoryArray) ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput {
	return i.ToNetworkSecurityRuleCategoryArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleCategoryArray) ToNetworkSecurityRuleCategoryArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleCategoryArrayOutput)
}

type NetworkSecurityRuleCategoryOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleCategory)(nil)).Elem()
}

func (o NetworkSecurityRuleCategoryOutput) ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput {
	return o
}

func (o NetworkSecurityRuleCategoryOutput) ToNetworkSecurityRuleCategoryOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleCategoryArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleCategory)(nil)).Elem()
}

func (o NetworkSecurityRuleCategoryArrayOutput) ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput {
	return o
}

func (o NetworkSecurityRuleCategoryArrayOutput) ToNetworkSecurityRuleCategoryArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryArrayOutput {
	return o
}

func (o NetworkSecurityRuleCategoryArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleCategory {
		return vs[0].([]NetworkSecurityRuleCategory)[vs[1].(int)]
	}).(NetworkSecurityRuleCategoryOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput is an input type that accepts NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs and NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput` via:
//
//	NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{...}
type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput
	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return i.ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput)
}

// NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput is an input type that accepts NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray and NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput` via:
//
//	NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray{ NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{...} }
type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput
	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray []NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleFirstEntityFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleFirstEntityFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleIsolationRuleFirstEntityFilterParam {
		return vs[0].([]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput is an input type that accepts NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs and NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput` via:
//
//	NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{...}
type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput
	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return i.ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput)
}

// NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput is an input type that accepts NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray and NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput` via:
//
//	NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray{ NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{...} }
type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput
	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray []NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleSecondEntityFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleSecondEntityFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleIsolationRuleSecondEntityFilterParam {
		return vs[0].([]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput)
}

type NgtInstallationV2Credential struct {
	// - (Required) password to sign in to server
	Password string `pulumi:"password"`
	// - (Required) username to sign in to server
	Username string `pulumi:"username"`
}

// NgtInstallationV2CredentialInput is an input type that accepts NgtInstallationV2CredentialArgs and NgtInstallationV2CredentialOutput values.
// You can construct a concrete instance of `NgtInstallationV2CredentialInput` via:
//
//	NgtInstallationV2CredentialArgs{...}
type NgtInstallationV2CredentialInput interface {
	pulumi.Input

	ToNgtInstallationV2CredentialOutput() NgtInstallationV2CredentialOutput
	ToNgtInstallationV2CredentialOutputWithContext(context.Context) NgtInstallationV2CredentialOutput
}

type NgtInstallationV2CredentialArgs struct {
	// - (Required) password to sign in to server
	Password pulumi.StringInput `pulumi:"password"`
	// - (Required) username to sign in to server
	Username pulumi.StringInput `pulumi:"username"`
}

func (NgtInstallationV2CredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2Credential)(nil)).Elem()
}

func (i NgtInstallationV2CredentialArgs) ToNgtInstallationV2CredentialOutput() NgtInstallationV2CredentialOutput {
	return i.ToNgtInstallationV2CredentialOutputWithContext(context.Background())
}

func (i NgtInstallationV2CredentialArgs) ToNgtInstallationV2CredentialOutputWithContext(ctx context.Context) NgtInstallationV2CredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2CredentialOutput)
}

func (i NgtInstallationV2CredentialArgs) ToNgtInstallationV2CredentialPtrOutput() NgtInstallationV2CredentialPtrOutput {
	return i.ToNgtInstallationV2CredentialPtrOutputWithContext(context.Background())
}

func (i NgtInstallationV2CredentialArgs) ToNgtInstallationV2CredentialPtrOutputWithContext(ctx context.Context) NgtInstallationV2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2CredentialOutput).ToNgtInstallationV2CredentialPtrOutputWithContext(ctx)
}

// NgtInstallationV2CredentialPtrInput is an input type that accepts NgtInstallationV2CredentialArgs, NgtInstallationV2CredentialPtr and NgtInstallationV2CredentialPtrOutput values.
// You can construct a concrete instance of `NgtInstallationV2CredentialPtrInput` via:
//
//	        NgtInstallationV2CredentialArgs{...}
//
//	or:
//
//	        nil
type NgtInstallationV2CredentialPtrInput interface {
	pulumi.Input

	ToNgtInstallationV2CredentialPtrOutput() NgtInstallationV2CredentialPtrOutput
	ToNgtInstallationV2CredentialPtrOutputWithContext(context.Context) NgtInstallationV2CredentialPtrOutput
}

type ngtInstallationV2CredentialPtrType NgtInstallationV2CredentialArgs

func NgtInstallationV2CredentialPtr(v *NgtInstallationV2CredentialArgs) NgtInstallationV2CredentialPtrInput {
	return (*ngtInstallationV2CredentialPtrType)(v)
}

func (*ngtInstallationV2CredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2Credential)(nil)).Elem()
}

func (i *ngtInstallationV2CredentialPtrType) ToNgtInstallationV2CredentialPtrOutput() NgtInstallationV2CredentialPtrOutput {
	return i.ToNgtInstallationV2CredentialPtrOutputWithContext(context.Background())
}

func (i *ngtInstallationV2CredentialPtrType) ToNgtInstallationV2CredentialPtrOutputWithContext(ctx context.Context) NgtInstallationV2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2CredentialPtrOutput)
}

type NgtInstallationV2CredentialOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2CredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2Credential)(nil)).Elem()
}

func (o NgtInstallationV2CredentialOutput) ToNgtInstallationV2CredentialOutput() NgtInstallationV2CredentialOutput {
	return o
}

func (o NgtInstallationV2CredentialOutput) ToNgtInstallationV2CredentialOutputWithContext(ctx context.Context) NgtInstallationV2CredentialOutput {
	return o
}

func (o NgtInstallationV2CredentialOutput) ToNgtInstallationV2CredentialPtrOutput() NgtInstallationV2CredentialPtrOutput {
	return o.ToNgtInstallationV2CredentialPtrOutputWithContext(context.Background())
}

func (o NgtInstallationV2CredentialOutput) ToNgtInstallationV2CredentialPtrOutputWithContext(ctx context.Context) NgtInstallationV2CredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NgtInstallationV2Credential) *NgtInstallationV2Credential {
		return &v
	}).(NgtInstallationV2CredentialPtrOutput)
}

// - (Required) password to sign in to server
func (o NgtInstallationV2CredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NgtInstallationV2Credential) string { return v.Password }).(pulumi.StringOutput)
}

// - (Required) username to sign in to server
func (o NgtInstallationV2CredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NgtInstallationV2Credential) string { return v.Username }).(pulumi.StringOutput)
}

type NgtInstallationV2CredentialPtrOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2CredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2Credential)(nil)).Elem()
}

func (o NgtInstallationV2CredentialPtrOutput) ToNgtInstallationV2CredentialPtrOutput() NgtInstallationV2CredentialPtrOutput {
	return o
}

func (o NgtInstallationV2CredentialPtrOutput) ToNgtInstallationV2CredentialPtrOutputWithContext(ctx context.Context) NgtInstallationV2CredentialPtrOutput {
	return o
}

func (o NgtInstallationV2CredentialPtrOutput) Elem() NgtInstallationV2CredentialOutput {
	return o.ApplyT(func(v *NgtInstallationV2Credential) NgtInstallationV2Credential {
		if v != nil {
			return *v
		}
		var ret NgtInstallationV2Credential
		return ret
	}).(NgtInstallationV2CredentialOutput)
}

// - (Required) password to sign in to server
func (o NgtInstallationV2CredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtInstallationV2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// - (Required) username to sign in to server
func (o NgtInstallationV2CredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtInstallationV2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type NgtInstallationV2RebootPreference struct {
	// - Restart schedule.
	Schedule *NgtInstallationV2RebootPreferenceSchedule `pulumi:"schedule"`
	// - Schedule type for restart.
	// * `LATER` : Schedule a restart for a specific time.
	// * `SKIP` : Do not schedule a restart.
	// * `IMMEDIATE` : Schedule an immediate restart.
	ScheduleType string `pulumi:"scheduleType"`
}

// NgtInstallationV2RebootPreferenceInput is an input type that accepts NgtInstallationV2RebootPreferenceArgs and NgtInstallationV2RebootPreferenceOutput values.
// You can construct a concrete instance of `NgtInstallationV2RebootPreferenceInput` via:
//
//	NgtInstallationV2RebootPreferenceArgs{...}
type NgtInstallationV2RebootPreferenceInput interface {
	pulumi.Input

	ToNgtInstallationV2RebootPreferenceOutput() NgtInstallationV2RebootPreferenceOutput
	ToNgtInstallationV2RebootPreferenceOutputWithContext(context.Context) NgtInstallationV2RebootPreferenceOutput
}

type NgtInstallationV2RebootPreferenceArgs struct {
	// - Restart schedule.
	Schedule NgtInstallationV2RebootPreferenceSchedulePtrInput `pulumi:"schedule"`
	// - Schedule type for restart.
	// * `LATER` : Schedule a restart for a specific time.
	// * `SKIP` : Do not schedule a restart.
	// * `IMMEDIATE` : Schedule an immediate restart.
	ScheduleType pulumi.StringInput `pulumi:"scheduleType"`
}

func (NgtInstallationV2RebootPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2RebootPreference)(nil)).Elem()
}

func (i NgtInstallationV2RebootPreferenceArgs) ToNgtInstallationV2RebootPreferenceOutput() NgtInstallationV2RebootPreferenceOutput {
	return i.ToNgtInstallationV2RebootPreferenceOutputWithContext(context.Background())
}

func (i NgtInstallationV2RebootPreferenceArgs) ToNgtInstallationV2RebootPreferenceOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferenceOutput)
}

func (i NgtInstallationV2RebootPreferenceArgs) ToNgtInstallationV2RebootPreferencePtrOutput() NgtInstallationV2RebootPreferencePtrOutput {
	return i.ToNgtInstallationV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (i NgtInstallationV2RebootPreferenceArgs) ToNgtInstallationV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferenceOutput).ToNgtInstallationV2RebootPreferencePtrOutputWithContext(ctx)
}

// NgtInstallationV2RebootPreferencePtrInput is an input type that accepts NgtInstallationV2RebootPreferenceArgs, NgtInstallationV2RebootPreferencePtr and NgtInstallationV2RebootPreferencePtrOutput values.
// You can construct a concrete instance of `NgtInstallationV2RebootPreferencePtrInput` via:
//
//	        NgtInstallationV2RebootPreferenceArgs{...}
//
//	or:
//
//	        nil
type NgtInstallationV2RebootPreferencePtrInput interface {
	pulumi.Input

	ToNgtInstallationV2RebootPreferencePtrOutput() NgtInstallationV2RebootPreferencePtrOutput
	ToNgtInstallationV2RebootPreferencePtrOutputWithContext(context.Context) NgtInstallationV2RebootPreferencePtrOutput
}

type ngtInstallationV2RebootPreferencePtrType NgtInstallationV2RebootPreferenceArgs

func NgtInstallationV2RebootPreferencePtr(v *NgtInstallationV2RebootPreferenceArgs) NgtInstallationV2RebootPreferencePtrInput {
	return (*ngtInstallationV2RebootPreferencePtrType)(v)
}

func (*ngtInstallationV2RebootPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2RebootPreference)(nil)).Elem()
}

func (i *ngtInstallationV2RebootPreferencePtrType) ToNgtInstallationV2RebootPreferencePtrOutput() NgtInstallationV2RebootPreferencePtrOutput {
	return i.ToNgtInstallationV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (i *ngtInstallationV2RebootPreferencePtrType) ToNgtInstallationV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferencePtrOutput)
}

type NgtInstallationV2RebootPreferenceOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2RebootPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2RebootPreference)(nil)).Elem()
}

func (o NgtInstallationV2RebootPreferenceOutput) ToNgtInstallationV2RebootPreferenceOutput() NgtInstallationV2RebootPreferenceOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceOutput) ToNgtInstallationV2RebootPreferenceOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceOutput) ToNgtInstallationV2RebootPreferencePtrOutput() NgtInstallationV2RebootPreferencePtrOutput {
	return o.ToNgtInstallationV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (o NgtInstallationV2RebootPreferenceOutput) ToNgtInstallationV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NgtInstallationV2RebootPreference) *NgtInstallationV2RebootPreference {
		return &v
	}).(NgtInstallationV2RebootPreferencePtrOutput)
}

// - Restart schedule.
func (o NgtInstallationV2RebootPreferenceOutput) Schedule() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyT(func(v NgtInstallationV2RebootPreference) *NgtInstallationV2RebootPreferenceSchedule {
		return v.Schedule
	}).(NgtInstallationV2RebootPreferenceSchedulePtrOutput)
}

// - Schedule type for restart.
// * `LATER` : Schedule a restart for a specific time.
// * `SKIP` : Do not schedule a restart.
// * `IMMEDIATE` : Schedule an immediate restart.
func (o NgtInstallationV2RebootPreferenceOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v NgtInstallationV2RebootPreference) string { return v.ScheduleType }).(pulumi.StringOutput)
}

type NgtInstallationV2RebootPreferencePtrOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2RebootPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2RebootPreference)(nil)).Elem()
}

func (o NgtInstallationV2RebootPreferencePtrOutput) ToNgtInstallationV2RebootPreferencePtrOutput() NgtInstallationV2RebootPreferencePtrOutput {
	return o
}

func (o NgtInstallationV2RebootPreferencePtrOutput) ToNgtInstallationV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferencePtrOutput {
	return o
}

func (o NgtInstallationV2RebootPreferencePtrOutput) Elem() NgtInstallationV2RebootPreferenceOutput {
	return o.ApplyT(func(v *NgtInstallationV2RebootPreference) NgtInstallationV2RebootPreference {
		if v != nil {
			return *v
		}
		var ret NgtInstallationV2RebootPreference
		return ret
	}).(NgtInstallationV2RebootPreferenceOutput)
}

// - Restart schedule.
func (o NgtInstallationV2RebootPreferencePtrOutput) Schedule() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyT(func(v *NgtInstallationV2RebootPreference) *NgtInstallationV2RebootPreferenceSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(NgtInstallationV2RebootPreferenceSchedulePtrOutput)
}

// - Schedule type for restart.
// * `LATER` : Schedule a restart for a specific time.
// * `SKIP` : Do not schedule a restart.
// * `IMMEDIATE` : Schedule an immediate restart.
func (o NgtInstallationV2RebootPreferencePtrOutput) ScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtInstallationV2RebootPreference) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleType
	}).(pulumi.StringPtrOutput)
}

type NgtInstallationV2RebootPreferenceSchedule struct {
	// - The start time for a scheduled restart.
	StartTime string `pulumi:"startTime"`
}

// NgtInstallationV2RebootPreferenceScheduleInput is an input type that accepts NgtInstallationV2RebootPreferenceScheduleArgs and NgtInstallationV2RebootPreferenceScheduleOutput values.
// You can construct a concrete instance of `NgtInstallationV2RebootPreferenceScheduleInput` via:
//
//	NgtInstallationV2RebootPreferenceScheduleArgs{...}
type NgtInstallationV2RebootPreferenceScheduleInput interface {
	pulumi.Input

	ToNgtInstallationV2RebootPreferenceScheduleOutput() NgtInstallationV2RebootPreferenceScheduleOutput
	ToNgtInstallationV2RebootPreferenceScheduleOutputWithContext(context.Context) NgtInstallationV2RebootPreferenceScheduleOutput
}

type NgtInstallationV2RebootPreferenceScheduleArgs struct {
	// - The start time for a scheduled restart.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (NgtInstallationV2RebootPreferenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2RebootPreferenceSchedule)(nil)).Elem()
}

func (i NgtInstallationV2RebootPreferenceScheduleArgs) ToNgtInstallationV2RebootPreferenceScheduleOutput() NgtInstallationV2RebootPreferenceScheduleOutput {
	return i.ToNgtInstallationV2RebootPreferenceScheduleOutputWithContext(context.Background())
}

func (i NgtInstallationV2RebootPreferenceScheduleArgs) ToNgtInstallationV2RebootPreferenceScheduleOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferenceScheduleOutput)
}

func (i NgtInstallationV2RebootPreferenceScheduleArgs) ToNgtInstallationV2RebootPreferenceSchedulePtrOutput() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return i.ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (i NgtInstallationV2RebootPreferenceScheduleArgs) ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferenceScheduleOutput).ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(ctx)
}

// NgtInstallationV2RebootPreferenceSchedulePtrInput is an input type that accepts NgtInstallationV2RebootPreferenceScheduleArgs, NgtInstallationV2RebootPreferenceSchedulePtr and NgtInstallationV2RebootPreferenceSchedulePtrOutput values.
// You can construct a concrete instance of `NgtInstallationV2RebootPreferenceSchedulePtrInput` via:
//
//	        NgtInstallationV2RebootPreferenceScheduleArgs{...}
//
//	or:
//
//	        nil
type NgtInstallationV2RebootPreferenceSchedulePtrInput interface {
	pulumi.Input

	ToNgtInstallationV2RebootPreferenceSchedulePtrOutput() NgtInstallationV2RebootPreferenceSchedulePtrOutput
	ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(context.Context) NgtInstallationV2RebootPreferenceSchedulePtrOutput
}

type ngtInstallationV2RebootPreferenceSchedulePtrType NgtInstallationV2RebootPreferenceScheduleArgs

func NgtInstallationV2RebootPreferenceSchedulePtr(v *NgtInstallationV2RebootPreferenceScheduleArgs) NgtInstallationV2RebootPreferenceSchedulePtrInput {
	return (*ngtInstallationV2RebootPreferenceSchedulePtrType)(v)
}

func (*ngtInstallationV2RebootPreferenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2RebootPreferenceSchedule)(nil)).Elem()
}

func (i *ngtInstallationV2RebootPreferenceSchedulePtrType) ToNgtInstallationV2RebootPreferenceSchedulePtrOutput() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return i.ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (i *ngtInstallationV2RebootPreferenceSchedulePtrType) ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtInstallationV2RebootPreferenceSchedulePtrOutput)
}

type NgtInstallationV2RebootPreferenceScheduleOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2RebootPreferenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtInstallationV2RebootPreferenceSchedule)(nil)).Elem()
}

func (o NgtInstallationV2RebootPreferenceScheduleOutput) ToNgtInstallationV2RebootPreferenceScheduleOutput() NgtInstallationV2RebootPreferenceScheduleOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceScheduleOutput) ToNgtInstallationV2RebootPreferenceScheduleOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceScheduleOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceScheduleOutput) ToNgtInstallationV2RebootPreferenceSchedulePtrOutput() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o.ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (o NgtInstallationV2RebootPreferenceScheduleOutput) ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NgtInstallationV2RebootPreferenceSchedule) *NgtInstallationV2RebootPreferenceSchedule {
		return &v
	}).(NgtInstallationV2RebootPreferenceSchedulePtrOutput)
}

// - The start time for a scheduled restart.
func (o NgtInstallationV2RebootPreferenceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v NgtInstallationV2RebootPreferenceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type NgtInstallationV2RebootPreferenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (NgtInstallationV2RebootPreferenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtInstallationV2RebootPreferenceSchedule)(nil)).Elem()
}

func (o NgtInstallationV2RebootPreferenceSchedulePtrOutput) ToNgtInstallationV2RebootPreferenceSchedulePtrOutput() NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceSchedulePtrOutput) ToNgtInstallationV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtInstallationV2RebootPreferenceSchedulePtrOutput {
	return o
}

func (o NgtInstallationV2RebootPreferenceSchedulePtrOutput) Elem() NgtInstallationV2RebootPreferenceScheduleOutput {
	return o.ApplyT(func(v *NgtInstallationV2RebootPreferenceSchedule) NgtInstallationV2RebootPreferenceSchedule {
		if v != nil {
			return *v
		}
		var ret NgtInstallationV2RebootPreferenceSchedule
		return ret
	}).(NgtInstallationV2RebootPreferenceScheduleOutput)
}

// - The start time for a scheduled restart.
func (o NgtInstallationV2RebootPreferenceSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtInstallationV2RebootPreferenceSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type NgtUpgradeV2RebootPreference struct {
	// - Restart schedule.
	Schedule *NgtUpgradeV2RebootPreferenceSchedule `pulumi:"schedule"`
	// - Schedule type for restart.
	// * `LATER` : Schedule a restart for a specific time.
	// * `SKIP` : Do not schedule a restart.
	// * `IMMEDIATE` : Schedule an immediate restart.
	ScheduleType string `pulumi:"scheduleType"`
}

// NgtUpgradeV2RebootPreferenceInput is an input type that accepts NgtUpgradeV2RebootPreferenceArgs and NgtUpgradeV2RebootPreferenceOutput values.
// You can construct a concrete instance of `NgtUpgradeV2RebootPreferenceInput` via:
//
//	NgtUpgradeV2RebootPreferenceArgs{...}
type NgtUpgradeV2RebootPreferenceInput interface {
	pulumi.Input

	ToNgtUpgradeV2RebootPreferenceOutput() NgtUpgradeV2RebootPreferenceOutput
	ToNgtUpgradeV2RebootPreferenceOutputWithContext(context.Context) NgtUpgradeV2RebootPreferenceOutput
}

type NgtUpgradeV2RebootPreferenceArgs struct {
	// - Restart schedule.
	Schedule NgtUpgradeV2RebootPreferenceSchedulePtrInput `pulumi:"schedule"`
	// - Schedule type for restart.
	// * `LATER` : Schedule a restart for a specific time.
	// * `SKIP` : Do not schedule a restart.
	// * `IMMEDIATE` : Schedule an immediate restart.
	ScheduleType pulumi.StringInput `pulumi:"scheduleType"`
}

func (NgtUpgradeV2RebootPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtUpgradeV2RebootPreference)(nil)).Elem()
}

func (i NgtUpgradeV2RebootPreferenceArgs) ToNgtUpgradeV2RebootPreferenceOutput() NgtUpgradeV2RebootPreferenceOutput {
	return i.ToNgtUpgradeV2RebootPreferenceOutputWithContext(context.Background())
}

func (i NgtUpgradeV2RebootPreferenceArgs) ToNgtUpgradeV2RebootPreferenceOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferenceOutput)
}

func (i NgtUpgradeV2RebootPreferenceArgs) ToNgtUpgradeV2RebootPreferencePtrOutput() NgtUpgradeV2RebootPreferencePtrOutput {
	return i.ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (i NgtUpgradeV2RebootPreferenceArgs) ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferenceOutput).ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(ctx)
}

// NgtUpgradeV2RebootPreferencePtrInput is an input type that accepts NgtUpgradeV2RebootPreferenceArgs, NgtUpgradeV2RebootPreferencePtr and NgtUpgradeV2RebootPreferencePtrOutput values.
// You can construct a concrete instance of `NgtUpgradeV2RebootPreferencePtrInput` via:
//
//	        NgtUpgradeV2RebootPreferenceArgs{...}
//
//	or:
//
//	        nil
type NgtUpgradeV2RebootPreferencePtrInput interface {
	pulumi.Input

	ToNgtUpgradeV2RebootPreferencePtrOutput() NgtUpgradeV2RebootPreferencePtrOutput
	ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(context.Context) NgtUpgradeV2RebootPreferencePtrOutput
}

type ngtUpgradeV2RebootPreferencePtrType NgtUpgradeV2RebootPreferenceArgs

func NgtUpgradeV2RebootPreferencePtr(v *NgtUpgradeV2RebootPreferenceArgs) NgtUpgradeV2RebootPreferencePtrInput {
	return (*ngtUpgradeV2RebootPreferencePtrType)(v)
}

func (*ngtUpgradeV2RebootPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtUpgradeV2RebootPreference)(nil)).Elem()
}

func (i *ngtUpgradeV2RebootPreferencePtrType) ToNgtUpgradeV2RebootPreferencePtrOutput() NgtUpgradeV2RebootPreferencePtrOutput {
	return i.ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (i *ngtUpgradeV2RebootPreferencePtrType) ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferencePtrOutput)
}

type NgtUpgradeV2RebootPreferenceOutput struct{ *pulumi.OutputState }

func (NgtUpgradeV2RebootPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtUpgradeV2RebootPreference)(nil)).Elem()
}

func (o NgtUpgradeV2RebootPreferenceOutput) ToNgtUpgradeV2RebootPreferenceOutput() NgtUpgradeV2RebootPreferenceOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceOutput) ToNgtUpgradeV2RebootPreferenceOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceOutput) ToNgtUpgradeV2RebootPreferencePtrOutput() NgtUpgradeV2RebootPreferencePtrOutput {
	return o.ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(context.Background())
}

func (o NgtUpgradeV2RebootPreferenceOutput) ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NgtUpgradeV2RebootPreference) *NgtUpgradeV2RebootPreference {
		return &v
	}).(NgtUpgradeV2RebootPreferencePtrOutput)
}

// - Restart schedule.
func (o NgtUpgradeV2RebootPreferenceOutput) Schedule() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyT(func(v NgtUpgradeV2RebootPreference) *NgtUpgradeV2RebootPreferenceSchedule { return v.Schedule }).(NgtUpgradeV2RebootPreferenceSchedulePtrOutput)
}

// - Schedule type for restart.
// * `LATER` : Schedule a restart for a specific time.
// * `SKIP` : Do not schedule a restart.
// * `IMMEDIATE` : Schedule an immediate restart.
func (o NgtUpgradeV2RebootPreferenceOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v NgtUpgradeV2RebootPreference) string { return v.ScheduleType }).(pulumi.StringOutput)
}

type NgtUpgradeV2RebootPreferencePtrOutput struct{ *pulumi.OutputState }

func (NgtUpgradeV2RebootPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtUpgradeV2RebootPreference)(nil)).Elem()
}

func (o NgtUpgradeV2RebootPreferencePtrOutput) ToNgtUpgradeV2RebootPreferencePtrOutput() NgtUpgradeV2RebootPreferencePtrOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferencePtrOutput) ToNgtUpgradeV2RebootPreferencePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferencePtrOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferencePtrOutput) Elem() NgtUpgradeV2RebootPreferenceOutput {
	return o.ApplyT(func(v *NgtUpgradeV2RebootPreference) NgtUpgradeV2RebootPreference {
		if v != nil {
			return *v
		}
		var ret NgtUpgradeV2RebootPreference
		return ret
	}).(NgtUpgradeV2RebootPreferenceOutput)
}

// - Restart schedule.
func (o NgtUpgradeV2RebootPreferencePtrOutput) Schedule() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyT(func(v *NgtUpgradeV2RebootPreference) *NgtUpgradeV2RebootPreferenceSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(NgtUpgradeV2RebootPreferenceSchedulePtrOutput)
}

// - Schedule type for restart.
// * `LATER` : Schedule a restart for a specific time.
// * `SKIP` : Do not schedule a restart.
// * `IMMEDIATE` : Schedule an immediate restart.
func (o NgtUpgradeV2RebootPreferencePtrOutput) ScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtUpgradeV2RebootPreference) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleType
	}).(pulumi.StringPtrOutput)
}

type NgtUpgradeV2RebootPreferenceSchedule struct {
	// - The start time for a scheduled restart.
	StartTime string `pulumi:"startTime"`
}

// NgtUpgradeV2RebootPreferenceScheduleInput is an input type that accepts NgtUpgradeV2RebootPreferenceScheduleArgs and NgtUpgradeV2RebootPreferenceScheduleOutput values.
// You can construct a concrete instance of `NgtUpgradeV2RebootPreferenceScheduleInput` via:
//
//	NgtUpgradeV2RebootPreferenceScheduleArgs{...}
type NgtUpgradeV2RebootPreferenceScheduleInput interface {
	pulumi.Input

	ToNgtUpgradeV2RebootPreferenceScheduleOutput() NgtUpgradeV2RebootPreferenceScheduleOutput
	ToNgtUpgradeV2RebootPreferenceScheduleOutputWithContext(context.Context) NgtUpgradeV2RebootPreferenceScheduleOutput
}

type NgtUpgradeV2RebootPreferenceScheduleArgs struct {
	// - The start time for a scheduled restart.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (NgtUpgradeV2RebootPreferenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtUpgradeV2RebootPreferenceSchedule)(nil)).Elem()
}

func (i NgtUpgradeV2RebootPreferenceScheduleArgs) ToNgtUpgradeV2RebootPreferenceScheduleOutput() NgtUpgradeV2RebootPreferenceScheduleOutput {
	return i.ToNgtUpgradeV2RebootPreferenceScheduleOutputWithContext(context.Background())
}

func (i NgtUpgradeV2RebootPreferenceScheduleArgs) ToNgtUpgradeV2RebootPreferenceScheduleOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferenceScheduleOutput)
}

func (i NgtUpgradeV2RebootPreferenceScheduleArgs) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutput() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return i.ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (i NgtUpgradeV2RebootPreferenceScheduleArgs) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferenceScheduleOutput).ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(ctx)
}

// NgtUpgradeV2RebootPreferenceSchedulePtrInput is an input type that accepts NgtUpgradeV2RebootPreferenceScheduleArgs, NgtUpgradeV2RebootPreferenceSchedulePtr and NgtUpgradeV2RebootPreferenceSchedulePtrOutput values.
// You can construct a concrete instance of `NgtUpgradeV2RebootPreferenceSchedulePtrInput` via:
//
//	        NgtUpgradeV2RebootPreferenceScheduleArgs{...}
//
//	or:
//
//	        nil
type NgtUpgradeV2RebootPreferenceSchedulePtrInput interface {
	pulumi.Input

	ToNgtUpgradeV2RebootPreferenceSchedulePtrOutput() NgtUpgradeV2RebootPreferenceSchedulePtrOutput
	ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(context.Context) NgtUpgradeV2RebootPreferenceSchedulePtrOutput
}

type ngtUpgradeV2RebootPreferenceSchedulePtrType NgtUpgradeV2RebootPreferenceScheduleArgs

func NgtUpgradeV2RebootPreferenceSchedulePtr(v *NgtUpgradeV2RebootPreferenceScheduleArgs) NgtUpgradeV2RebootPreferenceSchedulePtrInput {
	return (*ngtUpgradeV2RebootPreferenceSchedulePtrType)(v)
}

func (*ngtUpgradeV2RebootPreferenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtUpgradeV2RebootPreferenceSchedule)(nil)).Elem()
}

func (i *ngtUpgradeV2RebootPreferenceSchedulePtrType) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutput() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return i.ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (i *ngtUpgradeV2RebootPreferenceSchedulePtrType) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NgtUpgradeV2RebootPreferenceSchedulePtrOutput)
}

type NgtUpgradeV2RebootPreferenceScheduleOutput struct{ *pulumi.OutputState }

func (NgtUpgradeV2RebootPreferenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NgtUpgradeV2RebootPreferenceSchedule)(nil)).Elem()
}

func (o NgtUpgradeV2RebootPreferenceScheduleOutput) ToNgtUpgradeV2RebootPreferenceScheduleOutput() NgtUpgradeV2RebootPreferenceScheduleOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceScheduleOutput) ToNgtUpgradeV2RebootPreferenceScheduleOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceScheduleOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceScheduleOutput) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutput() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o.ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(context.Background())
}

func (o NgtUpgradeV2RebootPreferenceScheduleOutput) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NgtUpgradeV2RebootPreferenceSchedule) *NgtUpgradeV2RebootPreferenceSchedule {
		return &v
	}).(NgtUpgradeV2RebootPreferenceSchedulePtrOutput)
}

// - The start time for a scheduled restart.
func (o NgtUpgradeV2RebootPreferenceScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v NgtUpgradeV2RebootPreferenceSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

type NgtUpgradeV2RebootPreferenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (NgtUpgradeV2RebootPreferenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NgtUpgradeV2RebootPreferenceSchedule)(nil)).Elem()
}

func (o NgtUpgradeV2RebootPreferenceSchedulePtrOutput) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutput() NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceSchedulePtrOutput) ToNgtUpgradeV2RebootPreferenceSchedulePtrOutputWithContext(ctx context.Context) NgtUpgradeV2RebootPreferenceSchedulePtrOutput {
	return o
}

func (o NgtUpgradeV2RebootPreferenceSchedulePtrOutput) Elem() NgtUpgradeV2RebootPreferenceScheduleOutput {
	return o.ApplyT(func(v *NgtUpgradeV2RebootPreferenceSchedule) NgtUpgradeV2RebootPreferenceSchedule {
		if v != nil {
			return *v
		}
		var ret NgtUpgradeV2RebootPreferenceSchedule
		return ret
	}).(NgtUpgradeV2RebootPreferenceScheduleOutput)
}

// - The start time for a scheduled restart.
func (o NgtUpgradeV2RebootPreferenceSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NgtUpgradeV2RebootPreferenceSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type PbrDestination struct {
	AddressType  *string `pulumi:"addressType"`
	PrefixLength *int    `pulumi:"prefixLength"`
	SubnetIp     *string `pulumi:"subnetIp"`
}

// PbrDestinationInput is an input type that accepts PbrDestinationArgs and PbrDestinationOutput values.
// You can construct a concrete instance of `PbrDestinationInput` via:
//
//	PbrDestinationArgs{...}
type PbrDestinationInput interface {
	pulumi.Input

	ToPbrDestinationOutput() PbrDestinationOutput
	ToPbrDestinationOutputWithContext(context.Context) PbrDestinationOutput
}

type PbrDestinationArgs struct {
	AddressType  pulumi.StringPtrInput `pulumi:"addressType"`
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	SubnetIp     pulumi.StringPtrInput `pulumi:"subnetIp"`
}

func (PbrDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrDestination)(nil)).Elem()
}

func (i PbrDestinationArgs) ToPbrDestinationOutput() PbrDestinationOutput {
	return i.ToPbrDestinationOutputWithContext(context.Background())
}

func (i PbrDestinationArgs) ToPbrDestinationOutputWithContext(ctx context.Context) PbrDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationOutput)
}

func (i PbrDestinationArgs) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return i.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (i PbrDestinationArgs) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationOutput).ToPbrDestinationPtrOutputWithContext(ctx)
}

// PbrDestinationPtrInput is an input type that accepts PbrDestinationArgs, PbrDestinationPtr and PbrDestinationPtrOutput values.
// You can construct a concrete instance of `PbrDestinationPtrInput` via:
//
//	        PbrDestinationArgs{...}
//
//	or:
//
//	        nil
type PbrDestinationPtrInput interface {
	pulumi.Input

	ToPbrDestinationPtrOutput() PbrDestinationPtrOutput
	ToPbrDestinationPtrOutputWithContext(context.Context) PbrDestinationPtrOutput
}

type pbrDestinationPtrType PbrDestinationArgs

func PbrDestinationPtr(v *PbrDestinationArgs) PbrDestinationPtrInput {
	return (*pbrDestinationPtrType)(v)
}

func (*pbrDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrDestination)(nil)).Elem()
}

func (i *pbrDestinationPtrType) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return i.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (i *pbrDestinationPtrType) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationPtrOutput)
}

type PbrDestinationOutput struct{ *pulumi.OutputState }

func (PbrDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrDestination)(nil)).Elem()
}

func (o PbrDestinationOutput) ToPbrDestinationOutput() PbrDestinationOutput {
	return o
}

func (o PbrDestinationOutput) ToPbrDestinationOutputWithContext(ctx context.Context) PbrDestinationOutput {
	return o
}

func (o PbrDestinationOutput) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return o.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (o PbrDestinationOutput) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrDestination) *PbrDestination {
		return &v
	}).(PbrDestinationPtrOutput)
}

func (o PbrDestinationOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrDestination) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

func (o PbrDestinationOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrDestination) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrDestinationOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrDestination) *string { return v.SubnetIp }).(pulumi.StringPtrOutput)
}

type PbrDestinationPtrOutput struct{ *pulumi.OutputState }

func (PbrDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrDestination)(nil)).Elem()
}

func (o PbrDestinationPtrOutput) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return o
}

func (o PbrDestinationPtrOutput) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return o
}

func (o PbrDestinationPtrOutput) Elem() PbrDestinationOutput {
	return o.ApplyT(func(v *PbrDestination) PbrDestination {
		if v != nil {
			return *v
		}
		var ret PbrDestination
		return ret
	}).(PbrDestinationOutput)
}

func (o PbrDestinationPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

func (o PbrDestinationPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PbrDestinationPtrOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *string {
		if v == nil {
			return nil
		}
		return v.SubnetIp
	}).(pulumi.StringPtrOutput)
}

type PbrProtocolParameters struct {
	Icmp           *PbrProtocolParametersIcmp `pulumi:"icmp"`
	ProtocolNumber *string                    `pulumi:"protocolNumber"`
	Tcp            *PbrProtocolParametersTcp  `pulumi:"tcp"`
	Udp            *PbrProtocolParametersUdp  `pulumi:"udp"`
}

// PbrProtocolParametersInput is an input type that accepts PbrProtocolParametersArgs and PbrProtocolParametersOutput values.
// You can construct a concrete instance of `PbrProtocolParametersInput` via:
//
//	PbrProtocolParametersArgs{...}
type PbrProtocolParametersInput interface {
	pulumi.Input

	ToPbrProtocolParametersOutput() PbrProtocolParametersOutput
	ToPbrProtocolParametersOutputWithContext(context.Context) PbrProtocolParametersOutput
}

type PbrProtocolParametersArgs struct {
	Icmp           PbrProtocolParametersIcmpPtrInput `pulumi:"icmp"`
	ProtocolNumber pulumi.StringPtrInput             `pulumi:"protocolNumber"`
	Tcp            PbrProtocolParametersTcpPtrInput  `pulumi:"tcp"`
	Udp            PbrProtocolParametersUdpPtrInput  `pulumi:"udp"`
}

func (PbrProtocolParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParameters)(nil)).Elem()
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersOutput() PbrProtocolParametersOutput {
	return i.ToPbrProtocolParametersOutputWithContext(context.Background())
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersOutputWithContext(ctx context.Context) PbrProtocolParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersOutput)
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return i.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersOutput).ToPbrProtocolParametersPtrOutputWithContext(ctx)
}

// PbrProtocolParametersPtrInput is an input type that accepts PbrProtocolParametersArgs, PbrProtocolParametersPtr and PbrProtocolParametersPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersPtrInput` via:
//
//	        PbrProtocolParametersArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput
	ToPbrProtocolParametersPtrOutputWithContext(context.Context) PbrProtocolParametersPtrOutput
}

type pbrProtocolParametersPtrType PbrProtocolParametersArgs

func PbrProtocolParametersPtr(v *PbrProtocolParametersArgs) PbrProtocolParametersPtrInput {
	return (*pbrProtocolParametersPtrType)(v)
}

func (*pbrProtocolParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParameters)(nil)).Elem()
}

func (i *pbrProtocolParametersPtrType) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return i.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersPtrType) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersPtrOutput)
}

type PbrProtocolParametersOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParameters)(nil)).Elem()
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersOutput() PbrProtocolParametersOutput {
	return o
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersOutputWithContext(ctx context.Context) PbrProtocolParametersOutput {
	return o
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return o.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParameters) *PbrProtocolParameters {
		return &v
	}).(PbrProtocolParametersPtrOutput)
}

func (o PbrProtocolParametersOutput) Icmp() PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersIcmp { return v.Icmp }).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersOutput) ProtocolNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *string { return v.ProtocolNumber }).(pulumi.StringPtrOutput)
}

func (o PbrProtocolParametersOutput) Tcp() PbrProtocolParametersTcpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersTcp { return v.Tcp }).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersOutput) Udp() PbrProtocolParametersUdpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersUdp { return v.Udp }).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParameters)(nil)).Elem()
}

func (o PbrProtocolParametersPtrOutput) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return o
}

func (o PbrProtocolParametersPtrOutput) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return o
}

func (o PbrProtocolParametersPtrOutput) Elem() PbrProtocolParametersOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) PbrProtocolParameters {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParameters
		return ret
	}).(PbrProtocolParametersOutput)
}

func (o PbrProtocolParametersPtrOutput) Icmp() PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersIcmp {
		if v == nil {
			return nil
		}
		return v.Icmp
	}).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) ProtocolNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolNumber
	}).(pulumi.StringPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) Tcp() PbrProtocolParametersTcpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) Udp() PbrProtocolParametersUdpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersUdp {
		if v == nil {
			return nil
		}
		return v.Udp
	}).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersIcmp struct {
	IcmpCode int `pulumi:"icmpCode"`
	IcmpType int `pulumi:"icmpType"`
}

// PbrProtocolParametersIcmpInput is an input type that accepts PbrProtocolParametersIcmpArgs and PbrProtocolParametersIcmpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersIcmpInput` via:
//
//	PbrProtocolParametersIcmpArgs{...}
type PbrProtocolParametersIcmpInput interface {
	pulumi.Input

	ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput
	ToPbrProtocolParametersIcmpOutputWithContext(context.Context) PbrProtocolParametersIcmpOutput
}

type PbrProtocolParametersIcmpArgs struct {
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
}

func (PbrProtocolParametersIcmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersIcmp)(nil)).Elem()
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput {
	return i.ToPbrProtocolParametersIcmpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpOutput)
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return i.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpOutput).ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersIcmpPtrInput is an input type that accepts PbrProtocolParametersIcmpArgs, PbrProtocolParametersIcmpPtr and PbrProtocolParametersIcmpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersIcmpPtrInput` via:
//
//	        PbrProtocolParametersIcmpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersIcmpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput
	ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Context) PbrProtocolParametersIcmpPtrOutput
}

type pbrProtocolParametersIcmpPtrType PbrProtocolParametersIcmpArgs

func PbrProtocolParametersIcmpPtr(v *PbrProtocolParametersIcmpArgs) PbrProtocolParametersIcmpPtrInput {
	return (*pbrProtocolParametersIcmpPtrType)(v)
}

func (*pbrProtocolParametersIcmpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersIcmp)(nil)).Elem()
}

func (i *pbrProtocolParametersIcmpPtrType) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return i.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersIcmpPtrType) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpPtrOutput)
}

type PbrProtocolParametersIcmpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersIcmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersIcmp)(nil)).Elem()
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput {
	return o
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpOutput {
	return o
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return o.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersIcmp) *PbrProtocolParametersIcmp {
		return &v
	}).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersIcmpOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v PbrProtocolParametersIcmp) int { return v.IcmpCode }).(pulumi.IntOutput)
}

func (o PbrProtocolParametersIcmpOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v PbrProtocolParametersIcmp) int { return v.IcmpType }).(pulumi.IntOutput)
}

type PbrProtocolParametersIcmpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersIcmpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersIcmp)(nil)).Elem()
}

func (o PbrProtocolParametersIcmpPtrOutput) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return o
}

func (o PbrProtocolParametersIcmpPtrOutput) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return o
}

func (o PbrProtocolParametersIcmpPtrOutput) Elem() PbrProtocolParametersIcmpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) PbrProtocolParametersIcmp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersIcmp
		return ret
	}).(PbrProtocolParametersIcmpOutput)
}

func (o PbrProtocolParametersIcmpPtrOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) *int {
		if v == nil {
			return nil
		}
		return &v.IcmpCode
	}).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersIcmpPtrOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) *int {
		if v == nil {
			return nil
		}
		return &v.IcmpType
	}).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcp struct {
	DestinationPortRangeLists []PbrProtocolParametersTcpDestinationPortRangeList `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      []PbrProtocolParametersTcpSourcePortRangeList      `pulumi:"sourcePortRangeLists"`
}

// PbrProtocolParametersTcpInput is an input type that accepts PbrProtocolParametersTcpArgs and PbrProtocolParametersTcpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpInput` via:
//
//	PbrProtocolParametersTcpArgs{...}
type PbrProtocolParametersTcpInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput
	ToPbrProtocolParametersTcpOutputWithContext(context.Context) PbrProtocolParametersTcpOutput
}

type PbrProtocolParametersTcpArgs struct {
	DestinationPortRangeLists PbrProtocolParametersTcpDestinationPortRangeListArrayInput `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      PbrProtocolParametersTcpSourcePortRangeListArrayInput      `pulumi:"sourcePortRangeLists"`
}

func (PbrProtocolParametersTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcp)(nil)).Elem()
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput {
	return i.ToPbrProtocolParametersTcpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpOutputWithContext(ctx context.Context) PbrProtocolParametersTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpOutput)
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return i.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpOutput).ToPbrProtocolParametersTcpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersTcpPtrInput is an input type that accepts PbrProtocolParametersTcpArgs, PbrProtocolParametersTcpPtr and PbrProtocolParametersTcpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpPtrInput` via:
//
//	        PbrProtocolParametersTcpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersTcpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput
	ToPbrProtocolParametersTcpPtrOutputWithContext(context.Context) PbrProtocolParametersTcpPtrOutput
}

type pbrProtocolParametersTcpPtrType PbrProtocolParametersTcpArgs

func PbrProtocolParametersTcpPtr(v *PbrProtocolParametersTcpArgs) PbrProtocolParametersTcpPtrInput {
	return (*pbrProtocolParametersTcpPtrType)(v)
}

func (*pbrProtocolParametersTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersTcp)(nil)).Elem()
}

func (i *pbrProtocolParametersTcpPtrType) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return i.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersTcpPtrType) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpPtrOutput)
}

type PbrProtocolParametersTcpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcp)(nil)).Elem()
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput {
	return o
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpOutputWithContext(ctx context.Context) PbrProtocolParametersTcpOutput {
	return o
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return o.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersTcp) *PbrProtocolParametersTcp {
		return &v
	}).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersTcpOutput) DestinationPortRangeLists() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcp) []PbrProtocolParametersTcpDestinationPortRangeList {
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersTcpOutput) SourcePortRangeLists() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcp) []PbrProtocolParametersTcpSourcePortRangeList {
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersTcp)(nil)).Elem()
}

func (o PbrProtocolParametersTcpPtrOutput) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return o
}

func (o PbrProtocolParametersTcpPtrOutput) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return o
}

func (o PbrProtocolParametersTcpPtrOutput) Elem() PbrProtocolParametersTcpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) PbrProtocolParametersTcp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersTcp
		return ret
	}).(PbrProtocolParametersTcpOutput)
}

func (o PbrProtocolParametersTcpPtrOutput) DestinationPortRangeLists() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) []PbrProtocolParametersTcpDestinationPortRangeList {
		if v == nil {
			return nil
		}
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersTcpPtrOutput) SourcePortRangeLists() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) []PbrProtocolParametersTcpSourcePortRangeList {
		if v == nil {
			return nil
		}
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersTcpDestinationPortRangeListInput is an input type that accepts PbrProtocolParametersTcpDestinationPortRangeListArgs and PbrProtocolParametersTcpDestinationPortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpDestinationPortRangeListInput` via:
//
//	PbrProtocolParametersTcpDestinationPortRangeListArgs{...}
type PbrProtocolParametersTcpDestinationPortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput
	ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput
}

type PbrProtocolParametersTcpDestinationPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersTcpDestinationPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArgs) ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return i.ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArgs) ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpDestinationPortRangeListOutput)
}

// PbrProtocolParametersTcpDestinationPortRangeListArrayInput is an input type that accepts PbrProtocolParametersTcpDestinationPortRangeListArray and PbrProtocolParametersTcpDestinationPortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpDestinationPortRangeListArrayInput` via:
//
//	PbrProtocolParametersTcpDestinationPortRangeListArray{ PbrProtocolParametersTcpDestinationPortRangeListArgs{...} }
type PbrProtocolParametersTcpDestinationPortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput
	ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput
}

type PbrProtocolParametersTcpDestinationPortRangeListArray []PbrProtocolParametersTcpDestinationPortRangeListInput

func (PbrProtocolParametersTcpDestinationPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArray) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return i.ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArray) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpDestinationPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpDestinationPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpDestinationPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersTcpDestinationPortRangeList {
		return vs[0].([]PbrProtocolParametersTcpDestinationPortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersTcpDestinationPortRangeListOutput)
}

type PbrProtocolParametersTcpSourcePortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersTcpSourcePortRangeListInput is an input type that accepts PbrProtocolParametersTcpSourcePortRangeListArgs and PbrProtocolParametersTcpSourcePortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpSourcePortRangeListInput` via:
//
//	PbrProtocolParametersTcpSourcePortRangeListArgs{...}
type PbrProtocolParametersTcpSourcePortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput
	ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput
}

type PbrProtocolParametersTcpSourcePortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersTcpSourcePortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpSourcePortRangeListArgs) ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput {
	return i.ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpSourcePortRangeListArgs) ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpSourcePortRangeListOutput)
}

// PbrProtocolParametersTcpSourcePortRangeListArrayInput is an input type that accepts PbrProtocolParametersTcpSourcePortRangeListArray and PbrProtocolParametersTcpSourcePortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpSourcePortRangeListArrayInput` via:
//
//	PbrProtocolParametersTcpSourcePortRangeListArray{ PbrProtocolParametersTcpSourcePortRangeListArgs{...} }
type PbrProtocolParametersTcpSourcePortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput
	ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput
}

type PbrProtocolParametersTcpSourcePortRangeListArray []PbrProtocolParametersTcpSourcePortRangeListInput

func (PbrProtocolParametersTcpSourcePortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpSourcePortRangeListArray) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return i.ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpSourcePortRangeListArray) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpSourcePortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpSourcePortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpSourcePortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpSourcePortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcpSourcePortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersTcpSourcePortRangeList {
		return vs[0].([]PbrProtocolParametersTcpSourcePortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersTcpSourcePortRangeListOutput)
}

type PbrProtocolParametersUdp struct {
	DestinationPortRangeLists []PbrProtocolParametersUdpDestinationPortRangeList `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      []PbrProtocolParametersUdpSourcePortRangeList      `pulumi:"sourcePortRangeLists"`
}

// PbrProtocolParametersUdpInput is an input type that accepts PbrProtocolParametersUdpArgs and PbrProtocolParametersUdpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpInput` via:
//
//	PbrProtocolParametersUdpArgs{...}
type PbrProtocolParametersUdpInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput
	ToPbrProtocolParametersUdpOutputWithContext(context.Context) PbrProtocolParametersUdpOutput
}

type PbrProtocolParametersUdpArgs struct {
	DestinationPortRangeLists PbrProtocolParametersUdpDestinationPortRangeListArrayInput `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      PbrProtocolParametersUdpSourcePortRangeListArrayInput      `pulumi:"sourcePortRangeLists"`
}

func (PbrProtocolParametersUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdp)(nil)).Elem()
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput {
	return i.ToPbrProtocolParametersUdpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpOutputWithContext(ctx context.Context) PbrProtocolParametersUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpOutput)
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return i.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpOutput).ToPbrProtocolParametersUdpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersUdpPtrInput is an input type that accepts PbrProtocolParametersUdpArgs, PbrProtocolParametersUdpPtr and PbrProtocolParametersUdpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpPtrInput` via:
//
//	        PbrProtocolParametersUdpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersUdpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput
	ToPbrProtocolParametersUdpPtrOutputWithContext(context.Context) PbrProtocolParametersUdpPtrOutput
}

type pbrProtocolParametersUdpPtrType PbrProtocolParametersUdpArgs

func PbrProtocolParametersUdpPtr(v *PbrProtocolParametersUdpArgs) PbrProtocolParametersUdpPtrInput {
	return (*pbrProtocolParametersUdpPtrType)(v)
}

func (*pbrProtocolParametersUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersUdp)(nil)).Elem()
}

func (i *pbrProtocolParametersUdpPtrType) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return i.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersUdpPtrType) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersUdpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdp)(nil)).Elem()
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput {
	return o
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpOutputWithContext(ctx context.Context) PbrProtocolParametersUdpOutput {
	return o
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return o.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersUdp) *PbrProtocolParametersUdp {
		return &v
	}).(PbrProtocolParametersUdpPtrOutput)
}

func (o PbrProtocolParametersUdpOutput) DestinationPortRangeLists() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdp) []PbrProtocolParametersUdpDestinationPortRangeList {
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersUdpOutput) SourcePortRangeLists() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdp) []PbrProtocolParametersUdpSourcePortRangeList {
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersUdp)(nil)).Elem()
}

func (o PbrProtocolParametersUdpPtrOutput) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return o
}

func (o PbrProtocolParametersUdpPtrOutput) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return o
}

func (o PbrProtocolParametersUdpPtrOutput) Elem() PbrProtocolParametersUdpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) PbrProtocolParametersUdp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersUdp
		return ret
	}).(PbrProtocolParametersUdpOutput)
}

func (o PbrProtocolParametersUdpPtrOutput) DestinationPortRangeLists() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) []PbrProtocolParametersUdpDestinationPortRangeList {
		if v == nil {
			return nil
		}
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersUdpPtrOutput) SourcePortRangeLists() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) []PbrProtocolParametersUdpSourcePortRangeList {
		if v == nil {
			return nil
		}
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersUdpDestinationPortRangeListInput is an input type that accepts PbrProtocolParametersUdpDestinationPortRangeListArgs and PbrProtocolParametersUdpDestinationPortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpDestinationPortRangeListInput` via:
//
//	PbrProtocolParametersUdpDestinationPortRangeListArgs{...}
type PbrProtocolParametersUdpDestinationPortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput
	ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput
}

type PbrProtocolParametersUdpDestinationPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersUdpDestinationPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArgs) ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return i.ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArgs) ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpDestinationPortRangeListOutput)
}

// PbrProtocolParametersUdpDestinationPortRangeListArrayInput is an input type that accepts PbrProtocolParametersUdpDestinationPortRangeListArray and PbrProtocolParametersUdpDestinationPortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpDestinationPortRangeListArrayInput` via:
//
//	PbrProtocolParametersUdpDestinationPortRangeListArray{ PbrProtocolParametersUdpDestinationPortRangeListArgs{...} }
type PbrProtocolParametersUdpDestinationPortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput
	ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput
}

type PbrProtocolParametersUdpDestinationPortRangeListArray []PbrProtocolParametersUdpDestinationPortRangeListInput

func (PbrProtocolParametersUdpDestinationPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArray) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return i.ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArray) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpDestinationPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpDestinationPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpDestinationPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersUdpDestinationPortRangeList {
		return vs[0].([]PbrProtocolParametersUdpDestinationPortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersUdpDestinationPortRangeListOutput)
}

type PbrProtocolParametersUdpSourcePortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersUdpSourcePortRangeListInput is an input type that accepts PbrProtocolParametersUdpSourcePortRangeListArgs and PbrProtocolParametersUdpSourcePortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpSourcePortRangeListInput` via:
//
//	PbrProtocolParametersUdpSourcePortRangeListArgs{...}
type PbrProtocolParametersUdpSourcePortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput
	ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput
}

type PbrProtocolParametersUdpSourcePortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersUdpSourcePortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpSourcePortRangeListArgs) ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput {
	return i.ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpSourcePortRangeListArgs) ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpSourcePortRangeListOutput)
}

// PbrProtocolParametersUdpSourcePortRangeListArrayInput is an input type that accepts PbrProtocolParametersUdpSourcePortRangeListArray and PbrProtocolParametersUdpSourcePortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpSourcePortRangeListArrayInput` via:
//
//	PbrProtocolParametersUdpSourcePortRangeListArray{ PbrProtocolParametersUdpSourcePortRangeListArgs{...} }
type PbrProtocolParametersUdpSourcePortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput
	ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput
}

type PbrProtocolParametersUdpSourcePortRangeListArray []PbrProtocolParametersUdpSourcePortRangeListInput

func (PbrProtocolParametersUdpSourcePortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpSourcePortRangeListArray) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return i.ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpSourcePortRangeListArray) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpSourcePortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpSourcePortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpSourcePortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpSourcePortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersUdpSourcePortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersUdpSourcePortRangeList {
		return vs[0].([]PbrProtocolParametersUdpSourcePortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersUdpSourcePortRangeListOutput)
}

type PbrSource struct {
	AddressType  *string `pulumi:"addressType"`
	PrefixLength *int    `pulumi:"prefixLength"`
	SubnetIp     *string `pulumi:"subnetIp"`
}

// PbrSourceInput is an input type that accepts PbrSourceArgs and PbrSourceOutput values.
// You can construct a concrete instance of `PbrSourceInput` via:
//
//	PbrSourceArgs{...}
type PbrSourceInput interface {
	pulumi.Input

	ToPbrSourceOutput() PbrSourceOutput
	ToPbrSourceOutputWithContext(context.Context) PbrSourceOutput
}

type PbrSourceArgs struct {
	AddressType  pulumi.StringPtrInput `pulumi:"addressType"`
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	SubnetIp     pulumi.StringPtrInput `pulumi:"subnetIp"`
}

func (PbrSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrSource)(nil)).Elem()
}

func (i PbrSourceArgs) ToPbrSourceOutput() PbrSourceOutput {
	return i.ToPbrSourceOutputWithContext(context.Background())
}

func (i PbrSourceArgs) ToPbrSourceOutputWithContext(ctx context.Context) PbrSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourceOutput)
}

func (i PbrSourceArgs) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return i.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (i PbrSourceArgs) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourceOutput).ToPbrSourcePtrOutputWithContext(ctx)
}

// PbrSourcePtrInput is an input type that accepts PbrSourceArgs, PbrSourcePtr and PbrSourcePtrOutput values.
// You can construct a concrete instance of `PbrSourcePtrInput` via:
//
//	        PbrSourceArgs{...}
//
//	or:
//
//	        nil
type PbrSourcePtrInput interface {
	pulumi.Input

	ToPbrSourcePtrOutput() PbrSourcePtrOutput
	ToPbrSourcePtrOutputWithContext(context.Context) PbrSourcePtrOutput
}

type pbrSourcePtrType PbrSourceArgs

func PbrSourcePtr(v *PbrSourceArgs) PbrSourcePtrInput {
	return (*pbrSourcePtrType)(v)
}

func (*pbrSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrSource)(nil)).Elem()
}

func (i *pbrSourcePtrType) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return i.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (i *pbrSourcePtrType) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourcePtrOutput)
}

type PbrSourceOutput struct{ *pulumi.OutputState }

func (PbrSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrSource)(nil)).Elem()
}

func (o PbrSourceOutput) ToPbrSourceOutput() PbrSourceOutput {
	return o
}

func (o PbrSourceOutput) ToPbrSourceOutputWithContext(ctx context.Context) PbrSourceOutput {
	return o
}

func (o PbrSourceOutput) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return o.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (o PbrSourceOutput) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrSource) *PbrSource {
		return &v
	}).(PbrSourcePtrOutput)
}

func (o PbrSourceOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrSource) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

func (o PbrSourceOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrSource) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrSourceOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrSource) *string { return v.SubnetIp }).(pulumi.StringPtrOutput)
}

type PbrSourcePtrOutput struct{ *pulumi.OutputState }

func (PbrSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrSource)(nil)).Elem()
}

func (o PbrSourcePtrOutput) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return o
}

func (o PbrSourcePtrOutput) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return o
}

func (o PbrSourcePtrOutput) Elem() PbrSourceOutput {
	return o.ApplyT(func(v *PbrSource) PbrSource {
		if v != nil {
			return *v
		}
		var ret PbrSource
		return ret
	}).(PbrSourceOutput)
}

func (o PbrSourcePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrSource) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

func (o PbrSourcePtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrSource) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PbrSourcePtrOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrSource) *string {
		if v == nil {
			return nil
		}
		return v.SubnetIp
	}).(pulumi.StringPtrOutput)
}

type PbrV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// PbrV2LinkInput is an input type that accepts PbrV2LinkArgs and PbrV2LinkOutput values.
// You can construct a concrete instance of `PbrV2LinkInput` via:
//
//	PbrV2LinkArgs{...}
type PbrV2LinkInput interface {
	pulumi.Input

	ToPbrV2LinkOutput() PbrV2LinkOutput
	ToPbrV2LinkOutputWithContext(context.Context) PbrV2LinkOutput
}

type PbrV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (PbrV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Link)(nil)).Elem()
}

func (i PbrV2LinkArgs) ToPbrV2LinkOutput() PbrV2LinkOutput {
	return i.ToPbrV2LinkOutputWithContext(context.Background())
}

func (i PbrV2LinkArgs) ToPbrV2LinkOutputWithContext(ctx context.Context) PbrV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2LinkOutput)
}

// PbrV2LinkArrayInput is an input type that accepts PbrV2LinkArray and PbrV2LinkArrayOutput values.
// You can construct a concrete instance of `PbrV2LinkArrayInput` via:
//
//	PbrV2LinkArray{ PbrV2LinkArgs{...} }
type PbrV2LinkArrayInput interface {
	pulumi.Input

	ToPbrV2LinkArrayOutput() PbrV2LinkArrayOutput
	ToPbrV2LinkArrayOutputWithContext(context.Context) PbrV2LinkArrayOutput
}

type PbrV2LinkArray []PbrV2LinkInput

func (PbrV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Link)(nil)).Elem()
}

func (i PbrV2LinkArray) ToPbrV2LinkArrayOutput() PbrV2LinkArrayOutput {
	return i.ToPbrV2LinkArrayOutputWithContext(context.Background())
}

func (i PbrV2LinkArray) ToPbrV2LinkArrayOutputWithContext(ctx context.Context) PbrV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2LinkArrayOutput)
}

type PbrV2LinkOutput struct{ *pulumi.OutputState }

func (PbrV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Link)(nil)).Elem()
}

func (o PbrV2LinkOutput) ToPbrV2LinkOutput() PbrV2LinkOutput {
	return o
}

func (o PbrV2LinkOutput) ToPbrV2LinkOutputWithContext(ctx context.Context) PbrV2LinkOutput {
	return o
}

func (o PbrV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o PbrV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type PbrV2LinkArrayOutput struct{ *pulumi.OutputState }

func (PbrV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Link)(nil)).Elem()
}

func (o PbrV2LinkArrayOutput) ToPbrV2LinkArrayOutput() PbrV2LinkArrayOutput {
	return o
}

func (o PbrV2LinkArrayOutput) ToPbrV2LinkArrayOutputWithContext(ctx context.Context) PbrV2LinkArrayOutput {
	return o
}

func (o PbrV2LinkArrayOutput) Index(i pulumi.IntInput) PbrV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2Link {
		return vs[0].([]PbrV2Link)[vs[1].(int)]
	}).(PbrV2LinkOutput)
}

type PbrV2Metadata struct {
	CategoryIds        [][]interface{} `pulumi:"categoryIds"`
	OwnerReferenceId   *string         `pulumi:"ownerReferenceId"`
	OwnerUserName      *string         `pulumi:"ownerUserName"`
	ProjectName        *string         `pulumi:"projectName"`
	ProjectReferenceId *string         `pulumi:"projectReferenceId"`
}

// PbrV2MetadataInput is an input type that accepts PbrV2MetadataArgs and PbrV2MetadataOutput values.
// You can construct a concrete instance of `PbrV2MetadataInput` via:
//
//	PbrV2MetadataArgs{...}
type PbrV2MetadataInput interface {
	pulumi.Input

	ToPbrV2MetadataOutput() PbrV2MetadataOutput
	ToPbrV2MetadataOutputWithContext(context.Context) PbrV2MetadataOutput
}

type PbrV2MetadataArgs struct {
	CategoryIds        pulumi.ArrayArrayInput `pulumi:"categoryIds"`
	OwnerReferenceId   pulumi.StringPtrInput  `pulumi:"ownerReferenceId"`
	OwnerUserName      pulumi.StringPtrInput  `pulumi:"ownerUserName"`
	ProjectName        pulumi.StringPtrInput  `pulumi:"projectName"`
	ProjectReferenceId pulumi.StringPtrInput  `pulumi:"projectReferenceId"`
}

func (PbrV2MetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Metadata)(nil)).Elem()
}

func (i PbrV2MetadataArgs) ToPbrV2MetadataOutput() PbrV2MetadataOutput {
	return i.ToPbrV2MetadataOutputWithContext(context.Background())
}

func (i PbrV2MetadataArgs) ToPbrV2MetadataOutputWithContext(ctx context.Context) PbrV2MetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2MetadataOutput)
}

// PbrV2MetadataArrayInput is an input type that accepts PbrV2MetadataArray and PbrV2MetadataArrayOutput values.
// You can construct a concrete instance of `PbrV2MetadataArrayInput` via:
//
//	PbrV2MetadataArray{ PbrV2MetadataArgs{...} }
type PbrV2MetadataArrayInput interface {
	pulumi.Input

	ToPbrV2MetadataArrayOutput() PbrV2MetadataArrayOutput
	ToPbrV2MetadataArrayOutputWithContext(context.Context) PbrV2MetadataArrayOutput
}

type PbrV2MetadataArray []PbrV2MetadataInput

func (PbrV2MetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Metadata)(nil)).Elem()
}

func (i PbrV2MetadataArray) ToPbrV2MetadataArrayOutput() PbrV2MetadataArrayOutput {
	return i.ToPbrV2MetadataArrayOutputWithContext(context.Background())
}

func (i PbrV2MetadataArray) ToPbrV2MetadataArrayOutputWithContext(ctx context.Context) PbrV2MetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2MetadataArrayOutput)
}

type PbrV2MetadataOutput struct{ *pulumi.OutputState }

func (PbrV2MetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Metadata)(nil)).Elem()
}

func (o PbrV2MetadataOutput) ToPbrV2MetadataOutput() PbrV2MetadataOutput {
	return o
}

func (o PbrV2MetadataOutput) ToPbrV2MetadataOutputWithContext(ctx context.Context) PbrV2MetadataOutput {
	return o
}

func (o PbrV2MetadataOutput) CategoryIds() pulumi.ArrayArrayOutput {
	return o.ApplyT(func(v PbrV2Metadata) [][]interface{} { return v.CategoryIds }).(pulumi.ArrayArrayOutput)
}

func (o PbrV2MetadataOutput) OwnerReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Metadata) *string { return v.OwnerReferenceId }).(pulumi.StringPtrOutput)
}

func (o PbrV2MetadataOutput) OwnerUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Metadata) *string { return v.OwnerUserName }).(pulumi.StringPtrOutput)
}

func (o PbrV2MetadataOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Metadata) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o PbrV2MetadataOutput) ProjectReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Metadata) *string { return v.ProjectReferenceId }).(pulumi.StringPtrOutput)
}

type PbrV2MetadataArrayOutput struct{ *pulumi.OutputState }

func (PbrV2MetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Metadata)(nil)).Elem()
}

func (o PbrV2MetadataArrayOutput) ToPbrV2MetadataArrayOutput() PbrV2MetadataArrayOutput {
	return o
}

func (o PbrV2MetadataArrayOutput) ToPbrV2MetadataArrayOutputWithContext(ctx context.Context) PbrV2MetadataArrayOutput {
	return o
}

func (o PbrV2MetadataArrayOutput) Index(i pulumi.IntInput) PbrV2MetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2Metadata {
		return vs[0].([]PbrV2Metadata)[vs[1].(int)]
	}).(PbrV2MetadataOutput)
}

type PbrV2Policy struct {
	IsBidirectional *bool                     `pulumi:"isBidirectional"`
	PolicyActions   []PbrV2PolicyPolicyAction `pulumi:"policyActions"`
	PolicyMatches   []PbrV2PolicyPolicyMatch  `pulumi:"policyMatches"`
}

// PbrV2PolicyInput is an input type that accepts PbrV2PolicyArgs and PbrV2PolicyOutput values.
// You can construct a concrete instance of `PbrV2PolicyInput` via:
//
//	PbrV2PolicyArgs{...}
type PbrV2PolicyInput interface {
	pulumi.Input

	ToPbrV2PolicyOutput() PbrV2PolicyOutput
	ToPbrV2PolicyOutputWithContext(context.Context) PbrV2PolicyOutput
}

type PbrV2PolicyArgs struct {
	IsBidirectional pulumi.BoolPtrInput               `pulumi:"isBidirectional"`
	PolicyActions   PbrV2PolicyPolicyActionArrayInput `pulumi:"policyActions"`
	PolicyMatches   PbrV2PolicyPolicyMatchArrayInput  `pulumi:"policyMatches"`
}

func (PbrV2PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Policy)(nil)).Elem()
}

func (i PbrV2PolicyArgs) ToPbrV2PolicyOutput() PbrV2PolicyOutput {
	return i.ToPbrV2PolicyOutputWithContext(context.Background())
}

func (i PbrV2PolicyArgs) ToPbrV2PolicyOutputWithContext(ctx context.Context) PbrV2PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyOutput)
}

// PbrV2PolicyArrayInput is an input type that accepts PbrV2PolicyArray and PbrV2PolicyArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyArrayInput` via:
//
//	PbrV2PolicyArray{ PbrV2PolicyArgs{...} }
type PbrV2PolicyArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyArrayOutput() PbrV2PolicyArrayOutput
	ToPbrV2PolicyArrayOutputWithContext(context.Context) PbrV2PolicyArrayOutput
}

type PbrV2PolicyArray []PbrV2PolicyInput

func (PbrV2PolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Policy)(nil)).Elem()
}

func (i PbrV2PolicyArray) ToPbrV2PolicyArrayOutput() PbrV2PolicyArrayOutput {
	return i.ToPbrV2PolicyArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyArray) ToPbrV2PolicyArrayOutputWithContext(ctx context.Context) PbrV2PolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyArrayOutput)
}

type PbrV2PolicyOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Policy)(nil)).Elem()
}

func (o PbrV2PolicyOutput) ToPbrV2PolicyOutput() PbrV2PolicyOutput {
	return o
}

func (o PbrV2PolicyOutput) ToPbrV2PolicyOutputWithContext(ctx context.Context) PbrV2PolicyOutput {
	return o
}

func (o PbrV2PolicyOutput) IsBidirectional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PbrV2Policy) *bool { return v.IsBidirectional }).(pulumi.BoolPtrOutput)
}

func (o PbrV2PolicyOutput) PolicyActions() PbrV2PolicyPolicyActionArrayOutput {
	return o.ApplyT(func(v PbrV2Policy) []PbrV2PolicyPolicyAction { return v.PolicyActions }).(PbrV2PolicyPolicyActionArrayOutput)
}

func (o PbrV2PolicyOutput) PolicyMatches() PbrV2PolicyPolicyMatchArrayOutput {
	return o.ApplyT(func(v PbrV2Policy) []PbrV2PolicyPolicyMatch { return v.PolicyMatches }).(PbrV2PolicyPolicyMatchArrayOutput)
}

type PbrV2PolicyArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Policy)(nil)).Elem()
}

func (o PbrV2PolicyArrayOutput) ToPbrV2PolicyArrayOutput() PbrV2PolicyArrayOutput {
	return o
}

func (o PbrV2PolicyArrayOutput) ToPbrV2PolicyArrayOutputWithContext(ctx context.Context) PbrV2PolicyArrayOutput {
	return o
}

func (o PbrV2PolicyArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2Policy {
		return vs[0].([]PbrV2Policy)[vs[1].(int)]
	}).(PbrV2PolicyOutput)
}

type PbrV2PolicyPolicyAction struct {
	ActionType         string                                    `pulumi:"actionType"`
	NexthopIpAddresses []PbrV2PolicyPolicyActionNexthopIpAddress `pulumi:"nexthopIpAddresses"`
	RerouteParams      []PbrV2PolicyPolicyActionRerouteParam     `pulumi:"rerouteParams"`
}

// PbrV2PolicyPolicyActionInput is an input type that accepts PbrV2PolicyPolicyActionArgs and PbrV2PolicyPolicyActionOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionInput` via:
//
//	PbrV2PolicyPolicyActionArgs{...}
type PbrV2PolicyPolicyActionInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionOutput() PbrV2PolicyPolicyActionOutput
	ToPbrV2PolicyPolicyActionOutputWithContext(context.Context) PbrV2PolicyPolicyActionOutput
}

type PbrV2PolicyPolicyActionArgs struct {
	ActionType         pulumi.StringInput                                `pulumi:"actionType"`
	NexthopIpAddresses PbrV2PolicyPolicyActionNexthopIpAddressArrayInput `pulumi:"nexthopIpAddresses"`
	RerouteParams      PbrV2PolicyPolicyActionRerouteParamArrayInput     `pulumi:"rerouteParams"`
}

func (PbrV2PolicyPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyAction)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionArgs) ToPbrV2PolicyPolicyActionOutput() PbrV2PolicyPolicyActionOutput {
	return i.ToPbrV2PolicyPolicyActionOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionArgs) ToPbrV2PolicyPolicyActionOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionOutput)
}

// PbrV2PolicyPolicyActionArrayInput is an input type that accepts PbrV2PolicyPolicyActionArray and PbrV2PolicyPolicyActionArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionArrayInput` via:
//
//	PbrV2PolicyPolicyActionArray{ PbrV2PolicyPolicyActionArgs{...} }
type PbrV2PolicyPolicyActionArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionArrayOutput() PbrV2PolicyPolicyActionArrayOutput
	ToPbrV2PolicyPolicyActionArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionArrayOutput
}

type PbrV2PolicyPolicyActionArray []PbrV2PolicyPolicyActionInput

func (PbrV2PolicyPolicyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyAction)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionArray) ToPbrV2PolicyPolicyActionArrayOutput() PbrV2PolicyPolicyActionArrayOutput {
	return i.ToPbrV2PolicyPolicyActionArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionArray) ToPbrV2PolicyPolicyActionArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionArrayOutput)
}

type PbrV2PolicyPolicyActionOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyAction)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionOutput) ToPbrV2PolicyPolicyActionOutput() PbrV2PolicyPolicyActionOutput {
	return o
}

func (o PbrV2PolicyPolicyActionOutput) ToPbrV2PolicyPolicyActionOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionOutput {
	return o
}

func (o PbrV2PolicyPolicyActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyAction) string { return v.ActionType }).(pulumi.StringOutput)
}

func (o PbrV2PolicyPolicyActionOutput) NexthopIpAddresses() PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyAction) []PbrV2PolicyPolicyActionNexthopIpAddress { return v.NexthopIpAddresses }).(PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput)
}

func (o PbrV2PolicyPolicyActionOutput) RerouteParams() PbrV2PolicyPolicyActionRerouteParamArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyAction) []PbrV2PolicyPolicyActionRerouteParam { return v.RerouteParams }).(PbrV2PolicyPolicyActionRerouteParamArrayOutput)
}

type PbrV2PolicyPolicyActionArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyAction)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionArrayOutput) ToPbrV2PolicyPolicyActionArrayOutput() PbrV2PolicyPolicyActionArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionArrayOutput) ToPbrV2PolicyPolicyActionArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyAction {
		return vs[0].([]PbrV2PolicyPolicyAction)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddress struct {
	Ipv4s []PbrV2PolicyPolicyActionNexthopIpAddressIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyActionNexthopIpAddressIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyActionNexthopIpAddressInput is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressArgs and PbrV2PolicyPolicyActionNexthopIpAddressOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressInput` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressArgs{...}
type PbrV2PolicyPolicyActionNexthopIpAddressInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressOutput() PbrV2PolicyPolicyActionNexthopIpAddressOutput
	ToPbrV2PolicyPolicyActionNexthopIpAddressOutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressOutput
}

type PbrV2PolicyPolicyActionNexthopIpAddressArgs struct {
	Ipv4s PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyActionNexthopIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddress)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressArgs) ToPbrV2PolicyPolicyActionNexthopIpAddressOutput() PbrV2PolicyPolicyActionNexthopIpAddressOutput {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressArgs) ToPbrV2PolicyPolicyActionNexthopIpAddressOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressOutput)
}

// PbrV2PolicyPolicyActionNexthopIpAddressArrayInput is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressArray and PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressArrayInput` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressArray{ PbrV2PolicyPolicyActionNexthopIpAddressArgs{...} }
type PbrV2PolicyPolicyActionNexthopIpAddressArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput
	ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput
}

type PbrV2PolicyPolicyActionNexthopIpAddressArray []PbrV2PolicyPolicyActionNexthopIpAddressInput

func (PbrV2PolicyPolicyActionNexthopIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddress)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressArray) ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressArray) ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddress)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressOutput() PbrV2PolicyPolicyActionNexthopIpAddressOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressOutput) Ipv4s() PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddress) []PbrV2PolicyPolicyActionNexthopIpAddressIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressOutput) Ipv6s() PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddress) []PbrV2PolicyPolicyActionNexthopIpAddressIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddress)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionNexthopIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionNexthopIpAddress {
		return vs[0].([]PbrV2PolicyPolicyActionNexthopIpAddress)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionNexthopIpAddressOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionNexthopIpAddressIpv4Input is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args and PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressIpv4Input` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args{...}
type PbrV2PolicyPolicyActionNexthopIpAddressIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output
	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output)
}

// PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array and PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array{ PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args{...} }
type PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput
	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array []PbrV2PolicyPolicyActionNexthopIpAddressIpv4Input

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddressIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddressIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddressIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionNexthopIpAddressIpv4 {
		return vs[0].([]PbrV2PolicyPolicyActionNexthopIpAddressIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionNexthopIpAddressIpv6Input is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args and PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressIpv6Input` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args{...}
type PbrV2PolicyPolicyActionNexthopIpAddressIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output
	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output)
}

// PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array and PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array{ PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args{...} }
type PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput
	ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array []PbrV2PolicyPolicyActionNexthopIpAddressIpv6Input

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddressIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6Output() PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionNexthopIpAddressIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionNexthopIpAddressIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput() PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput) ToPbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionNexthopIpAddressIpv6 {
		return vs[0].([]PbrV2PolicyPolicyActionNexthopIpAddressIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output)
}

type PbrV2PolicyPolicyActionRerouteParam struct {
	EgressServiceIps      []PbrV2PolicyPolicyActionRerouteParamEgressServiceIp  `pulumi:"egressServiceIps"`
	IngressServiceIps     []PbrV2PolicyPolicyActionRerouteParamIngressServiceIp `pulumi:"ingressServiceIps"`
	RerouteFallbackAction *string                                               `pulumi:"rerouteFallbackAction"`
	ServiceIps            []PbrV2PolicyPolicyActionRerouteParamServiceIp        `pulumi:"serviceIps"`
}

// PbrV2PolicyPolicyActionRerouteParamInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamArgs and PbrV2PolicyPolicyActionRerouteParamOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamArgs{...}
type PbrV2PolicyPolicyActionRerouteParamInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamOutput() PbrV2PolicyPolicyActionRerouteParamOutput
	ToPbrV2PolicyPolicyActionRerouteParamOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamOutput
}

type PbrV2PolicyPolicyActionRerouteParamArgs struct {
	EgressServiceIps      PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayInput  `pulumi:"egressServiceIps"`
	IngressServiceIps     PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayInput `pulumi:"ingressServiceIps"`
	RerouteFallbackAction pulumi.StringPtrInput                                         `pulumi:"rerouteFallbackAction"`
	ServiceIps            PbrV2PolicyPolicyActionRerouteParamServiceIpArrayInput        `pulumi:"serviceIps"`
}

func (PbrV2PolicyPolicyActionRerouteParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParam)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamArgs) ToPbrV2PolicyPolicyActionRerouteParamOutput() PbrV2PolicyPolicyActionRerouteParamOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamArgs) ToPbrV2PolicyPolicyActionRerouteParamOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamOutput)
}

// PbrV2PolicyPolicyActionRerouteParamArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamArray and PbrV2PolicyPolicyActionRerouteParamArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamArray{ PbrV2PolicyPolicyActionRerouteParamArgs{...} }
type PbrV2PolicyPolicyActionRerouteParamArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamArrayOutput() PbrV2PolicyPolicyActionRerouteParamArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamArray []PbrV2PolicyPolicyActionRerouteParamInput

func (PbrV2PolicyPolicyActionRerouteParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParam)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamArray) ToPbrV2PolicyPolicyActionRerouteParamArrayOutput() PbrV2PolicyPolicyActionRerouteParamArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamArray) ToPbrV2PolicyPolicyActionRerouteParamArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParam)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) ToPbrV2PolicyPolicyActionRerouteParamOutput() PbrV2PolicyPolicyActionRerouteParamOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) ToPbrV2PolicyPolicyActionRerouteParamOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) EgressServiceIps() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParam) []PbrV2PolicyPolicyActionRerouteParamEgressServiceIp {
		return v.EgressServiceIps
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) IngressServiceIps() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParam) []PbrV2PolicyPolicyActionRerouteParamIngressServiceIp {
		return v.IngressServiceIps
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) RerouteFallbackAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParam) *string { return v.RerouteFallbackAction }).(pulumi.StringPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamOutput) ServiceIps() PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParam) []PbrV2PolicyPolicyActionRerouteParamServiceIp {
		return v.ServiceIps
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParam)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamArrayOutput() PbrV2PolicyPolicyActionRerouteParamArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParam {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParam)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIp struct {
	Ipv4s []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs{...}
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs struct {
	Ipv4s PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput)
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray{ PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs{...} }
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpInput

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput) Ipv4s() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIp) []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput) Ipv6s() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIp) []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamEgressServiceIp {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamEgressServiceIp)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args{...}
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output)
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array{ PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args{...} }
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Input

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args{...}
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output)
}

// PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array and PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array{ PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args{...} }
type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array []PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Input

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIp struct {
	Ipv4s []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs{...}
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs struct {
	Ipv4s PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput)
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray{ PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs{...} }
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpInput

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput) Ipv4s() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIp) []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput) Ipv6s() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIp) []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamIngressServiceIp {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamIngressServiceIp)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args{...}
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output)
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array{ PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args{...} }
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Input

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args{...}
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output)
}

// PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array and PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array{ PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args{...} }
type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array []PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Input

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIp struct {
	Ipv4s []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpArgs and PbrV2PolicyPolicyActionRerouteParamServiceIpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpArgs{...}
type PbrV2PolicyPolicyActionRerouteParamServiceIpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpOutput
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpOutput
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpArgs struct {
	Ipv4s PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyActionRerouteParamServiceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpArgs) ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpOutput)
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpArray and PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpArray{ PbrV2PolicyPolicyActionRerouteParamServiceIpArgs{...} }
type PbrV2PolicyPolicyActionRerouteParamServiceIpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpArray []PbrV2PolicyPolicyActionRerouteParamServiceIpInput

func (PbrV2PolicyPolicyActionRerouteParamServiceIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIp)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpArray) ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpOutput) Ipv4s() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIp) []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpOutput) Ipv6s() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIp) []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIp)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamServiceIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamServiceIp {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamServiceIp)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args and PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args{...}
type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output)
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array and PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array{ PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args{...} }
type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Input

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Input is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args and PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Input` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args{...}
type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output)
}

// PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array and PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array{ PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args{...} }
type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput
	ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array []PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Input

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput() PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput) ToPbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6 {
		return vs[0].([]PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output)
}

type PbrV2PolicyPolicyMatch struct {
	Destinations       []PbrV2PolicyPolicyMatchDestination       `pulumi:"destinations"`
	ProtocolParameters []PbrV2PolicyPolicyMatchProtocolParameter `pulumi:"protocolParameters"`
	ProtocolType       string                                    `pulumi:"protocolType"`
	Sources            []PbrV2PolicyPolicyMatchSource            `pulumi:"sources"`
}

// PbrV2PolicyPolicyMatchInput is an input type that accepts PbrV2PolicyPolicyMatchArgs and PbrV2PolicyPolicyMatchOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchInput` via:
//
//	PbrV2PolicyPolicyMatchArgs{...}
type PbrV2PolicyPolicyMatchInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchOutput() PbrV2PolicyPolicyMatchOutput
	ToPbrV2PolicyPolicyMatchOutputWithContext(context.Context) PbrV2PolicyPolicyMatchOutput
}

type PbrV2PolicyPolicyMatchArgs struct {
	Destinations       PbrV2PolicyPolicyMatchDestinationArrayInput       `pulumi:"destinations"`
	ProtocolParameters PbrV2PolicyPolicyMatchProtocolParameterArrayInput `pulumi:"protocolParameters"`
	ProtocolType       pulumi.StringInput                                `pulumi:"protocolType"`
	Sources            PbrV2PolicyPolicyMatchSourceArrayInput            `pulumi:"sources"`
}

func (PbrV2PolicyPolicyMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatch)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchArgs) ToPbrV2PolicyPolicyMatchOutput() PbrV2PolicyPolicyMatchOutput {
	return i.ToPbrV2PolicyPolicyMatchOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchArgs) ToPbrV2PolicyPolicyMatchOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchOutput)
}

// PbrV2PolicyPolicyMatchArrayInput is an input type that accepts PbrV2PolicyPolicyMatchArray and PbrV2PolicyPolicyMatchArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchArrayInput` via:
//
//	PbrV2PolicyPolicyMatchArray{ PbrV2PolicyPolicyMatchArgs{...} }
type PbrV2PolicyPolicyMatchArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchArrayOutput() PbrV2PolicyPolicyMatchArrayOutput
	ToPbrV2PolicyPolicyMatchArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchArrayOutput
}

type PbrV2PolicyPolicyMatchArray []PbrV2PolicyPolicyMatchInput

func (PbrV2PolicyPolicyMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatch)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchArray) ToPbrV2PolicyPolicyMatchArrayOutput() PbrV2PolicyPolicyMatchArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchArray) ToPbrV2PolicyPolicyMatchArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchArrayOutput)
}

type PbrV2PolicyPolicyMatchOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatch)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchOutput) ToPbrV2PolicyPolicyMatchOutput() PbrV2PolicyPolicyMatchOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchOutput) ToPbrV2PolicyPolicyMatchOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchOutput) Destinations() PbrV2PolicyPolicyMatchDestinationArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatch) []PbrV2PolicyPolicyMatchDestination { return v.Destinations }).(PbrV2PolicyPolicyMatchDestinationArrayOutput)
}

func (o PbrV2PolicyPolicyMatchOutput) ProtocolParameters() PbrV2PolicyPolicyMatchProtocolParameterArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatch) []PbrV2PolicyPolicyMatchProtocolParameter { return v.ProtocolParameters }).(PbrV2PolicyPolicyMatchProtocolParameterArrayOutput)
}

func (o PbrV2PolicyPolicyMatchOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatch) string { return v.ProtocolType }).(pulumi.StringOutput)
}

func (o PbrV2PolicyPolicyMatchOutput) Sources() PbrV2PolicyPolicyMatchSourceArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatch) []PbrV2PolicyPolicyMatchSource { return v.Sources }).(PbrV2PolicyPolicyMatchSourceArrayOutput)
}

type PbrV2PolicyPolicyMatchArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatch)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchArrayOutput) ToPbrV2PolicyPolicyMatchArrayOutput() PbrV2PolicyPolicyMatchArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchArrayOutput) ToPbrV2PolicyPolicyMatchArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatch {
		return vs[0].([]PbrV2PolicyPolicyMatch)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchOutput)
}

type PbrV2PolicyPolicyMatchDestination struct {
	AddressType    string                                          `pulumi:"addressType"`
	SubnetPrefixes []PbrV2PolicyPolicyMatchDestinationSubnetPrefix `pulumi:"subnetPrefixes"`
}

// PbrV2PolicyPolicyMatchDestinationInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationArgs and PbrV2PolicyPolicyMatchDestinationOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationArgs{...}
type PbrV2PolicyPolicyMatchDestinationInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationOutput() PbrV2PolicyPolicyMatchDestinationOutput
	ToPbrV2PolicyPolicyMatchDestinationOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationOutput
}

type PbrV2PolicyPolicyMatchDestinationArgs struct {
	AddressType    pulumi.StringInput                                      `pulumi:"addressType"`
	SubnetPrefixes PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayInput `pulumi:"subnetPrefixes"`
}

func (PbrV2PolicyPolicyMatchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestination)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationArgs) ToPbrV2PolicyPolicyMatchDestinationOutput() PbrV2PolicyPolicyMatchDestinationOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationArgs) ToPbrV2PolicyPolicyMatchDestinationOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationOutput)
}

// PbrV2PolicyPolicyMatchDestinationArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationArray and PbrV2PolicyPolicyMatchDestinationArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationArray{ PbrV2PolicyPolicyMatchDestinationArgs{...} }
type PbrV2PolicyPolicyMatchDestinationArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationArrayOutput() PbrV2PolicyPolicyMatchDestinationArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationArray []PbrV2PolicyPolicyMatchDestinationInput

func (PbrV2PolicyPolicyMatchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestination)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationArray) ToPbrV2PolicyPolicyMatchDestinationArrayOutput() PbrV2PolicyPolicyMatchDestinationArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationArray) ToPbrV2PolicyPolicyMatchDestinationArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestination)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationOutput) ToPbrV2PolicyPolicyMatchDestinationOutput() PbrV2PolicyPolicyMatchDestinationOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationOutput) ToPbrV2PolicyPolicyMatchDestinationOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestination) string { return v.AddressType }).(pulumi.StringOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationOutput) SubnetPrefixes() PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestination) []PbrV2PolicyPolicyMatchDestinationSubnetPrefix {
		return v.SubnetPrefixes
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestination)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationArrayOutput) ToPbrV2PolicyPolicyMatchDestinationArrayOutput() PbrV2PolicyPolicyMatchDestinationArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationArrayOutput) ToPbrV2PolicyPolicyMatchDestinationArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestination {
		return vs[0].([]PbrV2PolicyPolicyMatchDestination)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefix struct {
	Ipv4s []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs and PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs{...}
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs struct {
	Ipv4s PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefix)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput)
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray and PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray{ PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs{...} }
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray []PbrV2PolicyPolicyMatchDestinationSubnetPrefixInput

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefix)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefix)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput) Ipv4s() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefix) []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput) Ipv6s() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefix) []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefix)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestinationSubnetPrefix {
		return vs[0].([]PbrV2PolicyPolicyMatchDestinationSubnetPrefix)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4 struct {
	Ips          []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip `pulumi:"ips"`
	PrefixLength *int                                                  `pulumi:"prefixLength"`
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Input is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Input` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args{...}
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args struct {
	Ips          PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                            `pulumi:"prefixLength"`
}

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output)
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array{ PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args{...} }
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Input

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output) Ips() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4) []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip {
		return v.Ips
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4 {
		return vs[0].([]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs{...}
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput)
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray{ PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs{...} }
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpInput

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip {
		return vs[0].([]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Ip)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6 struct {
	Ips          []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip `pulumi:"ips"`
	PrefixLength *int                                                  `pulumi:"prefixLength"`
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Input is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Input` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args{...}
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args struct {
	Ips          PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                            `pulumi:"prefixLength"`
}

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output)
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array{ PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args{...} }
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Input

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output) Ips() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6) []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip {
		return v.Ips
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6 {
		return vs[0].([]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs{...}
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput)
}

// PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayInput is an input type that accepts PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray and PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayInput` via:
//
//	PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray{ PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs{...} }
type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput
	ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray []PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpInput

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput) ToPbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip {
		return vs[0].([]PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Ip)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameter struct {
	IcmpObjects              []PbrV2PolicyPolicyMatchProtocolParameterIcmpObject              `pulumi:"icmpObjects"`
	LayerFourProtocolObjects []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject `pulumi:"layerFourProtocolObjects"`
	ProtocolNumberObjects    []PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject    `pulumi:"protocolNumberObjects"`
}

// PbrV2PolicyPolicyMatchProtocolParameterInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterArgs and PbrV2PolicyPolicyMatchProtocolParameterOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterOutput() PbrV2PolicyPolicyMatchProtocolParameterOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterArgs struct {
	IcmpObjects              PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayInput              `pulumi:"icmpObjects"`
	LayerFourProtocolObjects PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayInput `pulumi:"layerFourProtocolObjects"`
	ProtocolNumberObjects    PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayInput    `pulumi:"protocolNumberObjects"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameter)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterArgs) ToPbrV2PolicyPolicyMatchProtocolParameterOutput() PbrV2PolicyPolicyMatchProtocolParameterOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterArgs) ToPbrV2PolicyPolicyMatchProtocolParameterOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterArray and PbrV2PolicyPolicyMatchProtocolParameterArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterArray{ PbrV2PolicyPolicyMatchProtocolParameterArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterArray []PbrV2PolicyPolicyMatchProtocolParameterInput

func (PbrV2PolicyPolicyMatchProtocolParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameter)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterArray) ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterArray) ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameter)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterOutput) ToPbrV2PolicyPolicyMatchProtocolParameterOutput() PbrV2PolicyPolicyMatchProtocolParameterOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterOutput) ToPbrV2PolicyPolicyMatchProtocolParameterOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterOutput) IcmpObjects() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameter) []PbrV2PolicyPolicyMatchProtocolParameterIcmpObject {
		return v.IcmpObjects
	}).(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterOutput) LayerFourProtocolObjects() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameter) []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject {
		return v.LayerFourProtocolObjects
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterOutput) ProtocolNumberObjects() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameter) []PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject {
		return v.ProtocolNumberObjects
	}).(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameter)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameter {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameter)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterIcmpObject struct {
	IcmpCode *int `pulumi:"icmpCode"`
	IcmpType *int `pulumi:"icmpType"`
}

// PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs and PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs struct {
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterIcmpObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray and PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray{ PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray []PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectInput

func (PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterIcmpObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterIcmpObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterIcmpObject) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterIcmpObject) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterIcmpObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameterIcmpObject {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameterIcmpObject)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject struct {
	DestinationPortRanges []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange `pulumi:"destinationPortRanges"`
	SourcePortRanges      []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange      `pulumi:"sourcePortRanges"`
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs struct {
	DestinationPortRanges PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayInput `pulumi:"destinationPortRanges"`
	SourcePortRanges      PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayInput      `pulumi:"sourcePortRanges"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray{ PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectInput

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput) DestinationPortRanges() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject) []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange {
		return v.DestinationPortRanges
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput) SourcePortRanges() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject) []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange {
		return v.SourcePortRanges
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObject)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange struct {
	EndPort   int `pulumi:"endPort"`
	StartPort int `pulumi:"startPort"`
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs struct {
	EndPort   pulumi.IntInput `pulumi:"endPort"`
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray{ PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeInput

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange) int {
		return v.EndPort
	}).(pulumi.IntOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange) int {
		return v.StartPort
	}).(pulumi.IntOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRange)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange struct {
	EndPort   int `pulumi:"endPort"`
	StartPort int `pulumi:"startPort"`
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs struct {
	EndPort   pulumi.IntInput `pulumi:"endPort"`
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray and PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray{ PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray []PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeInput

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange) int {
		return v.EndPort
	}).(pulumi.IntOutput)
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange) int {
		return v.StartPort
	}).(pulumi.IntOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRange)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject struct {
	ProtocolNumber int `pulumi:"protocolNumber"`
}

// PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs and PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs{...}
type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs struct {
	ProtocolNumber pulumi.IntInput `pulumi:"protocolNumber"`
}

func (PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput)
}

// PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayInput is an input type that accepts PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray and PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayInput` via:
//
//	PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray{ PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs{...} }
type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput
	ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput
}

type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray []PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectInput

func (PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput) ProtocolNumber() pulumi.IntOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject) int { return v.ProtocolNumber }).(pulumi.IntOutput)
}

type PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput() PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput) ToPbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject {
		return vs[0].([]PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObject)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput)
}

type PbrV2PolicyPolicyMatchSource struct {
	AddressType    string                                     `pulumi:"addressType"`
	SubnetPrefixes []PbrV2PolicyPolicyMatchSourceSubnetPrefix `pulumi:"subnetPrefixes"`
}

// PbrV2PolicyPolicyMatchSourceInput is an input type that accepts PbrV2PolicyPolicyMatchSourceArgs and PbrV2PolicyPolicyMatchSourceOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceInput` via:
//
//	PbrV2PolicyPolicyMatchSourceArgs{...}
type PbrV2PolicyPolicyMatchSourceInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceOutput() PbrV2PolicyPolicyMatchSourceOutput
	ToPbrV2PolicyPolicyMatchSourceOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceOutput
}

type PbrV2PolicyPolicyMatchSourceArgs struct {
	AddressType    pulumi.StringInput                                 `pulumi:"addressType"`
	SubnetPrefixes PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayInput `pulumi:"subnetPrefixes"`
}

func (PbrV2PolicyPolicyMatchSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSource)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceArgs) ToPbrV2PolicyPolicyMatchSourceOutput() PbrV2PolicyPolicyMatchSourceOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceArgs) ToPbrV2PolicyPolicyMatchSourceOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceOutput)
}

// PbrV2PolicyPolicyMatchSourceArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceArray and PbrV2PolicyPolicyMatchSourceArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceArray{ PbrV2PolicyPolicyMatchSourceArgs{...} }
type PbrV2PolicyPolicyMatchSourceArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceArrayOutput() PbrV2PolicyPolicyMatchSourceArrayOutput
	ToPbrV2PolicyPolicyMatchSourceArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceArrayOutput
}

type PbrV2PolicyPolicyMatchSourceArray []PbrV2PolicyPolicyMatchSourceInput

func (PbrV2PolicyPolicyMatchSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSource)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceArray) ToPbrV2PolicyPolicyMatchSourceArrayOutput() PbrV2PolicyPolicyMatchSourceArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceArray) ToPbrV2PolicyPolicyMatchSourceArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSource)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceOutput) ToPbrV2PolicyPolicyMatchSourceOutput() PbrV2PolicyPolicyMatchSourceOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceOutput) ToPbrV2PolicyPolicyMatchSourceOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSource) string { return v.AddressType }).(pulumi.StringOutput)
}

func (o PbrV2PolicyPolicyMatchSourceOutput) SubnetPrefixes() PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSource) []PbrV2PolicyPolicyMatchSourceSubnetPrefix {
		return v.SubnetPrefixes
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSource)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceArrayOutput) ToPbrV2PolicyPolicyMatchSourceArrayOutput() PbrV2PolicyPolicyMatchSourceArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceArrayOutput) ToPbrV2PolicyPolicyMatchSourceArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSource {
		return vs[0].([]PbrV2PolicyPolicyMatchSource)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefix struct {
	Ipv4s []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4 `pulumi:"ipv4s"`
	Ipv6s []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6 `pulumi:"ipv6s"`
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs and PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs{...}
type PbrV2PolicyPolicyMatchSourceSubnetPrefixInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs struct {
	Ipv4s PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefix)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput)
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixArray and PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixArray{ PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs{...} }
type PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixArray []PbrV2PolicyPolicyMatchSourceSubnetPrefixInput

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefix)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefix)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput) Ipv4s() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefix) []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4 {
		return v.Ipv4s
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput)
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput) Ipv6s() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefix) []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6 {
		return v.Ipv6s
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefix)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSourceSubnetPrefix {
		return vs[0].([]PbrV2PolicyPolicyMatchSourceSubnetPrefix)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4 struct {
	Ips          []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip `pulumi:"ips"`
	PrefixLength *int                                             `pulumi:"prefixLength"`
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Input is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Input` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args{...}
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4OutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args struct {
	Ips          PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                       `pulumi:"prefixLength"`
}

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output)
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array{ PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args{...} }
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Input

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output) Ips() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4) []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip {
		return v.Ips
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput)
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4 {
		return vs[0].([]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs{...}
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput)
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray{ PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs{...} }
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpInput

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip {
		return vs[0].([]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Ip)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6 struct {
	Ips          []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip `pulumi:"ips"`
	PrefixLength *int                                             `pulumi:"prefixLength"`
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Input is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Input` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args{...}
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Input interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6OutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args struct {
	Ips          PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                       `pulumi:"prefixLength"`
}

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6OutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output)
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array{ PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args{...} }
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Input

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6OutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output) Ips() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6) []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip {
		return v.Ips
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput)
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6 {
		return vs[0].([]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs{...}
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput)
}

// PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayInput is an input type that accepts PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray and PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput values.
// You can construct a concrete instance of `PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayInput` via:
//
//	PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray{ PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs{...} }
type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayInput interface {
	pulumi.Input

	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput
	ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutputWithContext(context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray []PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpInput

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput {
	return i.ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutputWithContext(context.Background())
}

func (i PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput struct{ *pulumi.OutputState }

func (PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip)(nil)).Elem()
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput() PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput) ToPbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutputWithContext(ctx context.Context) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput {
	return o
}

func (o PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput) Index(i pulumi.IntInput) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip {
		return vs[0].([]PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Ip)[vs[1].(int)]
	}).(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput)
}

type PbrV2Vpc struct {
	Name *string `pulumi:"name"`
}

// PbrV2VpcInput is an input type that accepts PbrV2VpcArgs and PbrV2VpcOutput values.
// You can construct a concrete instance of `PbrV2VpcInput` via:
//
//	PbrV2VpcArgs{...}
type PbrV2VpcInput interface {
	pulumi.Input

	ToPbrV2VpcOutput() PbrV2VpcOutput
	ToPbrV2VpcOutputWithContext(context.Context) PbrV2VpcOutput
}

type PbrV2VpcArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PbrV2VpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Vpc)(nil)).Elem()
}

func (i PbrV2VpcArgs) ToPbrV2VpcOutput() PbrV2VpcOutput {
	return i.ToPbrV2VpcOutputWithContext(context.Background())
}

func (i PbrV2VpcArgs) ToPbrV2VpcOutputWithContext(ctx context.Context) PbrV2VpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2VpcOutput)
}

// PbrV2VpcArrayInput is an input type that accepts PbrV2VpcArray and PbrV2VpcArrayOutput values.
// You can construct a concrete instance of `PbrV2VpcArrayInput` via:
//
//	PbrV2VpcArray{ PbrV2VpcArgs{...} }
type PbrV2VpcArrayInput interface {
	pulumi.Input

	ToPbrV2VpcArrayOutput() PbrV2VpcArrayOutput
	ToPbrV2VpcArrayOutputWithContext(context.Context) PbrV2VpcArrayOutput
}

type PbrV2VpcArray []PbrV2VpcInput

func (PbrV2VpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Vpc)(nil)).Elem()
}

func (i PbrV2VpcArray) ToPbrV2VpcArrayOutput() PbrV2VpcArrayOutput {
	return i.ToPbrV2VpcArrayOutputWithContext(context.Background())
}

func (i PbrV2VpcArray) ToPbrV2VpcArrayOutputWithContext(ctx context.Context) PbrV2VpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrV2VpcArrayOutput)
}

type PbrV2VpcOutput struct{ *pulumi.OutputState }

func (PbrV2VpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrV2Vpc)(nil)).Elem()
}

func (o PbrV2VpcOutput) ToPbrV2VpcOutput() PbrV2VpcOutput {
	return o
}

func (o PbrV2VpcOutput) ToPbrV2VpcOutputWithContext(ctx context.Context) PbrV2VpcOutput {
	return o
}

func (o PbrV2VpcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrV2Vpc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PbrV2VpcArrayOutput struct{ *pulumi.OutputState }

func (PbrV2VpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrV2Vpc)(nil)).Elem()
}

func (o PbrV2VpcArrayOutput) ToPbrV2VpcArrayOutput() PbrV2VpcArrayOutput {
	return o
}

func (o PbrV2VpcArrayOutput) ToPbrV2VpcArrayOutputWithContext(ctx context.Context) PbrV2VpcArrayOutput {
	return o
}

func (o PbrV2VpcArrayOutput) Index(i pulumi.IntInput) PbrV2VpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrV2Vpc {
		return vs[0].([]PbrV2Vpc)[vs[1].(int)]
	}).(PbrV2VpcOutput)
}

type PcRegistrationV2Config struct {
	BootstrapConfigs         []PcRegistrationV2ConfigBootstrapConfig `pulumi:"bootstrapConfigs"`
	BuildInfos               []PcRegistrationV2ConfigBuildInfo       `pulumi:"buildInfos"`
	Name                     *string                                 `pulumi:"name"`
	ResourceConfigs          []PcRegistrationV2ConfigResourceConfig  `pulumi:"resourceConfigs"`
	ShouldEnableLockdownMode *bool                                   `pulumi:"shouldEnableLockdownMode"`
	Size                     *string                                 `pulumi:"size"`
}

// PcRegistrationV2ConfigInput is an input type that accepts PcRegistrationV2ConfigArgs and PcRegistrationV2ConfigOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigInput` via:
//
//	PcRegistrationV2ConfigArgs{...}
type PcRegistrationV2ConfigInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigOutput() PcRegistrationV2ConfigOutput
	ToPcRegistrationV2ConfigOutputWithContext(context.Context) PcRegistrationV2ConfigOutput
}

type PcRegistrationV2ConfigArgs struct {
	BootstrapConfigs         PcRegistrationV2ConfigBootstrapConfigArrayInput `pulumi:"bootstrapConfigs"`
	BuildInfos               PcRegistrationV2ConfigBuildInfoArrayInput       `pulumi:"buildInfos"`
	Name                     pulumi.StringPtrInput                           `pulumi:"name"`
	ResourceConfigs          PcRegistrationV2ConfigResourceConfigArrayInput  `pulumi:"resourceConfigs"`
	ShouldEnableLockdownMode pulumi.BoolPtrInput                             `pulumi:"shouldEnableLockdownMode"`
	Size                     pulumi.StringPtrInput                           `pulumi:"size"`
}

func (PcRegistrationV2ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Config)(nil)).Elem()
}

func (i PcRegistrationV2ConfigArgs) ToPcRegistrationV2ConfigOutput() PcRegistrationV2ConfigOutput {
	return i.ToPcRegistrationV2ConfigOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigArgs) ToPcRegistrationV2ConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigOutput)
}

// PcRegistrationV2ConfigArrayInput is an input type that accepts PcRegistrationV2ConfigArray and PcRegistrationV2ConfigArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigArrayInput` via:
//
//	PcRegistrationV2ConfigArray{ PcRegistrationV2ConfigArgs{...} }
type PcRegistrationV2ConfigArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigArrayOutput() PcRegistrationV2ConfigArrayOutput
	ToPcRegistrationV2ConfigArrayOutputWithContext(context.Context) PcRegistrationV2ConfigArrayOutput
}

type PcRegistrationV2ConfigArray []PcRegistrationV2ConfigInput

func (PcRegistrationV2ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Config)(nil)).Elem()
}

func (i PcRegistrationV2ConfigArray) ToPcRegistrationV2ConfigArrayOutput() PcRegistrationV2ConfigArrayOutput {
	return i.ToPcRegistrationV2ConfigArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigArray) ToPcRegistrationV2ConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigArrayOutput)
}

type PcRegistrationV2ConfigOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Config)(nil)).Elem()
}

func (o PcRegistrationV2ConfigOutput) ToPcRegistrationV2ConfigOutput() PcRegistrationV2ConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigOutput) ToPcRegistrationV2ConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigOutput) BootstrapConfigs() PcRegistrationV2ConfigBootstrapConfigArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) []PcRegistrationV2ConfigBootstrapConfig { return v.BootstrapConfigs }).(PcRegistrationV2ConfigBootstrapConfigArrayOutput)
}

func (o PcRegistrationV2ConfigOutput) BuildInfos() PcRegistrationV2ConfigBuildInfoArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) []PcRegistrationV2ConfigBuildInfo { return v.BuildInfos }).(PcRegistrationV2ConfigBuildInfoArrayOutput)
}

func (o PcRegistrationV2ConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2ConfigOutput) ResourceConfigs() PcRegistrationV2ConfigResourceConfigArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) []PcRegistrationV2ConfigResourceConfig { return v.ResourceConfigs }).(PcRegistrationV2ConfigResourceConfigArrayOutput)
}

func (o PcRegistrationV2ConfigOutput) ShouldEnableLockdownMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) *bool { return v.ShouldEnableLockdownMode }).(pulumi.BoolPtrOutput)
}

func (o PcRegistrationV2ConfigOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Config) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2ConfigArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Config)(nil)).Elem()
}

func (o PcRegistrationV2ConfigArrayOutput) ToPcRegistrationV2ConfigArrayOutput() PcRegistrationV2ConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigArrayOutput) ToPcRegistrationV2ConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2Config {
		return vs[0].([]PcRegistrationV2Config)[vs[1].(int)]
	}).(PcRegistrationV2ConfigOutput)
}

type PcRegistrationV2ConfigBootstrapConfig struct {
	EnvironmentInfos []PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo `pulumi:"environmentInfos"`
}

// PcRegistrationV2ConfigBootstrapConfigInput is an input type that accepts PcRegistrationV2ConfigBootstrapConfigArgs and PcRegistrationV2ConfigBootstrapConfigOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBootstrapConfigInput` via:
//
//	PcRegistrationV2ConfigBootstrapConfigArgs{...}
type PcRegistrationV2ConfigBootstrapConfigInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBootstrapConfigOutput() PcRegistrationV2ConfigBootstrapConfigOutput
	ToPcRegistrationV2ConfigBootstrapConfigOutputWithContext(context.Context) PcRegistrationV2ConfigBootstrapConfigOutput
}

type PcRegistrationV2ConfigBootstrapConfigArgs struct {
	EnvironmentInfos PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayInput `pulumi:"environmentInfos"`
}

func (PcRegistrationV2ConfigBootstrapConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfig)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBootstrapConfigArgs) ToPcRegistrationV2ConfigBootstrapConfigOutput() PcRegistrationV2ConfigBootstrapConfigOutput {
	return i.ToPcRegistrationV2ConfigBootstrapConfigOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBootstrapConfigArgs) ToPcRegistrationV2ConfigBootstrapConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBootstrapConfigOutput)
}

// PcRegistrationV2ConfigBootstrapConfigArrayInput is an input type that accepts PcRegistrationV2ConfigBootstrapConfigArray and PcRegistrationV2ConfigBootstrapConfigArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBootstrapConfigArrayInput` via:
//
//	PcRegistrationV2ConfigBootstrapConfigArray{ PcRegistrationV2ConfigBootstrapConfigArgs{...} }
type PcRegistrationV2ConfigBootstrapConfigArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBootstrapConfigArrayOutput() PcRegistrationV2ConfigBootstrapConfigArrayOutput
	ToPcRegistrationV2ConfigBootstrapConfigArrayOutputWithContext(context.Context) PcRegistrationV2ConfigBootstrapConfigArrayOutput
}

type PcRegistrationV2ConfigBootstrapConfigArray []PcRegistrationV2ConfigBootstrapConfigInput

func (PcRegistrationV2ConfigBootstrapConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBootstrapConfig)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBootstrapConfigArray) ToPcRegistrationV2ConfigBootstrapConfigArrayOutput() PcRegistrationV2ConfigBootstrapConfigArrayOutput {
	return i.ToPcRegistrationV2ConfigBootstrapConfigArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBootstrapConfigArray) ToPcRegistrationV2ConfigBootstrapConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBootstrapConfigArrayOutput)
}

type PcRegistrationV2ConfigBootstrapConfigOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBootstrapConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfig)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBootstrapConfigOutput) ToPcRegistrationV2ConfigBootstrapConfigOutput() PcRegistrationV2ConfigBootstrapConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigOutput) ToPcRegistrationV2ConfigBootstrapConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigOutput) EnvironmentInfos() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigBootstrapConfig) []PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo {
		return v.EnvironmentInfos
	}).(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput)
}

type PcRegistrationV2ConfigBootstrapConfigArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBootstrapConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBootstrapConfig)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBootstrapConfigArrayOutput) ToPcRegistrationV2ConfigBootstrapConfigArrayOutput() PcRegistrationV2ConfigBootstrapConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigArrayOutput) ToPcRegistrationV2ConfigBootstrapConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2ConfigBootstrapConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2ConfigBootstrapConfig {
		return vs[0].([]PcRegistrationV2ConfigBootstrapConfig)[vs[1].(int)]
	}).(PcRegistrationV2ConfigBootstrapConfigOutput)
}

type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo struct {
	ProviderType     *string `pulumi:"providerType"`
	ProvisioningType *string `pulumi:"provisioningType"`
	Type             *string `pulumi:"type"`
}

// PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoInput is an input type that accepts PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs and PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoInput` via:
//
//	PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs{...}
type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput
	ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutputWithContext(context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput
}

type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs struct {
	ProviderType     pulumi.StringPtrInput `pulumi:"providerType"`
	ProvisioningType pulumi.StringPtrInput `pulumi:"provisioningType"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput {
	return i.ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput)
}

// PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayInput is an input type that accepts PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray and PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayInput` via:
//
//	PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray{ PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs{...} }
type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput
	ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutputWithContext(context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput
}

type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray []PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoInput

func (PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput {
	return i.ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput)
}

type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo) *string { return v.ProviderType }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) ProvisioningType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo) *string { return v.ProvisioningType }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput() PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput) ToPcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo {
		return vs[0].([]PcRegistrationV2ConfigBootstrapConfigEnvironmentInfo)[vs[1].(int)]
	}).(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput)
}

type PcRegistrationV2ConfigBuildInfo struct {
	Version *string `pulumi:"version"`
}

// PcRegistrationV2ConfigBuildInfoInput is an input type that accepts PcRegistrationV2ConfigBuildInfoArgs and PcRegistrationV2ConfigBuildInfoOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBuildInfoInput` via:
//
//	PcRegistrationV2ConfigBuildInfoArgs{...}
type PcRegistrationV2ConfigBuildInfoInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBuildInfoOutput() PcRegistrationV2ConfigBuildInfoOutput
	ToPcRegistrationV2ConfigBuildInfoOutputWithContext(context.Context) PcRegistrationV2ConfigBuildInfoOutput
}

type PcRegistrationV2ConfigBuildInfoArgs struct {
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PcRegistrationV2ConfigBuildInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBuildInfo)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBuildInfoArgs) ToPcRegistrationV2ConfigBuildInfoOutput() PcRegistrationV2ConfigBuildInfoOutput {
	return i.ToPcRegistrationV2ConfigBuildInfoOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBuildInfoArgs) ToPcRegistrationV2ConfigBuildInfoOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBuildInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBuildInfoOutput)
}

// PcRegistrationV2ConfigBuildInfoArrayInput is an input type that accepts PcRegistrationV2ConfigBuildInfoArray and PcRegistrationV2ConfigBuildInfoArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigBuildInfoArrayInput` via:
//
//	PcRegistrationV2ConfigBuildInfoArray{ PcRegistrationV2ConfigBuildInfoArgs{...} }
type PcRegistrationV2ConfigBuildInfoArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigBuildInfoArrayOutput() PcRegistrationV2ConfigBuildInfoArrayOutput
	ToPcRegistrationV2ConfigBuildInfoArrayOutputWithContext(context.Context) PcRegistrationV2ConfigBuildInfoArrayOutput
}

type PcRegistrationV2ConfigBuildInfoArray []PcRegistrationV2ConfigBuildInfoInput

func (PcRegistrationV2ConfigBuildInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBuildInfo)(nil)).Elem()
}

func (i PcRegistrationV2ConfigBuildInfoArray) ToPcRegistrationV2ConfigBuildInfoArrayOutput() PcRegistrationV2ConfigBuildInfoArrayOutput {
	return i.ToPcRegistrationV2ConfigBuildInfoArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigBuildInfoArray) ToPcRegistrationV2ConfigBuildInfoArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBuildInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigBuildInfoArrayOutput)
}

type PcRegistrationV2ConfigBuildInfoOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBuildInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigBuildInfo)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBuildInfoOutput) ToPcRegistrationV2ConfigBuildInfoOutput() PcRegistrationV2ConfigBuildInfoOutput {
	return o
}

func (o PcRegistrationV2ConfigBuildInfoOutput) ToPcRegistrationV2ConfigBuildInfoOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBuildInfoOutput {
	return o
}

func (o PcRegistrationV2ConfigBuildInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigBuildInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2ConfigBuildInfoArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigBuildInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigBuildInfo)(nil)).Elem()
}

func (o PcRegistrationV2ConfigBuildInfoArrayOutput) ToPcRegistrationV2ConfigBuildInfoArrayOutput() PcRegistrationV2ConfigBuildInfoArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBuildInfoArrayOutput) ToPcRegistrationV2ConfigBuildInfoArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigBuildInfoArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigBuildInfoArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2ConfigBuildInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2ConfigBuildInfo {
		return vs[0].([]PcRegistrationV2ConfigBuildInfo)[vs[1].(int)]
	}).(PcRegistrationV2ConfigBuildInfoOutput)
}

type PcRegistrationV2ConfigResourceConfig struct {
	ContainerExtIds   []string `pulumi:"containerExtIds"`
	DataDiskSizeBytes *int     `pulumi:"dataDiskSizeBytes"`
	MemorySizeBytes   *int     `pulumi:"memorySizeBytes"`
	NumVcpus          *int     `pulumi:"numVcpus"`
}

// PcRegistrationV2ConfigResourceConfigInput is an input type that accepts PcRegistrationV2ConfigResourceConfigArgs and PcRegistrationV2ConfigResourceConfigOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigResourceConfigInput` via:
//
//	PcRegistrationV2ConfigResourceConfigArgs{...}
type PcRegistrationV2ConfigResourceConfigInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigResourceConfigOutput() PcRegistrationV2ConfigResourceConfigOutput
	ToPcRegistrationV2ConfigResourceConfigOutputWithContext(context.Context) PcRegistrationV2ConfigResourceConfigOutput
}

type PcRegistrationV2ConfigResourceConfigArgs struct {
	ContainerExtIds   pulumi.StringArrayInput `pulumi:"containerExtIds"`
	DataDiskSizeBytes pulumi.IntPtrInput      `pulumi:"dataDiskSizeBytes"`
	MemorySizeBytes   pulumi.IntPtrInput      `pulumi:"memorySizeBytes"`
	NumVcpus          pulumi.IntPtrInput      `pulumi:"numVcpus"`
}

func (PcRegistrationV2ConfigResourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigResourceConfig)(nil)).Elem()
}

func (i PcRegistrationV2ConfigResourceConfigArgs) ToPcRegistrationV2ConfigResourceConfigOutput() PcRegistrationV2ConfigResourceConfigOutput {
	return i.ToPcRegistrationV2ConfigResourceConfigOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigResourceConfigArgs) ToPcRegistrationV2ConfigResourceConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigResourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigResourceConfigOutput)
}

// PcRegistrationV2ConfigResourceConfigArrayInput is an input type that accepts PcRegistrationV2ConfigResourceConfigArray and PcRegistrationV2ConfigResourceConfigArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2ConfigResourceConfigArrayInput` via:
//
//	PcRegistrationV2ConfigResourceConfigArray{ PcRegistrationV2ConfigResourceConfigArgs{...} }
type PcRegistrationV2ConfigResourceConfigArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2ConfigResourceConfigArrayOutput() PcRegistrationV2ConfigResourceConfigArrayOutput
	ToPcRegistrationV2ConfigResourceConfigArrayOutputWithContext(context.Context) PcRegistrationV2ConfigResourceConfigArrayOutput
}

type PcRegistrationV2ConfigResourceConfigArray []PcRegistrationV2ConfigResourceConfigInput

func (PcRegistrationV2ConfigResourceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigResourceConfig)(nil)).Elem()
}

func (i PcRegistrationV2ConfigResourceConfigArray) ToPcRegistrationV2ConfigResourceConfigArrayOutput() PcRegistrationV2ConfigResourceConfigArrayOutput {
	return i.ToPcRegistrationV2ConfigResourceConfigArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2ConfigResourceConfigArray) ToPcRegistrationV2ConfigResourceConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigResourceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2ConfigResourceConfigArrayOutput)
}

type PcRegistrationV2ConfigResourceConfigOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigResourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2ConfigResourceConfig)(nil)).Elem()
}

func (o PcRegistrationV2ConfigResourceConfigOutput) ToPcRegistrationV2ConfigResourceConfigOutput() PcRegistrationV2ConfigResourceConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigResourceConfigOutput) ToPcRegistrationV2ConfigResourceConfigOutputWithContext(ctx context.Context) PcRegistrationV2ConfigResourceConfigOutput {
	return o
}

func (o PcRegistrationV2ConfigResourceConfigOutput) ContainerExtIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigResourceConfig) []string { return v.ContainerExtIds }).(pulumi.StringArrayOutput)
}

func (o PcRegistrationV2ConfigResourceConfigOutput) DataDiskSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigResourceConfig) *int { return v.DataDiskSizeBytes }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2ConfigResourceConfigOutput) MemorySizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigResourceConfig) *int { return v.MemorySizeBytes }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2ConfigResourceConfigOutput) NumVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2ConfigResourceConfig) *int { return v.NumVcpus }).(pulumi.IntPtrOutput)
}

type PcRegistrationV2ConfigResourceConfigArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2ConfigResourceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2ConfigResourceConfig)(nil)).Elem()
}

func (o PcRegistrationV2ConfigResourceConfigArrayOutput) ToPcRegistrationV2ConfigResourceConfigArrayOutput() PcRegistrationV2ConfigResourceConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigResourceConfigArrayOutput) ToPcRegistrationV2ConfigResourceConfigArrayOutputWithContext(ctx context.Context) PcRegistrationV2ConfigResourceConfigArrayOutput {
	return o
}

func (o PcRegistrationV2ConfigResourceConfigArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2ConfigResourceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2ConfigResourceConfig {
		return vs[0].([]PcRegistrationV2ConfigResourceConfig)[vs[1].(int)]
	}).(PcRegistrationV2ConfigResourceConfigOutput)
}

type PcRegistrationV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// PcRegistrationV2LinkInput is an input type that accepts PcRegistrationV2LinkArgs and PcRegistrationV2LinkOutput values.
// You can construct a concrete instance of `PcRegistrationV2LinkInput` via:
//
//	PcRegistrationV2LinkArgs{...}
type PcRegistrationV2LinkInput interface {
	pulumi.Input

	ToPcRegistrationV2LinkOutput() PcRegistrationV2LinkOutput
	ToPcRegistrationV2LinkOutputWithContext(context.Context) PcRegistrationV2LinkOutput
}

type PcRegistrationV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (PcRegistrationV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Link)(nil)).Elem()
}

func (i PcRegistrationV2LinkArgs) ToPcRegistrationV2LinkOutput() PcRegistrationV2LinkOutput {
	return i.ToPcRegistrationV2LinkOutputWithContext(context.Background())
}

func (i PcRegistrationV2LinkArgs) ToPcRegistrationV2LinkOutputWithContext(ctx context.Context) PcRegistrationV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2LinkOutput)
}

// PcRegistrationV2LinkArrayInput is an input type that accepts PcRegistrationV2LinkArray and PcRegistrationV2LinkArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2LinkArrayInput` via:
//
//	PcRegistrationV2LinkArray{ PcRegistrationV2LinkArgs{...} }
type PcRegistrationV2LinkArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2LinkArrayOutput() PcRegistrationV2LinkArrayOutput
	ToPcRegistrationV2LinkArrayOutputWithContext(context.Context) PcRegistrationV2LinkArrayOutput
}

type PcRegistrationV2LinkArray []PcRegistrationV2LinkInput

func (PcRegistrationV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Link)(nil)).Elem()
}

func (i PcRegistrationV2LinkArray) ToPcRegistrationV2LinkArrayOutput() PcRegistrationV2LinkArrayOutput {
	return i.ToPcRegistrationV2LinkArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2LinkArray) ToPcRegistrationV2LinkArrayOutputWithContext(ctx context.Context) PcRegistrationV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2LinkArrayOutput)
}

type PcRegistrationV2LinkOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Link)(nil)).Elem()
}

func (o PcRegistrationV2LinkOutput) ToPcRegistrationV2LinkOutput() PcRegistrationV2LinkOutput {
	return o
}

func (o PcRegistrationV2LinkOutput) ToPcRegistrationV2LinkOutputWithContext(ctx context.Context) PcRegistrationV2LinkOutput {
	return o
}

func (o PcRegistrationV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2LinkArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Link)(nil)).Elem()
}

func (o PcRegistrationV2LinkArrayOutput) ToPcRegistrationV2LinkArrayOutput() PcRegistrationV2LinkArrayOutput {
	return o
}

func (o PcRegistrationV2LinkArrayOutput) ToPcRegistrationV2LinkArrayOutputWithContext(ctx context.Context) PcRegistrationV2LinkArrayOutput {
	return o
}

func (o PcRegistrationV2LinkArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2Link {
		return vs[0].([]PcRegistrationV2Link)[vs[1].(int)]
	}).(PcRegistrationV2LinkOutput)
}

type PcRegistrationV2Network struct {
	ExternalAddresses []PcRegistrationV2NetworkExternalAddress `pulumi:"externalAddresses"`
	ExternalNetworks  []PcRegistrationV2NetworkExternalNetwork `pulumi:"externalNetworks"`
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdn        *string                             `pulumi:"fqdn"`
	NameServers []PcRegistrationV2NetworkNameServer `pulumi:"nameServers"`
	NtpServers  []PcRegistrationV2NetworkNtpServer  `pulumi:"ntpServers"`
}

// PcRegistrationV2NetworkInput is an input type that accepts PcRegistrationV2NetworkArgs and PcRegistrationV2NetworkOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkInput` via:
//
//	PcRegistrationV2NetworkArgs{...}
type PcRegistrationV2NetworkInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkOutput() PcRegistrationV2NetworkOutput
	ToPcRegistrationV2NetworkOutputWithContext(context.Context) PcRegistrationV2NetworkOutput
}

type PcRegistrationV2NetworkArgs struct {
	ExternalAddresses PcRegistrationV2NetworkExternalAddressArrayInput `pulumi:"externalAddresses"`
	ExternalNetworks  PcRegistrationV2NetworkExternalNetworkArrayInput `pulumi:"externalNetworks"`
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdn        pulumi.StringPtrInput                       `pulumi:"fqdn"`
	NameServers PcRegistrationV2NetworkNameServerArrayInput `pulumi:"nameServers"`
	NtpServers  PcRegistrationV2NetworkNtpServerArrayInput  `pulumi:"ntpServers"`
}

func (PcRegistrationV2NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Network)(nil)).Elem()
}

func (i PcRegistrationV2NetworkArgs) ToPcRegistrationV2NetworkOutput() PcRegistrationV2NetworkOutput {
	return i.ToPcRegistrationV2NetworkOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkArgs) ToPcRegistrationV2NetworkOutputWithContext(ctx context.Context) PcRegistrationV2NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkOutput)
}

// PcRegistrationV2NetworkArrayInput is an input type that accepts PcRegistrationV2NetworkArray and PcRegistrationV2NetworkArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkArrayInput` via:
//
//	PcRegistrationV2NetworkArray{ PcRegistrationV2NetworkArgs{...} }
type PcRegistrationV2NetworkArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkArrayOutput() PcRegistrationV2NetworkArrayOutput
	ToPcRegistrationV2NetworkArrayOutputWithContext(context.Context) PcRegistrationV2NetworkArrayOutput
}

type PcRegistrationV2NetworkArray []PcRegistrationV2NetworkInput

func (PcRegistrationV2NetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Network)(nil)).Elem()
}

func (i PcRegistrationV2NetworkArray) ToPcRegistrationV2NetworkArrayOutput() PcRegistrationV2NetworkArrayOutput {
	return i.ToPcRegistrationV2NetworkArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkArray) ToPcRegistrationV2NetworkArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkArrayOutput)
}

type PcRegistrationV2NetworkOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2Network)(nil)).Elem()
}

func (o PcRegistrationV2NetworkOutput) ToPcRegistrationV2NetworkOutput() PcRegistrationV2NetworkOutput {
	return o
}

func (o PcRegistrationV2NetworkOutput) ToPcRegistrationV2NetworkOutputWithContext(ctx context.Context) PcRegistrationV2NetworkOutput {
	return o
}

func (o PcRegistrationV2NetworkOutput) ExternalAddresses() PcRegistrationV2NetworkExternalAddressArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Network) []PcRegistrationV2NetworkExternalAddress { return v.ExternalAddresses }).(PcRegistrationV2NetworkExternalAddressArrayOutput)
}

func (o PcRegistrationV2NetworkOutput) ExternalNetworks() PcRegistrationV2NetworkExternalNetworkArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Network) []PcRegistrationV2NetworkExternalNetwork { return v.ExternalNetworks }).(PcRegistrationV2NetworkExternalNetworkArrayOutput)
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2NetworkOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2Network) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2NetworkOutput) NameServers() PcRegistrationV2NetworkNameServerArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Network) []PcRegistrationV2NetworkNameServer { return v.NameServers }).(PcRegistrationV2NetworkNameServerArrayOutput)
}

func (o PcRegistrationV2NetworkOutput) NtpServers() PcRegistrationV2NetworkNtpServerArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2Network) []PcRegistrationV2NetworkNtpServer { return v.NtpServers }).(PcRegistrationV2NetworkNtpServerArrayOutput)
}

type PcRegistrationV2NetworkArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2Network)(nil)).Elem()
}

func (o PcRegistrationV2NetworkArrayOutput) ToPcRegistrationV2NetworkArrayOutput() PcRegistrationV2NetworkArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkArrayOutput) ToPcRegistrationV2NetworkArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2Network {
		return vs[0].([]PcRegistrationV2Network)[vs[1].(int)]
	}).(PcRegistrationV2NetworkOutput)
}

type PcRegistrationV2NetworkExternalAddress struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkExternalAddressIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkExternalAddressIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkExternalAddressInput is an input type that accepts PcRegistrationV2NetworkExternalAddressArgs and PcRegistrationV2NetworkExternalAddressOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressInput` via:
//
//	PcRegistrationV2NetworkExternalAddressArgs{...}
type PcRegistrationV2NetworkExternalAddressInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressOutput() PcRegistrationV2NetworkExternalAddressOutput
	ToPcRegistrationV2NetworkExternalAddressOutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressOutput
}

type PcRegistrationV2NetworkExternalAddressArgs struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkExternalAddressIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkExternalAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkExternalAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddress)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressArgs) ToPcRegistrationV2NetworkExternalAddressOutput() PcRegistrationV2NetworkExternalAddressOutput {
	return i.ToPcRegistrationV2NetworkExternalAddressOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressArgs) ToPcRegistrationV2NetworkExternalAddressOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressOutput)
}

// PcRegistrationV2NetworkExternalAddressArrayInput is an input type that accepts PcRegistrationV2NetworkExternalAddressArray and PcRegistrationV2NetworkExternalAddressArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressArrayInput` via:
//
//	PcRegistrationV2NetworkExternalAddressArray{ PcRegistrationV2NetworkExternalAddressArgs{...} }
type PcRegistrationV2NetworkExternalAddressArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressArrayOutput() PcRegistrationV2NetworkExternalAddressArrayOutput
	ToPcRegistrationV2NetworkExternalAddressArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressArrayOutput
}

type PcRegistrationV2NetworkExternalAddressArray []PcRegistrationV2NetworkExternalAddressInput

func (PcRegistrationV2NetworkExternalAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddress)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressArray) ToPcRegistrationV2NetworkExternalAddressArrayOutput() PcRegistrationV2NetworkExternalAddressArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalAddressArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressArray) ToPcRegistrationV2NetworkExternalAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressArrayOutput)
}

type PcRegistrationV2NetworkExternalAddressOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddress)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressOutput) ToPcRegistrationV2NetworkExternalAddressOutput() PcRegistrationV2NetworkExternalAddressOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressOutput) ToPcRegistrationV2NetworkExternalAddressOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressOutput {
	return o
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkExternalAddressOutput) Ipv4s() PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddress) []PcRegistrationV2NetworkExternalAddressIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkExternalAddressOutput) Ipv6s() PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddress) []PcRegistrationV2NetworkExternalAddressIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalAddressArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddress)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressArrayOutput) ToPcRegistrationV2NetworkExternalAddressArrayOutput() PcRegistrationV2NetworkExternalAddressArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressArrayOutput) ToPcRegistrationV2NetworkExternalAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalAddress {
		return vs[0].([]PcRegistrationV2NetworkExternalAddress)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalAddressOutput)
}

type PcRegistrationV2NetworkExternalAddressIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalAddressIpv4Input is an input type that accepts PcRegistrationV2NetworkExternalAddressIpv4Args and PcRegistrationV2NetworkExternalAddressIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressIpv4Input` via:
//
//	PcRegistrationV2NetworkExternalAddressIpv4Args{...}
type PcRegistrationV2NetworkExternalAddressIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressIpv4Output() PcRegistrationV2NetworkExternalAddressIpv4Output
	ToPcRegistrationV2NetworkExternalAddressIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressIpv4Output
}

type PcRegistrationV2NetworkExternalAddressIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressIpv4Args) ToPcRegistrationV2NetworkExternalAddressIpv4Output() PcRegistrationV2NetworkExternalAddressIpv4Output {
	return i.ToPcRegistrationV2NetworkExternalAddressIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressIpv4Args) ToPcRegistrationV2NetworkExternalAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressIpv4Output)
}

// PcRegistrationV2NetworkExternalAddressIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalAddressIpv4Array and PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalAddressIpv4Array{ PcRegistrationV2NetworkExternalAddressIpv4Args{...} }
type PcRegistrationV2NetworkExternalAddressIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput
	ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput
}

type PcRegistrationV2NetworkExternalAddressIpv4Array []PcRegistrationV2NetworkExternalAddressIpv4Input

func (PcRegistrationV2NetworkExternalAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressIpv4Array) ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressIpv4Array) ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput)
}

type PcRegistrationV2NetworkExternalAddressIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressIpv4Output) ToPcRegistrationV2NetworkExternalAddressIpv4Output() PcRegistrationV2NetworkExternalAddressIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv4Output) ToPcRegistrationV2NetworkExternalAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkExternalAddressIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddressIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalAddressIpv4 {
		return vs[0].([]PcRegistrationV2NetworkExternalAddressIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalAddressIpv4Output)
}

type PcRegistrationV2NetworkExternalAddressIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalAddressIpv6Input is an input type that accepts PcRegistrationV2NetworkExternalAddressIpv6Args and PcRegistrationV2NetworkExternalAddressIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressIpv6Input` via:
//
//	PcRegistrationV2NetworkExternalAddressIpv6Args{...}
type PcRegistrationV2NetworkExternalAddressIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressIpv6Output() PcRegistrationV2NetworkExternalAddressIpv6Output
	ToPcRegistrationV2NetworkExternalAddressIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressIpv6Output
}

type PcRegistrationV2NetworkExternalAddressIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressIpv6Args) ToPcRegistrationV2NetworkExternalAddressIpv6Output() PcRegistrationV2NetworkExternalAddressIpv6Output {
	return i.ToPcRegistrationV2NetworkExternalAddressIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressIpv6Args) ToPcRegistrationV2NetworkExternalAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressIpv6Output)
}

// PcRegistrationV2NetworkExternalAddressIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalAddressIpv6Array and PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalAddressIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalAddressIpv6Array{ PcRegistrationV2NetworkExternalAddressIpv6Args{...} }
type PcRegistrationV2NetworkExternalAddressIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput
	ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput
}

type PcRegistrationV2NetworkExternalAddressIpv6Array []PcRegistrationV2NetworkExternalAddressIpv6Input

func (PcRegistrationV2NetworkExternalAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalAddressIpv6Array) ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalAddressIpv6Array) ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalAddressIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressIpv6Output) ToPcRegistrationV2NetworkExternalAddressIpv6Output() PcRegistrationV2NetworkExternalAddressIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv6Output) ToPcRegistrationV2NetworkExternalAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkExternalAddressIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalAddressIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutput() PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalAddressIpv6 {
		return vs[0].([]PcRegistrationV2NetworkExternalAddressIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalAddressIpv6Output)
}

type PcRegistrationV2NetworkExternalNetwork struct {
	DefaultGateways []PcRegistrationV2NetworkExternalNetworkDefaultGateway `pulumi:"defaultGateways"`
	IpRanges        []PcRegistrationV2NetworkExternalNetworkIpRange        `pulumi:"ipRanges"`
	NetworkExtId    *string                                                `pulumi:"networkExtId"`
	SubnetMasks     []PcRegistrationV2NetworkExternalNetworkSubnetMask     `pulumi:"subnetMasks"`
}

// PcRegistrationV2NetworkExternalNetworkInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkArgs and PcRegistrationV2NetworkExternalNetworkOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkArgs{...}
type PcRegistrationV2NetworkExternalNetworkInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkOutput() PcRegistrationV2NetworkExternalNetworkOutput
	ToPcRegistrationV2NetworkExternalNetworkOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkOutput
}

type PcRegistrationV2NetworkExternalNetworkArgs struct {
	DefaultGateways PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayInput `pulumi:"defaultGateways"`
	IpRanges        PcRegistrationV2NetworkExternalNetworkIpRangeArrayInput        `pulumi:"ipRanges"`
	NetworkExtId    pulumi.StringPtrInput                                          `pulumi:"networkExtId"`
	SubnetMasks     PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayInput     `pulumi:"subnetMasks"`
}

func (PcRegistrationV2NetworkExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetwork)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkArgs) ToPcRegistrationV2NetworkExternalNetworkOutput() PcRegistrationV2NetworkExternalNetworkOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkArgs) ToPcRegistrationV2NetworkExternalNetworkOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkOutput)
}

// PcRegistrationV2NetworkExternalNetworkArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkArray and PcRegistrationV2NetworkExternalNetworkArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkArray{ PcRegistrationV2NetworkExternalNetworkArgs{...} }
type PcRegistrationV2NetworkExternalNetworkArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkArrayOutput() PcRegistrationV2NetworkExternalNetworkArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkArray []PcRegistrationV2NetworkExternalNetworkInput

func (PcRegistrationV2NetworkExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetwork)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkArray) ToPcRegistrationV2NetworkExternalNetworkArrayOutput() PcRegistrationV2NetworkExternalNetworkArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkArray) ToPcRegistrationV2NetworkExternalNetworkArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetwork)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) ToPcRegistrationV2NetworkExternalNetworkOutput() PcRegistrationV2NetworkExternalNetworkOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) ToPcRegistrationV2NetworkExternalNetworkOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) DefaultGateways() PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetwork) []PcRegistrationV2NetworkExternalNetworkDefaultGateway {
		return v.DefaultGateways
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) IpRanges() PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetwork) []PcRegistrationV2NetworkExternalNetworkIpRange {
		return v.IpRanges
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) NetworkExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetwork) *string { return v.NetworkExtId }).(pulumi.StringPtrOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkOutput) SubnetMasks() PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetwork) []PcRegistrationV2NetworkExternalNetworkSubnetMask {
		return v.SubnetMasks
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetwork)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkArrayOutput) ToPcRegistrationV2NetworkExternalNetworkArrayOutput() PcRegistrationV2NetworkExternalNetworkArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkArrayOutput) ToPcRegistrationV2NetworkExternalNetworkArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetwork {
		return vs[0].([]PcRegistrationV2NetworkExternalNetwork)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGateway struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs and PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs{...}
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGateway)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput)
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray and PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray{ PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs{...} }
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray []PcRegistrationV2NetworkExternalNetworkDefaultGatewayInput

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGateway)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGateway)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) Fqdns() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGateway) []PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn {
		return v.Fqdns
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) Ipv4s() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGateway) []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput) Ipv6s() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGateway) []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGateway)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkDefaultGateway {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkDefaultGateway)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs and PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs{...}
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput)
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray and PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray{ PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs{...} }
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray []PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnInput

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdn)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args and PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args{...}
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output)
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array and PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array{ PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args{...} }
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Input

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args and PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args{...}
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output)
}

// PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array and PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array{ PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args{...} }
type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array []PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Input

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output)
}

type PcRegistrationV2NetworkExternalNetworkIpRange struct {
	Begins []PcRegistrationV2NetworkExternalNetworkIpRangeBegin `pulumi:"begins"`
	Ends   []PcRegistrationV2NetworkExternalNetworkIpRangeEnd   `pulumi:"ends"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeArgs and PcRegistrationV2NetworkExternalNetworkIpRangeOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeArgs{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeOutput() PcRegistrationV2NetworkExternalNetworkIpRangeOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeArgs struct {
	Begins PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayInput `pulumi:"begins"`
	Ends   PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayInput   `pulumi:"ends"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRange)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeOutput() PcRegistrationV2NetworkExternalNetworkIpRangeOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeOutput)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeArray and PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeArray{ PcRegistrationV2NetworkExternalNetworkIpRangeArgs{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeArray []PcRegistrationV2NetworkExternalNetworkIpRangeInput

func (PcRegistrationV2NetworkExternalNetworkIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRange)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRange)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeOutput() PcRegistrationV2NetworkExternalNetworkIpRangeOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeOutput) Begins() PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRange) []PcRegistrationV2NetworkExternalNetworkIpRangeBegin {
		return v.Begins
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeOutput) Ends() PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRange) []PcRegistrationV2NetworkExternalNetworkIpRangeEnd {
		return v.Ends
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRange)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRange {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRange)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBegin struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs and PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBegin)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray and PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray{ PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray []PcRegistrationV2NetworkExternalNetworkIpRangeBeginInput

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBegin)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBegin)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput {
	return o
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput) Ipv4s() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBegin) []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput) Ipv6s() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBegin) []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBegin)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeBegin {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeBegin)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args and PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array and PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array{ PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Input

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args and PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array and PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array{ PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array []PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Input

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEnd struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs and PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeEndInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs struct {
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEnd)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndArray and PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndArray{ PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndArray []PcRegistrationV2NetworkExternalNetworkIpRangeEndInput

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEnd)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndArray) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEnd)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput {
	return o
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput) Ipv4s() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEnd) []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput) Ipv6s() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEnd) []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEnd)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeEnd {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeEnd)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args and PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array and PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array{ PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Input

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args and PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args{...}
type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output)
}

// PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array and PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array{ PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args{...} }
type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array []PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Input

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMask struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs and PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs{...}
type PcRegistrationV2NetworkExternalNetworkSubnetMaskInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMask)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput)
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskArray and PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskArray{ PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs{...} }
type PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskArray []PcRegistrationV2NetworkExternalNetworkSubnetMaskInput

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMask)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskArray) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskArray) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMask)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) Fqdns() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMask) []PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn {
		return v.Fqdns
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) Ipv4s() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMask) []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput) Ipv6s() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMask) []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMask)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkSubnetMask {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkSubnetMask)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs and PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs{...}
type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput)
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray and PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray{ PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs{...} }
type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray []PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnInput

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdn)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args and PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args{...}
type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output)
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array and PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array{ PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args{...} }
type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Input

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Input is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args and PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Input` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args{...}
type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output)
}

// PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array and PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array{ PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args{...} }
type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput
	ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array []PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Input

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput() PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput) ToPcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6 {
		return vs[0].([]PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output)
}

type PcRegistrationV2NetworkNameServer struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2NetworkNameServerFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkNameServerIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkNameServerIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkNameServerInput is an input type that accepts PcRegistrationV2NetworkNameServerArgs and PcRegistrationV2NetworkNameServerOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerInput` via:
//
//	PcRegistrationV2NetworkNameServerArgs{...}
type PcRegistrationV2NetworkNameServerInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerOutput() PcRegistrationV2NetworkNameServerOutput
	ToPcRegistrationV2NetworkNameServerOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerOutput
}

type PcRegistrationV2NetworkNameServerArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2NetworkNameServerFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkNameServerIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkNameServerIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServer)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerArgs) ToPcRegistrationV2NetworkNameServerOutput() PcRegistrationV2NetworkNameServerOutput {
	return i.ToPcRegistrationV2NetworkNameServerOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerArgs) ToPcRegistrationV2NetworkNameServerOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerOutput)
}

// PcRegistrationV2NetworkNameServerArrayInput is an input type that accepts PcRegistrationV2NetworkNameServerArray and PcRegistrationV2NetworkNameServerArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerArrayInput` via:
//
//	PcRegistrationV2NetworkNameServerArray{ PcRegistrationV2NetworkNameServerArgs{...} }
type PcRegistrationV2NetworkNameServerArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerArrayOutput() PcRegistrationV2NetworkNameServerArrayOutput
	ToPcRegistrationV2NetworkNameServerArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerArrayOutput
}

type PcRegistrationV2NetworkNameServerArray []PcRegistrationV2NetworkNameServerInput

func (PcRegistrationV2NetworkNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServer)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerArray) ToPcRegistrationV2NetworkNameServerArrayOutput() PcRegistrationV2NetworkNameServerArrayOutput {
	return i.ToPcRegistrationV2NetworkNameServerArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerArray) ToPcRegistrationV2NetworkNameServerArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerArrayOutput)
}

type PcRegistrationV2NetworkNameServerOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServer)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerOutput) ToPcRegistrationV2NetworkNameServerOutput() PcRegistrationV2NetworkNameServerOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerOutput) ToPcRegistrationV2NetworkNameServerOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2NetworkNameServerOutput) Fqdns() PcRegistrationV2NetworkNameServerFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServer) []PcRegistrationV2NetworkNameServerFqdn { return v.Fqdns }).(PcRegistrationV2NetworkNameServerFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkNameServerOutput) Ipv4s() PcRegistrationV2NetworkNameServerIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServer) []PcRegistrationV2NetworkNameServerIpv4 { return v.Ipv4s }).(PcRegistrationV2NetworkNameServerIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkNameServerOutput) Ipv6s() PcRegistrationV2NetworkNameServerIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServer) []PcRegistrationV2NetworkNameServerIpv6 { return v.Ipv6s }).(PcRegistrationV2NetworkNameServerIpv6ArrayOutput)
}

type PcRegistrationV2NetworkNameServerArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServer)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerArrayOutput) ToPcRegistrationV2NetworkNameServerArrayOutput() PcRegistrationV2NetworkNameServerArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerArrayOutput) ToPcRegistrationV2NetworkNameServerArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNameServer {
		return vs[0].([]PcRegistrationV2NetworkNameServer)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNameServerOutput)
}

type PcRegistrationV2NetworkNameServerFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNameServerFqdnInput is an input type that accepts PcRegistrationV2NetworkNameServerFqdnArgs and PcRegistrationV2NetworkNameServerFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerFqdnInput` via:
//
//	PcRegistrationV2NetworkNameServerFqdnArgs{...}
type PcRegistrationV2NetworkNameServerFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerFqdnOutput() PcRegistrationV2NetworkNameServerFqdnOutput
	ToPcRegistrationV2NetworkNameServerFqdnOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerFqdnOutput
}

type PcRegistrationV2NetworkNameServerFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNameServerFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerFqdnArgs) ToPcRegistrationV2NetworkNameServerFqdnOutput() PcRegistrationV2NetworkNameServerFqdnOutput {
	return i.ToPcRegistrationV2NetworkNameServerFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerFqdnArgs) ToPcRegistrationV2NetworkNameServerFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerFqdnOutput)
}

// PcRegistrationV2NetworkNameServerFqdnArrayInput is an input type that accepts PcRegistrationV2NetworkNameServerFqdnArray and PcRegistrationV2NetworkNameServerFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerFqdnArrayInput` via:
//
//	PcRegistrationV2NetworkNameServerFqdnArray{ PcRegistrationV2NetworkNameServerFqdnArgs{...} }
type PcRegistrationV2NetworkNameServerFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerFqdnArrayOutput() PcRegistrationV2NetworkNameServerFqdnArrayOutput
	ToPcRegistrationV2NetworkNameServerFqdnArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerFqdnArrayOutput
}

type PcRegistrationV2NetworkNameServerFqdnArray []PcRegistrationV2NetworkNameServerFqdnInput

func (PcRegistrationV2NetworkNameServerFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerFqdnArray) ToPcRegistrationV2NetworkNameServerFqdnArrayOutput() PcRegistrationV2NetworkNameServerFqdnArrayOutput {
	return i.ToPcRegistrationV2NetworkNameServerFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerFqdnArray) ToPcRegistrationV2NetworkNameServerFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerFqdnArrayOutput)
}

type PcRegistrationV2NetworkNameServerFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerFqdnOutput) ToPcRegistrationV2NetworkNameServerFqdnOutput() PcRegistrationV2NetworkNameServerFqdnOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerFqdnOutput) ToPcRegistrationV2NetworkNameServerFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2NetworkNameServerFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServerFqdn) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNameServerFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerFqdnArrayOutput) ToPcRegistrationV2NetworkNameServerFqdnArrayOutput() PcRegistrationV2NetworkNameServerFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerFqdnArrayOutput) ToPcRegistrationV2NetworkNameServerFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNameServerFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNameServerFqdn {
		return vs[0].([]PcRegistrationV2NetworkNameServerFqdn)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNameServerFqdnOutput)
}

type PcRegistrationV2NetworkNameServerIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNameServerIpv4Input is an input type that accepts PcRegistrationV2NetworkNameServerIpv4Args and PcRegistrationV2NetworkNameServerIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerIpv4Input` via:
//
//	PcRegistrationV2NetworkNameServerIpv4Args{...}
type PcRegistrationV2NetworkNameServerIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerIpv4Output() PcRegistrationV2NetworkNameServerIpv4Output
	ToPcRegistrationV2NetworkNameServerIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkNameServerIpv4Output
}

type PcRegistrationV2NetworkNameServerIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNameServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerIpv4Args) ToPcRegistrationV2NetworkNameServerIpv4Output() PcRegistrationV2NetworkNameServerIpv4Output {
	return i.ToPcRegistrationV2NetworkNameServerIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerIpv4Args) ToPcRegistrationV2NetworkNameServerIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerIpv4Output)
}

// PcRegistrationV2NetworkNameServerIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkNameServerIpv4Array and PcRegistrationV2NetworkNameServerIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkNameServerIpv4Array{ PcRegistrationV2NetworkNameServerIpv4Args{...} }
type PcRegistrationV2NetworkNameServerIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerIpv4ArrayOutput() PcRegistrationV2NetworkNameServerIpv4ArrayOutput
	ToPcRegistrationV2NetworkNameServerIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerIpv4ArrayOutput
}

type PcRegistrationV2NetworkNameServerIpv4Array []PcRegistrationV2NetworkNameServerIpv4Input

func (PcRegistrationV2NetworkNameServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerIpv4Array) ToPcRegistrationV2NetworkNameServerIpv4ArrayOutput() PcRegistrationV2NetworkNameServerIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkNameServerIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerIpv4Array) ToPcRegistrationV2NetworkNameServerIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerIpv4ArrayOutput)
}

type PcRegistrationV2NetworkNameServerIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerIpv4Output) ToPcRegistrationV2NetworkNameServerIpv4Output() PcRegistrationV2NetworkNameServerIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv4Output) ToPcRegistrationV2NetworkNameServerIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkNameServerIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServerIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkNameServerIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServerIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNameServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerIpv4ArrayOutput) ToPcRegistrationV2NetworkNameServerIpv4ArrayOutput() PcRegistrationV2NetworkNameServerIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv4ArrayOutput) ToPcRegistrationV2NetworkNameServerIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNameServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNameServerIpv4 {
		return vs[0].([]PcRegistrationV2NetworkNameServerIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNameServerIpv4Output)
}

type PcRegistrationV2NetworkNameServerIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNameServerIpv6Input is an input type that accepts PcRegistrationV2NetworkNameServerIpv6Args and PcRegistrationV2NetworkNameServerIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerIpv6Input` via:
//
//	PcRegistrationV2NetworkNameServerIpv6Args{...}
type PcRegistrationV2NetworkNameServerIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerIpv6Output() PcRegistrationV2NetworkNameServerIpv6Output
	ToPcRegistrationV2NetworkNameServerIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkNameServerIpv6Output
}

type PcRegistrationV2NetworkNameServerIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNameServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerIpv6Args) ToPcRegistrationV2NetworkNameServerIpv6Output() PcRegistrationV2NetworkNameServerIpv6Output {
	return i.ToPcRegistrationV2NetworkNameServerIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerIpv6Args) ToPcRegistrationV2NetworkNameServerIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerIpv6Output)
}

// PcRegistrationV2NetworkNameServerIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkNameServerIpv6Array and PcRegistrationV2NetworkNameServerIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNameServerIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkNameServerIpv6Array{ PcRegistrationV2NetworkNameServerIpv6Args{...} }
type PcRegistrationV2NetworkNameServerIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNameServerIpv6ArrayOutput() PcRegistrationV2NetworkNameServerIpv6ArrayOutput
	ToPcRegistrationV2NetworkNameServerIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNameServerIpv6ArrayOutput
}

type PcRegistrationV2NetworkNameServerIpv6Array []PcRegistrationV2NetworkNameServerIpv6Input

func (PcRegistrationV2NetworkNameServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNameServerIpv6Array) ToPcRegistrationV2NetworkNameServerIpv6ArrayOutput() PcRegistrationV2NetworkNameServerIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkNameServerIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNameServerIpv6Array) ToPcRegistrationV2NetworkNameServerIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNameServerIpv6ArrayOutput)
}

type PcRegistrationV2NetworkNameServerIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerIpv6Output) ToPcRegistrationV2NetworkNameServerIpv6Output() PcRegistrationV2NetworkNameServerIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv6Output) ToPcRegistrationV2NetworkNameServerIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkNameServerIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServerIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkNameServerIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNameServerIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNameServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNameServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNameServerIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNameServerIpv6ArrayOutput) ToPcRegistrationV2NetworkNameServerIpv6ArrayOutput() PcRegistrationV2NetworkNameServerIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv6ArrayOutput) ToPcRegistrationV2NetworkNameServerIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNameServerIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNameServerIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNameServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNameServerIpv6 {
		return vs[0].([]PcRegistrationV2NetworkNameServerIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNameServerIpv6Output)
}

type PcRegistrationV2NetworkNtpServer struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2NetworkNtpServerFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2NetworkNtpServerIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2NetworkNtpServerIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2NetworkNtpServerInput is an input type that accepts PcRegistrationV2NetworkNtpServerArgs and PcRegistrationV2NetworkNtpServerOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerInput` via:
//
//	PcRegistrationV2NetworkNtpServerArgs{...}
type PcRegistrationV2NetworkNtpServerInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerOutput() PcRegistrationV2NetworkNtpServerOutput
	ToPcRegistrationV2NetworkNtpServerOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerOutput
}

type PcRegistrationV2NetworkNtpServerArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2NetworkNtpServerFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2NetworkNtpServerIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2NetworkNtpServerIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2NetworkNtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServer)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerArgs) ToPcRegistrationV2NetworkNtpServerOutput() PcRegistrationV2NetworkNtpServerOutput {
	return i.ToPcRegistrationV2NetworkNtpServerOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerArgs) ToPcRegistrationV2NetworkNtpServerOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerOutput)
}

// PcRegistrationV2NetworkNtpServerArrayInput is an input type that accepts PcRegistrationV2NetworkNtpServerArray and PcRegistrationV2NetworkNtpServerArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerArrayInput` via:
//
//	PcRegistrationV2NetworkNtpServerArray{ PcRegistrationV2NetworkNtpServerArgs{...} }
type PcRegistrationV2NetworkNtpServerArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerArrayOutput() PcRegistrationV2NetworkNtpServerArrayOutput
	ToPcRegistrationV2NetworkNtpServerArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerArrayOutput
}

type PcRegistrationV2NetworkNtpServerArray []PcRegistrationV2NetworkNtpServerInput

func (PcRegistrationV2NetworkNtpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServer)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerArray) ToPcRegistrationV2NetworkNtpServerArrayOutput() PcRegistrationV2NetworkNtpServerArrayOutput {
	return i.ToPcRegistrationV2NetworkNtpServerArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerArray) ToPcRegistrationV2NetworkNtpServerArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerArrayOutput)
}

type PcRegistrationV2NetworkNtpServerOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServer)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerOutput) ToPcRegistrationV2NetworkNtpServerOutput() PcRegistrationV2NetworkNtpServerOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerOutput) ToPcRegistrationV2NetworkNtpServerOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2NetworkNtpServerOutput) Fqdns() PcRegistrationV2NetworkNtpServerFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServer) []PcRegistrationV2NetworkNtpServerFqdn { return v.Fqdns }).(PcRegistrationV2NetworkNtpServerFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2NetworkNtpServerOutput) Ipv4s() PcRegistrationV2NetworkNtpServerIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServer) []PcRegistrationV2NetworkNtpServerIpv4 { return v.Ipv4s }).(PcRegistrationV2NetworkNtpServerIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2NetworkNtpServerOutput) Ipv6s() PcRegistrationV2NetworkNtpServerIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServer) []PcRegistrationV2NetworkNtpServerIpv6 { return v.Ipv6s }).(PcRegistrationV2NetworkNtpServerIpv6ArrayOutput)
}

type PcRegistrationV2NetworkNtpServerArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServer)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerArrayOutput) ToPcRegistrationV2NetworkNtpServerArrayOutput() PcRegistrationV2NetworkNtpServerArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerArrayOutput) ToPcRegistrationV2NetworkNtpServerArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNtpServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNtpServer {
		return vs[0].([]PcRegistrationV2NetworkNtpServer)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNtpServerOutput)
}

type PcRegistrationV2NetworkNtpServerFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNtpServerFqdnInput is an input type that accepts PcRegistrationV2NetworkNtpServerFqdnArgs and PcRegistrationV2NetworkNtpServerFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerFqdnInput` via:
//
//	PcRegistrationV2NetworkNtpServerFqdnArgs{...}
type PcRegistrationV2NetworkNtpServerFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerFqdnOutput() PcRegistrationV2NetworkNtpServerFqdnOutput
	ToPcRegistrationV2NetworkNtpServerFqdnOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerFqdnOutput
}

type PcRegistrationV2NetworkNtpServerFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNtpServerFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerFqdnArgs) ToPcRegistrationV2NetworkNtpServerFqdnOutput() PcRegistrationV2NetworkNtpServerFqdnOutput {
	return i.ToPcRegistrationV2NetworkNtpServerFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerFqdnArgs) ToPcRegistrationV2NetworkNtpServerFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerFqdnOutput)
}

// PcRegistrationV2NetworkNtpServerFqdnArrayInput is an input type that accepts PcRegistrationV2NetworkNtpServerFqdnArray and PcRegistrationV2NetworkNtpServerFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerFqdnArrayInput` via:
//
//	PcRegistrationV2NetworkNtpServerFqdnArray{ PcRegistrationV2NetworkNtpServerFqdnArgs{...} }
type PcRegistrationV2NetworkNtpServerFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerFqdnArrayOutput() PcRegistrationV2NetworkNtpServerFqdnArrayOutput
	ToPcRegistrationV2NetworkNtpServerFqdnArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerFqdnArrayOutput
}

type PcRegistrationV2NetworkNtpServerFqdnArray []PcRegistrationV2NetworkNtpServerFqdnInput

func (PcRegistrationV2NetworkNtpServerFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerFqdn)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerFqdnArray) ToPcRegistrationV2NetworkNtpServerFqdnArrayOutput() PcRegistrationV2NetworkNtpServerFqdnArrayOutput {
	return i.ToPcRegistrationV2NetworkNtpServerFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerFqdnArray) ToPcRegistrationV2NetworkNtpServerFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerFqdnArrayOutput)
}

type PcRegistrationV2NetworkNtpServerFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerFqdnOutput) ToPcRegistrationV2NetworkNtpServerFqdnOutput() PcRegistrationV2NetworkNtpServerFqdnOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerFqdnOutput) ToPcRegistrationV2NetworkNtpServerFqdnOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2NetworkNtpServerFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServerFqdn) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNtpServerFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerFqdn)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerFqdnArrayOutput) ToPcRegistrationV2NetworkNtpServerFqdnArrayOutput() PcRegistrationV2NetworkNtpServerFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerFqdnArrayOutput) ToPcRegistrationV2NetworkNtpServerFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNtpServerFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNtpServerFqdn {
		return vs[0].([]PcRegistrationV2NetworkNtpServerFqdn)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNtpServerFqdnOutput)
}

type PcRegistrationV2NetworkNtpServerIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNtpServerIpv4Input is an input type that accepts PcRegistrationV2NetworkNtpServerIpv4Args and PcRegistrationV2NetworkNtpServerIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerIpv4Input` via:
//
//	PcRegistrationV2NetworkNtpServerIpv4Args{...}
type PcRegistrationV2NetworkNtpServerIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerIpv4Output() PcRegistrationV2NetworkNtpServerIpv4Output
	ToPcRegistrationV2NetworkNtpServerIpv4OutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerIpv4Output
}

type PcRegistrationV2NetworkNtpServerIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNtpServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerIpv4Args) ToPcRegistrationV2NetworkNtpServerIpv4Output() PcRegistrationV2NetworkNtpServerIpv4Output {
	return i.ToPcRegistrationV2NetworkNtpServerIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerIpv4Args) ToPcRegistrationV2NetworkNtpServerIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerIpv4Output)
}

// PcRegistrationV2NetworkNtpServerIpv4ArrayInput is an input type that accepts PcRegistrationV2NetworkNtpServerIpv4Array and PcRegistrationV2NetworkNtpServerIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerIpv4ArrayInput` via:
//
//	PcRegistrationV2NetworkNtpServerIpv4Array{ PcRegistrationV2NetworkNtpServerIpv4Args{...} }
type PcRegistrationV2NetworkNtpServerIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutput() PcRegistrationV2NetworkNtpServerIpv4ArrayOutput
	ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerIpv4ArrayOutput
}

type PcRegistrationV2NetworkNtpServerIpv4Array []PcRegistrationV2NetworkNtpServerIpv4Input

func (PcRegistrationV2NetworkNtpServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerIpv4)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerIpv4Array) ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutput() PcRegistrationV2NetworkNtpServerIpv4ArrayOutput {
	return i.ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerIpv4Array) ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerIpv4ArrayOutput)
}

type PcRegistrationV2NetworkNtpServerIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerIpv4Output) ToPcRegistrationV2NetworkNtpServerIpv4Output() PcRegistrationV2NetworkNtpServerIpv4Output {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv4Output) ToPcRegistrationV2NetworkNtpServerIpv4OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkNtpServerIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServerIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2NetworkNtpServerIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServerIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNtpServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerIpv4)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerIpv4ArrayOutput) ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutput() PcRegistrationV2NetworkNtpServerIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv4ArrayOutput) ToPcRegistrationV2NetworkNtpServerIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNtpServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNtpServerIpv4 {
		return vs[0].([]PcRegistrationV2NetworkNtpServerIpv4)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNtpServerIpv4Output)
}

type PcRegistrationV2NetworkNtpServerIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// PcRegistrationV2NetworkNtpServerIpv6Input is an input type that accepts PcRegistrationV2NetworkNtpServerIpv6Args and PcRegistrationV2NetworkNtpServerIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerIpv6Input` via:
//
//	PcRegistrationV2NetworkNtpServerIpv6Args{...}
type PcRegistrationV2NetworkNtpServerIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerIpv6Output() PcRegistrationV2NetworkNtpServerIpv6Output
	ToPcRegistrationV2NetworkNtpServerIpv6OutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerIpv6Output
}

type PcRegistrationV2NetworkNtpServerIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2NetworkNtpServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerIpv6Args) ToPcRegistrationV2NetworkNtpServerIpv6Output() PcRegistrationV2NetworkNtpServerIpv6Output {
	return i.ToPcRegistrationV2NetworkNtpServerIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerIpv6Args) ToPcRegistrationV2NetworkNtpServerIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerIpv6Output)
}

// PcRegistrationV2NetworkNtpServerIpv6ArrayInput is an input type that accepts PcRegistrationV2NetworkNtpServerIpv6Array and PcRegistrationV2NetworkNtpServerIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2NetworkNtpServerIpv6ArrayInput` via:
//
//	PcRegistrationV2NetworkNtpServerIpv6Array{ PcRegistrationV2NetworkNtpServerIpv6Args{...} }
type PcRegistrationV2NetworkNtpServerIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutput() PcRegistrationV2NetworkNtpServerIpv6ArrayOutput
	ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2NetworkNtpServerIpv6ArrayOutput
}

type PcRegistrationV2NetworkNtpServerIpv6Array []PcRegistrationV2NetworkNtpServerIpv6Input

func (PcRegistrationV2NetworkNtpServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerIpv6)(nil)).Elem()
}

func (i PcRegistrationV2NetworkNtpServerIpv6Array) ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutput() PcRegistrationV2NetworkNtpServerIpv6ArrayOutput {
	return i.ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2NetworkNtpServerIpv6Array) ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2NetworkNtpServerIpv6ArrayOutput)
}

type PcRegistrationV2NetworkNtpServerIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerIpv6Output) ToPcRegistrationV2NetworkNtpServerIpv6Output() PcRegistrationV2NetworkNtpServerIpv6Output {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv6Output) ToPcRegistrationV2NetworkNtpServerIpv6OutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2NetworkNtpServerIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServerIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2NetworkNtpServerIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2NetworkNtpServerIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PcRegistrationV2NetworkNtpServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2NetworkNtpServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2NetworkNtpServerIpv6)(nil)).Elem()
}

func (o PcRegistrationV2NetworkNtpServerIpv6ArrayOutput) ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutput() PcRegistrationV2NetworkNtpServerIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv6ArrayOutput) ToPcRegistrationV2NetworkNtpServerIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2NetworkNtpServerIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2NetworkNtpServerIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2NetworkNtpServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2NetworkNtpServerIpv6 {
		return vs[0].([]PcRegistrationV2NetworkNtpServerIpv6)[vs[1].(int)]
	}).(PcRegistrationV2NetworkNtpServerIpv6Output)
}

type PcRegistrationV2RemoteCluster struct {
	// - The registration request consists of the remote cluster details.
	AosRemoteClusterSpec *PcRegistrationV2RemoteClusterAosRemoteClusterSpec `pulumi:"aosRemoteClusterSpec"`
	// - The registration request consists of the remote cluster details. using the cluster reference.
	ClusterReference *PcRegistrationV2RemoteClusterClusterReference `pulumi:"clusterReference"`
	// - The registration request consists of the remote cluster details. and cloud type.
	DomainManagerRemoteClusterSpec *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec `pulumi:"domainManagerRemoteClusterSpec"`
}

// PcRegistrationV2RemoteClusterInput is an input type that accepts PcRegistrationV2RemoteClusterArgs and PcRegistrationV2RemoteClusterOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterInput` via:
//
//	PcRegistrationV2RemoteClusterArgs{...}
type PcRegistrationV2RemoteClusterInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterOutput() PcRegistrationV2RemoteClusterOutput
	ToPcRegistrationV2RemoteClusterOutputWithContext(context.Context) PcRegistrationV2RemoteClusterOutput
}

type PcRegistrationV2RemoteClusterArgs struct {
	// - The registration request consists of the remote cluster details.
	AosRemoteClusterSpec PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput `pulumi:"aosRemoteClusterSpec"`
	// - The registration request consists of the remote cluster details. using the cluster reference.
	ClusterReference PcRegistrationV2RemoteClusterClusterReferencePtrInput `pulumi:"clusterReference"`
	// - The registration request consists of the remote cluster details. and cloud type.
	DomainManagerRemoteClusterSpec PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput `pulumi:"domainManagerRemoteClusterSpec"`
}

func (PcRegistrationV2RemoteClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteCluster)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterArgs) ToPcRegistrationV2RemoteClusterOutput() PcRegistrationV2RemoteClusterOutput {
	return i.ToPcRegistrationV2RemoteClusterOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterArgs) ToPcRegistrationV2RemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterOutput)
}

func (i PcRegistrationV2RemoteClusterArgs) ToPcRegistrationV2RemoteClusterPtrOutput() PcRegistrationV2RemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterArgs) ToPcRegistrationV2RemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterOutput).ToPcRegistrationV2RemoteClusterPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterPtrInput is an input type that accepts PcRegistrationV2RemoteClusterArgs, PcRegistrationV2RemoteClusterPtr and PcRegistrationV2RemoteClusterPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterPtrOutput() PcRegistrationV2RemoteClusterPtrOutput
	ToPcRegistrationV2RemoteClusterPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterPtrOutput
}

type pcRegistrationV2RemoteClusterPtrType PcRegistrationV2RemoteClusterArgs

func PcRegistrationV2RemoteClusterPtr(v *PcRegistrationV2RemoteClusterArgs) PcRegistrationV2RemoteClusterPtrInput {
	return (*pcRegistrationV2RemoteClusterPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteCluster)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterPtrType) ToPcRegistrationV2RemoteClusterPtrOutput() PcRegistrationV2RemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterPtrType) ToPcRegistrationV2RemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterOutput) ToPcRegistrationV2RemoteClusterOutput() PcRegistrationV2RemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterOutput) ToPcRegistrationV2RemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterOutput) ToPcRegistrationV2RemoteClusterPtrOutput() PcRegistrationV2RemoteClusterPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterOutput) ToPcRegistrationV2RemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteCluster {
		return &v
	}).(PcRegistrationV2RemoteClusterPtrOutput)
}

// - The registration request consists of the remote cluster details.
func (o PcRegistrationV2RemoteClusterOutput) AosRemoteClusterSpec() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterAosRemoteClusterSpec {
		return v.AosRemoteClusterSpec
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput)
}

// - The registration request consists of the remote cluster details. using the cluster reference.
func (o PcRegistrationV2RemoteClusterOutput) ClusterReference() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterClusterReference {
		return v.ClusterReference
	}).(PcRegistrationV2RemoteClusterClusterReferencePtrOutput)
}

// - The registration request consists of the remote cluster details. and cloud type.
func (o PcRegistrationV2RemoteClusterOutput) DomainManagerRemoteClusterSpec() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec {
		return v.DomainManagerRemoteClusterSpec
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput)
}

type PcRegistrationV2RemoteClusterPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterPtrOutput() PcRegistrationV2RemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterPtrOutput) Elem() PcRegistrationV2RemoteClusterOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteCluster) PcRegistrationV2RemoteCluster {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteCluster
		return ret
	}).(PcRegistrationV2RemoteClusterOutput)
}

// - The registration request consists of the remote cluster details.
func (o PcRegistrationV2RemoteClusterPtrOutput) AosRemoteClusterSpec() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterAosRemoteClusterSpec {
		if v == nil {
			return nil
		}
		return v.AosRemoteClusterSpec
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput)
}

// - The registration request consists of the remote cluster details. using the cluster reference.
func (o PcRegistrationV2RemoteClusterPtrOutput) ClusterReference() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterClusterReference {
		if v == nil {
			return nil
		}
		return v.ClusterReference
	}).(PcRegistrationV2RemoteClusterClusterReferencePtrOutput)
}

// - The registration request consists of the remote cluster details. and cloud type.
func (o PcRegistrationV2RemoteClusterPtrOutput) DomainManagerRemoteClusterSpec() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteCluster) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec {
		if v == nil {
			return nil
		}
		return v.DomainManagerRemoteClusterSpec
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpec struct {
	// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
	RemoteCluster PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster `pulumi:"remoteCluster"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs struct {
	// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
	RemoteCluster PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterInput `pulumi:"remoteCluster"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpec)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput)
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput).ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs, PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtr and PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput
}

type pcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrType PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs

func PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtr(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput {
	return (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpec)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpec)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterAosRemoteClusterSpec) *PcRegistrationV2RemoteClusterAosRemoteClusterSpec {
		return &v
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput)
}

// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput) RemoteCluster() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpec) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster {
		return v.RemoteCluster
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpec)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput) Elem() PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpec) PcRegistrationV2RemoteClusterAosRemoteClusterSpec {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterAosRemoteClusterSpec
		return ret
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput)
}

// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput) RemoteCluster() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpec) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster {
		if v == nil {
			return nil
		}
		return &v.RemoteCluster
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster struct {
	// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
	Addresses []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress `pulumi:"addresses"`
	// -(Required)  Credentials to connect to a remote cluster.
	Credentials PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials `pulumi:"credentials"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs struct {
	// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
	Addresses PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayInput `pulumi:"addresses"`
	// -(Required)  Credentials to connect to a remote cluster.
	Credentials PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsInput `pulumi:"credentials"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput)
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput).ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs, PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtr and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput
}

type pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrType PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs

func PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtr(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrInput {
	return (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster {
		return &v
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput)
}

// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) Addresses() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress {
		return v.Addresses
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

// -(Required)  Credentials to connect to a remote cluster.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput) Credentials() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials {
		return v.Credentials
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) Elem() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster
		return ret
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput)
}

// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) Addresses() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

// -(Required)  Credentials to connect to a remote cluster.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput) Credentials() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteCluster) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray{ PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs{...} }
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressInput

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) Fqdns() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn {
		return v.Fqdns
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) Ipv4s() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput) Ipv6s() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress {
		return vs[0].([]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddress)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray{ PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs{...} }
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnInput

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn {
		return vs[0].([]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdn)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Input is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Input` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array{ PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args{...} }
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Input

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4) *int {
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4 {
		return vs[0].([]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int   `pulumi:"prefixLength"`
	Value        string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Input is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Input` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	Value        pulumi.StringInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array{ PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args{...} }
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array []PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Input

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6) *int {
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6 {
		return vs[0].([]PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials struct {
	// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
	Authentication PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication `pulumi:"authentication"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs struct {
	// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
	Authentication PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput `pulumi:"authentication"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput)
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput).ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs, PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtr and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput
}

type pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrType PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs

func PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtr(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrInput {
	return (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials {
		return &v
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput) Authentication() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		return v.Authentication
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput) Elem() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials
		return ret
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput)
}

// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput) Authentication() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentials) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication struct {
	// -(Required)  Password required for the basic auth scheme.
	//
	// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
	Password string `pulumi:"password"`
	// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
	Username string `pulumi:"username"`
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput` via:
//
//	PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{...}
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs struct {
	// -(Required)  Password required for the basic auth scheme.
	//
	// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
	Password pulumi.StringInput `pulumi:"password"`
	// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
	Username pulumi.StringInput `pulumi:"username"`
}

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput).ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput is an input type that accepts PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs, PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtr and PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput
	ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput
}

type pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs

func PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtr(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput {
	return (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		return &v
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

// -(Required)  Password required for the basic auth scheme.
//
// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ToPcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Elem() PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication
		return ret
	}).(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

// -(Required)  Password required for the basic auth scheme.
//
// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
func (o PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type PcRegistrationV2RemoteClusterClusterReference struct {
	// -(Required)  Cluster UUID of a remote cluster.
	ExtId string `pulumi:"extId"`
}

// PcRegistrationV2RemoteClusterClusterReferenceInput is an input type that accepts PcRegistrationV2RemoteClusterClusterReferenceArgs and PcRegistrationV2RemoteClusterClusterReferenceOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterClusterReferenceInput` via:
//
//	PcRegistrationV2RemoteClusterClusterReferenceArgs{...}
type PcRegistrationV2RemoteClusterClusterReferenceInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterClusterReferenceOutput() PcRegistrationV2RemoteClusterClusterReferenceOutput
	ToPcRegistrationV2RemoteClusterClusterReferenceOutputWithContext(context.Context) PcRegistrationV2RemoteClusterClusterReferenceOutput
}

type PcRegistrationV2RemoteClusterClusterReferenceArgs struct {
	// -(Required)  Cluster UUID of a remote cluster.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (PcRegistrationV2RemoteClusterClusterReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterClusterReference)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterClusterReferenceArgs) ToPcRegistrationV2RemoteClusterClusterReferenceOutput() PcRegistrationV2RemoteClusterClusterReferenceOutput {
	return i.ToPcRegistrationV2RemoteClusterClusterReferenceOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterClusterReferenceArgs) ToPcRegistrationV2RemoteClusterClusterReferenceOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterClusterReferenceOutput)
}

func (i PcRegistrationV2RemoteClusterClusterReferenceArgs) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutput() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return i.ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterClusterReferenceArgs) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterClusterReferenceOutput).ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterClusterReferencePtrInput is an input type that accepts PcRegistrationV2RemoteClusterClusterReferenceArgs, PcRegistrationV2RemoteClusterClusterReferencePtr and PcRegistrationV2RemoteClusterClusterReferencePtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterClusterReferencePtrInput` via:
//
//	        PcRegistrationV2RemoteClusterClusterReferenceArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterClusterReferencePtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterClusterReferencePtrOutput() PcRegistrationV2RemoteClusterClusterReferencePtrOutput
	ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterClusterReferencePtrOutput
}

type pcRegistrationV2RemoteClusterClusterReferencePtrType PcRegistrationV2RemoteClusterClusterReferenceArgs

func PcRegistrationV2RemoteClusterClusterReferencePtr(v *PcRegistrationV2RemoteClusterClusterReferenceArgs) PcRegistrationV2RemoteClusterClusterReferencePtrInput {
	return (*pcRegistrationV2RemoteClusterClusterReferencePtrType)(v)
}

func (*pcRegistrationV2RemoteClusterClusterReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterClusterReference)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterClusterReferencePtrType) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutput() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return i.ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterClusterReferencePtrType) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterClusterReferencePtrOutput)
}

type PcRegistrationV2RemoteClusterClusterReferenceOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterClusterReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterClusterReference)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterClusterReferenceOutput) ToPcRegistrationV2RemoteClusterClusterReferenceOutput() PcRegistrationV2RemoteClusterClusterReferenceOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterClusterReferenceOutput) ToPcRegistrationV2RemoteClusterClusterReferenceOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferenceOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterClusterReferenceOutput) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutput() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o.ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterClusterReferenceOutput) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterClusterReference) *PcRegistrationV2RemoteClusterClusterReference {
		return &v
	}).(PcRegistrationV2RemoteClusterClusterReferencePtrOutput)
}

// -(Required)  Cluster UUID of a remote cluster.
func (o PcRegistrationV2RemoteClusterClusterReferenceOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterClusterReference) string { return v.ExtId }).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterClusterReferencePtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterClusterReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterClusterReference)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterClusterReferencePtrOutput) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutput() PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterClusterReferencePtrOutput) ToPcRegistrationV2RemoteClusterClusterReferencePtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterClusterReferencePtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterClusterReferencePtrOutput) Elem() PcRegistrationV2RemoteClusterClusterReferenceOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterClusterReference) PcRegistrationV2RemoteClusterClusterReference {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterClusterReference
		return ret
	}).(PcRegistrationV2RemoteClusterClusterReferenceOutput)
}

// -(Required)  Cluster UUID of a remote cluster.
func (o PcRegistrationV2RemoteClusterClusterReferencePtrOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterClusterReference) *string {
		if v == nil {
			return nil
		}
		return &v.ExtId
	}).(pulumi.StringPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec struct {
	// -(Required)  Enum denoting whether the domain manager (Prism Central) instance is reachable with its physical address or reachable through the My Nutanix portal. Based on the above description, the allowed enum values are:
	// * `NUTANIX_HOSTED_CLOUD` : Domain manager (Prism Central) reachable through My Nutanix portal.
	// * `ONPREM_CLOUD`: Domain manager (Prism Central) reachable on it's physical address.
	CloudType string `pulumi:"cloudType"`
	// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
	RemoteCluster *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster `pulumi:"remoteCluster"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs struct {
	// -(Required)  Enum denoting whether the domain manager (Prism Central) instance is reachable with its physical address or reachable through the My Nutanix portal. Based on the above description, the allowed enum values are:
	// * `NUTANIX_HOSTED_CLOUD` : Domain manager (Prism Central) reachable through My Nutanix portal.
	// * `ONPREM_CLOUD`: Domain manager (Prism Central) reachable on it's physical address.
	CloudType pulumi.StringInput `pulumi:"cloudType"`
	// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
	RemoteCluster PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput `pulumi:"remoteCluster"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput)
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput).ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs, PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtr and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput
}

type pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrType PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs

func PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtr(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput {
	return (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec {
		return &v
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput)
}

// -(Required)  Enum denoting whether the domain manager (Prism Central) instance is reachable with its physical address or reachable through the My Nutanix portal. Based on the above description, the allowed enum values are:
// * `NUTANIX_HOSTED_CLOUD` : Domain manager (Prism Central) reachable through My Nutanix portal.
// * `ONPREM_CLOUD`: Domain manager (Prism Central) reachable on it's physical address.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) CloudType() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) string { return v.CloudType }).(pulumi.StringOutput)
}

// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput) RemoteCluster() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster {
		return v.RemoteCluster
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) Elem() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec
		return ret
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput)
}

// -(Required)  Enum denoting whether the domain manager (Prism Central) instance is reachable with its physical address or reachable through the My Nutanix portal. Based on the above description, the allowed enum values are:
// * `NUTANIX_HOSTED_CLOUD` : Domain manager (Prism Central) reachable through My Nutanix portal.
// * `ONPREM_CLOUD`: Domain manager (Prism Central) reachable on it's physical address.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) CloudType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) *string {
		if v == nil {
			return nil
		}
		return &v.CloudType
	}).(pulumi.StringPtrOutput)
}

// -(Required)  Address configuration of a remote cluster. It requires the address of the remote, that is an IP or domain name along with the basic authentication credentials.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput) RemoteCluster() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpec) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster {
		if v == nil {
			return nil
		}
		return v.RemoteCluster
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster struct {
	// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
	Addresses []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress `pulumi:"addresses"`
	// -(Required)  Credentials to connect to a remote cluster.
	Credentials PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials `pulumi:"credentials"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs struct {
	// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
	Addresses PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayInput `pulumi:"addresses"`
	// -(Required)  Credentials to connect to a remote cluster.
	Credentials PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsInput `pulumi:"credentials"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput)
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput).ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs, PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtr and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput
}

type pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrType PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs

func PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtr(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput {
	return (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster {
		return &v
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput)
}

// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) Addresses() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress {
		return v.Addresses
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

// -(Required)  Credentials to connect to a remote cluster.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput) Credentials() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials {
		return v.Credentials
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) Elem() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster
		return ret
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput)
}

// -(Required)  An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) Addresses() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

// -(Required)  Credentials to connect to a remote cluster.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput) Credentials() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteCluster) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4 `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6 `pulumi:"ipv6s"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs struct {
	// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
	Fqdns PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayInput `pulumi:"fqdns"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 format.
	Ipv4s PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput `pulumi:"ipv4s"`
	// - An unique address that identifies a device on the internet or a local network in IPv6 format.
	Ipv6s PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray{ PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs{...} }
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressInput

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput {
	return o
}

// - A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) Fqdns() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn {
		return v.Fqdns
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 format.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) Ipv4s() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4 {
		return v.Ipv4s
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv6 format.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput) Ipv6s() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress) []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6 {
		return v.Ipv6s
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress {
		return vs[0].([]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddress)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn struct {
	// - The fully qualified domain name of the host.
	Value *string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs struct {
	// - The fully qualified domain name of the host.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray{ PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs{...} }
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnInput

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return o
}

// - The fully qualified domain name of the host.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn {
		return vs[0].([]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdn)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Input is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Input` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Input interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array{ PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args{...} }
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Input

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4) *int {
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4 {
		return vs[0].([]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6 struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int   `pulumi:"prefixLength"`
	Value        string `pulumi:"value"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Input is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Input` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Input interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args struct {
	// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	Value        pulumi.StringInput `pulumi:"value"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array{ PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args{...} }
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array []PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Input

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6OutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return o
}

// - The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6) *int {
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput) Index(i pulumi.IntInput) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6 {
		return vs[0].([]PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6)[vs[1].(int)]
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials struct {
	// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
	Authentication PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication `pulumi:"authentication"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs struct {
	// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
	Authentication PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput `pulumi:"authentication"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput)
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput).ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs, PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtr and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput
}

type pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrType PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs

func PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtr(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrInput {
	return (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials {
		return &v
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput)
}

// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput) Authentication() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		return v.Authentication
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput) Elem() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials
		return ret
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput)
}

// -(Required)  An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput) Authentication() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentials) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		if v == nil {
			return nil
		}
		return &v.Authentication
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication struct {
	// -(Required)  Password required for the basic auth scheme.
	//
	// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
	Password string `pulumi:"password"`
	// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
	Username string `pulumi:"username"`
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput` via:
//
//	PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{...}
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs struct {
	// -(Required)  Password required for the basic auth scheme.
	//
	// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
	Password pulumi.StringInput `pulumi:"password"`
	// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
	Username pulumi.StringInput `pulumi:"username"`
}

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (i PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput).ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx)
}

// PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput is an input type that accepts PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs, PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtr and PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput values.
// You can construct a concrete instance of `PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput` via:
//
//	        PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{...}
//
//	or:
//
//	        nil
type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput interface {
	pulumi.Input

	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput
	ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput
}

type pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs

func PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtr(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput {
	return (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType)(v)
}

func (*pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return i.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (i *pcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrType) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(context.Background())
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		return &v
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput)
}

// -(Required)  Password required for the basic auth scheme.
//
// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication)(nil)).Elem()
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) ToPcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutputWithContext(ctx context.Context) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput {
	return o
}

func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Elem() PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication {
		if v != nil {
			return *v
		}
		var ret PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication
		return ret
	}).(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput)
}

// -(Required)  Password required for the basic auth scheme.
//
// See detailed information in [Nutanix Register a PC Docs](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/register).
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// -(Required)  Username required for the basic auth scheme. As per RFC 2617 usernames might be case sensitive.
func (o PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ProjectAccountReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAccountReferenceListInput is an input type that accepts ProjectAccountReferenceListArgs and ProjectAccountReferenceListOutput values.
// You can construct a concrete instance of `ProjectAccountReferenceListInput` via:
//
//	ProjectAccountReferenceListArgs{...}
type ProjectAccountReferenceListInput interface {
	pulumi.Input

	ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput
	ToProjectAccountReferenceListOutputWithContext(context.Context) ProjectAccountReferenceListOutput
}

type ProjectAccountReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAccountReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAccountReferenceList)(nil)).Elem()
}

func (i ProjectAccountReferenceListArgs) ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput {
	return i.ToProjectAccountReferenceListOutputWithContext(context.Background())
}

func (i ProjectAccountReferenceListArgs) ToProjectAccountReferenceListOutputWithContext(ctx context.Context) ProjectAccountReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAccountReferenceListOutput)
}

// ProjectAccountReferenceListArrayInput is an input type that accepts ProjectAccountReferenceListArray and ProjectAccountReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAccountReferenceListArrayInput` via:
//
//	ProjectAccountReferenceListArray{ ProjectAccountReferenceListArgs{...} }
type ProjectAccountReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput
	ToProjectAccountReferenceListArrayOutputWithContext(context.Context) ProjectAccountReferenceListArrayOutput
}

type ProjectAccountReferenceListArray []ProjectAccountReferenceListInput

func (ProjectAccountReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAccountReferenceList)(nil)).Elem()
}

func (i ProjectAccountReferenceListArray) ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput {
	return i.ToProjectAccountReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAccountReferenceListArray) ToProjectAccountReferenceListArrayOutputWithContext(ctx context.Context) ProjectAccountReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAccountReferenceListArrayOutput)
}

type ProjectAccountReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAccountReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAccountReferenceList)(nil)).Elem()
}

func (o ProjectAccountReferenceListOutput) ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput {
	return o
}

func (o ProjectAccountReferenceListOutput) ToProjectAccountReferenceListOutputWithContext(ctx context.Context) ProjectAccountReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAccountReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAccountReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAccountReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAccountReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAccountReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAccountReferenceList)(nil)).Elem()
}

func (o ProjectAccountReferenceListArrayOutput) ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput {
	return o
}

func (o ProjectAccountReferenceListArrayOutput) ToProjectAccountReferenceListArrayOutputWithContext(ctx context.Context) ProjectAccountReferenceListArrayOutput {
	return o
}

func (o ProjectAccountReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAccountReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAccountReferenceList {
		return vs[0].([]ProjectAccountReferenceList)[vs[1].(int)]
	}).(ProjectAccountReferenceListOutput)
}

type ProjectAcp struct {
	// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
	ContextFilterLists []ProjectAcpContextFilterList `pulumi:"contextFilterLists"`
	// A description for project.
	Description *string           `pulumi:"description"`
	Metadata    map[string]string `pulumi:"metadata"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// Reference to role.
	RoleReference ProjectAcpRoleReference `pulumi:"roleReference"`
	// List of Reference of users groups.
	UserGroupReferenceLists []ProjectAcpUserGroupReferenceList `pulumi:"userGroupReferenceLists"`
	// List of Reference of users.
	UserReferenceLists []ProjectAcpUserReferenceList `pulumi:"userReferenceLists"`
}

// ProjectAcpInput is an input type that accepts ProjectAcpArgs and ProjectAcpOutput values.
// You can construct a concrete instance of `ProjectAcpInput` via:
//
//	ProjectAcpArgs{...}
type ProjectAcpInput interface {
	pulumi.Input

	ToProjectAcpOutput() ProjectAcpOutput
	ToProjectAcpOutputWithContext(context.Context) ProjectAcpOutput
}

type ProjectAcpArgs struct {
	// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
	ContextFilterLists ProjectAcpContextFilterListArrayInput `pulumi:"contextFilterLists"`
	// A description for project.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Metadata    pulumi.StringMapInput `pulumi:"metadata"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to role.
	RoleReference ProjectAcpRoleReferenceInput `pulumi:"roleReference"`
	// List of Reference of users groups.
	UserGroupReferenceLists ProjectAcpUserGroupReferenceListArrayInput `pulumi:"userGroupReferenceLists"`
	// List of Reference of users.
	UserReferenceLists ProjectAcpUserReferenceListArrayInput `pulumi:"userReferenceLists"`
}

func (ProjectAcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcp)(nil)).Elem()
}

func (i ProjectAcpArgs) ToProjectAcpOutput() ProjectAcpOutput {
	return i.ToProjectAcpOutputWithContext(context.Background())
}

func (i ProjectAcpArgs) ToProjectAcpOutputWithContext(ctx context.Context) ProjectAcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpOutput)
}

// ProjectAcpArrayInput is an input type that accepts ProjectAcpArray and ProjectAcpArrayOutput values.
// You can construct a concrete instance of `ProjectAcpArrayInput` via:
//
//	ProjectAcpArray{ ProjectAcpArgs{...} }
type ProjectAcpArrayInput interface {
	pulumi.Input

	ToProjectAcpArrayOutput() ProjectAcpArrayOutput
	ToProjectAcpArrayOutputWithContext(context.Context) ProjectAcpArrayOutput
}

type ProjectAcpArray []ProjectAcpInput

func (ProjectAcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcp)(nil)).Elem()
}

func (i ProjectAcpArray) ToProjectAcpArrayOutput() ProjectAcpArrayOutput {
	return i.ToProjectAcpArrayOutputWithContext(context.Background())
}

func (i ProjectAcpArray) ToProjectAcpArrayOutputWithContext(ctx context.Context) ProjectAcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpArrayOutput)
}

type ProjectAcpOutput struct{ *pulumi.OutputState }

func (ProjectAcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcp)(nil)).Elem()
}

func (o ProjectAcpOutput) ToProjectAcpOutput() ProjectAcpOutput {
	return o
}

func (o ProjectAcpOutput) ToProjectAcpOutputWithContext(ctx context.Context) ProjectAcpOutput {
	return o
}

// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
func (o ProjectAcpOutput) ContextFilterLists() ProjectAcpContextFilterListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpContextFilterList { return v.ContextFilterLists }).(ProjectAcpContextFilterListArrayOutput)
}

// A description for project.
func (o ProjectAcpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProjectAcpOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectAcp) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name for the project.
func (o ProjectAcpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to role.
func (o ProjectAcpOutput) RoleReference() ProjectAcpRoleReferenceOutput {
	return o.ApplyT(func(v ProjectAcp) ProjectAcpRoleReference { return v.RoleReference }).(ProjectAcpRoleReferenceOutput)
}

// List of Reference of users groups.
func (o ProjectAcpOutput) UserGroupReferenceLists() ProjectAcpUserGroupReferenceListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpUserGroupReferenceList { return v.UserGroupReferenceLists }).(ProjectAcpUserGroupReferenceListArrayOutput)
}

// List of Reference of users.
func (o ProjectAcpOutput) UserReferenceLists() ProjectAcpUserReferenceListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpUserReferenceList { return v.UserReferenceLists }).(ProjectAcpUserReferenceListArrayOutput)
}

type ProjectAcpArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcp)(nil)).Elem()
}

func (o ProjectAcpArrayOutput) ToProjectAcpArrayOutput() ProjectAcpArrayOutput {
	return o
}

func (o ProjectAcpArrayOutput) ToProjectAcpArrayOutputWithContext(ctx context.Context) ProjectAcpArrayOutput {
	return o
}

func (o ProjectAcpArrayOutput) Index(i pulumi.IntInput) ProjectAcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcp {
		return vs[0].([]ProjectAcp)[vs[1].(int)]
	}).(ProjectAcpOutput)
}

type ProjectAcpContextFilterList struct {
	// (Required) A list of Entity filter expressions.
	EntityFilterExpressionLists []ProjectAcpContextFilterListEntityFilterExpressionList `pulumi:"entityFilterExpressionLists"`
	// - (Optional) Filter the scope of an Access Control Policy.
	ScopeFilterExpressionLists []ProjectAcpContextFilterListScopeFilterExpressionList `pulumi:"scopeFilterExpressionLists"`
}

// ProjectAcpContextFilterListInput is an input type that accepts ProjectAcpContextFilterListArgs and ProjectAcpContextFilterListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListInput` via:
//
//	ProjectAcpContextFilterListArgs{...}
type ProjectAcpContextFilterListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput
	ToProjectAcpContextFilterListOutputWithContext(context.Context) ProjectAcpContextFilterListOutput
}

type ProjectAcpContextFilterListArgs struct {
	// (Required) A list of Entity filter expressions.
	EntityFilterExpressionLists ProjectAcpContextFilterListEntityFilterExpressionListArrayInput `pulumi:"entityFilterExpressionLists"`
	// - (Optional) Filter the scope of an Access Control Policy.
	ScopeFilterExpressionLists ProjectAcpContextFilterListScopeFilterExpressionListArrayInput `pulumi:"scopeFilterExpressionLists"`
}

func (ProjectAcpContextFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListArgs) ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput {
	return i.ToProjectAcpContextFilterListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListArgs) ToProjectAcpContextFilterListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListOutput)
}

// ProjectAcpContextFilterListArrayInput is an input type that accepts ProjectAcpContextFilterListArray and ProjectAcpContextFilterListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListArrayInput` via:
//
//	ProjectAcpContextFilterListArray{ ProjectAcpContextFilterListArgs{...} }
type ProjectAcpContextFilterListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput
	ToProjectAcpContextFilterListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListArrayOutput
}

type ProjectAcpContextFilterListArray []ProjectAcpContextFilterListInput

func (ProjectAcpContextFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListArray) ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput {
	return i.ToProjectAcpContextFilterListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListArray) ToProjectAcpContextFilterListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListArrayOutput)
}

type ProjectAcpContextFilterListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListOutput) ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput {
	return o
}

func (o ProjectAcpContextFilterListOutput) ToProjectAcpContextFilterListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListOutput {
	return o
}

// (Required) A list of Entity filter expressions.
func (o ProjectAcpContextFilterListOutput) EntityFilterExpressionLists() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterList) []ProjectAcpContextFilterListEntityFilterExpressionList {
		return v.EntityFilterExpressionLists
	}).(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput)
}

// - (Optional) Filter the scope of an Access Control Policy.
func (o ProjectAcpContextFilterListOutput) ScopeFilterExpressionLists() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterList) []ProjectAcpContextFilterListScopeFilterExpressionList {
		return v.ScopeFilterExpressionLists
	}).(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListArrayOutput) ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListArrayOutput) ToProjectAcpContextFilterListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterList {
		return vs[0].([]ProjectAcpContextFilterList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType *string `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListArgs and ProjectAcpContextFilterListEntityFilterExpressionListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType pulumi.StringPtrInput `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArgs) ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArgs) ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListOutput)
}

// ProjectAcpContextFilterListEntityFilterExpressionListArrayInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListArray and ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListArrayInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListArray{ ProjectAcpContextFilterListEntityFilterExpressionListArgs{...} }
type ProjectAcpContextFilterListEntityFilterExpressionListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListArray []ProjectAcpContextFilterListEntityFilterExpressionListInput

func (ProjectAcpContextFilterListEntityFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArray) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArray) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the entity type.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) LeftHandSideEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) *string { return v.LeftHandSideEntityType }).(pulumi.StringPtrOutput)
}

// - (Required) The operator in the filter expression.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) RightHandSide() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterListEntityFilterExpressionList {
		return vs[0].([]ProjectAcpContextFilterListEntityFilterExpressionList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListEntityFilterExpressionListOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) Categories() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) *string {
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) []string {
		return v.UuidLists
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Values []string `pulumi:"values"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput).ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs, ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
}

type projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs

func ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return &v
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories
		return ret
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide string `pulumi:"leftHandSide"`
	// - (Required) The operator in the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListArgs and ProjectAcpContextFilterListScopeFilterExpressionListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide pulumi.StringInput `pulumi:"leftHandSide"`
	// - (Required) The operator in the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArgs) ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArgs) ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListOutput)
}

// ProjectAcpContextFilterListScopeFilterExpressionListArrayInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListArray and ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListArrayInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListArray{ ProjectAcpContextFilterListScopeFilterExpressionListArgs{...} }
type ProjectAcpContextFilterListScopeFilterExpressionListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListArray []ProjectAcpContextFilterListScopeFilterExpressionListInput

func (ProjectAcpContextFilterListScopeFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArray) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArray) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the scope type.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) LeftHandSide() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) string { return v.LeftHandSide }).(pulumi.StringOutput)
}

// - (Required) The operator in the filter expression.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) RightHandSide() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterListScopeFilterExpressionList {
		return vs[0].([]ProjectAcpContextFilterListScopeFilterExpressionList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListScopeFilterExpressionListOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) Categories() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) *string { return v.Collection }).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) []string { return v.UuidLists }).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Values []string `pulumi:"values"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput).ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs, ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
}

type projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs

func ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return &v
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories
		return ret
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpRoleReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpRoleReferenceInput is an input type that accepts ProjectAcpRoleReferenceArgs and ProjectAcpRoleReferenceOutput values.
// You can construct a concrete instance of `ProjectAcpRoleReferenceInput` via:
//
//	ProjectAcpRoleReferenceArgs{...}
type ProjectAcpRoleReferenceInput interface {
	pulumi.Input

	ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput
	ToProjectAcpRoleReferenceOutputWithContext(context.Context) ProjectAcpRoleReferenceOutput
}

type ProjectAcpRoleReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpRoleReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpRoleReference)(nil)).Elem()
}

func (i ProjectAcpRoleReferenceArgs) ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput {
	return i.ToProjectAcpRoleReferenceOutputWithContext(context.Background())
}

func (i ProjectAcpRoleReferenceArgs) ToProjectAcpRoleReferenceOutputWithContext(ctx context.Context) ProjectAcpRoleReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpRoleReferenceOutput)
}

type ProjectAcpRoleReferenceOutput struct{ *pulumi.OutputState }

func (ProjectAcpRoleReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpRoleReference)(nil)).Elem()
}

func (o ProjectAcpRoleReferenceOutput) ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput {
	return o
}

func (o ProjectAcpRoleReferenceOutput) ToProjectAcpRoleReferenceOutputWithContext(ctx context.Context) ProjectAcpRoleReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpRoleReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) string { return v.Kind }).(pulumi.StringOutput)
}

// The name for the project.
func (o ProjectAcpRoleReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpRoleReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserGroupReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpUserGroupReferenceListInput is an input type that accepts ProjectAcpUserGroupReferenceListArgs and ProjectAcpUserGroupReferenceListOutput values.
// You can construct a concrete instance of `ProjectAcpUserGroupReferenceListInput` via:
//
//	ProjectAcpUserGroupReferenceListArgs{...}
type ProjectAcpUserGroupReferenceListInput interface {
	pulumi.Input

	ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput
	ToProjectAcpUserGroupReferenceListOutputWithContext(context.Context) ProjectAcpUserGroupReferenceListOutput
}

type ProjectAcpUserGroupReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpUserGroupReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserGroupReferenceListArgs) ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput {
	return i.ToProjectAcpUserGroupReferenceListOutputWithContext(context.Background())
}

func (i ProjectAcpUserGroupReferenceListArgs) ToProjectAcpUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserGroupReferenceListOutput)
}

// ProjectAcpUserGroupReferenceListArrayInput is an input type that accepts ProjectAcpUserGroupReferenceListArray and ProjectAcpUserGroupReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpUserGroupReferenceListArrayInput` via:
//
//	ProjectAcpUserGroupReferenceListArray{ ProjectAcpUserGroupReferenceListArgs{...} }
type ProjectAcpUserGroupReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput
	ToProjectAcpUserGroupReferenceListArrayOutputWithContext(context.Context) ProjectAcpUserGroupReferenceListArrayOutput
}

type ProjectAcpUserGroupReferenceListArray []ProjectAcpUserGroupReferenceListInput

func (ProjectAcpUserGroupReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserGroupReferenceListArray) ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput {
	return i.ToProjectAcpUserGroupReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpUserGroupReferenceListArray) ToProjectAcpUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserGroupReferenceListArrayOutput)
}

type ProjectAcpUserGroupReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserGroupReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserGroupReferenceListOutput) ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListOutput) ToProjectAcpUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpUserGroupReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAcpUserGroupReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpUserGroupReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserGroupReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserGroupReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) ToProjectAcpUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAcpUserGroupReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpUserGroupReferenceList {
		return vs[0].([]ProjectAcpUserGroupReferenceList)[vs[1].(int)]
	}).(ProjectAcpUserGroupReferenceListOutput)
}

type ProjectAcpUserReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpUserReferenceListInput is an input type that accepts ProjectAcpUserReferenceListArgs and ProjectAcpUserReferenceListOutput values.
// You can construct a concrete instance of `ProjectAcpUserReferenceListInput` via:
//
//	ProjectAcpUserReferenceListArgs{...}
type ProjectAcpUserReferenceListInput interface {
	pulumi.Input

	ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput
	ToProjectAcpUserReferenceListOutputWithContext(context.Context) ProjectAcpUserReferenceListOutput
}

type ProjectAcpUserReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpUserReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserReferenceListArgs) ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput {
	return i.ToProjectAcpUserReferenceListOutputWithContext(context.Background())
}

func (i ProjectAcpUserReferenceListArgs) ToProjectAcpUserReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserReferenceListOutput)
}

// ProjectAcpUserReferenceListArrayInput is an input type that accepts ProjectAcpUserReferenceListArray and ProjectAcpUserReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpUserReferenceListArrayInput` via:
//
//	ProjectAcpUserReferenceListArray{ ProjectAcpUserReferenceListArgs{...} }
type ProjectAcpUserReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput
	ToProjectAcpUserReferenceListArrayOutputWithContext(context.Context) ProjectAcpUserReferenceListArrayOutput
}

type ProjectAcpUserReferenceListArray []ProjectAcpUserReferenceListInput

func (ProjectAcpUserReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserReferenceListArray) ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput {
	return i.ToProjectAcpUserReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpUserReferenceListArray) ToProjectAcpUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserReferenceListArrayOutput)
}

type ProjectAcpUserReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserReferenceListOutput) ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput {
	return o
}

func (o ProjectAcpUserReferenceListOutput) ToProjectAcpUserReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpUserReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAcpUserReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpUserReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserReferenceListArrayOutput) ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserReferenceListArrayOutput) ToProjectAcpUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAcpUserReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpUserReferenceList {
		return vs[0].([]ProjectAcpUserReferenceList)[vs[1].(int)]
	}).(ProjectAcpUserReferenceListOutput)
}

type ProjectCategory struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// ProjectCategoryInput is an input type that accepts ProjectCategoryArgs and ProjectCategoryOutput values.
// You can construct a concrete instance of `ProjectCategoryInput` via:
//
//	ProjectCategoryArgs{...}
type ProjectCategoryInput interface {
	pulumi.Input

	ToProjectCategoryOutput() ProjectCategoryOutput
	ToProjectCategoryOutputWithContext(context.Context) ProjectCategoryOutput
}

type ProjectCategoryArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProjectCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCategory)(nil)).Elem()
}

func (i ProjectCategoryArgs) ToProjectCategoryOutput() ProjectCategoryOutput {
	return i.ToProjectCategoryOutputWithContext(context.Background())
}

func (i ProjectCategoryArgs) ToProjectCategoryOutputWithContext(ctx context.Context) ProjectCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCategoryOutput)
}

// ProjectCategoryArrayInput is an input type that accepts ProjectCategoryArray and ProjectCategoryArrayOutput values.
// You can construct a concrete instance of `ProjectCategoryArrayInput` via:
//
//	ProjectCategoryArray{ ProjectCategoryArgs{...} }
type ProjectCategoryArrayInput interface {
	pulumi.Input

	ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput
	ToProjectCategoryArrayOutputWithContext(context.Context) ProjectCategoryArrayOutput
}

type ProjectCategoryArray []ProjectCategoryInput

func (ProjectCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCategory)(nil)).Elem()
}

func (i ProjectCategoryArray) ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput {
	return i.ToProjectCategoryArrayOutputWithContext(context.Background())
}

func (i ProjectCategoryArray) ToProjectCategoryArrayOutputWithContext(ctx context.Context) ProjectCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCategoryArrayOutput)
}

type ProjectCategoryOutput struct{ *pulumi.OutputState }

func (ProjectCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCategory)(nil)).Elem()
}

func (o ProjectCategoryOutput) ToProjectCategoryOutput() ProjectCategoryOutput {
	return o
}

func (o ProjectCategoryOutput) ToProjectCategoryOutputWithContext(ctx context.Context) ProjectCategoryOutput {
	return o
}

// The name for the project.
func (o ProjectCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectCategoryArrayOutput struct{ *pulumi.OutputState }

func (ProjectCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCategory)(nil)).Elem()
}

func (o ProjectCategoryArrayOutput) ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput {
	return o
}

func (o ProjectCategoryArrayOutput) ToProjectCategoryArrayOutputWithContext(ctx context.Context) ProjectCategoryArrayOutput {
	return o
}

func (o ProjectCategoryArrayOutput) Index(i pulumi.IntInput) ProjectCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectCategory {
		return vs[0].([]ProjectCategory)[vs[1].(int)]
	}).(ProjectCategoryOutput)
}

type ProjectClusterReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectClusterReferenceListInput is an input type that accepts ProjectClusterReferenceListArgs and ProjectClusterReferenceListOutput values.
// You can construct a concrete instance of `ProjectClusterReferenceListInput` via:
//
//	ProjectClusterReferenceListArgs{...}
type ProjectClusterReferenceListInput interface {
	pulumi.Input

	ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput
	ToProjectClusterReferenceListOutputWithContext(context.Context) ProjectClusterReferenceListOutput
}

type ProjectClusterReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectClusterReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectClusterReferenceList)(nil)).Elem()
}

func (i ProjectClusterReferenceListArgs) ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput {
	return i.ToProjectClusterReferenceListOutputWithContext(context.Background())
}

func (i ProjectClusterReferenceListArgs) ToProjectClusterReferenceListOutputWithContext(ctx context.Context) ProjectClusterReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectClusterReferenceListOutput)
}

// ProjectClusterReferenceListArrayInput is an input type that accepts ProjectClusterReferenceListArray and ProjectClusterReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectClusterReferenceListArrayInput` via:
//
//	ProjectClusterReferenceListArray{ ProjectClusterReferenceListArgs{...} }
type ProjectClusterReferenceListArrayInput interface {
	pulumi.Input

	ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput
	ToProjectClusterReferenceListArrayOutputWithContext(context.Context) ProjectClusterReferenceListArrayOutput
}

type ProjectClusterReferenceListArray []ProjectClusterReferenceListInput

func (ProjectClusterReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectClusterReferenceList)(nil)).Elem()
}

func (i ProjectClusterReferenceListArray) ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput {
	return i.ToProjectClusterReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectClusterReferenceListArray) ToProjectClusterReferenceListArrayOutputWithContext(ctx context.Context) ProjectClusterReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectClusterReferenceListArrayOutput)
}

type ProjectClusterReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectClusterReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectClusterReferenceList)(nil)).Elem()
}

func (o ProjectClusterReferenceListOutput) ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput {
	return o
}

func (o ProjectClusterReferenceListOutput) ToProjectClusterReferenceListOutputWithContext(ctx context.Context) ProjectClusterReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectClusterReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectClusterReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectClusterReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectClusterReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectClusterReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectClusterReferenceList)(nil)).Elem()
}

func (o ProjectClusterReferenceListArrayOutput) ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput {
	return o
}

func (o ProjectClusterReferenceListArrayOutput) ToProjectClusterReferenceListArrayOutputWithContext(ctx context.Context) ProjectClusterReferenceListArrayOutput {
	return o
}

func (o ProjectClusterReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectClusterReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectClusterReferenceList {
		return vs[0].([]ProjectClusterReferenceList)[vs[1].(int)]
	}).(ProjectClusterReferenceListOutput)
}

type ProjectDefaultEnvironmentReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectDefaultEnvironmentReferenceInput is an input type that accepts ProjectDefaultEnvironmentReferenceArgs and ProjectDefaultEnvironmentReferenceOutput values.
// You can construct a concrete instance of `ProjectDefaultEnvironmentReferenceInput` via:
//
//	ProjectDefaultEnvironmentReferenceArgs{...}
type ProjectDefaultEnvironmentReferenceInput interface {
	pulumi.Input

	ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput
	ToProjectDefaultEnvironmentReferenceOutputWithContext(context.Context) ProjectDefaultEnvironmentReferenceOutput
}

type ProjectDefaultEnvironmentReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectDefaultEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput {
	return i.ToProjectDefaultEnvironmentReferenceOutputWithContext(context.Background())
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferenceOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferenceOutput)
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return i.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferenceOutput).ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx)
}

// ProjectDefaultEnvironmentReferencePtrInput is an input type that accepts ProjectDefaultEnvironmentReferenceArgs, ProjectDefaultEnvironmentReferencePtr and ProjectDefaultEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `ProjectDefaultEnvironmentReferencePtrInput` via:
//
//	        ProjectDefaultEnvironmentReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput
	ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Context) ProjectDefaultEnvironmentReferencePtrOutput
}

type projectDefaultEnvironmentReferencePtrType ProjectDefaultEnvironmentReferenceArgs

func ProjectDefaultEnvironmentReferencePtr(v *ProjectDefaultEnvironmentReferenceArgs) ProjectDefaultEnvironmentReferencePtrInput {
	return (*projectDefaultEnvironmentReferencePtrType)(v)
}

func (*projectDefaultEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (i *projectDefaultEnvironmentReferencePtrType) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return i.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *projectDefaultEnvironmentReferencePtrType) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferencePtrOutput)
}

type ProjectDefaultEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (ProjectDefaultEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferenceOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferenceOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return o.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultEnvironmentReference) *ProjectDefaultEnvironmentReference {
		return &v
	}).(ProjectDefaultEnvironmentReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultEnvironmentReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultEnvironmentReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectDefaultEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) Elem() ProjectDefaultEnvironmentReferenceOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) ProjectDefaultEnvironmentReference {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultEnvironmentReference
		return ret
	}).(ProjectDefaultEnvironmentReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultEnvironmentReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultEnvironmentReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectDefaultSubnetReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectDefaultSubnetReferenceInput is an input type that accepts ProjectDefaultSubnetReferenceArgs and ProjectDefaultSubnetReferenceOutput values.
// You can construct a concrete instance of `ProjectDefaultSubnetReferenceInput` via:
//
//	ProjectDefaultSubnetReferenceArgs{...}
type ProjectDefaultSubnetReferenceInput interface {
	pulumi.Input

	ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput
	ToProjectDefaultSubnetReferenceOutputWithContext(context.Context) ProjectDefaultSubnetReferenceOutput
}

type ProjectDefaultSubnetReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectDefaultSubnetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultSubnetReference)(nil)).Elem()
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput {
	return i.ToProjectDefaultSubnetReferenceOutputWithContext(context.Background())
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferenceOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferenceOutput)
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return i.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferenceOutput).ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx)
}

// ProjectDefaultSubnetReferencePtrInput is an input type that accepts ProjectDefaultSubnetReferenceArgs, ProjectDefaultSubnetReferencePtr and ProjectDefaultSubnetReferencePtrOutput values.
// You can construct a concrete instance of `ProjectDefaultSubnetReferencePtrInput` via:
//
//	        ProjectDefaultSubnetReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultSubnetReferencePtrInput interface {
	pulumi.Input

	ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput
	ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Context) ProjectDefaultSubnetReferencePtrOutput
}

type projectDefaultSubnetReferencePtrType ProjectDefaultSubnetReferenceArgs

func ProjectDefaultSubnetReferencePtr(v *ProjectDefaultSubnetReferenceArgs) ProjectDefaultSubnetReferencePtrInput {
	return (*projectDefaultSubnetReferencePtrType)(v)
}

func (*projectDefaultSubnetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultSubnetReference)(nil)).Elem()
}

func (i *projectDefaultSubnetReferencePtrType) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return i.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (i *projectDefaultSubnetReferencePtrType) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferencePtrOutput)
}

type ProjectDefaultSubnetReferenceOutput struct{ *pulumi.OutputState }

func (ProjectDefaultSubnetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultSubnetReference)(nil)).Elem()
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput {
	return o
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferenceOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferenceOutput {
	return o
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return o.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultSubnetReference) *ProjectDefaultSubnetReference {
		return &v
	}).(ProjectDefaultSubnetReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultSubnetReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultSubnetReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultSubnetReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectDefaultSubnetReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultSubnetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultSubnetReference)(nil)).Elem()
}

func (o ProjectDefaultSubnetReferencePtrOutput) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return o
}

func (o ProjectDefaultSubnetReferencePtrOutput) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return o
}

func (o ProjectDefaultSubnetReferencePtrOutput) Elem() ProjectDefaultSubnetReferenceOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) ProjectDefaultSubnetReference {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultSubnetReference
		return ret
	}).(ProjectDefaultSubnetReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultSubnetReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultSubnetReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultSubnetReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectEnvironmentReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectEnvironmentReferenceListInput is an input type that accepts ProjectEnvironmentReferenceListArgs and ProjectEnvironmentReferenceListOutput values.
// You can construct a concrete instance of `ProjectEnvironmentReferenceListInput` via:
//
//	ProjectEnvironmentReferenceListArgs{...}
type ProjectEnvironmentReferenceListInput interface {
	pulumi.Input

	ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput
	ToProjectEnvironmentReferenceListOutputWithContext(context.Context) ProjectEnvironmentReferenceListOutput
}

type ProjectEnvironmentReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectEnvironmentReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (i ProjectEnvironmentReferenceListArgs) ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput {
	return i.ToProjectEnvironmentReferenceListOutputWithContext(context.Background())
}

func (i ProjectEnvironmentReferenceListArgs) ToProjectEnvironmentReferenceListOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentReferenceListOutput)
}

// ProjectEnvironmentReferenceListArrayInput is an input type that accepts ProjectEnvironmentReferenceListArray and ProjectEnvironmentReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentReferenceListArrayInput` via:
//
//	ProjectEnvironmentReferenceListArray{ ProjectEnvironmentReferenceListArgs{...} }
type ProjectEnvironmentReferenceListArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput
	ToProjectEnvironmentReferenceListArrayOutputWithContext(context.Context) ProjectEnvironmentReferenceListArrayOutput
}

type ProjectEnvironmentReferenceListArray []ProjectEnvironmentReferenceListInput

func (ProjectEnvironmentReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (i ProjectEnvironmentReferenceListArray) ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput {
	return i.ToProjectEnvironmentReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentReferenceListArray) ToProjectEnvironmentReferenceListArrayOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentReferenceListArrayOutput)
}

type ProjectEnvironmentReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (o ProjectEnvironmentReferenceListOutput) ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput {
	return o
}

func (o ProjectEnvironmentReferenceListOutput) ToProjectEnvironmentReferenceListOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectEnvironmentReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectEnvironmentReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectEnvironmentReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectEnvironmentReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (o ProjectEnvironmentReferenceListArrayOutput) ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput {
	return o
}

func (o ProjectEnvironmentReferenceListArrayOutput) ToProjectEnvironmentReferenceListArrayOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListArrayOutput {
	return o
}

func (o ProjectEnvironmentReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentReferenceList {
		return vs[0].([]ProjectEnvironmentReferenceList)[vs[1].(int)]
	}).(ProjectEnvironmentReferenceListOutput)
}

type ProjectExternalNetworkList struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectExternalNetworkListInput is an input type that accepts ProjectExternalNetworkListArgs and ProjectExternalNetworkListOutput values.
// You can construct a concrete instance of `ProjectExternalNetworkListInput` via:
//
//	ProjectExternalNetworkListArgs{...}
type ProjectExternalNetworkListInput interface {
	pulumi.Input

	ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput
	ToProjectExternalNetworkListOutputWithContext(context.Context) ProjectExternalNetworkListOutput
}

type ProjectExternalNetworkListArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectExternalNetworkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalNetworkList)(nil)).Elem()
}

func (i ProjectExternalNetworkListArgs) ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput {
	return i.ToProjectExternalNetworkListOutputWithContext(context.Background())
}

func (i ProjectExternalNetworkListArgs) ToProjectExternalNetworkListOutputWithContext(ctx context.Context) ProjectExternalNetworkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalNetworkListOutput)
}

// ProjectExternalNetworkListArrayInput is an input type that accepts ProjectExternalNetworkListArray and ProjectExternalNetworkListArrayOutput values.
// You can construct a concrete instance of `ProjectExternalNetworkListArrayInput` via:
//
//	ProjectExternalNetworkListArray{ ProjectExternalNetworkListArgs{...} }
type ProjectExternalNetworkListArrayInput interface {
	pulumi.Input

	ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput
	ToProjectExternalNetworkListArrayOutputWithContext(context.Context) ProjectExternalNetworkListArrayOutput
}

type ProjectExternalNetworkListArray []ProjectExternalNetworkListInput

func (ProjectExternalNetworkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalNetworkList)(nil)).Elem()
}

func (i ProjectExternalNetworkListArray) ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput {
	return i.ToProjectExternalNetworkListArrayOutputWithContext(context.Background())
}

func (i ProjectExternalNetworkListArray) ToProjectExternalNetworkListArrayOutputWithContext(ctx context.Context) ProjectExternalNetworkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalNetworkListArrayOutput)
}

type ProjectExternalNetworkListOutput struct{ *pulumi.OutputState }

func (ProjectExternalNetworkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalNetworkList)(nil)).Elem()
}

func (o ProjectExternalNetworkListOutput) ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput {
	return o
}

func (o ProjectExternalNetworkListOutput) ToProjectExternalNetworkListOutputWithContext(ctx context.Context) ProjectExternalNetworkListOutput {
	return o
}

// The name for the project.
func (o ProjectExternalNetworkListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalNetworkList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectExternalNetworkListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectExternalNetworkList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectExternalNetworkListArrayOutput struct{ *pulumi.OutputState }

func (ProjectExternalNetworkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalNetworkList)(nil)).Elem()
}

func (o ProjectExternalNetworkListArrayOutput) ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput {
	return o
}

func (o ProjectExternalNetworkListArrayOutput) ToProjectExternalNetworkListArrayOutputWithContext(ctx context.Context) ProjectExternalNetworkListArrayOutput {
	return o
}

func (o ProjectExternalNetworkListArrayOutput) Index(i pulumi.IntInput) ProjectExternalNetworkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectExternalNetworkList {
		return vs[0].([]ProjectExternalNetworkList)[vs[1].(int)]
	}).(ProjectExternalNetworkListOutput)
}

type ProjectExternalUserGroupReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectExternalUserGroupReferenceListInput is an input type that accepts ProjectExternalUserGroupReferenceListArgs and ProjectExternalUserGroupReferenceListOutput values.
// You can construct a concrete instance of `ProjectExternalUserGroupReferenceListInput` via:
//
//	ProjectExternalUserGroupReferenceListArgs{...}
type ProjectExternalUserGroupReferenceListInput interface {
	pulumi.Input

	ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput
	ToProjectExternalUserGroupReferenceListOutputWithContext(context.Context) ProjectExternalUserGroupReferenceListOutput
}

type ProjectExternalUserGroupReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectExternalUserGroupReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectExternalUserGroupReferenceListArgs) ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput {
	return i.ToProjectExternalUserGroupReferenceListOutputWithContext(context.Background())
}

func (i ProjectExternalUserGroupReferenceListArgs) ToProjectExternalUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalUserGroupReferenceListOutput)
}

// ProjectExternalUserGroupReferenceListArrayInput is an input type that accepts ProjectExternalUserGroupReferenceListArray and ProjectExternalUserGroupReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectExternalUserGroupReferenceListArrayInput` via:
//
//	ProjectExternalUserGroupReferenceListArray{ ProjectExternalUserGroupReferenceListArgs{...} }
type ProjectExternalUserGroupReferenceListArrayInput interface {
	pulumi.Input

	ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput
	ToProjectExternalUserGroupReferenceListArrayOutputWithContext(context.Context) ProjectExternalUserGroupReferenceListArrayOutput
}

type ProjectExternalUserGroupReferenceListArray []ProjectExternalUserGroupReferenceListInput

func (ProjectExternalUserGroupReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectExternalUserGroupReferenceListArray) ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput {
	return i.ToProjectExternalUserGroupReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectExternalUserGroupReferenceListArray) ToProjectExternalUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalUserGroupReferenceListArrayOutput)
}

type ProjectExternalUserGroupReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectExternalUserGroupReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectExternalUserGroupReferenceListOutput) ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListOutput) ToProjectExternalUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectExternalUserGroupReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectExternalUserGroupReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectExternalUserGroupReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectExternalUserGroupReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectExternalUserGroupReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) ToProjectExternalUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectExternalUserGroupReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectExternalUserGroupReferenceList {
		return vs[0].([]ProjectExternalUserGroupReferenceList)[vs[1].(int)]
	}).(ProjectExternalUserGroupReferenceListOutput)
}

type ProjectResourceDomain struct {
	Resources []ProjectResourceDomainResource `pulumi:"resources"`
}

// ProjectResourceDomainInput is an input type that accepts ProjectResourceDomainArgs and ProjectResourceDomainOutput values.
// You can construct a concrete instance of `ProjectResourceDomainInput` via:
//
//	ProjectResourceDomainArgs{...}
type ProjectResourceDomainInput interface {
	pulumi.Input

	ToProjectResourceDomainOutput() ProjectResourceDomainOutput
	ToProjectResourceDomainOutputWithContext(context.Context) ProjectResourceDomainOutput
}

type ProjectResourceDomainArgs struct {
	Resources ProjectResourceDomainResourceArrayInput `pulumi:"resources"`
}

func (ProjectResourceDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomain)(nil)).Elem()
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainOutput() ProjectResourceDomainOutput {
	return i.ToProjectResourceDomainOutputWithContext(context.Background())
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainOutputWithContext(ctx context.Context) ProjectResourceDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainOutput)
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return i.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainOutput).ToProjectResourceDomainPtrOutputWithContext(ctx)
}

// ProjectResourceDomainPtrInput is an input type that accepts ProjectResourceDomainArgs, ProjectResourceDomainPtr and ProjectResourceDomainPtrOutput values.
// You can construct a concrete instance of `ProjectResourceDomainPtrInput` via:
//
//	        ProjectResourceDomainArgs{...}
//
//	or:
//
//	        nil
type ProjectResourceDomainPtrInput interface {
	pulumi.Input

	ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput
	ToProjectResourceDomainPtrOutputWithContext(context.Context) ProjectResourceDomainPtrOutput
}

type projectResourceDomainPtrType ProjectResourceDomainArgs

func ProjectResourceDomainPtr(v *ProjectResourceDomainArgs) ProjectResourceDomainPtrInput {
	return (*projectResourceDomainPtrType)(v)
}

func (*projectResourceDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceDomain)(nil)).Elem()
}

func (i *projectResourceDomainPtrType) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return i.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (i *projectResourceDomainPtrType) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainPtrOutput)
}

type ProjectResourceDomainOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomain)(nil)).Elem()
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainOutput() ProjectResourceDomainOutput {
	return o
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainOutputWithContext(ctx context.Context) ProjectResourceDomainOutput {
	return o
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return o.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectResourceDomain) *ProjectResourceDomain {
		return &v
	}).(ProjectResourceDomainPtrOutput)
}

func (o ProjectResourceDomainOutput) Resources() ProjectResourceDomainResourceArrayOutput {
	return o.ApplyT(func(v ProjectResourceDomain) []ProjectResourceDomainResource { return v.Resources }).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainPtrOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceDomain)(nil)).Elem()
}

func (o ProjectResourceDomainPtrOutput) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return o
}

func (o ProjectResourceDomainPtrOutput) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return o
}

func (o ProjectResourceDomainPtrOutput) Elem() ProjectResourceDomainOutput {
	return o.ApplyT(func(v *ProjectResourceDomain) ProjectResourceDomain {
		if v != nil {
			return *v
		}
		var ret ProjectResourceDomain
		return ret
	}).(ProjectResourceDomainOutput)
}

func (o ProjectResourceDomainPtrOutput) Resources() ProjectResourceDomainResourceArrayOutput {
	return o.ApplyT(func(v *ProjectResourceDomain) []ProjectResourceDomainResource {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainResource struct {
	Limit        int     `pulumi:"limit"`
	ResourceType string  `pulumi:"resourceType"`
	Units        *string `pulumi:"units"`
	// value of the key.
	Value *int `pulumi:"value"`
}

// ProjectResourceDomainResourceInput is an input type that accepts ProjectResourceDomainResourceArgs and ProjectResourceDomainResourceOutput values.
// You can construct a concrete instance of `ProjectResourceDomainResourceInput` via:
//
//	ProjectResourceDomainResourceArgs{...}
type ProjectResourceDomainResourceInput interface {
	pulumi.Input

	ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput
	ToProjectResourceDomainResourceOutputWithContext(context.Context) ProjectResourceDomainResourceOutput
}

type ProjectResourceDomainResourceArgs struct {
	Limit        pulumi.IntInput       `pulumi:"limit"`
	ResourceType pulumi.StringInput    `pulumi:"resourceType"`
	Units        pulumi.StringPtrInput `pulumi:"units"`
	// value of the key.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ProjectResourceDomainResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomainResource)(nil)).Elem()
}

func (i ProjectResourceDomainResourceArgs) ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput {
	return i.ToProjectResourceDomainResourceOutputWithContext(context.Background())
}

func (i ProjectResourceDomainResourceArgs) ToProjectResourceDomainResourceOutputWithContext(ctx context.Context) ProjectResourceDomainResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainResourceOutput)
}

// ProjectResourceDomainResourceArrayInput is an input type that accepts ProjectResourceDomainResourceArray and ProjectResourceDomainResourceArrayOutput values.
// You can construct a concrete instance of `ProjectResourceDomainResourceArrayInput` via:
//
//	ProjectResourceDomainResourceArray{ ProjectResourceDomainResourceArgs{...} }
type ProjectResourceDomainResourceArrayInput interface {
	pulumi.Input

	ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput
	ToProjectResourceDomainResourceArrayOutputWithContext(context.Context) ProjectResourceDomainResourceArrayOutput
}

type ProjectResourceDomainResourceArray []ProjectResourceDomainResourceInput

func (ProjectResourceDomainResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectResourceDomainResource)(nil)).Elem()
}

func (i ProjectResourceDomainResourceArray) ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput {
	return i.ToProjectResourceDomainResourceArrayOutputWithContext(context.Background())
}

func (i ProjectResourceDomainResourceArray) ToProjectResourceDomainResourceArrayOutputWithContext(ctx context.Context) ProjectResourceDomainResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainResourceOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomainResource)(nil)).Elem()
}

func (o ProjectResourceDomainResourceOutput) ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput {
	return o
}

func (o ProjectResourceDomainResourceOutput) ToProjectResourceDomainResourceOutputWithContext(ctx context.Context) ProjectResourceDomainResourceOutput {
	return o
}

func (o ProjectResourceDomainResourceOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) int { return v.Limit }).(pulumi.IntOutput)
}

func (o ProjectResourceDomainResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o ProjectResourceDomainResourceOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) *string { return v.Units }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectResourceDomainResourceOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ProjectResourceDomainResourceArrayOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectResourceDomainResource)(nil)).Elem()
}

func (o ProjectResourceDomainResourceArrayOutput) ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput {
	return o
}

func (o ProjectResourceDomainResourceArrayOutput) ToProjectResourceDomainResourceArrayOutputWithContext(ctx context.Context) ProjectResourceDomainResourceArrayOutput {
	return o
}

func (o ProjectResourceDomainResourceArrayOutput) Index(i pulumi.IntInput) ProjectResourceDomainResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectResourceDomainResource {
		return vs[0].([]ProjectResourceDomainResource)[vs[1].(int)]
	}).(ProjectResourceDomainResourceOutput)
}

type ProjectSubnetReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectSubnetReferenceListInput is an input type that accepts ProjectSubnetReferenceListArgs and ProjectSubnetReferenceListOutput values.
// You can construct a concrete instance of `ProjectSubnetReferenceListInput` via:
//
//	ProjectSubnetReferenceListArgs{...}
type ProjectSubnetReferenceListInput interface {
	pulumi.Input

	ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput
	ToProjectSubnetReferenceListOutputWithContext(context.Context) ProjectSubnetReferenceListOutput
}

type ProjectSubnetReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectSubnetReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSubnetReferenceList)(nil)).Elem()
}

func (i ProjectSubnetReferenceListArgs) ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput {
	return i.ToProjectSubnetReferenceListOutputWithContext(context.Background())
}

func (i ProjectSubnetReferenceListArgs) ToProjectSubnetReferenceListOutputWithContext(ctx context.Context) ProjectSubnetReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSubnetReferenceListOutput)
}

// ProjectSubnetReferenceListArrayInput is an input type that accepts ProjectSubnetReferenceListArray and ProjectSubnetReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectSubnetReferenceListArrayInput` via:
//
//	ProjectSubnetReferenceListArray{ ProjectSubnetReferenceListArgs{...} }
type ProjectSubnetReferenceListArrayInput interface {
	pulumi.Input

	ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput
	ToProjectSubnetReferenceListArrayOutputWithContext(context.Context) ProjectSubnetReferenceListArrayOutput
}

type ProjectSubnetReferenceListArray []ProjectSubnetReferenceListInput

func (ProjectSubnetReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSubnetReferenceList)(nil)).Elem()
}

func (i ProjectSubnetReferenceListArray) ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput {
	return i.ToProjectSubnetReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectSubnetReferenceListArray) ToProjectSubnetReferenceListArrayOutputWithContext(ctx context.Context) ProjectSubnetReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSubnetReferenceListArrayOutput)
}

type ProjectSubnetReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectSubnetReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSubnetReferenceList)(nil)).Elem()
}

func (o ProjectSubnetReferenceListOutput) ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput {
	return o
}

func (o ProjectSubnetReferenceListOutput) ToProjectSubnetReferenceListOutputWithContext(ctx context.Context) ProjectSubnetReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectSubnetReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectSubnetReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectSubnetReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectSubnetReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectSubnetReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSubnetReferenceList)(nil)).Elem()
}

func (o ProjectSubnetReferenceListArrayOutput) ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput {
	return o
}

func (o ProjectSubnetReferenceListArrayOutput) ToProjectSubnetReferenceListArrayOutputWithContext(ctx context.Context) ProjectSubnetReferenceListArrayOutput {
	return o
}

func (o ProjectSubnetReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectSubnetReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSubnetReferenceList {
		return vs[0].([]ProjectSubnetReferenceList)[vs[1].(int)]
	}).(ProjectSubnetReferenceListOutput)
}

type ProjectTunnelReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectTunnelReferenceListInput is an input type that accepts ProjectTunnelReferenceListArgs and ProjectTunnelReferenceListOutput values.
// You can construct a concrete instance of `ProjectTunnelReferenceListInput` via:
//
//	ProjectTunnelReferenceListArgs{...}
type ProjectTunnelReferenceListInput interface {
	pulumi.Input

	ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput
	ToProjectTunnelReferenceListOutputWithContext(context.Context) ProjectTunnelReferenceListOutput
}

type ProjectTunnelReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectTunnelReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTunnelReferenceList)(nil)).Elem()
}

func (i ProjectTunnelReferenceListArgs) ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput {
	return i.ToProjectTunnelReferenceListOutputWithContext(context.Background())
}

func (i ProjectTunnelReferenceListArgs) ToProjectTunnelReferenceListOutputWithContext(ctx context.Context) ProjectTunnelReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTunnelReferenceListOutput)
}

// ProjectTunnelReferenceListArrayInput is an input type that accepts ProjectTunnelReferenceListArray and ProjectTunnelReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectTunnelReferenceListArrayInput` via:
//
//	ProjectTunnelReferenceListArray{ ProjectTunnelReferenceListArgs{...} }
type ProjectTunnelReferenceListArrayInput interface {
	pulumi.Input

	ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput
	ToProjectTunnelReferenceListArrayOutputWithContext(context.Context) ProjectTunnelReferenceListArrayOutput
}

type ProjectTunnelReferenceListArray []ProjectTunnelReferenceListInput

func (ProjectTunnelReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTunnelReferenceList)(nil)).Elem()
}

func (i ProjectTunnelReferenceListArray) ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput {
	return i.ToProjectTunnelReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectTunnelReferenceListArray) ToProjectTunnelReferenceListArrayOutputWithContext(ctx context.Context) ProjectTunnelReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTunnelReferenceListArrayOutput)
}

type ProjectTunnelReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectTunnelReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTunnelReferenceList)(nil)).Elem()
}

func (o ProjectTunnelReferenceListOutput) ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput {
	return o
}

func (o ProjectTunnelReferenceListOutput) ToProjectTunnelReferenceListOutputWithContext(ctx context.Context) ProjectTunnelReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectTunnelReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectTunnelReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectTunnelReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectTunnelReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectTunnelReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTunnelReferenceList)(nil)).Elem()
}

func (o ProjectTunnelReferenceListArrayOutput) ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput {
	return o
}

func (o ProjectTunnelReferenceListArrayOutput) ToProjectTunnelReferenceListArrayOutputWithContext(ctx context.Context) ProjectTunnelReferenceListArrayOutput {
	return o
}

func (o ProjectTunnelReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectTunnelReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTunnelReferenceList {
		return vs[0].([]ProjectTunnelReferenceList)[vs[1].(int)]
	}).(ProjectTunnelReferenceListOutput)
}

type ProjectUserGroupList struct {
	DirectoryServiceOus        []ProjectUserGroupListDirectoryServiceOus       `pulumi:"directoryServiceOus"`
	DirectoryServiceUserGroups []ProjectUserGroupListDirectoryServiceUserGroup `pulumi:"directoryServiceUserGroups"`
	Metadata                   map[string]string                               `pulumi:"metadata"`
	SamlUserGroups             []ProjectUserGroupListSamlUserGroup             `pulumi:"samlUserGroups"`
}

// ProjectUserGroupListInput is an input type that accepts ProjectUserGroupListArgs and ProjectUserGroupListOutput values.
// You can construct a concrete instance of `ProjectUserGroupListInput` via:
//
//	ProjectUserGroupListArgs{...}
type ProjectUserGroupListInput interface {
	pulumi.Input

	ToProjectUserGroupListOutput() ProjectUserGroupListOutput
	ToProjectUserGroupListOutputWithContext(context.Context) ProjectUserGroupListOutput
}

type ProjectUserGroupListArgs struct {
	DirectoryServiceOus        ProjectUserGroupListDirectoryServiceOusArrayInput       `pulumi:"directoryServiceOus"`
	DirectoryServiceUserGroups ProjectUserGroupListDirectoryServiceUserGroupArrayInput `pulumi:"directoryServiceUserGroups"`
	Metadata                   pulumi.StringMapInput                                   `pulumi:"metadata"`
	SamlUserGroups             ProjectUserGroupListSamlUserGroupArrayInput             `pulumi:"samlUserGroups"`
}

func (ProjectUserGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupList)(nil)).Elem()
}

func (i ProjectUserGroupListArgs) ToProjectUserGroupListOutput() ProjectUserGroupListOutput {
	return i.ToProjectUserGroupListOutputWithContext(context.Background())
}

func (i ProjectUserGroupListArgs) ToProjectUserGroupListOutputWithContext(ctx context.Context) ProjectUserGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListOutput)
}

// ProjectUserGroupListArrayInput is an input type that accepts ProjectUserGroupListArray and ProjectUserGroupListArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListArrayInput` via:
//
//	ProjectUserGroupListArray{ ProjectUserGroupListArgs{...} }
type ProjectUserGroupListArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput
	ToProjectUserGroupListArrayOutputWithContext(context.Context) ProjectUserGroupListArrayOutput
}

type ProjectUserGroupListArray []ProjectUserGroupListInput

func (ProjectUserGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupList)(nil)).Elem()
}

func (i ProjectUserGroupListArray) ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput {
	return i.ToProjectUserGroupListArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListArray) ToProjectUserGroupListArrayOutputWithContext(ctx context.Context) ProjectUserGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListArrayOutput)
}

type ProjectUserGroupListOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupList)(nil)).Elem()
}

func (o ProjectUserGroupListOutput) ToProjectUserGroupListOutput() ProjectUserGroupListOutput {
	return o
}

func (o ProjectUserGroupListOutput) ToProjectUserGroupListOutputWithContext(ctx context.Context) ProjectUserGroupListOutput {
	return o
}

func (o ProjectUserGroupListOutput) DirectoryServiceOus() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListDirectoryServiceOus { return v.DirectoryServiceOus }).(ProjectUserGroupListDirectoryServiceOusArrayOutput)
}

func (o ProjectUserGroupListOutput) DirectoryServiceUserGroups() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListDirectoryServiceUserGroup {
		return v.DirectoryServiceUserGroups
	}).(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput)
}

func (o ProjectUserGroupListOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectUserGroupList) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ProjectUserGroupListOutput) SamlUserGroups() ProjectUserGroupListSamlUserGroupArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListSamlUserGroup { return v.SamlUserGroups }).(ProjectUserGroupListSamlUserGroupArrayOutput)
}

type ProjectUserGroupListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupList)(nil)).Elem()
}

func (o ProjectUserGroupListArrayOutput) ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput {
	return o
}

func (o ProjectUserGroupListArrayOutput) ToProjectUserGroupListArrayOutputWithContext(ctx context.Context) ProjectUserGroupListArrayOutput {
	return o
}

func (o ProjectUserGroupListArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupList {
		return vs[0].([]ProjectUserGroupList)[vs[1].(int)]
	}).(ProjectUserGroupListOutput)
}

type ProjectUserGroupListDirectoryServiceOus struct {
	DistinguishedName string `pulumi:"distinguishedName"`
}

// ProjectUserGroupListDirectoryServiceOusInput is an input type that accepts ProjectUserGroupListDirectoryServiceOusArgs and ProjectUserGroupListDirectoryServiceOusOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceOusInput` via:
//
//	ProjectUserGroupListDirectoryServiceOusArgs{...}
type ProjectUserGroupListDirectoryServiceOusInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput
	ToProjectUserGroupListDirectoryServiceOusOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceOusOutput
}

type ProjectUserGroupListDirectoryServiceOusArgs struct {
	DistinguishedName pulumi.StringInput `pulumi:"distinguishedName"`
}

func (ProjectUserGroupListDirectoryServiceOusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceOusArgs) ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput {
	return i.ToProjectUserGroupListDirectoryServiceOusOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceOusArgs) ToProjectUserGroupListDirectoryServiceOusOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceOusOutput)
}

// ProjectUserGroupListDirectoryServiceOusArrayInput is an input type that accepts ProjectUserGroupListDirectoryServiceOusArray and ProjectUserGroupListDirectoryServiceOusArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceOusArrayInput` via:
//
//	ProjectUserGroupListDirectoryServiceOusArray{ ProjectUserGroupListDirectoryServiceOusArgs{...} }
type ProjectUserGroupListDirectoryServiceOusArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput
	ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput
}

type ProjectUserGroupListDirectoryServiceOusArray []ProjectUserGroupListDirectoryServiceOusInput

func (ProjectUserGroupListDirectoryServiceOusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceOusArray) ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return i.ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceOusArray) ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceOusArrayOutput)
}

type ProjectUserGroupListDirectoryServiceOusOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceOusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) ToProjectUserGroupListDirectoryServiceOusOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) DistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListDirectoryServiceOus) string { return v.DistinguishedName }).(pulumi.StringOutput)
}

type ProjectUserGroupListDirectoryServiceOusArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceOusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListDirectoryServiceOusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListDirectoryServiceOus {
		return vs[0].([]ProjectUserGroupListDirectoryServiceOus)[vs[1].(int)]
	}).(ProjectUserGroupListDirectoryServiceOusOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroup struct {
	DistinguishedName string `pulumi:"distinguishedName"`
}

// ProjectUserGroupListDirectoryServiceUserGroupInput is an input type that accepts ProjectUserGroupListDirectoryServiceUserGroupArgs and ProjectUserGroupListDirectoryServiceUserGroupOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceUserGroupInput` via:
//
//	ProjectUserGroupListDirectoryServiceUserGroupArgs{...}
type ProjectUserGroupListDirectoryServiceUserGroupInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput
	ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput
}

type ProjectUserGroupListDirectoryServiceUserGroupArgs struct {
	DistinguishedName pulumi.StringInput `pulumi:"distinguishedName"`
}

func (ProjectUserGroupListDirectoryServiceUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArgs) ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return i.ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArgs) ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceUserGroupOutput)
}

// ProjectUserGroupListDirectoryServiceUserGroupArrayInput is an input type that accepts ProjectUserGroupListDirectoryServiceUserGroupArray and ProjectUserGroupListDirectoryServiceUserGroupArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceUserGroupArrayInput` via:
//
//	ProjectUserGroupListDirectoryServiceUserGroupArray{ ProjectUserGroupListDirectoryServiceUserGroupArgs{...} }
type ProjectUserGroupListDirectoryServiceUserGroupArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput
	ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput
}

type ProjectUserGroupListDirectoryServiceUserGroupArray []ProjectUserGroupListDirectoryServiceUserGroupInput

func (ProjectUserGroupListDirectoryServiceUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArray) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return i.ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArray) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroupOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) DistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListDirectoryServiceUserGroup) string { return v.DistinguishedName }).(pulumi.StringOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroupArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListDirectoryServiceUserGroup {
		return vs[0].([]ProjectUserGroupListDirectoryServiceUserGroup)[vs[1].(int)]
	}).(ProjectUserGroupListDirectoryServiceUserGroupOutput)
}

type ProjectUserGroupListSamlUserGroup struct {
	IdpUuid string `pulumi:"idpUuid"`
	// The name for the project.
	Name string `pulumi:"name"`
}

// ProjectUserGroupListSamlUserGroupInput is an input type that accepts ProjectUserGroupListSamlUserGroupArgs and ProjectUserGroupListSamlUserGroupOutput values.
// You can construct a concrete instance of `ProjectUserGroupListSamlUserGroupInput` via:
//
//	ProjectUserGroupListSamlUserGroupArgs{...}
type ProjectUserGroupListSamlUserGroupInput interface {
	pulumi.Input

	ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput
	ToProjectUserGroupListSamlUserGroupOutputWithContext(context.Context) ProjectUserGroupListSamlUserGroupOutput
}

type ProjectUserGroupListSamlUserGroupArgs struct {
	IdpUuid pulumi.StringInput `pulumi:"idpUuid"`
	// The name for the project.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ProjectUserGroupListSamlUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListSamlUserGroupArgs) ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput {
	return i.ToProjectUserGroupListSamlUserGroupOutputWithContext(context.Background())
}

func (i ProjectUserGroupListSamlUserGroupArgs) ToProjectUserGroupListSamlUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListSamlUserGroupOutput)
}

// ProjectUserGroupListSamlUserGroupArrayInput is an input type that accepts ProjectUserGroupListSamlUserGroupArray and ProjectUserGroupListSamlUserGroupArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListSamlUserGroupArrayInput` via:
//
//	ProjectUserGroupListSamlUserGroupArray{ ProjectUserGroupListSamlUserGroupArgs{...} }
type ProjectUserGroupListSamlUserGroupArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput
	ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(context.Context) ProjectUserGroupListSamlUserGroupArrayOutput
}

type ProjectUserGroupListSamlUserGroupArray []ProjectUserGroupListSamlUserGroupInput

func (ProjectUserGroupListSamlUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListSamlUserGroupArray) ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput {
	return i.ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListSamlUserGroupArray) ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListSamlUserGroupArrayOutput)
}

type ProjectUserGroupListSamlUserGroupOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListSamlUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListSamlUserGroupOutput) ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupOutput) ToProjectUserGroupListSamlUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupOutput) IdpUuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListSamlUserGroup) string { return v.IdpUuid }).(pulumi.StringOutput)
}

// The name for the project.
func (o ProjectUserGroupListSamlUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListSamlUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type ProjectUserGroupListSamlUserGroupArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListSamlUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListSamlUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListSamlUserGroup {
		return vs[0].([]ProjectUserGroupListSamlUserGroup)[vs[1].(int)]
	}).(ProjectUserGroupListSamlUserGroupOutput)
}

type ProjectUserList struct {
	DirectoryServiceUser *ProjectUserListDirectoryServiceUser `pulumi:"directoryServiceUser"`
	IdentityProviderUser *ProjectUserListIdentityProviderUser `pulumi:"identityProviderUser"`
	Metadata             map[string]string                    `pulumi:"metadata"`
}

// ProjectUserListInput is an input type that accepts ProjectUserListArgs and ProjectUserListOutput values.
// You can construct a concrete instance of `ProjectUserListInput` via:
//
//	ProjectUserListArgs{...}
type ProjectUserListInput interface {
	pulumi.Input

	ToProjectUserListOutput() ProjectUserListOutput
	ToProjectUserListOutputWithContext(context.Context) ProjectUserListOutput
}

type ProjectUserListArgs struct {
	DirectoryServiceUser ProjectUserListDirectoryServiceUserPtrInput `pulumi:"directoryServiceUser"`
	IdentityProviderUser ProjectUserListIdentityProviderUserPtrInput `pulumi:"identityProviderUser"`
	Metadata             pulumi.StringMapInput                       `pulumi:"metadata"`
}

func (ProjectUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserList)(nil)).Elem()
}

func (i ProjectUserListArgs) ToProjectUserListOutput() ProjectUserListOutput {
	return i.ToProjectUserListOutputWithContext(context.Background())
}

func (i ProjectUserListArgs) ToProjectUserListOutputWithContext(ctx context.Context) ProjectUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListOutput)
}

// ProjectUserListArrayInput is an input type that accepts ProjectUserListArray and ProjectUserListArrayOutput values.
// You can construct a concrete instance of `ProjectUserListArrayInput` via:
//
//	ProjectUserListArray{ ProjectUserListArgs{...} }
type ProjectUserListArrayInput interface {
	pulumi.Input

	ToProjectUserListArrayOutput() ProjectUserListArrayOutput
	ToProjectUserListArrayOutputWithContext(context.Context) ProjectUserListArrayOutput
}

type ProjectUserListArray []ProjectUserListInput

func (ProjectUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserList)(nil)).Elem()
}

func (i ProjectUserListArray) ToProjectUserListArrayOutput() ProjectUserListArrayOutput {
	return i.ToProjectUserListArrayOutputWithContext(context.Background())
}

func (i ProjectUserListArray) ToProjectUserListArrayOutputWithContext(ctx context.Context) ProjectUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListArrayOutput)
}

type ProjectUserListOutput struct{ *pulumi.OutputState }

func (ProjectUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserList)(nil)).Elem()
}

func (o ProjectUserListOutput) ToProjectUserListOutput() ProjectUserListOutput {
	return o
}

func (o ProjectUserListOutput) ToProjectUserListOutputWithContext(ctx context.Context) ProjectUserListOutput {
	return o
}

func (o ProjectUserListOutput) DirectoryServiceUser() ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ApplyT(func(v ProjectUserList) *ProjectUserListDirectoryServiceUser { return v.DirectoryServiceUser }).(ProjectUserListDirectoryServiceUserPtrOutput)
}

func (o ProjectUserListOutput) IdentityProviderUser() ProjectUserListIdentityProviderUserPtrOutput {
	return o.ApplyT(func(v ProjectUserList) *ProjectUserListIdentityProviderUser { return v.IdentityProviderUser }).(ProjectUserListIdentityProviderUserPtrOutput)
}

func (o ProjectUserListOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectUserList) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type ProjectUserListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserList)(nil)).Elem()
}

func (o ProjectUserListArrayOutput) ToProjectUserListArrayOutput() ProjectUserListArrayOutput {
	return o
}

func (o ProjectUserListArrayOutput) ToProjectUserListArrayOutputWithContext(ctx context.Context) ProjectUserListArrayOutput {
	return o
}

func (o ProjectUserListArrayOutput) Index(i pulumi.IntInput) ProjectUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserList {
		return vs[0].([]ProjectUserList)[vs[1].(int)]
	}).(ProjectUserListOutput)
}

type ProjectUserListDirectoryServiceUser struct {
	DefaultUserPrincipalName  *string                                                      `pulumi:"defaultUserPrincipalName"`
	DirectoryServiceReference ProjectUserListDirectoryServiceUserDirectoryServiceReference `pulumi:"directoryServiceReference"`
	UserPrincipalName         *string                                                      `pulumi:"userPrincipalName"`
}

// ProjectUserListDirectoryServiceUserInput is an input type that accepts ProjectUserListDirectoryServiceUserArgs and ProjectUserListDirectoryServiceUserOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserInput` via:
//
//	ProjectUserListDirectoryServiceUserArgs{...}
type ProjectUserListDirectoryServiceUserInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput
	ToProjectUserListDirectoryServiceUserOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserOutput
}

type ProjectUserListDirectoryServiceUserArgs struct {
	DefaultUserPrincipalName  pulumi.StringPtrInput                                             `pulumi:"defaultUserPrincipalName"`
	DirectoryServiceReference ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput `pulumi:"directoryServiceReference"`
	UserPrincipalName         pulumi.StringPtrInput                                             `pulumi:"userPrincipalName"`
}

func (ProjectUserListDirectoryServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput {
	return i.ToProjectUserListDirectoryServiceUserOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserOutput)
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return i.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserOutput).ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx)
}

// ProjectUserListDirectoryServiceUserPtrInput is an input type that accepts ProjectUserListDirectoryServiceUserArgs, ProjectUserListDirectoryServiceUserPtr and ProjectUserListDirectoryServiceUserPtrOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserPtrInput` via:
//
//	        ProjectUserListDirectoryServiceUserArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListDirectoryServiceUserPtrInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput
	ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserPtrOutput
}

type projectUserListDirectoryServiceUserPtrType ProjectUserListDirectoryServiceUserArgs

func ProjectUserListDirectoryServiceUserPtr(v *ProjectUserListDirectoryServiceUserArgs) ProjectUserListDirectoryServiceUserPtrInput {
	return (*projectUserListDirectoryServiceUserPtrType)(v)
}

func (*projectUserListDirectoryServiceUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (i *projectUserListDirectoryServiceUserPtrType) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return i.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (i *projectUserListDirectoryServiceUserPtrType) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserPtrOutput)
}

type ProjectUserListDirectoryServiceUserOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListDirectoryServiceUser) *ProjectUserListDirectoryServiceUser {
		return &v
	}).(ProjectUserListDirectoryServiceUserPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) DefaultUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) *string { return v.DefaultUserPrincipalName }).(pulumi.StringPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) DirectoryServiceReference() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		return v.DirectoryServiceReference
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ProjectUserListDirectoryServiceUserPtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) Elem() ProjectUserListDirectoryServiceUserOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) ProjectUserListDirectoryServiceUser {
		if v != nil {
			return *v
		}
		var ret ProjectUserListDirectoryServiceUser
		return ret
	}).(ProjectUserListDirectoryServiceUserOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) DefaultUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *string {
		if v == nil {
			return nil
		}
		return v.DefaultUserPrincipalName
	}).(pulumi.StringPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) DirectoryServiceReference() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		if v == nil {
			return nil
		}
		return &v.DirectoryServiceReference
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput is an input type that accepts ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs and ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput` via:
//
//	ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{...}
type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput
	ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput).ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx)
}

// ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput is an input type that accepts ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs, ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtr and ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput` via:
//
//	        ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput
	ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput
}

type projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs

func ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtr(v *ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput {
	return (*projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType)(v)
}

func (*projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (i *projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (i *projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		return &v
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Elem() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		if v != nil {
			return *v
		}
		var ret ProjectUserListDirectoryServiceUserDirectoryServiceReference
		return ret
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUser struct {
	IdentityProviderReference ProjectUserListIdentityProviderUserIdentityProviderReference `pulumi:"identityProviderReference"`
	Username                  *string                                                      `pulumi:"username"`
}

// ProjectUserListIdentityProviderUserInput is an input type that accepts ProjectUserListIdentityProviderUserArgs and ProjectUserListIdentityProviderUserOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserInput` via:
//
//	ProjectUserListIdentityProviderUserArgs{...}
type ProjectUserListIdentityProviderUserInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput
	ToProjectUserListIdentityProviderUserOutputWithContext(context.Context) ProjectUserListIdentityProviderUserOutput
}

type ProjectUserListIdentityProviderUserArgs struct {
	IdentityProviderReference ProjectUserListIdentityProviderUserIdentityProviderReferenceInput `pulumi:"identityProviderReference"`
	Username                  pulumi.StringPtrInput                                             `pulumi:"username"`
}

func (ProjectUserListIdentityProviderUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput {
	return i.ToProjectUserListIdentityProviderUserOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserOutput)
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return i.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserOutput).ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx)
}

// ProjectUserListIdentityProviderUserPtrInput is an input type that accepts ProjectUserListIdentityProviderUserArgs, ProjectUserListIdentityProviderUserPtr and ProjectUserListIdentityProviderUserPtrOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserPtrInput` via:
//
//	        ProjectUserListIdentityProviderUserArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListIdentityProviderUserPtrInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput
	ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Context) ProjectUserListIdentityProviderUserPtrOutput
}

type projectUserListIdentityProviderUserPtrType ProjectUserListIdentityProviderUserArgs

func ProjectUserListIdentityProviderUserPtr(v *ProjectUserListIdentityProviderUserArgs) ProjectUserListIdentityProviderUserPtrInput {
	return (*projectUserListIdentityProviderUserPtrType)(v)
}

func (*projectUserListIdentityProviderUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (i *projectUserListIdentityProviderUserPtrType) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return i.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (i *projectUserListIdentityProviderUserPtrType) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserPtrOutput)
}

type ProjectUserListIdentityProviderUserOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return o.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListIdentityProviderUser) *ProjectUserListIdentityProviderUser {
		return &v
	}).(ProjectUserListIdentityProviderUserPtrOutput)
}

func (o ProjectUserListIdentityProviderUserOutput) IdentityProviderReference() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUser) ProjectUserListIdentityProviderUserIdentityProviderReference {
		return v.IdentityProviderReference
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

func (o ProjectUserListIdentityProviderUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUserPtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserPtrOutput) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserPtrOutput) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserPtrOutput) Elem() ProjectUserListIdentityProviderUserOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) ProjectUserListIdentityProviderUser {
		if v != nil {
			return *v
		}
		var ret ProjectUserListIdentityProviderUser
		return ret
	}).(ProjectUserListIdentityProviderUserOutput)
}

func (o ProjectUserListIdentityProviderUserPtrOutput) IdentityProviderReference() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) *ProjectUserListIdentityProviderUserIdentityProviderReference {
		if v == nil {
			return nil
		}
		return &v.IdentityProviderReference
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

func (o ProjectUserListIdentityProviderUserPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserListIdentityProviderUserIdentityProviderReferenceInput is an input type that accepts ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs and ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserIdentityProviderReferenceInput` via:
//
//	ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{...}
type ProjectUserListIdentityProviderUserIdentityProviderReferenceInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput
	ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput
}

type ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput).ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx)
}

// ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput is an input type that accepts ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs, ProjectUserListIdentityProviderUserIdentityProviderReferencePtr and ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput` via:
//
//	        ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput
	ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput
}

type projectUserListIdentityProviderUserIdentityProviderReferencePtrType ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs

func ProjectUserListIdentityProviderUserIdentityProviderReferencePtr(v *ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput {
	return (*projectUserListIdentityProviderUserIdentityProviderReferencePtrType)(v)
}

func (*projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (i *projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (i *projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListIdentityProviderUserIdentityProviderReference) *ProjectUserListIdentityProviderUserIdentityProviderReference {
		return &v
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Elem() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) ProjectUserListIdentityProviderUserIdentityProviderReference {
		if v != nil {
			return *v
		}
		var ret ProjectUserListIdentityProviderUserIdentityProviderReference
		return ret
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectUserReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserReferenceListInput is an input type that accepts ProjectUserReferenceListArgs and ProjectUserReferenceListOutput values.
// You can construct a concrete instance of `ProjectUserReferenceListInput` via:
//
//	ProjectUserReferenceListArgs{...}
type ProjectUserReferenceListInput interface {
	pulumi.Input

	ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput
	ToProjectUserReferenceListOutputWithContext(context.Context) ProjectUserReferenceListOutput
}

type ProjectUserReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserReferenceList)(nil)).Elem()
}

func (i ProjectUserReferenceListArgs) ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput {
	return i.ToProjectUserReferenceListOutputWithContext(context.Background())
}

func (i ProjectUserReferenceListArgs) ToProjectUserReferenceListOutputWithContext(ctx context.Context) ProjectUserReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserReferenceListOutput)
}

// ProjectUserReferenceListArrayInput is an input type that accepts ProjectUserReferenceListArray and ProjectUserReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectUserReferenceListArrayInput` via:
//
//	ProjectUserReferenceListArray{ ProjectUserReferenceListArgs{...} }
type ProjectUserReferenceListArrayInput interface {
	pulumi.Input

	ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput
	ToProjectUserReferenceListArrayOutputWithContext(context.Context) ProjectUserReferenceListArrayOutput
}

type ProjectUserReferenceListArray []ProjectUserReferenceListInput

func (ProjectUserReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserReferenceList)(nil)).Elem()
}

func (i ProjectUserReferenceListArray) ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput {
	return i.ToProjectUserReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectUserReferenceListArray) ToProjectUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectUserReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserReferenceListArrayOutput)
}

type ProjectUserReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectUserReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserReferenceList)(nil)).Elem()
}

func (o ProjectUserReferenceListOutput) ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput {
	return o
}

func (o ProjectUserReferenceListOutput) ToProjectUserReferenceListOutputWithContext(ctx context.Context) ProjectUserReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserReferenceList)(nil)).Elem()
}

func (o ProjectUserReferenceListArrayOutput) ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput {
	return o
}

func (o ProjectUserReferenceListArrayOutput) ToProjectUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectUserReferenceListArrayOutput {
	return o
}

func (o ProjectUserReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectUserReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserReferenceList {
		return vs[0].([]ProjectUserReferenceList)[vs[1].(int)]
	}).(ProjectUserReferenceListOutput)
}

type ProjectVpcReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectVpcReferenceListInput is an input type that accepts ProjectVpcReferenceListArgs and ProjectVpcReferenceListOutput values.
// You can construct a concrete instance of `ProjectVpcReferenceListInput` via:
//
//	ProjectVpcReferenceListArgs{...}
type ProjectVpcReferenceListInput interface {
	pulumi.Input

	ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput
	ToProjectVpcReferenceListOutputWithContext(context.Context) ProjectVpcReferenceListOutput
}

type ProjectVpcReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectVpcReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcReferenceList)(nil)).Elem()
}

func (i ProjectVpcReferenceListArgs) ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput {
	return i.ToProjectVpcReferenceListOutputWithContext(context.Background())
}

func (i ProjectVpcReferenceListArgs) ToProjectVpcReferenceListOutputWithContext(ctx context.Context) ProjectVpcReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcReferenceListOutput)
}

// ProjectVpcReferenceListArrayInput is an input type that accepts ProjectVpcReferenceListArray and ProjectVpcReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectVpcReferenceListArrayInput` via:
//
//	ProjectVpcReferenceListArray{ ProjectVpcReferenceListArgs{...} }
type ProjectVpcReferenceListArrayInput interface {
	pulumi.Input

	ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput
	ToProjectVpcReferenceListArrayOutputWithContext(context.Context) ProjectVpcReferenceListArrayOutput
}

type ProjectVpcReferenceListArray []ProjectVpcReferenceListInput

func (ProjectVpcReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVpcReferenceList)(nil)).Elem()
}

func (i ProjectVpcReferenceListArray) ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput {
	return i.ToProjectVpcReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectVpcReferenceListArray) ToProjectVpcReferenceListArrayOutputWithContext(ctx context.Context) ProjectVpcReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcReferenceListArrayOutput)
}

type ProjectVpcReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectVpcReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcReferenceList)(nil)).Elem()
}

func (o ProjectVpcReferenceListOutput) ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput {
	return o
}

func (o ProjectVpcReferenceListOutput) ToProjectVpcReferenceListOutputWithContext(ctx context.Context) ProjectVpcReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectVpcReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectVpcReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectVpcReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectVpcReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectVpcReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVpcReferenceList)(nil)).Elem()
}

func (o ProjectVpcReferenceListArrayOutput) ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput {
	return o
}

func (o ProjectVpcReferenceListArrayOutput) ToProjectVpcReferenceListArrayOutputWithContext(ctx context.Context) ProjectVpcReferenceListArrayOutput {
	return o
}

func (o ProjectVpcReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectVpcReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectVpcReferenceList {
		return vs[0].([]ProjectVpcReferenceList)[vs[1].(int)]
	}).(ProjectVpcReferenceListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityList struct {
	DestinationAvailabilityZoneIndex *int                                                                 `pulumi:"destinationAvailabilityZoneIndex"`
	SnapshotScheduleLists            []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList `pulumi:"snapshotScheduleLists"`
	SourceAvailabilityZoneIndex      *int                                                                 `pulumi:"sourceAvailabilityZoneIndex"`
}

// ProtectionRuleAvailabilityZoneConnectivityListInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListArgs and ProtectionRuleAvailabilityZoneConnectivityListOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput
	ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListArgs struct {
	DestinationAvailabilityZoneIndex pulumi.IntPtrInput                                                           `pulumi:"destinationAvailabilityZoneIndex"`
	SnapshotScheduleLists            ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput `pulumi:"snapshotScheduleLists"`
	SourceAvailabilityZoneIndex      pulumi.IntPtrInput                                                           `pulumi:"sourceAvailabilityZoneIndex"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArgs) ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArgs) ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListOutput)
}

// ProtectionRuleAvailabilityZoneConnectivityListArrayInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListArray and ProtectionRuleAvailabilityZoneConnectivityListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListArrayInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListArray{ ProtectionRuleAvailabilityZoneConnectivityListArgs{...} }
type ProtectionRuleAvailabilityZoneConnectivityListArrayInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput
	ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListArray []ProtectionRuleAvailabilityZoneConnectivityListInput

func (ProtectionRuleAvailabilityZoneConnectivityListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArray) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArray) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListArrayOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) DestinationAvailabilityZoneIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) *int { return v.DestinationAvailabilityZoneIndex }).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) SnapshotScheduleLists() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList {
		return v.SnapshotScheduleLists
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) SourceAvailabilityZoneIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) *int { return v.SourceAvailabilityZoneIndex }).(pulumi.IntPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleAvailabilityZoneConnectivityList {
		return vs[0].([]ProtectionRuleAvailabilityZoneConnectivityList)[vs[1].(int)]
	}).(ProtectionRuleAvailabilityZoneConnectivityListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList struct {
	AutoSuspendTimeoutSecs        *int                                                                                             `pulumi:"autoSuspendTimeoutSecs"`
	LocalSnapshotRetentionPolicy  *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy  `pulumi:"localSnapshotRetentionPolicy"`
	RecoveryPointObjectiveSecs    int                                                                                              `pulumi:"recoveryPointObjectiveSecs"`
	RemoteSnapshotRetentionPolicy *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy `pulumi:"remoteSnapshotRetentionPolicy"`
	SnapshotType                  *string                                                                                          `pulumi:"snapshotType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs struct {
	AutoSuspendTimeoutSecs        pulumi.IntPtrInput                                                                                      `pulumi:"autoSuspendTimeoutSecs"`
	LocalSnapshotRetentionPolicy  ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput  `pulumi:"localSnapshotRetentionPolicy"`
	RecoveryPointObjectiveSecs    pulumi.IntInput                                                                                         `pulumi:"recoveryPointObjectiveSecs"`
	RemoteSnapshotRetentionPolicy ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput `pulumi:"remoteSnapshotRetentionPolicy"`
	SnapshotType                  pulumi.StringPtrInput                                                                                   `pulumi:"snapshotType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray{ ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{...} }
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) AutoSuspendTimeoutSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *int {
		return v.AutoSuspendTimeoutSecs
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) LocalSnapshotRetentionPolicy() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		return v.LocalSnapshotRetentionPolicy
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) RecoveryPointObjectiveSecs() pulumi.IntOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) int {
		return v.RecoveryPointObjectiveSecs
	}).(pulumi.IntOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) RemoteSnapshotRetentionPolicy() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		return v.RemoteSnapshotRetentionPolicy
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) SnapshotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *string {
		return v.SnapshotType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList {
		return vs[0].([]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)[vs[1].(int)]
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy struct {
	NumSnapshots                              *int    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             *int    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType *string `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs struct {
	NumSnapshots                              pulumi.IntPtrInput    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             pulumi.IntPtrInput    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType pulumi.StringPtrInput `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput)
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput).ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs, ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtr and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput` via:
//
//	        ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput
}

type protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs

func ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtr(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput {
	return (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType)(v)
}

func (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		return &v
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *string {
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) Elem() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy
		return ret
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy struct {
	NumSnapshots                              *int    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             *int    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType *string `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs struct {
	NumSnapshots                              pulumi.IntPtrInput    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             pulumi.IntPtrInput    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType pulumi.StringPtrInput `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput)
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput).ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs, ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtr and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput` via:
//
//	        ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput
}

type protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs

func ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtr(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput {
	return (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType)(v)
}

func (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		return &v
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *string {
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) Elem() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy
		return ret
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategory struct {
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// ProtectionRuleCategoryInput is an input type that accepts ProtectionRuleCategoryArgs and ProtectionRuleCategoryOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryInput` via:
//
//	ProtectionRuleCategoryArgs{...}
type ProtectionRuleCategoryInput interface {
	pulumi.Input

	ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput
	ToProtectionRuleCategoryOutputWithContext(context.Context) ProtectionRuleCategoryOutput
}

type ProtectionRuleCategoryArgs struct {
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProtectionRuleCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategory)(nil)).Elem()
}

func (i ProtectionRuleCategoryArgs) ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput {
	return i.ToProtectionRuleCategoryOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryArgs) ToProtectionRuleCategoryOutputWithContext(ctx context.Context) ProtectionRuleCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryOutput)
}

// ProtectionRuleCategoryArrayInput is an input type that accepts ProtectionRuleCategoryArray and ProtectionRuleCategoryArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryArrayInput` via:
//
//	ProtectionRuleCategoryArray{ ProtectionRuleCategoryArgs{...} }
type ProtectionRuleCategoryArrayInput interface {
	pulumi.Input

	ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput
	ToProtectionRuleCategoryArrayOutputWithContext(context.Context) ProtectionRuleCategoryArrayOutput
}

type ProtectionRuleCategoryArray []ProtectionRuleCategoryInput

func (ProtectionRuleCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategory)(nil)).Elem()
}

func (i ProtectionRuleCategoryArray) ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput {
	return i.ToProtectionRuleCategoryArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryArray) ToProtectionRuleCategoryArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryArrayOutput)
}

type ProtectionRuleCategoryOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategory)(nil)).Elem()
}

func (o ProtectionRuleCategoryOutput) ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput {
	return o
}

func (o ProtectionRuleCategoryOutput) ToProtectionRuleCategoryOutputWithContext(ctx context.Context) ProtectionRuleCategoryOutput {
	return o
}

// The name for the protection rule.
func (o ProtectionRuleCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProtectionRuleCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategory)(nil)).Elem()
}

func (o ProtectionRuleCategoryArrayOutput) ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput {
	return o
}

func (o ProtectionRuleCategoryArrayOutput) ToProtectionRuleCategoryArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryArrayOutput {
	return o
}

func (o ProtectionRuleCategoryArrayOutput) Index(i pulumi.IntInput) ProtectionRuleCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleCategory {
		return vs[0].([]ProtectionRuleCategory)[vs[1].(int)]
	}).(ProtectionRuleCategoryOutput)
}

type ProtectionRuleCategoryFilter struct {
	KindLists []string                            `pulumi:"kindLists"`
	Params    []ProtectionRuleCategoryFilterParam `pulumi:"params"`
	Type      *string                             `pulumi:"type"`
}

// ProtectionRuleCategoryFilterInput is an input type that accepts ProtectionRuleCategoryFilterArgs and ProtectionRuleCategoryFilterOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterInput` via:
//
//	ProtectionRuleCategoryFilterArgs{...}
type ProtectionRuleCategoryFilterInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput
	ToProtectionRuleCategoryFilterOutputWithContext(context.Context) ProtectionRuleCategoryFilterOutput
}

type ProtectionRuleCategoryFilterArgs struct {
	KindLists pulumi.StringArrayInput                     `pulumi:"kindLists"`
	Params    ProtectionRuleCategoryFilterParamArrayInput `pulumi:"params"`
	Type      pulumi.StringPtrInput                       `pulumi:"type"`
}

func (ProtectionRuleCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput {
	return i.ToProtectionRuleCategoryFilterOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterOutput)
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return i.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterOutput).ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx)
}

// ProtectionRuleCategoryFilterPtrInput is an input type that accepts ProtectionRuleCategoryFilterArgs, ProtectionRuleCategoryFilterPtr and ProtectionRuleCategoryFilterPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterPtrInput` via:
//
//	        ProtectionRuleCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleCategoryFilterPtrInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput
	ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Context) ProtectionRuleCategoryFilterPtrOutput
}

type protectionRuleCategoryFilterPtrType ProtectionRuleCategoryFilterArgs

func ProtectionRuleCategoryFilterPtr(v *ProtectionRuleCategoryFilterArgs) ProtectionRuleCategoryFilterPtrInput {
	return (*protectionRuleCategoryFilterPtrType)(v)
}

func (*protectionRuleCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (i *protectionRuleCategoryFilterPtrType) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return i.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *protectionRuleCategoryFilterPtrType) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterPtrOutput)
}

type ProtectionRuleCategoryFilterOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput {
	return o
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterOutput {
	return o
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return o.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleCategoryFilter) *ProtectionRuleCategoryFilter {
		return &v
	}).(ProtectionRuleCategoryFilterPtrOutput)
}

func (o ProtectionRuleCategoryFilterOutput) KindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) []string { return v.KindLists }).(pulumi.StringArrayOutput)
}

func (o ProtectionRuleCategoryFilterOutput) Params() ProtectionRuleCategoryFilterParamArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) []ProtectionRuleCategoryFilterParam { return v.Params }).(ProtectionRuleCategoryFilterParamArrayOutput)
}

func (o ProtectionRuleCategoryFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterPtrOutput) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return o
}

func (o ProtectionRuleCategoryFilterPtrOutput) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return o
}

func (o ProtectionRuleCategoryFilterPtrOutput) Elem() ProtectionRuleCategoryFilterOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) ProtectionRuleCategoryFilter {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleCategoryFilter
		return ret
	}).(ProtectionRuleCategoryFilterOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) KindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) []string {
		if v == nil {
			return nil
		}
		return v.KindLists
	}).(pulumi.StringArrayOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) Params() ProtectionRuleCategoryFilterParamArrayOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) []ProtectionRuleCategoryFilterParam {
		if v == nil {
			return nil
		}
		return v.Params
	}).(ProtectionRuleCategoryFilterParamArrayOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryFilterParam struct {
	// The name for the protection rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// ProtectionRuleCategoryFilterParamInput is an input type that accepts ProtectionRuleCategoryFilterParamArgs and ProtectionRuleCategoryFilterParamOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterParamInput` via:
//
//	ProtectionRuleCategoryFilterParamArgs{...}
type ProtectionRuleCategoryFilterParamInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput
	ToProtectionRuleCategoryFilterParamOutputWithContext(context.Context) ProtectionRuleCategoryFilterParamOutput
}

type ProtectionRuleCategoryFilterParamArgs struct {
	// The name for the protection rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProtectionRuleCategoryFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterParamArgs) ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput {
	return i.ToProtectionRuleCategoryFilterParamOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterParamArgs) ToProtectionRuleCategoryFilterParamOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterParamOutput)
}

// ProtectionRuleCategoryFilterParamArrayInput is an input type that accepts ProtectionRuleCategoryFilterParamArray and ProtectionRuleCategoryFilterParamArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterParamArrayInput` via:
//
//	ProtectionRuleCategoryFilterParamArray{ ProtectionRuleCategoryFilterParamArgs{...} }
type ProtectionRuleCategoryFilterParamArrayInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput
	ToProtectionRuleCategoryFilterParamArrayOutputWithContext(context.Context) ProtectionRuleCategoryFilterParamArrayOutput
}

type ProtectionRuleCategoryFilterParamArray []ProtectionRuleCategoryFilterParamInput

func (ProtectionRuleCategoryFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterParamArray) ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput {
	return i.ToProtectionRuleCategoryFilterParamArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterParamArray) ToProtectionRuleCategoryFilterParamArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterParamArrayOutput)
}

type ProtectionRuleCategoryFilterParamOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterParamOutput) ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamOutput) ToProtectionRuleCategoryFilterParamOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamOutput {
	return o
}

// The name for the protection rule.
func (o ProtectionRuleCategoryFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProtectionRuleCategoryFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProtectionRuleCategoryFilterParamArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) ToProtectionRuleCategoryFilterParamArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamArrayOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) Index(i pulumi.IntInput) ProtectionRuleCategoryFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleCategoryFilterParam {
		return vs[0].([]ProtectionRuleCategoryFilterParam)[vs[1].(int)]
	}).(ProtectionRuleCategoryFilterParamOutput)
}

type ProtectionRuleOrderedAvailabilityZoneList struct {
	AvailabilityZoneUrl *string `pulumi:"availabilityZoneUrl"`
	ClusterUuid         *string `pulumi:"clusterUuid"`
}

// ProtectionRuleOrderedAvailabilityZoneListInput is an input type that accepts ProtectionRuleOrderedAvailabilityZoneListArgs and ProtectionRuleOrderedAvailabilityZoneListOutput values.
// You can construct a concrete instance of `ProtectionRuleOrderedAvailabilityZoneListInput` via:
//
//	ProtectionRuleOrderedAvailabilityZoneListArgs{...}
type ProtectionRuleOrderedAvailabilityZoneListInput interface {
	pulumi.Input

	ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput
	ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput
}

type ProtectionRuleOrderedAvailabilityZoneListArgs struct {
	AvailabilityZoneUrl pulumi.StringPtrInput `pulumi:"availabilityZoneUrl"`
	ClusterUuid         pulumi.StringPtrInput `pulumi:"clusterUuid"`
}

func (ProtectionRuleOrderedAvailabilityZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (i ProtectionRuleOrderedAvailabilityZoneListArgs) ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput {
	return i.ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(context.Background())
}

func (i ProtectionRuleOrderedAvailabilityZoneListArgs) ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOrderedAvailabilityZoneListOutput)
}

// ProtectionRuleOrderedAvailabilityZoneListArrayInput is an input type that accepts ProtectionRuleOrderedAvailabilityZoneListArray and ProtectionRuleOrderedAvailabilityZoneListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleOrderedAvailabilityZoneListArrayInput` via:
//
//	ProtectionRuleOrderedAvailabilityZoneListArray{ ProtectionRuleOrderedAvailabilityZoneListArgs{...} }
type ProtectionRuleOrderedAvailabilityZoneListArrayInput interface {
	pulumi.Input

	ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput
	ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput
}

type ProtectionRuleOrderedAvailabilityZoneListArray []ProtectionRuleOrderedAvailabilityZoneListInput

func (ProtectionRuleOrderedAvailabilityZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (i ProtectionRuleOrderedAvailabilityZoneListArray) ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return i.ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleOrderedAvailabilityZoneListArray) ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOrderedAvailabilityZoneListArrayOutput)
}

type ProtectionRuleOrderedAvailabilityZoneListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOrderedAvailabilityZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) AvailabilityZoneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOrderedAvailabilityZoneList) *string { return v.AvailabilityZoneUrl }).(pulumi.StringPtrOutput)
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOrderedAvailabilityZoneList) *string { return v.ClusterUuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleOrderedAvailabilityZoneListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleOrderedAvailabilityZoneList {
		return vs[0].([]ProtectionRuleOrderedAvailabilityZoneList)[vs[1].(int)]
	}).(ProtectionRuleOrderedAvailabilityZoneListOutput)
}

type ProtectionRuleOwnerReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// ProtectionRuleOwnerReferenceInput is an input type that accepts ProtectionRuleOwnerReferenceArgs and ProtectionRuleOwnerReferenceOutput values.
// You can construct a concrete instance of `ProtectionRuleOwnerReferenceInput` via:
//
//	ProtectionRuleOwnerReferenceArgs{...}
type ProtectionRuleOwnerReferenceInput interface {
	pulumi.Input

	ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput
	ToProtectionRuleOwnerReferenceOutputWithContext(context.Context) ProtectionRuleOwnerReferenceOutput
}

type ProtectionRuleOwnerReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ProtectionRuleOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOwnerReference)(nil)).Elem()
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput {
	return i.ToProtectionRuleOwnerReferenceOutputWithContext(context.Background())
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferenceOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferenceOutput)
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return i.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferenceOutput).ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx)
}

// ProtectionRuleOwnerReferencePtrInput is an input type that accepts ProtectionRuleOwnerReferenceArgs, ProtectionRuleOwnerReferencePtr and ProtectionRuleOwnerReferencePtrOutput values.
// You can construct a concrete instance of `ProtectionRuleOwnerReferencePtrInput` via:
//
//	        ProtectionRuleOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleOwnerReferencePtrInput interface {
	pulumi.Input

	ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput
	ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Context) ProtectionRuleOwnerReferencePtrOutput
}

type protectionRuleOwnerReferencePtrType ProtectionRuleOwnerReferenceArgs

func ProtectionRuleOwnerReferencePtr(v *ProtectionRuleOwnerReferenceArgs) ProtectionRuleOwnerReferencePtrInput {
	return (*protectionRuleOwnerReferencePtrType)(v)
}

func (*protectionRuleOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleOwnerReference)(nil)).Elem()
}

func (i *protectionRuleOwnerReferencePtrType) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return i.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *protectionRuleOwnerReferencePtrType) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferencePtrOutput)
}

type ProtectionRuleOwnerReferenceOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOwnerReference)(nil)).Elem()
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput {
	return o
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferenceOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferenceOutput {
	return o
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return o.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleOwnerReference) *ProtectionRuleOwnerReference {
		return &v
	}).(ProtectionRuleOwnerReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleOwnerReference)(nil)).Elem()
}

func (o ProtectionRuleOwnerReferencePtrOutput) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return o
}

func (o ProtectionRuleOwnerReferencePtrOutput) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return o
}

func (o ProtectionRuleOwnerReferencePtrOutput) Elem() ProtectionRuleOwnerReferenceOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) ProtectionRuleOwnerReference {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleOwnerReference
		return ret
	}).(ProtectionRuleOwnerReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleProjectReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// ProtectionRuleProjectReferenceInput is an input type that accepts ProtectionRuleProjectReferenceArgs and ProtectionRuleProjectReferenceOutput values.
// You can construct a concrete instance of `ProtectionRuleProjectReferenceInput` via:
//
//	ProtectionRuleProjectReferenceArgs{...}
type ProtectionRuleProjectReferenceInput interface {
	pulumi.Input

	ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput
	ToProtectionRuleProjectReferenceOutputWithContext(context.Context) ProtectionRuleProjectReferenceOutput
}

type ProtectionRuleProjectReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ProtectionRuleProjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleProjectReference)(nil)).Elem()
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput {
	return i.ToProtectionRuleProjectReferenceOutputWithContext(context.Background())
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferenceOutputWithContext(ctx context.Context) ProtectionRuleProjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferenceOutput)
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return i.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferenceOutput).ToProtectionRuleProjectReferencePtrOutputWithContext(ctx)
}

// ProtectionRuleProjectReferencePtrInput is an input type that accepts ProtectionRuleProjectReferenceArgs, ProtectionRuleProjectReferencePtr and ProtectionRuleProjectReferencePtrOutput values.
// You can construct a concrete instance of `ProtectionRuleProjectReferencePtrInput` via:
//
//	        ProtectionRuleProjectReferenceArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleProjectReferencePtrInput interface {
	pulumi.Input

	ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput
	ToProtectionRuleProjectReferencePtrOutputWithContext(context.Context) ProtectionRuleProjectReferencePtrOutput
}

type protectionRuleProjectReferencePtrType ProtectionRuleProjectReferenceArgs

func ProtectionRuleProjectReferencePtr(v *ProtectionRuleProjectReferenceArgs) ProtectionRuleProjectReferencePtrInput {
	return (*protectionRuleProjectReferencePtrType)(v)
}

func (*protectionRuleProjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleProjectReference)(nil)).Elem()
}

func (i *protectionRuleProjectReferencePtrType) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return i.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (i *protectionRuleProjectReferencePtrType) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferencePtrOutput)
}

type ProtectionRuleProjectReferenceOutput struct{ *pulumi.OutputState }

func (ProtectionRuleProjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleProjectReference)(nil)).Elem()
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput {
	return o
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferenceOutputWithContext(ctx context.Context) ProtectionRuleProjectReferenceOutput {
	return o
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return o.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleProjectReference) *ProtectionRuleProjectReference {
		return &v
	}).(ProtectionRuleProjectReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleProjectReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleProjectReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleProjectReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleProjectReferencePtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleProjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleProjectReference)(nil)).Elem()
}

func (o ProtectionRuleProjectReferencePtrOutput) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return o
}

func (o ProtectionRuleProjectReferencePtrOutput) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return o
}

func (o ProtectionRuleProjectReferencePtrOutput) Elem() ProtectionRuleProjectReferenceOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) ProtectionRuleProjectReference {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleProjectReference
		return ret
	}).(ProtectionRuleProjectReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleProjectReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleProjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleProjectReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanCategory struct {
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// RecoveryPlanCategoryInput is an input type that accepts RecoveryPlanCategoryArgs and RecoveryPlanCategoryOutput values.
// You can construct a concrete instance of `RecoveryPlanCategoryInput` via:
//
//	RecoveryPlanCategoryArgs{...}
type RecoveryPlanCategoryInput interface {
	pulumi.Input

	ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput
	ToRecoveryPlanCategoryOutputWithContext(context.Context) RecoveryPlanCategoryOutput
}

type RecoveryPlanCategoryArgs struct {
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecoveryPlanCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanCategory)(nil)).Elem()
}

func (i RecoveryPlanCategoryArgs) ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput {
	return i.ToRecoveryPlanCategoryOutputWithContext(context.Background())
}

func (i RecoveryPlanCategoryArgs) ToRecoveryPlanCategoryOutputWithContext(ctx context.Context) RecoveryPlanCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanCategoryOutput)
}

// RecoveryPlanCategoryArrayInput is an input type that accepts RecoveryPlanCategoryArray and RecoveryPlanCategoryArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanCategoryArrayInput` via:
//
//	RecoveryPlanCategoryArray{ RecoveryPlanCategoryArgs{...} }
type RecoveryPlanCategoryArrayInput interface {
	pulumi.Input

	ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput
	ToRecoveryPlanCategoryArrayOutputWithContext(context.Context) RecoveryPlanCategoryArrayOutput
}

type RecoveryPlanCategoryArray []RecoveryPlanCategoryInput

func (RecoveryPlanCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanCategory)(nil)).Elem()
}

func (i RecoveryPlanCategoryArray) ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput {
	return i.ToRecoveryPlanCategoryArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanCategoryArray) ToRecoveryPlanCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanCategoryArrayOutput)
}

type RecoveryPlanCategoryOutput struct{ *pulumi.OutputState }

func (RecoveryPlanCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanCategory)(nil)).Elem()
}

func (o RecoveryPlanCategoryOutput) ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput {
	return o
}

func (o RecoveryPlanCategoryOutput) ToRecoveryPlanCategoryOutputWithContext(ctx context.Context) RecoveryPlanCategoryOutput {
	return o
}

// The name for the Recovery Plan.
func (o RecoveryPlanCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o RecoveryPlanCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecoveryPlanCategoryArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanCategory)(nil)).Elem()
}

func (o RecoveryPlanCategoryArrayOutput) ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput {
	return o
}

func (o RecoveryPlanCategoryArrayOutput) ToRecoveryPlanCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanCategoryArrayOutput {
	return o
}

func (o RecoveryPlanCategoryArrayOutput) Index(i pulumi.IntInput) RecoveryPlanCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanCategory {
		return vs[0].([]RecoveryPlanCategory)[vs[1].(int)]
	}).(RecoveryPlanCategoryOutput)
}

type RecoveryPlanOwnerReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanOwnerReferenceInput is an input type that accepts RecoveryPlanOwnerReferenceArgs and RecoveryPlanOwnerReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanOwnerReferenceInput` via:
//
//	RecoveryPlanOwnerReferenceArgs{...}
type RecoveryPlanOwnerReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput
	ToRecoveryPlanOwnerReferenceOutputWithContext(context.Context) RecoveryPlanOwnerReferenceOutput
}

type RecoveryPlanOwnerReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanOwnerReference)(nil)).Elem()
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput {
	return i.ToRecoveryPlanOwnerReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferenceOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferenceOutput)
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return i.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferenceOutput).ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanOwnerReferencePtrInput is an input type that accepts RecoveryPlanOwnerReferenceArgs, RecoveryPlanOwnerReferencePtr and RecoveryPlanOwnerReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanOwnerReferencePtrInput` via:
//
//	        RecoveryPlanOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanOwnerReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput
	ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Context) RecoveryPlanOwnerReferencePtrOutput
}

type recoveryPlanOwnerReferencePtrType RecoveryPlanOwnerReferenceArgs

func RecoveryPlanOwnerReferencePtr(v *RecoveryPlanOwnerReferenceArgs) RecoveryPlanOwnerReferencePtrInput {
	return (*recoveryPlanOwnerReferencePtrType)(v)
}

func (*recoveryPlanOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanOwnerReference)(nil)).Elem()
}

func (i *recoveryPlanOwnerReferencePtrType) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return i.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanOwnerReferencePtrType) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferencePtrOutput)
}

type RecoveryPlanOwnerReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanOwnerReference)(nil)).Elem()
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput {
	return o
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferenceOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferenceOutput {
	return o
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return o.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanOwnerReference) *RecoveryPlanOwnerReference {
		return &v
	}).(RecoveryPlanOwnerReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type RecoveryPlanOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanOwnerReference)(nil)).Elem()
}

func (o RecoveryPlanOwnerReferencePtrOutput) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return o
}

func (o RecoveryPlanOwnerReferencePtrOutput) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return o
}

func (o RecoveryPlanOwnerReferencePtrOutput) Elem() RecoveryPlanOwnerReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) RecoveryPlanOwnerReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanOwnerReference
		return ret
	}).(RecoveryPlanOwnerReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParameters struct {
	FloatingIpAssignmentLists []RecoveryPlanParametersFloatingIpAssignmentList `pulumi:"floatingIpAssignmentLists"`
	NetworkMappingLists       []RecoveryPlanParametersNetworkMappingList       `pulumi:"networkMappingLists"`
}

// RecoveryPlanParametersInput is an input type that accepts RecoveryPlanParametersArgs and RecoveryPlanParametersOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersInput` via:
//
//	RecoveryPlanParametersArgs{...}
type RecoveryPlanParametersInput interface {
	pulumi.Input

	ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput
	ToRecoveryPlanParametersOutputWithContext(context.Context) RecoveryPlanParametersOutput
}

type RecoveryPlanParametersArgs struct {
	FloatingIpAssignmentLists RecoveryPlanParametersFloatingIpAssignmentListArrayInput `pulumi:"floatingIpAssignmentLists"`
	NetworkMappingLists       RecoveryPlanParametersNetworkMappingListArrayInput       `pulumi:"networkMappingLists"`
}

func (RecoveryPlanParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParameters)(nil)).Elem()
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput {
	return i.ToRecoveryPlanParametersOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersOutputWithContext(ctx context.Context) RecoveryPlanParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersOutput)
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return i.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersOutput).ToRecoveryPlanParametersPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersPtrInput is an input type that accepts RecoveryPlanParametersArgs, RecoveryPlanParametersPtr and RecoveryPlanParametersPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersPtrInput` via:
//
//	        RecoveryPlanParametersArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput
	ToRecoveryPlanParametersPtrOutputWithContext(context.Context) RecoveryPlanParametersPtrOutput
}

type recoveryPlanParametersPtrType RecoveryPlanParametersArgs

func RecoveryPlanParametersPtr(v *RecoveryPlanParametersArgs) RecoveryPlanParametersPtrInput {
	return (*recoveryPlanParametersPtrType)(v)
}

func (*recoveryPlanParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParameters)(nil)).Elem()
}

func (i *recoveryPlanParametersPtrType) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return i.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersPtrType) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersPtrOutput)
}

type RecoveryPlanParametersOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParameters)(nil)).Elem()
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput {
	return o
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersOutputWithContext(ctx context.Context) RecoveryPlanParametersOutput {
	return o
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return o.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParameters) *RecoveryPlanParameters {
		return &v
	}).(RecoveryPlanParametersPtrOutput)
}

func (o RecoveryPlanParametersOutput) FloatingIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParameters) []RecoveryPlanParametersFloatingIpAssignmentList {
		return v.FloatingIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersOutput) NetworkMappingLists() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParameters) []RecoveryPlanParametersNetworkMappingList {
		return v.NetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParameters)(nil)).Elem()
}

func (o RecoveryPlanParametersPtrOutput) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return o
}

func (o RecoveryPlanParametersPtrOutput) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return o
}

func (o RecoveryPlanParametersPtrOutput) Elem() RecoveryPlanParametersOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) RecoveryPlanParameters {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParameters
		return ret
	}).(RecoveryPlanParametersOutput)
}

func (o RecoveryPlanParametersPtrOutput) FloatingIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) []RecoveryPlanParametersFloatingIpAssignmentList {
		if v == nil {
			return nil
		}
		return v.FloatingIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersPtrOutput) NetworkMappingLists() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) []RecoveryPlanParametersNetworkMappingList {
		if v == nil {
			return nil
		}
		return v.NetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentList struct {
	AvailabilityZoneUrl string                                                             `pulumi:"availabilityZoneUrl"`
	VmIpAssignmentLists []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList `pulumi:"vmIpAssignmentLists"`
}

// RecoveryPlanParametersFloatingIpAssignmentListInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListArgs and RecoveryPlanParametersFloatingIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListArgs struct {
	AvailabilityZoneUrl pulumi.StringInput                                                         `pulumi:"availabilityZoneUrl"`
	VmIpAssignmentLists RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput `pulumi:"vmIpAssignmentLists"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListOutput)
}

// RecoveryPlanParametersFloatingIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListArray and RecoveryPlanParametersFloatingIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListArray{ RecoveryPlanParametersFloatingIpAssignmentListArgs{...} }
type RecoveryPlanParametersFloatingIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListArray []RecoveryPlanParametersFloatingIpAssignmentListInput

func (RecoveryPlanParametersFloatingIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) AvailabilityZoneUrl() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentList) string { return v.AvailabilityZoneUrl }).(pulumi.StringOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) VmIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentList) []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList {
		return v.VmIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersFloatingIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersFloatingIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersFloatingIpAssignmentListOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList struct {
	RecoveryFloatingIpConfig *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig `pulumi:"recoveryFloatingIpConfig"`
	TestFloatingIpConfig     *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig     `pulumi:"testFloatingIpConfig"`
	VmNicInformation         RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation          `pulumi:"vmNicInformation"`
	VmReference              RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference               `pulumi:"vmReference"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs struct {
	RecoveryFloatingIpConfig RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput `pulumi:"recoveryFloatingIpConfig"`
	TestFloatingIpConfig     RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput     `pulumi:"testFloatingIpConfig"`
	VmNicInformation         RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput            `pulumi:"vmNicInformation"`
	VmReference              RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput                 `pulumi:"vmReference"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray{ RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{...} }
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) RecoveryFloatingIpConfig() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		return v.RecoveryFloatingIpConfig
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) TestFloatingIpConfig() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		return v.TestFloatingIpConfig
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) VmNicInformation() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation {
		return v.VmNicInformation
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) VmReference() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference {
		return v.VmReference
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig struct {
	Ip                        *string `pulumi:"ip"`
	ShouldAllocateDynamically *bool   `pulumi:"shouldAllocateDynamically"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs struct {
	Ip                        pulumi.StringPtrInput `pulumi:"ip"`
	ShouldAllocateDynamically pulumi.BoolPtrInput   `pulumi:"shouldAllocateDynamically"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput)
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput).ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs, RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtr and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput` via:
//
//	        RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput
}

type recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs

func RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtr(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput {
	return (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType)(v)
}

func (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		return &v
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *bool {
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) Elem() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig
		return ret
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig struct {
	Ip                        *string `pulumi:"ip"`
	ShouldAllocateDynamically *bool   `pulumi:"shouldAllocateDynamically"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs struct {
	Ip                        pulumi.StringPtrInput `pulumi:"ip"`
	ShouldAllocateDynamically pulumi.BoolPtrInput   `pulumi:"shouldAllocateDynamically"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput)
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput).ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs, RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtr and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput` via:
//
//	        RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput
}

type recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs

func RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtr(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput {
	return (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType)(v)
}

func (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		return &v
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *bool {
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) Elem() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig
		return ret
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation struct {
	Ip *string `pulumi:"ip"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs struct {
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingList struct {
	AreNetworksStretched                *bool                                                                        `pulumi:"areNetworksStretched"`
	AvailabilityZoneNetworkMappingLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList `pulumi:"availabilityZoneNetworkMappingLists"`
}

// RecoveryPlanParametersNetworkMappingListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListArgs and RecoveryPlanParametersNetworkMappingListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListArgs{...}
type RecoveryPlanParametersNetworkMappingListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput
	ToRecoveryPlanParametersNetworkMappingListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListOutput
}

type RecoveryPlanParametersNetworkMappingListArgs struct {
	AreNetworksStretched                pulumi.BoolPtrInput                                                                  `pulumi:"areNetworksStretched"`
	AvailabilityZoneNetworkMappingLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput `pulumi:"availabilityZoneNetworkMappingLists"`
}

func (RecoveryPlanParametersNetworkMappingListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListOutput)
}

// RecoveryPlanParametersNetworkMappingListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListArray and RecoveryPlanParametersNetworkMappingListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListArray{ RecoveryPlanParametersNetworkMappingListArgs{...} }
type RecoveryPlanParametersNetworkMappingListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListArray []RecoveryPlanParametersNetworkMappingListInput

func (RecoveryPlanParametersNetworkMappingListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListOutput) AreNetworksStretched() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingList) *bool { return v.AreNetworksStretched }).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListOutput) AvailabilityZoneNetworkMappingLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList {
		return v.AvailabilityZoneNetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList struct {
	AvailabilityZoneUrl       *string                                                                                              `pulumi:"availabilityZoneUrl"`
	ClusterReferenceLists     []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList     `pulumi:"clusterReferenceLists"`
	RecoveryIpAssignmentLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList `pulumi:"recoveryIpAssignmentLists"`
	RecoveryNetwork           *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork           `pulumi:"recoveryNetwork"`
	TestIpAssignmentLists     []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList     `pulumi:"testIpAssignmentLists"`
	TestNetwork               *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork               `pulumi:"testNetwork"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs struct {
	AvailabilityZoneUrl       pulumi.StringPtrInput                                                                                        `pulumi:"availabilityZoneUrl"`
	ClusterReferenceLists     RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput     `pulumi:"clusterReferenceLists"`
	RecoveryIpAssignmentLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput `pulumi:"recoveryIpAssignmentLists"`
	RecoveryNetwork           RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput            `pulumi:"recoveryNetwork"`
	TestIpAssignmentLists     RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput     `pulumi:"testIpAssignmentLists"`
	TestNetwork               RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput                `pulumi:"testNetwork"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) AvailabilityZoneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *string {
		return v.AvailabilityZoneUrl
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ClusterReferenceLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList {
		return v.ClusterReferenceLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) RecoveryIpAssignmentLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList {
		return v.RecoveryIpAssignmentLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) RecoveryNetwork() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		return v.RecoveryNetwork
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) TestIpAssignmentLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList {
		return v.TestIpAssignmentLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) TestNetwork() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork {
		return v.TestNetwork
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList struct {
	IpConfigLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference    `pulumi:"vmReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs struct {
	IpConfigLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput       `pulumi:"vmReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) IpConfigLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList {
		return v.IpConfigLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) VmReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference {
		return v.VmReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList struct {
	IpAddress string `pulumi:"ipAddress"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList) string {
		return v.IpAddress
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork struct {
	// The name for the Recovery Plan.
	Name                    *string                                                                                                           `pulumi:"name"`
	SubnetLists             []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList             `pulumi:"subnetLists"`
	UseVpcReference         *bool                                                                                                             `pulumi:"useVpcReference"`
	VirtualNetworkReference *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference `pulumi:"virtualNetworkReference"`
	VpcReference            *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference            `pulumi:"vpcReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs struct {
	// The name for the Recovery Plan.
	Name                    pulumi.StringPtrInput                                                                                                    `pulumi:"name"`
	SubnetLists             RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput            `pulumi:"subnetLists"`
	UseVpcReference         pulumi.BoolPtrInput                                                                                                      `pulumi:"useVpcReference"`
	VirtualNetworkReference RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput `pulumi:"virtualNetworkReference"`
	VpcReference            RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput            `pulumi:"vpcReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *bool {
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		if v == nil {
			return nil
		}
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		if v == nil {
			return nil
		}
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList struct {
	ExternalConnectivityState *string `pulumi:"externalConnectivityState"`
	GatewayIp                 string  `pulumi:"gatewayIp"`
	PrefixLength              int     `pulumi:"prefixLength"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs struct {
	ExternalConnectivityState pulumi.StringPtrInput `pulumi:"externalConnectivityState"`
	GatewayIp                 pulumi.StringInput    `pulumi:"gatewayIp"`
	PrefixLength              pulumi.IntInput       `pulumi:"prefixLength"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ExternalConnectivityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) *string {
		return v.ExternalConnectivityState
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) string {
		return v.GatewayIp
	}).(pulumi.StringOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) int {
		return v.PrefixLength
	}).(pulumi.IntOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList struct {
	IpConfigLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference    `pulumi:"vmReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs struct {
	IpConfigLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayInput `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceInput       `pulumi:"vmReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput) IpConfigLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList {
		return v.IpConfigLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput) VmReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference {
		return v.VmReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList struct {
	IpAddress string `pulumi:"ipAddress"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList) string {
		return v.IpAddress
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork struct {
	// The name for the Recovery Plan.
	Name                    *string                                                                                                       `pulumi:"name"`
	SubnetLists             []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList             `pulumi:"subnetLists"`
	UseVpcReference         *bool                                                                                                         `pulumi:"useVpcReference"`
	VirtualNetworkReference *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference `pulumi:"virtualNetworkReference"`
	VpcReference            *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference            `pulumi:"vpcReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs struct {
	// The name for the Recovery Plan.
	Name                    pulumi.StringPtrInput                                                                                                `pulumi:"name"`
	SubnetLists             RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayInput            `pulumi:"subnetLists"`
	UseVpcReference         pulumi.BoolPtrInput                                                                                                  `pulumi:"useVpcReference"`
	VirtualNetworkReference RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput `pulumi:"virtualNetworkReference"`
	VpcReference            RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput            `pulumi:"vpcReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList {
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *bool {
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference {
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference {
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList {
		if v == nil {
			return nil
		}
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference {
		if v == nil {
			return nil
		}
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList struct {
	ExternalConnectivityState *string `pulumi:"externalConnectivityState"`
	GatewayIp                 string  `pulumi:"gatewayIp"`
	PrefixLength              int     `pulumi:"prefixLength"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs struct {
	ExternalConnectivityState pulumi.StringPtrInput `pulumi:"externalConnectivityState"`
	GatewayIp                 pulumi.StringInput    `pulumi:"gatewayIp"`
	PrefixLength              pulumi.IntInput       `pulumi:"prefixLength"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) ExternalConnectivityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList) *string {
		return v.ExternalConnectivityState
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList) string {
		return v.GatewayIp
	}).(pulumi.StringOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList) int {
		return v.PrefixLength
	}).(pulumi.IntOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanProjectReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanProjectReferenceInput is an input type that accepts RecoveryPlanProjectReferenceArgs and RecoveryPlanProjectReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanProjectReferenceInput` via:
//
//	RecoveryPlanProjectReferenceArgs{...}
type RecoveryPlanProjectReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanProjectReferenceOutput() RecoveryPlanProjectReferenceOutput
	ToRecoveryPlanProjectReferenceOutputWithContext(context.Context) RecoveryPlanProjectReferenceOutput
}

type RecoveryPlanProjectReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanProjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProjectReference)(nil)).Elem()
}

func (i RecoveryPlanProjectReferenceArgs) ToRecoveryPlanProjectReferenceOutput() RecoveryPlanProjectReferenceOutput {
	return i.ToRecoveryPlanProjectReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanProjectReferenceArgs) ToRecoveryPlanProjectReferenceOutputWithContext(ctx context.Context) RecoveryPlanProjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProjectReferenceOutput)
}

func (i RecoveryPlanProjectReferenceArgs) ToRecoveryPlanProjectReferencePtrOutput() RecoveryPlanProjectReferencePtrOutput {
	return i.ToRecoveryPlanProjectReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanProjectReferenceArgs) ToRecoveryPlanProjectReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProjectReferenceOutput).ToRecoveryPlanProjectReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanProjectReferencePtrInput is an input type that accepts RecoveryPlanProjectReferenceArgs, RecoveryPlanProjectReferencePtr and RecoveryPlanProjectReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanProjectReferencePtrInput` via:
//
//	        RecoveryPlanProjectReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanProjectReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanProjectReferencePtrOutput() RecoveryPlanProjectReferencePtrOutput
	ToRecoveryPlanProjectReferencePtrOutputWithContext(context.Context) RecoveryPlanProjectReferencePtrOutput
}

type recoveryPlanProjectReferencePtrType RecoveryPlanProjectReferenceArgs

func RecoveryPlanProjectReferencePtr(v *RecoveryPlanProjectReferenceArgs) RecoveryPlanProjectReferencePtrInput {
	return (*recoveryPlanProjectReferencePtrType)(v)
}

func (*recoveryPlanProjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanProjectReference)(nil)).Elem()
}

func (i *recoveryPlanProjectReferencePtrType) ToRecoveryPlanProjectReferencePtrOutput() RecoveryPlanProjectReferencePtrOutput {
	return i.ToRecoveryPlanProjectReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanProjectReferencePtrType) ToRecoveryPlanProjectReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProjectReferencePtrOutput)
}

type RecoveryPlanProjectReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProjectReference)(nil)).Elem()
}

func (o RecoveryPlanProjectReferenceOutput) ToRecoveryPlanProjectReferenceOutput() RecoveryPlanProjectReferenceOutput {
	return o
}

func (o RecoveryPlanProjectReferenceOutput) ToRecoveryPlanProjectReferenceOutputWithContext(ctx context.Context) RecoveryPlanProjectReferenceOutput {
	return o
}

func (o RecoveryPlanProjectReferenceOutput) ToRecoveryPlanProjectReferencePtrOutput() RecoveryPlanProjectReferencePtrOutput {
	return o.ToRecoveryPlanProjectReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanProjectReferenceOutput) ToRecoveryPlanProjectReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanProjectReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanProjectReference) *RecoveryPlanProjectReference {
		return &v
	}).(RecoveryPlanProjectReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanProjectReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProjectReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanProjectReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProjectReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanProjectReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProjectReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProjectReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanProjectReference)(nil)).Elem()
}

func (o RecoveryPlanProjectReferencePtrOutput) ToRecoveryPlanProjectReferencePtrOutput() RecoveryPlanProjectReferencePtrOutput {
	return o
}

func (o RecoveryPlanProjectReferencePtrOutput) ToRecoveryPlanProjectReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanProjectReferencePtrOutput {
	return o
}

func (o RecoveryPlanProjectReferencePtrOutput) Elem() RecoveryPlanProjectReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanProjectReference) RecoveryPlanProjectReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanProjectReference
		return ret
	}).(RecoveryPlanProjectReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanProjectReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanProjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanProjectReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanStageList struct {
	DelayTimeSecs *int                           `pulumi:"delayTimeSecs"`
	StageUuid     *string                        `pulumi:"stageUuid"`
	StageWork     RecoveryPlanStageListStageWork `pulumi:"stageWork"`
}

// RecoveryPlanStageListInput is an input type that accepts RecoveryPlanStageListArgs and RecoveryPlanStageListOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListInput` via:
//
//	RecoveryPlanStageListArgs{...}
type RecoveryPlanStageListInput interface {
	pulumi.Input

	ToRecoveryPlanStageListOutput() RecoveryPlanStageListOutput
	ToRecoveryPlanStageListOutputWithContext(context.Context) RecoveryPlanStageListOutput
}

type RecoveryPlanStageListArgs struct {
	DelayTimeSecs pulumi.IntPtrInput                  `pulumi:"delayTimeSecs"`
	StageUuid     pulumi.StringPtrInput               `pulumi:"stageUuid"`
	StageWork     RecoveryPlanStageListStageWorkInput `pulumi:"stageWork"`
}

func (RecoveryPlanStageListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageList)(nil)).Elem()
}

func (i RecoveryPlanStageListArgs) ToRecoveryPlanStageListOutput() RecoveryPlanStageListOutput {
	return i.ToRecoveryPlanStageListOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListArgs) ToRecoveryPlanStageListOutputWithContext(ctx context.Context) RecoveryPlanStageListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListOutput)
}

// RecoveryPlanStageListArrayInput is an input type that accepts RecoveryPlanStageListArray and RecoveryPlanStageListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListArrayInput` via:
//
//	RecoveryPlanStageListArray{ RecoveryPlanStageListArgs{...} }
type RecoveryPlanStageListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanStageListArrayOutput() RecoveryPlanStageListArrayOutput
	ToRecoveryPlanStageListArrayOutputWithContext(context.Context) RecoveryPlanStageListArrayOutput
}

type RecoveryPlanStageListArray []RecoveryPlanStageListInput

func (RecoveryPlanStageListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageList)(nil)).Elem()
}

func (i RecoveryPlanStageListArray) ToRecoveryPlanStageListArrayOutput() RecoveryPlanStageListArrayOutput {
	return i.ToRecoveryPlanStageListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListArray) ToRecoveryPlanStageListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListArrayOutput)
}

type RecoveryPlanStageListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageList)(nil)).Elem()
}

func (o RecoveryPlanStageListOutput) ToRecoveryPlanStageListOutput() RecoveryPlanStageListOutput {
	return o
}

func (o RecoveryPlanStageListOutput) ToRecoveryPlanStageListOutputWithContext(ctx context.Context) RecoveryPlanStageListOutput {
	return o
}

func (o RecoveryPlanStageListOutput) DelayTimeSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageList) *int { return v.DelayTimeSecs }).(pulumi.IntPtrOutput)
}

func (o RecoveryPlanStageListOutput) StageUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageList) *string { return v.StageUuid }).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanStageListOutput) StageWork() RecoveryPlanStageListStageWorkOutput {
	return o.ApplyT(func(v RecoveryPlanStageList) RecoveryPlanStageListStageWork { return v.StageWork }).(RecoveryPlanStageListStageWorkOutput)
}

type RecoveryPlanStageListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageList)(nil)).Elem()
}

func (o RecoveryPlanStageListArrayOutput) ToRecoveryPlanStageListArrayOutput() RecoveryPlanStageListArrayOutput {
	return o
}

func (o RecoveryPlanStageListArrayOutput) ToRecoveryPlanStageListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListArrayOutput {
	return o
}

func (o RecoveryPlanStageListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanStageListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanStageList {
		return vs[0].([]RecoveryPlanStageList)[vs[1].(int)]
	}).(RecoveryPlanStageListOutput)
}

type RecoveryPlanStageListStageWork struct {
	RecoverEntities *RecoveryPlanStageListStageWorkRecoverEntities `pulumi:"recoverEntities"`
}

// RecoveryPlanStageListStageWorkInput is an input type that accepts RecoveryPlanStageListStageWorkArgs and RecoveryPlanStageListStageWorkOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkInput` via:
//
//	RecoveryPlanStageListStageWorkArgs{...}
type RecoveryPlanStageListStageWorkInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkOutput() RecoveryPlanStageListStageWorkOutput
	ToRecoveryPlanStageListStageWorkOutputWithContext(context.Context) RecoveryPlanStageListStageWorkOutput
}

type RecoveryPlanStageListStageWorkArgs struct {
	RecoverEntities RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput `pulumi:"recoverEntities"`
}

func (RecoveryPlanStageListStageWorkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWork)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkArgs) ToRecoveryPlanStageListStageWorkOutput() RecoveryPlanStageListStageWorkOutput {
	return i.ToRecoveryPlanStageListStageWorkOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkArgs) ToRecoveryPlanStageListStageWorkOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkOutput)
}

type RecoveryPlanStageListStageWorkOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWork)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkOutput) ToRecoveryPlanStageListStageWorkOutput() RecoveryPlanStageListStageWorkOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkOutput) ToRecoveryPlanStageListStageWorkOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkOutput) RecoverEntities() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWork) *RecoveryPlanStageListStageWorkRecoverEntities {
		return v.RecoverEntities
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntities struct {
	EntityInfoLists []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList `pulumi:"entityInfoLists"`
}

// RecoveryPlanStageListStageWorkRecoverEntitiesInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesArgs and RecoveryPlanStageListStageWorkRecoverEntitiesOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesArgs{...}
type RecoveryPlanStageListStageWorkRecoverEntitiesInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesOutput() RecoveryPlanStageListStageWorkRecoverEntitiesOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesArgs struct {
	EntityInfoLists RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayInput `pulumi:"entityInfoLists"`
}

func (RecoveryPlanStageListStageWorkRecoverEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntities)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesOutput() RecoveryPlanStageListStageWorkRecoverEntitiesOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesOutput)
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesOutput).ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(ctx)
}

// RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesArgs, RecoveryPlanStageListStageWorkRecoverEntitiesPtr and RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput` via:
//
//	        RecoveryPlanStageListStageWorkRecoverEntitiesArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput
}

type recoveryPlanStageListStageWorkRecoverEntitiesPtrType RecoveryPlanStageListStageWorkRecoverEntitiesArgs

func RecoveryPlanStageListStageWorkRecoverEntitiesPtr(v *RecoveryPlanStageListStageWorkRecoverEntitiesArgs) RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput {
	return (*recoveryPlanStageListStageWorkRecoverEntitiesPtrType)(v)
}

func (*recoveryPlanStageListStageWorkRecoverEntitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanStageListStageWorkRecoverEntities)(nil)).Elem()
}

func (i *recoveryPlanStageListStageWorkRecoverEntitiesPtrType) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanStageListStageWorkRecoverEntitiesPtrType) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntities)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesOutput() RecoveryPlanStageListStageWorkRecoverEntitiesOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return o.ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanStageListStageWorkRecoverEntities) *RecoveryPlanStageListStageWorkRecoverEntities {
		return &v
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesOutput) EntityInfoLists() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntities) []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList {
		return v.EntityInfoLists
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanStageListStageWorkRecoverEntities)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput() RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesPtrOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput) Elem() RecoveryPlanStageListStageWorkRecoverEntitiesOutput {
	return o.ApplyT(func(v *RecoveryPlanStageListStageWorkRecoverEntities) RecoveryPlanStageListStageWorkRecoverEntities {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanStageListStageWorkRecoverEntities
		return ret
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput) EntityInfoLists() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanStageListStageWorkRecoverEntities) []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList {
		if v == nil {
			return nil
		}
		return v.EntityInfoLists
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList struct {
	AnyEntityReferenceKind *string                                                                 `pulumi:"anyEntityReferenceKind"`
	AnyEntityReferenceName *string                                                                 `pulumi:"anyEntityReferenceName"`
	AnyEntityReferenceUuid *string                                                                 `pulumi:"anyEntityReferenceUuid"`
	Categories             []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory   `pulumi:"categories"`
	ScriptLists            []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList `pulumi:"scriptLists"`
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs{...}
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs struct {
	AnyEntityReferenceKind pulumi.StringPtrInput                                                           `pulumi:"anyEntityReferenceKind"`
	AnyEntityReferenceName pulumi.StringPtrInput                                                           `pulumi:"anyEntityReferenceName"`
	AnyEntityReferenceUuid pulumi.StringPtrInput                                                           `pulumi:"anyEntityReferenceUuid"`
	Categories             RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayInput   `pulumi:"categories"`
	ScriptLists            RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayInput `pulumi:"scriptLists"`
}

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput)
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray{ RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs{...} }
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListInput

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) AnyEntityReferenceKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList) *string {
		return v.AnyEntityReferenceKind
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) AnyEntityReferenceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList) *string {
		return v.AnyEntityReferenceName
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) AnyEntityReferenceUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList) *string {
		return v.AnyEntityReferenceUuid
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) Categories() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList) []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory {
		return v.Categories
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput) ScriptLists() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList) []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList {
		return v.ScriptLists
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList {
		return vs[0].([]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoList)[vs[1].(int)]
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory struct {
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs{...}
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs struct {
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput)
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray{ RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs{...} }
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryInput

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput {
	return o
}

// The name for the Recovery Plan.
func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput) Index(i pulumi.IntInput) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory {
		return vs[0].([]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategory)[vs[1].(int)]
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList struct {
	EnableScriptExec bool    `pulumi:"enableScriptExec"`
	Timeout          *string `pulumi:"timeout"`
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs{...}
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs struct {
	EnableScriptExec pulumi.BoolInput      `pulumi:"enableScriptExec"`
	Timeout          pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput)
}

// RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayInput is an input type that accepts RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray and RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayInput` via:
//
//	RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray{ RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs{...} }
type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput
	ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutputWithContext(context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray []RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListInput

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList)(nil)).Elem()
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput {
	return i.ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput) EnableScriptExec() pulumi.BoolOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList) bool {
		return v.EnableScriptExec
	}).(pulumi.BoolOutput)
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList) *string {
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList)(nil)).Elem()
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput() RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput) ToRecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutputWithContext(ctx context.Context) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput {
	return o
}

func (o RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList {
		return vs[0].([]RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptList)[vs[1].(int)]
	}).(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput)
}

type RecoveryPointRestoreV2VmRecoveryPointRestoreOverride struct {
	// -(Required) External identifier of a VM recovery point, that is a part of the top-level recovery point.
	VmRecoveryPointExtId string `pulumi:"vmRecoveryPointExtId"`
}

// RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideInput is an input type that accepts RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs and RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideInput` via:
//
//	RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs{...}
type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput
	ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutputWithContext(context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput
}

type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs struct {
	// -(Required) External identifier of a VM recovery point, that is a part of the top-level recovery point.
	VmRecoveryPointExtId pulumi.StringInput `pulumi:"vmRecoveryPointExtId"`
}

func (RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VmRecoveryPointRestoreOverride)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput {
	return i.ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput)
}

// RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayInput is an input type that accepts RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray and RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayInput` via:
//
//	RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray{ RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs{...} }
type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput
	ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutputWithContext(context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput
}

type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray []RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideInput

func (RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VmRecoveryPointRestoreOverride)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput {
	return i.ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput)
}

type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VmRecoveryPointRestoreOverride)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput {
	return o
}

func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput {
	return o
}

// -(Required) External identifier of a VM recovery point, that is a part of the top-level recovery point.
func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput) VmRecoveryPointExtId() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointRestoreV2VmRecoveryPointRestoreOverride) string { return v.VmRecoveryPointExtId }).(pulumi.StringOutput)
}

type RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VmRecoveryPointRestoreOverride)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput) ToRecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput) Index(i pulumi.IntInput) RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointRestoreV2VmRecoveryPointRestoreOverride {
		return vs[0].([]RecoveryPointRestoreV2VmRecoveryPointRestoreOverride)[vs[1].(int)]
	}).(RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride struct {
	// -(Optional) Protected resource/recovery point restore that overrides the volume group configuration. The specified properties will be overridden for the restored volume group.
	VolumeGroupOverrideSpecs []RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec `pulumi:"volumeGroupOverrideSpecs"`
	// -(Required) External identifier of a volume group recovery point, that is a part of the top-level recovery point.
	VolumeGroupRecoveryPointExtId string `pulumi:"volumeGroupRecoveryPointExtId"`
}

// RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideInput is an input type that accepts RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs and RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideInput` via:
//
//	RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs{...}
type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput
	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutputWithContext(context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs struct {
	// -(Optional) Protected resource/recovery point restore that overrides the volume group configuration. The specified properties will be overridden for the restored volume group.
	VolumeGroupOverrideSpecs RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayInput `pulumi:"volumeGroupOverrideSpecs"`
	// -(Required) External identifier of a volume group recovery point, that is a part of the top-level recovery point.
	VolumeGroupRecoveryPointExtId pulumi.StringInput `pulumi:"volumeGroupRecoveryPointExtId"`
}

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput {
	return i.ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput)
}

// RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayInput is an input type that accepts RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray and RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayInput` via:
//
//	RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray{ RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs{...} }
type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput
	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutputWithContext(context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray []RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideInput

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput {
	return i.ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput {
	return o
}

// -(Optional) Protected resource/recovery point restore that overrides the volume group configuration. The specified properties will be overridden for the restored volume group.
func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput) VolumeGroupOverrideSpecs() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput {
	return o.ApplyT(func(v RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride) []RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec {
		return v.VolumeGroupOverrideSpecs
	}).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput)
}

// -(Required) External identifier of a volume group recovery point, that is a part of the top-level recovery point.
func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput) VolumeGroupRecoveryPointExtId() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride) string {
		return v.VolumeGroupRecoveryPointExtId
	}).(pulumi.StringOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput) Index(i pulumi.IntInput) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride {
		return vs[0].([]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverride)[vs[1].(int)]
	}).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec struct {
	// -(Optional) The name of the restored volume group.
	Name *string `pulumi:"name"`
}

// RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecInput is an input type that accepts RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs and RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecInput` via:
//
//	RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs{...}
type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput
	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutputWithContext(context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs struct {
	// -(Optional) The name of the restored volume group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput {
	return i.ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput)
}

// RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayInput is an input type that accepts RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray and RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput values.
// You can construct a concrete instance of `RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayInput` via:
//
//	RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray{ RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs{...} }
type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayInput interface {
	pulumi.Input

	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput
	ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutputWithContext(context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray []RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecInput

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec)(nil)).Elem()
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput {
	return i.ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutputWithContext(context.Background())
}

func (i RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput {
	return o
}

// -(Optional) The name of the restored volume group.
func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec)(nil)).Elem()
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput() RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput) ToRecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutputWithContext(ctx context.Context) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput {
	return o
}

func (o RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput) Index(i pulumi.IntInput) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec {
		return vs[0].([]RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpec)[vs[1].(int)]
	}).(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput)
}

type RecoveryPointsV2Link struct {
	// - The URL at which the entity described by the link can be accessed.
	Href *string `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel *string `pulumi:"rel"`
}

// RecoveryPointsV2LinkInput is an input type that accepts RecoveryPointsV2LinkArgs and RecoveryPointsV2LinkOutput values.
// You can construct a concrete instance of `RecoveryPointsV2LinkInput` via:
//
//	RecoveryPointsV2LinkArgs{...}
type RecoveryPointsV2LinkInput interface {
	pulumi.Input

	ToRecoveryPointsV2LinkOutput() RecoveryPointsV2LinkOutput
	ToRecoveryPointsV2LinkOutputWithContext(context.Context) RecoveryPointsV2LinkOutput
}

type RecoveryPointsV2LinkArgs struct {
	// - The URL at which the entity described by the link can be accessed.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel pulumi.StringPtrInput `pulumi:"rel"`
}

func (RecoveryPointsV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2Link)(nil)).Elem()
}

func (i RecoveryPointsV2LinkArgs) ToRecoveryPointsV2LinkOutput() RecoveryPointsV2LinkOutput {
	return i.ToRecoveryPointsV2LinkOutputWithContext(context.Background())
}

func (i RecoveryPointsV2LinkArgs) ToRecoveryPointsV2LinkOutputWithContext(ctx context.Context) RecoveryPointsV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2LinkOutput)
}

// RecoveryPointsV2LinkArrayInput is an input type that accepts RecoveryPointsV2LinkArray and RecoveryPointsV2LinkArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2LinkArrayInput` via:
//
//	RecoveryPointsV2LinkArray{ RecoveryPointsV2LinkArgs{...} }
type RecoveryPointsV2LinkArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2LinkArrayOutput() RecoveryPointsV2LinkArrayOutput
	ToRecoveryPointsV2LinkArrayOutputWithContext(context.Context) RecoveryPointsV2LinkArrayOutput
}

type RecoveryPointsV2LinkArray []RecoveryPointsV2LinkInput

func (RecoveryPointsV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2Link)(nil)).Elem()
}

func (i RecoveryPointsV2LinkArray) ToRecoveryPointsV2LinkArrayOutput() RecoveryPointsV2LinkArrayOutput {
	return i.ToRecoveryPointsV2LinkArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2LinkArray) ToRecoveryPointsV2LinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2LinkArrayOutput)
}

type RecoveryPointsV2LinkOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2Link)(nil)).Elem()
}

func (o RecoveryPointsV2LinkOutput) ToRecoveryPointsV2LinkOutput() RecoveryPointsV2LinkOutput {
	return o
}

func (o RecoveryPointsV2LinkOutput) ToRecoveryPointsV2LinkOutputWithContext(ctx context.Context) RecoveryPointsV2LinkOutput {
	return o
}

// - The URL at which the entity described by the link can be accessed.
func (o RecoveryPointsV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
func (o RecoveryPointsV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2LinkArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2Link)(nil)).Elem()
}

func (o RecoveryPointsV2LinkArrayOutput) ToRecoveryPointsV2LinkArrayOutput() RecoveryPointsV2LinkArrayOutput {
	return o
}

func (o RecoveryPointsV2LinkArrayOutput) ToRecoveryPointsV2LinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2LinkArrayOutput {
	return o
}

func (o RecoveryPointsV2LinkArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2Link {
		return vs[0].([]RecoveryPointsV2Link)[vs[1].(int)]
	}).(RecoveryPointsV2LinkOutput)
}

type RecoveryPointsV2LocationReference struct {
	// External identifier of the cluster where the recovery point is present.
	LocationExtId *string `pulumi:"locationExtId"`
}

// RecoveryPointsV2LocationReferenceInput is an input type that accepts RecoveryPointsV2LocationReferenceArgs and RecoveryPointsV2LocationReferenceOutput values.
// You can construct a concrete instance of `RecoveryPointsV2LocationReferenceInput` via:
//
//	RecoveryPointsV2LocationReferenceArgs{...}
type RecoveryPointsV2LocationReferenceInput interface {
	pulumi.Input

	ToRecoveryPointsV2LocationReferenceOutput() RecoveryPointsV2LocationReferenceOutput
	ToRecoveryPointsV2LocationReferenceOutputWithContext(context.Context) RecoveryPointsV2LocationReferenceOutput
}

type RecoveryPointsV2LocationReferenceArgs struct {
	// External identifier of the cluster where the recovery point is present.
	LocationExtId pulumi.StringPtrInput `pulumi:"locationExtId"`
}

func (RecoveryPointsV2LocationReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2LocationReference)(nil)).Elem()
}

func (i RecoveryPointsV2LocationReferenceArgs) ToRecoveryPointsV2LocationReferenceOutput() RecoveryPointsV2LocationReferenceOutput {
	return i.ToRecoveryPointsV2LocationReferenceOutputWithContext(context.Background())
}

func (i RecoveryPointsV2LocationReferenceArgs) ToRecoveryPointsV2LocationReferenceOutputWithContext(ctx context.Context) RecoveryPointsV2LocationReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2LocationReferenceOutput)
}

// RecoveryPointsV2LocationReferenceArrayInput is an input type that accepts RecoveryPointsV2LocationReferenceArray and RecoveryPointsV2LocationReferenceArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2LocationReferenceArrayInput` via:
//
//	RecoveryPointsV2LocationReferenceArray{ RecoveryPointsV2LocationReferenceArgs{...} }
type RecoveryPointsV2LocationReferenceArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2LocationReferenceArrayOutput() RecoveryPointsV2LocationReferenceArrayOutput
	ToRecoveryPointsV2LocationReferenceArrayOutputWithContext(context.Context) RecoveryPointsV2LocationReferenceArrayOutput
}

type RecoveryPointsV2LocationReferenceArray []RecoveryPointsV2LocationReferenceInput

func (RecoveryPointsV2LocationReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2LocationReference)(nil)).Elem()
}

func (i RecoveryPointsV2LocationReferenceArray) ToRecoveryPointsV2LocationReferenceArrayOutput() RecoveryPointsV2LocationReferenceArrayOutput {
	return i.ToRecoveryPointsV2LocationReferenceArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2LocationReferenceArray) ToRecoveryPointsV2LocationReferenceArrayOutputWithContext(ctx context.Context) RecoveryPointsV2LocationReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2LocationReferenceArrayOutput)
}

type RecoveryPointsV2LocationReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2LocationReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2LocationReference)(nil)).Elem()
}

func (o RecoveryPointsV2LocationReferenceOutput) ToRecoveryPointsV2LocationReferenceOutput() RecoveryPointsV2LocationReferenceOutput {
	return o
}

func (o RecoveryPointsV2LocationReferenceOutput) ToRecoveryPointsV2LocationReferenceOutputWithContext(ctx context.Context) RecoveryPointsV2LocationReferenceOutput {
	return o
}

// External identifier of the cluster where the recovery point is present.
func (o RecoveryPointsV2LocationReferenceOutput) LocationExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2LocationReference) *string { return v.LocationExtId }).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2LocationReferenceArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2LocationReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2LocationReference)(nil)).Elem()
}

func (o RecoveryPointsV2LocationReferenceArrayOutput) ToRecoveryPointsV2LocationReferenceArrayOutput() RecoveryPointsV2LocationReferenceArrayOutput {
	return o
}

func (o RecoveryPointsV2LocationReferenceArrayOutput) ToRecoveryPointsV2LocationReferenceArrayOutputWithContext(ctx context.Context) RecoveryPointsV2LocationReferenceArrayOutput {
	return o
}

func (o RecoveryPointsV2LocationReferenceArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2LocationReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2LocationReference {
		return vs[0].([]RecoveryPointsV2LocationReference)[vs[1].(int)]
	}).(RecoveryPointsV2LocationReferenceOutput)
}

type RecoveryPointsV2VmRecoveryPoint struct {
	// User-defined application-consistent properties for the recovery point.
	ApplicationConsistentProperties []RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty `pulumi:"applicationConsistentProperties"`
	// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
	ConsistencyGroupExtId *string `pulumi:"consistencyGroupExtId"`
	// The UTC date and time in ISO-8601 format when the Recovery point is created.
	CreationTime *string `pulumi:"creationTime"`
	// array of disk recovery points.
	DiskRecoveryPoints []RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint `pulumi:"diskRecoveryPoints"`
	// The UTC date and time in ISO-8601 format when the current Recovery point expires and will be garbage collected.
	ExpirationTime *string `pulumi:"expirationTime"`
	// recovery point UUID
	ExtId *string `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []RecoveryPointsV2VmRecoveryPointLink `pulumi:"links"`
	// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
	LocationAgnosticId *string `pulumi:"locationAgnosticId"`
	// The name of the Recovery point.
	Name *string `pulumi:"name"`
	// Type of the Recovery point.
	RecoveryPointType *string `pulumi:"recoveryPointType"`
	// The status of the Recovery point, which indicates whether this Recovery point is fit to be consumed.
	// * supported values:
	// * `COMPLETE`: - The Recovery point is in a complete state and ready to be consumed.
	Status *string `pulumi:"status"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId *string `pulumi:"tenantId"`
	// Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
	VmCategories []string `pulumi:"vmCategories"`
	// VM external identifier which is captured as a part of this recovery point.
	VmExtId string `pulumi:"vmExtId"`
}

// RecoveryPointsV2VmRecoveryPointInput is an input type that accepts RecoveryPointsV2VmRecoveryPointArgs and RecoveryPointsV2VmRecoveryPointOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointInput` via:
//
//	RecoveryPointsV2VmRecoveryPointArgs{...}
type RecoveryPointsV2VmRecoveryPointInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointOutput
	ToRecoveryPointsV2VmRecoveryPointOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointOutput
}

type RecoveryPointsV2VmRecoveryPointArgs struct {
	// User-defined application-consistent properties for the recovery point.
	ApplicationConsistentProperties RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayInput `pulumi:"applicationConsistentProperties"`
	// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
	ConsistencyGroupExtId pulumi.StringPtrInput `pulumi:"consistencyGroupExtId"`
	// The UTC date and time in ISO-8601 format when the Recovery point is created.
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// array of disk recovery points.
	DiskRecoveryPoints RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayInput `pulumi:"diskRecoveryPoints"`
	// The UTC date and time in ISO-8601 format when the current Recovery point expires and will be garbage collected.
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// recovery point UUID
	ExtId pulumi.StringPtrInput `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links RecoveryPointsV2VmRecoveryPointLinkArrayInput `pulumi:"links"`
	// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
	LocationAgnosticId pulumi.StringPtrInput `pulumi:"locationAgnosticId"`
	// The name of the Recovery point.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Recovery point.
	RecoveryPointType pulumi.StringPtrInput `pulumi:"recoveryPointType"`
	// The status of the Recovery point, which indicates whether this Recovery point is fit to be consumed.
	// * supported values:
	// * `COMPLETE`: - The Recovery point is in a complete state and ready to be consumed.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
	VmCategories pulumi.StringArrayInput `pulumi:"vmCategories"`
	// VM external identifier which is captured as a part of this recovery point.
	VmExtId pulumi.StringInput `pulumi:"vmExtId"`
}

func (RecoveryPointsV2VmRecoveryPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointArgs) ToRecoveryPointsV2VmRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointArgs) ToRecoveryPointsV2VmRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointOutput)
}

// RecoveryPointsV2VmRecoveryPointArrayInput is an input type that accepts RecoveryPointsV2VmRecoveryPointArray and RecoveryPointsV2VmRecoveryPointArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointArrayInput` via:
//
//	RecoveryPointsV2VmRecoveryPointArray{ RecoveryPointsV2VmRecoveryPointArgs{...} }
type RecoveryPointsV2VmRecoveryPointArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointArrayOutput
	ToRecoveryPointsV2VmRecoveryPointArrayOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointArrayOutput
}

type RecoveryPointsV2VmRecoveryPointArray []RecoveryPointsV2VmRecoveryPointInput

func (RecoveryPointsV2VmRecoveryPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointArray) ToRecoveryPointsV2VmRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointArrayOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointArray) ToRecoveryPointsV2VmRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointArrayOutput)
}

type RecoveryPointsV2VmRecoveryPointOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointOutput) ToRecoveryPointsV2VmRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointOutput) ToRecoveryPointsV2VmRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointOutput {
	return o
}

// User-defined application-consistent properties for the recovery point.
func (o RecoveryPointsV2VmRecoveryPointOutput) ApplicationConsistentProperties() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) []RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty {
		return v.ApplicationConsistentProperties
	}).(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput)
}

// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
func (o RecoveryPointsV2VmRecoveryPointOutput) ConsistencyGroupExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.ConsistencyGroupExtId }).(pulumi.StringPtrOutput)
}

// The UTC date and time in ISO-8601 format when the Recovery point is created.
func (o RecoveryPointsV2VmRecoveryPointOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// array of disk recovery points.
func (o RecoveryPointsV2VmRecoveryPointOutput) DiskRecoveryPoints() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) []RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint {
		return v.DiskRecoveryPoints
	}).(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput)
}

// The UTC date and time in ISO-8601 format when the current Recovery point expires and will be garbage collected.
func (o RecoveryPointsV2VmRecoveryPointOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// recovery point UUID
func (o RecoveryPointsV2VmRecoveryPointOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o RecoveryPointsV2VmRecoveryPointOutput) Links() RecoveryPointsV2VmRecoveryPointLinkArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) []RecoveryPointsV2VmRecoveryPointLink { return v.Links }).(RecoveryPointsV2VmRecoveryPointLinkArrayOutput)
}

// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
func (o RecoveryPointsV2VmRecoveryPointOutput) LocationAgnosticId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.LocationAgnosticId }).(pulumi.StringPtrOutput)
}

// The name of the Recovery point.
func (o RecoveryPointsV2VmRecoveryPointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Recovery point.
func (o RecoveryPointsV2VmRecoveryPointOutput) RecoveryPointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.RecoveryPointType }).(pulumi.StringPtrOutput)
}

// The status of the Recovery point, which indicates whether this Recovery point is fit to be consumed.
// * supported values:
// * `COMPLETE`: - The Recovery point is in a complete state and ready to be consumed.
func (o RecoveryPointsV2VmRecoveryPointOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A globally unique identifier that represents the tenant that owns this entity
func (o RecoveryPointsV2VmRecoveryPointOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Category key-value pairs associated with the VM at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' is displayed as 'dept/hr'.
func (o RecoveryPointsV2VmRecoveryPointOutput) VmCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) []string { return v.VmCategories }).(pulumi.StringArrayOutput)
}

// VM external identifier which is captured as a part of this recovery point.
func (o RecoveryPointsV2VmRecoveryPointOutput) VmExtId() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPoint) string { return v.VmExtId }).(pulumi.StringOutput)
}

type RecoveryPointsV2VmRecoveryPointArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointArrayOutput) ToRecoveryPointsV2VmRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointArrayOutput) ToRecoveryPointsV2VmRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VmRecoveryPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VmRecoveryPoint {
		return vs[0].([]RecoveryPointsV2VmRecoveryPoint)[vs[1].(int)]
	}).(RecoveryPointsV2VmRecoveryPointOutput)
}

type RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty struct {
	// -(Required) The backup type specifies the criteria for identifying the files to be backed up. This property should be specified to the application-consistent recovery points for Windows VMs/agents. The following backup types are supported for the application-consistent recovery points:
	// * supported values:
	// * `FULL_BACKUP`: -  All the files are backed up irrespective of their last backup date/time or state. Also, this backup type updates the backup history of each file that participated in the recovery point. If not explicitly specified, this is the default backup type.
	// * `COPY_BACKUP`: -  this backup type does not update the backup history of individual files involved in the recovery point.
	BackupType string `pulumi:"backupType"`
	// -(Required) value: `dataprotection.v4.common.VssProperties`
	ObjectType string `pulumi:"objectType"`
	// -(Optional) Indicates whether the given set of VSS writers' UUIDs should be included or excluded from the application consistent recovery point. By default, the value is set to false, indicating that all listed VSS writers' UUIDs will be excluded.
	ShouldIncludeWriters *bool `pulumi:"shouldIncludeWriters"`
	// -(Optional) Indicates whether to store the VSS metadata if the user is interested in application-specific backup/restore. The VSS metadata consists of VSS writers and requester metadata details. These are compressed into a cabinet file(.cab file) during a VSS backup operation. This cabinet file must be saved to the backup media during a backup operation, as it is required during the restore operation.
	ShouldStoreVssMetadata *bool `pulumi:"shouldStoreVssMetadata"`
	// -(Optional) List of VSS writer UUIDs that are used in an application consistent recovery point. The default values are the system and the registry writer UUIDs.
	Writers []string `pulumi:"writers"`
}

// RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyInput is an input type that accepts RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs and RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyInput` via:
//
//	RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs{...}
type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput
	ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput
}

type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs struct {
	// -(Required) The backup type specifies the criteria for identifying the files to be backed up. This property should be specified to the application-consistent recovery points for Windows VMs/agents. The following backup types are supported for the application-consistent recovery points:
	// * supported values:
	// * `FULL_BACKUP`: -  All the files are backed up irrespective of their last backup date/time or state. Also, this backup type updates the backup history of each file that participated in the recovery point. If not explicitly specified, this is the default backup type.
	// * `COPY_BACKUP`: -  this backup type does not update the backup history of individual files involved in the recovery point.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// -(Required) value: `dataprotection.v4.common.VssProperties`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// -(Optional) Indicates whether the given set of VSS writers' UUIDs should be included or excluded from the application consistent recovery point. By default, the value is set to false, indicating that all listed VSS writers' UUIDs will be excluded.
	ShouldIncludeWriters pulumi.BoolPtrInput `pulumi:"shouldIncludeWriters"`
	// -(Optional) Indicates whether to store the VSS metadata if the user is interested in application-specific backup/restore. The VSS metadata consists of VSS writers and requester metadata details. These are compressed into a cabinet file(.cab file) during a VSS backup operation. This cabinet file must be saved to the backup media during a backup operation, as it is required during the restore operation.
	ShouldStoreVssMetadata pulumi.BoolPtrInput `pulumi:"shouldStoreVssMetadata"`
	// -(Optional) List of VSS writer UUIDs that are used in an application consistent recovery point. The default values are the system and the registry writer UUIDs.
	Writers pulumi.StringArrayInput `pulumi:"writers"`
}

func (RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput)
}

// RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayInput is an input type that accepts RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray and RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayInput` via:
//
//	RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray{ RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs{...} }
type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput
	ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput
}

type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray []RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyInput

func (RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput)
}

type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput {
	return o
}

// -(Required) The backup type specifies the criteria for identifying the files to be backed up. This property should be specified to the application-consistent recovery points for Windows VMs/agents. The following backup types are supported for the application-consistent recovery points:
// * supported values:
// * `FULL_BACKUP`: -  All the files are backed up irrespective of their last backup date/time or state. Also, this backup type updates the backup history of each file that participated in the recovery point. If not explicitly specified, this is the default backup type.
// * `COPY_BACKUP`: -  this backup type does not update the backup history of individual files involved in the recovery point.
func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty) string { return v.BackupType }).(pulumi.StringOutput)
}

// -(Required) value: `dataprotection.v4.common.VssProperties`
func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty) string { return v.ObjectType }).(pulumi.StringOutput)
}

// -(Optional) Indicates whether the given set of VSS writers' UUIDs should be included or excluded from the application consistent recovery point. By default, the value is set to false, indicating that all listed VSS writers' UUIDs will be excluded.
func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ShouldIncludeWriters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty) *bool {
		return v.ShouldIncludeWriters
	}).(pulumi.BoolPtrOutput)
}

// -(Optional) Indicates whether to store the VSS metadata if the user is interested in application-specific backup/restore. The VSS metadata consists of VSS writers and requester metadata details. These are compressed into a cabinet file(.cab file) during a VSS backup operation. This cabinet file must be saved to the backup media during a backup operation, as it is required during the restore operation.
func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) ShouldStoreVssMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty) *bool {
		return v.ShouldStoreVssMetadata
	}).(pulumi.BoolPtrOutput)
}

// -(Optional) List of VSS writer UUIDs that are used in an application consistent recovery point. The default values are the system and the registry writer UUIDs.
func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput) Writers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty) []string { return v.Writers }).(pulumi.StringArrayOutput)
}

type RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput() RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput) ToRecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty {
		return vs[0].([]RecoveryPointsV2VmRecoveryPointApplicationConsistentProperty)[vs[1].(int)]
	}).(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput)
}

type RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint struct {
	// External identifier of the disk.
	DiskExtId *string `pulumi:"diskExtId"`
	// External identifier of the disk recovery point.
	DiskRecoveryPointExtId *string `pulumi:"diskRecoveryPointExtId"`
}

// RecoveryPointsV2VmRecoveryPointDiskRecoveryPointInput is an input type that accepts RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs and RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointDiskRecoveryPointInput` via:
//
//	RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs{...}
type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput
	ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput
}

type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs struct {
	// External identifier of the disk.
	DiskExtId pulumi.StringPtrInput `pulumi:"diskExtId"`
	// External identifier of the disk recovery point.
	DiskRecoveryPointExtId pulumi.StringPtrInput `pulumi:"diskRecoveryPointExtId"`
}

func (RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput)
}

// RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayInput is an input type that accepts RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray and RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayInput` via:
//
//	RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray{ RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs{...} }
type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput
	ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput
}

type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray []RecoveryPointsV2VmRecoveryPointDiskRecoveryPointInput

func (RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput)
}

type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput {
	return o
}

// External identifier of the disk.
func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput) DiskExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint) *string { return v.DiskExtId }).(pulumi.StringPtrOutput)
}

// External identifier of the disk recovery point.
func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput) DiskRecoveryPointExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint) *string { return v.DiskRecoveryPointExtId }).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput) ToRecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint {
		return vs[0].([]RecoveryPointsV2VmRecoveryPointDiskRecoveryPoint)[vs[1].(int)]
	}).(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput)
}

type RecoveryPointsV2VmRecoveryPointLink struct {
	// - The URL at which the entity described by the link can be accessed.
	Href *string `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel *string `pulumi:"rel"`
}

// RecoveryPointsV2VmRecoveryPointLinkInput is an input type that accepts RecoveryPointsV2VmRecoveryPointLinkArgs and RecoveryPointsV2VmRecoveryPointLinkOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointLinkInput` via:
//
//	RecoveryPointsV2VmRecoveryPointLinkArgs{...}
type RecoveryPointsV2VmRecoveryPointLinkInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointLinkOutput() RecoveryPointsV2VmRecoveryPointLinkOutput
	ToRecoveryPointsV2VmRecoveryPointLinkOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointLinkOutput
}

type RecoveryPointsV2VmRecoveryPointLinkArgs struct {
	// - The URL at which the entity described by the link can be accessed.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel pulumi.StringPtrInput `pulumi:"rel"`
}

func (RecoveryPointsV2VmRecoveryPointLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointLink)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointLinkArgs) ToRecoveryPointsV2VmRecoveryPointLinkOutput() RecoveryPointsV2VmRecoveryPointLinkOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointLinkOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointLinkArgs) ToRecoveryPointsV2VmRecoveryPointLinkOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointLinkOutput)
}

// RecoveryPointsV2VmRecoveryPointLinkArrayInput is an input type that accepts RecoveryPointsV2VmRecoveryPointLinkArray and RecoveryPointsV2VmRecoveryPointLinkArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VmRecoveryPointLinkArrayInput` via:
//
//	RecoveryPointsV2VmRecoveryPointLinkArray{ RecoveryPointsV2VmRecoveryPointLinkArgs{...} }
type RecoveryPointsV2VmRecoveryPointLinkArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VmRecoveryPointLinkArrayOutput() RecoveryPointsV2VmRecoveryPointLinkArrayOutput
	ToRecoveryPointsV2VmRecoveryPointLinkArrayOutputWithContext(context.Context) RecoveryPointsV2VmRecoveryPointLinkArrayOutput
}

type RecoveryPointsV2VmRecoveryPointLinkArray []RecoveryPointsV2VmRecoveryPointLinkInput

func (RecoveryPointsV2VmRecoveryPointLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointLink)(nil)).Elem()
}

func (i RecoveryPointsV2VmRecoveryPointLinkArray) ToRecoveryPointsV2VmRecoveryPointLinkArrayOutput() RecoveryPointsV2VmRecoveryPointLinkArrayOutput {
	return i.ToRecoveryPointsV2VmRecoveryPointLinkArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VmRecoveryPointLinkArray) ToRecoveryPointsV2VmRecoveryPointLinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VmRecoveryPointLinkArrayOutput)
}

type RecoveryPointsV2VmRecoveryPointLinkOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointLink)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointLinkOutput) ToRecoveryPointsV2VmRecoveryPointLinkOutput() RecoveryPointsV2VmRecoveryPointLinkOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointLinkOutput) ToRecoveryPointsV2VmRecoveryPointLinkOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointLinkOutput {
	return o
}

// - The URL at which the entity described by the link can be accessed.
func (o RecoveryPointsV2VmRecoveryPointLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
func (o RecoveryPointsV2VmRecoveryPointLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VmRecoveryPointLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2VmRecoveryPointLinkArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VmRecoveryPointLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VmRecoveryPointLink)(nil)).Elem()
}

func (o RecoveryPointsV2VmRecoveryPointLinkArrayOutput) ToRecoveryPointsV2VmRecoveryPointLinkArrayOutput() RecoveryPointsV2VmRecoveryPointLinkArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointLinkArrayOutput) ToRecoveryPointsV2VmRecoveryPointLinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VmRecoveryPointLinkArrayOutput {
	return o
}

func (o RecoveryPointsV2VmRecoveryPointLinkArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VmRecoveryPointLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VmRecoveryPointLink {
		return vs[0].([]RecoveryPointsV2VmRecoveryPointLink)[vs[1].(int)]
	}).(RecoveryPointsV2VmRecoveryPointLinkOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPoint struct {
	// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
	ConsistencyGroupExtId *string `pulumi:"consistencyGroupExtId"`
	// array of disk recovery points.
	DiskRecoveryPoints []RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint `pulumi:"diskRecoveryPoints"`
	// recovery point UUID
	ExtId *string `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []RecoveryPointsV2VolumeGroupRecoveryPointLink `pulumi:"links"`
	// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
	LocationAgnosticId *string `pulumi:"locationAgnosticId"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId *string `pulumi:"tenantId"`
	// Category key-value pairs associated with the volume group at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
	VolumeGroupCategories []string `pulumi:"volumeGroupCategories"`
	// Volume Group external identifier which is captured as part of this recovery point.
	VolumeGroupExtId string `pulumi:"volumeGroupExtId"`
}

// RecoveryPointsV2VolumeGroupRecoveryPointInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointArgs and RecoveryPointsV2VolumeGroupRecoveryPointOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointArgs{...}
type RecoveryPointsV2VolumeGroupRecoveryPointInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointArgs struct {
	// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
	ConsistencyGroupExtId pulumi.StringPtrInput `pulumi:"consistencyGroupExtId"`
	// array of disk recovery points.
	DiskRecoveryPoints RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayInput `pulumi:"diskRecoveryPoints"`
	// recovery point UUID
	ExtId pulumi.StringPtrInput `pulumi:"extId"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayInput `pulumi:"links"`
	// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
	LocationAgnosticId pulumi.StringPtrInput `pulumi:"locationAgnosticId"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Category key-value pairs associated with the volume group at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
	VolumeGroupCategories pulumi.StringArrayInput `pulumi:"volumeGroupCategories"`
	// Volume Group external identifier which is captured as part of this recovery point.
	VolumeGroupExtId pulumi.StringInput `pulumi:"volumeGroupExtId"`
}

func (RecoveryPointsV2VolumeGroupRecoveryPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointOutput)
}

// RecoveryPointsV2VolumeGroupRecoveryPointArrayInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointArray and RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointArrayInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointArray{ RecoveryPointsV2VolumeGroupRecoveryPointArgs{...} }
type RecoveryPointsV2VolumeGroupRecoveryPointArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointArray []RecoveryPointsV2VolumeGroupRecoveryPointInput

func (RecoveryPointsV2VolumeGroupRecoveryPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointArray) ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointArray) ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointOutput {
	return o
}

// External identifier of the Consistency group which the entity was part of at the time of recovery point creation.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) ConsistencyGroupExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) *string { return v.ConsistencyGroupExtId }).(pulumi.StringPtrOutput)
}

// array of disk recovery points.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) DiskRecoveryPoints() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) []RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint {
		return v.DiskRecoveryPoints
	}).(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput)
}

// recovery point UUID
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) Links() RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) []RecoveryPointsV2VolumeGroupRecoveryPointLink {
		return v.Links
	}).(RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput)
}

// Location agnostic identifier of the recovery point. This identifier is used to identify the same instances of a recovery point across different sites.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) LocationAgnosticId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) *string { return v.LocationAgnosticId }).(pulumi.StringPtrOutput)
}

// A globally unique identifier that represents the tenant that owns this entity
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Category key-value pairs associated with the volume group at the time of recovery point creation. The category key and value are separated by '/'. For example, a category with key 'dept' and value 'hr' will be represented as 'dept/hr'.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) VolumeGroupCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) []string { return v.VolumeGroupCategories }).(pulumi.StringArrayOutput)
}

// Volume Group external identifier which is captured as part of this recovery point.
func (o RecoveryPointsV2VolumeGroupRecoveryPointOutput) VolumeGroupExtId() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPoint) string { return v.VolumeGroupExtId }).(pulumi.StringOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VolumeGroupRecoveryPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VolumeGroupRecoveryPoint {
		return vs[0].([]RecoveryPointsV2VolumeGroupRecoveryPoint)[vs[1].(int)]
	}).(RecoveryPointsV2VolumeGroupRecoveryPointOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint struct {
	// External identifier of the disk.
	DiskExtId *string `pulumi:"diskExtId"`
	// External identifier of the disk recovery point.
	DiskRecoveryPointExtId *string `pulumi:"diskRecoveryPointExtId"`
}

// RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs and RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs{...}
type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs struct {
	// External identifier of the disk.
	DiskExtId pulumi.StringPtrInput `pulumi:"diskExtId"`
	// External identifier of the disk recovery point.
	DiskRecoveryPointExtId pulumi.StringPtrInput `pulumi:"diskRecoveryPointExtId"`
}

func (RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput)
}

// RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray and RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray{ RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs{...} }
type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray []RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointInput

func (RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput {
	return o
}

// External identifier of the disk.
func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput) DiskExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint) *string { return v.DiskExtId }).(pulumi.StringPtrOutput)
}

// External identifier of the disk recovery point.
func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput) DiskRecoveryPointExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint) *string {
		return v.DiskRecoveryPointExtId
	}).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint {
		return vs[0].([]RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPoint)[vs[1].(int)]
	}).(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointLink struct {
	// - The URL at which the entity described by the link can be accessed.
	Href *string `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel *string `pulumi:"rel"`
}

// RecoveryPointsV2VolumeGroupRecoveryPointLinkInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs and RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointLinkInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs{...}
type RecoveryPointsV2VolumeGroupRecoveryPointLinkInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs struct {
	// - The URL at which the entity described by the link can be accessed.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel pulumi.StringPtrInput `pulumi:"rel"`
}

func (RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointLink)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput)
}

// RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayInput is an input type that accepts RecoveryPointsV2VolumeGroupRecoveryPointLinkArray and RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput values.
// You can construct a concrete instance of `RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayInput` via:
//
//	RecoveryPointsV2VolumeGroupRecoveryPointLinkArray{ RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs{...} }
type RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayInput interface {
	pulumi.Input

	ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput
	ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutputWithContext(context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput
}

type RecoveryPointsV2VolumeGroupRecoveryPointLinkArray []RecoveryPointsV2VolumeGroupRecoveryPointLinkInput

func (RecoveryPointsV2VolumeGroupRecoveryPointLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPointLink)(nil)).Elem()
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointLinkArray) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput {
	return i.ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutputWithContext(context.Background())
}

func (i RecoveryPointsV2VolumeGroupRecoveryPointLinkArray) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointLink)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput {
	return o
}

// - The URL at which the entity described by the link can be accessed.
func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPointLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPointsV2VolumeGroupRecoveryPointLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPointsV2VolumeGroupRecoveryPointLink)(nil)).Elem()
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput() RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput) ToRecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutputWithContext(ctx context.Context) RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput {
	return o
}

func (o RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput) Index(i pulumi.IntInput) RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPointsV2VolumeGroupRecoveryPointLink {
		return vs[0].([]RecoveryPointsV2VolumeGroupRecoveryPointLink)[vs[1].(int)]
	}).(RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput)
}

type RoleCategory struct {
	// - (Optional) Name of the role.
	Name *string `pulumi:"name"`
	// - value of the key.
	Value *string `pulumi:"value"`
}

// RoleCategoryInput is an input type that accepts RoleCategoryArgs and RoleCategoryOutput values.
// You can construct a concrete instance of `RoleCategoryInput` via:
//
//	RoleCategoryArgs{...}
type RoleCategoryInput interface {
	pulumi.Input

	ToRoleCategoryOutput() RoleCategoryOutput
	ToRoleCategoryOutputWithContext(context.Context) RoleCategoryOutput
}

type RoleCategoryArgs struct {
	// - (Optional) Name of the role.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RoleCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleCategory)(nil)).Elem()
}

func (i RoleCategoryArgs) ToRoleCategoryOutput() RoleCategoryOutput {
	return i.ToRoleCategoryOutputWithContext(context.Background())
}

func (i RoleCategoryArgs) ToRoleCategoryOutputWithContext(ctx context.Context) RoleCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleCategoryOutput)
}

// RoleCategoryArrayInput is an input type that accepts RoleCategoryArray and RoleCategoryArrayOutput values.
// You can construct a concrete instance of `RoleCategoryArrayInput` via:
//
//	RoleCategoryArray{ RoleCategoryArgs{...} }
type RoleCategoryArrayInput interface {
	pulumi.Input

	ToRoleCategoryArrayOutput() RoleCategoryArrayOutput
	ToRoleCategoryArrayOutputWithContext(context.Context) RoleCategoryArrayOutput
}

type RoleCategoryArray []RoleCategoryInput

func (RoleCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleCategory)(nil)).Elem()
}

func (i RoleCategoryArray) ToRoleCategoryArrayOutput() RoleCategoryArrayOutput {
	return i.ToRoleCategoryArrayOutputWithContext(context.Background())
}

func (i RoleCategoryArray) ToRoleCategoryArrayOutputWithContext(ctx context.Context) RoleCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleCategoryArrayOutput)
}

type RoleCategoryOutput struct{ *pulumi.OutputState }

func (RoleCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleCategory)(nil)).Elem()
}

func (o RoleCategoryOutput) ToRoleCategoryOutput() RoleCategoryOutput {
	return o
}

func (o RoleCategoryOutput) ToRoleCategoryOutputWithContext(ctx context.Context) RoleCategoryOutput {
	return o
}

// - (Optional) Name of the role.
func (o RoleCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o RoleCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RoleCategoryArrayOutput struct{ *pulumi.OutputState }

func (RoleCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleCategory)(nil)).Elem()
}

func (o RoleCategoryArrayOutput) ToRoleCategoryArrayOutput() RoleCategoryArrayOutput {
	return o
}

func (o RoleCategoryArrayOutput) ToRoleCategoryArrayOutputWithContext(ctx context.Context) RoleCategoryArrayOutput {
	return o
}

func (o RoleCategoryArrayOutput) Index(i pulumi.IntInput) RoleCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleCategory {
		return vs[0].([]RoleCategory)[vs[1].(int)]
	}).(RoleCategoryOutput)
}

type RoleOwnerReference struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// RoleOwnerReferenceInput is an input type that accepts RoleOwnerReferenceArgs and RoleOwnerReferenceOutput values.
// You can construct a concrete instance of `RoleOwnerReferenceInput` via:
//
//	RoleOwnerReferenceArgs{...}
type RoleOwnerReferenceInput interface {
	pulumi.Input

	ToRoleOwnerReferenceOutput() RoleOwnerReferenceOutput
	ToRoleOwnerReferenceOutputWithContext(context.Context) RoleOwnerReferenceOutput
}

type RoleOwnerReferenceArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RoleOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleOwnerReference)(nil)).Elem()
}

func (i RoleOwnerReferenceArgs) ToRoleOwnerReferenceOutput() RoleOwnerReferenceOutput {
	return i.ToRoleOwnerReferenceOutputWithContext(context.Background())
}

func (i RoleOwnerReferenceArgs) ToRoleOwnerReferenceOutputWithContext(ctx context.Context) RoleOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleOwnerReferenceOutput)
}

func (i RoleOwnerReferenceArgs) ToRoleOwnerReferencePtrOutput() RoleOwnerReferencePtrOutput {
	return i.ToRoleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i RoleOwnerReferenceArgs) ToRoleOwnerReferencePtrOutputWithContext(ctx context.Context) RoleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleOwnerReferenceOutput).ToRoleOwnerReferencePtrOutputWithContext(ctx)
}

// RoleOwnerReferencePtrInput is an input type that accepts RoleOwnerReferenceArgs, RoleOwnerReferencePtr and RoleOwnerReferencePtrOutput values.
// You can construct a concrete instance of `RoleOwnerReferencePtrInput` via:
//
//	        RoleOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type RoleOwnerReferencePtrInput interface {
	pulumi.Input

	ToRoleOwnerReferencePtrOutput() RoleOwnerReferencePtrOutput
	ToRoleOwnerReferencePtrOutputWithContext(context.Context) RoleOwnerReferencePtrOutput
}

type roleOwnerReferencePtrType RoleOwnerReferenceArgs

func RoleOwnerReferencePtr(v *RoleOwnerReferenceArgs) RoleOwnerReferencePtrInput {
	return (*roleOwnerReferencePtrType)(v)
}

func (*roleOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleOwnerReference)(nil)).Elem()
}

func (i *roleOwnerReferencePtrType) ToRoleOwnerReferencePtrOutput() RoleOwnerReferencePtrOutput {
	return i.ToRoleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *roleOwnerReferencePtrType) ToRoleOwnerReferencePtrOutputWithContext(ctx context.Context) RoleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleOwnerReferencePtrOutput)
}

type RoleOwnerReferenceOutput struct{ *pulumi.OutputState }

func (RoleOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleOwnerReference)(nil)).Elem()
}

func (o RoleOwnerReferenceOutput) ToRoleOwnerReferenceOutput() RoleOwnerReferenceOutput {
	return o
}

func (o RoleOwnerReferenceOutput) ToRoleOwnerReferenceOutputWithContext(ctx context.Context) RoleOwnerReferenceOutput {
	return o
}

func (o RoleOwnerReferenceOutput) ToRoleOwnerReferencePtrOutput() RoleOwnerReferencePtrOutput {
	return o.ToRoleOwnerReferencePtrOutputWithContext(context.Background())
}

func (o RoleOwnerReferenceOutput) ToRoleOwnerReferencePtrOutputWithContext(ctx context.Context) RoleOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleOwnerReference) *RoleOwnerReference {
		return &v
	}).(RoleOwnerReferencePtrOutput)
}

// - The kind name (Default value: project)(Required).
func (o RoleOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the role.
func (o RoleOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o RoleOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type RoleOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (RoleOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleOwnerReference)(nil)).Elem()
}

func (o RoleOwnerReferencePtrOutput) ToRoleOwnerReferencePtrOutput() RoleOwnerReferencePtrOutput {
	return o
}

func (o RoleOwnerReferencePtrOutput) ToRoleOwnerReferencePtrOutputWithContext(ctx context.Context) RoleOwnerReferencePtrOutput {
	return o
}

func (o RoleOwnerReferencePtrOutput) Elem() RoleOwnerReferenceOutput {
	return o.ApplyT(func(v *RoleOwnerReference) RoleOwnerReference {
		if v != nil {
			return *v
		}
		var ret RoleOwnerReference
		return ret
	}).(RoleOwnerReferenceOutput)
}

// - The kind name (Default value: project)(Required).
func (o RoleOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the role.
func (o RoleOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o RoleOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RolePermissionReferenceList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid string `pulumi:"uuid"`
}

// RolePermissionReferenceListInput is an input type that accepts RolePermissionReferenceListArgs and RolePermissionReferenceListOutput values.
// You can construct a concrete instance of `RolePermissionReferenceListInput` via:
//
//	RolePermissionReferenceListArgs{...}
type RolePermissionReferenceListInput interface {
	pulumi.Input

	ToRolePermissionReferenceListOutput() RolePermissionReferenceListOutput
	ToRolePermissionReferenceListOutputWithContext(context.Context) RolePermissionReferenceListOutput
}

type RolePermissionReferenceListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RolePermissionReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermissionReferenceList)(nil)).Elem()
}

func (i RolePermissionReferenceListArgs) ToRolePermissionReferenceListOutput() RolePermissionReferenceListOutput {
	return i.ToRolePermissionReferenceListOutputWithContext(context.Background())
}

func (i RolePermissionReferenceListArgs) ToRolePermissionReferenceListOutputWithContext(ctx context.Context) RolePermissionReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionReferenceListOutput)
}

// RolePermissionReferenceListArrayInput is an input type that accepts RolePermissionReferenceListArray and RolePermissionReferenceListArrayOutput values.
// You can construct a concrete instance of `RolePermissionReferenceListArrayInput` via:
//
//	RolePermissionReferenceListArray{ RolePermissionReferenceListArgs{...} }
type RolePermissionReferenceListArrayInput interface {
	pulumi.Input

	ToRolePermissionReferenceListArrayOutput() RolePermissionReferenceListArrayOutput
	ToRolePermissionReferenceListArrayOutputWithContext(context.Context) RolePermissionReferenceListArrayOutput
}

type RolePermissionReferenceListArray []RolePermissionReferenceListInput

func (RolePermissionReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermissionReferenceList)(nil)).Elem()
}

func (i RolePermissionReferenceListArray) ToRolePermissionReferenceListArrayOutput() RolePermissionReferenceListArrayOutput {
	return i.ToRolePermissionReferenceListArrayOutputWithContext(context.Background())
}

func (i RolePermissionReferenceListArray) ToRolePermissionReferenceListArrayOutputWithContext(ctx context.Context) RolePermissionReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionReferenceListArrayOutput)
}

type RolePermissionReferenceListOutput struct{ *pulumi.OutputState }

func (RolePermissionReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermissionReferenceList)(nil)).Elem()
}

func (o RolePermissionReferenceListOutput) ToRolePermissionReferenceListOutput() RolePermissionReferenceListOutput {
	return o
}

func (o RolePermissionReferenceListOutput) ToRolePermissionReferenceListOutputWithContext(ctx context.Context) RolePermissionReferenceListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o RolePermissionReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolePermissionReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the role.
func (o RolePermissionReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolePermissionReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o RolePermissionReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermissionReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type RolePermissionReferenceListArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermissionReferenceList)(nil)).Elem()
}

func (o RolePermissionReferenceListArrayOutput) ToRolePermissionReferenceListArrayOutput() RolePermissionReferenceListArrayOutput {
	return o
}

func (o RolePermissionReferenceListArrayOutput) ToRolePermissionReferenceListArrayOutputWithContext(ctx context.Context) RolePermissionReferenceListArrayOutput {
	return o
}

func (o RolePermissionReferenceListArrayOutput) Index(i pulumi.IntInput) RolePermissionReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermissionReferenceList {
		return vs[0].([]RolePermissionReferenceList)[vs[1].(int)]
	}).(RolePermissionReferenceListOutput)
}

type RoleProjectReference struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// RoleProjectReferenceInput is an input type that accepts RoleProjectReferenceArgs and RoleProjectReferenceOutput values.
// You can construct a concrete instance of `RoleProjectReferenceInput` via:
//
//	RoleProjectReferenceArgs{...}
type RoleProjectReferenceInput interface {
	pulumi.Input

	ToRoleProjectReferenceOutput() RoleProjectReferenceOutput
	ToRoleProjectReferenceOutputWithContext(context.Context) RoleProjectReferenceOutput
}

type RoleProjectReferenceArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the role.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RoleProjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleProjectReference)(nil)).Elem()
}

func (i RoleProjectReferenceArgs) ToRoleProjectReferenceOutput() RoleProjectReferenceOutput {
	return i.ToRoleProjectReferenceOutputWithContext(context.Background())
}

func (i RoleProjectReferenceArgs) ToRoleProjectReferenceOutputWithContext(ctx context.Context) RoleProjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleProjectReferenceOutput)
}

func (i RoleProjectReferenceArgs) ToRoleProjectReferencePtrOutput() RoleProjectReferencePtrOutput {
	return i.ToRoleProjectReferencePtrOutputWithContext(context.Background())
}

func (i RoleProjectReferenceArgs) ToRoleProjectReferencePtrOutputWithContext(ctx context.Context) RoleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleProjectReferenceOutput).ToRoleProjectReferencePtrOutputWithContext(ctx)
}

// RoleProjectReferencePtrInput is an input type that accepts RoleProjectReferenceArgs, RoleProjectReferencePtr and RoleProjectReferencePtrOutput values.
// You can construct a concrete instance of `RoleProjectReferencePtrInput` via:
//
//	        RoleProjectReferenceArgs{...}
//
//	or:
//
//	        nil
type RoleProjectReferencePtrInput interface {
	pulumi.Input

	ToRoleProjectReferencePtrOutput() RoleProjectReferencePtrOutput
	ToRoleProjectReferencePtrOutputWithContext(context.Context) RoleProjectReferencePtrOutput
}

type roleProjectReferencePtrType RoleProjectReferenceArgs

func RoleProjectReferencePtr(v *RoleProjectReferenceArgs) RoleProjectReferencePtrInput {
	return (*roleProjectReferencePtrType)(v)
}

func (*roleProjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleProjectReference)(nil)).Elem()
}

func (i *roleProjectReferencePtrType) ToRoleProjectReferencePtrOutput() RoleProjectReferencePtrOutput {
	return i.ToRoleProjectReferencePtrOutputWithContext(context.Background())
}

func (i *roleProjectReferencePtrType) ToRoleProjectReferencePtrOutputWithContext(ctx context.Context) RoleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleProjectReferencePtrOutput)
}

type RoleProjectReferenceOutput struct{ *pulumi.OutputState }

func (RoleProjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleProjectReference)(nil)).Elem()
}

func (o RoleProjectReferenceOutput) ToRoleProjectReferenceOutput() RoleProjectReferenceOutput {
	return o
}

func (o RoleProjectReferenceOutput) ToRoleProjectReferenceOutputWithContext(ctx context.Context) RoleProjectReferenceOutput {
	return o
}

func (o RoleProjectReferenceOutput) ToRoleProjectReferencePtrOutput() RoleProjectReferencePtrOutput {
	return o.ToRoleProjectReferencePtrOutputWithContext(context.Background())
}

func (o RoleProjectReferenceOutput) ToRoleProjectReferencePtrOutputWithContext(ctx context.Context) RoleProjectReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleProjectReference) *RoleProjectReference {
		return &v
	}).(RoleProjectReferencePtrOutput)
}

// - The kind name (Default value: project)(Required).
func (o RoleProjectReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleProjectReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the role.
func (o RoleProjectReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleProjectReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o RoleProjectReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleProjectReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type RoleProjectReferencePtrOutput struct{ *pulumi.OutputState }

func (RoleProjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleProjectReference)(nil)).Elem()
}

func (o RoleProjectReferencePtrOutput) ToRoleProjectReferencePtrOutput() RoleProjectReferencePtrOutput {
	return o
}

func (o RoleProjectReferencePtrOutput) ToRoleProjectReferencePtrOutputWithContext(ctx context.Context) RoleProjectReferencePtrOutput {
	return o
}

func (o RoleProjectReferencePtrOutput) Elem() RoleProjectReferenceOutput {
	return o.ApplyT(func(v *RoleProjectReference) RoleProjectReference {
		if v != nil {
			return *v
		}
		var ret RoleProjectReference
		return ret
	}).(RoleProjectReferenceOutput)
}

// - The kind name (Default value: project)(Required).
func (o RoleProjectReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the role.
func (o RoleProjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o RoleProjectReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RolesV2Link struct {
	// - The URL at which the entity described by the link can be accessed.
	Href *string `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel *string `pulumi:"rel"`
}

// RolesV2LinkInput is an input type that accepts RolesV2LinkArgs and RolesV2LinkOutput values.
// You can construct a concrete instance of `RolesV2LinkInput` via:
//
//	RolesV2LinkArgs{...}
type RolesV2LinkInput interface {
	pulumi.Input

	ToRolesV2LinkOutput() RolesV2LinkOutput
	ToRolesV2LinkOutputWithContext(context.Context) RolesV2LinkOutput
}

type RolesV2LinkArgs struct {
	// - The URL at which the entity described by the link can be accessed.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel pulumi.StringPtrInput `pulumi:"rel"`
}

func (RolesV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesV2Link)(nil)).Elem()
}

func (i RolesV2LinkArgs) ToRolesV2LinkOutput() RolesV2LinkOutput {
	return i.ToRolesV2LinkOutputWithContext(context.Background())
}

func (i RolesV2LinkArgs) ToRolesV2LinkOutputWithContext(ctx context.Context) RolesV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesV2LinkOutput)
}

// RolesV2LinkArrayInput is an input type that accepts RolesV2LinkArray and RolesV2LinkArrayOutput values.
// You can construct a concrete instance of `RolesV2LinkArrayInput` via:
//
//	RolesV2LinkArray{ RolesV2LinkArgs{...} }
type RolesV2LinkArrayInput interface {
	pulumi.Input

	ToRolesV2LinkArrayOutput() RolesV2LinkArrayOutput
	ToRolesV2LinkArrayOutputWithContext(context.Context) RolesV2LinkArrayOutput
}

type RolesV2LinkArray []RolesV2LinkInput

func (RolesV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolesV2Link)(nil)).Elem()
}

func (i RolesV2LinkArray) ToRolesV2LinkArrayOutput() RolesV2LinkArrayOutput {
	return i.ToRolesV2LinkArrayOutputWithContext(context.Background())
}

func (i RolesV2LinkArray) ToRolesV2LinkArrayOutputWithContext(ctx context.Context) RolesV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesV2LinkArrayOutput)
}

type RolesV2LinkOutput struct{ *pulumi.OutputState }

func (RolesV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolesV2Link)(nil)).Elem()
}

func (o RolesV2LinkOutput) ToRolesV2LinkOutput() RolesV2LinkOutput {
	return o
}

func (o RolesV2LinkOutput) ToRolesV2LinkOutputWithContext(ctx context.Context) RolesV2LinkOutput {
	return o
}

// - The URL at which the entity described by the link can be accessed.
func (o RolesV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
func (o RolesV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolesV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type RolesV2LinkArrayOutput struct{ *pulumi.OutputState }

func (RolesV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolesV2Link)(nil)).Elem()
}

func (o RolesV2LinkArrayOutput) ToRolesV2LinkArrayOutput() RolesV2LinkArrayOutput {
	return o
}

func (o RolesV2LinkArrayOutput) ToRolesV2LinkArrayOutputWithContext(ctx context.Context) RolesV2LinkArrayOutput {
	return o
}

func (o RolesV2LinkArrayOutput) Index(i pulumi.IntInput) RolesV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolesV2Link {
		return vs[0].([]RolesV2Link)[vs[1].(int)]
	}).(RolesV2LinkOutput)
}

type RoutesV2Destination struct {
	// IPv4 Subnet Object
	// * `ipv4.ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 format.
	// * `ipv4.ip.value`: (Required) The IPv4 address of the host.
	// * `ipv4.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv4 address belongs.
	// * `ipv4.prefix_length`: (Required) The prefix length of the network to which this host IPv4 address belongs.
	Ipv4 *RoutesV2DestinationIpv4 `pulumi:"ipv4"`
	// IPv6 Subnet Object
	// * `ipv6.ip`: (Required) IP address format
	// * `ipv6.ip.value`: (Required) The IPv6 address of the host.
	// * `ipv6.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv6 address belongs.
	// * `ipv6.prefix_length`: (Required) The prefix length of the network to which this host IPv6 address belongs.
	Ipv6 *RoutesV2DestinationIpv6 `pulumi:"ipv6"`
}

// RoutesV2DestinationInput is an input type that accepts RoutesV2DestinationArgs and RoutesV2DestinationOutput values.
// You can construct a concrete instance of `RoutesV2DestinationInput` via:
//
//	RoutesV2DestinationArgs{...}
type RoutesV2DestinationInput interface {
	pulumi.Input

	ToRoutesV2DestinationOutput() RoutesV2DestinationOutput
	ToRoutesV2DestinationOutputWithContext(context.Context) RoutesV2DestinationOutput
}

type RoutesV2DestinationArgs struct {
	// IPv4 Subnet Object
	// * `ipv4.ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 format.
	// * `ipv4.ip.value`: (Required) The IPv4 address of the host.
	// * `ipv4.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv4 address belongs.
	// * `ipv4.prefix_length`: (Required) The prefix length of the network to which this host IPv4 address belongs.
	Ipv4 RoutesV2DestinationIpv4PtrInput `pulumi:"ipv4"`
	// IPv6 Subnet Object
	// * `ipv6.ip`: (Required) IP address format
	// * `ipv6.ip.value`: (Required) The IPv6 address of the host.
	// * `ipv6.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv6 address belongs.
	// * `ipv6.prefix_length`: (Required) The prefix length of the network to which this host IPv6 address belongs.
	Ipv6 RoutesV2DestinationIpv6PtrInput `pulumi:"ipv6"`
}

func (RoutesV2DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Destination)(nil)).Elem()
}

func (i RoutesV2DestinationArgs) ToRoutesV2DestinationOutput() RoutesV2DestinationOutput {
	return i.ToRoutesV2DestinationOutputWithContext(context.Background())
}

func (i RoutesV2DestinationArgs) ToRoutesV2DestinationOutputWithContext(ctx context.Context) RoutesV2DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationOutput)
}

func (i RoutesV2DestinationArgs) ToRoutesV2DestinationPtrOutput() RoutesV2DestinationPtrOutput {
	return i.ToRoutesV2DestinationPtrOutputWithContext(context.Background())
}

func (i RoutesV2DestinationArgs) ToRoutesV2DestinationPtrOutputWithContext(ctx context.Context) RoutesV2DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationOutput).ToRoutesV2DestinationPtrOutputWithContext(ctx)
}

// RoutesV2DestinationPtrInput is an input type that accepts RoutesV2DestinationArgs, RoutesV2DestinationPtr and RoutesV2DestinationPtrOutput values.
// You can construct a concrete instance of `RoutesV2DestinationPtrInput` via:
//
//	        RoutesV2DestinationArgs{...}
//
//	or:
//
//	        nil
type RoutesV2DestinationPtrInput interface {
	pulumi.Input

	ToRoutesV2DestinationPtrOutput() RoutesV2DestinationPtrOutput
	ToRoutesV2DestinationPtrOutputWithContext(context.Context) RoutesV2DestinationPtrOutput
}

type routesV2DestinationPtrType RoutesV2DestinationArgs

func RoutesV2DestinationPtr(v *RoutesV2DestinationArgs) RoutesV2DestinationPtrInput {
	return (*routesV2DestinationPtrType)(v)
}

func (*routesV2DestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2Destination)(nil)).Elem()
}

func (i *routesV2DestinationPtrType) ToRoutesV2DestinationPtrOutput() RoutesV2DestinationPtrOutput {
	return i.ToRoutesV2DestinationPtrOutputWithContext(context.Background())
}

func (i *routesV2DestinationPtrType) ToRoutesV2DestinationPtrOutputWithContext(ctx context.Context) RoutesV2DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationPtrOutput)
}

type RoutesV2DestinationOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Destination)(nil)).Elem()
}

func (o RoutesV2DestinationOutput) ToRoutesV2DestinationOutput() RoutesV2DestinationOutput {
	return o
}

func (o RoutesV2DestinationOutput) ToRoutesV2DestinationOutputWithContext(ctx context.Context) RoutesV2DestinationOutput {
	return o
}

func (o RoutesV2DestinationOutput) ToRoutesV2DestinationPtrOutput() RoutesV2DestinationPtrOutput {
	return o.ToRoutesV2DestinationPtrOutputWithContext(context.Background())
}

func (o RoutesV2DestinationOutput) ToRoutesV2DestinationPtrOutputWithContext(ctx context.Context) RoutesV2DestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2Destination) *RoutesV2Destination {
		return &v
	}).(RoutesV2DestinationPtrOutput)
}

// IPv4 Subnet Object
// * `ipv4.ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 format.
// * `ipv4.ip.value`: (Required) The IPv4 address of the host.
// * `ipv4.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv4 address belongs.
// * `ipv4.prefix_length`: (Required) The prefix length of the network to which this host IPv4 address belongs.
func (o RoutesV2DestinationOutput) Ipv4() RoutesV2DestinationIpv4PtrOutput {
	return o.ApplyT(func(v RoutesV2Destination) *RoutesV2DestinationIpv4 { return v.Ipv4 }).(RoutesV2DestinationIpv4PtrOutput)
}

// IPv6 Subnet Object
// * `ipv6.ip`: (Required) IP address format
// * `ipv6.ip.value`: (Required) The IPv6 address of the host.
// * `ipv6.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv6 address belongs.
// * `ipv6.prefix_length`: (Required) The prefix length of the network to which this host IPv6 address belongs.
func (o RoutesV2DestinationOutput) Ipv6() RoutesV2DestinationIpv6PtrOutput {
	return o.ApplyT(func(v RoutesV2Destination) *RoutesV2DestinationIpv6 { return v.Ipv6 }).(RoutesV2DestinationIpv6PtrOutput)
}

type RoutesV2DestinationPtrOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2Destination)(nil)).Elem()
}

func (o RoutesV2DestinationPtrOutput) ToRoutesV2DestinationPtrOutput() RoutesV2DestinationPtrOutput {
	return o
}

func (o RoutesV2DestinationPtrOutput) ToRoutesV2DestinationPtrOutputWithContext(ctx context.Context) RoutesV2DestinationPtrOutput {
	return o
}

func (o RoutesV2DestinationPtrOutput) Elem() RoutesV2DestinationOutput {
	return o.ApplyT(func(v *RoutesV2Destination) RoutesV2Destination {
		if v != nil {
			return *v
		}
		var ret RoutesV2Destination
		return ret
	}).(RoutesV2DestinationOutput)
}

// IPv4 Subnet Object
// * `ipv4.ip`: (Required) An unique address that identifies a device on the internet or a local network in IPv4 format.
// * `ipv4.ip.value`: (Required) The IPv4 address of the host.
// * `ipv4.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv4 address belongs.
// * `ipv4.prefix_length`: (Required) The prefix length of the network to which this host IPv4 address belongs.
func (o RoutesV2DestinationPtrOutput) Ipv4() RoutesV2DestinationIpv4PtrOutput {
	return o.ApplyT(func(v *RoutesV2Destination) *RoutesV2DestinationIpv4 {
		if v == nil {
			return nil
		}
		return v.Ipv4
	}).(RoutesV2DestinationIpv4PtrOutput)
}

// IPv6 Subnet Object
// * `ipv6.ip`: (Required) IP address format
// * `ipv6.ip.value`: (Required) The IPv6 address of the host.
// * `ipv6.ip.prefix_length`: (Optional) The prefix length of the network to which this host IPv6 address belongs.
// * `ipv6.prefix_length`: (Required) The prefix length of the network to which this host IPv6 address belongs.
func (o RoutesV2DestinationPtrOutput) Ipv6() RoutesV2DestinationIpv6PtrOutput {
	return o.ApplyT(func(v *RoutesV2Destination) *RoutesV2DestinationIpv6 {
		if v == nil {
			return nil
		}
		return v.Ipv6
	}).(RoutesV2DestinationIpv6PtrOutput)
}

type RoutesV2DestinationIpv4 struct {
	Ip RoutesV2DestinationIpv4Ip `pulumi:"ip"`
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
}

// RoutesV2DestinationIpv4Input is an input type that accepts RoutesV2DestinationIpv4Args and RoutesV2DestinationIpv4Output values.
// You can construct a concrete instance of `RoutesV2DestinationIpv4Input` via:
//
//	RoutesV2DestinationIpv4Args{...}
type RoutesV2DestinationIpv4Input interface {
	pulumi.Input

	ToRoutesV2DestinationIpv4Output() RoutesV2DestinationIpv4Output
	ToRoutesV2DestinationIpv4OutputWithContext(context.Context) RoutesV2DestinationIpv4Output
}

type RoutesV2DestinationIpv4Args struct {
	Ip RoutesV2DestinationIpv4IpInput `pulumi:"ip"`
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
}

func (RoutesV2DestinationIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv4)(nil)).Elem()
}

func (i RoutesV2DestinationIpv4Args) ToRoutesV2DestinationIpv4Output() RoutesV2DestinationIpv4Output {
	return i.ToRoutesV2DestinationIpv4OutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv4Args) ToRoutesV2DestinationIpv4OutputWithContext(ctx context.Context) RoutesV2DestinationIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4Output)
}

func (i RoutesV2DestinationIpv4Args) ToRoutesV2DestinationIpv4PtrOutput() RoutesV2DestinationIpv4PtrOutput {
	return i.ToRoutesV2DestinationIpv4PtrOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv4Args) ToRoutesV2DestinationIpv4PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4Output).ToRoutesV2DestinationIpv4PtrOutputWithContext(ctx)
}

// RoutesV2DestinationIpv4PtrInput is an input type that accepts RoutesV2DestinationIpv4Args, RoutesV2DestinationIpv4Ptr and RoutesV2DestinationIpv4PtrOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv4PtrInput` via:
//
//	        RoutesV2DestinationIpv4Args{...}
//
//	or:
//
//	        nil
type RoutesV2DestinationIpv4PtrInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv4PtrOutput() RoutesV2DestinationIpv4PtrOutput
	ToRoutesV2DestinationIpv4PtrOutputWithContext(context.Context) RoutesV2DestinationIpv4PtrOutput
}

type routesV2DestinationIpv4PtrType RoutesV2DestinationIpv4Args

func RoutesV2DestinationIpv4Ptr(v *RoutesV2DestinationIpv4Args) RoutesV2DestinationIpv4PtrInput {
	return (*routesV2DestinationIpv4PtrType)(v)
}

func (*routesV2DestinationIpv4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv4)(nil)).Elem()
}

func (i *routesV2DestinationIpv4PtrType) ToRoutesV2DestinationIpv4PtrOutput() RoutesV2DestinationIpv4PtrOutput {
	return i.ToRoutesV2DestinationIpv4PtrOutputWithContext(context.Background())
}

func (i *routesV2DestinationIpv4PtrType) ToRoutesV2DestinationIpv4PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4PtrOutput)
}

type RoutesV2DestinationIpv4Output struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv4)(nil)).Elem()
}

func (o RoutesV2DestinationIpv4Output) ToRoutesV2DestinationIpv4Output() RoutesV2DestinationIpv4Output {
	return o
}

func (o RoutesV2DestinationIpv4Output) ToRoutesV2DestinationIpv4OutputWithContext(ctx context.Context) RoutesV2DestinationIpv4Output {
	return o
}

func (o RoutesV2DestinationIpv4Output) ToRoutesV2DestinationIpv4PtrOutput() RoutesV2DestinationIpv4PtrOutput {
	return o.ToRoutesV2DestinationIpv4PtrOutputWithContext(context.Background())
}

func (o RoutesV2DestinationIpv4Output) ToRoutesV2DestinationIpv4PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2DestinationIpv4) *RoutesV2DestinationIpv4 {
		return &v
	}).(RoutesV2DestinationIpv4PtrOutput)
}

func (o RoutesV2DestinationIpv4Output) Ip() RoutesV2DestinationIpv4IpOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv4) RoutesV2DestinationIpv4Ip { return v.Ip }).(RoutesV2DestinationIpv4IpOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type RoutesV2DestinationIpv4PtrOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv4)(nil)).Elem()
}

func (o RoutesV2DestinationIpv4PtrOutput) ToRoutesV2DestinationIpv4PtrOutput() RoutesV2DestinationIpv4PtrOutput {
	return o
}

func (o RoutesV2DestinationIpv4PtrOutput) ToRoutesV2DestinationIpv4PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4PtrOutput {
	return o
}

func (o RoutesV2DestinationIpv4PtrOutput) Elem() RoutesV2DestinationIpv4Output {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4) RoutesV2DestinationIpv4 {
		if v != nil {
			return *v
		}
		var ret RoutesV2DestinationIpv4
		return ret
	}).(RoutesV2DestinationIpv4Output)
}

func (o RoutesV2DestinationIpv4PtrOutput) Ip() RoutesV2DestinationIpv4IpPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4) *RoutesV2DestinationIpv4Ip {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(RoutesV2DestinationIpv4IpPtrOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv4PtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

type RoutesV2DestinationIpv4Ip struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of IP address
	Value string `pulumi:"value"`
}

// RoutesV2DestinationIpv4IpInput is an input type that accepts RoutesV2DestinationIpv4IpArgs and RoutesV2DestinationIpv4IpOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv4IpInput` via:
//
//	RoutesV2DestinationIpv4IpArgs{...}
type RoutesV2DestinationIpv4IpInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv4IpOutput() RoutesV2DestinationIpv4IpOutput
	ToRoutesV2DestinationIpv4IpOutputWithContext(context.Context) RoutesV2DestinationIpv4IpOutput
}

type RoutesV2DestinationIpv4IpArgs struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of IP address
	Value pulumi.StringInput `pulumi:"value"`
}

func (RoutesV2DestinationIpv4IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv4Ip)(nil)).Elem()
}

func (i RoutesV2DestinationIpv4IpArgs) ToRoutesV2DestinationIpv4IpOutput() RoutesV2DestinationIpv4IpOutput {
	return i.ToRoutesV2DestinationIpv4IpOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv4IpArgs) ToRoutesV2DestinationIpv4IpOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4IpOutput)
}

func (i RoutesV2DestinationIpv4IpArgs) ToRoutesV2DestinationIpv4IpPtrOutput() RoutesV2DestinationIpv4IpPtrOutput {
	return i.ToRoutesV2DestinationIpv4IpPtrOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv4IpArgs) ToRoutesV2DestinationIpv4IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4IpOutput).ToRoutesV2DestinationIpv4IpPtrOutputWithContext(ctx)
}

// RoutesV2DestinationIpv4IpPtrInput is an input type that accepts RoutesV2DestinationIpv4IpArgs, RoutesV2DestinationIpv4IpPtr and RoutesV2DestinationIpv4IpPtrOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv4IpPtrInput` via:
//
//	        RoutesV2DestinationIpv4IpArgs{...}
//
//	or:
//
//	        nil
type RoutesV2DestinationIpv4IpPtrInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv4IpPtrOutput() RoutesV2DestinationIpv4IpPtrOutput
	ToRoutesV2DestinationIpv4IpPtrOutputWithContext(context.Context) RoutesV2DestinationIpv4IpPtrOutput
}

type routesV2DestinationIpv4IpPtrType RoutesV2DestinationIpv4IpArgs

func RoutesV2DestinationIpv4IpPtr(v *RoutesV2DestinationIpv4IpArgs) RoutesV2DestinationIpv4IpPtrInput {
	return (*routesV2DestinationIpv4IpPtrType)(v)
}

func (*routesV2DestinationIpv4IpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv4Ip)(nil)).Elem()
}

func (i *routesV2DestinationIpv4IpPtrType) ToRoutesV2DestinationIpv4IpPtrOutput() RoutesV2DestinationIpv4IpPtrOutput {
	return i.ToRoutesV2DestinationIpv4IpPtrOutputWithContext(context.Background())
}

func (i *routesV2DestinationIpv4IpPtrType) ToRoutesV2DestinationIpv4IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv4IpPtrOutput)
}

type RoutesV2DestinationIpv4IpOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv4IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv4Ip)(nil)).Elem()
}

func (o RoutesV2DestinationIpv4IpOutput) ToRoutesV2DestinationIpv4IpOutput() RoutesV2DestinationIpv4IpOutput {
	return o
}

func (o RoutesV2DestinationIpv4IpOutput) ToRoutesV2DestinationIpv4IpOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpOutput {
	return o
}

func (o RoutesV2DestinationIpv4IpOutput) ToRoutesV2DestinationIpv4IpPtrOutput() RoutesV2DestinationIpv4IpPtrOutput {
	return o.ToRoutesV2DestinationIpv4IpPtrOutputWithContext(context.Background())
}

func (o RoutesV2DestinationIpv4IpOutput) ToRoutesV2DestinationIpv4IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2DestinationIpv4Ip) *RoutesV2DestinationIpv4Ip {
		return &v
	}).(RoutesV2DestinationIpv4IpPtrOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv4IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv4Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2DestinationIpv4IpOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv4Ip) string { return v.Value }).(pulumi.StringOutput)
}

type RoutesV2DestinationIpv4IpPtrOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv4IpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv4Ip)(nil)).Elem()
}

func (o RoutesV2DestinationIpv4IpPtrOutput) ToRoutesV2DestinationIpv4IpPtrOutput() RoutesV2DestinationIpv4IpPtrOutput {
	return o
}

func (o RoutesV2DestinationIpv4IpPtrOutput) ToRoutesV2DestinationIpv4IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv4IpPtrOutput {
	return o
}

func (o RoutesV2DestinationIpv4IpPtrOutput) Elem() RoutesV2DestinationIpv4IpOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4Ip) RoutesV2DestinationIpv4Ip {
		if v != nil {
			return *v
		}
		var ret RoutesV2DestinationIpv4Ip
		return ret
	}).(RoutesV2DestinationIpv4IpOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv4IpPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4Ip) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2DestinationIpv4IpPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv4Ip) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RoutesV2DestinationIpv6 struct {
	Ip RoutesV2DestinationIpv6Ip `pulumi:"ip"`
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
}

// RoutesV2DestinationIpv6Input is an input type that accepts RoutesV2DestinationIpv6Args and RoutesV2DestinationIpv6Output values.
// You can construct a concrete instance of `RoutesV2DestinationIpv6Input` via:
//
//	RoutesV2DestinationIpv6Args{...}
type RoutesV2DestinationIpv6Input interface {
	pulumi.Input

	ToRoutesV2DestinationIpv6Output() RoutesV2DestinationIpv6Output
	ToRoutesV2DestinationIpv6OutputWithContext(context.Context) RoutesV2DestinationIpv6Output
}

type RoutesV2DestinationIpv6Args struct {
	Ip RoutesV2DestinationIpv6IpInput `pulumi:"ip"`
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
}

func (RoutesV2DestinationIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv6)(nil)).Elem()
}

func (i RoutesV2DestinationIpv6Args) ToRoutesV2DestinationIpv6Output() RoutesV2DestinationIpv6Output {
	return i.ToRoutesV2DestinationIpv6OutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv6Args) ToRoutesV2DestinationIpv6OutputWithContext(ctx context.Context) RoutesV2DestinationIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6Output)
}

func (i RoutesV2DestinationIpv6Args) ToRoutesV2DestinationIpv6PtrOutput() RoutesV2DestinationIpv6PtrOutput {
	return i.ToRoutesV2DestinationIpv6PtrOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv6Args) ToRoutesV2DestinationIpv6PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6Output).ToRoutesV2DestinationIpv6PtrOutputWithContext(ctx)
}

// RoutesV2DestinationIpv6PtrInput is an input type that accepts RoutesV2DestinationIpv6Args, RoutesV2DestinationIpv6Ptr and RoutesV2DestinationIpv6PtrOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv6PtrInput` via:
//
//	        RoutesV2DestinationIpv6Args{...}
//
//	or:
//
//	        nil
type RoutesV2DestinationIpv6PtrInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv6PtrOutput() RoutesV2DestinationIpv6PtrOutput
	ToRoutesV2DestinationIpv6PtrOutputWithContext(context.Context) RoutesV2DestinationIpv6PtrOutput
}

type routesV2DestinationIpv6PtrType RoutesV2DestinationIpv6Args

func RoutesV2DestinationIpv6Ptr(v *RoutesV2DestinationIpv6Args) RoutesV2DestinationIpv6PtrInput {
	return (*routesV2DestinationIpv6PtrType)(v)
}

func (*routesV2DestinationIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv6)(nil)).Elem()
}

func (i *routesV2DestinationIpv6PtrType) ToRoutesV2DestinationIpv6PtrOutput() RoutesV2DestinationIpv6PtrOutput {
	return i.ToRoutesV2DestinationIpv6PtrOutputWithContext(context.Background())
}

func (i *routesV2DestinationIpv6PtrType) ToRoutesV2DestinationIpv6PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6PtrOutput)
}

type RoutesV2DestinationIpv6Output struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv6)(nil)).Elem()
}

func (o RoutesV2DestinationIpv6Output) ToRoutesV2DestinationIpv6Output() RoutesV2DestinationIpv6Output {
	return o
}

func (o RoutesV2DestinationIpv6Output) ToRoutesV2DestinationIpv6OutputWithContext(ctx context.Context) RoutesV2DestinationIpv6Output {
	return o
}

func (o RoutesV2DestinationIpv6Output) ToRoutesV2DestinationIpv6PtrOutput() RoutesV2DestinationIpv6PtrOutput {
	return o.ToRoutesV2DestinationIpv6PtrOutputWithContext(context.Background())
}

func (o RoutesV2DestinationIpv6Output) ToRoutesV2DestinationIpv6PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2DestinationIpv6) *RoutesV2DestinationIpv6 {
		return &v
	}).(RoutesV2DestinationIpv6PtrOutput)
}

func (o RoutesV2DestinationIpv6Output) Ip() RoutesV2DestinationIpv6IpOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv6) RoutesV2DestinationIpv6Ip { return v.Ip }).(RoutesV2DestinationIpv6IpOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type RoutesV2DestinationIpv6PtrOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv6)(nil)).Elem()
}

func (o RoutesV2DestinationIpv6PtrOutput) ToRoutesV2DestinationIpv6PtrOutput() RoutesV2DestinationIpv6PtrOutput {
	return o
}

func (o RoutesV2DestinationIpv6PtrOutput) ToRoutesV2DestinationIpv6PtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6PtrOutput {
	return o
}

func (o RoutesV2DestinationIpv6PtrOutput) Elem() RoutesV2DestinationIpv6Output {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6) RoutesV2DestinationIpv6 {
		if v != nil {
			return *v
		}
		var ret RoutesV2DestinationIpv6
		return ret
	}).(RoutesV2DestinationIpv6Output)
}

func (o RoutesV2DestinationIpv6PtrOutput) Ip() RoutesV2DestinationIpv6IpPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6) *RoutesV2DestinationIpv6Ip {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(RoutesV2DestinationIpv6IpPtrOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv6PtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

type RoutesV2DestinationIpv6Ip struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of IP address
	Value string `pulumi:"value"`
}

// RoutesV2DestinationIpv6IpInput is an input type that accepts RoutesV2DestinationIpv6IpArgs and RoutesV2DestinationIpv6IpOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv6IpInput` via:
//
//	RoutesV2DestinationIpv6IpArgs{...}
type RoutesV2DestinationIpv6IpInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv6IpOutput() RoutesV2DestinationIpv6IpOutput
	ToRoutesV2DestinationIpv6IpOutputWithContext(context.Context) RoutesV2DestinationIpv6IpOutput
}

type RoutesV2DestinationIpv6IpArgs struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of IP address
	Value pulumi.StringInput `pulumi:"value"`
}

func (RoutesV2DestinationIpv6IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv6Ip)(nil)).Elem()
}

func (i RoutesV2DestinationIpv6IpArgs) ToRoutesV2DestinationIpv6IpOutput() RoutesV2DestinationIpv6IpOutput {
	return i.ToRoutesV2DestinationIpv6IpOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv6IpArgs) ToRoutesV2DestinationIpv6IpOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6IpOutput)
}

func (i RoutesV2DestinationIpv6IpArgs) ToRoutesV2DestinationIpv6IpPtrOutput() RoutesV2DestinationIpv6IpPtrOutput {
	return i.ToRoutesV2DestinationIpv6IpPtrOutputWithContext(context.Background())
}

func (i RoutesV2DestinationIpv6IpArgs) ToRoutesV2DestinationIpv6IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6IpOutput).ToRoutesV2DestinationIpv6IpPtrOutputWithContext(ctx)
}

// RoutesV2DestinationIpv6IpPtrInput is an input type that accepts RoutesV2DestinationIpv6IpArgs, RoutesV2DestinationIpv6IpPtr and RoutesV2DestinationIpv6IpPtrOutput values.
// You can construct a concrete instance of `RoutesV2DestinationIpv6IpPtrInput` via:
//
//	        RoutesV2DestinationIpv6IpArgs{...}
//
//	or:
//
//	        nil
type RoutesV2DestinationIpv6IpPtrInput interface {
	pulumi.Input

	ToRoutesV2DestinationIpv6IpPtrOutput() RoutesV2DestinationIpv6IpPtrOutput
	ToRoutesV2DestinationIpv6IpPtrOutputWithContext(context.Context) RoutesV2DestinationIpv6IpPtrOutput
}

type routesV2DestinationIpv6IpPtrType RoutesV2DestinationIpv6IpArgs

func RoutesV2DestinationIpv6IpPtr(v *RoutesV2DestinationIpv6IpArgs) RoutesV2DestinationIpv6IpPtrInput {
	return (*routesV2DestinationIpv6IpPtrType)(v)
}

func (*routesV2DestinationIpv6IpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv6Ip)(nil)).Elem()
}

func (i *routesV2DestinationIpv6IpPtrType) ToRoutesV2DestinationIpv6IpPtrOutput() RoutesV2DestinationIpv6IpPtrOutput {
	return i.ToRoutesV2DestinationIpv6IpPtrOutputWithContext(context.Background())
}

func (i *routesV2DestinationIpv6IpPtrType) ToRoutesV2DestinationIpv6IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2DestinationIpv6IpPtrOutput)
}

type RoutesV2DestinationIpv6IpOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv6IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2DestinationIpv6Ip)(nil)).Elem()
}

func (o RoutesV2DestinationIpv6IpOutput) ToRoutesV2DestinationIpv6IpOutput() RoutesV2DestinationIpv6IpOutput {
	return o
}

func (o RoutesV2DestinationIpv6IpOutput) ToRoutesV2DestinationIpv6IpOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpOutput {
	return o
}

func (o RoutesV2DestinationIpv6IpOutput) ToRoutesV2DestinationIpv6IpPtrOutput() RoutesV2DestinationIpv6IpPtrOutput {
	return o.ToRoutesV2DestinationIpv6IpPtrOutputWithContext(context.Background())
}

func (o RoutesV2DestinationIpv6IpOutput) ToRoutesV2DestinationIpv6IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2DestinationIpv6Ip) *RoutesV2DestinationIpv6Ip {
		return &v
	}).(RoutesV2DestinationIpv6IpPtrOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv6IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv6Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2DestinationIpv6IpOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesV2DestinationIpv6Ip) string { return v.Value }).(pulumi.StringOutput)
}

type RoutesV2DestinationIpv6IpPtrOutput struct{ *pulumi.OutputState }

func (RoutesV2DestinationIpv6IpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2DestinationIpv6Ip)(nil)).Elem()
}

func (o RoutesV2DestinationIpv6IpPtrOutput) ToRoutesV2DestinationIpv6IpPtrOutput() RoutesV2DestinationIpv6IpPtrOutput {
	return o
}

func (o RoutesV2DestinationIpv6IpPtrOutput) ToRoutesV2DestinationIpv6IpPtrOutputWithContext(ctx context.Context) RoutesV2DestinationIpv6IpPtrOutput {
	return o
}

func (o RoutesV2DestinationIpv6IpPtrOutput) Elem() RoutesV2DestinationIpv6IpOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6Ip) RoutesV2DestinationIpv6Ip {
		if v != nil {
			return *v
		}
		var ret RoutesV2DestinationIpv6Ip
		return ret
	}).(RoutesV2DestinationIpv6IpOutput)
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2DestinationIpv6IpPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6Ip) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2DestinationIpv6IpPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2DestinationIpv6Ip) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type RoutesV2Link struct {
	// - The URL at which the entity described by the link can be accessed.
	Href *string `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel *string `pulumi:"rel"`
}

// RoutesV2LinkInput is an input type that accepts RoutesV2LinkArgs and RoutesV2LinkOutput values.
// You can construct a concrete instance of `RoutesV2LinkInput` via:
//
//	RoutesV2LinkArgs{...}
type RoutesV2LinkInput interface {
	pulumi.Input

	ToRoutesV2LinkOutput() RoutesV2LinkOutput
	ToRoutesV2LinkOutputWithContext(context.Context) RoutesV2LinkOutput
}

type RoutesV2LinkArgs struct {
	// - The URL at which the entity described by the link can be accessed.
	Href pulumi.StringPtrInput `pulumi:"href"`
	// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
	Rel pulumi.StringPtrInput `pulumi:"rel"`
}

func (RoutesV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Link)(nil)).Elem()
}

func (i RoutesV2LinkArgs) ToRoutesV2LinkOutput() RoutesV2LinkOutput {
	return i.ToRoutesV2LinkOutputWithContext(context.Background())
}

func (i RoutesV2LinkArgs) ToRoutesV2LinkOutputWithContext(ctx context.Context) RoutesV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2LinkOutput)
}

// RoutesV2LinkArrayInput is an input type that accepts RoutesV2LinkArray and RoutesV2LinkArrayOutput values.
// You can construct a concrete instance of `RoutesV2LinkArrayInput` via:
//
//	RoutesV2LinkArray{ RoutesV2LinkArgs{...} }
type RoutesV2LinkArrayInput interface {
	pulumi.Input

	ToRoutesV2LinkArrayOutput() RoutesV2LinkArrayOutput
	ToRoutesV2LinkArrayOutputWithContext(context.Context) RoutesV2LinkArrayOutput
}

type RoutesV2LinkArray []RoutesV2LinkInput

func (RoutesV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutesV2Link)(nil)).Elem()
}

func (i RoutesV2LinkArray) ToRoutesV2LinkArrayOutput() RoutesV2LinkArrayOutput {
	return i.ToRoutesV2LinkArrayOutputWithContext(context.Background())
}

func (i RoutesV2LinkArray) ToRoutesV2LinkArrayOutputWithContext(ctx context.Context) RoutesV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2LinkArrayOutput)
}

type RoutesV2LinkOutput struct{ *pulumi.OutputState }

func (RoutesV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Link)(nil)).Elem()
}

func (o RoutesV2LinkOutput) ToRoutesV2LinkOutput() RoutesV2LinkOutput {
	return o
}

func (o RoutesV2LinkOutput) ToRoutesV2LinkOutputWithContext(ctx context.Context) RoutesV2LinkOutput {
	return o
}

// - The URL at which the entity described by the link can be accessed.
func (o RoutesV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

// - A name that identifies the relationship of the link to the object that is returned by the URL. The unique value of "self" identifies the URL for the object.
func (o RoutesV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type RoutesV2LinkArrayOutput struct{ *pulumi.OutputState }

func (RoutesV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutesV2Link)(nil)).Elem()
}

func (o RoutesV2LinkArrayOutput) ToRoutesV2LinkArrayOutput() RoutesV2LinkArrayOutput {
	return o
}

func (o RoutesV2LinkArrayOutput) ToRoutesV2LinkArrayOutputWithContext(ctx context.Context) RoutesV2LinkArrayOutput {
	return o
}

func (o RoutesV2LinkArrayOutput) Index(i pulumi.IntInput) RoutesV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutesV2Link {
		return vs[0].([]RoutesV2Link)[vs[1].(int)]
	}).(RoutesV2LinkOutput)
}

type RoutesV2Metadata struct {
	// A list of globally unique identifiers that represent all the categories the resource is associated with.
	CategoryIds []string `pulumi:"categoryIds"`
	// A globally unique identifier that represents the owner of this resource.
	OwnerReferenceId *string `pulumi:"ownerReferenceId"`
	// The userName of the owner of this resource.
	OwnerUserName *string `pulumi:"ownerUserName"`
	// The name of the project this resource belongs to.
	ProjectName *string `pulumi:"projectName"`
	// A globally unique identifier that represents the project this resource belongs to.
	ProjectReferenceId *string `pulumi:"projectReferenceId"`
}

// RoutesV2MetadataInput is an input type that accepts RoutesV2MetadataArgs and RoutesV2MetadataOutput values.
// You can construct a concrete instance of `RoutesV2MetadataInput` via:
//
//	RoutesV2MetadataArgs{...}
type RoutesV2MetadataInput interface {
	pulumi.Input

	ToRoutesV2MetadataOutput() RoutesV2MetadataOutput
	ToRoutesV2MetadataOutputWithContext(context.Context) RoutesV2MetadataOutput
}

type RoutesV2MetadataArgs struct {
	// A list of globally unique identifiers that represent all the categories the resource is associated with.
	CategoryIds pulumi.StringArrayInput `pulumi:"categoryIds"`
	// A globally unique identifier that represents the owner of this resource.
	OwnerReferenceId pulumi.StringPtrInput `pulumi:"ownerReferenceId"`
	// The userName of the owner of this resource.
	OwnerUserName pulumi.StringPtrInput `pulumi:"ownerUserName"`
	// The name of the project this resource belongs to.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// A globally unique identifier that represents the project this resource belongs to.
	ProjectReferenceId pulumi.StringPtrInput `pulumi:"projectReferenceId"`
}

func (RoutesV2MetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Metadata)(nil)).Elem()
}

func (i RoutesV2MetadataArgs) ToRoutesV2MetadataOutput() RoutesV2MetadataOutput {
	return i.ToRoutesV2MetadataOutputWithContext(context.Background())
}

func (i RoutesV2MetadataArgs) ToRoutesV2MetadataOutputWithContext(ctx context.Context) RoutesV2MetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2MetadataOutput)
}

func (i RoutesV2MetadataArgs) ToRoutesV2MetadataPtrOutput() RoutesV2MetadataPtrOutput {
	return i.ToRoutesV2MetadataPtrOutputWithContext(context.Background())
}

func (i RoutesV2MetadataArgs) ToRoutesV2MetadataPtrOutputWithContext(ctx context.Context) RoutesV2MetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2MetadataOutput).ToRoutesV2MetadataPtrOutputWithContext(ctx)
}

// RoutesV2MetadataPtrInput is an input type that accepts RoutesV2MetadataArgs, RoutesV2MetadataPtr and RoutesV2MetadataPtrOutput values.
// You can construct a concrete instance of `RoutesV2MetadataPtrInput` via:
//
//	        RoutesV2MetadataArgs{...}
//
//	or:
//
//	        nil
type RoutesV2MetadataPtrInput interface {
	pulumi.Input

	ToRoutesV2MetadataPtrOutput() RoutesV2MetadataPtrOutput
	ToRoutesV2MetadataPtrOutputWithContext(context.Context) RoutesV2MetadataPtrOutput
}

type routesV2MetadataPtrType RoutesV2MetadataArgs

func RoutesV2MetadataPtr(v *RoutesV2MetadataArgs) RoutesV2MetadataPtrInput {
	return (*routesV2MetadataPtrType)(v)
}

func (*routesV2MetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2Metadata)(nil)).Elem()
}

func (i *routesV2MetadataPtrType) ToRoutesV2MetadataPtrOutput() RoutesV2MetadataPtrOutput {
	return i.ToRoutesV2MetadataPtrOutputWithContext(context.Background())
}

func (i *routesV2MetadataPtrType) ToRoutesV2MetadataPtrOutputWithContext(ctx context.Context) RoutesV2MetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2MetadataPtrOutput)
}

type RoutesV2MetadataOutput struct{ *pulumi.OutputState }

func (RoutesV2MetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2Metadata)(nil)).Elem()
}

func (o RoutesV2MetadataOutput) ToRoutesV2MetadataOutput() RoutesV2MetadataOutput {
	return o
}

func (o RoutesV2MetadataOutput) ToRoutesV2MetadataOutputWithContext(ctx context.Context) RoutesV2MetadataOutput {
	return o
}

func (o RoutesV2MetadataOutput) ToRoutesV2MetadataPtrOutput() RoutesV2MetadataPtrOutput {
	return o.ToRoutesV2MetadataPtrOutputWithContext(context.Background())
}

func (o RoutesV2MetadataOutput) ToRoutesV2MetadataPtrOutputWithContext(ctx context.Context) RoutesV2MetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2Metadata) *RoutesV2Metadata {
		return &v
	}).(RoutesV2MetadataPtrOutput)
}

// A list of globally unique identifiers that represent all the categories the resource is associated with.
func (o RoutesV2MetadataOutput) CategoryIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutesV2Metadata) []string { return v.CategoryIds }).(pulumi.StringArrayOutput)
}

// A globally unique identifier that represents the owner of this resource.
func (o RoutesV2MetadataOutput) OwnerReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Metadata) *string { return v.OwnerReferenceId }).(pulumi.StringPtrOutput)
}

// The userName of the owner of this resource.
func (o RoutesV2MetadataOutput) OwnerUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Metadata) *string { return v.OwnerUserName }).(pulumi.StringPtrOutput)
}

// The name of the project this resource belongs to.
func (o RoutesV2MetadataOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Metadata) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// A globally unique identifier that represents the project this resource belongs to.
func (o RoutesV2MetadataOutput) ProjectReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2Metadata) *string { return v.ProjectReferenceId }).(pulumi.StringPtrOutput)
}

type RoutesV2MetadataPtrOutput struct{ *pulumi.OutputState }

func (RoutesV2MetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2Metadata)(nil)).Elem()
}

func (o RoutesV2MetadataPtrOutput) ToRoutesV2MetadataPtrOutput() RoutesV2MetadataPtrOutput {
	return o
}

func (o RoutesV2MetadataPtrOutput) ToRoutesV2MetadataPtrOutputWithContext(ctx context.Context) RoutesV2MetadataPtrOutput {
	return o
}

func (o RoutesV2MetadataPtrOutput) Elem() RoutesV2MetadataOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) RoutesV2Metadata {
		if v != nil {
			return *v
		}
		var ret RoutesV2Metadata
		return ret
	}).(RoutesV2MetadataOutput)
}

// A list of globally unique identifiers that represent all the categories the resource is associated with.
func (o RoutesV2MetadataPtrOutput) CategoryIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) []string {
		if v == nil {
			return nil
		}
		return v.CategoryIds
	}).(pulumi.StringArrayOutput)
}

// A globally unique identifier that represents the owner of this resource.
func (o RoutesV2MetadataPtrOutput) OwnerReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) *string {
		if v == nil {
			return nil
		}
		return v.OwnerReferenceId
	}).(pulumi.StringPtrOutput)
}

// The userName of the owner of this resource.
func (o RoutesV2MetadataPtrOutput) OwnerUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUserName
	}).(pulumi.StringPtrOutput)
}

// The name of the project this resource belongs to.
func (o RoutesV2MetadataPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// A globally unique identifier that represents the project this resource belongs to.
func (o RoutesV2MetadataPtrOutput) ProjectReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2Metadata) *string {
		if v == nil {
			return nil
		}
		return v.ProjectReferenceId
	}).(pulumi.StringPtrOutput)
}

type RoutesV2NextHop struct {
	NextHopIpAddresses []RoutesV2NextHopNextHopIpAddress `pulumi:"nextHopIpAddresses"`
	NextHopName        *string                           `pulumi:"nextHopName"`
	NextHopReference   *string                           `pulumi:"nextHopReference"`
	NextHopType        string                            `pulumi:"nextHopType"`
}

// RoutesV2NextHopInput is an input type that accepts RoutesV2NextHopArgs and RoutesV2NextHopOutput values.
// You can construct a concrete instance of `RoutesV2NextHopInput` via:
//
//	RoutesV2NextHopArgs{...}
type RoutesV2NextHopInput interface {
	pulumi.Input

	ToRoutesV2NextHopOutput() RoutesV2NextHopOutput
	ToRoutesV2NextHopOutputWithContext(context.Context) RoutesV2NextHopOutput
}

type RoutesV2NextHopArgs struct {
	NextHopIpAddresses RoutesV2NextHopNextHopIpAddressArrayInput `pulumi:"nextHopIpAddresses"`
	NextHopName        pulumi.StringPtrInput                     `pulumi:"nextHopName"`
	NextHopReference   pulumi.StringPtrInput                     `pulumi:"nextHopReference"`
	NextHopType        pulumi.StringInput                        `pulumi:"nextHopType"`
}

func (RoutesV2NextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHop)(nil)).Elem()
}

func (i RoutesV2NextHopArgs) ToRoutesV2NextHopOutput() RoutesV2NextHopOutput {
	return i.ToRoutesV2NextHopOutputWithContext(context.Background())
}

func (i RoutesV2NextHopArgs) ToRoutesV2NextHopOutputWithContext(ctx context.Context) RoutesV2NextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopOutput)
}

func (i RoutesV2NextHopArgs) ToRoutesV2NextHopPtrOutput() RoutesV2NextHopPtrOutput {
	return i.ToRoutesV2NextHopPtrOutputWithContext(context.Background())
}

func (i RoutesV2NextHopArgs) ToRoutesV2NextHopPtrOutputWithContext(ctx context.Context) RoutesV2NextHopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopOutput).ToRoutesV2NextHopPtrOutputWithContext(ctx)
}

// RoutesV2NextHopPtrInput is an input type that accepts RoutesV2NextHopArgs, RoutesV2NextHopPtr and RoutesV2NextHopPtrOutput values.
// You can construct a concrete instance of `RoutesV2NextHopPtrInput` via:
//
//	        RoutesV2NextHopArgs{...}
//
//	or:
//
//	        nil
type RoutesV2NextHopPtrInput interface {
	pulumi.Input

	ToRoutesV2NextHopPtrOutput() RoutesV2NextHopPtrOutput
	ToRoutesV2NextHopPtrOutputWithContext(context.Context) RoutesV2NextHopPtrOutput
}

type routesV2NextHopPtrType RoutesV2NextHopArgs

func RoutesV2NextHopPtr(v *RoutesV2NextHopArgs) RoutesV2NextHopPtrInput {
	return (*routesV2NextHopPtrType)(v)
}

func (*routesV2NextHopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2NextHop)(nil)).Elem()
}

func (i *routesV2NextHopPtrType) ToRoutesV2NextHopPtrOutput() RoutesV2NextHopPtrOutput {
	return i.ToRoutesV2NextHopPtrOutputWithContext(context.Background())
}

func (i *routesV2NextHopPtrType) ToRoutesV2NextHopPtrOutputWithContext(ctx context.Context) RoutesV2NextHopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopPtrOutput)
}

type RoutesV2NextHopOutput struct{ *pulumi.OutputState }

func (RoutesV2NextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHop)(nil)).Elem()
}

func (o RoutesV2NextHopOutput) ToRoutesV2NextHopOutput() RoutesV2NextHopOutput {
	return o
}

func (o RoutesV2NextHopOutput) ToRoutesV2NextHopOutputWithContext(ctx context.Context) RoutesV2NextHopOutput {
	return o
}

func (o RoutesV2NextHopOutput) ToRoutesV2NextHopPtrOutput() RoutesV2NextHopPtrOutput {
	return o.ToRoutesV2NextHopPtrOutputWithContext(context.Background())
}

func (o RoutesV2NextHopOutput) ToRoutesV2NextHopPtrOutputWithContext(ctx context.Context) RoutesV2NextHopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutesV2NextHop) *RoutesV2NextHop {
		return &v
	}).(RoutesV2NextHopPtrOutput)
}

func (o RoutesV2NextHopOutput) NextHopIpAddresses() RoutesV2NextHopNextHopIpAddressArrayOutput {
	return o.ApplyT(func(v RoutesV2NextHop) []RoutesV2NextHopNextHopIpAddress { return v.NextHopIpAddresses }).(RoutesV2NextHopNextHopIpAddressArrayOutput)
}

func (o RoutesV2NextHopOutput) NextHopName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2NextHop) *string { return v.NextHopName }).(pulumi.StringPtrOutput)
}

func (o RoutesV2NextHopOutput) NextHopReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesV2NextHop) *string { return v.NextHopReference }).(pulumi.StringPtrOutput)
}

func (o RoutesV2NextHopOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesV2NextHop) string { return v.NextHopType }).(pulumi.StringOutput)
}

type RoutesV2NextHopPtrOutput struct{ *pulumi.OutputState }

func (RoutesV2NextHopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesV2NextHop)(nil)).Elem()
}

func (o RoutesV2NextHopPtrOutput) ToRoutesV2NextHopPtrOutput() RoutesV2NextHopPtrOutput {
	return o
}

func (o RoutesV2NextHopPtrOutput) ToRoutesV2NextHopPtrOutputWithContext(ctx context.Context) RoutesV2NextHopPtrOutput {
	return o
}

func (o RoutesV2NextHopPtrOutput) Elem() RoutesV2NextHopOutput {
	return o.ApplyT(func(v *RoutesV2NextHop) RoutesV2NextHop {
		if v != nil {
			return *v
		}
		var ret RoutesV2NextHop
		return ret
	}).(RoutesV2NextHopOutput)
}

func (o RoutesV2NextHopPtrOutput) NextHopIpAddresses() RoutesV2NextHopNextHopIpAddressArrayOutput {
	return o.ApplyT(func(v *RoutesV2NextHop) []RoutesV2NextHopNextHopIpAddress {
		if v == nil {
			return nil
		}
		return v.NextHopIpAddresses
	}).(RoutesV2NextHopNextHopIpAddressArrayOutput)
}

func (o RoutesV2NextHopPtrOutput) NextHopName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2NextHop) *string {
		if v == nil {
			return nil
		}
		return v.NextHopName
	}).(pulumi.StringPtrOutput)
}

func (o RoutesV2NextHopPtrOutput) NextHopReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2NextHop) *string {
		if v == nil {
			return nil
		}
		return v.NextHopReference
	}).(pulumi.StringPtrOutput)
}

func (o RoutesV2NextHopPtrOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutesV2NextHop) *string {
		if v == nil {
			return nil
		}
		return &v.NextHopType
	}).(pulumi.StringPtrOutput)
}

type RoutesV2NextHopNextHopIpAddress struct {
	// IPv4 Address
	Ipv4 RoutesV2NextHopNextHopIpAddressIpv4 `pulumi:"ipv4"`
	// IPv6 Address
	Ipv6 RoutesV2NextHopNextHopIpAddressIpv6 `pulumi:"ipv6"`
}

// RoutesV2NextHopNextHopIpAddressInput is an input type that accepts RoutesV2NextHopNextHopIpAddressArgs and RoutesV2NextHopNextHopIpAddressOutput values.
// You can construct a concrete instance of `RoutesV2NextHopNextHopIpAddressInput` via:
//
//	RoutesV2NextHopNextHopIpAddressArgs{...}
type RoutesV2NextHopNextHopIpAddressInput interface {
	pulumi.Input

	ToRoutesV2NextHopNextHopIpAddressOutput() RoutesV2NextHopNextHopIpAddressOutput
	ToRoutesV2NextHopNextHopIpAddressOutputWithContext(context.Context) RoutesV2NextHopNextHopIpAddressOutput
}

type RoutesV2NextHopNextHopIpAddressArgs struct {
	// IPv4 Address
	Ipv4 RoutesV2NextHopNextHopIpAddressIpv4Input `pulumi:"ipv4"`
	// IPv6 Address
	Ipv6 RoutesV2NextHopNextHopIpAddressIpv6Input `pulumi:"ipv6"`
}

func (RoutesV2NextHopNextHopIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddress)(nil)).Elem()
}

func (i RoutesV2NextHopNextHopIpAddressArgs) ToRoutesV2NextHopNextHopIpAddressOutput() RoutesV2NextHopNextHopIpAddressOutput {
	return i.ToRoutesV2NextHopNextHopIpAddressOutputWithContext(context.Background())
}

func (i RoutesV2NextHopNextHopIpAddressArgs) ToRoutesV2NextHopNextHopIpAddressOutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopNextHopIpAddressOutput)
}

// RoutesV2NextHopNextHopIpAddressArrayInput is an input type that accepts RoutesV2NextHopNextHopIpAddressArray and RoutesV2NextHopNextHopIpAddressArrayOutput values.
// You can construct a concrete instance of `RoutesV2NextHopNextHopIpAddressArrayInput` via:
//
//	RoutesV2NextHopNextHopIpAddressArray{ RoutesV2NextHopNextHopIpAddressArgs{...} }
type RoutesV2NextHopNextHopIpAddressArrayInput interface {
	pulumi.Input

	ToRoutesV2NextHopNextHopIpAddressArrayOutput() RoutesV2NextHopNextHopIpAddressArrayOutput
	ToRoutesV2NextHopNextHopIpAddressArrayOutputWithContext(context.Context) RoutesV2NextHopNextHopIpAddressArrayOutput
}

type RoutesV2NextHopNextHopIpAddressArray []RoutesV2NextHopNextHopIpAddressInput

func (RoutesV2NextHopNextHopIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutesV2NextHopNextHopIpAddress)(nil)).Elem()
}

func (i RoutesV2NextHopNextHopIpAddressArray) ToRoutesV2NextHopNextHopIpAddressArrayOutput() RoutesV2NextHopNextHopIpAddressArrayOutput {
	return i.ToRoutesV2NextHopNextHopIpAddressArrayOutputWithContext(context.Background())
}

func (i RoutesV2NextHopNextHopIpAddressArray) ToRoutesV2NextHopNextHopIpAddressArrayOutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopNextHopIpAddressArrayOutput)
}

type RoutesV2NextHopNextHopIpAddressOutput struct{ *pulumi.OutputState }

func (RoutesV2NextHopNextHopIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddress)(nil)).Elem()
}

func (o RoutesV2NextHopNextHopIpAddressOutput) ToRoutesV2NextHopNextHopIpAddressOutput() RoutesV2NextHopNextHopIpAddressOutput {
	return o
}

func (o RoutesV2NextHopNextHopIpAddressOutput) ToRoutesV2NextHopNextHopIpAddressOutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressOutput {
	return o
}

// IPv4 Address
func (o RoutesV2NextHopNextHopIpAddressOutput) Ipv4() RoutesV2NextHopNextHopIpAddressIpv4Output {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddress) RoutesV2NextHopNextHopIpAddressIpv4 { return v.Ipv4 }).(RoutesV2NextHopNextHopIpAddressIpv4Output)
}

// IPv6 Address
func (o RoutesV2NextHopNextHopIpAddressOutput) Ipv6() RoutesV2NextHopNextHopIpAddressIpv6Output {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddress) RoutesV2NextHopNextHopIpAddressIpv6 { return v.Ipv6 }).(RoutesV2NextHopNextHopIpAddressIpv6Output)
}

type RoutesV2NextHopNextHopIpAddressArrayOutput struct{ *pulumi.OutputState }

func (RoutesV2NextHopNextHopIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutesV2NextHopNextHopIpAddress)(nil)).Elem()
}

func (o RoutesV2NextHopNextHopIpAddressArrayOutput) ToRoutesV2NextHopNextHopIpAddressArrayOutput() RoutesV2NextHopNextHopIpAddressArrayOutput {
	return o
}

func (o RoutesV2NextHopNextHopIpAddressArrayOutput) ToRoutesV2NextHopNextHopIpAddressArrayOutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressArrayOutput {
	return o
}

func (o RoutesV2NextHopNextHopIpAddressArrayOutput) Index(i pulumi.IntInput) RoutesV2NextHopNextHopIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutesV2NextHopNextHopIpAddress {
		return vs[0].([]RoutesV2NextHopNextHopIpAddress)[vs[1].(int)]
	}).(RoutesV2NextHopNextHopIpAddressOutput)
}

type RoutesV2NextHopNextHopIpAddressIpv4 struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of IP address
	Value string `pulumi:"value"`
}

// RoutesV2NextHopNextHopIpAddressIpv4Input is an input type that accepts RoutesV2NextHopNextHopIpAddressIpv4Args and RoutesV2NextHopNextHopIpAddressIpv4Output values.
// You can construct a concrete instance of `RoutesV2NextHopNextHopIpAddressIpv4Input` via:
//
//	RoutesV2NextHopNextHopIpAddressIpv4Args{...}
type RoutesV2NextHopNextHopIpAddressIpv4Input interface {
	pulumi.Input

	ToRoutesV2NextHopNextHopIpAddressIpv4Output() RoutesV2NextHopNextHopIpAddressIpv4Output
	ToRoutesV2NextHopNextHopIpAddressIpv4OutputWithContext(context.Context) RoutesV2NextHopNextHopIpAddressIpv4Output
}

type RoutesV2NextHopNextHopIpAddressIpv4Args struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of IP address
	Value pulumi.StringInput `pulumi:"value"`
}

func (RoutesV2NextHopNextHopIpAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv4)(nil)).Elem()
}

func (i RoutesV2NextHopNextHopIpAddressIpv4Args) ToRoutesV2NextHopNextHopIpAddressIpv4Output() RoutesV2NextHopNextHopIpAddressIpv4Output {
	return i.ToRoutesV2NextHopNextHopIpAddressIpv4OutputWithContext(context.Background())
}

func (i RoutesV2NextHopNextHopIpAddressIpv4Args) ToRoutesV2NextHopNextHopIpAddressIpv4OutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopNextHopIpAddressIpv4Output)
}

type RoutesV2NextHopNextHopIpAddressIpv4Output struct{ *pulumi.OutputState }

func (RoutesV2NextHopNextHopIpAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv4)(nil)).Elem()
}

func (o RoutesV2NextHopNextHopIpAddressIpv4Output) ToRoutesV2NextHopNextHopIpAddressIpv4Output() RoutesV2NextHopNextHopIpAddressIpv4Output {
	return o
}

func (o RoutesV2NextHopNextHopIpAddressIpv4Output) ToRoutesV2NextHopNextHopIpAddressIpv4OutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressIpv4Output {
	return o
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2NextHopNextHopIpAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2NextHopNextHopIpAddressIpv4Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddressIpv4) string { return v.Value }).(pulumi.StringOutput)
}

type RoutesV2NextHopNextHopIpAddressIpv6 struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of IP address
	Value string `pulumi:"value"`
}

// RoutesV2NextHopNextHopIpAddressIpv6Input is an input type that accepts RoutesV2NextHopNextHopIpAddressIpv6Args and RoutesV2NextHopNextHopIpAddressIpv6Output values.
// You can construct a concrete instance of `RoutesV2NextHopNextHopIpAddressIpv6Input` via:
//
//	RoutesV2NextHopNextHopIpAddressIpv6Args{...}
type RoutesV2NextHopNextHopIpAddressIpv6Input interface {
	pulumi.Input

	ToRoutesV2NextHopNextHopIpAddressIpv6Output() RoutesV2NextHopNextHopIpAddressIpv6Output
	ToRoutesV2NextHopNextHopIpAddressIpv6OutputWithContext(context.Context) RoutesV2NextHopNextHopIpAddressIpv6Output
}

type RoutesV2NextHopNextHopIpAddressIpv6Args struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of IP address
	Value pulumi.StringInput `pulumi:"value"`
}

func (RoutesV2NextHopNextHopIpAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv6)(nil)).Elem()
}

func (i RoutesV2NextHopNextHopIpAddressIpv6Args) ToRoutesV2NextHopNextHopIpAddressIpv6Output() RoutesV2NextHopNextHopIpAddressIpv6Output {
	return i.ToRoutesV2NextHopNextHopIpAddressIpv6OutputWithContext(context.Background())
}

func (i RoutesV2NextHopNextHopIpAddressIpv6Args) ToRoutesV2NextHopNextHopIpAddressIpv6OutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesV2NextHopNextHopIpAddressIpv6Output)
}

type RoutesV2NextHopNextHopIpAddressIpv6Output struct{ *pulumi.OutputState }

func (RoutesV2NextHopNextHopIpAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv6)(nil)).Elem()
}

func (o RoutesV2NextHopNextHopIpAddressIpv6Output) ToRoutesV2NextHopNextHopIpAddressIpv6Output() RoutesV2NextHopNextHopIpAddressIpv6Output {
	return o
}

func (o RoutesV2NextHopNextHopIpAddressIpv6Output) ToRoutesV2NextHopNextHopIpAddressIpv6OutputWithContext(ctx context.Context) RoutesV2NextHopNextHopIpAddressIpv6Output {
	return o
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o RoutesV2NextHopNextHopIpAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of IP address
func (o RoutesV2NextHopNextHopIpAddressIpv6Output) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesV2NextHopNextHopIpAddressIpv6) string { return v.Value }).(pulumi.StringOutput)
}

type SamlIdentityProvidersV2IdpMetadata struct {
	Certificate        string  `pulumi:"certificate"`
	EntityId           string  `pulumi:"entityId"`
	ErrorUrl           *string `pulumi:"errorUrl"`
	LoginUrl           string  `pulumi:"loginUrl"`
	LogoutUrl          *string `pulumi:"logoutUrl"`
	NameIdPolicyFormat *string `pulumi:"nameIdPolicyFormat"`
}

// SamlIdentityProvidersV2IdpMetadataInput is an input type that accepts SamlIdentityProvidersV2IdpMetadataArgs and SamlIdentityProvidersV2IdpMetadataOutput values.
// You can construct a concrete instance of `SamlIdentityProvidersV2IdpMetadataInput` via:
//
//	SamlIdentityProvidersV2IdpMetadataArgs{...}
type SamlIdentityProvidersV2IdpMetadataInput interface {
	pulumi.Input

	ToSamlIdentityProvidersV2IdpMetadataOutput() SamlIdentityProvidersV2IdpMetadataOutput
	ToSamlIdentityProvidersV2IdpMetadataOutputWithContext(context.Context) SamlIdentityProvidersV2IdpMetadataOutput
}

type SamlIdentityProvidersV2IdpMetadataArgs struct {
	Certificate        pulumi.StringInput    `pulumi:"certificate"`
	EntityId           pulumi.StringInput    `pulumi:"entityId"`
	ErrorUrl           pulumi.StringPtrInput `pulumi:"errorUrl"`
	LoginUrl           pulumi.StringInput    `pulumi:"loginUrl"`
	LogoutUrl          pulumi.StringPtrInput `pulumi:"logoutUrl"`
	NameIdPolicyFormat pulumi.StringPtrInput `pulumi:"nameIdPolicyFormat"`
}

func (SamlIdentityProvidersV2IdpMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlIdentityProvidersV2IdpMetadata)(nil)).Elem()
}

func (i SamlIdentityProvidersV2IdpMetadataArgs) ToSamlIdentityProvidersV2IdpMetadataOutput() SamlIdentityProvidersV2IdpMetadataOutput {
	return i.ToSamlIdentityProvidersV2IdpMetadataOutputWithContext(context.Background())
}

func (i SamlIdentityProvidersV2IdpMetadataArgs) ToSamlIdentityProvidersV2IdpMetadataOutputWithContext(ctx context.Context) SamlIdentityProvidersV2IdpMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlIdentityProvidersV2IdpMetadataOutput)
}

// SamlIdentityProvidersV2IdpMetadataArrayInput is an input type that accepts SamlIdentityProvidersV2IdpMetadataArray and SamlIdentityProvidersV2IdpMetadataArrayOutput values.
// You can construct a concrete instance of `SamlIdentityProvidersV2IdpMetadataArrayInput` via:
//
//	SamlIdentityProvidersV2IdpMetadataArray{ SamlIdentityProvidersV2IdpMetadataArgs{...} }
type SamlIdentityProvidersV2IdpMetadataArrayInput interface {
	pulumi.Input

	ToSamlIdentityProvidersV2IdpMetadataArrayOutput() SamlIdentityProvidersV2IdpMetadataArrayOutput
	ToSamlIdentityProvidersV2IdpMetadataArrayOutputWithContext(context.Context) SamlIdentityProvidersV2IdpMetadataArrayOutput
}

type SamlIdentityProvidersV2IdpMetadataArray []SamlIdentityProvidersV2IdpMetadataInput

func (SamlIdentityProvidersV2IdpMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlIdentityProvidersV2IdpMetadata)(nil)).Elem()
}

func (i SamlIdentityProvidersV2IdpMetadataArray) ToSamlIdentityProvidersV2IdpMetadataArrayOutput() SamlIdentityProvidersV2IdpMetadataArrayOutput {
	return i.ToSamlIdentityProvidersV2IdpMetadataArrayOutputWithContext(context.Background())
}

func (i SamlIdentityProvidersV2IdpMetadataArray) ToSamlIdentityProvidersV2IdpMetadataArrayOutputWithContext(ctx context.Context) SamlIdentityProvidersV2IdpMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlIdentityProvidersV2IdpMetadataArrayOutput)
}

type SamlIdentityProvidersV2IdpMetadataOutput struct{ *pulumi.OutputState }

func (SamlIdentityProvidersV2IdpMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlIdentityProvidersV2IdpMetadata)(nil)).Elem()
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) ToSamlIdentityProvidersV2IdpMetadataOutput() SamlIdentityProvidersV2IdpMetadataOutput {
	return o
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) ToSamlIdentityProvidersV2IdpMetadataOutputWithContext(ctx context.Context) SamlIdentityProvidersV2IdpMetadataOutput {
	return o
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) string { return v.EntityId }).(pulumi.StringOutput)
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) ErrorUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) *string { return v.ErrorUrl }).(pulumi.StringPtrOutput)
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) string { return v.LoginUrl }).(pulumi.StringOutput)
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) LogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) *string { return v.LogoutUrl }).(pulumi.StringPtrOutput)
}

func (o SamlIdentityProvidersV2IdpMetadataOutput) NameIdPolicyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlIdentityProvidersV2IdpMetadata) *string { return v.NameIdPolicyFormat }).(pulumi.StringPtrOutput)
}

type SamlIdentityProvidersV2IdpMetadataArrayOutput struct{ *pulumi.OutputState }

func (SamlIdentityProvidersV2IdpMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SamlIdentityProvidersV2IdpMetadata)(nil)).Elem()
}

func (o SamlIdentityProvidersV2IdpMetadataArrayOutput) ToSamlIdentityProvidersV2IdpMetadataArrayOutput() SamlIdentityProvidersV2IdpMetadataArrayOutput {
	return o
}

func (o SamlIdentityProvidersV2IdpMetadataArrayOutput) ToSamlIdentityProvidersV2IdpMetadataArrayOutputWithContext(ctx context.Context) SamlIdentityProvidersV2IdpMetadataArrayOutput {
	return o
}

func (o SamlIdentityProvidersV2IdpMetadataArrayOutput) Index(i pulumi.IntInput) SamlIdentityProvidersV2IdpMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SamlIdentityProvidersV2IdpMetadata {
		return vs[0].([]SamlIdentityProvidersV2IdpMetadata)[vs[1].(int)]
	}).(SamlIdentityProvidersV2IdpMetadataOutput)
}

type ServiceGroupServiceList struct {
	// - (Optional) ICMP type code list
	IcmpTypeCodeLists []ServiceGroupServiceListIcmpTypeCodeList `pulumi:"icmpTypeCodeLists"`
	// - (Optional) The UserPrincipalName of the user from the directory service.
	Protocol *string `pulumi:"protocol"`
	// - (Optional) TCP Port range list
	TcpPortRangeLists []ServiceGroupServiceListTcpPortRangeList `pulumi:"tcpPortRangeLists"`
	// - (Optional) UDP port range list
	UdpPortRangeLists []ServiceGroupServiceListUdpPortRangeList `pulumi:"udpPortRangeLists"`
}

// ServiceGroupServiceListInput is an input type that accepts ServiceGroupServiceListArgs and ServiceGroupServiceListOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListInput` via:
//
//	ServiceGroupServiceListArgs{...}
type ServiceGroupServiceListInput interface {
	pulumi.Input

	ToServiceGroupServiceListOutput() ServiceGroupServiceListOutput
	ToServiceGroupServiceListOutputWithContext(context.Context) ServiceGroupServiceListOutput
}

type ServiceGroupServiceListArgs struct {
	// - (Optional) ICMP type code list
	IcmpTypeCodeLists ServiceGroupServiceListIcmpTypeCodeListArrayInput `pulumi:"icmpTypeCodeLists"`
	// - (Optional) The UserPrincipalName of the user from the directory service.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// - (Optional) TCP Port range list
	TcpPortRangeLists ServiceGroupServiceListTcpPortRangeListArrayInput `pulumi:"tcpPortRangeLists"`
	// - (Optional) UDP port range list
	UdpPortRangeLists ServiceGroupServiceListUdpPortRangeListArrayInput `pulumi:"udpPortRangeLists"`
}

func (ServiceGroupServiceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceList)(nil)).Elem()
}

func (i ServiceGroupServiceListArgs) ToServiceGroupServiceListOutput() ServiceGroupServiceListOutput {
	return i.ToServiceGroupServiceListOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListArgs) ToServiceGroupServiceListOutputWithContext(ctx context.Context) ServiceGroupServiceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListOutput)
}

// ServiceGroupServiceListArrayInput is an input type that accepts ServiceGroupServiceListArray and ServiceGroupServiceListArrayOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListArrayInput` via:
//
//	ServiceGroupServiceListArray{ ServiceGroupServiceListArgs{...} }
type ServiceGroupServiceListArrayInput interface {
	pulumi.Input

	ToServiceGroupServiceListArrayOutput() ServiceGroupServiceListArrayOutput
	ToServiceGroupServiceListArrayOutputWithContext(context.Context) ServiceGroupServiceListArrayOutput
}

type ServiceGroupServiceListArray []ServiceGroupServiceListInput

func (ServiceGroupServiceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceList)(nil)).Elem()
}

func (i ServiceGroupServiceListArray) ToServiceGroupServiceListArrayOutput() ServiceGroupServiceListArrayOutput {
	return i.ToServiceGroupServiceListArrayOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListArray) ToServiceGroupServiceListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListArrayOutput)
}

type ServiceGroupServiceListOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceList)(nil)).Elem()
}

func (o ServiceGroupServiceListOutput) ToServiceGroupServiceListOutput() ServiceGroupServiceListOutput {
	return o
}

func (o ServiceGroupServiceListOutput) ToServiceGroupServiceListOutputWithContext(ctx context.Context) ServiceGroupServiceListOutput {
	return o
}

// - (Optional) ICMP type code list
func (o ServiceGroupServiceListOutput) IcmpTypeCodeLists() ServiceGroupServiceListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v ServiceGroupServiceList) []ServiceGroupServiceListIcmpTypeCodeList { return v.IcmpTypeCodeLists }).(ServiceGroupServiceListIcmpTypeCodeListArrayOutput)
}

// - (Optional) The UserPrincipalName of the user from the directory service.
func (o ServiceGroupServiceListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// - (Optional) TCP Port range list
func (o ServiceGroupServiceListOutput) TcpPortRangeLists() ServiceGroupServiceListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v ServiceGroupServiceList) []ServiceGroupServiceListTcpPortRangeList { return v.TcpPortRangeLists }).(ServiceGroupServiceListTcpPortRangeListArrayOutput)
}

// - (Optional) UDP port range list
func (o ServiceGroupServiceListOutput) UdpPortRangeLists() ServiceGroupServiceListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v ServiceGroupServiceList) []ServiceGroupServiceListUdpPortRangeList { return v.UdpPortRangeLists }).(ServiceGroupServiceListUdpPortRangeListArrayOutput)
}

type ServiceGroupServiceListArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceList)(nil)).Elem()
}

func (o ServiceGroupServiceListArrayOutput) ToServiceGroupServiceListArrayOutput() ServiceGroupServiceListArrayOutput {
	return o
}

func (o ServiceGroupServiceListArrayOutput) ToServiceGroupServiceListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListArrayOutput {
	return o
}

func (o ServiceGroupServiceListArrayOutput) Index(i pulumi.IntInput) ServiceGroupServiceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupServiceList {
		return vs[0].([]ServiceGroupServiceList)[vs[1].(int)]
	}).(ServiceGroupServiceListOutput)
}

type ServiceGroupServiceListIcmpTypeCodeList struct {
	// - (Optional) Code as text
	Code *string `pulumi:"code"`
	// - (Optional) Type as text
	Type *string `pulumi:"type"`
}

// ServiceGroupServiceListIcmpTypeCodeListInput is an input type that accepts ServiceGroupServiceListIcmpTypeCodeListArgs and ServiceGroupServiceListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListIcmpTypeCodeListInput` via:
//
//	ServiceGroupServiceListIcmpTypeCodeListArgs{...}
type ServiceGroupServiceListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToServiceGroupServiceListIcmpTypeCodeListOutput() ServiceGroupServiceListIcmpTypeCodeListOutput
	ToServiceGroupServiceListIcmpTypeCodeListOutputWithContext(context.Context) ServiceGroupServiceListIcmpTypeCodeListOutput
}

type ServiceGroupServiceListIcmpTypeCodeListArgs struct {
	// - (Optional) Code as text
	Code pulumi.StringPtrInput `pulumi:"code"`
	// - (Optional) Type as text
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceGroupServiceListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListIcmpTypeCodeList)(nil)).Elem()
}

func (i ServiceGroupServiceListIcmpTypeCodeListArgs) ToServiceGroupServiceListIcmpTypeCodeListOutput() ServiceGroupServiceListIcmpTypeCodeListOutput {
	return i.ToServiceGroupServiceListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListIcmpTypeCodeListArgs) ToServiceGroupServiceListIcmpTypeCodeListOutputWithContext(ctx context.Context) ServiceGroupServiceListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListIcmpTypeCodeListOutput)
}

// ServiceGroupServiceListIcmpTypeCodeListArrayInput is an input type that accepts ServiceGroupServiceListIcmpTypeCodeListArray and ServiceGroupServiceListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListIcmpTypeCodeListArrayInput` via:
//
//	ServiceGroupServiceListIcmpTypeCodeListArray{ ServiceGroupServiceListIcmpTypeCodeListArgs{...} }
type ServiceGroupServiceListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToServiceGroupServiceListIcmpTypeCodeListArrayOutput() ServiceGroupServiceListIcmpTypeCodeListArrayOutput
	ToServiceGroupServiceListIcmpTypeCodeListArrayOutputWithContext(context.Context) ServiceGroupServiceListIcmpTypeCodeListArrayOutput
}

type ServiceGroupServiceListIcmpTypeCodeListArray []ServiceGroupServiceListIcmpTypeCodeListInput

func (ServiceGroupServiceListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListIcmpTypeCodeList)(nil)).Elem()
}

func (i ServiceGroupServiceListIcmpTypeCodeListArray) ToServiceGroupServiceListIcmpTypeCodeListArrayOutput() ServiceGroupServiceListIcmpTypeCodeListArrayOutput {
	return i.ToServiceGroupServiceListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListIcmpTypeCodeListArray) ToServiceGroupServiceListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListIcmpTypeCodeListArrayOutput)
}

type ServiceGroupServiceListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListIcmpTypeCodeList)(nil)).Elem()
}

func (o ServiceGroupServiceListIcmpTypeCodeListOutput) ToServiceGroupServiceListIcmpTypeCodeListOutput() ServiceGroupServiceListIcmpTypeCodeListOutput {
	return o
}

func (o ServiceGroupServiceListIcmpTypeCodeListOutput) ToServiceGroupServiceListIcmpTypeCodeListOutputWithContext(ctx context.Context) ServiceGroupServiceListIcmpTypeCodeListOutput {
	return o
}

// - (Optional) Code as text
func (o ServiceGroupServiceListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// - (Optional) Type as text
func (o ServiceGroupServiceListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceGroupServiceListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListIcmpTypeCodeList)(nil)).Elem()
}

func (o ServiceGroupServiceListIcmpTypeCodeListArrayOutput) ToServiceGroupServiceListIcmpTypeCodeListArrayOutput() ServiceGroupServiceListIcmpTypeCodeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListIcmpTypeCodeListArrayOutput) ToServiceGroupServiceListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListIcmpTypeCodeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) ServiceGroupServiceListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupServiceListIcmpTypeCodeList {
		return vs[0].([]ServiceGroupServiceListIcmpTypeCodeList)[vs[1].(int)]
	}).(ServiceGroupServiceListIcmpTypeCodeListOutput)
}

type ServiceGroupServiceListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// ServiceGroupServiceListTcpPortRangeListInput is an input type that accepts ServiceGroupServiceListTcpPortRangeListArgs and ServiceGroupServiceListTcpPortRangeListOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListTcpPortRangeListInput` via:
//
//	ServiceGroupServiceListTcpPortRangeListArgs{...}
type ServiceGroupServiceListTcpPortRangeListInput interface {
	pulumi.Input

	ToServiceGroupServiceListTcpPortRangeListOutput() ServiceGroupServiceListTcpPortRangeListOutput
	ToServiceGroupServiceListTcpPortRangeListOutputWithContext(context.Context) ServiceGroupServiceListTcpPortRangeListOutput
}

type ServiceGroupServiceListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (ServiceGroupServiceListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListTcpPortRangeList)(nil)).Elem()
}

func (i ServiceGroupServiceListTcpPortRangeListArgs) ToServiceGroupServiceListTcpPortRangeListOutput() ServiceGroupServiceListTcpPortRangeListOutput {
	return i.ToServiceGroupServiceListTcpPortRangeListOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListTcpPortRangeListArgs) ToServiceGroupServiceListTcpPortRangeListOutputWithContext(ctx context.Context) ServiceGroupServiceListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListTcpPortRangeListOutput)
}

// ServiceGroupServiceListTcpPortRangeListArrayInput is an input type that accepts ServiceGroupServiceListTcpPortRangeListArray and ServiceGroupServiceListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListTcpPortRangeListArrayInput` via:
//
//	ServiceGroupServiceListTcpPortRangeListArray{ ServiceGroupServiceListTcpPortRangeListArgs{...} }
type ServiceGroupServiceListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToServiceGroupServiceListTcpPortRangeListArrayOutput() ServiceGroupServiceListTcpPortRangeListArrayOutput
	ToServiceGroupServiceListTcpPortRangeListArrayOutputWithContext(context.Context) ServiceGroupServiceListTcpPortRangeListArrayOutput
}

type ServiceGroupServiceListTcpPortRangeListArray []ServiceGroupServiceListTcpPortRangeListInput

func (ServiceGroupServiceListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListTcpPortRangeList)(nil)).Elem()
}

func (i ServiceGroupServiceListTcpPortRangeListArray) ToServiceGroupServiceListTcpPortRangeListArrayOutput() ServiceGroupServiceListTcpPortRangeListArrayOutput {
	return i.ToServiceGroupServiceListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListTcpPortRangeListArray) ToServiceGroupServiceListTcpPortRangeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListTcpPortRangeListArrayOutput)
}

type ServiceGroupServiceListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListTcpPortRangeList)(nil)).Elem()
}

func (o ServiceGroupServiceListTcpPortRangeListOutput) ToServiceGroupServiceListTcpPortRangeListOutput() ServiceGroupServiceListTcpPortRangeListOutput {
	return o
}

func (o ServiceGroupServiceListTcpPortRangeListOutput) ToServiceGroupServiceListTcpPortRangeListOutputWithContext(ctx context.Context) ServiceGroupServiceListTcpPortRangeListOutput {
	return o
}

func (o ServiceGroupServiceListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o ServiceGroupServiceListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type ServiceGroupServiceListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListTcpPortRangeList)(nil)).Elem()
}

func (o ServiceGroupServiceListTcpPortRangeListArrayOutput) ToServiceGroupServiceListTcpPortRangeListArrayOutput() ServiceGroupServiceListTcpPortRangeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListTcpPortRangeListArrayOutput) ToServiceGroupServiceListTcpPortRangeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListTcpPortRangeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) ServiceGroupServiceListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupServiceListTcpPortRangeList {
		return vs[0].([]ServiceGroupServiceListTcpPortRangeList)[vs[1].(int)]
	}).(ServiceGroupServiceListTcpPortRangeListOutput)
}

type ServiceGroupServiceListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// ServiceGroupServiceListUdpPortRangeListInput is an input type that accepts ServiceGroupServiceListUdpPortRangeListArgs and ServiceGroupServiceListUdpPortRangeListOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListUdpPortRangeListInput` via:
//
//	ServiceGroupServiceListUdpPortRangeListArgs{...}
type ServiceGroupServiceListUdpPortRangeListInput interface {
	pulumi.Input

	ToServiceGroupServiceListUdpPortRangeListOutput() ServiceGroupServiceListUdpPortRangeListOutput
	ToServiceGroupServiceListUdpPortRangeListOutputWithContext(context.Context) ServiceGroupServiceListUdpPortRangeListOutput
}

type ServiceGroupServiceListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (ServiceGroupServiceListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListUdpPortRangeList)(nil)).Elem()
}

func (i ServiceGroupServiceListUdpPortRangeListArgs) ToServiceGroupServiceListUdpPortRangeListOutput() ServiceGroupServiceListUdpPortRangeListOutput {
	return i.ToServiceGroupServiceListUdpPortRangeListOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListUdpPortRangeListArgs) ToServiceGroupServiceListUdpPortRangeListOutputWithContext(ctx context.Context) ServiceGroupServiceListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListUdpPortRangeListOutput)
}

// ServiceGroupServiceListUdpPortRangeListArrayInput is an input type that accepts ServiceGroupServiceListUdpPortRangeListArray and ServiceGroupServiceListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `ServiceGroupServiceListUdpPortRangeListArrayInput` via:
//
//	ServiceGroupServiceListUdpPortRangeListArray{ ServiceGroupServiceListUdpPortRangeListArgs{...} }
type ServiceGroupServiceListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToServiceGroupServiceListUdpPortRangeListArrayOutput() ServiceGroupServiceListUdpPortRangeListArrayOutput
	ToServiceGroupServiceListUdpPortRangeListArrayOutputWithContext(context.Context) ServiceGroupServiceListUdpPortRangeListArrayOutput
}

type ServiceGroupServiceListUdpPortRangeListArray []ServiceGroupServiceListUdpPortRangeListInput

func (ServiceGroupServiceListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListUdpPortRangeList)(nil)).Elem()
}

func (i ServiceGroupServiceListUdpPortRangeListArray) ToServiceGroupServiceListUdpPortRangeListArrayOutput() ServiceGroupServiceListUdpPortRangeListArrayOutput {
	return i.ToServiceGroupServiceListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i ServiceGroupServiceListUdpPortRangeListArray) ToServiceGroupServiceListUdpPortRangeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupServiceListUdpPortRangeListArrayOutput)
}

type ServiceGroupServiceListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupServiceListUdpPortRangeList)(nil)).Elem()
}

func (o ServiceGroupServiceListUdpPortRangeListOutput) ToServiceGroupServiceListUdpPortRangeListOutput() ServiceGroupServiceListUdpPortRangeListOutput {
	return o
}

func (o ServiceGroupServiceListUdpPortRangeListOutput) ToServiceGroupServiceListUdpPortRangeListOutputWithContext(ctx context.Context) ServiceGroupServiceListUdpPortRangeListOutput {
	return o
}

func (o ServiceGroupServiceListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o ServiceGroupServiceListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupServiceListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type ServiceGroupServiceListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupServiceListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupServiceListUdpPortRangeList)(nil)).Elem()
}

func (o ServiceGroupServiceListUdpPortRangeListArrayOutput) ToServiceGroupServiceListUdpPortRangeListArrayOutput() ServiceGroupServiceListUdpPortRangeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListUdpPortRangeListArrayOutput) ToServiceGroupServiceListUdpPortRangeListArrayOutputWithContext(ctx context.Context) ServiceGroupServiceListUdpPortRangeListArrayOutput {
	return o
}

func (o ServiceGroupServiceListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) ServiceGroupServiceListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupServiceListUdpPortRangeList {
		return vs[0].([]ServiceGroupServiceListUdpPortRangeList)[vs[1].(int)]
	}).(ServiceGroupServiceListUdpPortRangeListOutput)
}

type ServiceGroupsV2IcmpService struct {
	// Icmp service Code. Ignore this field if Code has to be ANY
	Code *int `pulumi:"code"`
	// Set this field to true if both Type and Code is ANY. Default is False.
	IsAllAllowed *bool `pulumi:"isAllAllowed"`
	// Icmp service Type. Ignore this field if Type has to be ANY.
	Type *int `pulumi:"type"`
}

// ServiceGroupsV2IcmpServiceInput is an input type that accepts ServiceGroupsV2IcmpServiceArgs and ServiceGroupsV2IcmpServiceOutput values.
// You can construct a concrete instance of `ServiceGroupsV2IcmpServiceInput` via:
//
//	ServiceGroupsV2IcmpServiceArgs{...}
type ServiceGroupsV2IcmpServiceInput interface {
	pulumi.Input

	ToServiceGroupsV2IcmpServiceOutput() ServiceGroupsV2IcmpServiceOutput
	ToServiceGroupsV2IcmpServiceOutputWithContext(context.Context) ServiceGroupsV2IcmpServiceOutput
}

type ServiceGroupsV2IcmpServiceArgs struct {
	// Icmp service Code. Ignore this field if Code has to be ANY
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Set this field to true if both Type and Code is ANY. Default is False.
	IsAllAllowed pulumi.BoolPtrInput `pulumi:"isAllAllowed"`
	// Icmp service Type. Ignore this field if Type has to be ANY.
	Type pulumi.IntPtrInput `pulumi:"type"`
}

func (ServiceGroupsV2IcmpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2IcmpService)(nil)).Elem()
}

func (i ServiceGroupsV2IcmpServiceArgs) ToServiceGroupsV2IcmpServiceOutput() ServiceGroupsV2IcmpServiceOutput {
	return i.ToServiceGroupsV2IcmpServiceOutputWithContext(context.Background())
}

func (i ServiceGroupsV2IcmpServiceArgs) ToServiceGroupsV2IcmpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2IcmpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2IcmpServiceOutput)
}

// ServiceGroupsV2IcmpServiceArrayInput is an input type that accepts ServiceGroupsV2IcmpServiceArray and ServiceGroupsV2IcmpServiceArrayOutput values.
// You can construct a concrete instance of `ServiceGroupsV2IcmpServiceArrayInput` via:
//
//	ServiceGroupsV2IcmpServiceArray{ ServiceGroupsV2IcmpServiceArgs{...} }
type ServiceGroupsV2IcmpServiceArrayInput interface {
	pulumi.Input

	ToServiceGroupsV2IcmpServiceArrayOutput() ServiceGroupsV2IcmpServiceArrayOutput
	ToServiceGroupsV2IcmpServiceArrayOutputWithContext(context.Context) ServiceGroupsV2IcmpServiceArrayOutput
}

type ServiceGroupsV2IcmpServiceArray []ServiceGroupsV2IcmpServiceInput

func (ServiceGroupsV2IcmpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2IcmpService)(nil)).Elem()
}

func (i ServiceGroupsV2IcmpServiceArray) ToServiceGroupsV2IcmpServiceArrayOutput() ServiceGroupsV2IcmpServiceArrayOutput {
	return i.ToServiceGroupsV2IcmpServiceArrayOutputWithContext(context.Background())
}

func (i ServiceGroupsV2IcmpServiceArray) ToServiceGroupsV2IcmpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2IcmpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2IcmpServiceArrayOutput)
}

type ServiceGroupsV2IcmpServiceOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2IcmpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2IcmpService)(nil)).Elem()
}

func (o ServiceGroupsV2IcmpServiceOutput) ToServiceGroupsV2IcmpServiceOutput() ServiceGroupsV2IcmpServiceOutput {
	return o
}

func (o ServiceGroupsV2IcmpServiceOutput) ToServiceGroupsV2IcmpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2IcmpServiceOutput {
	return o
}

// Icmp service Code. Ignore this field if Code has to be ANY
func (o ServiceGroupsV2IcmpServiceOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupsV2IcmpService) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Set this field to true if both Type and Code is ANY. Default is False.
func (o ServiceGroupsV2IcmpServiceOutput) IsAllAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceGroupsV2IcmpService) *bool { return v.IsAllAllowed }).(pulumi.BoolPtrOutput)
}

// Icmp service Type. Ignore this field if Type has to be ANY.
func (o ServiceGroupsV2IcmpServiceOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceGroupsV2IcmpService) *int { return v.Type }).(pulumi.IntPtrOutput)
}

type ServiceGroupsV2IcmpServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2IcmpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2IcmpService)(nil)).Elem()
}

func (o ServiceGroupsV2IcmpServiceArrayOutput) ToServiceGroupsV2IcmpServiceArrayOutput() ServiceGroupsV2IcmpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2IcmpServiceArrayOutput) ToServiceGroupsV2IcmpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2IcmpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2IcmpServiceArrayOutput) Index(i pulumi.IntInput) ServiceGroupsV2IcmpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupsV2IcmpService {
		return vs[0].([]ServiceGroupsV2IcmpService)[vs[1].(int)]
	}).(ServiceGroupsV2IcmpServiceOutput)
}

type ServiceGroupsV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// ServiceGroupsV2LinkInput is an input type that accepts ServiceGroupsV2LinkArgs and ServiceGroupsV2LinkOutput values.
// You can construct a concrete instance of `ServiceGroupsV2LinkInput` via:
//
//	ServiceGroupsV2LinkArgs{...}
type ServiceGroupsV2LinkInput interface {
	pulumi.Input

	ToServiceGroupsV2LinkOutput() ServiceGroupsV2LinkOutput
	ToServiceGroupsV2LinkOutputWithContext(context.Context) ServiceGroupsV2LinkOutput
}

type ServiceGroupsV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (ServiceGroupsV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2Link)(nil)).Elem()
}

func (i ServiceGroupsV2LinkArgs) ToServiceGroupsV2LinkOutput() ServiceGroupsV2LinkOutput {
	return i.ToServiceGroupsV2LinkOutputWithContext(context.Background())
}

func (i ServiceGroupsV2LinkArgs) ToServiceGroupsV2LinkOutputWithContext(ctx context.Context) ServiceGroupsV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2LinkOutput)
}

// ServiceGroupsV2LinkArrayInput is an input type that accepts ServiceGroupsV2LinkArray and ServiceGroupsV2LinkArrayOutput values.
// You can construct a concrete instance of `ServiceGroupsV2LinkArrayInput` via:
//
//	ServiceGroupsV2LinkArray{ ServiceGroupsV2LinkArgs{...} }
type ServiceGroupsV2LinkArrayInput interface {
	pulumi.Input

	ToServiceGroupsV2LinkArrayOutput() ServiceGroupsV2LinkArrayOutput
	ToServiceGroupsV2LinkArrayOutputWithContext(context.Context) ServiceGroupsV2LinkArrayOutput
}

type ServiceGroupsV2LinkArray []ServiceGroupsV2LinkInput

func (ServiceGroupsV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2Link)(nil)).Elem()
}

func (i ServiceGroupsV2LinkArray) ToServiceGroupsV2LinkArrayOutput() ServiceGroupsV2LinkArrayOutput {
	return i.ToServiceGroupsV2LinkArrayOutputWithContext(context.Background())
}

func (i ServiceGroupsV2LinkArray) ToServiceGroupsV2LinkArrayOutputWithContext(ctx context.Context) ServiceGroupsV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2LinkArrayOutput)
}

type ServiceGroupsV2LinkOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2Link)(nil)).Elem()
}

func (o ServiceGroupsV2LinkOutput) ToServiceGroupsV2LinkOutput() ServiceGroupsV2LinkOutput {
	return o
}

func (o ServiceGroupsV2LinkOutput) ToServiceGroupsV2LinkOutputWithContext(ctx context.Context) ServiceGroupsV2LinkOutput {
	return o
}

func (o ServiceGroupsV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGroupsV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o ServiceGroupsV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceGroupsV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type ServiceGroupsV2LinkArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2Link)(nil)).Elem()
}

func (o ServiceGroupsV2LinkArrayOutput) ToServiceGroupsV2LinkArrayOutput() ServiceGroupsV2LinkArrayOutput {
	return o
}

func (o ServiceGroupsV2LinkArrayOutput) ToServiceGroupsV2LinkArrayOutputWithContext(ctx context.Context) ServiceGroupsV2LinkArrayOutput {
	return o
}

func (o ServiceGroupsV2LinkArrayOutput) Index(i pulumi.IntInput) ServiceGroupsV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupsV2Link {
		return vs[0].([]ServiceGroupsV2Link)[vs[1].(int)]
	}).(ServiceGroupsV2LinkOutput)
}

type ServiceGroupsV2TcpService struct {
	// end port
	EndPort int `pulumi:"endPort"`
	// start port
	StartPort int `pulumi:"startPort"`
}

// ServiceGroupsV2TcpServiceInput is an input type that accepts ServiceGroupsV2TcpServiceArgs and ServiceGroupsV2TcpServiceOutput values.
// You can construct a concrete instance of `ServiceGroupsV2TcpServiceInput` via:
//
//	ServiceGroupsV2TcpServiceArgs{...}
type ServiceGroupsV2TcpServiceInput interface {
	pulumi.Input

	ToServiceGroupsV2TcpServiceOutput() ServiceGroupsV2TcpServiceOutput
	ToServiceGroupsV2TcpServiceOutputWithContext(context.Context) ServiceGroupsV2TcpServiceOutput
}

type ServiceGroupsV2TcpServiceArgs struct {
	// end port
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// start port
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (ServiceGroupsV2TcpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2TcpService)(nil)).Elem()
}

func (i ServiceGroupsV2TcpServiceArgs) ToServiceGroupsV2TcpServiceOutput() ServiceGroupsV2TcpServiceOutput {
	return i.ToServiceGroupsV2TcpServiceOutputWithContext(context.Background())
}

func (i ServiceGroupsV2TcpServiceArgs) ToServiceGroupsV2TcpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2TcpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2TcpServiceOutput)
}

// ServiceGroupsV2TcpServiceArrayInput is an input type that accepts ServiceGroupsV2TcpServiceArray and ServiceGroupsV2TcpServiceArrayOutput values.
// You can construct a concrete instance of `ServiceGroupsV2TcpServiceArrayInput` via:
//
//	ServiceGroupsV2TcpServiceArray{ ServiceGroupsV2TcpServiceArgs{...} }
type ServiceGroupsV2TcpServiceArrayInput interface {
	pulumi.Input

	ToServiceGroupsV2TcpServiceArrayOutput() ServiceGroupsV2TcpServiceArrayOutput
	ToServiceGroupsV2TcpServiceArrayOutputWithContext(context.Context) ServiceGroupsV2TcpServiceArrayOutput
}

type ServiceGroupsV2TcpServiceArray []ServiceGroupsV2TcpServiceInput

func (ServiceGroupsV2TcpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2TcpService)(nil)).Elem()
}

func (i ServiceGroupsV2TcpServiceArray) ToServiceGroupsV2TcpServiceArrayOutput() ServiceGroupsV2TcpServiceArrayOutput {
	return i.ToServiceGroupsV2TcpServiceArrayOutputWithContext(context.Background())
}

func (i ServiceGroupsV2TcpServiceArray) ToServiceGroupsV2TcpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2TcpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2TcpServiceArrayOutput)
}

type ServiceGroupsV2TcpServiceOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2TcpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2TcpService)(nil)).Elem()
}

func (o ServiceGroupsV2TcpServiceOutput) ToServiceGroupsV2TcpServiceOutput() ServiceGroupsV2TcpServiceOutput {
	return o
}

func (o ServiceGroupsV2TcpServiceOutput) ToServiceGroupsV2TcpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2TcpServiceOutput {
	return o
}

// end port
func (o ServiceGroupsV2TcpServiceOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceGroupsV2TcpService) int { return v.EndPort }).(pulumi.IntOutput)
}

// start port
func (o ServiceGroupsV2TcpServiceOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceGroupsV2TcpService) int { return v.StartPort }).(pulumi.IntOutput)
}

type ServiceGroupsV2TcpServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2TcpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2TcpService)(nil)).Elem()
}

func (o ServiceGroupsV2TcpServiceArrayOutput) ToServiceGroupsV2TcpServiceArrayOutput() ServiceGroupsV2TcpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2TcpServiceArrayOutput) ToServiceGroupsV2TcpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2TcpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2TcpServiceArrayOutput) Index(i pulumi.IntInput) ServiceGroupsV2TcpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupsV2TcpService {
		return vs[0].([]ServiceGroupsV2TcpService)[vs[1].(int)]
	}).(ServiceGroupsV2TcpServiceOutput)
}

type ServiceGroupsV2UdpService struct {
	// end port
	EndPort int `pulumi:"endPort"`
	// start port
	StartPort int `pulumi:"startPort"`
}

// ServiceGroupsV2UdpServiceInput is an input type that accepts ServiceGroupsV2UdpServiceArgs and ServiceGroupsV2UdpServiceOutput values.
// You can construct a concrete instance of `ServiceGroupsV2UdpServiceInput` via:
//
//	ServiceGroupsV2UdpServiceArgs{...}
type ServiceGroupsV2UdpServiceInput interface {
	pulumi.Input

	ToServiceGroupsV2UdpServiceOutput() ServiceGroupsV2UdpServiceOutput
	ToServiceGroupsV2UdpServiceOutputWithContext(context.Context) ServiceGroupsV2UdpServiceOutput
}

type ServiceGroupsV2UdpServiceArgs struct {
	// end port
	EndPort pulumi.IntInput `pulumi:"endPort"`
	// start port
	StartPort pulumi.IntInput `pulumi:"startPort"`
}

func (ServiceGroupsV2UdpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2UdpService)(nil)).Elem()
}

func (i ServiceGroupsV2UdpServiceArgs) ToServiceGroupsV2UdpServiceOutput() ServiceGroupsV2UdpServiceOutput {
	return i.ToServiceGroupsV2UdpServiceOutputWithContext(context.Background())
}

func (i ServiceGroupsV2UdpServiceArgs) ToServiceGroupsV2UdpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2UdpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2UdpServiceOutput)
}

// ServiceGroupsV2UdpServiceArrayInput is an input type that accepts ServiceGroupsV2UdpServiceArray and ServiceGroupsV2UdpServiceArrayOutput values.
// You can construct a concrete instance of `ServiceGroupsV2UdpServiceArrayInput` via:
//
//	ServiceGroupsV2UdpServiceArray{ ServiceGroupsV2UdpServiceArgs{...} }
type ServiceGroupsV2UdpServiceArrayInput interface {
	pulumi.Input

	ToServiceGroupsV2UdpServiceArrayOutput() ServiceGroupsV2UdpServiceArrayOutput
	ToServiceGroupsV2UdpServiceArrayOutputWithContext(context.Context) ServiceGroupsV2UdpServiceArrayOutput
}

type ServiceGroupsV2UdpServiceArray []ServiceGroupsV2UdpServiceInput

func (ServiceGroupsV2UdpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2UdpService)(nil)).Elem()
}

func (i ServiceGroupsV2UdpServiceArray) ToServiceGroupsV2UdpServiceArrayOutput() ServiceGroupsV2UdpServiceArrayOutput {
	return i.ToServiceGroupsV2UdpServiceArrayOutputWithContext(context.Background())
}

func (i ServiceGroupsV2UdpServiceArray) ToServiceGroupsV2UdpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2UdpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupsV2UdpServiceArrayOutput)
}

type ServiceGroupsV2UdpServiceOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2UdpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceGroupsV2UdpService)(nil)).Elem()
}

func (o ServiceGroupsV2UdpServiceOutput) ToServiceGroupsV2UdpServiceOutput() ServiceGroupsV2UdpServiceOutput {
	return o
}

func (o ServiceGroupsV2UdpServiceOutput) ToServiceGroupsV2UdpServiceOutputWithContext(ctx context.Context) ServiceGroupsV2UdpServiceOutput {
	return o
}

// end port
func (o ServiceGroupsV2UdpServiceOutput) EndPort() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceGroupsV2UdpService) int { return v.EndPort }).(pulumi.IntOutput)
}

// start port
func (o ServiceGroupsV2UdpServiceOutput) StartPort() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceGroupsV2UdpService) int { return v.StartPort }).(pulumi.IntOutput)
}

type ServiceGroupsV2UdpServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupsV2UdpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceGroupsV2UdpService)(nil)).Elem()
}

func (o ServiceGroupsV2UdpServiceArrayOutput) ToServiceGroupsV2UdpServiceArrayOutput() ServiceGroupsV2UdpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2UdpServiceArrayOutput) ToServiceGroupsV2UdpServiceArrayOutputWithContext(ctx context.Context) ServiceGroupsV2UdpServiceArrayOutput {
	return o
}

func (o ServiceGroupsV2UdpServiceArrayOutput) Index(i pulumi.IntInput) ServiceGroupsV2UdpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceGroupsV2UdpService {
		return vs[0].([]ServiceGroupsV2UdpService)[vs[1].(int)]
	}).(ServiceGroupsV2UdpServiceOutput)
}

type StaticRoutesDefaultRouteNexthop struct {
	// Reference to a subnet.
	ExternalSubnetReferenceUuid *string `pulumi:"externalSubnetReferenceUuid"`
}

// StaticRoutesDefaultRouteNexthopInput is an input type that accepts StaticRoutesDefaultRouteNexthopArgs and StaticRoutesDefaultRouteNexthopOutput values.
// You can construct a concrete instance of `StaticRoutesDefaultRouteNexthopInput` via:
//
//	StaticRoutesDefaultRouteNexthopArgs{...}
type StaticRoutesDefaultRouteNexthopInput interface {
	pulumi.Input

	ToStaticRoutesDefaultRouteNexthopOutput() StaticRoutesDefaultRouteNexthopOutput
	ToStaticRoutesDefaultRouteNexthopOutputWithContext(context.Context) StaticRoutesDefaultRouteNexthopOutput
}

type StaticRoutesDefaultRouteNexthopArgs struct {
	// Reference to a subnet.
	ExternalSubnetReferenceUuid pulumi.StringPtrInput `pulumi:"externalSubnetReferenceUuid"`
}

func (StaticRoutesDefaultRouteNexthopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesDefaultRouteNexthop)(nil)).Elem()
}

func (i StaticRoutesDefaultRouteNexthopArgs) ToStaticRoutesDefaultRouteNexthopOutput() StaticRoutesDefaultRouteNexthopOutput {
	return i.ToStaticRoutesDefaultRouteNexthopOutputWithContext(context.Background())
}

func (i StaticRoutesDefaultRouteNexthopArgs) ToStaticRoutesDefaultRouteNexthopOutputWithContext(ctx context.Context) StaticRoutesDefaultRouteNexthopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesDefaultRouteNexthopOutput)
}

// StaticRoutesDefaultRouteNexthopArrayInput is an input type that accepts StaticRoutesDefaultRouteNexthopArray and StaticRoutesDefaultRouteNexthopArrayOutput values.
// You can construct a concrete instance of `StaticRoutesDefaultRouteNexthopArrayInput` via:
//
//	StaticRoutesDefaultRouteNexthopArray{ StaticRoutesDefaultRouteNexthopArgs{...} }
type StaticRoutesDefaultRouteNexthopArrayInput interface {
	pulumi.Input

	ToStaticRoutesDefaultRouteNexthopArrayOutput() StaticRoutesDefaultRouteNexthopArrayOutput
	ToStaticRoutesDefaultRouteNexthopArrayOutputWithContext(context.Context) StaticRoutesDefaultRouteNexthopArrayOutput
}

type StaticRoutesDefaultRouteNexthopArray []StaticRoutesDefaultRouteNexthopInput

func (StaticRoutesDefaultRouteNexthopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoutesDefaultRouteNexthop)(nil)).Elem()
}

func (i StaticRoutesDefaultRouteNexthopArray) ToStaticRoutesDefaultRouteNexthopArrayOutput() StaticRoutesDefaultRouteNexthopArrayOutput {
	return i.ToStaticRoutesDefaultRouteNexthopArrayOutputWithContext(context.Background())
}

func (i StaticRoutesDefaultRouteNexthopArray) ToStaticRoutesDefaultRouteNexthopArrayOutputWithContext(ctx context.Context) StaticRoutesDefaultRouteNexthopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesDefaultRouteNexthopArrayOutput)
}

type StaticRoutesDefaultRouteNexthopOutput struct{ *pulumi.OutputState }

func (StaticRoutesDefaultRouteNexthopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesDefaultRouteNexthop)(nil)).Elem()
}

func (o StaticRoutesDefaultRouteNexthopOutput) ToStaticRoutesDefaultRouteNexthopOutput() StaticRoutesDefaultRouteNexthopOutput {
	return o
}

func (o StaticRoutesDefaultRouteNexthopOutput) ToStaticRoutesDefaultRouteNexthopOutputWithContext(ctx context.Context) StaticRoutesDefaultRouteNexthopOutput {
	return o
}

// Reference to a subnet.
func (o StaticRoutesDefaultRouteNexthopOutput) ExternalSubnetReferenceUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesDefaultRouteNexthop) *string { return v.ExternalSubnetReferenceUuid }).(pulumi.StringPtrOutput)
}

type StaticRoutesDefaultRouteNexthopArrayOutput struct{ *pulumi.OutputState }

func (StaticRoutesDefaultRouteNexthopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoutesDefaultRouteNexthop)(nil)).Elem()
}

func (o StaticRoutesDefaultRouteNexthopArrayOutput) ToStaticRoutesDefaultRouteNexthopArrayOutput() StaticRoutesDefaultRouteNexthopArrayOutput {
	return o
}

func (o StaticRoutesDefaultRouteNexthopArrayOutput) ToStaticRoutesDefaultRouteNexthopArrayOutputWithContext(ctx context.Context) StaticRoutesDefaultRouteNexthopArrayOutput {
	return o
}

func (o StaticRoutesDefaultRouteNexthopArrayOutput) Index(i pulumi.IntInput) StaticRoutesDefaultRouteNexthopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoutesDefaultRouteNexthop {
		return vs[0].([]StaticRoutesDefaultRouteNexthop)[vs[1].(int)]
	}).(StaticRoutesDefaultRouteNexthopOutput)
}

type StaticRoutesStaticRoutesList struct {
	// Destination ip with prefix.
	Destination string `pulumi:"destination"`
	// Reference to a subnet. Supported with 2022.x .
	ExternalSubnetReferenceUuid *string `pulumi:"externalSubnetReferenceUuid"`
	// Reference to a vpn connection.
	VpnConnectionReferenceUuid *string `pulumi:"vpnConnectionReferenceUuid"`
}

// StaticRoutesStaticRoutesListInput is an input type that accepts StaticRoutesStaticRoutesListArgs and StaticRoutesStaticRoutesListOutput values.
// You can construct a concrete instance of `StaticRoutesStaticRoutesListInput` via:
//
//	StaticRoutesStaticRoutesListArgs{...}
type StaticRoutesStaticRoutesListInput interface {
	pulumi.Input

	ToStaticRoutesStaticRoutesListOutput() StaticRoutesStaticRoutesListOutput
	ToStaticRoutesStaticRoutesListOutputWithContext(context.Context) StaticRoutesStaticRoutesListOutput
}

type StaticRoutesStaticRoutesListArgs struct {
	// Destination ip with prefix.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Reference to a subnet. Supported with 2022.x .
	ExternalSubnetReferenceUuid pulumi.StringPtrInput `pulumi:"externalSubnetReferenceUuid"`
	// Reference to a vpn connection.
	VpnConnectionReferenceUuid pulumi.StringPtrInput `pulumi:"vpnConnectionReferenceUuid"`
}

func (StaticRoutesStaticRoutesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesStaticRoutesList)(nil)).Elem()
}

func (i StaticRoutesStaticRoutesListArgs) ToStaticRoutesStaticRoutesListOutput() StaticRoutesStaticRoutesListOutput {
	return i.ToStaticRoutesStaticRoutesListOutputWithContext(context.Background())
}

func (i StaticRoutesStaticRoutesListArgs) ToStaticRoutesStaticRoutesListOutputWithContext(ctx context.Context) StaticRoutesStaticRoutesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesStaticRoutesListOutput)
}

// StaticRoutesStaticRoutesListArrayInput is an input type that accepts StaticRoutesStaticRoutesListArray and StaticRoutesStaticRoutesListArrayOutput values.
// You can construct a concrete instance of `StaticRoutesStaticRoutesListArrayInput` via:
//
//	StaticRoutesStaticRoutesListArray{ StaticRoutesStaticRoutesListArgs{...} }
type StaticRoutesStaticRoutesListArrayInput interface {
	pulumi.Input

	ToStaticRoutesStaticRoutesListArrayOutput() StaticRoutesStaticRoutesListArrayOutput
	ToStaticRoutesStaticRoutesListArrayOutputWithContext(context.Context) StaticRoutesStaticRoutesListArrayOutput
}

type StaticRoutesStaticRoutesListArray []StaticRoutesStaticRoutesListInput

func (StaticRoutesStaticRoutesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoutesStaticRoutesList)(nil)).Elem()
}

func (i StaticRoutesStaticRoutesListArray) ToStaticRoutesStaticRoutesListArrayOutput() StaticRoutesStaticRoutesListArrayOutput {
	return i.ToStaticRoutesStaticRoutesListArrayOutputWithContext(context.Background())
}

func (i StaticRoutesStaticRoutesListArray) ToStaticRoutesStaticRoutesListArrayOutputWithContext(ctx context.Context) StaticRoutesStaticRoutesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRoutesStaticRoutesListArrayOutput)
}

type StaticRoutesStaticRoutesListOutput struct{ *pulumi.OutputState }

func (StaticRoutesStaticRoutesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoutesStaticRoutesList)(nil)).Elem()
}

func (o StaticRoutesStaticRoutesListOutput) ToStaticRoutesStaticRoutesListOutput() StaticRoutesStaticRoutesListOutput {
	return o
}

func (o StaticRoutesStaticRoutesListOutput) ToStaticRoutesStaticRoutesListOutputWithContext(ctx context.Context) StaticRoutesStaticRoutesListOutput {
	return o
}

// Destination ip with prefix.
func (o StaticRoutesStaticRoutesListOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v StaticRoutesStaticRoutesList) string { return v.Destination }).(pulumi.StringOutput)
}

// Reference to a subnet. Supported with 2022.x .
func (o StaticRoutesStaticRoutesListOutput) ExternalSubnetReferenceUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesStaticRoutesList) *string { return v.ExternalSubnetReferenceUuid }).(pulumi.StringPtrOutput)
}

// Reference to a vpn connection.
func (o StaticRoutesStaticRoutesListOutput) VpnConnectionReferenceUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoutesStaticRoutesList) *string { return v.VpnConnectionReferenceUuid }).(pulumi.StringPtrOutput)
}

type StaticRoutesStaticRoutesListArrayOutput struct{ *pulumi.OutputState }

func (StaticRoutesStaticRoutesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoutesStaticRoutesList)(nil)).Elem()
}

func (o StaticRoutesStaticRoutesListArrayOutput) ToStaticRoutesStaticRoutesListArrayOutput() StaticRoutesStaticRoutesListArrayOutput {
	return o
}

func (o StaticRoutesStaticRoutesListArrayOutput) ToStaticRoutesStaticRoutesListArrayOutputWithContext(ctx context.Context) StaticRoutesStaticRoutesListArrayOutput {
	return o
}

func (o StaticRoutesStaticRoutesListArrayOutput) Index(i pulumi.IntInput) StaticRoutesStaticRoutesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoutesStaticRoutesList {
		return vs[0].([]StaticRoutesStaticRoutesList)[vs[1].(int)]
	}).(StaticRoutesStaticRoutesListOutput)
}

type StorageContainersV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// StorageContainersV2LinkInput is an input type that accepts StorageContainersV2LinkArgs and StorageContainersV2LinkOutput values.
// You can construct a concrete instance of `StorageContainersV2LinkInput` via:
//
//	StorageContainersV2LinkArgs{...}
type StorageContainersV2LinkInput interface {
	pulumi.Input

	ToStorageContainersV2LinkOutput() StorageContainersV2LinkOutput
	ToStorageContainersV2LinkOutputWithContext(context.Context) StorageContainersV2LinkOutput
}

type StorageContainersV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (StorageContainersV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2Link)(nil)).Elem()
}

func (i StorageContainersV2LinkArgs) ToStorageContainersV2LinkOutput() StorageContainersV2LinkOutput {
	return i.ToStorageContainersV2LinkOutputWithContext(context.Background())
}

func (i StorageContainersV2LinkArgs) ToStorageContainersV2LinkOutputWithContext(ctx context.Context) StorageContainersV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2LinkOutput)
}

// StorageContainersV2LinkArrayInput is an input type that accepts StorageContainersV2LinkArray and StorageContainersV2LinkArrayOutput values.
// You can construct a concrete instance of `StorageContainersV2LinkArrayInput` via:
//
//	StorageContainersV2LinkArray{ StorageContainersV2LinkArgs{...} }
type StorageContainersV2LinkArrayInput interface {
	pulumi.Input

	ToStorageContainersV2LinkArrayOutput() StorageContainersV2LinkArrayOutput
	ToStorageContainersV2LinkArrayOutputWithContext(context.Context) StorageContainersV2LinkArrayOutput
}

type StorageContainersV2LinkArray []StorageContainersV2LinkInput

func (StorageContainersV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2Link)(nil)).Elem()
}

func (i StorageContainersV2LinkArray) ToStorageContainersV2LinkArrayOutput() StorageContainersV2LinkArrayOutput {
	return i.ToStorageContainersV2LinkArrayOutputWithContext(context.Background())
}

func (i StorageContainersV2LinkArray) ToStorageContainersV2LinkArrayOutputWithContext(ctx context.Context) StorageContainersV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2LinkArrayOutput)
}

type StorageContainersV2LinkOutput struct{ *pulumi.OutputState }

func (StorageContainersV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2Link)(nil)).Elem()
}

func (o StorageContainersV2LinkOutput) ToStorageContainersV2LinkOutput() StorageContainersV2LinkOutput {
	return o
}

func (o StorageContainersV2LinkOutput) ToStorageContainersV2LinkOutputWithContext(ctx context.Context) StorageContainersV2LinkOutput {
	return o
}

func (o StorageContainersV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainersV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o StorageContainersV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainersV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type StorageContainersV2LinkArrayOutput struct{ *pulumi.OutputState }

func (StorageContainersV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2Link)(nil)).Elem()
}

func (o StorageContainersV2LinkArrayOutput) ToStorageContainersV2LinkArrayOutput() StorageContainersV2LinkArrayOutput {
	return o
}

func (o StorageContainersV2LinkArrayOutput) ToStorageContainersV2LinkArrayOutputWithContext(ctx context.Context) StorageContainersV2LinkArrayOutput {
	return o
}

func (o StorageContainersV2LinkArrayOutput) Index(i pulumi.IntInput) StorageContainersV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageContainersV2Link {
		return vs[0].([]StorageContainersV2Link)[vs[1].(int)]
	}).(StorageContainersV2LinkOutput)
}

type StorageContainersV2NfsWhitelistAddress struct {
	// Reference to address configuration
	Fqdns []StorageContainersV2NfsWhitelistAddressFqdn `pulumi:"fqdns"`
	// Reference to address configuration
	Ipv4s []StorageContainersV2NfsWhitelistAddressIpv4 `pulumi:"ipv4s"`
	// Reference to address configuration
	Ipv6s []StorageContainersV2NfsWhitelistAddressIpv6 `pulumi:"ipv6s"`
}

// StorageContainersV2NfsWhitelistAddressInput is an input type that accepts StorageContainersV2NfsWhitelistAddressArgs and StorageContainersV2NfsWhitelistAddressOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressInput` via:
//
//	StorageContainersV2NfsWhitelistAddressArgs{...}
type StorageContainersV2NfsWhitelistAddressInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressOutput() StorageContainersV2NfsWhitelistAddressOutput
	ToStorageContainersV2NfsWhitelistAddressOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressOutput
}

type StorageContainersV2NfsWhitelistAddressArgs struct {
	// Reference to address configuration
	Fqdns StorageContainersV2NfsWhitelistAddressFqdnArrayInput `pulumi:"fqdns"`
	// Reference to address configuration
	Ipv4s StorageContainersV2NfsWhitelistAddressIpv4ArrayInput `pulumi:"ipv4s"`
	// Reference to address configuration
	Ipv6s StorageContainersV2NfsWhitelistAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (StorageContainersV2NfsWhitelistAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddress)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressArgs) ToStorageContainersV2NfsWhitelistAddressOutput() StorageContainersV2NfsWhitelistAddressOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressArgs) ToStorageContainersV2NfsWhitelistAddressOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressOutput)
}

// StorageContainersV2NfsWhitelistAddressArrayInput is an input type that accepts StorageContainersV2NfsWhitelistAddressArray and StorageContainersV2NfsWhitelistAddressArrayOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressArrayInput` via:
//
//	StorageContainersV2NfsWhitelistAddressArray{ StorageContainersV2NfsWhitelistAddressArgs{...} }
type StorageContainersV2NfsWhitelistAddressArrayInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressArrayOutput() StorageContainersV2NfsWhitelistAddressArrayOutput
	ToStorageContainersV2NfsWhitelistAddressArrayOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressArrayOutput
}

type StorageContainersV2NfsWhitelistAddressArray []StorageContainersV2NfsWhitelistAddressInput

func (StorageContainersV2NfsWhitelistAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddress)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressArray) ToStorageContainersV2NfsWhitelistAddressArrayOutput() StorageContainersV2NfsWhitelistAddressArrayOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressArrayOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressArray) ToStorageContainersV2NfsWhitelistAddressArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressArrayOutput)
}

type StorageContainersV2NfsWhitelistAddressOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddress)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressOutput) ToStorageContainersV2NfsWhitelistAddressOutput() StorageContainersV2NfsWhitelistAddressOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressOutput) ToStorageContainersV2NfsWhitelistAddressOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressOutput {
	return o
}

// Reference to address configuration
func (o StorageContainersV2NfsWhitelistAddressOutput) Fqdns() StorageContainersV2NfsWhitelistAddressFqdnArrayOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddress) []StorageContainersV2NfsWhitelistAddressFqdn {
		return v.Fqdns
	}).(StorageContainersV2NfsWhitelistAddressFqdnArrayOutput)
}

// Reference to address configuration
func (o StorageContainersV2NfsWhitelistAddressOutput) Ipv4s() StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddress) []StorageContainersV2NfsWhitelistAddressIpv4 {
		return v.Ipv4s
	}).(StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput)
}

// Reference to address configuration
func (o StorageContainersV2NfsWhitelistAddressOutput) Ipv6s() StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddress) []StorageContainersV2NfsWhitelistAddressIpv6 {
		return v.Ipv6s
	}).(StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput)
}

type StorageContainersV2NfsWhitelistAddressArrayOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddress)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressArrayOutput) ToStorageContainersV2NfsWhitelistAddressArrayOutput() StorageContainersV2NfsWhitelistAddressArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressArrayOutput) ToStorageContainersV2NfsWhitelistAddressArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressArrayOutput) Index(i pulumi.IntInput) StorageContainersV2NfsWhitelistAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageContainersV2NfsWhitelistAddress {
		return vs[0].([]StorageContainersV2NfsWhitelistAddress)[vs[1].(int)]
	}).(StorageContainersV2NfsWhitelistAddressOutput)
}

type StorageContainersV2NfsWhitelistAddressFqdn struct {
	// value of fqdn address
	Value *string `pulumi:"value"`
}

// StorageContainersV2NfsWhitelistAddressFqdnInput is an input type that accepts StorageContainersV2NfsWhitelistAddressFqdnArgs and StorageContainersV2NfsWhitelistAddressFqdnOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressFqdnInput` via:
//
//	StorageContainersV2NfsWhitelistAddressFqdnArgs{...}
type StorageContainersV2NfsWhitelistAddressFqdnInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressFqdnOutput() StorageContainersV2NfsWhitelistAddressFqdnOutput
	ToStorageContainersV2NfsWhitelistAddressFqdnOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressFqdnOutput
}

type StorageContainersV2NfsWhitelistAddressFqdnArgs struct {
	// value of fqdn address
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageContainersV2NfsWhitelistAddressFqdnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressFqdn)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressFqdnArgs) ToStorageContainersV2NfsWhitelistAddressFqdnOutput() StorageContainersV2NfsWhitelistAddressFqdnOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressFqdnOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressFqdnArgs) ToStorageContainersV2NfsWhitelistAddressFqdnOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressFqdnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressFqdnOutput)
}

// StorageContainersV2NfsWhitelistAddressFqdnArrayInput is an input type that accepts StorageContainersV2NfsWhitelistAddressFqdnArray and StorageContainersV2NfsWhitelistAddressFqdnArrayOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressFqdnArrayInput` via:
//
//	StorageContainersV2NfsWhitelistAddressFqdnArray{ StorageContainersV2NfsWhitelistAddressFqdnArgs{...} }
type StorageContainersV2NfsWhitelistAddressFqdnArrayInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutput() StorageContainersV2NfsWhitelistAddressFqdnArrayOutput
	ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressFqdnArrayOutput
}

type StorageContainersV2NfsWhitelistAddressFqdnArray []StorageContainersV2NfsWhitelistAddressFqdnInput

func (StorageContainersV2NfsWhitelistAddressFqdnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressFqdn)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressFqdnArray) ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutput() StorageContainersV2NfsWhitelistAddressFqdnArrayOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressFqdnArray) ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressFqdnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressFqdnArrayOutput)
}

type StorageContainersV2NfsWhitelistAddressFqdnOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressFqdnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressFqdn)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressFqdnOutput) ToStorageContainersV2NfsWhitelistAddressFqdnOutput() StorageContainersV2NfsWhitelistAddressFqdnOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressFqdnOutput) ToStorageContainersV2NfsWhitelistAddressFqdnOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressFqdnOutput {
	return o
}

// value of fqdn address
func (o StorageContainersV2NfsWhitelistAddressFqdnOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddressFqdn) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageContainersV2NfsWhitelistAddressFqdnArrayOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressFqdnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressFqdn)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressFqdnArrayOutput) ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutput() StorageContainersV2NfsWhitelistAddressFqdnArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressFqdnArrayOutput) ToStorageContainersV2NfsWhitelistAddressFqdnArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressFqdnArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressFqdnArrayOutput) Index(i pulumi.IntInput) StorageContainersV2NfsWhitelistAddressFqdnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageContainersV2NfsWhitelistAddressFqdn {
		return vs[0].([]StorageContainersV2NfsWhitelistAddressFqdn)[vs[1].(int)]
	}).(StorageContainersV2NfsWhitelistAddressFqdnOutput)
}

type StorageContainersV2NfsWhitelistAddressIpv4 struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of fqdn address
	Value *string `pulumi:"value"`
}

// StorageContainersV2NfsWhitelistAddressIpv4Input is an input type that accepts StorageContainersV2NfsWhitelistAddressIpv4Args and StorageContainersV2NfsWhitelistAddressIpv4Output values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressIpv4Input` via:
//
//	StorageContainersV2NfsWhitelistAddressIpv4Args{...}
type StorageContainersV2NfsWhitelistAddressIpv4Input interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressIpv4Output() StorageContainersV2NfsWhitelistAddressIpv4Output
	ToStorageContainersV2NfsWhitelistAddressIpv4OutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressIpv4Output
}

type StorageContainersV2NfsWhitelistAddressIpv4Args struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of fqdn address
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageContainersV2NfsWhitelistAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv4)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressIpv4Args) ToStorageContainersV2NfsWhitelistAddressIpv4Output() StorageContainersV2NfsWhitelistAddressIpv4Output {
	return i.ToStorageContainersV2NfsWhitelistAddressIpv4OutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressIpv4Args) ToStorageContainersV2NfsWhitelistAddressIpv4OutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressIpv4Output)
}

// StorageContainersV2NfsWhitelistAddressIpv4ArrayInput is an input type that accepts StorageContainersV2NfsWhitelistAddressIpv4Array and StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressIpv4ArrayInput` via:
//
//	StorageContainersV2NfsWhitelistAddressIpv4Array{ StorageContainersV2NfsWhitelistAddressIpv4Args{...} }
type StorageContainersV2NfsWhitelistAddressIpv4ArrayInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput
	ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput
}

type StorageContainersV2NfsWhitelistAddressIpv4Array []StorageContainersV2NfsWhitelistAddressIpv4Input

func (StorageContainersV2NfsWhitelistAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressIpv4)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressIpv4Array) ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressIpv4Array) ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput)
}

type StorageContainersV2NfsWhitelistAddressIpv4Output struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv4)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressIpv4Output) ToStorageContainersV2NfsWhitelistAddressIpv4Output() StorageContainersV2NfsWhitelistAddressIpv4Output {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv4Output) ToStorageContainersV2NfsWhitelistAddressIpv4OutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv4Output {
	return o
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o StorageContainersV2NfsWhitelistAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of fqdn address
func (o StorageContainersV2NfsWhitelistAddressIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddressIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressIpv4)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput) ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput) ToStorageContainersV2NfsWhitelistAddressIpv4ArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput) Index(i pulumi.IntInput) StorageContainersV2NfsWhitelistAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageContainersV2NfsWhitelistAddressIpv4 {
		return vs[0].([]StorageContainersV2NfsWhitelistAddressIpv4)[vs[1].(int)]
	}).(StorageContainersV2NfsWhitelistAddressIpv4Output)
}

type StorageContainersV2NfsWhitelistAddressIpv6 struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength *int `pulumi:"prefixLength"`
	// value of fqdn address
	Value *string `pulumi:"value"`
}

// StorageContainersV2NfsWhitelistAddressIpv6Input is an input type that accepts StorageContainersV2NfsWhitelistAddressIpv6Args and StorageContainersV2NfsWhitelistAddressIpv6Output values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressIpv6Input` via:
//
//	StorageContainersV2NfsWhitelistAddressIpv6Args{...}
type StorageContainersV2NfsWhitelistAddressIpv6Input interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressIpv6Output() StorageContainersV2NfsWhitelistAddressIpv6Output
	ToStorageContainersV2NfsWhitelistAddressIpv6OutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressIpv6Output
}

type StorageContainersV2NfsWhitelistAddressIpv6Args struct {
	// The prefix length of the network to which this host IPv4/IPv6 address belongs.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// value of fqdn address
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageContainersV2NfsWhitelistAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv6)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressIpv6Args) ToStorageContainersV2NfsWhitelistAddressIpv6Output() StorageContainersV2NfsWhitelistAddressIpv6Output {
	return i.ToStorageContainersV2NfsWhitelistAddressIpv6OutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressIpv6Args) ToStorageContainersV2NfsWhitelistAddressIpv6OutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressIpv6Output)
}

// StorageContainersV2NfsWhitelistAddressIpv6ArrayInput is an input type that accepts StorageContainersV2NfsWhitelistAddressIpv6Array and StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `StorageContainersV2NfsWhitelistAddressIpv6ArrayInput` via:
//
//	StorageContainersV2NfsWhitelistAddressIpv6Array{ StorageContainersV2NfsWhitelistAddressIpv6Args{...} }
type StorageContainersV2NfsWhitelistAddressIpv6ArrayInput interface {
	pulumi.Input

	ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput
	ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutputWithContext(context.Context) StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput
}

type StorageContainersV2NfsWhitelistAddressIpv6Array []StorageContainersV2NfsWhitelistAddressIpv6Input

func (StorageContainersV2NfsWhitelistAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressIpv6)(nil)).Elem()
}

func (i StorageContainersV2NfsWhitelistAddressIpv6Array) ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput {
	return i.ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i StorageContainersV2NfsWhitelistAddressIpv6Array) ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput)
}

type StorageContainersV2NfsWhitelistAddressIpv6Output struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv6)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressIpv6Output) ToStorageContainersV2NfsWhitelistAddressIpv6Output() StorageContainersV2NfsWhitelistAddressIpv6Output {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv6Output) ToStorageContainersV2NfsWhitelistAddressIpv6OutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv6Output {
	return o
}

// The prefix length of the network to which this host IPv4/IPv6 address belongs.
func (o StorageContainersV2NfsWhitelistAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// value of fqdn address
func (o StorageContainersV2NfsWhitelistAddressIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainersV2NfsWhitelistAddressIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageContainersV2NfsWhitelistAddressIpv6)(nil)).Elem()
}

func (o StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput) ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutput() StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput) ToStorageContainersV2NfsWhitelistAddressIpv6ArrayOutputWithContext(ctx context.Context) StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput {
	return o
}

func (o StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput) Index(i pulumi.IntInput) StorageContainersV2NfsWhitelistAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageContainersV2NfsWhitelistAddressIpv6 {
		return vs[0].([]StorageContainersV2NfsWhitelistAddressIpv6)[vs[1].(int)]
	}).(StorageContainersV2NfsWhitelistAddressIpv6Output)
}

type SubnetCategory struct {
	// - (Optional) Subnet name (Readonly).
	Name *string `pulumi:"name"`
	// - value of the key.
	Value *string `pulumi:"value"`
}

// SubnetCategoryInput is an input type that accepts SubnetCategoryArgs and SubnetCategoryOutput values.
// You can construct a concrete instance of `SubnetCategoryInput` via:
//
//	SubnetCategoryArgs{...}
type SubnetCategoryInput interface {
	pulumi.Input

	ToSubnetCategoryOutput() SubnetCategoryOutput
	ToSubnetCategoryOutputWithContext(context.Context) SubnetCategoryOutput
}

type SubnetCategoryArgs struct {
	// - (Optional) Subnet name (Readonly).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetCategory)(nil)).Elem()
}

func (i SubnetCategoryArgs) ToSubnetCategoryOutput() SubnetCategoryOutput {
	return i.ToSubnetCategoryOutputWithContext(context.Background())
}

func (i SubnetCategoryArgs) ToSubnetCategoryOutputWithContext(ctx context.Context) SubnetCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetCategoryOutput)
}

// SubnetCategoryArrayInput is an input type that accepts SubnetCategoryArray and SubnetCategoryArrayOutput values.
// You can construct a concrete instance of `SubnetCategoryArrayInput` via:
//
//	SubnetCategoryArray{ SubnetCategoryArgs{...} }
type SubnetCategoryArrayInput interface {
	pulumi.Input

	ToSubnetCategoryArrayOutput() SubnetCategoryArrayOutput
	ToSubnetCategoryArrayOutputWithContext(context.Context) SubnetCategoryArrayOutput
}

type SubnetCategoryArray []SubnetCategoryInput

func (SubnetCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetCategory)(nil)).Elem()
}

func (i SubnetCategoryArray) ToSubnetCategoryArrayOutput() SubnetCategoryArrayOutput {
	return i.ToSubnetCategoryArrayOutputWithContext(context.Background())
}

func (i SubnetCategoryArray) ToSubnetCategoryArrayOutputWithContext(ctx context.Context) SubnetCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetCategoryArrayOutput)
}

type SubnetCategoryOutput struct{ *pulumi.OutputState }

func (SubnetCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetCategory)(nil)).Elem()
}

func (o SubnetCategoryOutput) ToSubnetCategoryOutput() SubnetCategoryOutput {
	return o
}

func (o SubnetCategoryOutput) ToSubnetCategoryOutputWithContext(ctx context.Context) SubnetCategoryOutput {
	return o
}

// - (Optional) Subnet name (Readonly).
func (o SubnetCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o SubnetCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetCategoryArrayOutput struct{ *pulumi.OutputState }

func (SubnetCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetCategory)(nil)).Elem()
}

func (o SubnetCategoryArrayOutput) ToSubnetCategoryArrayOutput() SubnetCategoryArrayOutput {
	return o
}

func (o SubnetCategoryArrayOutput) ToSubnetCategoryArrayOutputWithContext(ctx context.Context) SubnetCategoryArrayOutput {
	return o
}

func (o SubnetCategoryArrayOutput) Index(i pulumi.IntInput) SubnetCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetCategory {
		return vs[0].([]SubnetCategory)[vs[1].(int)]
	}).(SubnetCategoryOutput)
}

type SubnetV2DhcpOption struct {
	BootFileName      *string                              `pulumi:"bootFileName"`
	DomainName        *string                              `pulumi:"domainName"`
	DomainNameServers []SubnetV2DhcpOptionDomainNameServer `pulumi:"domainNameServers"`
	NtpServers        []SubnetV2DhcpOptionNtpServer        `pulumi:"ntpServers"`
	SearchDomains     []string                             `pulumi:"searchDomains"`
	TftpServerName    *string                              `pulumi:"tftpServerName"`
}

// SubnetV2DhcpOptionInput is an input type that accepts SubnetV2DhcpOptionArgs and SubnetV2DhcpOptionOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionInput` via:
//
//	SubnetV2DhcpOptionArgs{...}
type SubnetV2DhcpOptionInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionOutput() SubnetV2DhcpOptionOutput
	ToSubnetV2DhcpOptionOutputWithContext(context.Context) SubnetV2DhcpOptionOutput
}

type SubnetV2DhcpOptionArgs struct {
	BootFileName      pulumi.StringPtrInput                        `pulumi:"bootFileName"`
	DomainName        pulumi.StringPtrInput                        `pulumi:"domainName"`
	DomainNameServers SubnetV2DhcpOptionDomainNameServerArrayInput `pulumi:"domainNameServers"`
	NtpServers        SubnetV2DhcpOptionNtpServerArrayInput        `pulumi:"ntpServers"`
	SearchDomains     pulumi.StringArrayInput                      `pulumi:"searchDomains"`
	TftpServerName    pulumi.StringPtrInput                        `pulumi:"tftpServerName"`
}

func (SubnetV2DhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOption)(nil)).Elem()
}

func (i SubnetV2DhcpOptionArgs) ToSubnetV2DhcpOptionOutput() SubnetV2DhcpOptionOutput {
	return i.ToSubnetV2DhcpOptionOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionArgs) ToSubnetV2DhcpOptionOutputWithContext(ctx context.Context) SubnetV2DhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionOutput)
}

// SubnetV2DhcpOptionArrayInput is an input type that accepts SubnetV2DhcpOptionArray and SubnetV2DhcpOptionArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionArrayInput` via:
//
//	SubnetV2DhcpOptionArray{ SubnetV2DhcpOptionArgs{...} }
type SubnetV2DhcpOptionArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionArrayOutput() SubnetV2DhcpOptionArrayOutput
	ToSubnetV2DhcpOptionArrayOutputWithContext(context.Context) SubnetV2DhcpOptionArrayOutput
}

type SubnetV2DhcpOptionArray []SubnetV2DhcpOptionInput

func (SubnetV2DhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOption)(nil)).Elem()
}

func (i SubnetV2DhcpOptionArray) ToSubnetV2DhcpOptionArrayOutput() SubnetV2DhcpOptionArrayOutput {
	return i.ToSubnetV2DhcpOptionArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionArray) ToSubnetV2DhcpOptionArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionArrayOutput)
}

type SubnetV2DhcpOptionOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOption)(nil)).Elem()
}

func (o SubnetV2DhcpOptionOutput) ToSubnetV2DhcpOptionOutput() SubnetV2DhcpOptionOutput {
	return o
}

func (o SubnetV2DhcpOptionOutput) ToSubnetV2DhcpOptionOutputWithContext(ctx context.Context) SubnetV2DhcpOptionOutput {
	return o
}

func (o SubnetV2DhcpOptionOutput) BootFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) *string { return v.BootFileName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2DhcpOptionOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2DhcpOptionOutput) DomainNameServers() SubnetV2DhcpOptionDomainNameServerArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) []SubnetV2DhcpOptionDomainNameServer { return v.DomainNameServers }).(SubnetV2DhcpOptionDomainNameServerArrayOutput)
}

func (o SubnetV2DhcpOptionOutput) NtpServers() SubnetV2DhcpOptionNtpServerArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) []SubnetV2DhcpOptionNtpServer { return v.NtpServers }).(SubnetV2DhcpOptionNtpServerArrayOutput)
}

func (o SubnetV2DhcpOptionOutput) SearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) []string { return v.SearchDomains }).(pulumi.StringArrayOutput)
}

func (o SubnetV2DhcpOptionOutput) TftpServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOption) *string { return v.TftpServerName }).(pulumi.StringPtrOutput)
}

type SubnetV2DhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOption)(nil)).Elem()
}

func (o SubnetV2DhcpOptionArrayOutput) ToSubnetV2DhcpOptionArrayOutput() SubnetV2DhcpOptionArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionArrayOutput) ToSubnetV2DhcpOptionArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOption {
		return vs[0].([]SubnetV2DhcpOption)[vs[1].(int)]
	}).(SubnetV2DhcpOptionOutput)
}

type SubnetV2DhcpOptionDomainNameServer struct {
	Ipv4s []SubnetV2DhcpOptionDomainNameServerIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2DhcpOptionDomainNameServerIpv6 `pulumi:"ipv6s"`
}

// SubnetV2DhcpOptionDomainNameServerInput is an input type that accepts SubnetV2DhcpOptionDomainNameServerArgs and SubnetV2DhcpOptionDomainNameServerOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerInput` via:
//
//	SubnetV2DhcpOptionDomainNameServerArgs{...}
type SubnetV2DhcpOptionDomainNameServerInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerOutput() SubnetV2DhcpOptionDomainNameServerOutput
	ToSubnetV2DhcpOptionDomainNameServerOutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerOutput
}

type SubnetV2DhcpOptionDomainNameServerArgs struct {
	Ipv4s SubnetV2DhcpOptionDomainNameServerIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2DhcpOptionDomainNameServerIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2DhcpOptionDomainNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServer)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerArgs) ToSubnetV2DhcpOptionDomainNameServerOutput() SubnetV2DhcpOptionDomainNameServerOutput {
	return i.ToSubnetV2DhcpOptionDomainNameServerOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerArgs) ToSubnetV2DhcpOptionDomainNameServerOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerOutput)
}

// SubnetV2DhcpOptionDomainNameServerArrayInput is an input type that accepts SubnetV2DhcpOptionDomainNameServerArray and SubnetV2DhcpOptionDomainNameServerArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerArrayInput` via:
//
//	SubnetV2DhcpOptionDomainNameServerArray{ SubnetV2DhcpOptionDomainNameServerArgs{...} }
type SubnetV2DhcpOptionDomainNameServerArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerArrayOutput() SubnetV2DhcpOptionDomainNameServerArrayOutput
	ToSubnetV2DhcpOptionDomainNameServerArrayOutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerArrayOutput
}

type SubnetV2DhcpOptionDomainNameServerArray []SubnetV2DhcpOptionDomainNameServerInput

func (SubnetV2DhcpOptionDomainNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServer)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerArray) ToSubnetV2DhcpOptionDomainNameServerArrayOutput() SubnetV2DhcpOptionDomainNameServerArrayOutput {
	return i.ToSubnetV2DhcpOptionDomainNameServerArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerArray) ToSubnetV2DhcpOptionDomainNameServerArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerArrayOutput)
}

type SubnetV2DhcpOptionDomainNameServerOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServer)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerOutput) ToSubnetV2DhcpOptionDomainNameServerOutput() SubnetV2DhcpOptionDomainNameServerOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerOutput) ToSubnetV2DhcpOptionDomainNameServerOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerOutput) Ipv4s() SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServer) []SubnetV2DhcpOptionDomainNameServerIpv4 { return v.Ipv4s }).(SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput)
}

func (o SubnetV2DhcpOptionDomainNameServerOutput) Ipv6s() SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServer) []SubnetV2DhcpOptionDomainNameServerIpv6 { return v.Ipv6s }).(SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput)
}

type SubnetV2DhcpOptionDomainNameServerArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServer)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerArrayOutput) ToSubnetV2DhcpOptionDomainNameServerArrayOutput() SubnetV2DhcpOptionDomainNameServerArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerArrayOutput) ToSubnetV2DhcpOptionDomainNameServerArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionDomainNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionDomainNameServer {
		return vs[0].([]SubnetV2DhcpOptionDomainNameServer)[vs[1].(int)]
	}).(SubnetV2DhcpOptionDomainNameServerOutput)
}

type SubnetV2DhcpOptionDomainNameServerIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DhcpOptionDomainNameServerIpv4Input is an input type that accepts SubnetV2DhcpOptionDomainNameServerIpv4Args and SubnetV2DhcpOptionDomainNameServerIpv4Output values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerIpv4Input` via:
//
//	SubnetV2DhcpOptionDomainNameServerIpv4Args{...}
type SubnetV2DhcpOptionDomainNameServerIpv4Input interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerIpv4Output() SubnetV2DhcpOptionDomainNameServerIpv4Output
	ToSubnetV2DhcpOptionDomainNameServerIpv4OutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerIpv4Output
}

type SubnetV2DhcpOptionDomainNameServerIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DhcpOptionDomainNameServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerIpv4Args) ToSubnetV2DhcpOptionDomainNameServerIpv4Output() SubnetV2DhcpOptionDomainNameServerIpv4Output {
	return i.ToSubnetV2DhcpOptionDomainNameServerIpv4OutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerIpv4Args) ToSubnetV2DhcpOptionDomainNameServerIpv4OutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerIpv4Output)
}

// SubnetV2DhcpOptionDomainNameServerIpv4ArrayInput is an input type that accepts SubnetV2DhcpOptionDomainNameServerIpv4Array and SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerIpv4ArrayInput` via:
//
//	SubnetV2DhcpOptionDomainNameServerIpv4Array{ SubnetV2DhcpOptionDomainNameServerIpv4Args{...} }
type SubnetV2DhcpOptionDomainNameServerIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput
	ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput
}

type SubnetV2DhcpOptionDomainNameServerIpv4Array []SubnetV2DhcpOptionDomainNameServerIpv4Input

func (SubnetV2DhcpOptionDomainNameServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerIpv4Array) ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput {
	return i.ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerIpv4Array) ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput)
}

type SubnetV2DhcpOptionDomainNameServerIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4Output) ToSubnetV2DhcpOptionDomainNameServerIpv4Output() SubnetV2DhcpOptionDomainNameServerIpv4Output {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4Output) ToSubnetV2DhcpOptionDomainNameServerIpv4OutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv4Output {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServerIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServerIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput) ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput) ToSubnetV2DhcpOptionDomainNameServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionDomainNameServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionDomainNameServerIpv4 {
		return vs[0].([]SubnetV2DhcpOptionDomainNameServerIpv4)[vs[1].(int)]
	}).(SubnetV2DhcpOptionDomainNameServerIpv4Output)
}

type SubnetV2DhcpOptionDomainNameServerIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DhcpOptionDomainNameServerIpv6Input is an input type that accepts SubnetV2DhcpOptionDomainNameServerIpv6Args and SubnetV2DhcpOptionDomainNameServerIpv6Output values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerIpv6Input` via:
//
//	SubnetV2DhcpOptionDomainNameServerIpv6Args{...}
type SubnetV2DhcpOptionDomainNameServerIpv6Input interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerIpv6Output() SubnetV2DhcpOptionDomainNameServerIpv6Output
	ToSubnetV2DhcpOptionDomainNameServerIpv6OutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerIpv6Output
}

type SubnetV2DhcpOptionDomainNameServerIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DhcpOptionDomainNameServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerIpv6Args) ToSubnetV2DhcpOptionDomainNameServerIpv6Output() SubnetV2DhcpOptionDomainNameServerIpv6Output {
	return i.ToSubnetV2DhcpOptionDomainNameServerIpv6OutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerIpv6Args) ToSubnetV2DhcpOptionDomainNameServerIpv6OutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerIpv6Output)
}

// SubnetV2DhcpOptionDomainNameServerIpv6ArrayInput is an input type that accepts SubnetV2DhcpOptionDomainNameServerIpv6Array and SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionDomainNameServerIpv6ArrayInput` via:
//
//	SubnetV2DhcpOptionDomainNameServerIpv6Array{ SubnetV2DhcpOptionDomainNameServerIpv6Args{...} }
type SubnetV2DhcpOptionDomainNameServerIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput
	ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutputWithContext(context.Context) SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput
}

type SubnetV2DhcpOptionDomainNameServerIpv6Array []SubnetV2DhcpOptionDomainNameServerIpv6Input

func (SubnetV2DhcpOptionDomainNameServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (i SubnetV2DhcpOptionDomainNameServerIpv6Array) ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput {
	return i.ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionDomainNameServerIpv6Array) ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput)
}

type SubnetV2DhcpOptionDomainNameServerIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6Output) ToSubnetV2DhcpOptionDomainNameServerIpv6Output() SubnetV2DhcpOptionDomainNameServerIpv6Output {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6Output) ToSubnetV2DhcpOptionDomainNameServerIpv6OutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv6Output {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServerIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionDomainNameServerIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput) ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput) ToSubnetV2DhcpOptionDomainNameServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionDomainNameServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionDomainNameServerIpv6 {
		return vs[0].([]SubnetV2DhcpOptionDomainNameServerIpv6)[vs[1].(int)]
	}).(SubnetV2DhcpOptionDomainNameServerIpv6Output)
}

type SubnetV2DhcpOptionNtpServer struct {
	Ipv4s []SubnetV2DhcpOptionNtpServerIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2DhcpOptionNtpServerIpv6 `pulumi:"ipv6s"`
}

// SubnetV2DhcpOptionNtpServerInput is an input type that accepts SubnetV2DhcpOptionNtpServerArgs and SubnetV2DhcpOptionNtpServerOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerInput` via:
//
//	SubnetV2DhcpOptionNtpServerArgs{...}
type SubnetV2DhcpOptionNtpServerInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerOutput() SubnetV2DhcpOptionNtpServerOutput
	ToSubnetV2DhcpOptionNtpServerOutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerOutput
}

type SubnetV2DhcpOptionNtpServerArgs struct {
	Ipv4s SubnetV2DhcpOptionNtpServerIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2DhcpOptionNtpServerIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2DhcpOptionNtpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServer)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerArgs) ToSubnetV2DhcpOptionNtpServerOutput() SubnetV2DhcpOptionNtpServerOutput {
	return i.ToSubnetV2DhcpOptionNtpServerOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerArgs) ToSubnetV2DhcpOptionNtpServerOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerOutput)
}

// SubnetV2DhcpOptionNtpServerArrayInput is an input type that accepts SubnetV2DhcpOptionNtpServerArray and SubnetV2DhcpOptionNtpServerArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerArrayInput` via:
//
//	SubnetV2DhcpOptionNtpServerArray{ SubnetV2DhcpOptionNtpServerArgs{...} }
type SubnetV2DhcpOptionNtpServerArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerArrayOutput() SubnetV2DhcpOptionNtpServerArrayOutput
	ToSubnetV2DhcpOptionNtpServerArrayOutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerArrayOutput
}

type SubnetV2DhcpOptionNtpServerArray []SubnetV2DhcpOptionNtpServerInput

func (SubnetV2DhcpOptionNtpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServer)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerArray) ToSubnetV2DhcpOptionNtpServerArrayOutput() SubnetV2DhcpOptionNtpServerArrayOutput {
	return i.ToSubnetV2DhcpOptionNtpServerArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerArray) ToSubnetV2DhcpOptionNtpServerArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerArrayOutput)
}

type SubnetV2DhcpOptionNtpServerOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServer)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerOutput) ToSubnetV2DhcpOptionNtpServerOutput() SubnetV2DhcpOptionNtpServerOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerOutput) ToSubnetV2DhcpOptionNtpServerOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerOutput) Ipv4s() SubnetV2DhcpOptionNtpServerIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServer) []SubnetV2DhcpOptionNtpServerIpv4 { return v.Ipv4s }).(SubnetV2DhcpOptionNtpServerIpv4ArrayOutput)
}

func (o SubnetV2DhcpOptionNtpServerOutput) Ipv6s() SubnetV2DhcpOptionNtpServerIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServer) []SubnetV2DhcpOptionNtpServerIpv6 { return v.Ipv6s }).(SubnetV2DhcpOptionNtpServerIpv6ArrayOutput)
}

type SubnetV2DhcpOptionNtpServerArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServer)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerArrayOutput) ToSubnetV2DhcpOptionNtpServerArrayOutput() SubnetV2DhcpOptionNtpServerArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerArrayOutput) ToSubnetV2DhcpOptionNtpServerArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionNtpServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionNtpServer {
		return vs[0].([]SubnetV2DhcpOptionNtpServer)[vs[1].(int)]
	}).(SubnetV2DhcpOptionNtpServerOutput)
}

type SubnetV2DhcpOptionNtpServerIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DhcpOptionNtpServerIpv4Input is an input type that accepts SubnetV2DhcpOptionNtpServerIpv4Args and SubnetV2DhcpOptionNtpServerIpv4Output values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerIpv4Input` via:
//
//	SubnetV2DhcpOptionNtpServerIpv4Args{...}
type SubnetV2DhcpOptionNtpServerIpv4Input interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerIpv4Output() SubnetV2DhcpOptionNtpServerIpv4Output
	ToSubnetV2DhcpOptionNtpServerIpv4OutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerIpv4Output
}

type SubnetV2DhcpOptionNtpServerIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DhcpOptionNtpServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv4)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerIpv4Args) ToSubnetV2DhcpOptionNtpServerIpv4Output() SubnetV2DhcpOptionNtpServerIpv4Output {
	return i.ToSubnetV2DhcpOptionNtpServerIpv4OutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerIpv4Args) ToSubnetV2DhcpOptionNtpServerIpv4OutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerIpv4Output)
}

// SubnetV2DhcpOptionNtpServerIpv4ArrayInput is an input type that accepts SubnetV2DhcpOptionNtpServerIpv4Array and SubnetV2DhcpOptionNtpServerIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerIpv4ArrayInput` via:
//
//	SubnetV2DhcpOptionNtpServerIpv4Array{ SubnetV2DhcpOptionNtpServerIpv4Args{...} }
type SubnetV2DhcpOptionNtpServerIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutput() SubnetV2DhcpOptionNtpServerIpv4ArrayOutput
	ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerIpv4ArrayOutput
}

type SubnetV2DhcpOptionNtpServerIpv4Array []SubnetV2DhcpOptionNtpServerIpv4Input

func (SubnetV2DhcpOptionNtpServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServerIpv4)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerIpv4Array) ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutput() SubnetV2DhcpOptionNtpServerIpv4ArrayOutput {
	return i.ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerIpv4Array) ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerIpv4ArrayOutput)
}

type SubnetV2DhcpOptionNtpServerIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv4)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerIpv4Output) ToSubnetV2DhcpOptionNtpServerIpv4Output() SubnetV2DhcpOptionNtpServerIpv4Output {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv4Output) ToSubnetV2DhcpOptionNtpServerIpv4OutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv4Output {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServerIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DhcpOptionNtpServerIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServerIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DhcpOptionNtpServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServerIpv4)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerIpv4ArrayOutput) ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutput() SubnetV2DhcpOptionNtpServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv4ArrayOutput) ToSubnetV2DhcpOptionNtpServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionNtpServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionNtpServerIpv4 {
		return vs[0].([]SubnetV2DhcpOptionNtpServerIpv4)[vs[1].(int)]
	}).(SubnetV2DhcpOptionNtpServerIpv4Output)
}

type SubnetV2DhcpOptionNtpServerIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DhcpOptionNtpServerIpv6Input is an input type that accepts SubnetV2DhcpOptionNtpServerIpv6Args and SubnetV2DhcpOptionNtpServerIpv6Output values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerIpv6Input` via:
//
//	SubnetV2DhcpOptionNtpServerIpv6Args{...}
type SubnetV2DhcpOptionNtpServerIpv6Input interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerIpv6Output() SubnetV2DhcpOptionNtpServerIpv6Output
	ToSubnetV2DhcpOptionNtpServerIpv6OutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerIpv6Output
}

type SubnetV2DhcpOptionNtpServerIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DhcpOptionNtpServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv6)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerIpv6Args) ToSubnetV2DhcpOptionNtpServerIpv6Output() SubnetV2DhcpOptionNtpServerIpv6Output {
	return i.ToSubnetV2DhcpOptionNtpServerIpv6OutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerIpv6Args) ToSubnetV2DhcpOptionNtpServerIpv6OutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerIpv6Output)
}

// SubnetV2DhcpOptionNtpServerIpv6ArrayInput is an input type that accepts SubnetV2DhcpOptionNtpServerIpv6Array and SubnetV2DhcpOptionNtpServerIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DhcpOptionNtpServerIpv6ArrayInput` via:
//
//	SubnetV2DhcpOptionNtpServerIpv6Array{ SubnetV2DhcpOptionNtpServerIpv6Args{...} }
type SubnetV2DhcpOptionNtpServerIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutput() SubnetV2DhcpOptionNtpServerIpv6ArrayOutput
	ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutputWithContext(context.Context) SubnetV2DhcpOptionNtpServerIpv6ArrayOutput
}

type SubnetV2DhcpOptionNtpServerIpv6Array []SubnetV2DhcpOptionNtpServerIpv6Input

func (SubnetV2DhcpOptionNtpServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServerIpv6)(nil)).Elem()
}

func (i SubnetV2DhcpOptionNtpServerIpv6Array) ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutput() SubnetV2DhcpOptionNtpServerIpv6ArrayOutput {
	return i.ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DhcpOptionNtpServerIpv6Array) ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DhcpOptionNtpServerIpv6ArrayOutput)
}

type SubnetV2DhcpOptionNtpServerIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv6)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerIpv6Output) ToSubnetV2DhcpOptionNtpServerIpv6Output() SubnetV2DhcpOptionNtpServerIpv6Output {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv6Output) ToSubnetV2DhcpOptionNtpServerIpv6OutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv6Output {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServerIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DhcpOptionNtpServerIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DhcpOptionNtpServerIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DhcpOptionNtpServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DhcpOptionNtpServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DhcpOptionNtpServerIpv6)(nil)).Elem()
}

func (o SubnetV2DhcpOptionNtpServerIpv6ArrayOutput) ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutput() SubnetV2DhcpOptionNtpServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv6ArrayOutput) ToSubnetV2DhcpOptionNtpServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DhcpOptionNtpServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2DhcpOptionNtpServerIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2DhcpOptionNtpServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DhcpOptionNtpServerIpv6 {
		return vs[0].([]SubnetV2DhcpOptionNtpServerIpv6)[vs[1].(int)]
	}).(SubnetV2DhcpOptionNtpServerIpv6Output)
}

type SubnetV2DynamicIpAddress struct {
	Ipv4s []SubnetV2DynamicIpAddressIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2DynamicIpAddressIpv6 `pulumi:"ipv6s"`
}

// SubnetV2DynamicIpAddressInput is an input type that accepts SubnetV2DynamicIpAddressArgs and SubnetV2DynamicIpAddressOutput values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressInput` via:
//
//	SubnetV2DynamicIpAddressArgs{...}
type SubnetV2DynamicIpAddressInput interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressOutput() SubnetV2DynamicIpAddressOutput
	ToSubnetV2DynamicIpAddressOutputWithContext(context.Context) SubnetV2DynamicIpAddressOutput
}

type SubnetV2DynamicIpAddressArgs struct {
	Ipv4s SubnetV2DynamicIpAddressIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2DynamicIpAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2DynamicIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddress)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressArgs) ToSubnetV2DynamicIpAddressOutput() SubnetV2DynamicIpAddressOutput {
	return i.ToSubnetV2DynamicIpAddressOutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressArgs) ToSubnetV2DynamicIpAddressOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressOutput)
}

// SubnetV2DynamicIpAddressArrayInput is an input type that accepts SubnetV2DynamicIpAddressArray and SubnetV2DynamicIpAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressArrayInput` via:
//
//	SubnetV2DynamicIpAddressArray{ SubnetV2DynamicIpAddressArgs{...} }
type SubnetV2DynamicIpAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressArrayOutput() SubnetV2DynamicIpAddressArrayOutput
	ToSubnetV2DynamicIpAddressArrayOutputWithContext(context.Context) SubnetV2DynamicIpAddressArrayOutput
}

type SubnetV2DynamicIpAddressArray []SubnetV2DynamicIpAddressInput

func (SubnetV2DynamicIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddress)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressArray) ToSubnetV2DynamicIpAddressArrayOutput() SubnetV2DynamicIpAddressArrayOutput {
	return i.ToSubnetV2DynamicIpAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressArray) ToSubnetV2DynamicIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressArrayOutput)
}

type SubnetV2DynamicIpAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddress)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressOutput) ToSubnetV2DynamicIpAddressOutput() SubnetV2DynamicIpAddressOutput {
	return o
}

func (o SubnetV2DynamicIpAddressOutput) ToSubnetV2DynamicIpAddressOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressOutput {
	return o
}

func (o SubnetV2DynamicIpAddressOutput) Ipv4s() SubnetV2DynamicIpAddressIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddress) []SubnetV2DynamicIpAddressIpv4 { return v.Ipv4s }).(SubnetV2DynamicIpAddressIpv4ArrayOutput)
}

func (o SubnetV2DynamicIpAddressOutput) Ipv6s() SubnetV2DynamicIpAddressIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddress) []SubnetV2DynamicIpAddressIpv6 { return v.Ipv6s }).(SubnetV2DynamicIpAddressIpv6ArrayOutput)
}

type SubnetV2DynamicIpAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddress)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressArrayOutput) ToSubnetV2DynamicIpAddressArrayOutput() SubnetV2DynamicIpAddressArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressArrayOutput) ToSubnetV2DynamicIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2DynamicIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DynamicIpAddress {
		return vs[0].([]SubnetV2DynamicIpAddress)[vs[1].(int)]
	}).(SubnetV2DynamicIpAddressOutput)
}

type SubnetV2DynamicIpAddressIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DynamicIpAddressIpv4Input is an input type that accepts SubnetV2DynamicIpAddressIpv4Args and SubnetV2DynamicIpAddressIpv4Output values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressIpv4Input` via:
//
//	SubnetV2DynamicIpAddressIpv4Args{...}
type SubnetV2DynamicIpAddressIpv4Input interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressIpv4Output() SubnetV2DynamicIpAddressIpv4Output
	ToSubnetV2DynamicIpAddressIpv4OutputWithContext(context.Context) SubnetV2DynamicIpAddressIpv4Output
}

type SubnetV2DynamicIpAddressIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DynamicIpAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddressIpv4)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressIpv4Args) ToSubnetV2DynamicIpAddressIpv4Output() SubnetV2DynamicIpAddressIpv4Output {
	return i.ToSubnetV2DynamicIpAddressIpv4OutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressIpv4Args) ToSubnetV2DynamicIpAddressIpv4OutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressIpv4Output)
}

// SubnetV2DynamicIpAddressIpv4ArrayInput is an input type that accepts SubnetV2DynamicIpAddressIpv4Array and SubnetV2DynamicIpAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressIpv4ArrayInput` via:
//
//	SubnetV2DynamicIpAddressIpv4Array{ SubnetV2DynamicIpAddressIpv4Args{...} }
type SubnetV2DynamicIpAddressIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressIpv4ArrayOutput() SubnetV2DynamicIpAddressIpv4ArrayOutput
	ToSubnetV2DynamicIpAddressIpv4ArrayOutputWithContext(context.Context) SubnetV2DynamicIpAddressIpv4ArrayOutput
}

type SubnetV2DynamicIpAddressIpv4Array []SubnetV2DynamicIpAddressIpv4Input

func (SubnetV2DynamicIpAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddressIpv4)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressIpv4Array) ToSubnetV2DynamicIpAddressIpv4ArrayOutput() SubnetV2DynamicIpAddressIpv4ArrayOutput {
	return i.ToSubnetV2DynamicIpAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressIpv4Array) ToSubnetV2DynamicIpAddressIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressIpv4ArrayOutput)
}

type SubnetV2DynamicIpAddressIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddressIpv4)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressIpv4Output) ToSubnetV2DynamicIpAddressIpv4Output() SubnetV2DynamicIpAddressIpv4Output {
	return o
}

func (o SubnetV2DynamicIpAddressIpv4Output) ToSubnetV2DynamicIpAddressIpv4OutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv4Output {
	return o
}

func (o SubnetV2DynamicIpAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DynamicIpAddressIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddressIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DynamicIpAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddressIpv4)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressIpv4ArrayOutput) ToSubnetV2DynamicIpAddressIpv4ArrayOutput() SubnetV2DynamicIpAddressIpv4ArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressIpv4ArrayOutput) ToSubnetV2DynamicIpAddressIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv4ArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2DynamicIpAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DynamicIpAddressIpv4 {
		return vs[0].([]SubnetV2DynamicIpAddressIpv4)[vs[1].(int)]
	}).(SubnetV2DynamicIpAddressIpv4Output)
}

type SubnetV2DynamicIpAddressIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2DynamicIpAddressIpv6Input is an input type that accepts SubnetV2DynamicIpAddressIpv6Args and SubnetV2DynamicIpAddressIpv6Output values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressIpv6Input` via:
//
//	SubnetV2DynamicIpAddressIpv6Args{...}
type SubnetV2DynamicIpAddressIpv6Input interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressIpv6Output() SubnetV2DynamicIpAddressIpv6Output
	ToSubnetV2DynamicIpAddressIpv6OutputWithContext(context.Context) SubnetV2DynamicIpAddressIpv6Output
}

type SubnetV2DynamicIpAddressIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2DynamicIpAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddressIpv6)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressIpv6Args) ToSubnetV2DynamicIpAddressIpv6Output() SubnetV2DynamicIpAddressIpv6Output {
	return i.ToSubnetV2DynamicIpAddressIpv6OutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressIpv6Args) ToSubnetV2DynamicIpAddressIpv6OutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressIpv6Output)
}

// SubnetV2DynamicIpAddressIpv6ArrayInput is an input type that accepts SubnetV2DynamicIpAddressIpv6Array and SubnetV2DynamicIpAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2DynamicIpAddressIpv6ArrayInput` via:
//
//	SubnetV2DynamicIpAddressIpv6Array{ SubnetV2DynamicIpAddressIpv6Args{...} }
type SubnetV2DynamicIpAddressIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2DynamicIpAddressIpv6ArrayOutput() SubnetV2DynamicIpAddressIpv6ArrayOutput
	ToSubnetV2DynamicIpAddressIpv6ArrayOutputWithContext(context.Context) SubnetV2DynamicIpAddressIpv6ArrayOutput
}

type SubnetV2DynamicIpAddressIpv6Array []SubnetV2DynamicIpAddressIpv6Input

func (SubnetV2DynamicIpAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddressIpv6)(nil)).Elem()
}

func (i SubnetV2DynamicIpAddressIpv6Array) ToSubnetV2DynamicIpAddressIpv6ArrayOutput() SubnetV2DynamicIpAddressIpv6ArrayOutput {
	return i.ToSubnetV2DynamicIpAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2DynamicIpAddressIpv6Array) ToSubnetV2DynamicIpAddressIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2DynamicIpAddressIpv6ArrayOutput)
}

type SubnetV2DynamicIpAddressIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2DynamicIpAddressIpv6)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressIpv6Output) ToSubnetV2DynamicIpAddressIpv6Output() SubnetV2DynamicIpAddressIpv6Output {
	return o
}

func (o SubnetV2DynamicIpAddressIpv6Output) ToSubnetV2DynamicIpAddressIpv6OutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv6Output {
	return o
}

func (o SubnetV2DynamicIpAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2DynamicIpAddressIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2DynamicIpAddressIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2DynamicIpAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2DynamicIpAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2DynamicIpAddressIpv6)(nil)).Elem()
}

func (o SubnetV2DynamicIpAddressIpv6ArrayOutput) ToSubnetV2DynamicIpAddressIpv6ArrayOutput() SubnetV2DynamicIpAddressIpv6ArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressIpv6ArrayOutput) ToSubnetV2DynamicIpAddressIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2DynamicIpAddressIpv6ArrayOutput {
	return o
}

func (o SubnetV2DynamicIpAddressIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2DynamicIpAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2DynamicIpAddressIpv6 {
		return vs[0].([]SubnetV2DynamicIpAddressIpv6)[vs[1].(int)]
	}).(SubnetV2DynamicIpAddressIpv6Output)
}

type SubnetV2IpConfig struct {
	Ipv4s []SubnetV2IpConfigIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2IpConfigIpv6 `pulumi:"ipv6s"`
}

// SubnetV2IpConfigInput is an input type that accepts SubnetV2IpConfigArgs and SubnetV2IpConfigOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigInput` via:
//
//	SubnetV2IpConfigArgs{...}
type SubnetV2IpConfigInput interface {
	pulumi.Input

	ToSubnetV2IpConfigOutput() SubnetV2IpConfigOutput
	ToSubnetV2IpConfigOutputWithContext(context.Context) SubnetV2IpConfigOutput
}

type SubnetV2IpConfigArgs struct {
	Ipv4s SubnetV2IpConfigIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2IpConfigIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2IpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfig)(nil)).Elem()
}

func (i SubnetV2IpConfigArgs) ToSubnetV2IpConfigOutput() SubnetV2IpConfigOutput {
	return i.ToSubnetV2IpConfigOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigArgs) ToSubnetV2IpConfigOutputWithContext(ctx context.Context) SubnetV2IpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigOutput)
}

// SubnetV2IpConfigArrayInput is an input type that accepts SubnetV2IpConfigArray and SubnetV2IpConfigArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigArrayInput` via:
//
//	SubnetV2IpConfigArray{ SubnetV2IpConfigArgs{...} }
type SubnetV2IpConfigArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigArrayOutput() SubnetV2IpConfigArrayOutput
	ToSubnetV2IpConfigArrayOutputWithContext(context.Context) SubnetV2IpConfigArrayOutput
}

type SubnetV2IpConfigArray []SubnetV2IpConfigInput

func (SubnetV2IpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfig)(nil)).Elem()
}

func (i SubnetV2IpConfigArray) ToSubnetV2IpConfigArrayOutput() SubnetV2IpConfigArrayOutput {
	return i.ToSubnetV2IpConfigArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigArray) ToSubnetV2IpConfigArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigArrayOutput)
}

type SubnetV2IpConfigOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfig)(nil)).Elem()
}

func (o SubnetV2IpConfigOutput) ToSubnetV2IpConfigOutput() SubnetV2IpConfigOutput {
	return o
}

func (o SubnetV2IpConfigOutput) ToSubnetV2IpConfigOutputWithContext(ctx context.Context) SubnetV2IpConfigOutput {
	return o
}

func (o SubnetV2IpConfigOutput) Ipv4s() SubnetV2IpConfigIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfig) []SubnetV2IpConfigIpv4 { return v.Ipv4s }).(SubnetV2IpConfigIpv4ArrayOutput)
}

func (o SubnetV2IpConfigOutput) Ipv6s() SubnetV2IpConfigIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfig) []SubnetV2IpConfigIpv6 { return v.Ipv6s }).(SubnetV2IpConfigIpv6ArrayOutput)
}

type SubnetV2IpConfigArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfig)(nil)).Elem()
}

func (o SubnetV2IpConfigArrayOutput) ToSubnetV2IpConfigArrayOutput() SubnetV2IpConfigArrayOutput {
	return o
}

func (o SubnetV2IpConfigArrayOutput) ToSubnetV2IpConfigArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigArrayOutput {
	return o
}

func (o SubnetV2IpConfigArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfig {
		return vs[0].([]SubnetV2IpConfig)[vs[1].(int)]
	}).(SubnetV2IpConfigOutput)
}

type SubnetV2IpConfigIpv4 struct {
	DefaultGatewayIps   []SubnetV2IpConfigIpv4DefaultGatewayIp  `pulumi:"defaultGatewayIps"`
	DhcpServerAddresses []SubnetV2IpConfigIpv4DhcpServerAddress `pulumi:"dhcpServerAddresses"`
	IpSubnets           []SubnetV2IpConfigIpv4IpSubnet          `pulumi:"ipSubnets"`
	PoolLists           []SubnetV2IpConfigIpv4PoolList          `pulumi:"poolLists"`
}

// SubnetV2IpConfigIpv4Input is an input type that accepts SubnetV2IpConfigIpv4Args and SubnetV2IpConfigIpv4Output values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4Input` via:
//
//	SubnetV2IpConfigIpv4Args{...}
type SubnetV2IpConfigIpv4Input interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4Output() SubnetV2IpConfigIpv4Output
	ToSubnetV2IpConfigIpv4OutputWithContext(context.Context) SubnetV2IpConfigIpv4Output
}

type SubnetV2IpConfigIpv4Args struct {
	DefaultGatewayIps   SubnetV2IpConfigIpv4DefaultGatewayIpArrayInput  `pulumi:"defaultGatewayIps"`
	DhcpServerAddresses SubnetV2IpConfigIpv4DhcpServerAddressArrayInput `pulumi:"dhcpServerAddresses"`
	IpSubnets           SubnetV2IpConfigIpv4IpSubnetArrayInput          `pulumi:"ipSubnets"`
	PoolLists           SubnetV2IpConfigIpv4PoolListArrayInput          `pulumi:"poolLists"`
}

func (SubnetV2IpConfigIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4Args) ToSubnetV2IpConfigIpv4Output() SubnetV2IpConfigIpv4Output {
	return i.ToSubnetV2IpConfigIpv4OutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4Args) ToSubnetV2IpConfigIpv4OutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4Output)
}

// SubnetV2IpConfigIpv4ArrayInput is an input type that accepts SubnetV2IpConfigIpv4Array and SubnetV2IpConfigIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4ArrayInput` via:
//
//	SubnetV2IpConfigIpv4Array{ SubnetV2IpConfigIpv4Args{...} }
type SubnetV2IpConfigIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4ArrayOutput() SubnetV2IpConfigIpv4ArrayOutput
	ToSubnetV2IpConfigIpv4ArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4ArrayOutput
}

type SubnetV2IpConfigIpv4Array []SubnetV2IpConfigIpv4Input

func (SubnetV2IpConfigIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4Array) ToSubnetV2IpConfigIpv4ArrayOutput() SubnetV2IpConfigIpv4ArrayOutput {
	return i.ToSubnetV2IpConfigIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4Array) ToSubnetV2IpConfigIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4ArrayOutput)
}

type SubnetV2IpConfigIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4Output) ToSubnetV2IpConfigIpv4Output() SubnetV2IpConfigIpv4Output {
	return o
}

func (o SubnetV2IpConfigIpv4Output) ToSubnetV2IpConfigIpv4OutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4Output {
	return o
}

func (o SubnetV2IpConfigIpv4Output) DefaultGatewayIps() SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4) []SubnetV2IpConfigIpv4DefaultGatewayIp { return v.DefaultGatewayIps }).(SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput)
}

func (o SubnetV2IpConfigIpv4Output) DhcpServerAddresses() SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4) []SubnetV2IpConfigIpv4DhcpServerAddress { return v.DhcpServerAddresses }).(SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput)
}

func (o SubnetV2IpConfigIpv4Output) IpSubnets() SubnetV2IpConfigIpv4IpSubnetArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4) []SubnetV2IpConfigIpv4IpSubnet { return v.IpSubnets }).(SubnetV2IpConfigIpv4IpSubnetArrayOutput)
}

func (o SubnetV2IpConfigIpv4Output) PoolLists() SubnetV2IpConfigIpv4PoolListArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4) []SubnetV2IpConfigIpv4PoolList { return v.PoolLists }).(SubnetV2IpConfigIpv4PoolListArrayOutput)
}

type SubnetV2IpConfigIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4ArrayOutput) ToSubnetV2IpConfigIpv4ArrayOutput() SubnetV2IpConfigIpv4ArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4ArrayOutput) ToSubnetV2IpConfigIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4ArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4 {
		return vs[0].([]SubnetV2IpConfigIpv4)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4Output)
}

type SubnetV2IpConfigIpv4DefaultGatewayIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv4DefaultGatewayIpInput is an input type that accepts SubnetV2IpConfigIpv4DefaultGatewayIpArgs and SubnetV2IpConfigIpv4DefaultGatewayIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4DefaultGatewayIpInput` via:
//
//	SubnetV2IpConfigIpv4DefaultGatewayIpArgs{...}
type SubnetV2IpConfigIpv4DefaultGatewayIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4DefaultGatewayIpOutput() SubnetV2IpConfigIpv4DefaultGatewayIpOutput
	ToSubnetV2IpConfigIpv4DefaultGatewayIpOutputWithContext(context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpOutput
}

type SubnetV2IpConfigIpv4DefaultGatewayIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv4DefaultGatewayIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4DefaultGatewayIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4DefaultGatewayIpArgs) ToSubnetV2IpConfigIpv4DefaultGatewayIpOutput() SubnetV2IpConfigIpv4DefaultGatewayIpOutput {
	return i.ToSubnetV2IpConfigIpv4DefaultGatewayIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4DefaultGatewayIpArgs) ToSubnetV2IpConfigIpv4DefaultGatewayIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4DefaultGatewayIpOutput)
}

// SubnetV2IpConfigIpv4DefaultGatewayIpArrayInput is an input type that accepts SubnetV2IpConfigIpv4DefaultGatewayIpArray and SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4DefaultGatewayIpArrayInput` via:
//
//	SubnetV2IpConfigIpv4DefaultGatewayIpArray{ SubnetV2IpConfigIpv4DefaultGatewayIpArgs{...} }
type SubnetV2IpConfigIpv4DefaultGatewayIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput
	ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput
}

type SubnetV2IpConfigIpv4DefaultGatewayIpArray []SubnetV2IpConfigIpv4DefaultGatewayIpInput

func (SubnetV2IpConfigIpv4DefaultGatewayIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4DefaultGatewayIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4DefaultGatewayIpArray) ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4DefaultGatewayIpArray) ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput)
}

type SubnetV2IpConfigIpv4DefaultGatewayIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4DefaultGatewayIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4DefaultGatewayIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpOutput) ToSubnetV2IpConfigIpv4DefaultGatewayIpOutput() SubnetV2IpConfigIpv4DefaultGatewayIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpOutput) ToSubnetV2IpConfigIpv4DefaultGatewayIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4DefaultGatewayIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4DefaultGatewayIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4DefaultGatewayIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput) ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput) ToSubnetV2IpConfigIpv4DefaultGatewayIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4DefaultGatewayIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4DefaultGatewayIp {
		return vs[0].([]SubnetV2IpConfigIpv4DefaultGatewayIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4DefaultGatewayIpOutput)
}

type SubnetV2IpConfigIpv4DhcpServerAddress struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv4DhcpServerAddressInput is an input type that accepts SubnetV2IpConfigIpv4DhcpServerAddressArgs and SubnetV2IpConfigIpv4DhcpServerAddressOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4DhcpServerAddressInput` via:
//
//	SubnetV2IpConfigIpv4DhcpServerAddressArgs{...}
type SubnetV2IpConfigIpv4DhcpServerAddressInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4DhcpServerAddressOutput() SubnetV2IpConfigIpv4DhcpServerAddressOutput
	ToSubnetV2IpConfigIpv4DhcpServerAddressOutputWithContext(context.Context) SubnetV2IpConfigIpv4DhcpServerAddressOutput
}

type SubnetV2IpConfigIpv4DhcpServerAddressArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv4DhcpServerAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4DhcpServerAddress)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4DhcpServerAddressArgs) ToSubnetV2IpConfigIpv4DhcpServerAddressOutput() SubnetV2IpConfigIpv4DhcpServerAddressOutput {
	return i.ToSubnetV2IpConfigIpv4DhcpServerAddressOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4DhcpServerAddressArgs) ToSubnetV2IpConfigIpv4DhcpServerAddressOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DhcpServerAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4DhcpServerAddressOutput)
}

// SubnetV2IpConfigIpv4DhcpServerAddressArrayInput is an input type that accepts SubnetV2IpConfigIpv4DhcpServerAddressArray and SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4DhcpServerAddressArrayInput` via:
//
//	SubnetV2IpConfigIpv4DhcpServerAddressArray{ SubnetV2IpConfigIpv4DhcpServerAddressArgs{...} }
type SubnetV2IpConfigIpv4DhcpServerAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput
	ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput
}

type SubnetV2IpConfigIpv4DhcpServerAddressArray []SubnetV2IpConfigIpv4DhcpServerAddressInput

func (SubnetV2IpConfigIpv4DhcpServerAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4DhcpServerAddress)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4DhcpServerAddressArray) ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput {
	return i.ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4DhcpServerAddressArray) ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput)
}

type SubnetV2IpConfigIpv4DhcpServerAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4DhcpServerAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4DhcpServerAddress)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressOutput) ToSubnetV2IpConfigIpv4DhcpServerAddressOutput() SubnetV2IpConfigIpv4DhcpServerAddressOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressOutput) ToSubnetV2IpConfigIpv4DhcpServerAddressOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DhcpServerAddressOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4DhcpServerAddress) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4DhcpServerAddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4DhcpServerAddress)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput) ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput) ToSubnetV2IpConfigIpv4DhcpServerAddressArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4DhcpServerAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4DhcpServerAddress {
		return vs[0].([]SubnetV2IpConfigIpv4DhcpServerAddress)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4DhcpServerAddressOutput)
}

type SubnetV2IpConfigIpv4IpSubnet struct {
	Ips          []SubnetV2IpConfigIpv4IpSubnetIp `pulumi:"ips"`
	PrefixLength *int                             `pulumi:"prefixLength"`
}

// SubnetV2IpConfigIpv4IpSubnetInput is an input type that accepts SubnetV2IpConfigIpv4IpSubnetArgs and SubnetV2IpConfigIpv4IpSubnetOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4IpSubnetInput` via:
//
//	SubnetV2IpConfigIpv4IpSubnetArgs{...}
type SubnetV2IpConfigIpv4IpSubnetInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4IpSubnetOutput() SubnetV2IpConfigIpv4IpSubnetOutput
	ToSubnetV2IpConfigIpv4IpSubnetOutputWithContext(context.Context) SubnetV2IpConfigIpv4IpSubnetOutput
}

type SubnetV2IpConfigIpv4IpSubnetArgs struct {
	Ips          SubnetV2IpConfigIpv4IpSubnetIpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                       `pulumi:"prefixLength"`
}

func (SubnetV2IpConfigIpv4IpSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnet)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4IpSubnetArgs) ToSubnetV2IpConfigIpv4IpSubnetOutput() SubnetV2IpConfigIpv4IpSubnetOutput {
	return i.ToSubnetV2IpConfigIpv4IpSubnetOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4IpSubnetArgs) ToSubnetV2IpConfigIpv4IpSubnetOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4IpSubnetOutput)
}

// SubnetV2IpConfigIpv4IpSubnetArrayInput is an input type that accepts SubnetV2IpConfigIpv4IpSubnetArray and SubnetV2IpConfigIpv4IpSubnetArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4IpSubnetArrayInput` via:
//
//	SubnetV2IpConfigIpv4IpSubnetArray{ SubnetV2IpConfigIpv4IpSubnetArgs{...} }
type SubnetV2IpConfigIpv4IpSubnetArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4IpSubnetArrayOutput() SubnetV2IpConfigIpv4IpSubnetArrayOutput
	ToSubnetV2IpConfigIpv4IpSubnetArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4IpSubnetArrayOutput
}

type SubnetV2IpConfigIpv4IpSubnetArray []SubnetV2IpConfigIpv4IpSubnetInput

func (SubnetV2IpConfigIpv4IpSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4IpSubnet)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4IpSubnetArray) ToSubnetV2IpConfigIpv4IpSubnetArrayOutput() SubnetV2IpConfigIpv4IpSubnetArrayOutput {
	return i.ToSubnetV2IpConfigIpv4IpSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4IpSubnetArray) ToSubnetV2IpConfigIpv4IpSubnetArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4IpSubnetArrayOutput)
}

type SubnetV2IpConfigIpv4IpSubnetOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4IpSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnet)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4IpSubnetOutput) ToSubnetV2IpConfigIpv4IpSubnetOutput() SubnetV2IpConfigIpv4IpSubnetOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetOutput) ToSubnetV2IpConfigIpv4IpSubnetOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetOutput) Ips() SubnetV2IpConfigIpv4IpSubnetIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4IpSubnet) []SubnetV2IpConfigIpv4IpSubnetIp { return v.Ips }).(SubnetV2IpConfigIpv4IpSubnetIpArrayOutput)
}

func (o SubnetV2IpConfigIpv4IpSubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4IpSubnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type SubnetV2IpConfigIpv4IpSubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4IpSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4IpSubnet)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4IpSubnetArrayOutput) ToSubnetV2IpConfigIpv4IpSubnetArrayOutput() SubnetV2IpConfigIpv4IpSubnetArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetArrayOutput) ToSubnetV2IpConfigIpv4IpSubnetArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4IpSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4IpSubnet {
		return vs[0].([]SubnetV2IpConfigIpv4IpSubnet)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4IpSubnetOutput)
}

type SubnetV2IpConfigIpv4IpSubnetIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv4IpSubnetIpInput is an input type that accepts SubnetV2IpConfigIpv4IpSubnetIpArgs and SubnetV2IpConfigIpv4IpSubnetIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4IpSubnetIpInput` via:
//
//	SubnetV2IpConfigIpv4IpSubnetIpArgs{...}
type SubnetV2IpConfigIpv4IpSubnetIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4IpSubnetIpOutput() SubnetV2IpConfigIpv4IpSubnetIpOutput
	ToSubnetV2IpConfigIpv4IpSubnetIpOutputWithContext(context.Context) SubnetV2IpConfigIpv4IpSubnetIpOutput
}

type SubnetV2IpConfigIpv4IpSubnetIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv4IpSubnetIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4IpSubnetIpArgs) ToSubnetV2IpConfigIpv4IpSubnetIpOutput() SubnetV2IpConfigIpv4IpSubnetIpOutput {
	return i.ToSubnetV2IpConfigIpv4IpSubnetIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4IpSubnetIpArgs) ToSubnetV2IpConfigIpv4IpSubnetIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4IpSubnetIpOutput)
}

// SubnetV2IpConfigIpv4IpSubnetIpArrayInput is an input type that accepts SubnetV2IpConfigIpv4IpSubnetIpArray and SubnetV2IpConfigIpv4IpSubnetIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4IpSubnetIpArrayInput` via:
//
//	SubnetV2IpConfigIpv4IpSubnetIpArray{ SubnetV2IpConfigIpv4IpSubnetIpArgs{...} }
type SubnetV2IpConfigIpv4IpSubnetIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutput() SubnetV2IpConfigIpv4IpSubnetIpArrayOutput
	ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4IpSubnetIpArrayOutput
}

type SubnetV2IpConfigIpv4IpSubnetIpArray []SubnetV2IpConfigIpv4IpSubnetIpInput

func (SubnetV2IpConfigIpv4IpSubnetIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4IpSubnetIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4IpSubnetIpArray) ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutput() SubnetV2IpConfigIpv4IpSubnetIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4IpSubnetIpArray) ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4IpSubnetIpArrayOutput)
}

type SubnetV2IpConfigIpv4IpSubnetIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4IpSubnetIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4IpSubnetIpOutput) ToSubnetV2IpConfigIpv4IpSubnetIpOutput() SubnetV2IpConfigIpv4IpSubnetIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetIpOutput) ToSubnetV2IpConfigIpv4IpSubnetIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4IpSubnetIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv4IpSubnetIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4IpSubnetIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv4IpSubnetIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4IpSubnetIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4IpSubnetIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4IpSubnetIpArrayOutput) ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutput() SubnetV2IpConfigIpv4IpSubnetIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetIpArrayOutput) ToSubnetV2IpConfigIpv4IpSubnetIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4IpSubnetIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4IpSubnetIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4IpSubnetIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4IpSubnetIp {
		return vs[0].([]SubnetV2IpConfigIpv4IpSubnetIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4IpSubnetIpOutput)
}

type SubnetV2IpConfigIpv4PoolList struct {
	EndIps   []SubnetV2IpConfigIpv4PoolListEndIp   `pulumi:"endIps"`
	StartIps []SubnetV2IpConfigIpv4PoolListStartIp `pulumi:"startIps"`
}

// SubnetV2IpConfigIpv4PoolListInput is an input type that accepts SubnetV2IpConfigIpv4PoolListArgs and SubnetV2IpConfigIpv4PoolListOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListInput` via:
//
//	SubnetV2IpConfigIpv4PoolListArgs{...}
type SubnetV2IpConfigIpv4PoolListInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListOutput() SubnetV2IpConfigIpv4PoolListOutput
	ToSubnetV2IpConfigIpv4PoolListOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListOutput
}

type SubnetV2IpConfigIpv4PoolListArgs struct {
	EndIps   SubnetV2IpConfigIpv4PoolListEndIpArrayInput   `pulumi:"endIps"`
	StartIps SubnetV2IpConfigIpv4PoolListStartIpArrayInput `pulumi:"startIps"`
}

func (SubnetV2IpConfigIpv4PoolListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolList)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListArgs) ToSubnetV2IpConfigIpv4PoolListOutput() SubnetV2IpConfigIpv4PoolListOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListArgs) ToSubnetV2IpConfigIpv4PoolListOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListOutput)
}

// SubnetV2IpConfigIpv4PoolListArrayInput is an input type that accepts SubnetV2IpConfigIpv4PoolListArray and SubnetV2IpConfigIpv4PoolListArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListArrayInput` via:
//
//	SubnetV2IpConfigIpv4PoolListArray{ SubnetV2IpConfigIpv4PoolListArgs{...} }
type SubnetV2IpConfigIpv4PoolListArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListArrayOutput() SubnetV2IpConfigIpv4PoolListArrayOutput
	ToSubnetV2IpConfigIpv4PoolListArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListArrayOutput
}

type SubnetV2IpConfigIpv4PoolListArray []SubnetV2IpConfigIpv4PoolListInput

func (SubnetV2IpConfigIpv4PoolListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolList)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListArray) ToSubnetV2IpConfigIpv4PoolListArrayOutput() SubnetV2IpConfigIpv4PoolListArrayOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListArray) ToSubnetV2IpConfigIpv4PoolListArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListArrayOutput)
}

type SubnetV2IpConfigIpv4PoolListOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolList)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListOutput) ToSubnetV2IpConfigIpv4PoolListOutput() SubnetV2IpConfigIpv4PoolListOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListOutput) ToSubnetV2IpConfigIpv4PoolListOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListOutput) EndIps() SubnetV2IpConfigIpv4PoolListEndIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolList) []SubnetV2IpConfigIpv4PoolListEndIp { return v.EndIps }).(SubnetV2IpConfigIpv4PoolListEndIpArrayOutput)
}

func (o SubnetV2IpConfigIpv4PoolListOutput) StartIps() SubnetV2IpConfigIpv4PoolListStartIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolList) []SubnetV2IpConfigIpv4PoolListStartIp { return v.StartIps }).(SubnetV2IpConfigIpv4PoolListStartIpArrayOutput)
}

type SubnetV2IpConfigIpv4PoolListArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolList)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListArrayOutput) ToSubnetV2IpConfigIpv4PoolListArrayOutput() SubnetV2IpConfigIpv4PoolListArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListArrayOutput) ToSubnetV2IpConfigIpv4PoolListArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4PoolListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4PoolList {
		return vs[0].([]SubnetV2IpConfigIpv4PoolList)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4PoolListOutput)
}

type SubnetV2IpConfigIpv4PoolListEndIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv4PoolListEndIpInput is an input type that accepts SubnetV2IpConfigIpv4PoolListEndIpArgs and SubnetV2IpConfigIpv4PoolListEndIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListEndIpInput` via:
//
//	SubnetV2IpConfigIpv4PoolListEndIpArgs{...}
type SubnetV2IpConfigIpv4PoolListEndIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListEndIpOutput() SubnetV2IpConfigIpv4PoolListEndIpOutput
	ToSubnetV2IpConfigIpv4PoolListEndIpOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListEndIpOutput
}

type SubnetV2IpConfigIpv4PoolListEndIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv4PoolListEndIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListEndIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListEndIpArgs) ToSubnetV2IpConfigIpv4PoolListEndIpOutput() SubnetV2IpConfigIpv4PoolListEndIpOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListEndIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListEndIpArgs) ToSubnetV2IpConfigIpv4PoolListEndIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListEndIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListEndIpOutput)
}

// SubnetV2IpConfigIpv4PoolListEndIpArrayInput is an input type that accepts SubnetV2IpConfigIpv4PoolListEndIpArray and SubnetV2IpConfigIpv4PoolListEndIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListEndIpArrayInput` via:
//
//	SubnetV2IpConfigIpv4PoolListEndIpArray{ SubnetV2IpConfigIpv4PoolListEndIpArgs{...} }
type SubnetV2IpConfigIpv4PoolListEndIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutput() SubnetV2IpConfigIpv4PoolListEndIpArrayOutput
	ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListEndIpArrayOutput
}

type SubnetV2IpConfigIpv4PoolListEndIpArray []SubnetV2IpConfigIpv4PoolListEndIpInput

func (SubnetV2IpConfigIpv4PoolListEndIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolListEndIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListEndIpArray) ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutput() SubnetV2IpConfigIpv4PoolListEndIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListEndIpArray) ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListEndIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListEndIpArrayOutput)
}

type SubnetV2IpConfigIpv4PoolListEndIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListEndIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListEndIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListEndIpOutput) ToSubnetV2IpConfigIpv4PoolListEndIpOutput() SubnetV2IpConfigIpv4PoolListEndIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListEndIpOutput) ToSubnetV2IpConfigIpv4PoolListEndIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListEndIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListEndIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolListEndIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv4PoolListEndIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolListEndIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv4PoolListEndIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListEndIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolListEndIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListEndIpArrayOutput) ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutput() SubnetV2IpConfigIpv4PoolListEndIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListEndIpArrayOutput) ToSubnetV2IpConfigIpv4PoolListEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListEndIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListEndIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4PoolListEndIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4PoolListEndIp {
		return vs[0].([]SubnetV2IpConfigIpv4PoolListEndIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4PoolListEndIpOutput)
}

type SubnetV2IpConfigIpv4PoolListStartIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv4PoolListStartIpInput is an input type that accepts SubnetV2IpConfigIpv4PoolListStartIpArgs and SubnetV2IpConfigIpv4PoolListStartIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListStartIpInput` via:
//
//	SubnetV2IpConfigIpv4PoolListStartIpArgs{...}
type SubnetV2IpConfigIpv4PoolListStartIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListStartIpOutput() SubnetV2IpConfigIpv4PoolListStartIpOutput
	ToSubnetV2IpConfigIpv4PoolListStartIpOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListStartIpOutput
}

type SubnetV2IpConfigIpv4PoolListStartIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv4PoolListStartIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListStartIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListStartIpArgs) ToSubnetV2IpConfigIpv4PoolListStartIpOutput() SubnetV2IpConfigIpv4PoolListStartIpOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListStartIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListStartIpArgs) ToSubnetV2IpConfigIpv4PoolListStartIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListStartIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListStartIpOutput)
}

// SubnetV2IpConfigIpv4PoolListStartIpArrayInput is an input type that accepts SubnetV2IpConfigIpv4PoolListStartIpArray and SubnetV2IpConfigIpv4PoolListStartIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv4PoolListStartIpArrayInput` via:
//
//	SubnetV2IpConfigIpv4PoolListStartIpArray{ SubnetV2IpConfigIpv4PoolListStartIpArgs{...} }
type SubnetV2IpConfigIpv4PoolListStartIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutput() SubnetV2IpConfigIpv4PoolListStartIpArrayOutput
	ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv4PoolListStartIpArrayOutput
}

type SubnetV2IpConfigIpv4PoolListStartIpArray []SubnetV2IpConfigIpv4PoolListStartIpInput

func (SubnetV2IpConfigIpv4PoolListStartIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolListStartIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv4PoolListStartIpArray) ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutput() SubnetV2IpConfigIpv4PoolListStartIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv4PoolListStartIpArray) ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListStartIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv4PoolListStartIpArrayOutput)
}

type SubnetV2IpConfigIpv4PoolListStartIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListStartIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListStartIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListStartIpOutput) ToSubnetV2IpConfigIpv4PoolListStartIpOutput() SubnetV2IpConfigIpv4PoolListStartIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListStartIpOutput) ToSubnetV2IpConfigIpv4PoolListStartIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListStartIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListStartIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolListStartIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv4PoolListStartIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv4PoolListStartIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv4PoolListStartIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv4PoolListStartIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv4PoolListStartIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv4PoolListStartIpArrayOutput) ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutput() SubnetV2IpConfigIpv4PoolListStartIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListStartIpArrayOutput) ToSubnetV2IpConfigIpv4PoolListStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv4PoolListStartIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv4PoolListStartIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv4PoolListStartIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv4PoolListStartIp {
		return vs[0].([]SubnetV2IpConfigIpv4PoolListStartIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv4PoolListStartIpOutput)
}

type SubnetV2IpConfigIpv6 struct {
	DefaultGatewayIps   []SubnetV2IpConfigIpv6DefaultGatewayIp  `pulumi:"defaultGatewayIps"`
	DhcpServerAddresses []SubnetV2IpConfigIpv6DhcpServerAddress `pulumi:"dhcpServerAddresses"`
	IpSubnets           []SubnetV2IpConfigIpv6IpSubnet          `pulumi:"ipSubnets"`
	PoolLists           []SubnetV2IpConfigIpv6PoolList          `pulumi:"poolLists"`
}

// SubnetV2IpConfigIpv6Input is an input type that accepts SubnetV2IpConfigIpv6Args and SubnetV2IpConfigIpv6Output values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6Input` via:
//
//	SubnetV2IpConfigIpv6Args{...}
type SubnetV2IpConfigIpv6Input interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6Output() SubnetV2IpConfigIpv6Output
	ToSubnetV2IpConfigIpv6OutputWithContext(context.Context) SubnetV2IpConfigIpv6Output
}

type SubnetV2IpConfigIpv6Args struct {
	DefaultGatewayIps   SubnetV2IpConfigIpv6DefaultGatewayIpArrayInput  `pulumi:"defaultGatewayIps"`
	DhcpServerAddresses SubnetV2IpConfigIpv6DhcpServerAddressArrayInput `pulumi:"dhcpServerAddresses"`
	IpSubnets           SubnetV2IpConfigIpv6IpSubnetArrayInput          `pulumi:"ipSubnets"`
	PoolLists           SubnetV2IpConfigIpv6PoolListArrayInput          `pulumi:"poolLists"`
}

func (SubnetV2IpConfigIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6Args) ToSubnetV2IpConfigIpv6Output() SubnetV2IpConfigIpv6Output {
	return i.ToSubnetV2IpConfigIpv6OutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6Args) ToSubnetV2IpConfigIpv6OutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6Output)
}

// SubnetV2IpConfigIpv6ArrayInput is an input type that accepts SubnetV2IpConfigIpv6Array and SubnetV2IpConfigIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6ArrayInput` via:
//
//	SubnetV2IpConfigIpv6Array{ SubnetV2IpConfigIpv6Args{...} }
type SubnetV2IpConfigIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6ArrayOutput() SubnetV2IpConfigIpv6ArrayOutput
	ToSubnetV2IpConfigIpv6ArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6ArrayOutput
}

type SubnetV2IpConfigIpv6Array []SubnetV2IpConfigIpv6Input

func (SubnetV2IpConfigIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6Array) ToSubnetV2IpConfigIpv6ArrayOutput() SubnetV2IpConfigIpv6ArrayOutput {
	return i.ToSubnetV2IpConfigIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6Array) ToSubnetV2IpConfigIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6ArrayOutput)
}

type SubnetV2IpConfigIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6Output) ToSubnetV2IpConfigIpv6Output() SubnetV2IpConfigIpv6Output {
	return o
}

func (o SubnetV2IpConfigIpv6Output) ToSubnetV2IpConfigIpv6OutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6Output {
	return o
}

func (o SubnetV2IpConfigIpv6Output) DefaultGatewayIps() SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6) []SubnetV2IpConfigIpv6DefaultGatewayIp { return v.DefaultGatewayIps }).(SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput)
}

func (o SubnetV2IpConfigIpv6Output) DhcpServerAddresses() SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6) []SubnetV2IpConfigIpv6DhcpServerAddress { return v.DhcpServerAddresses }).(SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput)
}

func (o SubnetV2IpConfigIpv6Output) IpSubnets() SubnetV2IpConfigIpv6IpSubnetArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6) []SubnetV2IpConfigIpv6IpSubnet { return v.IpSubnets }).(SubnetV2IpConfigIpv6IpSubnetArrayOutput)
}

func (o SubnetV2IpConfigIpv6Output) PoolLists() SubnetV2IpConfigIpv6PoolListArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6) []SubnetV2IpConfigIpv6PoolList { return v.PoolLists }).(SubnetV2IpConfigIpv6PoolListArrayOutput)
}

type SubnetV2IpConfigIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6ArrayOutput) ToSubnetV2IpConfigIpv6ArrayOutput() SubnetV2IpConfigIpv6ArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6ArrayOutput) ToSubnetV2IpConfigIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6ArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6 {
		return vs[0].([]SubnetV2IpConfigIpv6)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6Output)
}

type SubnetV2IpConfigIpv6DefaultGatewayIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv6DefaultGatewayIpInput is an input type that accepts SubnetV2IpConfigIpv6DefaultGatewayIpArgs and SubnetV2IpConfigIpv6DefaultGatewayIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6DefaultGatewayIpInput` via:
//
//	SubnetV2IpConfigIpv6DefaultGatewayIpArgs{...}
type SubnetV2IpConfigIpv6DefaultGatewayIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6DefaultGatewayIpOutput() SubnetV2IpConfigIpv6DefaultGatewayIpOutput
	ToSubnetV2IpConfigIpv6DefaultGatewayIpOutputWithContext(context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpOutput
}

type SubnetV2IpConfigIpv6DefaultGatewayIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv6DefaultGatewayIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6DefaultGatewayIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6DefaultGatewayIpArgs) ToSubnetV2IpConfigIpv6DefaultGatewayIpOutput() SubnetV2IpConfigIpv6DefaultGatewayIpOutput {
	return i.ToSubnetV2IpConfigIpv6DefaultGatewayIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6DefaultGatewayIpArgs) ToSubnetV2IpConfigIpv6DefaultGatewayIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6DefaultGatewayIpOutput)
}

// SubnetV2IpConfigIpv6DefaultGatewayIpArrayInput is an input type that accepts SubnetV2IpConfigIpv6DefaultGatewayIpArray and SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6DefaultGatewayIpArrayInput` via:
//
//	SubnetV2IpConfigIpv6DefaultGatewayIpArray{ SubnetV2IpConfigIpv6DefaultGatewayIpArgs{...} }
type SubnetV2IpConfigIpv6DefaultGatewayIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput
	ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput
}

type SubnetV2IpConfigIpv6DefaultGatewayIpArray []SubnetV2IpConfigIpv6DefaultGatewayIpInput

func (SubnetV2IpConfigIpv6DefaultGatewayIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6DefaultGatewayIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6DefaultGatewayIpArray) ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6DefaultGatewayIpArray) ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput)
}

type SubnetV2IpConfigIpv6DefaultGatewayIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6DefaultGatewayIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6DefaultGatewayIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpOutput) ToSubnetV2IpConfigIpv6DefaultGatewayIpOutput() SubnetV2IpConfigIpv6DefaultGatewayIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpOutput) ToSubnetV2IpConfigIpv6DefaultGatewayIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6DefaultGatewayIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6DefaultGatewayIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6DefaultGatewayIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput) ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput() SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput) ToSubnetV2IpConfigIpv6DefaultGatewayIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6DefaultGatewayIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6DefaultGatewayIp {
		return vs[0].([]SubnetV2IpConfigIpv6DefaultGatewayIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6DefaultGatewayIpOutput)
}

type SubnetV2IpConfigIpv6DhcpServerAddress struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv6DhcpServerAddressInput is an input type that accepts SubnetV2IpConfigIpv6DhcpServerAddressArgs and SubnetV2IpConfigIpv6DhcpServerAddressOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6DhcpServerAddressInput` via:
//
//	SubnetV2IpConfigIpv6DhcpServerAddressArgs{...}
type SubnetV2IpConfigIpv6DhcpServerAddressInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6DhcpServerAddressOutput() SubnetV2IpConfigIpv6DhcpServerAddressOutput
	ToSubnetV2IpConfigIpv6DhcpServerAddressOutputWithContext(context.Context) SubnetV2IpConfigIpv6DhcpServerAddressOutput
}

type SubnetV2IpConfigIpv6DhcpServerAddressArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv6DhcpServerAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6DhcpServerAddress)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6DhcpServerAddressArgs) ToSubnetV2IpConfigIpv6DhcpServerAddressOutput() SubnetV2IpConfigIpv6DhcpServerAddressOutput {
	return i.ToSubnetV2IpConfigIpv6DhcpServerAddressOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6DhcpServerAddressArgs) ToSubnetV2IpConfigIpv6DhcpServerAddressOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DhcpServerAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6DhcpServerAddressOutput)
}

// SubnetV2IpConfigIpv6DhcpServerAddressArrayInput is an input type that accepts SubnetV2IpConfigIpv6DhcpServerAddressArray and SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6DhcpServerAddressArrayInput` via:
//
//	SubnetV2IpConfigIpv6DhcpServerAddressArray{ SubnetV2IpConfigIpv6DhcpServerAddressArgs{...} }
type SubnetV2IpConfigIpv6DhcpServerAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput
	ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput
}

type SubnetV2IpConfigIpv6DhcpServerAddressArray []SubnetV2IpConfigIpv6DhcpServerAddressInput

func (SubnetV2IpConfigIpv6DhcpServerAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6DhcpServerAddress)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6DhcpServerAddressArray) ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput {
	return i.ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6DhcpServerAddressArray) ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput)
}

type SubnetV2IpConfigIpv6DhcpServerAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6DhcpServerAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6DhcpServerAddress)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressOutput) ToSubnetV2IpConfigIpv6DhcpServerAddressOutput() SubnetV2IpConfigIpv6DhcpServerAddressOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressOutput) ToSubnetV2IpConfigIpv6DhcpServerAddressOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DhcpServerAddressOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6DhcpServerAddress) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6DhcpServerAddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6DhcpServerAddress)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput) ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutput() SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput) ToSubnetV2IpConfigIpv6DhcpServerAddressArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6DhcpServerAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6DhcpServerAddress {
		return vs[0].([]SubnetV2IpConfigIpv6DhcpServerAddress)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6DhcpServerAddressOutput)
}

type SubnetV2IpConfigIpv6IpSubnet struct {
	Ips          []SubnetV2IpConfigIpv6IpSubnetIp `pulumi:"ips"`
	PrefixLength *int                             `pulumi:"prefixLength"`
}

// SubnetV2IpConfigIpv6IpSubnetInput is an input type that accepts SubnetV2IpConfigIpv6IpSubnetArgs and SubnetV2IpConfigIpv6IpSubnetOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6IpSubnetInput` via:
//
//	SubnetV2IpConfigIpv6IpSubnetArgs{...}
type SubnetV2IpConfigIpv6IpSubnetInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6IpSubnetOutput() SubnetV2IpConfigIpv6IpSubnetOutput
	ToSubnetV2IpConfigIpv6IpSubnetOutputWithContext(context.Context) SubnetV2IpConfigIpv6IpSubnetOutput
}

type SubnetV2IpConfigIpv6IpSubnetArgs struct {
	Ips          SubnetV2IpConfigIpv6IpSubnetIpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                       `pulumi:"prefixLength"`
}

func (SubnetV2IpConfigIpv6IpSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnet)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6IpSubnetArgs) ToSubnetV2IpConfigIpv6IpSubnetOutput() SubnetV2IpConfigIpv6IpSubnetOutput {
	return i.ToSubnetV2IpConfigIpv6IpSubnetOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6IpSubnetArgs) ToSubnetV2IpConfigIpv6IpSubnetOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6IpSubnetOutput)
}

// SubnetV2IpConfigIpv6IpSubnetArrayInput is an input type that accepts SubnetV2IpConfigIpv6IpSubnetArray and SubnetV2IpConfigIpv6IpSubnetArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6IpSubnetArrayInput` via:
//
//	SubnetV2IpConfigIpv6IpSubnetArray{ SubnetV2IpConfigIpv6IpSubnetArgs{...} }
type SubnetV2IpConfigIpv6IpSubnetArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6IpSubnetArrayOutput() SubnetV2IpConfigIpv6IpSubnetArrayOutput
	ToSubnetV2IpConfigIpv6IpSubnetArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6IpSubnetArrayOutput
}

type SubnetV2IpConfigIpv6IpSubnetArray []SubnetV2IpConfigIpv6IpSubnetInput

func (SubnetV2IpConfigIpv6IpSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6IpSubnet)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6IpSubnetArray) ToSubnetV2IpConfigIpv6IpSubnetArrayOutput() SubnetV2IpConfigIpv6IpSubnetArrayOutput {
	return i.ToSubnetV2IpConfigIpv6IpSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6IpSubnetArray) ToSubnetV2IpConfigIpv6IpSubnetArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6IpSubnetArrayOutput)
}

type SubnetV2IpConfigIpv6IpSubnetOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6IpSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnet)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6IpSubnetOutput) ToSubnetV2IpConfigIpv6IpSubnetOutput() SubnetV2IpConfigIpv6IpSubnetOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetOutput) ToSubnetV2IpConfigIpv6IpSubnetOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetOutput) Ips() SubnetV2IpConfigIpv6IpSubnetIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6IpSubnet) []SubnetV2IpConfigIpv6IpSubnetIp { return v.Ips }).(SubnetV2IpConfigIpv6IpSubnetIpArrayOutput)
}

func (o SubnetV2IpConfigIpv6IpSubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6IpSubnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type SubnetV2IpConfigIpv6IpSubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6IpSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6IpSubnet)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6IpSubnetArrayOutput) ToSubnetV2IpConfigIpv6IpSubnetArrayOutput() SubnetV2IpConfigIpv6IpSubnetArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetArrayOutput) ToSubnetV2IpConfigIpv6IpSubnetArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6IpSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6IpSubnet {
		return vs[0].([]SubnetV2IpConfigIpv6IpSubnet)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6IpSubnetOutput)
}

type SubnetV2IpConfigIpv6IpSubnetIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv6IpSubnetIpInput is an input type that accepts SubnetV2IpConfigIpv6IpSubnetIpArgs and SubnetV2IpConfigIpv6IpSubnetIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6IpSubnetIpInput` via:
//
//	SubnetV2IpConfigIpv6IpSubnetIpArgs{...}
type SubnetV2IpConfigIpv6IpSubnetIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6IpSubnetIpOutput() SubnetV2IpConfigIpv6IpSubnetIpOutput
	ToSubnetV2IpConfigIpv6IpSubnetIpOutputWithContext(context.Context) SubnetV2IpConfigIpv6IpSubnetIpOutput
}

type SubnetV2IpConfigIpv6IpSubnetIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv6IpSubnetIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6IpSubnetIpArgs) ToSubnetV2IpConfigIpv6IpSubnetIpOutput() SubnetV2IpConfigIpv6IpSubnetIpOutput {
	return i.ToSubnetV2IpConfigIpv6IpSubnetIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6IpSubnetIpArgs) ToSubnetV2IpConfigIpv6IpSubnetIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6IpSubnetIpOutput)
}

// SubnetV2IpConfigIpv6IpSubnetIpArrayInput is an input type that accepts SubnetV2IpConfigIpv6IpSubnetIpArray and SubnetV2IpConfigIpv6IpSubnetIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6IpSubnetIpArrayInput` via:
//
//	SubnetV2IpConfigIpv6IpSubnetIpArray{ SubnetV2IpConfigIpv6IpSubnetIpArgs{...} }
type SubnetV2IpConfigIpv6IpSubnetIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutput() SubnetV2IpConfigIpv6IpSubnetIpArrayOutput
	ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6IpSubnetIpArrayOutput
}

type SubnetV2IpConfigIpv6IpSubnetIpArray []SubnetV2IpConfigIpv6IpSubnetIpInput

func (SubnetV2IpConfigIpv6IpSubnetIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6IpSubnetIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6IpSubnetIpArray) ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutput() SubnetV2IpConfigIpv6IpSubnetIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6IpSubnetIpArray) ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6IpSubnetIpArrayOutput)
}

type SubnetV2IpConfigIpv6IpSubnetIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6IpSubnetIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6IpSubnetIpOutput) ToSubnetV2IpConfigIpv6IpSubnetIpOutput() SubnetV2IpConfigIpv6IpSubnetIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetIpOutput) ToSubnetV2IpConfigIpv6IpSubnetIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6IpSubnetIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv6IpSubnetIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6IpSubnetIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv6IpSubnetIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6IpSubnetIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6IpSubnetIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6IpSubnetIpArrayOutput) ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutput() SubnetV2IpConfigIpv6IpSubnetIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetIpArrayOutput) ToSubnetV2IpConfigIpv6IpSubnetIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6IpSubnetIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6IpSubnetIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6IpSubnetIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6IpSubnetIp {
		return vs[0].([]SubnetV2IpConfigIpv6IpSubnetIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6IpSubnetIpOutput)
}

type SubnetV2IpConfigIpv6PoolList struct {
	EndIps   []SubnetV2IpConfigIpv6PoolListEndIp   `pulumi:"endIps"`
	StartIps []SubnetV2IpConfigIpv6PoolListStartIp `pulumi:"startIps"`
}

// SubnetV2IpConfigIpv6PoolListInput is an input type that accepts SubnetV2IpConfigIpv6PoolListArgs and SubnetV2IpConfigIpv6PoolListOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListInput` via:
//
//	SubnetV2IpConfigIpv6PoolListArgs{...}
type SubnetV2IpConfigIpv6PoolListInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListOutput() SubnetV2IpConfigIpv6PoolListOutput
	ToSubnetV2IpConfigIpv6PoolListOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListOutput
}

type SubnetV2IpConfigIpv6PoolListArgs struct {
	EndIps   SubnetV2IpConfigIpv6PoolListEndIpArrayInput   `pulumi:"endIps"`
	StartIps SubnetV2IpConfigIpv6PoolListStartIpArrayInput `pulumi:"startIps"`
}

func (SubnetV2IpConfigIpv6PoolListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolList)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListArgs) ToSubnetV2IpConfigIpv6PoolListOutput() SubnetV2IpConfigIpv6PoolListOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListArgs) ToSubnetV2IpConfigIpv6PoolListOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListOutput)
}

// SubnetV2IpConfigIpv6PoolListArrayInput is an input type that accepts SubnetV2IpConfigIpv6PoolListArray and SubnetV2IpConfigIpv6PoolListArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListArrayInput` via:
//
//	SubnetV2IpConfigIpv6PoolListArray{ SubnetV2IpConfigIpv6PoolListArgs{...} }
type SubnetV2IpConfigIpv6PoolListArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListArrayOutput() SubnetV2IpConfigIpv6PoolListArrayOutput
	ToSubnetV2IpConfigIpv6PoolListArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListArrayOutput
}

type SubnetV2IpConfigIpv6PoolListArray []SubnetV2IpConfigIpv6PoolListInput

func (SubnetV2IpConfigIpv6PoolListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolList)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListArray) ToSubnetV2IpConfigIpv6PoolListArrayOutput() SubnetV2IpConfigIpv6PoolListArrayOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListArray) ToSubnetV2IpConfigIpv6PoolListArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListArrayOutput)
}

type SubnetV2IpConfigIpv6PoolListOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolList)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListOutput) ToSubnetV2IpConfigIpv6PoolListOutput() SubnetV2IpConfigIpv6PoolListOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListOutput) ToSubnetV2IpConfigIpv6PoolListOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListOutput) EndIps() SubnetV2IpConfigIpv6PoolListEndIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolList) []SubnetV2IpConfigIpv6PoolListEndIp { return v.EndIps }).(SubnetV2IpConfigIpv6PoolListEndIpArrayOutput)
}

func (o SubnetV2IpConfigIpv6PoolListOutput) StartIps() SubnetV2IpConfigIpv6PoolListStartIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolList) []SubnetV2IpConfigIpv6PoolListStartIp { return v.StartIps }).(SubnetV2IpConfigIpv6PoolListStartIpArrayOutput)
}

type SubnetV2IpConfigIpv6PoolListArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolList)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListArrayOutput) ToSubnetV2IpConfigIpv6PoolListArrayOutput() SubnetV2IpConfigIpv6PoolListArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListArrayOutput) ToSubnetV2IpConfigIpv6PoolListArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6PoolListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6PoolList {
		return vs[0].([]SubnetV2IpConfigIpv6PoolList)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6PoolListOutput)
}

type SubnetV2IpConfigIpv6PoolListEndIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv6PoolListEndIpInput is an input type that accepts SubnetV2IpConfigIpv6PoolListEndIpArgs and SubnetV2IpConfigIpv6PoolListEndIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListEndIpInput` via:
//
//	SubnetV2IpConfigIpv6PoolListEndIpArgs{...}
type SubnetV2IpConfigIpv6PoolListEndIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListEndIpOutput() SubnetV2IpConfigIpv6PoolListEndIpOutput
	ToSubnetV2IpConfigIpv6PoolListEndIpOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListEndIpOutput
}

type SubnetV2IpConfigIpv6PoolListEndIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv6PoolListEndIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListEndIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListEndIpArgs) ToSubnetV2IpConfigIpv6PoolListEndIpOutput() SubnetV2IpConfigIpv6PoolListEndIpOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListEndIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListEndIpArgs) ToSubnetV2IpConfigIpv6PoolListEndIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListEndIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListEndIpOutput)
}

// SubnetV2IpConfigIpv6PoolListEndIpArrayInput is an input type that accepts SubnetV2IpConfigIpv6PoolListEndIpArray and SubnetV2IpConfigIpv6PoolListEndIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListEndIpArrayInput` via:
//
//	SubnetV2IpConfigIpv6PoolListEndIpArray{ SubnetV2IpConfigIpv6PoolListEndIpArgs{...} }
type SubnetV2IpConfigIpv6PoolListEndIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutput() SubnetV2IpConfigIpv6PoolListEndIpArrayOutput
	ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListEndIpArrayOutput
}

type SubnetV2IpConfigIpv6PoolListEndIpArray []SubnetV2IpConfigIpv6PoolListEndIpInput

func (SubnetV2IpConfigIpv6PoolListEndIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolListEndIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListEndIpArray) ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutput() SubnetV2IpConfigIpv6PoolListEndIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListEndIpArray) ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListEndIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListEndIpArrayOutput)
}

type SubnetV2IpConfigIpv6PoolListEndIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListEndIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListEndIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListEndIpOutput) ToSubnetV2IpConfigIpv6PoolListEndIpOutput() SubnetV2IpConfigIpv6PoolListEndIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListEndIpOutput) ToSubnetV2IpConfigIpv6PoolListEndIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListEndIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListEndIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolListEndIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv6PoolListEndIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolListEndIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv6PoolListEndIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListEndIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolListEndIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListEndIpArrayOutput) ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutput() SubnetV2IpConfigIpv6PoolListEndIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListEndIpArrayOutput) ToSubnetV2IpConfigIpv6PoolListEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListEndIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListEndIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6PoolListEndIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6PoolListEndIp {
		return vs[0].([]SubnetV2IpConfigIpv6PoolListEndIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6PoolListEndIpOutput)
}

type SubnetV2IpConfigIpv6PoolListStartIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpConfigIpv6PoolListStartIpInput is an input type that accepts SubnetV2IpConfigIpv6PoolListStartIpArgs and SubnetV2IpConfigIpv6PoolListStartIpOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListStartIpInput` via:
//
//	SubnetV2IpConfigIpv6PoolListStartIpArgs{...}
type SubnetV2IpConfigIpv6PoolListStartIpInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListStartIpOutput() SubnetV2IpConfigIpv6PoolListStartIpOutput
	ToSubnetV2IpConfigIpv6PoolListStartIpOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListStartIpOutput
}

type SubnetV2IpConfigIpv6PoolListStartIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpConfigIpv6PoolListStartIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListStartIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListStartIpArgs) ToSubnetV2IpConfigIpv6PoolListStartIpOutput() SubnetV2IpConfigIpv6PoolListStartIpOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListStartIpOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListStartIpArgs) ToSubnetV2IpConfigIpv6PoolListStartIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListStartIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListStartIpOutput)
}

// SubnetV2IpConfigIpv6PoolListStartIpArrayInput is an input type that accepts SubnetV2IpConfigIpv6PoolListStartIpArray and SubnetV2IpConfigIpv6PoolListStartIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpConfigIpv6PoolListStartIpArrayInput` via:
//
//	SubnetV2IpConfigIpv6PoolListStartIpArray{ SubnetV2IpConfigIpv6PoolListStartIpArgs{...} }
type SubnetV2IpConfigIpv6PoolListStartIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutput() SubnetV2IpConfigIpv6PoolListStartIpArrayOutput
	ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutputWithContext(context.Context) SubnetV2IpConfigIpv6PoolListStartIpArrayOutput
}

type SubnetV2IpConfigIpv6PoolListStartIpArray []SubnetV2IpConfigIpv6PoolListStartIpInput

func (SubnetV2IpConfigIpv6PoolListStartIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolListStartIp)(nil)).Elem()
}

func (i SubnetV2IpConfigIpv6PoolListStartIpArray) ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutput() SubnetV2IpConfigIpv6PoolListStartIpArrayOutput {
	return i.ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpConfigIpv6PoolListStartIpArray) ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListStartIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpConfigIpv6PoolListStartIpArrayOutput)
}

type SubnetV2IpConfigIpv6PoolListStartIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListStartIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListStartIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListStartIpOutput) ToSubnetV2IpConfigIpv6PoolListStartIpOutput() SubnetV2IpConfigIpv6PoolListStartIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListStartIpOutput) ToSubnetV2IpConfigIpv6PoolListStartIpOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListStartIpOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListStartIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolListStartIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpConfigIpv6PoolListStartIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpConfigIpv6PoolListStartIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpConfigIpv6PoolListStartIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpConfigIpv6PoolListStartIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpConfigIpv6PoolListStartIp)(nil)).Elem()
}

func (o SubnetV2IpConfigIpv6PoolListStartIpArrayOutput) ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutput() SubnetV2IpConfigIpv6PoolListStartIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListStartIpArrayOutput) ToSubnetV2IpConfigIpv6PoolListStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpConfigIpv6PoolListStartIpArrayOutput {
	return o
}

func (o SubnetV2IpConfigIpv6PoolListStartIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpConfigIpv6PoolListStartIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpConfigIpv6PoolListStartIp {
		return vs[0].([]SubnetV2IpConfigIpv6PoolListStartIp)[vs[1].(int)]
	}).(SubnetV2IpConfigIpv6PoolListStartIpOutput)
}

type SubnetV2IpUsage struct {
	IpPoolUsages   []SubnetV2IpUsageIpPoolUsage `pulumi:"ipPoolUsages"`
	NumAssignedIps *int                         `pulumi:"numAssignedIps"`
	NumFreeIps     *int                         `pulumi:"numFreeIps"`
	NumMacs        *int                         `pulumi:"numMacs"`
}

// SubnetV2IpUsageInput is an input type that accepts SubnetV2IpUsageArgs and SubnetV2IpUsageOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageInput` via:
//
//	SubnetV2IpUsageArgs{...}
type SubnetV2IpUsageInput interface {
	pulumi.Input

	ToSubnetV2IpUsageOutput() SubnetV2IpUsageOutput
	ToSubnetV2IpUsageOutputWithContext(context.Context) SubnetV2IpUsageOutput
}

type SubnetV2IpUsageArgs struct {
	IpPoolUsages   SubnetV2IpUsageIpPoolUsageArrayInput `pulumi:"ipPoolUsages"`
	NumAssignedIps pulumi.IntPtrInput                   `pulumi:"numAssignedIps"`
	NumFreeIps     pulumi.IntPtrInput                   `pulumi:"numFreeIps"`
	NumMacs        pulumi.IntPtrInput                   `pulumi:"numMacs"`
}

func (SubnetV2IpUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsage)(nil)).Elem()
}

func (i SubnetV2IpUsageArgs) ToSubnetV2IpUsageOutput() SubnetV2IpUsageOutput {
	return i.ToSubnetV2IpUsageOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageArgs) ToSubnetV2IpUsageOutputWithContext(ctx context.Context) SubnetV2IpUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageOutput)
}

// SubnetV2IpUsageArrayInput is an input type that accepts SubnetV2IpUsageArray and SubnetV2IpUsageArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageArrayInput` via:
//
//	SubnetV2IpUsageArray{ SubnetV2IpUsageArgs{...} }
type SubnetV2IpUsageArrayInput interface {
	pulumi.Input

	ToSubnetV2IpUsageArrayOutput() SubnetV2IpUsageArrayOutput
	ToSubnetV2IpUsageArrayOutputWithContext(context.Context) SubnetV2IpUsageArrayOutput
}

type SubnetV2IpUsageArray []SubnetV2IpUsageInput

func (SubnetV2IpUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsage)(nil)).Elem()
}

func (i SubnetV2IpUsageArray) ToSubnetV2IpUsageArrayOutput() SubnetV2IpUsageArrayOutput {
	return i.ToSubnetV2IpUsageArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageArray) ToSubnetV2IpUsageArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageArrayOutput)
}

type SubnetV2IpUsageOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsage)(nil)).Elem()
}

func (o SubnetV2IpUsageOutput) ToSubnetV2IpUsageOutput() SubnetV2IpUsageOutput {
	return o
}

func (o SubnetV2IpUsageOutput) ToSubnetV2IpUsageOutputWithContext(ctx context.Context) SubnetV2IpUsageOutput {
	return o
}

func (o SubnetV2IpUsageOutput) IpPoolUsages() SubnetV2IpUsageIpPoolUsageArrayOutput {
	return o.ApplyT(func(v SubnetV2IpUsage) []SubnetV2IpUsageIpPoolUsage { return v.IpPoolUsages }).(SubnetV2IpUsageIpPoolUsageArrayOutput)
}

func (o SubnetV2IpUsageOutput) NumAssignedIps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsage) *int { return v.NumAssignedIps }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageOutput) NumFreeIps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsage) *int { return v.NumFreeIps }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageOutput) NumMacs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsage) *int { return v.NumMacs }).(pulumi.IntPtrOutput)
}

type SubnetV2IpUsageArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsage)(nil)).Elem()
}

func (o SubnetV2IpUsageArrayOutput) ToSubnetV2IpUsageArrayOutput() SubnetV2IpUsageArrayOutput {
	return o
}

func (o SubnetV2IpUsageArrayOutput) ToSubnetV2IpUsageArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageArrayOutput {
	return o
}

func (o SubnetV2IpUsageArrayOutput) Index(i pulumi.IntInput) SubnetV2IpUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpUsage {
		return vs[0].([]SubnetV2IpUsage)[vs[1].(int)]
	}).(SubnetV2IpUsageOutput)
}

type SubnetV2IpUsageIpPoolUsage struct {
	NumFreeIps  *int                              `pulumi:"numFreeIps"`
	NumTotalIps *int                              `pulumi:"numTotalIps"`
	Ranges      []SubnetV2IpUsageIpPoolUsageRange `pulumi:"ranges"`
}

// SubnetV2IpUsageIpPoolUsageInput is an input type that accepts SubnetV2IpUsageIpPoolUsageArgs and SubnetV2IpUsageIpPoolUsageOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageInput` via:
//
//	SubnetV2IpUsageIpPoolUsageArgs{...}
type SubnetV2IpUsageIpPoolUsageInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageOutput() SubnetV2IpUsageIpPoolUsageOutput
	ToSubnetV2IpUsageIpPoolUsageOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageOutput
}

type SubnetV2IpUsageIpPoolUsageArgs struct {
	NumFreeIps  pulumi.IntPtrInput                        `pulumi:"numFreeIps"`
	NumTotalIps pulumi.IntPtrInput                        `pulumi:"numTotalIps"`
	Ranges      SubnetV2IpUsageIpPoolUsageRangeArrayInput `pulumi:"ranges"`
}

func (SubnetV2IpUsageIpPoolUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsage)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageArgs) ToSubnetV2IpUsageIpPoolUsageOutput() SubnetV2IpUsageIpPoolUsageOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageArgs) ToSubnetV2IpUsageIpPoolUsageOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageOutput)
}

// SubnetV2IpUsageIpPoolUsageArrayInput is an input type that accepts SubnetV2IpUsageIpPoolUsageArray and SubnetV2IpUsageIpPoolUsageArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageArrayInput` via:
//
//	SubnetV2IpUsageIpPoolUsageArray{ SubnetV2IpUsageIpPoolUsageArgs{...} }
type SubnetV2IpUsageIpPoolUsageArrayInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageArrayOutput() SubnetV2IpUsageIpPoolUsageArrayOutput
	ToSubnetV2IpUsageIpPoolUsageArrayOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageArrayOutput
}

type SubnetV2IpUsageIpPoolUsageArray []SubnetV2IpUsageIpPoolUsageInput

func (SubnetV2IpUsageIpPoolUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsage)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageArray) ToSubnetV2IpUsageIpPoolUsageArrayOutput() SubnetV2IpUsageIpPoolUsageArrayOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageArray) ToSubnetV2IpUsageIpPoolUsageArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsage)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageOutput) ToSubnetV2IpUsageIpPoolUsageOutput() SubnetV2IpUsageIpPoolUsageOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageOutput) ToSubnetV2IpUsageIpPoolUsageOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageOutput) NumFreeIps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsage) *int { return v.NumFreeIps }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageIpPoolUsageOutput) NumTotalIps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsage) *int { return v.NumTotalIps }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageIpPoolUsageOutput) Ranges() SubnetV2IpUsageIpPoolUsageRangeArrayOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsage) []SubnetV2IpUsageIpPoolUsageRange { return v.Ranges }).(SubnetV2IpUsageIpPoolUsageRangeArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsage)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageArrayOutput) ToSubnetV2IpUsageIpPoolUsageArrayOutput() SubnetV2IpUsageIpPoolUsageArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageArrayOutput) ToSubnetV2IpUsageIpPoolUsageArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageArrayOutput) Index(i pulumi.IntInput) SubnetV2IpUsageIpPoolUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpUsageIpPoolUsage {
		return vs[0].([]SubnetV2IpUsageIpPoolUsage)[vs[1].(int)]
	}).(SubnetV2IpUsageIpPoolUsageOutput)
}

type SubnetV2IpUsageIpPoolUsageRange struct {
	EndIps   []SubnetV2IpUsageIpPoolUsageRangeEndIp   `pulumi:"endIps"`
	StartIps []SubnetV2IpUsageIpPoolUsageRangeStartIp `pulumi:"startIps"`
}

// SubnetV2IpUsageIpPoolUsageRangeInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeArgs and SubnetV2IpUsageIpPoolUsageRangeOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeArgs{...}
type SubnetV2IpUsageIpPoolUsageRangeInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeOutput() SubnetV2IpUsageIpPoolUsageRangeOutput
	ToSubnetV2IpUsageIpPoolUsageRangeOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeOutput
}

type SubnetV2IpUsageIpPoolUsageRangeArgs struct {
	EndIps   SubnetV2IpUsageIpPoolUsageRangeEndIpArrayInput   `pulumi:"endIps"`
	StartIps SubnetV2IpUsageIpPoolUsageRangeStartIpArrayInput `pulumi:"startIps"`
}

func (SubnetV2IpUsageIpPoolUsageRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRange)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeArgs) ToSubnetV2IpUsageIpPoolUsageRangeOutput() SubnetV2IpUsageIpPoolUsageRangeOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeArgs) ToSubnetV2IpUsageIpPoolUsageRangeOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeOutput)
}

// SubnetV2IpUsageIpPoolUsageRangeArrayInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeArray and SubnetV2IpUsageIpPoolUsageRangeArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeArrayInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeArray{ SubnetV2IpUsageIpPoolUsageRangeArgs{...} }
type SubnetV2IpUsageIpPoolUsageRangeArrayInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeArrayOutput() SubnetV2IpUsageIpPoolUsageRangeArrayOutput
	ToSubnetV2IpUsageIpPoolUsageRangeArrayOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeArrayOutput
}

type SubnetV2IpUsageIpPoolUsageRangeArray []SubnetV2IpUsageIpPoolUsageRangeInput

func (SubnetV2IpUsageIpPoolUsageRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRange)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeArray) ToSubnetV2IpUsageIpPoolUsageRangeArrayOutput() SubnetV2IpUsageIpPoolUsageRangeArrayOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeArray) ToSubnetV2IpUsageIpPoolUsageRangeArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRange)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeOutput) ToSubnetV2IpUsageIpPoolUsageRangeOutput() SubnetV2IpUsageIpPoolUsageRangeOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeOutput) ToSubnetV2IpUsageIpPoolUsageRangeOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeOutput) EndIps() SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRange) []SubnetV2IpUsageIpPoolUsageRangeEndIp { return v.EndIps }).(SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput)
}

func (o SubnetV2IpUsageIpPoolUsageRangeOutput) StartIps() SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRange) []SubnetV2IpUsageIpPoolUsageRangeStartIp { return v.StartIps }).(SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRange)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeArrayOutput() SubnetV2IpUsageIpPoolUsageRangeArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeArrayOutput) Index(i pulumi.IntInput) SubnetV2IpUsageIpPoolUsageRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpUsageIpPoolUsageRange {
		return vs[0].([]SubnetV2IpUsageIpPoolUsageRange)[vs[1].(int)]
	}).(SubnetV2IpUsageIpPoolUsageRangeOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeEndIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpUsageIpPoolUsageRangeEndIpInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeEndIpArgs and SubnetV2IpUsageIpPoolUsageRangeEndIpOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeEndIpInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeEndIpArgs{...}
type SubnetV2IpUsageIpPoolUsageRangeEndIpInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpOutput
	ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpOutput
}

type SubnetV2IpUsageIpPoolUsageRangeEndIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpUsageIpPoolUsageRangeEndIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeEndIp)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeEndIpArgs) ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeEndIpArgs) ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeEndIpOutput)
}

// SubnetV2IpUsageIpPoolUsageRangeEndIpArrayInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeEndIpArray and SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeEndIpArrayInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeEndIpArray{ SubnetV2IpUsageIpPoolUsageRangeEndIpArgs{...} }
type SubnetV2IpUsageIpPoolUsageRangeEndIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput
	ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput
}

type SubnetV2IpUsageIpPoolUsageRangeEndIpArray []SubnetV2IpUsageIpPoolUsageRangeEndIpInput

func (SubnetV2IpUsageIpPoolUsageRangeEndIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRangeEndIp)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeEndIpArray) ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeEndIpArray) ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeEndIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeEndIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeEndIp)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpOutput) ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpOutput) ToSubnetV2IpUsageIpPoolUsageRangeEndIpOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRangeEndIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRangeEndIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRangeEndIp)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpUsageIpPoolUsageRangeEndIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpUsageIpPoolUsageRangeEndIp {
		return vs[0].([]SubnetV2IpUsageIpPoolUsageRangeEndIp)[vs[1].(int)]
	}).(SubnetV2IpUsageIpPoolUsageRangeEndIpOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeStartIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2IpUsageIpPoolUsageRangeStartIpInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeStartIpArgs and SubnetV2IpUsageIpPoolUsageRangeStartIpOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeStartIpInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeStartIpArgs{...}
type SubnetV2IpUsageIpPoolUsageRangeStartIpInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpOutput
	ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpOutput
}

type SubnetV2IpUsageIpPoolUsageRangeStartIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2IpUsageIpPoolUsageRangeStartIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeStartIp)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeStartIpArgs) ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeStartIpArgs) ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeStartIpOutput)
}

// SubnetV2IpUsageIpPoolUsageRangeStartIpArrayInput is an input type that accepts SubnetV2IpUsageIpPoolUsageRangeStartIpArray and SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2IpUsageIpPoolUsageRangeStartIpArrayInput` via:
//
//	SubnetV2IpUsageIpPoolUsageRangeStartIpArray{ SubnetV2IpUsageIpPoolUsageRangeStartIpArgs{...} }
type SubnetV2IpUsageIpPoolUsageRangeStartIpArrayInput interface {
	pulumi.Input

	ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput
	ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutputWithContext(context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput
}

type SubnetV2IpUsageIpPoolUsageRangeStartIpArray []SubnetV2IpUsageIpPoolUsageRangeStartIpInput

func (SubnetV2IpUsageIpPoolUsageRangeStartIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRangeStartIp)(nil)).Elem()
}

func (i SubnetV2IpUsageIpPoolUsageRangeStartIpArray) ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput {
	return i.ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2IpUsageIpPoolUsageRangeStartIpArray) ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeStartIpOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeStartIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeStartIp)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpOutput) ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpOutput) ToSubnetV2IpUsageIpPoolUsageRangeStartIpOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRangeStartIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2IpUsageIpPoolUsageRangeStartIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2IpUsageIpPoolUsageRangeStartIp)(nil)).Elem()
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput() SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput) ToSubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutputWithContext(ctx context.Context) SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput {
	return o
}

func (o SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput) Index(i pulumi.IntInput) SubnetV2IpUsageIpPoolUsageRangeStartIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2IpUsageIpPoolUsageRangeStartIp {
		return vs[0].([]SubnetV2IpUsageIpPoolUsageRangeStartIp)[vs[1].(int)]
	}).(SubnetV2IpUsageIpPoolUsageRangeStartIpOutput)
}

type SubnetV2Link struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// SubnetV2LinkInput is an input type that accepts SubnetV2LinkArgs and SubnetV2LinkOutput values.
// You can construct a concrete instance of `SubnetV2LinkInput` via:
//
//	SubnetV2LinkArgs{...}
type SubnetV2LinkInput interface {
	pulumi.Input

	ToSubnetV2LinkOutput() SubnetV2LinkOutput
	ToSubnetV2LinkOutputWithContext(context.Context) SubnetV2LinkOutput
}

type SubnetV2LinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (SubnetV2LinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2Link)(nil)).Elem()
}

func (i SubnetV2LinkArgs) ToSubnetV2LinkOutput() SubnetV2LinkOutput {
	return i.ToSubnetV2LinkOutputWithContext(context.Background())
}

func (i SubnetV2LinkArgs) ToSubnetV2LinkOutputWithContext(ctx context.Context) SubnetV2LinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2LinkOutput)
}

// SubnetV2LinkArrayInput is an input type that accepts SubnetV2LinkArray and SubnetV2LinkArrayOutput values.
// You can construct a concrete instance of `SubnetV2LinkArrayInput` via:
//
//	SubnetV2LinkArray{ SubnetV2LinkArgs{...} }
type SubnetV2LinkArrayInput interface {
	pulumi.Input

	ToSubnetV2LinkArrayOutput() SubnetV2LinkArrayOutput
	ToSubnetV2LinkArrayOutputWithContext(context.Context) SubnetV2LinkArrayOutput
}

type SubnetV2LinkArray []SubnetV2LinkInput

func (SubnetV2LinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2Link)(nil)).Elem()
}

func (i SubnetV2LinkArray) ToSubnetV2LinkArrayOutput() SubnetV2LinkArrayOutput {
	return i.ToSubnetV2LinkArrayOutputWithContext(context.Background())
}

func (i SubnetV2LinkArray) ToSubnetV2LinkArrayOutputWithContext(ctx context.Context) SubnetV2LinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2LinkArrayOutput)
}

type SubnetV2LinkOutput struct{ *pulumi.OutputState }

func (SubnetV2LinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2Link)(nil)).Elem()
}

func (o SubnetV2LinkOutput) ToSubnetV2LinkOutput() SubnetV2LinkOutput {
	return o
}

func (o SubnetV2LinkOutput) ToSubnetV2LinkOutputWithContext(ctx context.Context) SubnetV2LinkOutput {
	return o
}

func (o SubnetV2LinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Link) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o SubnetV2LinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Link) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type SubnetV2LinkArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2LinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2Link)(nil)).Elem()
}

func (o SubnetV2LinkArrayOutput) ToSubnetV2LinkArrayOutput() SubnetV2LinkArrayOutput {
	return o
}

func (o SubnetV2LinkArrayOutput) ToSubnetV2LinkArrayOutputWithContext(ctx context.Context) SubnetV2LinkArrayOutput {
	return o
}

func (o SubnetV2LinkArrayOutput) Index(i pulumi.IntInput) SubnetV2LinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2Link {
		return vs[0].([]SubnetV2Link)[vs[1].(int)]
	}).(SubnetV2LinkOutput)
}

type SubnetV2ReservedIpAddress struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2ReservedIpAddressInput is an input type that accepts SubnetV2ReservedIpAddressArgs and SubnetV2ReservedIpAddressOutput values.
// You can construct a concrete instance of `SubnetV2ReservedIpAddressInput` via:
//
//	SubnetV2ReservedIpAddressArgs{...}
type SubnetV2ReservedIpAddressInput interface {
	pulumi.Input

	ToSubnetV2ReservedIpAddressOutput() SubnetV2ReservedIpAddressOutput
	ToSubnetV2ReservedIpAddressOutputWithContext(context.Context) SubnetV2ReservedIpAddressOutput
}

type SubnetV2ReservedIpAddressArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2ReservedIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2ReservedIpAddress)(nil)).Elem()
}

func (i SubnetV2ReservedIpAddressArgs) ToSubnetV2ReservedIpAddressOutput() SubnetV2ReservedIpAddressOutput {
	return i.ToSubnetV2ReservedIpAddressOutputWithContext(context.Background())
}

func (i SubnetV2ReservedIpAddressArgs) ToSubnetV2ReservedIpAddressOutputWithContext(ctx context.Context) SubnetV2ReservedIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2ReservedIpAddressOutput)
}

// SubnetV2ReservedIpAddressArrayInput is an input type that accepts SubnetV2ReservedIpAddressArray and SubnetV2ReservedIpAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2ReservedIpAddressArrayInput` via:
//
//	SubnetV2ReservedIpAddressArray{ SubnetV2ReservedIpAddressArgs{...} }
type SubnetV2ReservedIpAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2ReservedIpAddressArrayOutput() SubnetV2ReservedIpAddressArrayOutput
	ToSubnetV2ReservedIpAddressArrayOutputWithContext(context.Context) SubnetV2ReservedIpAddressArrayOutput
}

type SubnetV2ReservedIpAddressArray []SubnetV2ReservedIpAddressInput

func (SubnetV2ReservedIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2ReservedIpAddress)(nil)).Elem()
}

func (i SubnetV2ReservedIpAddressArray) ToSubnetV2ReservedIpAddressArrayOutput() SubnetV2ReservedIpAddressArrayOutput {
	return i.ToSubnetV2ReservedIpAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2ReservedIpAddressArray) ToSubnetV2ReservedIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2ReservedIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2ReservedIpAddressArrayOutput)
}

type SubnetV2ReservedIpAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2ReservedIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2ReservedIpAddress)(nil)).Elem()
}

func (o SubnetV2ReservedIpAddressOutput) ToSubnetV2ReservedIpAddressOutput() SubnetV2ReservedIpAddressOutput {
	return o
}

func (o SubnetV2ReservedIpAddressOutput) ToSubnetV2ReservedIpAddressOutputWithContext(ctx context.Context) SubnetV2ReservedIpAddressOutput {
	return o
}

func (o SubnetV2ReservedIpAddressOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2ReservedIpAddress) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2ReservedIpAddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2ReservedIpAddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2ReservedIpAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2ReservedIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2ReservedIpAddress)(nil)).Elem()
}

func (o SubnetV2ReservedIpAddressArrayOutput) ToSubnetV2ReservedIpAddressArrayOutput() SubnetV2ReservedIpAddressArrayOutput {
	return o
}

func (o SubnetV2ReservedIpAddressArrayOutput) ToSubnetV2ReservedIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2ReservedIpAddressArrayOutput {
	return o
}

func (o SubnetV2ReservedIpAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2ReservedIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2ReservedIpAddress {
		return vs[0].([]SubnetV2ReservedIpAddress)[vs[1].(int)]
	}).(SubnetV2ReservedIpAddressOutput)
}

type SubnetV2VirtualSwitch struct {
	BondMode           *bool                           `pulumi:"bondMode"`
	Clusters           []SubnetV2VirtualSwitchCluster  `pulumi:"clusters"`
	Description        *string                         `pulumi:"description"`
	ExtId              *string                         `pulumi:"extId"`
	HasDeploymentError *bool                           `pulumi:"hasDeploymentError"`
	IsDefault          *bool                           `pulumi:"isDefault"`
	Links              []SubnetV2VirtualSwitchLink     `pulumi:"links"`
	Metadatas          []SubnetV2VirtualSwitchMetadata `pulumi:"metadatas"`
	Mtu                *int                            `pulumi:"mtu"`
	Name               *string                         `pulumi:"name"`
	TenantId           *string                         `pulumi:"tenantId"`
}

// SubnetV2VirtualSwitchInput is an input type that accepts SubnetV2VirtualSwitchArgs and SubnetV2VirtualSwitchOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchInput` via:
//
//	SubnetV2VirtualSwitchArgs{...}
type SubnetV2VirtualSwitchInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchOutput() SubnetV2VirtualSwitchOutput
	ToSubnetV2VirtualSwitchOutputWithContext(context.Context) SubnetV2VirtualSwitchOutput
}

type SubnetV2VirtualSwitchArgs struct {
	BondMode           pulumi.BoolPtrInput                     `pulumi:"bondMode"`
	Clusters           SubnetV2VirtualSwitchClusterArrayInput  `pulumi:"clusters"`
	Description        pulumi.StringPtrInput                   `pulumi:"description"`
	ExtId              pulumi.StringPtrInput                   `pulumi:"extId"`
	HasDeploymentError pulumi.BoolPtrInput                     `pulumi:"hasDeploymentError"`
	IsDefault          pulumi.BoolPtrInput                     `pulumi:"isDefault"`
	Links              SubnetV2VirtualSwitchLinkArrayInput     `pulumi:"links"`
	Metadatas          SubnetV2VirtualSwitchMetadataArrayInput `pulumi:"metadatas"`
	Mtu                pulumi.IntPtrInput                      `pulumi:"mtu"`
	Name               pulumi.StringPtrInput                   `pulumi:"name"`
	TenantId           pulumi.StringPtrInput                   `pulumi:"tenantId"`
}

func (SubnetV2VirtualSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitch)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchArgs) ToSubnetV2VirtualSwitchOutput() SubnetV2VirtualSwitchOutput {
	return i.ToSubnetV2VirtualSwitchOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchArgs) ToSubnetV2VirtualSwitchOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchOutput)
}

// SubnetV2VirtualSwitchArrayInput is an input type that accepts SubnetV2VirtualSwitchArray and SubnetV2VirtualSwitchArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchArrayInput` via:
//
//	SubnetV2VirtualSwitchArray{ SubnetV2VirtualSwitchArgs{...} }
type SubnetV2VirtualSwitchArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchArrayOutput() SubnetV2VirtualSwitchArrayOutput
	ToSubnetV2VirtualSwitchArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchArrayOutput
}

type SubnetV2VirtualSwitchArray []SubnetV2VirtualSwitchInput

func (SubnetV2VirtualSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitch)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchArray) ToSubnetV2VirtualSwitchArrayOutput() SubnetV2VirtualSwitchArrayOutput {
	return i.ToSubnetV2VirtualSwitchArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchArray) ToSubnetV2VirtualSwitchArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchArrayOutput)
}

type SubnetV2VirtualSwitchOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitch)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchOutput) ToSubnetV2VirtualSwitchOutput() SubnetV2VirtualSwitchOutput {
	return o
}

func (o SubnetV2VirtualSwitchOutput) ToSubnetV2VirtualSwitchOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchOutput {
	return o
}

func (o SubnetV2VirtualSwitchOutput) BondMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *bool { return v.BondMode }).(pulumi.BoolPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) Clusters() SubnetV2VirtualSwitchClusterArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) []SubnetV2VirtualSwitchCluster { return v.Clusters }).(SubnetV2VirtualSwitchClusterArrayOutput)
}

func (o SubnetV2VirtualSwitchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) HasDeploymentError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *bool { return v.HasDeploymentError }).(pulumi.BoolPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) Links() SubnetV2VirtualSwitchLinkArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) []SubnetV2VirtualSwitchLink { return v.Links }).(SubnetV2VirtualSwitchLinkArrayOutput)
}

func (o SubnetV2VirtualSwitchOutput) Metadatas() SubnetV2VirtualSwitchMetadataArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) []SubnetV2VirtualSwitchMetadata { return v.Metadatas }).(SubnetV2VirtualSwitchMetadataArrayOutput)
}

func (o SubnetV2VirtualSwitchOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitch) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type SubnetV2VirtualSwitchArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitch)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchArrayOutput) ToSubnetV2VirtualSwitchArrayOutput() SubnetV2VirtualSwitchArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchArrayOutput) ToSubnetV2VirtualSwitchArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitch {
		return vs[0].([]SubnetV2VirtualSwitch)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchOutput)
}

type SubnetV2VirtualSwitchCluster struct {
	ExtId              *string                                        `pulumi:"extId"`
	GatewayIpAddresses []SubnetV2VirtualSwitchClusterGatewayIpAddress `pulumi:"gatewayIpAddresses"`
	Hosts              []SubnetV2VirtualSwitchClusterHost             `pulumi:"hosts"`
}

// SubnetV2VirtualSwitchClusterInput is an input type that accepts SubnetV2VirtualSwitchClusterArgs and SubnetV2VirtualSwitchClusterOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterInput` via:
//
//	SubnetV2VirtualSwitchClusterArgs{...}
type SubnetV2VirtualSwitchClusterInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterOutput() SubnetV2VirtualSwitchClusterOutput
	ToSubnetV2VirtualSwitchClusterOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterOutput
}

type SubnetV2VirtualSwitchClusterArgs struct {
	ExtId              pulumi.StringPtrInput                                  `pulumi:"extId"`
	GatewayIpAddresses SubnetV2VirtualSwitchClusterGatewayIpAddressArrayInput `pulumi:"gatewayIpAddresses"`
	Hosts              SubnetV2VirtualSwitchClusterHostArrayInput             `pulumi:"hosts"`
}

func (SubnetV2VirtualSwitchClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchCluster)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterArgs) ToSubnetV2VirtualSwitchClusterOutput() SubnetV2VirtualSwitchClusterOutput {
	return i.ToSubnetV2VirtualSwitchClusterOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterArgs) ToSubnetV2VirtualSwitchClusterOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterOutput)
}

// SubnetV2VirtualSwitchClusterArrayInput is an input type that accepts SubnetV2VirtualSwitchClusterArray and SubnetV2VirtualSwitchClusterArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterArrayInput` via:
//
//	SubnetV2VirtualSwitchClusterArray{ SubnetV2VirtualSwitchClusterArgs{...} }
type SubnetV2VirtualSwitchClusterArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterArrayOutput() SubnetV2VirtualSwitchClusterArrayOutput
	ToSubnetV2VirtualSwitchClusterArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterArrayOutput
}

type SubnetV2VirtualSwitchClusterArray []SubnetV2VirtualSwitchClusterInput

func (SubnetV2VirtualSwitchClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchCluster)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterArray) ToSubnetV2VirtualSwitchClusterArrayOutput() SubnetV2VirtualSwitchClusterArrayOutput {
	return i.ToSubnetV2VirtualSwitchClusterArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterArray) ToSubnetV2VirtualSwitchClusterArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterArrayOutput)
}

type SubnetV2VirtualSwitchClusterOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchCluster)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterOutput) ToSubnetV2VirtualSwitchClusterOutput() SubnetV2VirtualSwitchClusterOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterOutput) ToSubnetV2VirtualSwitchClusterOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchCluster) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchClusterOutput) GatewayIpAddresses() SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchCluster) []SubnetV2VirtualSwitchClusterGatewayIpAddress {
		return v.GatewayIpAddresses
	}).(SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput)
}

func (o SubnetV2VirtualSwitchClusterOutput) Hosts() SubnetV2VirtualSwitchClusterHostArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchCluster) []SubnetV2VirtualSwitchClusterHost { return v.Hosts }).(SubnetV2VirtualSwitchClusterHostArrayOutput)
}

type SubnetV2VirtualSwitchClusterArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchCluster)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterArrayOutput) ToSubnetV2VirtualSwitchClusterArrayOutput() SubnetV2VirtualSwitchClusterArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterArrayOutput) ToSubnetV2VirtualSwitchClusterArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchCluster {
		return vs[0].([]SubnetV2VirtualSwitchCluster)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchClusterOutput)
}

type SubnetV2VirtualSwitchClusterGatewayIpAddress struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VirtualSwitchClusterGatewayIpAddressInput is an input type that accepts SubnetV2VirtualSwitchClusterGatewayIpAddressArgs and SubnetV2VirtualSwitchClusterGatewayIpAddressOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterGatewayIpAddressInput` via:
//
//	SubnetV2VirtualSwitchClusterGatewayIpAddressArgs{...}
type SubnetV2VirtualSwitchClusterGatewayIpAddressInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressOutput
	ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressOutput
}

type SubnetV2VirtualSwitchClusterGatewayIpAddressArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VirtualSwitchClusterGatewayIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterGatewayIpAddress)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterGatewayIpAddressArgs) ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressOutput {
	return i.ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterGatewayIpAddressArgs) ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterGatewayIpAddressOutput)
}

// SubnetV2VirtualSwitchClusterGatewayIpAddressArrayInput is an input type that accepts SubnetV2VirtualSwitchClusterGatewayIpAddressArray and SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterGatewayIpAddressArrayInput` via:
//
//	SubnetV2VirtualSwitchClusterGatewayIpAddressArray{ SubnetV2VirtualSwitchClusterGatewayIpAddressArgs{...} }
type SubnetV2VirtualSwitchClusterGatewayIpAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput
	ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput
}

type SubnetV2VirtualSwitchClusterGatewayIpAddressArray []SubnetV2VirtualSwitchClusterGatewayIpAddressInput

func (SubnetV2VirtualSwitchClusterGatewayIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterGatewayIpAddress)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterGatewayIpAddressArray) ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput {
	return i.ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterGatewayIpAddressArray) ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput)
}

type SubnetV2VirtualSwitchClusterGatewayIpAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterGatewayIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterGatewayIpAddress)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressOutput) ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressOutput) ToSubnetV2VirtualSwitchClusterGatewayIpAddressOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterGatewayIpAddress) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterGatewayIpAddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterGatewayIpAddress)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput) ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput() SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput) ToSubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchClusterGatewayIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchClusterGatewayIpAddress {
		return vs[0].([]SubnetV2VirtualSwitchClusterGatewayIpAddress)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchClusterGatewayIpAddressOutput)
}

type SubnetV2VirtualSwitchClusterHost struct {
	ExtId              *string                                     `pulumi:"extId"`
	HostNics           []string                                    `pulumi:"hostNics"`
	InternalBridgeName *string                                     `pulumi:"internalBridgeName"`
	IpAddresses        []SubnetV2VirtualSwitchClusterHostIpAddress `pulumi:"ipAddresses"`
	RouteTable         *int                                        `pulumi:"routeTable"`
}

// SubnetV2VirtualSwitchClusterHostInput is an input type that accepts SubnetV2VirtualSwitchClusterHostArgs and SubnetV2VirtualSwitchClusterHostOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostInput` via:
//
//	SubnetV2VirtualSwitchClusterHostArgs{...}
type SubnetV2VirtualSwitchClusterHostInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostOutput() SubnetV2VirtualSwitchClusterHostOutput
	ToSubnetV2VirtualSwitchClusterHostOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostOutput
}

type SubnetV2VirtualSwitchClusterHostArgs struct {
	ExtId              pulumi.StringPtrInput                               `pulumi:"extId"`
	HostNics           pulumi.StringArrayInput                             `pulumi:"hostNics"`
	InternalBridgeName pulumi.StringPtrInput                               `pulumi:"internalBridgeName"`
	IpAddresses        SubnetV2VirtualSwitchClusterHostIpAddressArrayInput `pulumi:"ipAddresses"`
	RouteTable         pulumi.IntPtrInput                                  `pulumi:"routeTable"`
}

func (SubnetV2VirtualSwitchClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHost)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostArgs) ToSubnetV2VirtualSwitchClusterHostOutput() SubnetV2VirtualSwitchClusterHostOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostArgs) ToSubnetV2VirtualSwitchClusterHostOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostOutput)
}

// SubnetV2VirtualSwitchClusterHostArrayInput is an input type that accepts SubnetV2VirtualSwitchClusterHostArray and SubnetV2VirtualSwitchClusterHostArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostArrayInput` via:
//
//	SubnetV2VirtualSwitchClusterHostArray{ SubnetV2VirtualSwitchClusterHostArgs{...} }
type SubnetV2VirtualSwitchClusterHostArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostArrayOutput() SubnetV2VirtualSwitchClusterHostArrayOutput
	ToSubnetV2VirtualSwitchClusterHostArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostArrayOutput
}

type SubnetV2VirtualSwitchClusterHostArray []SubnetV2VirtualSwitchClusterHostInput

func (SubnetV2VirtualSwitchClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHost)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostArray) ToSubnetV2VirtualSwitchClusterHostArrayOutput() SubnetV2VirtualSwitchClusterHostArrayOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostArray) ToSubnetV2VirtualSwitchClusterHostArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostArrayOutput)
}

type SubnetV2VirtualSwitchClusterHostOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHost)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostOutput) ToSubnetV2VirtualSwitchClusterHostOutput() SubnetV2VirtualSwitchClusterHostOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostOutput) ToSubnetV2VirtualSwitchClusterHostOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHost) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchClusterHostOutput) HostNics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHost) []string { return v.HostNics }).(pulumi.StringArrayOutput)
}

func (o SubnetV2VirtualSwitchClusterHostOutput) InternalBridgeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHost) *string { return v.InternalBridgeName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchClusterHostOutput) IpAddresses() SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHost) []SubnetV2VirtualSwitchClusterHostIpAddress {
		return v.IpAddresses
	}).(SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput)
}

func (o SubnetV2VirtualSwitchClusterHostOutput) RouteTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHost) *int { return v.RouteTable }).(pulumi.IntPtrOutput)
}

type SubnetV2VirtualSwitchClusterHostArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHost)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostArrayOutput) ToSubnetV2VirtualSwitchClusterHostArrayOutput() SubnetV2VirtualSwitchClusterHostArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostArrayOutput) ToSubnetV2VirtualSwitchClusterHostArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchClusterHost {
		return vs[0].([]SubnetV2VirtualSwitchClusterHost)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchClusterHostOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddress struct {
	Ips          []SubnetV2VirtualSwitchClusterHostIpAddressIp `pulumi:"ips"`
	PrefixLength *int                                          `pulumi:"prefixLength"`
}

// SubnetV2VirtualSwitchClusterHostIpAddressInput is an input type that accepts SubnetV2VirtualSwitchClusterHostIpAddressArgs and SubnetV2VirtualSwitchClusterHostIpAddressOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostIpAddressInput` via:
//
//	SubnetV2VirtualSwitchClusterHostIpAddressArgs{...}
type SubnetV2VirtualSwitchClusterHostIpAddressInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostIpAddressOutput() SubnetV2VirtualSwitchClusterHostIpAddressOutput
	ToSubnetV2VirtualSwitchClusterHostIpAddressOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostIpAddressOutput
}

type SubnetV2VirtualSwitchClusterHostIpAddressArgs struct {
	Ips          SubnetV2VirtualSwitchClusterHostIpAddressIpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                    `pulumi:"prefixLength"`
}

func (SubnetV2VirtualSwitchClusterHostIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddress)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressArgs) ToSubnetV2VirtualSwitchClusterHostIpAddressOutput() SubnetV2VirtualSwitchClusterHostIpAddressOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostIpAddressOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressArgs) ToSubnetV2VirtualSwitchClusterHostIpAddressOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostIpAddressOutput)
}

// SubnetV2VirtualSwitchClusterHostIpAddressArrayInput is an input type that accepts SubnetV2VirtualSwitchClusterHostIpAddressArray and SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostIpAddressArrayInput` via:
//
//	SubnetV2VirtualSwitchClusterHostIpAddressArray{ SubnetV2VirtualSwitchClusterHostIpAddressArgs{...} }
type SubnetV2VirtualSwitchClusterHostIpAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput
	ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput
}

type SubnetV2VirtualSwitchClusterHostIpAddressArray []SubnetV2VirtualSwitchClusterHostIpAddressInput

func (SubnetV2VirtualSwitchClusterHostIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHostIpAddress)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressArray) ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressArray) ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddress)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressOutput() SubnetV2VirtualSwitchClusterHostIpAddressOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressOutput) Ips() SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHostIpAddress) []SubnetV2VirtualSwitchClusterHostIpAddressIp {
		return v.Ips
	}).(SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput)
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHostIpAddress) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHostIpAddress)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchClusterHostIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchClusterHostIpAddress {
		return vs[0].([]SubnetV2VirtualSwitchClusterHostIpAddress)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchClusterHostIpAddressOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddressIp struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VirtualSwitchClusterHostIpAddressIpInput is an input type that accepts SubnetV2VirtualSwitchClusterHostIpAddressIpArgs and SubnetV2VirtualSwitchClusterHostIpAddressIpOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostIpAddressIpInput` via:
//
//	SubnetV2VirtualSwitchClusterHostIpAddressIpArgs{...}
type SubnetV2VirtualSwitchClusterHostIpAddressIpInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpOutput
	ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpOutput
}

type SubnetV2VirtualSwitchClusterHostIpAddressIpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VirtualSwitchClusterHostIpAddressIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressIp)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressIpArgs) ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressIpArgs) ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostIpAddressIpOutput)
}

// SubnetV2VirtualSwitchClusterHostIpAddressIpArrayInput is an input type that accepts SubnetV2VirtualSwitchClusterHostIpAddressIpArray and SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchClusterHostIpAddressIpArrayInput` via:
//
//	SubnetV2VirtualSwitchClusterHostIpAddressIpArray{ SubnetV2VirtualSwitchClusterHostIpAddressIpArgs{...} }
type SubnetV2VirtualSwitchClusterHostIpAddressIpArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput
	ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput
}

type SubnetV2VirtualSwitchClusterHostIpAddressIpArray []SubnetV2VirtualSwitchClusterHostIpAddressIpInput

func (SubnetV2VirtualSwitchClusterHostIpAddressIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHostIpAddressIp)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressIpArray) ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput {
	return i.ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchClusterHostIpAddressIpArray) ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddressIpOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostIpAddressIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressIp)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressIpOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHostIpAddressIp) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchClusterHostIpAddressIp) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchClusterHostIpAddressIp)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput() SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput) ToSubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchClusterHostIpAddressIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchClusterHostIpAddressIp {
		return vs[0].([]SubnetV2VirtualSwitchClusterHostIpAddressIp)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchClusterHostIpAddressIpOutput)
}

type SubnetV2VirtualSwitchLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// SubnetV2VirtualSwitchLinkInput is an input type that accepts SubnetV2VirtualSwitchLinkArgs and SubnetV2VirtualSwitchLinkOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchLinkInput` via:
//
//	SubnetV2VirtualSwitchLinkArgs{...}
type SubnetV2VirtualSwitchLinkInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchLinkOutput() SubnetV2VirtualSwitchLinkOutput
	ToSubnetV2VirtualSwitchLinkOutputWithContext(context.Context) SubnetV2VirtualSwitchLinkOutput
}

type SubnetV2VirtualSwitchLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (SubnetV2VirtualSwitchLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchLink)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchLinkArgs) ToSubnetV2VirtualSwitchLinkOutput() SubnetV2VirtualSwitchLinkOutput {
	return i.ToSubnetV2VirtualSwitchLinkOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchLinkArgs) ToSubnetV2VirtualSwitchLinkOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchLinkOutput)
}

// SubnetV2VirtualSwitchLinkArrayInput is an input type that accepts SubnetV2VirtualSwitchLinkArray and SubnetV2VirtualSwitchLinkArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchLinkArrayInput` via:
//
//	SubnetV2VirtualSwitchLinkArray{ SubnetV2VirtualSwitchLinkArgs{...} }
type SubnetV2VirtualSwitchLinkArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchLinkArrayOutput() SubnetV2VirtualSwitchLinkArrayOutput
	ToSubnetV2VirtualSwitchLinkArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchLinkArrayOutput
}

type SubnetV2VirtualSwitchLinkArray []SubnetV2VirtualSwitchLinkInput

func (SubnetV2VirtualSwitchLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchLink)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchLinkArray) ToSubnetV2VirtualSwitchLinkArrayOutput() SubnetV2VirtualSwitchLinkArrayOutput {
	return i.ToSubnetV2VirtualSwitchLinkArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchLinkArray) ToSubnetV2VirtualSwitchLinkArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchLinkArrayOutput)
}

type SubnetV2VirtualSwitchLinkOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchLink)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchLinkOutput) ToSubnetV2VirtualSwitchLinkOutput() SubnetV2VirtualSwitchLinkOutput {
	return o
}

func (o SubnetV2VirtualSwitchLinkOutput) ToSubnetV2VirtualSwitchLinkOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchLinkOutput {
	return o
}

func (o SubnetV2VirtualSwitchLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type SubnetV2VirtualSwitchLinkArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchLink)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchLinkArrayOutput) ToSubnetV2VirtualSwitchLinkArrayOutput() SubnetV2VirtualSwitchLinkArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchLinkArrayOutput) ToSubnetV2VirtualSwitchLinkArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchLinkArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchLinkArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchLink {
		return vs[0].([]SubnetV2VirtualSwitchLink)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchLinkOutput)
}

type SubnetV2VirtualSwitchMetadata struct {
	CategoryIds        [][]interface{} `pulumi:"categoryIds"`
	OwnerReferenceId   *string         `pulumi:"ownerReferenceId"`
	OwnerUserName      *string         `pulumi:"ownerUserName"`
	ProjectName        *string         `pulumi:"projectName"`
	ProjectReferenceId *string         `pulumi:"projectReferenceId"`
}

// SubnetV2VirtualSwitchMetadataInput is an input type that accepts SubnetV2VirtualSwitchMetadataArgs and SubnetV2VirtualSwitchMetadataOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchMetadataInput` via:
//
//	SubnetV2VirtualSwitchMetadataArgs{...}
type SubnetV2VirtualSwitchMetadataInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchMetadataOutput() SubnetV2VirtualSwitchMetadataOutput
	ToSubnetV2VirtualSwitchMetadataOutputWithContext(context.Context) SubnetV2VirtualSwitchMetadataOutput
}

type SubnetV2VirtualSwitchMetadataArgs struct {
	CategoryIds        pulumi.ArrayArrayInput `pulumi:"categoryIds"`
	OwnerReferenceId   pulumi.StringPtrInput  `pulumi:"ownerReferenceId"`
	OwnerUserName      pulumi.StringPtrInput  `pulumi:"ownerUserName"`
	ProjectName        pulumi.StringPtrInput  `pulumi:"projectName"`
	ProjectReferenceId pulumi.StringPtrInput  `pulumi:"projectReferenceId"`
}

func (SubnetV2VirtualSwitchMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchMetadata)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchMetadataArgs) ToSubnetV2VirtualSwitchMetadataOutput() SubnetV2VirtualSwitchMetadataOutput {
	return i.ToSubnetV2VirtualSwitchMetadataOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchMetadataArgs) ToSubnetV2VirtualSwitchMetadataOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchMetadataOutput)
}

// SubnetV2VirtualSwitchMetadataArrayInput is an input type that accepts SubnetV2VirtualSwitchMetadataArray and SubnetV2VirtualSwitchMetadataArrayOutput values.
// You can construct a concrete instance of `SubnetV2VirtualSwitchMetadataArrayInput` via:
//
//	SubnetV2VirtualSwitchMetadataArray{ SubnetV2VirtualSwitchMetadataArgs{...} }
type SubnetV2VirtualSwitchMetadataArrayInput interface {
	pulumi.Input

	ToSubnetV2VirtualSwitchMetadataArrayOutput() SubnetV2VirtualSwitchMetadataArrayOutput
	ToSubnetV2VirtualSwitchMetadataArrayOutputWithContext(context.Context) SubnetV2VirtualSwitchMetadataArrayOutput
}

type SubnetV2VirtualSwitchMetadataArray []SubnetV2VirtualSwitchMetadataInput

func (SubnetV2VirtualSwitchMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchMetadata)(nil)).Elem()
}

func (i SubnetV2VirtualSwitchMetadataArray) ToSubnetV2VirtualSwitchMetadataArrayOutput() SubnetV2VirtualSwitchMetadataArrayOutput {
	return i.ToSubnetV2VirtualSwitchMetadataArrayOutputWithContext(context.Background())
}

func (i SubnetV2VirtualSwitchMetadataArray) ToSubnetV2VirtualSwitchMetadataArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VirtualSwitchMetadataArrayOutput)
}

type SubnetV2VirtualSwitchMetadataOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VirtualSwitchMetadata)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchMetadataOutput) ToSubnetV2VirtualSwitchMetadataOutput() SubnetV2VirtualSwitchMetadataOutput {
	return o
}

func (o SubnetV2VirtualSwitchMetadataOutput) ToSubnetV2VirtualSwitchMetadataOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchMetadataOutput {
	return o
}

func (o SubnetV2VirtualSwitchMetadataOutput) CategoryIds() pulumi.ArrayArrayOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchMetadata) [][]interface{} { return v.CategoryIds }).(pulumi.ArrayArrayOutput)
}

func (o SubnetV2VirtualSwitchMetadataOutput) OwnerReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchMetadata) *string { return v.OwnerReferenceId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchMetadataOutput) OwnerUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchMetadata) *string { return v.OwnerUserName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchMetadataOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchMetadata) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VirtualSwitchMetadataOutput) ProjectReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VirtualSwitchMetadata) *string { return v.ProjectReferenceId }).(pulumi.StringPtrOutput)
}

type SubnetV2VirtualSwitchMetadataArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VirtualSwitchMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VirtualSwitchMetadata)(nil)).Elem()
}

func (o SubnetV2VirtualSwitchMetadataArrayOutput) ToSubnetV2VirtualSwitchMetadataArrayOutput() SubnetV2VirtualSwitchMetadataArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchMetadataArrayOutput) ToSubnetV2VirtualSwitchMetadataArrayOutputWithContext(ctx context.Context) SubnetV2VirtualSwitchMetadataArrayOutput {
	return o
}

func (o SubnetV2VirtualSwitchMetadataArrayOutput) Index(i pulumi.IntInput) SubnetV2VirtualSwitchMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VirtualSwitchMetadata {
		return vs[0].([]SubnetV2VirtualSwitchMetadata)[vs[1].(int)]
	}).(SubnetV2VirtualSwitchMetadataOutput)
}

type SubnetV2Vpc struct {
	CommonDhcpOptions              []SubnetV2VpcCommonDhcpOption         `pulumi:"commonDhcpOptions"`
	Description                    *string                               `pulumi:"description"`
	ExtId                          *string                               `pulumi:"extId"`
	ExternalRoutingDomainReference *string                               `pulumi:"externalRoutingDomainReference"`
	ExternalSubnets                []SubnetV2VpcExternalSubnet           `pulumi:"externalSubnets"`
	ExternallyRoutablePrefixes     []SubnetV2VpcExternallyRoutablePrefix `pulumi:"externallyRoutablePrefixes"`
	Links                          []SubnetV2VpcLink                     `pulumi:"links"`
	Metadatas                      []SubnetV2VpcMetadata                 `pulumi:"metadatas"`
	Name                           *string                               `pulumi:"name"`
	SnatIps                        []SubnetV2VpcSnatIp                   `pulumi:"snatIps"`
	TenantId                       *string                               `pulumi:"tenantId"`
	VpcType                        *string                               `pulumi:"vpcType"`
}

// SubnetV2VpcInput is an input type that accepts SubnetV2VpcArgs and SubnetV2VpcOutput values.
// You can construct a concrete instance of `SubnetV2VpcInput` via:
//
//	SubnetV2VpcArgs{...}
type SubnetV2VpcInput interface {
	pulumi.Input

	ToSubnetV2VpcOutput() SubnetV2VpcOutput
	ToSubnetV2VpcOutputWithContext(context.Context) SubnetV2VpcOutput
}

type SubnetV2VpcArgs struct {
	CommonDhcpOptions              SubnetV2VpcCommonDhcpOptionArrayInput         `pulumi:"commonDhcpOptions"`
	Description                    pulumi.StringPtrInput                         `pulumi:"description"`
	ExtId                          pulumi.StringPtrInput                         `pulumi:"extId"`
	ExternalRoutingDomainReference pulumi.StringPtrInput                         `pulumi:"externalRoutingDomainReference"`
	ExternalSubnets                SubnetV2VpcExternalSubnetArrayInput           `pulumi:"externalSubnets"`
	ExternallyRoutablePrefixes     SubnetV2VpcExternallyRoutablePrefixArrayInput `pulumi:"externallyRoutablePrefixes"`
	Links                          SubnetV2VpcLinkArrayInput                     `pulumi:"links"`
	Metadatas                      SubnetV2VpcMetadataArrayInput                 `pulumi:"metadatas"`
	Name                           pulumi.StringPtrInput                         `pulumi:"name"`
	SnatIps                        SubnetV2VpcSnatIpArrayInput                   `pulumi:"snatIps"`
	TenantId                       pulumi.StringPtrInput                         `pulumi:"tenantId"`
	VpcType                        pulumi.StringPtrInput                         `pulumi:"vpcType"`
}

func (SubnetV2VpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2Vpc)(nil)).Elem()
}

func (i SubnetV2VpcArgs) ToSubnetV2VpcOutput() SubnetV2VpcOutput {
	return i.ToSubnetV2VpcOutputWithContext(context.Background())
}

func (i SubnetV2VpcArgs) ToSubnetV2VpcOutputWithContext(ctx context.Context) SubnetV2VpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcOutput)
}

// SubnetV2VpcArrayInput is an input type that accepts SubnetV2VpcArray and SubnetV2VpcArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcArrayInput` via:
//
//	SubnetV2VpcArray{ SubnetV2VpcArgs{...} }
type SubnetV2VpcArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcArrayOutput() SubnetV2VpcArrayOutput
	ToSubnetV2VpcArrayOutputWithContext(context.Context) SubnetV2VpcArrayOutput
}

type SubnetV2VpcArray []SubnetV2VpcInput

func (SubnetV2VpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2Vpc)(nil)).Elem()
}

func (i SubnetV2VpcArray) ToSubnetV2VpcArrayOutput() SubnetV2VpcArrayOutput {
	return i.ToSubnetV2VpcArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcArray) ToSubnetV2VpcArrayOutputWithContext(ctx context.Context) SubnetV2VpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcArrayOutput)
}

type SubnetV2VpcOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2Vpc)(nil)).Elem()
}

func (o SubnetV2VpcOutput) ToSubnetV2VpcOutput() SubnetV2VpcOutput {
	return o
}

func (o SubnetV2VpcOutput) ToSubnetV2VpcOutputWithContext(ctx context.Context) SubnetV2VpcOutput {
	return o
}

func (o SubnetV2VpcOutput) CommonDhcpOptions() SubnetV2VpcCommonDhcpOptionArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcCommonDhcpOption { return v.CommonDhcpOptions }).(SubnetV2VpcCommonDhcpOptionArrayOutput)
}

func (o SubnetV2VpcOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcOutput) ExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.ExtId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcOutput) ExternalRoutingDomainReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.ExternalRoutingDomainReference }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcOutput) ExternalSubnets() SubnetV2VpcExternalSubnetArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcExternalSubnet { return v.ExternalSubnets }).(SubnetV2VpcExternalSubnetArrayOutput)
}

func (o SubnetV2VpcOutput) ExternallyRoutablePrefixes() SubnetV2VpcExternallyRoutablePrefixArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcExternallyRoutablePrefix { return v.ExternallyRoutablePrefixes }).(SubnetV2VpcExternallyRoutablePrefixArrayOutput)
}

func (o SubnetV2VpcOutput) Links() SubnetV2VpcLinkArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcLink { return v.Links }).(SubnetV2VpcLinkArrayOutput)
}

func (o SubnetV2VpcOutput) Metadatas() SubnetV2VpcMetadataArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcMetadata { return v.Metadatas }).(SubnetV2VpcMetadataArrayOutput)
}

func (o SubnetV2VpcOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcOutput) SnatIps() SubnetV2VpcSnatIpArrayOutput {
	return o.ApplyT(func(v SubnetV2Vpc) []SubnetV2VpcSnatIp { return v.SnatIps }).(SubnetV2VpcSnatIpArrayOutput)
}

func (o SubnetV2VpcOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcOutput) VpcType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2Vpc) *string { return v.VpcType }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2Vpc)(nil)).Elem()
}

func (o SubnetV2VpcArrayOutput) ToSubnetV2VpcArrayOutput() SubnetV2VpcArrayOutput {
	return o
}

func (o SubnetV2VpcArrayOutput) ToSubnetV2VpcArrayOutputWithContext(ctx context.Context) SubnetV2VpcArrayOutput {
	return o
}

func (o SubnetV2VpcArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2Vpc {
		return vs[0].([]SubnetV2Vpc)[vs[1].(int)]
	}).(SubnetV2VpcOutput)
}

type SubnetV2VpcCommonDhcpOption struct {
	DomainNameServers []SubnetV2VpcCommonDhcpOptionDomainNameServer `pulumi:"domainNameServers"`
}

// SubnetV2VpcCommonDhcpOptionInput is an input type that accepts SubnetV2VpcCommonDhcpOptionArgs and SubnetV2VpcCommonDhcpOptionOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionInput` via:
//
//	SubnetV2VpcCommonDhcpOptionArgs{...}
type SubnetV2VpcCommonDhcpOptionInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionOutput() SubnetV2VpcCommonDhcpOptionOutput
	ToSubnetV2VpcCommonDhcpOptionOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionOutput
}

type SubnetV2VpcCommonDhcpOptionArgs struct {
	DomainNameServers SubnetV2VpcCommonDhcpOptionDomainNameServerArrayInput `pulumi:"domainNameServers"`
}

func (SubnetV2VpcCommonDhcpOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOption)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionArgs) ToSubnetV2VpcCommonDhcpOptionOutput() SubnetV2VpcCommonDhcpOptionOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionArgs) ToSubnetV2VpcCommonDhcpOptionOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionOutput)
}

// SubnetV2VpcCommonDhcpOptionArrayInput is an input type that accepts SubnetV2VpcCommonDhcpOptionArray and SubnetV2VpcCommonDhcpOptionArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionArrayInput` via:
//
//	SubnetV2VpcCommonDhcpOptionArray{ SubnetV2VpcCommonDhcpOptionArgs{...} }
type SubnetV2VpcCommonDhcpOptionArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionArrayOutput() SubnetV2VpcCommonDhcpOptionArrayOutput
	ToSubnetV2VpcCommonDhcpOptionArrayOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionArrayOutput
}

type SubnetV2VpcCommonDhcpOptionArray []SubnetV2VpcCommonDhcpOptionInput

func (SubnetV2VpcCommonDhcpOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOption)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionArray) ToSubnetV2VpcCommonDhcpOptionArrayOutput() SubnetV2VpcCommonDhcpOptionArrayOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionArray) ToSubnetV2VpcCommonDhcpOptionArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOption)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionOutput) ToSubnetV2VpcCommonDhcpOptionOutput() SubnetV2VpcCommonDhcpOptionOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionOutput) ToSubnetV2VpcCommonDhcpOptionOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionOutput) DomainNameServers() SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOption) []SubnetV2VpcCommonDhcpOptionDomainNameServer {
		return v.DomainNameServers
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOption)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionArrayOutput) ToSubnetV2VpcCommonDhcpOptionArrayOutput() SubnetV2VpcCommonDhcpOptionArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionArrayOutput) ToSubnetV2VpcCommonDhcpOptionArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcCommonDhcpOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcCommonDhcpOption {
		return vs[0].([]SubnetV2VpcCommonDhcpOption)[vs[1].(int)]
	}).(SubnetV2VpcCommonDhcpOptionOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServer struct {
	Ipv4s []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6 `pulumi:"ipv6s"`
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerInput is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerArgs and SubnetV2VpcCommonDhcpOptionDomainNameServerOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerInput` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerArgs{...}
type SubnetV2VpcCommonDhcpOptionDomainNameServerInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerOutput
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerOutput
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerArgs struct {
	Ipv4s SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2VpcCommonDhcpOptionDomainNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServer)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerArgs) ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerArgs) ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerOutput)
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerArrayInput is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerArray and SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerArrayInput` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerArray{ SubnetV2VpcCommonDhcpOptionDomainNameServerArgs{...} }
type SubnetV2VpcCommonDhcpOptionDomainNameServerArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerArray []SubnetV2VpcCommonDhcpOptionDomainNameServerInput

func (SubnetV2VpcCommonDhcpOptionDomainNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServer)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerArray) ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerArray) ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServer)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerOutput) Ipv4s() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServer) []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4 {
		return v.Ipv4s
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput)
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerOutput) Ipv6s() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServer) []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6 {
		return v.Ipv6s
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServer)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcCommonDhcpOptionDomainNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcCommonDhcpOptionDomainNameServer {
		return vs[0].([]SubnetV2VpcCommonDhcpOptionDomainNameServer)[vs[1].(int)]
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Input is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args and SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Input` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args{...}
type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Input interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4OutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4OutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4OutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output)
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayInput is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array and SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayInput` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array{ SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args{...} }
type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Input

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4OutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4 {
		return vs[0].([]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4)[vs[1].(int)]
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Input is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args and SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Input` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args{...}
type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Input interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6OutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6OutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6OutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output)
}

// SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayInput is an input type that accepts SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array and SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayInput` via:
//
//	SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array{ SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args{...} }
type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput
	ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutputWithContext(context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array []SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Input

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput {
	return i.ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6OutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6)(nil)).Elem()
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput() SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput) ToSubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6 {
		return vs[0].([]SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6)[vs[1].(int)]
	}).(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output)
}

type SubnetV2VpcExternalSubnet struct {
	ActiveGatewayCount *int                                         `pulumi:"activeGatewayCount"`
	ActiveGatewayNodes []SubnetV2VpcExternalSubnetActiveGatewayNode `pulumi:"activeGatewayNodes"`
	ExternalIps        []SubnetV2VpcExternalSubnetExternalIp        `pulumi:"externalIps"`
	GatewayNodes       []string                                     `pulumi:"gatewayNodes"`
	SubnetReference    *string                                      `pulumi:"subnetReference"`
}

// SubnetV2VpcExternalSubnetInput is an input type that accepts SubnetV2VpcExternalSubnetArgs and SubnetV2VpcExternalSubnetOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetInput` via:
//
//	SubnetV2VpcExternalSubnetArgs{...}
type SubnetV2VpcExternalSubnetInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetOutput() SubnetV2VpcExternalSubnetOutput
	ToSubnetV2VpcExternalSubnetOutputWithContext(context.Context) SubnetV2VpcExternalSubnetOutput
}

type SubnetV2VpcExternalSubnetArgs struct {
	ActiveGatewayCount pulumi.IntPtrInput                                   `pulumi:"activeGatewayCount"`
	ActiveGatewayNodes SubnetV2VpcExternalSubnetActiveGatewayNodeArrayInput `pulumi:"activeGatewayNodes"`
	ExternalIps        SubnetV2VpcExternalSubnetExternalIpArrayInput        `pulumi:"externalIps"`
	GatewayNodes       pulumi.StringArrayInput                              `pulumi:"gatewayNodes"`
	SubnetReference    pulumi.StringPtrInput                                `pulumi:"subnetReference"`
}

func (SubnetV2VpcExternalSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnet)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetArgs) ToSubnetV2VpcExternalSubnetOutput() SubnetV2VpcExternalSubnetOutput {
	return i.ToSubnetV2VpcExternalSubnetOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetArgs) ToSubnetV2VpcExternalSubnetOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetOutput)
}

// SubnetV2VpcExternalSubnetArrayInput is an input type that accepts SubnetV2VpcExternalSubnetArray and SubnetV2VpcExternalSubnetArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetArrayInput` via:
//
//	SubnetV2VpcExternalSubnetArray{ SubnetV2VpcExternalSubnetArgs{...} }
type SubnetV2VpcExternalSubnetArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetArrayOutput() SubnetV2VpcExternalSubnetArrayOutput
	ToSubnetV2VpcExternalSubnetArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetArrayOutput
}

type SubnetV2VpcExternalSubnetArray []SubnetV2VpcExternalSubnetInput

func (SubnetV2VpcExternalSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnet)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetArray) ToSubnetV2VpcExternalSubnetArrayOutput() SubnetV2VpcExternalSubnetArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetArray) ToSubnetV2VpcExternalSubnetArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetArrayOutput)
}

type SubnetV2VpcExternalSubnetOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnet)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetOutput) ToSubnetV2VpcExternalSubnetOutput() SubnetV2VpcExternalSubnetOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetOutput) ToSubnetV2VpcExternalSubnetOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetOutput) ActiveGatewayCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnet) *int { return v.ActiveGatewayCount }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternalSubnetOutput) ActiveGatewayNodes() SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnet) []SubnetV2VpcExternalSubnetActiveGatewayNode {
		return v.ActiveGatewayNodes
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput)
}

func (o SubnetV2VpcExternalSubnetOutput) ExternalIps() SubnetV2VpcExternalSubnetExternalIpArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnet) []SubnetV2VpcExternalSubnetExternalIp { return v.ExternalIps }).(SubnetV2VpcExternalSubnetExternalIpArrayOutput)
}

func (o SubnetV2VpcExternalSubnetOutput) GatewayNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnet) []string { return v.GatewayNodes }).(pulumi.StringArrayOutput)
}

func (o SubnetV2VpcExternalSubnetOutput) SubnetReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnet) *string { return v.SubnetReference }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternalSubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnet)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetArrayOutput) ToSubnetV2VpcExternalSubnetArrayOutput() SubnetV2VpcExternalSubnetArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetArrayOutput) ToSubnetV2VpcExternalSubnetArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnet {
		return vs[0].([]SubnetV2VpcExternalSubnet)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNode struct {
	NodeId          *string                                                   `pulumi:"nodeId"`
	NodeIpAddresses []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress `pulumi:"nodeIpAddresses"`
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeArgs and SubnetV2VpcExternalSubnetActiveGatewayNodeOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeArgs{...}
type SubnetV2VpcExternalSubnetActiveGatewayNodeInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeArgs struct {
	NodeId          pulumi.StringPtrInput                                             `pulumi:"nodeId"`
	NodeIpAddresses SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayInput `pulumi:"nodeIpAddresses"`
}

func (SubnetV2VpcExternalSubnetActiveGatewayNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNode)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeArgs) ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeArgs) ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeOutput)
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeArrayInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeArray and SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeArrayInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeArray{ SubnetV2VpcExternalSubnetActiveGatewayNodeArgs{...} }
type SubnetV2VpcExternalSubnetActiveGatewayNodeArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeArray []SubnetV2VpcExternalSubnetActiveGatewayNodeInput

func (SubnetV2VpcExternalSubnetActiveGatewayNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNode)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeArray) ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeArray) ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNode)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNode) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeOutput) NodeIpAddresses() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNode) []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress {
		return v.NodeIpAddresses
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNode)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetActiveGatewayNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetActiveGatewayNode {
		return vs[0].([]SubnetV2VpcExternalSubnetActiveGatewayNode)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress struct {
	Ipv4s []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 `pulumi:"ipv6s"`
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs{...}
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs struct {
	Ipv4s SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput)
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray{ SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs{...} }
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressInput

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput) Ipv4s() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress) []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
		return v.Ipv4s
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput)
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput) Ipv6s() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress) []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
		return v.Ipv6s
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress {
		return vs[0].([]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddress)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Input is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Input` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args{...}
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Input interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4OutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output)
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array{ SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args{...} }
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Input

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4 {
		return vs[0].([]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Input is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Input` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args{...}
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Input interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6OutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output)
}

// SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayInput is an input type that accepts SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array and SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayInput` via:
//
//	SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array{ SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args{...} }
type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput
	ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array []SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Input

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput() SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput) ToSubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6 {
		return vs[0].([]SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output)
}

type SubnetV2VpcExternalSubnetExternalIp struct {
	Ipv4s []SubnetV2VpcExternalSubnetExternalIpIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2VpcExternalSubnetExternalIpIpv6 `pulumi:"ipv6s"`
}

// SubnetV2VpcExternalSubnetExternalIpInput is an input type that accepts SubnetV2VpcExternalSubnetExternalIpArgs and SubnetV2VpcExternalSubnetExternalIpOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpInput` via:
//
//	SubnetV2VpcExternalSubnetExternalIpArgs{...}
type SubnetV2VpcExternalSubnetExternalIpInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpOutput() SubnetV2VpcExternalSubnetExternalIpOutput
	ToSubnetV2VpcExternalSubnetExternalIpOutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpOutput
}

type SubnetV2VpcExternalSubnetExternalIpArgs struct {
	Ipv4s SubnetV2VpcExternalSubnetExternalIpIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2VpcExternalSubnetExternalIpIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2VpcExternalSubnetExternalIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIp)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpArgs) ToSubnetV2VpcExternalSubnetExternalIpOutput() SubnetV2VpcExternalSubnetExternalIpOutput {
	return i.ToSubnetV2VpcExternalSubnetExternalIpOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpArgs) ToSubnetV2VpcExternalSubnetExternalIpOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpOutput)
}

// SubnetV2VpcExternalSubnetExternalIpArrayInput is an input type that accepts SubnetV2VpcExternalSubnetExternalIpArray and SubnetV2VpcExternalSubnetExternalIpArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpArrayInput` via:
//
//	SubnetV2VpcExternalSubnetExternalIpArray{ SubnetV2VpcExternalSubnetExternalIpArgs{...} }
type SubnetV2VpcExternalSubnetExternalIpArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpArrayOutput() SubnetV2VpcExternalSubnetExternalIpArrayOutput
	ToSubnetV2VpcExternalSubnetExternalIpArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpArrayOutput
}

type SubnetV2VpcExternalSubnetExternalIpArray []SubnetV2VpcExternalSubnetExternalIpInput

func (SubnetV2VpcExternalSubnetExternalIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIp)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpArray) ToSubnetV2VpcExternalSubnetExternalIpArrayOutput() SubnetV2VpcExternalSubnetExternalIpArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetExternalIpArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpArray) ToSubnetV2VpcExternalSubnetExternalIpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpArrayOutput)
}

type SubnetV2VpcExternalSubnetExternalIpOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIp)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpOutput) ToSubnetV2VpcExternalSubnetExternalIpOutput() SubnetV2VpcExternalSubnetExternalIpOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpOutput) ToSubnetV2VpcExternalSubnetExternalIpOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpOutput) Ipv4s() SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIp) []SubnetV2VpcExternalSubnetExternalIpIpv4 { return v.Ipv4s }).(SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput)
}

func (o SubnetV2VpcExternalSubnetExternalIpOutput) Ipv6s() SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIp) []SubnetV2VpcExternalSubnetExternalIpIpv6 { return v.Ipv6s }).(SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput)
}

type SubnetV2VpcExternalSubnetExternalIpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIp)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpArrayOutput() SubnetV2VpcExternalSubnetExternalIpArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetExternalIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetExternalIp {
		return vs[0].([]SubnetV2VpcExternalSubnetExternalIp)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetExternalIpOutput)
}

type SubnetV2VpcExternalSubnetExternalIpIpv4 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternalSubnetExternalIpIpv4Input is an input type that accepts SubnetV2VpcExternalSubnetExternalIpIpv4Args and SubnetV2VpcExternalSubnetExternalIpIpv4Output values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpIpv4Input` via:
//
//	SubnetV2VpcExternalSubnetExternalIpIpv4Args{...}
type SubnetV2VpcExternalSubnetExternalIpIpv4Input interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpIpv4Output() SubnetV2VpcExternalSubnetExternalIpIpv4Output
	ToSubnetV2VpcExternalSubnetExternalIpIpv4OutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4Output
}

type SubnetV2VpcExternalSubnetExternalIpIpv4Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternalSubnetExternalIpIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv4Args) ToSubnetV2VpcExternalSubnetExternalIpIpv4Output() SubnetV2VpcExternalSubnetExternalIpIpv4Output {
	return i.ToSubnetV2VpcExternalSubnetExternalIpIpv4OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv4Args) ToSubnetV2VpcExternalSubnetExternalIpIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpIpv4Output)
}

// SubnetV2VpcExternalSubnetExternalIpIpv4ArrayInput is an input type that accepts SubnetV2VpcExternalSubnetExternalIpIpv4Array and SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpIpv4ArrayInput` via:
//
//	SubnetV2VpcExternalSubnetExternalIpIpv4Array{ SubnetV2VpcExternalSubnetExternalIpIpv4Args{...} }
type SubnetV2VpcExternalSubnetExternalIpIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput
	ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput
}

type SubnetV2VpcExternalSubnetExternalIpIpv4Array []SubnetV2VpcExternalSubnetExternalIpIpv4Input

func (SubnetV2VpcExternalSubnetExternalIpIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIpIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv4Array) ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv4Array) ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput)
}

type SubnetV2VpcExternalSubnetExternalIpIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4Output) ToSubnetV2VpcExternalSubnetExternalIpIpv4Output() SubnetV2VpcExternalSubnetExternalIpIpv4Output {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4Output) ToSubnetV2VpcExternalSubnetExternalIpIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4Output {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIpIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIpIpv4) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIpIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetExternalIpIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetExternalIpIpv4 {
		return vs[0].([]SubnetV2VpcExternalSubnetExternalIpIpv4)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetExternalIpIpv4Output)
}

type SubnetV2VpcExternalSubnetExternalIpIpv6 struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternalSubnetExternalIpIpv6Input is an input type that accepts SubnetV2VpcExternalSubnetExternalIpIpv6Args and SubnetV2VpcExternalSubnetExternalIpIpv6Output values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpIpv6Input` via:
//
//	SubnetV2VpcExternalSubnetExternalIpIpv6Args{...}
type SubnetV2VpcExternalSubnetExternalIpIpv6Input interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpIpv6Output() SubnetV2VpcExternalSubnetExternalIpIpv6Output
	ToSubnetV2VpcExternalSubnetExternalIpIpv6OutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6Output
}

type SubnetV2VpcExternalSubnetExternalIpIpv6Args struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternalSubnetExternalIpIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv6Args) ToSubnetV2VpcExternalSubnetExternalIpIpv6Output() SubnetV2VpcExternalSubnetExternalIpIpv6Output {
	return i.ToSubnetV2VpcExternalSubnetExternalIpIpv6OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv6Args) ToSubnetV2VpcExternalSubnetExternalIpIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpIpv6Output)
}

// SubnetV2VpcExternalSubnetExternalIpIpv6ArrayInput is an input type that accepts SubnetV2VpcExternalSubnetExternalIpIpv6Array and SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternalSubnetExternalIpIpv6ArrayInput` via:
//
//	SubnetV2VpcExternalSubnetExternalIpIpv6Array{ SubnetV2VpcExternalSubnetExternalIpIpv6Args{...} }
type SubnetV2VpcExternalSubnetExternalIpIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput
	ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutputWithContext(context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput
}

type SubnetV2VpcExternalSubnetExternalIpIpv6Array []SubnetV2VpcExternalSubnetExternalIpIpv6Input

func (SubnetV2VpcExternalSubnetExternalIpIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIpIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv6Array) ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput {
	return i.ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternalSubnetExternalIpIpv6Array) ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput)
}

type SubnetV2VpcExternalSubnetExternalIpIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6Output) ToSubnetV2VpcExternalSubnetExternalIpIpv6Output() SubnetV2VpcExternalSubnetExternalIpIpv6Output {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6Output) ToSubnetV2VpcExternalSubnetExternalIpIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6Output {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIpIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternalSubnetExternalIpIpv6) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternalSubnetExternalIpIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput() SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput) ToSubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternalSubnetExternalIpIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternalSubnetExternalIpIpv6 {
		return vs[0].([]SubnetV2VpcExternalSubnetExternalIpIpv6)[vs[1].(int)]
	}).(SubnetV2VpcExternalSubnetExternalIpIpv6Output)
}

type SubnetV2VpcExternallyRoutablePrefix struct {
	Ipv4s []SubnetV2VpcExternallyRoutablePrefixIpv4 `pulumi:"ipv4s"`
	Ipv6s []SubnetV2VpcExternallyRoutablePrefixIpv6 `pulumi:"ipv6s"`
}

// SubnetV2VpcExternallyRoutablePrefixInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixArgs and SubnetV2VpcExternallyRoutablePrefixOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixArgs{...}
type SubnetV2VpcExternallyRoutablePrefixInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixOutput() SubnetV2VpcExternallyRoutablePrefixOutput
	ToSubnetV2VpcExternallyRoutablePrefixOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixOutput
}

type SubnetV2VpcExternallyRoutablePrefixArgs struct {
	Ipv4s SubnetV2VpcExternallyRoutablePrefixIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s SubnetV2VpcExternallyRoutablePrefixIpv6ArrayInput `pulumi:"ipv6s"`
}

func (SubnetV2VpcExternallyRoutablePrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefix)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixArgs) ToSubnetV2VpcExternallyRoutablePrefixOutput() SubnetV2VpcExternallyRoutablePrefixOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixArgs) ToSubnetV2VpcExternallyRoutablePrefixOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixOutput)
}

// SubnetV2VpcExternallyRoutablePrefixArrayInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixArray and SubnetV2VpcExternallyRoutablePrefixArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixArrayInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixArray{ SubnetV2VpcExternallyRoutablePrefixArgs{...} }
type SubnetV2VpcExternallyRoutablePrefixArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixArrayOutput() SubnetV2VpcExternallyRoutablePrefixArrayOutput
	ToSubnetV2VpcExternallyRoutablePrefixArrayOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixArrayOutput
}

type SubnetV2VpcExternallyRoutablePrefixArray []SubnetV2VpcExternallyRoutablePrefixInput

func (SubnetV2VpcExternallyRoutablePrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefix)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixArray) ToSubnetV2VpcExternallyRoutablePrefixArrayOutput() SubnetV2VpcExternallyRoutablePrefixArrayOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixArray) ToSubnetV2VpcExternallyRoutablePrefixArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefix)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixOutput) ToSubnetV2VpcExternallyRoutablePrefixOutput() SubnetV2VpcExternallyRoutablePrefixOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixOutput) ToSubnetV2VpcExternallyRoutablePrefixOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixOutput) Ipv4s() SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefix) []SubnetV2VpcExternallyRoutablePrefixIpv4 { return v.Ipv4s }).(SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput)
}

func (o SubnetV2VpcExternallyRoutablePrefixOutput) Ipv6s() SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefix) []SubnetV2VpcExternallyRoutablePrefixIpv6 { return v.Ipv6s }).(SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefix)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixArrayOutput() SubnetV2VpcExternallyRoutablePrefixArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternallyRoutablePrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternallyRoutablePrefix {
		return vs[0].([]SubnetV2VpcExternallyRoutablePrefix)[vs[1].(int)]
	}).(SubnetV2VpcExternallyRoutablePrefixOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4 struct {
	Ips          []SubnetV2VpcExternallyRoutablePrefixIpv4Ip `pulumi:"ips"`
	PrefixLength *int                                        `pulumi:"prefixLength"`
}

// SubnetV2VpcExternallyRoutablePrefixIpv4Input is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv4Args and SubnetV2VpcExternallyRoutablePrefixIpv4Output values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv4Input` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv4Args{...}
type SubnetV2VpcExternallyRoutablePrefixIpv4Input interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv4Output() SubnetV2VpcExternallyRoutablePrefixIpv4Output
	ToSubnetV2VpcExternallyRoutablePrefixIpv4OutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4Output
}

type SubnetV2VpcExternallyRoutablePrefixIpv4Args struct {
	Ips          SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                  `pulumi:"prefixLength"`
}

func (SubnetV2VpcExternallyRoutablePrefixIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4Args) ToSubnetV2VpcExternallyRoutablePrefixIpv4Output() SubnetV2VpcExternallyRoutablePrefixIpv4Output {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv4OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4Args) ToSubnetV2VpcExternallyRoutablePrefixIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv4Output)
}

// SubnetV2VpcExternallyRoutablePrefixIpv4ArrayInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv4Array and SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv4ArrayInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv4Array{ SubnetV2VpcExternallyRoutablePrefixIpv4Args{...} }
type SubnetV2VpcExternallyRoutablePrefixIpv4ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv4Array []SubnetV2VpcExternallyRoutablePrefixIpv4Input

func (SubnetV2VpcExternallyRoutablePrefixIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv4)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4Array) ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4Array) ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4Output) ToSubnetV2VpcExternallyRoutablePrefixIpv4Output() SubnetV2VpcExternallyRoutablePrefixIpv4Output {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4Output) ToSubnetV2VpcExternallyRoutablePrefixIpv4OutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4Output {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4Output) Ips() SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv4) []SubnetV2VpcExternallyRoutablePrefixIpv4Ip {
		return v.Ips
	}).(SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput)
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv4) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv4)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternallyRoutablePrefixIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternallyRoutablePrefixIpv4 {
		return vs[0].([]SubnetV2VpcExternallyRoutablePrefixIpv4)[vs[1].(int)]
	}).(SubnetV2VpcExternallyRoutablePrefixIpv4Output)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternallyRoutablePrefixIpv4IpInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs and SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv4IpInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs{...}
type SubnetV2VpcExternallyRoutablePrefixIpv4IpInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4Ip)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput)
}

// SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv4IpArray and SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv4IpArray{ SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs{...} }
type SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv4IpArray []SubnetV2VpcExternallyRoutablePrefixIpv4IpInput

func (SubnetV2VpcExternallyRoutablePrefixIpv4IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv4Ip)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4IpArray) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv4IpArray) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4Ip)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv4Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv4Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv4Ip)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternallyRoutablePrefixIpv4Ip {
		return vs[0].([]SubnetV2VpcExternallyRoutablePrefixIpv4Ip)[vs[1].(int)]
	}).(SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6 struct {
	Ips          []SubnetV2VpcExternallyRoutablePrefixIpv6Ip `pulumi:"ips"`
	PrefixLength *int                                        `pulumi:"prefixLength"`
}

// SubnetV2VpcExternallyRoutablePrefixIpv6Input is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv6Args and SubnetV2VpcExternallyRoutablePrefixIpv6Output values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv6Input` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv6Args{...}
type SubnetV2VpcExternallyRoutablePrefixIpv6Input interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv6Output() SubnetV2VpcExternallyRoutablePrefixIpv6Output
	ToSubnetV2VpcExternallyRoutablePrefixIpv6OutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6Output
}

type SubnetV2VpcExternallyRoutablePrefixIpv6Args struct {
	Ips          SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayInput `pulumi:"ips"`
	PrefixLength pulumi.IntPtrInput                                  `pulumi:"prefixLength"`
}

func (SubnetV2VpcExternallyRoutablePrefixIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6Args) ToSubnetV2VpcExternallyRoutablePrefixIpv6Output() SubnetV2VpcExternallyRoutablePrefixIpv6Output {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv6OutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6Args) ToSubnetV2VpcExternallyRoutablePrefixIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv6Output)
}

// SubnetV2VpcExternallyRoutablePrefixIpv6ArrayInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv6Array and SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv6ArrayInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv6Array{ SubnetV2VpcExternallyRoutablePrefixIpv6Args{...} }
type SubnetV2VpcExternallyRoutablePrefixIpv6ArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv6Array []SubnetV2VpcExternallyRoutablePrefixIpv6Input

func (SubnetV2VpcExternallyRoutablePrefixIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv6)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6Array) ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6Array) ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6Output struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6Output) ToSubnetV2VpcExternallyRoutablePrefixIpv6Output() SubnetV2VpcExternallyRoutablePrefixIpv6Output {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6Output) ToSubnetV2VpcExternallyRoutablePrefixIpv6OutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6Output {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6Output) Ips() SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv6) []SubnetV2VpcExternallyRoutablePrefixIpv6Ip {
		return v.Ips
	}).(SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput)
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6Output) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv6) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv6)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternallyRoutablePrefixIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternallyRoutablePrefixIpv6 {
		return vs[0].([]SubnetV2VpcExternallyRoutablePrefixIpv6)[vs[1].(int)]
	}).(SubnetV2VpcExternallyRoutablePrefixIpv6Output)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6Ip struct {
	PrefixLength *int    `pulumi:"prefixLength"`
	Value        *string `pulumi:"value"`
}

// SubnetV2VpcExternallyRoutablePrefixIpv6IpInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs and SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv6IpInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs{...}
type SubnetV2VpcExternallyRoutablePrefixIpv6IpInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs struct {
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6Ip)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput)
}

// SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayInput is an input type that accepts SubnetV2VpcExternallyRoutablePrefixIpv6IpArray and SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayInput` via:
//
//	SubnetV2VpcExternallyRoutablePrefixIpv6IpArray{ SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs{...} }
type SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput
	ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutputWithContext(context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput
}

type SubnetV2VpcExternallyRoutablePrefixIpv6IpArray []SubnetV2VpcExternallyRoutablePrefixIpv6IpInput

func (SubnetV2VpcExternallyRoutablePrefixIpv6IpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv6Ip)(nil)).Elem()
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6IpArray) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput {
	return i.ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcExternallyRoutablePrefixIpv6IpArray) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6Ip)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv6Ip) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcExternallyRoutablePrefixIpv6Ip) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcExternallyRoutablePrefixIpv6Ip)(nil)).Elem()
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput() SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput) ToSubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutputWithContext(ctx context.Context) SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput {
	return o
}

func (o SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcExternallyRoutablePrefixIpv6Ip {
		return vs[0].([]SubnetV2VpcExternallyRoutablePrefixIpv6Ip)[vs[1].(int)]
	}).(SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput)
}

type SubnetV2VpcLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// SubnetV2VpcLinkInput is an input type that accepts SubnetV2VpcLinkArgs and SubnetV2VpcLinkOutput values.
// You can construct a concrete instance of `SubnetV2VpcLinkInput` via:
//
//	SubnetV2VpcLinkArgs{...}
type SubnetV2VpcLinkInput interface {
	pulumi.Input

	ToSubnetV2VpcLinkOutput() SubnetV2VpcLinkOutput
	ToSubnetV2VpcLinkOutputWithContext(context.Context) SubnetV2VpcLinkOutput
}

type SubnetV2VpcLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (SubnetV2VpcLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcLink)(nil)).Elem()
}

func (i SubnetV2VpcLinkArgs) ToSubnetV2VpcLinkOutput() SubnetV2VpcLinkOutput {
	return i.ToSubnetV2VpcLinkOutputWithContext(context.Background())
}

func (i SubnetV2VpcLinkArgs) ToSubnetV2VpcLinkOutputWithContext(ctx context.Context) SubnetV2VpcLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcLinkOutput)
}

// SubnetV2VpcLinkArrayInput is an input type that accepts SubnetV2VpcLinkArray and SubnetV2VpcLinkArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcLinkArrayInput` via:
//
//	SubnetV2VpcLinkArray{ SubnetV2VpcLinkArgs{...} }
type SubnetV2VpcLinkArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcLinkArrayOutput() SubnetV2VpcLinkArrayOutput
	ToSubnetV2VpcLinkArrayOutputWithContext(context.Context) SubnetV2VpcLinkArrayOutput
}

type SubnetV2VpcLinkArray []SubnetV2VpcLinkInput

func (SubnetV2VpcLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcLink)(nil)).Elem()
}

func (i SubnetV2VpcLinkArray) ToSubnetV2VpcLinkArrayOutput() SubnetV2VpcLinkArrayOutput {
	return i.ToSubnetV2VpcLinkArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcLinkArray) ToSubnetV2VpcLinkArrayOutputWithContext(ctx context.Context) SubnetV2VpcLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcLinkArrayOutput)
}

type SubnetV2VpcLinkOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcLink)(nil)).Elem()
}

func (o SubnetV2VpcLinkOutput) ToSubnetV2VpcLinkOutput() SubnetV2VpcLinkOutput {
	return o
}

func (o SubnetV2VpcLinkOutput) ToSubnetV2VpcLinkOutputWithContext(ctx context.Context) SubnetV2VpcLinkOutput {
	return o
}

func (o SubnetV2VpcLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcLinkArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcLink)(nil)).Elem()
}

func (o SubnetV2VpcLinkArrayOutput) ToSubnetV2VpcLinkArrayOutput() SubnetV2VpcLinkArrayOutput {
	return o
}

func (o SubnetV2VpcLinkArrayOutput) ToSubnetV2VpcLinkArrayOutputWithContext(ctx context.Context) SubnetV2VpcLinkArrayOutput {
	return o
}

func (o SubnetV2VpcLinkArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcLink {
		return vs[0].([]SubnetV2VpcLink)[vs[1].(int)]
	}).(SubnetV2VpcLinkOutput)
}

type SubnetV2VpcMetadata struct {
	CategoryIds        [][]interface{} `pulumi:"categoryIds"`
	OwnerReferenceId   *string         `pulumi:"ownerReferenceId"`
	OwnerUserName      *string         `pulumi:"ownerUserName"`
	ProjectName        *string         `pulumi:"projectName"`
	ProjectReferenceId *string         `pulumi:"projectReferenceId"`
}

// SubnetV2VpcMetadataInput is an input type that accepts SubnetV2VpcMetadataArgs and SubnetV2VpcMetadataOutput values.
// You can construct a concrete instance of `SubnetV2VpcMetadataInput` via:
//
//	SubnetV2VpcMetadataArgs{...}
type SubnetV2VpcMetadataInput interface {
	pulumi.Input

	ToSubnetV2VpcMetadataOutput() SubnetV2VpcMetadataOutput
	ToSubnetV2VpcMetadataOutputWithContext(context.Context) SubnetV2VpcMetadataOutput
}

type SubnetV2VpcMetadataArgs struct {
	CategoryIds        pulumi.ArrayArrayInput `pulumi:"categoryIds"`
	OwnerReferenceId   pulumi.StringPtrInput  `pulumi:"ownerReferenceId"`
	OwnerUserName      pulumi.StringPtrInput  `pulumi:"ownerUserName"`
	ProjectName        pulumi.StringPtrInput  `pulumi:"projectName"`
	ProjectReferenceId pulumi.StringPtrInput  `pulumi:"projectReferenceId"`
}

func (SubnetV2VpcMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcMetadata)(nil)).Elem()
}

func (i SubnetV2VpcMetadataArgs) ToSubnetV2VpcMetadataOutput() SubnetV2VpcMetadataOutput {
	return i.ToSubnetV2VpcMetadataOutputWithContext(context.Background())
}

func (i SubnetV2VpcMetadataArgs) ToSubnetV2VpcMetadataOutputWithContext(ctx context.Context) SubnetV2VpcMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcMetadataOutput)
}

// SubnetV2VpcMetadataArrayInput is an input type that accepts SubnetV2VpcMetadataArray and SubnetV2VpcMetadataArrayOutput values.
// You can construct a concrete instance of `SubnetV2VpcMetadataArrayInput` via:
//
//	SubnetV2VpcMetadataArray{ SubnetV2VpcMetadataArgs{...} }
type SubnetV2VpcMetadataArrayInput interface {
	pulumi.Input

	ToSubnetV2VpcMetadataArrayOutput() SubnetV2VpcMetadataArrayOutput
	ToSubnetV2VpcMetadataArrayOutputWithContext(context.Context) SubnetV2VpcMetadataArrayOutput
}

type SubnetV2VpcMetadataArray []SubnetV2VpcMetadataInput

func (SubnetV2VpcMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcMetadata)(nil)).Elem()
}

func (i SubnetV2VpcMetadataArray) ToSubnetV2VpcMetadataArrayOutput() SubnetV2VpcMetadataArrayOutput {
	return i.ToSubnetV2VpcMetadataArrayOutputWithContext(context.Background())
}

func (i SubnetV2VpcMetadataArray) ToSubnetV2VpcMetadataArrayOutputWithContext(ctx context.Context) SubnetV2VpcMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetV2VpcMetadataArrayOutput)
}

type SubnetV2VpcMetadataOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetV2VpcMetadata)(nil)).Elem()
}

func (o SubnetV2VpcMetadataOutput) ToSubnetV2VpcMetadataOutput() SubnetV2VpcMetadataOutput {
	return o
}

func (o SubnetV2VpcMetadataOutput) ToSubnetV2VpcMetadataOutputWithContext(ctx context.Context) SubnetV2VpcMetadataOutput {
	return o
}

func (o SubnetV2VpcMetadataOutput) CategoryIds() pulumi.ArrayArrayOutput {
	return o.ApplyT(func(v SubnetV2VpcMetadata) [][]interface{} { return v.CategoryIds }).(pulumi.ArrayArrayOutput)
}

func (o SubnetV2VpcMetadataOutput) OwnerReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcMetadata) *string { return v.OwnerReferenceId }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcMetadataOutput) OwnerUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcMetadata) *string { return v.OwnerUserName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcMetadataOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcMetadata) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o SubnetV2VpcMetadataOutput) ProjectReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetV2VpcMetadata) *string { return v.ProjectReferenceId }).(pulumi.StringPtrOutput)
}

type SubnetV2VpcMetadataArrayOutput struct{ *pulumi.OutputState }

func (SubnetV2VpcMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetV2VpcMetadata)(nil)).Elem()
}

func (o SubnetV2VpcMetadataArrayOutput) ToSubnetV2VpcMetadataArrayOutput() SubnetV2VpcMetadataArrayOutput {
	return o
}

func (o SubnetV2VpcMetadataArrayOutput) ToSubnetV2VpcMetadataArrayOutputWithContext(ctx context.Context) SubnetV2VpcMetadataArrayOutput {
	return o
}

func (o SubnetV2VpcMetadataArrayOutput) Index(i pulumi.IntInput) SubnetV2VpcMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetV2VpcMetadata {
		return vs[0].([]SubnetV2VpcMetadata)[vs[1].(int)]
	}).(SubnetV2VpcMetadataOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetailInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotPropertyInput)(nil)).Elem(), NdbDatabaseSnapshotPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotPropertyArrayInput)(nil)).Elem(), NdbDatabaseSnapshotPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotTagInput)(nil)).Elem(), NdbDatabaseSnapshotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotTagArrayInput)(nil)).Elem(), NdbDatabaseSnapshotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTagInput)(nil)).Elem(), NdbDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTagArrayInput)(nil)).Elem(), NdbDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineInput)(nil)).Elem(), NdbDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineTagInput)(nil)).Elem(), NdbDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoInput)(nil)).Elem(), NdbDatabaseTimemachineinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoPtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoTagInput)(nil)).Elem(), NdbDatabaseTimemachineinfoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoTagArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmCredentialInput)(nil)).Elem(), NdbDbserverVmCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmCredentialArrayInput)(nil)).Elem(), NdbDbserverVmCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksPtrInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTaskInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTaskArrayInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPostgresDatabaseInput)(nil)).Elem(), NdbDbserverVmPostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPostgresDatabaseArrayInput)(nil)).Elem(), NdbDbserverVmPostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPropertyInput)(nil)).Elem(), NdbDbserverVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPropertyArrayInput)(nil)).Elem(), NdbDbserverVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmTagInput)(nil)).Elem(), NdbDbserverVmTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmTagArrayInput)(nil)).Elem(), NdbDbserverVmTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInput)(nil)).Elem(), NdbLinkedDatabasesInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoArrayInput)(nil)).Elem(), NdbLinkedDatabasesInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInfoInput)(nil)).Elem(), NdbLinkedDatabasesInfoInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInfoArrayInput)(nil)).Elem(), NdbLinkedDatabasesInfoInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPropertyInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTagInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTagArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskTaskInput)(nil)).Elem(), NdbMaintenanceTaskTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskTaskArrayInput)(nil)).Elem(), NdbMaintenanceTaskTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPropertyInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTagInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTagArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowPropertyInput)(nil)).Elem(), NdbMaintenanceWindowPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowPropertyArrayInput)(nil)).Elem(), NdbMaintenanceWindowPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowScheduleInput)(nil)).Elem(), NdbMaintenanceWindowScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowScheduleArrayInput)(nil)).Elem(), NdbMaintenanceWindowScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowTagInput)(nil)).Elem(), NdbMaintenanceWindowTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowTagArrayInput)(nil)).Elem(), NdbMaintenanceWindowTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolInput)(nil)).Elem(), NdbNetworkIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolArrayInput)(nil)).Elem(), NdbNetworkIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolAddressInput)(nil)).Elem(), NdbNetworkIpPoolAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolAddressArrayInput)(nil)).Elem(), NdbNetworkIpPoolAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertiesMapInput)(nil)).Elem(), NdbNetworkPropertiesMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertiesMapArrayInput)(nil)).Elem(), NdbNetworkPropertiesMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertyInput)(nil)).Elem(), NdbNetworkPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertyArrayInput)(nil)).Elem(), NdbNetworkPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileClusterAvailabilityInput)(nil)).Elem(), NdbProfileClusterAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileClusterAvailabilityArrayInput)(nil)).Elem(), NdbProfileClusterAvailabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileComputeProfileInput)(nil)).Elem(), NdbProfileComputeProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileComputeProfileArrayInput)(nil)).Elem(), NdbProfileComputeProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfileInput)(nil)).Elem(), NdbProfileDatabaseParameterProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfileArrayInput)(nil)).Elem(), NdbProfileDatabaseParameterProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileDatabaseParameterProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileInput)(nil)).Elem(), NdbProfileNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileArrayInput)(nil)).Elem(), NdbProfileNetworkProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociationInput)(nil)).Elem(), NdbProfileNetworkProfileVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociationArrayInput)(nil)).Elem(), NdbProfileNetworkProfileVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfileInput)(nil)).Elem(), NdbProfileSoftwareProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePtrInput)(nil)).Elem(), NdbProfileSoftwareProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileSoftwareProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileSoftwareProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionInput)(nil)).Elem(), NdbProfileVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionArrayInput)(nil)).Elem(), NdbProfileVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionPropertyInput)(nil)).Elem(), NdbProfileVersionPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionPropertyArrayInput)(nil)).Elem(), NdbProfileVersionPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationArrayInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationPropertyInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationPropertyArrayInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseActionargumentInput)(nil)).Elem(), NdbRegisterDatabaseActionargumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseActionargumentArrayInput)(nil)).Elem(), NdbRegisterDatabaseActionargumentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfoInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodePropertyInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTagInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoInput)(nil)).Elem(), NdbRegisterDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseArrayInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfoInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePostgressInfoInput)(nil)).Elem(), NdbRegisterDatabasePostgressInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePostgressInfoArrayInput)(nil)).Elem(), NdbRegisterDatabasePostgressInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePropertyInput)(nil)).Elem(), NdbRegisterDatabasePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabasePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTagInput)(nil)).Elem(), NdbRegisterDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoPtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTagInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTagInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverCredentialInput)(nil)).Elem(), NdbRegisterDbserverCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverCredentialArrayInput)(nil)).Elem(), NdbRegisterDbserverCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPostgresDatabaseInput)(nil)).Elem(), NdbRegisterDbserverPostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPostgresDatabaseArrayInput)(nil)).Elem(), NdbRegisterDbserverPostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPropertyInput)(nil)).Elem(), NdbRegisterDbserverPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPropertyArrayInput)(nil)).Elem(), NdbRegisterDbserverPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverTagInput)(nil)).Elem(), NdbRegisterDbserverTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverTagArrayInput)(nil)).Elem(), NdbRegisterDbserverTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfoInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodePropertyInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTagInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTagArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoInput)(nil)).Elem(), NdbScaleDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseArrayInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfoInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabasePropertyInput)(nil)).Elem(), NdbScaleDatabasePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabasePropertyArrayInput)(nil)).Elem(), NdbScaleDatabasePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTagInput)(nil)).Elem(), NdbScaleDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTagArrayInput)(nil)).Elem(), NdbScaleDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbScaleDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineTagInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabaseInput)(nil)).Elem(), NdbSoftwareVersionProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbSoftwareVersionProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePropertyInput)(nil)).Elem(), NdbSoftwareVersionProfilePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePropertyArrayInput)(nil)).Elem(), NdbSoftwareVersionProfilePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationArrayInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanMetadataInput)(nil)).Elem(), NdbStretchedVlanMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanMetadataPtrInput)(nil)).Elem(), NdbStretchedVlanMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListInput)(nil)).Elem(), NdbStretchedVlanVlansListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMapInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertiesMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMapArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertiesMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertyInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertyArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2LinkInput)(nil)).Elem(), NetworkSecurityPolicyV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2LinkArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleLinkInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleLinkArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayInput)(nil)).Elem(), NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleTargetGroupFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleTargetGroupFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleCategoryInput)(nil)).Elem(), NetworkSecurityRuleCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleCategoryArrayInput)(nil)).Elem(), NetworkSecurityRuleCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2CredentialInput)(nil)).Elem(), NgtInstallationV2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2CredentialPtrInput)(nil)).Elem(), NgtInstallationV2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2RebootPreferenceInput)(nil)).Elem(), NgtInstallationV2RebootPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2RebootPreferencePtrInput)(nil)).Elem(), NgtInstallationV2RebootPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2RebootPreferenceScheduleInput)(nil)).Elem(), NgtInstallationV2RebootPreferenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtInstallationV2RebootPreferenceSchedulePtrInput)(nil)).Elem(), NgtInstallationV2RebootPreferenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtUpgradeV2RebootPreferenceInput)(nil)).Elem(), NgtUpgradeV2RebootPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtUpgradeV2RebootPreferencePtrInput)(nil)).Elem(), NgtUpgradeV2RebootPreferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtUpgradeV2RebootPreferenceScheduleInput)(nil)).Elem(), NgtUpgradeV2RebootPreferenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NgtUpgradeV2RebootPreferenceSchedulePtrInput)(nil)).Elem(), NgtUpgradeV2RebootPreferenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrDestinationInput)(nil)).Elem(), PbrDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrDestinationPtrInput)(nil)).Elem(), PbrDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersInput)(nil)).Elem(), PbrProtocolParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersPtrInput)(nil)).Elem(), PbrProtocolParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersIcmpInput)(nil)).Elem(), PbrProtocolParametersIcmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersIcmpPtrInput)(nil)).Elem(), PbrProtocolParametersIcmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpInput)(nil)).Elem(), PbrProtocolParametersTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpPtrInput)(nil)).Elem(), PbrProtocolParametersTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeListInput)(nil)).Elem(), PbrProtocolParametersTcpDestinationPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersTcpDestinationPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeListInput)(nil)).Elem(), PbrProtocolParametersTcpSourcePortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersTcpSourcePortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpInput)(nil)).Elem(), PbrProtocolParametersUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpPtrInput)(nil)).Elem(), PbrProtocolParametersUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeListInput)(nil)).Elem(), PbrProtocolParametersUdpDestinationPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersUdpDestinationPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeListInput)(nil)).Elem(), PbrProtocolParametersUdpSourcePortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersUdpSourcePortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrSourceInput)(nil)).Elem(), PbrSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrSourcePtrInput)(nil)).Elem(), PbrSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2LinkInput)(nil)).Elem(), PbrV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2LinkArrayInput)(nil)).Elem(), PbrV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2MetadataInput)(nil)).Elem(), PbrV2MetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2MetadataArrayInput)(nil)).Elem(), PbrV2MetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyInput)(nil)).Elem(), PbrV2PolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyArrayInput)(nil)).Elem(), PbrV2PolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionInput)(nil)).Elem(), PbrV2PolicyPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressInput)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionNexthopIpAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchInput)(nil)).Elem(), PbrV2PolicyPolicyMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Input)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Input)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayInput)(nil)).Elem(), PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2VpcInput)(nil)).Elem(), PbrV2VpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrV2VpcArrayInput)(nil)).Elem(), PbrV2VpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigInput)(nil)).Elem(), PcRegistrationV2ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigArrayInput)(nil)).Elem(), PcRegistrationV2ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigInput)(nil)).Elem(), PcRegistrationV2ConfigBootstrapConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigArrayInput)(nil)).Elem(), PcRegistrationV2ConfigBootstrapConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoInput)(nil)).Elem(), PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayInput)(nil)).Elem(), PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBuildInfoInput)(nil)).Elem(), PcRegistrationV2ConfigBuildInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigBuildInfoArrayInput)(nil)).Elem(), PcRegistrationV2ConfigBuildInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigResourceConfigInput)(nil)).Elem(), PcRegistrationV2ConfigResourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2ConfigResourceConfigArrayInput)(nil)).Elem(), PcRegistrationV2ConfigResourceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2LinkInput)(nil)).Elem(), PcRegistrationV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2LinkArrayInput)(nil)).Elem(), PcRegistrationV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkInput)(nil)).Elem(), PcRegistrationV2NetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkArrayInput)(nil)).Elem(), PcRegistrationV2NetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressInput)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalAddressIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerFqdnInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerFqdnArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkNameServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkNameServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNameServerIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNameServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerFqdnInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerFqdnArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv4Input)(nil)).Elem(), PcRegistrationV2NetworkNtpServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv6Input)(nil)).Elem(), PcRegistrationV2NetworkNtpServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2NetworkNtpServerIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2NetworkNtpServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterInput)(nil)).Elem(), PcRegistrationV2RemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Input)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Input)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterClusterReferenceInput)(nil)).Elem(), PcRegistrationV2RemoteClusterClusterReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterClusterReferencePtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterClusterReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Input)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Input)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrInput)(nil)).Elem(), PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAccountReferenceListInput)(nil)).Elem(), ProjectAccountReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAccountReferenceListArrayInput)(nil)).Elem(), ProjectAccountReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpInput)(nil)).Elem(), ProjectAcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpArrayInput)(nil)).Elem(), ProjectAcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListInput)(nil)).Elem(), ProjectAcpContextFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpRoleReferenceInput)(nil)).Elem(), ProjectAcpRoleReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserGroupReferenceListInput)(nil)).Elem(), ProjectAcpUserGroupReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserGroupReferenceListArrayInput)(nil)).Elem(), ProjectAcpUserGroupReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserReferenceListInput)(nil)).Elem(), ProjectAcpUserReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserReferenceListArrayInput)(nil)).Elem(), ProjectAcpUserReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCategoryInput)(nil)).Elem(), ProjectCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCategoryArrayInput)(nil)).Elem(), ProjectCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectClusterReferenceListInput)(nil)).Elem(), ProjectClusterReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectClusterReferenceListArrayInput)(nil)).Elem(), ProjectClusterReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultEnvironmentReferenceInput)(nil)).Elem(), ProjectDefaultEnvironmentReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultEnvironmentReferencePtrInput)(nil)).Elem(), ProjectDefaultEnvironmentReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultSubnetReferenceInput)(nil)).Elem(), ProjectDefaultSubnetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultSubnetReferencePtrInput)(nil)).Elem(), ProjectDefaultSubnetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentReferenceListInput)(nil)).Elem(), ProjectEnvironmentReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentReferenceListArrayInput)(nil)).Elem(), ProjectEnvironmentReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalNetworkListInput)(nil)).Elem(), ProjectExternalNetworkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalNetworkListArrayInput)(nil)).Elem(), ProjectExternalNetworkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalUserGroupReferenceListInput)(nil)).Elem(), ProjectExternalUserGroupReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalUserGroupReferenceListArrayInput)(nil)).Elem(), ProjectExternalUserGroupReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainInput)(nil)).Elem(), ProjectResourceDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainPtrInput)(nil)).Elem(), ProjectResourceDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainResourceInput)(nil)).Elem(), ProjectResourceDomainResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainResourceArrayInput)(nil)).Elem(), ProjectResourceDomainResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSubnetReferenceListInput)(nil)).Elem(), ProjectSubnetReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSubnetReferenceListArrayInput)(nil)).Elem(), ProjectSubnetReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTunnelReferenceListInput)(nil)).Elem(), ProjectTunnelReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTunnelReferenceListArrayInput)(nil)).Elem(), ProjectTunnelReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListInput)(nil)).Elem(), ProjectUserGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListArrayInput)(nil)).Elem(), ProjectUserGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOusInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceOusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOusArrayInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceOusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroupInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroupArrayInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListSamlUserGroupInput)(nil)).Elem(), ProjectUserGroupListSamlUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListSamlUserGroupArrayInput)(nil)).Elem(), ProjectUserGroupListSamlUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListInput)(nil)).Elem(), ProjectUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListArrayInput)(nil)).Elem(), ProjectUserListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserPtrInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserInput)(nil)).Elem(), ProjectUserListIdentityProviderUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserPtrInput)(nil)).Elem(), ProjectUserListIdentityProviderUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReferenceInput)(nil)).Elem(), ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput)(nil)).Elem(), ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserReferenceListInput)(nil)).Elem(), ProjectUserReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserReferenceListArrayInput)(nil)).Elem(), ProjectUserReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcReferenceListInput)(nil)).Elem(), ProjectVpcReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcReferenceListArrayInput)(nil)).Elem(), ProjectVpcReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListArrayInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryInput)(nil)).Elem(), ProtectionRuleCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryArrayInput)(nil)).Elem(), ProtectionRuleCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterInput)(nil)).Elem(), ProtectionRuleCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterPtrInput)(nil)).Elem(), ProtectionRuleCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterParamInput)(nil)).Elem(), ProtectionRuleCategoryFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterParamArrayInput)(nil)).Elem(), ProtectionRuleCategoryFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneListInput)(nil)).Elem(), ProtectionRuleOrderedAvailabilityZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneListArrayInput)(nil)).Elem(), ProtectionRuleOrderedAvailabilityZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOwnerReferenceInput)(nil)).Elem(), ProtectionRuleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOwnerReferencePtrInput)(nil)).Elem(), ProtectionRuleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleProjectReferenceInput)(nil)).Elem(), ProtectionRuleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleProjectReferencePtrInput)(nil)).Elem(), ProtectionRuleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanCategoryInput)(nil)).Elem(), RecoveryPlanCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanCategoryArrayInput)(nil)).Elem(), RecoveryPlanCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanOwnerReferenceInput)(nil)).Elem(), RecoveryPlanOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanOwnerReferencePtrInput)(nil)).Elem(), RecoveryPlanOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersInput)(nil)).Elem(), RecoveryPlanParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersPtrInput)(nil)).Elem(), RecoveryPlanParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanProjectReferenceInput)(nil)).Elem(), RecoveryPlanProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanProjectReferencePtrInput)(nil)).Elem(), RecoveryPlanProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListInput)(nil)).Elem(), RecoveryPlanStageListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListArrayInput)(nil)).Elem(), RecoveryPlanStageListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkInput)(nil)).Elem(), RecoveryPlanStageListStageWorkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesPtrInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayInput)(nil)).Elem(), RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideInput)(nil)).Elem(), RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayInput)(nil)).Elem(), RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideInput)(nil)).Elem(), RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayInput)(nil)).Elem(), RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecInput)(nil)).Elem(), RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayInput)(nil)).Elem(), RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2LinkInput)(nil)).Elem(), RecoveryPointsV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2LinkArrayInput)(nil)).Elem(), RecoveryPointsV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2LocationReferenceInput)(nil)).Elem(), RecoveryPointsV2LocationReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2LocationReferenceArrayInput)(nil)).Elem(), RecoveryPointsV2LocationReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointArrayInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointDiskRecoveryPointInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointLinkInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VmRecoveryPointLinkArrayInput)(nil)).Elem(), RecoveryPointsV2VmRecoveryPointLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointArrayInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointLinkInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayInput)(nil)).Elem(), RecoveryPointsV2VolumeGroupRecoveryPointLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleCategoryInput)(nil)).Elem(), RoleCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleCategoryArrayInput)(nil)).Elem(), RoleCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleOwnerReferenceInput)(nil)).Elem(), RoleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleOwnerReferencePtrInput)(nil)).Elem(), RoleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionReferenceListInput)(nil)).Elem(), RolePermissionReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionReferenceListArrayInput)(nil)).Elem(), RolePermissionReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleProjectReferenceInput)(nil)).Elem(), RoleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleProjectReferencePtrInput)(nil)).Elem(), RoleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesV2LinkInput)(nil)).Elem(), RolesV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesV2LinkArrayInput)(nil)).Elem(), RolesV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationInput)(nil)).Elem(), RoutesV2DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationPtrInput)(nil)).Elem(), RoutesV2DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv4Input)(nil)).Elem(), RoutesV2DestinationIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv4PtrInput)(nil)).Elem(), RoutesV2DestinationIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv4IpInput)(nil)).Elem(), RoutesV2DestinationIpv4IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv4IpPtrInput)(nil)).Elem(), RoutesV2DestinationIpv4IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv6Input)(nil)).Elem(), RoutesV2DestinationIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv6PtrInput)(nil)).Elem(), RoutesV2DestinationIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv6IpInput)(nil)).Elem(), RoutesV2DestinationIpv6IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2DestinationIpv6IpPtrInput)(nil)).Elem(), RoutesV2DestinationIpv6IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2LinkInput)(nil)).Elem(), RoutesV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2LinkArrayInput)(nil)).Elem(), RoutesV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2MetadataInput)(nil)).Elem(), RoutesV2MetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2MetadataPtrInput)(nil)).Elem(), RoutesV2MetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopInput)(nil)).Elem(), RoutesV2NextHopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopPtrInput)(nil)).Elem(), RoutesV2NextHopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressInput)(nil)).Elem(), RoutesV2NextHopNextHopIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressArrayInput)(nil)).Elem(), RoutesV2NextHopNextHopIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv4Input)(nil)).Elem(), RoutesV2NextHopNextHopIpAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesV2NextHopNextHopIpAddressIpv6Input)(nil)).Elem(), RoutesV2NextHopNextHopIpAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlIdentityProvidersV2IdpMetadataInput)(nil)).Elem(), SamlIdentityProvidersV2IdpMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlIdentityProvidersV2IdpMetadataArrayInput)(nil)).Elem(), SamlIdentityProvidersV2IdpMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListInput)(nil)).Elem(), ServiceGroupServiceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListArrayInput)(nil)).Elem(), ServiceGroupServiceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListIcmpTypeCodeListInput)(nil)).Elem(), ServiceGroupServiceListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListIcmpTypeCodeListArrayInput)(nil)).Elem(), ServiceGroupServiceListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListTcpPortRangeListInput)(nil)).Elem(), ServiceGroupServiceListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListTcpPortRangeListArrayInput)(nil)).Elem(), ServiceGroupServiceListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListUdpPortRangeListInput)(nil)).Elem(), ServiceGroupServiceListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupServiceListUdpPortRangeListArrayInput)(nil)).Elem(), ServiceGroupServiceListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2IcmpServiceInput)(nil)).Elem(), ServiceGroupsV2IcmpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2IcmpServiceArrayInput)(nil)).Elem(), ServiceGroupsV2IcmpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2LinkInput)(nil)).Elem(), ServiceGroupsV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2LinkArrayInput)(nil)).Elem(), ServiceGroupsV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2TcpServiceInput)(nil)).Elem(), ServiceGroupsV2TcpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2TcpServiceArrayInput)(nil)).Elem(), ServiceGroupsV2TcpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2UdpServiceInput)(nil)).Elem(), ServiceGroupsV2UdpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupsV2UdpServiceArrayInput)(nil)).Elem(), ServiceGroupsV2UdpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticRoutesDefaultRouteNexthopInput)(nil)).Elem(), StaticRoutesDefaultRouteNexthopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticRoutesDefaultRouteNexthopArrayInput)(nil)).Elem(), StaticRoutesDefaultRouteNexthopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticRoutesStaticRoutesListInput)(nil)).Elem(), StaticRoutesStaticRoutesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticRoutesStaticRoutesListArrayInput)(nil)).Elem(), StaticRoutesStaticRoutesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2LinkInput)(nil)).Elem(), StorageContainersV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2LinkArrayInput)(nil)).Elem(), StorageContainersV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressArrayInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressFqdnInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressFqdnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressFqdnArrayInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressFqdnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv4Input)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv4ArrayInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv6Input)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageContainersV2NfsWhitelistAddressIpv6ArrayInput)(nil)).Elem(), StorageContainersV2NfsWhitelistAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetCategoryInput)(nil)).Elem(), SubnetCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetCategoryArrayInput)(nil)).Elem(), SubnetCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionInput)(nil)).Elem(), SubnetV2DhcpOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionArrayInput)(nil)).Elem(), SubnetV2DhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerInput)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerArrayInput)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv4Input)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv4ArrayInput)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv6Input)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionDomainNameServerIpv6ArrayInput)(nil)).Elem(), SubnetV2DhcpOptionDomainNameServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerInput)(nil)).Elem(), SubnetV2DhcpOptionNtpServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerArrayInput)(nil)).Elem(), SubnetV2DhcpOptionNtpServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv4Input)(nil)).Elem(), SubnetV2DhcpOptionNtpServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv4ArrayInput)(nil)).Elem(), SubnetV2DhcpOptionNtpServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv6Input)(nil)).Elem(), SubnetV2DhcpOptionNtpServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DhcpOptionNtpServerIpv6ArrayInput)(nil)).Elem(), SubnetV2DhcpOptionNtpServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressInput)(nil)).Elem(), SubnetV2DynamicIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressArrayInput)(nil)).Elem(), SubnetV2DynamicIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressIpv4Input)(nil)).Elem(), SubnetV2DynamicIpAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressIpv4ArrayInput)(nil)).Elem(), SubnetV2DynamicIpAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressIpv6Input)(nil)).Elem(), SubnetV2DynamicIpAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2DynamicIpAddressIpv6ArrayInput)(nil)).Elem(), SubnetV2DynamicIpAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigInput)(nil)).Elem(), SubnetV2IpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigArrayInput)(nil)).Elem(), SubnetV2IpConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4Input)(nil)).Elem(), SubnetV2IpConfigIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4ArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4DefaultGatewayIpInput)(nil)).Elem(), SubnetV2IpConfigIpv4DefaultGatewayIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4DefaultGatewayIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4DefaultGatewayIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4DhcpServerAddressInput)(nil)).Elem(), SubnetV2IpConfigIpv4DhcpServerAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4DhcpServerAddressArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4DhcpServerAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetInput)(nil)).Elem(), SubnetV2IpConfigIpv4IpSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4IpSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetIpInput)(nil)).Elem(), SubnetV2IpConfigIpv4IpSubnetIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4IpSubnetIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4IpSubnetIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListEndIpInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListEndIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListEndIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListEndIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListStartIpInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListStartIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv4PoolListStartIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv4PoolListStartIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6Input)(nil)).Elem(), SubnetV2IpConfigIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6ArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6DefaultGatewayIpInput)(nil)).Elem(), SubnetV2IpConfigIpv6DefaultGatewayIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6DefaultGatewayIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6DefaultGatewayIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6DhcpServerAddressInput)(nil)).Elem(), SubnetV2IpConfigIpv6DhcpServerAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6DhcpServerAddressArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6DhcpServerAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetInput)(nil)).Elem(), SubnetV2IpConfigIpv6IpSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6IpSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetIpInput)(nil)).Elem(), SubnetV2IpConfigIpv6IpSubnetIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6IpSubnetIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6IpSubnetIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListEndIpInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListEndIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListEndIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListEndIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListStartIpInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListStartIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpConfigIpv6PoolListStartIpArrayInput)(nil)).Elem(), SubnetV2IpConfigIpv6PoolListStartIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageInput)(nil)).Elem(), SubnetV2IpUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageArrayInput)(nil)).Elem(), SubnetV2IpUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageArrayInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeArrayInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeEndIpInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeEndIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeEndIpArrayInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeEndIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeStartIpInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeStartIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2IpUsageIpPoolUsageRangeStartIpArrayInput)(nil)).Elem(), SubnetV2IpUsageIpPoolUsageRangeStartIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2LinkInput)(nil)).Elem(), SubnetV2LinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2LinkArrayInput)(nil)).Elem(), SubnetV2LinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2ReservedIpAddressInput)(nil)).Elem(), SubnetV2ReservedIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2ReservedIpAddressArrayInput)(nil)).Elem(), SubnetV2ReservedIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchInput)(nil)).Elem(), SubnetV2VirtualSwitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterGatewayIpAddressInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterGatewayIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterGatewayIpAddressArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterGatewayIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressIpInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostIpAddressIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchClusterHostIpAddressIpArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchClusterHostIpAddressIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchLinkInput)(nil)).Elem(), SubnetV2VirtualSwitchLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchLinkArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchMetadataInput)(nil)).Elem(), SubnetV2VirtualSwitchMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VirtualSwitchMetadataArrayInput)(nil)).Elem(), SubnetV2VirtualSwitchMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcInput)(nil)).Elem(), SubnetV2VpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcArrayInput)(nil)).Elem(), SubnetV2VpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionArrayInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerArrayInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Input)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Input)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayInput)(nil)).Elem(), SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetInput)(nil)).Elem(), SubnetV2VpcExternalSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Input)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Input)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpInput)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv4Input)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv4ArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv6Input)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternalSubnetExternalIpIpv6ArrayInput)(nil)).Elem(), SubnetV2VpcExternalSubnetExternalIpIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixArrayInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4Input)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4ArrayInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4IpInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv4IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv4IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6Input)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6ArrayInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6IpInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv6IpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayInput)(nil)).Elem(), SubnetV2VpcExternallyRoutablePrefixIpv6IpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcLinkInput)(nil)).Elem(), SubnetV2VpcLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcLinkArrayInput)(nil)).Elem(), SubnetV2VpcLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcMetadataInput)(nil)).Elem(), SubnetV2VpcMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetV2VpcMetadataArrayInput)(nil)).Elem(), SubnetV2VpcMetadataArray{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSchedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmCredentialOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmCredentialArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksPtrOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksTaskOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmTagOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmTagArrayOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoInfoOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskTaskOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskTaskArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowScheduleOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowTagArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolAddressOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolAddressArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertiesMapOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertiesMapArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertyOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileClusterAvailabilityOutput{})
	pulumi.RegisterOutputType(NdbProfileClusterAvailabilityArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileComputeProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileComputeProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePtrOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionPropertyOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseActionargumentOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseActionargumentArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePostgressInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePostgressInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoPtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverCredentialOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverCredentialArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabasePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabasePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePropertyOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanMetadataOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanMetadataPtrOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertiesMapOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertiesMapArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertyOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertyArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2LinkOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2LinkArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleLinkOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleLinkArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecDestSubnetArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecIcmpServiceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecSrcSubnetArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecTcpServiceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecApplicationRuleSpecUdpServiceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecIntraEntityGroupRuleSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecMultiEnvIsolationRuleSpecSpecAllToAllIsolationGroupIsolationGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecOutput{})
	pulumi.RegisterOutputType(NetworkSecurityPolicyV2RuleSpecTwoEnvIsolationRuleSpecArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleCategoryOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleCategoryArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2CredentialOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2CredentialPtrOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2RebootPreferenceOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2RebootPreferencePtrOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2RebootPreferenceScheduleOutput{})
	pulumi.RegisterOutputType(NgtInstallationV2RebootPreferenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(NgtUpgradeV2RebootPreferenceOutput{})
	pulumi.RegisterOutputType(NgtUpgradeV2RebootPreferencePtrOutput{})
	pulumi.RegisterOutputType(NgtUpgradeV2RebootPreferenceScheduleOutput{})
	pulumi.RegisterOutputType(NgtUpgradeV2RebootPreferenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(PbrDestinationOutput{})
	pulumi.RegisterOutputType(PbrDestinationPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersIcmpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersIcmpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpDestinationPortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpSourcePortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpSourcePortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpDestinationPortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpSourcePortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpSourcePortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrSourceOutput{})
	pulumi.RegisterOutputType(PbrSourcePtrOutput{})
	pulumi.RegisterOutputType(PbrV2LinkOutput{})
	pulumi.RegisterOutputType(PbrV2LinkArrayOutput{})
	pulumi.RegisterOutputType(PbrV2MetadataOutput{})
	pulumi.RegisterOutputType(PbrV2MetadataArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionNexthopIpAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamEgressServiceIpIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamIngressServiceIpIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyActionRerouteParamServiceIpIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv4IpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchDestinationSubnetPrefixIpv6IpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterIcmpObjectArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectDestinationPortRangeArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterLayerFourProtocolObjectSourcePortRangeArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchProtocolParameterProtocolNumberObjectArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv4IpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6Output{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpOutput{})
	pulumi.RegisterOutputType(PbrV2PolicyPolicyMatchSourceSubnetPrefixIpv6IpArrayOutput{})
	pulumi.RegisterOutputType(PbrV2VpcOutput{})
	pulumi.RegisterOutputType(PbrV2VpcArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBootstrapConfigOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBootstrapConfigArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBootstrapConfigEnvironmentInfoArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBuildInfoOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigBuildInfoArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigResourceConfigOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2ConfigResourceConfigArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2LinkOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2LinkArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkDefaultGatewayIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeBeginIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkIpRangeEndIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkExternalNetworkSubnetMaskIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNameServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2NetworkNtpServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterAosRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterClusterReferenceOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterClusterReferencePtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressFqdnArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4Output{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6Output{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationOutput{})
	pulumi.RegisterOutputType(PcRegistrationV2RemoteClusterDomainManagerRemoteClusterSpecRemoteClusterCredentialsAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ProjectAccountReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAccountReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpOutput{})
	pulumi.RegisterOutputType(ProjectAcpArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(ProjectAcpRoleReferenceOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserGroupReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserGroupReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectCategoryOutput{})
	pulumi.RegisterOutputType(ProjectCategoryArrayOutput{})
	pulumi.RegisterOutputType(ProjectClusterReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectClusterReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectDefaultEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(ProjectDefaultEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectDefaultSubnetReferenceOutput{})
	pulumi.RegisterOutputType(ProjectDefaultSubnetReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectExternalNetworkListOutput{})
	pulumi.RegisterOutputType(ProjectExternalNetworkListArrayOutput{})
	pulumi.RegisterOutputType(ProjectExternalUserGroupReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectExternalUserGroupReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainPtrOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainResourceOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainResourceArrayOutput{})
	pulumi.RegisterOutputType(ProjectSubnetReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectSubnetReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectTunnelReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectTunnelReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceOusOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceOusArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceUserGroupOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListSamlUserGroupOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListSamlUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserListOutput{})
	pulumi.RegisterOutputType(ProjectUserListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserPtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserPtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectUserReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectUserReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectVpcReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectVpcReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterParamOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterParamArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOrderedAvailabilityZoneListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOrderedAvailabilityZoneListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOwnerReferenceOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleProjectReferenceOutput{})
	pulumi.RegisterOutputType(ProtectionRuleProjectReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanCategoryOutput{})
	pulumi.RegisterOutputType(RecoveryPlanCategoryArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanOwnerReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListIpConfigListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListVmReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkSubnetListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVirtualNetworkReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkVpcReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProjectReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProjectReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListCategoryArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanStageListStageWorkRecoverEntitiesEntityInfoListScriptListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VmRecoveryPointRestoreOverrideArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecOutput{})
	pulumi.RegisterOutputType(RecoveryPointRestoreV2VolumeGroupRecoveryPointRestoreOverrideVolumeGroupOverrideSpecArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2LinkOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2LinkArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2LocationReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2LocationReferenceArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointApplicationConsistentPropertyArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointDiskRecoveryPointArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointLinkOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VmRecoveryPointLinkArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointDiskRecoveryPointArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointLinkOutput{})
	pulumi.RegisterOutputType(RecoveryPointsV2VolumeGroupRecoveryPointLinkArrayOutput{})
	pulumi.RegisterOutputType(RoleCategoryOutput{})
	pulumi.RegisterOutputType(RoleCategoryArrayOutput{})
	pulumi.RegisterOutputType(RoleOwnerReferenceOutput{})
	pulumi.RegisterOutputType(RoleOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(RolePermissionReferenceListOutput{})
	pulumi.RegisterOutputType(RolePermissionReferenceListArrayOutput{})
	pulumi.RegisterOutputType(RoleProjectReferenceOutput{})
	pulumi.RegisterOutputType(RoleProjectReferencePtrOutput{})
	pulumi.RegisterOutputType(RolesV2LinkOutput{})
	pulumi.RegisterOutputType(RolesV2LinkArrayOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationPtrOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv4Output{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv4PtrOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv4IpOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv4IpPtrOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv6Output{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv6PtrOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv6IpOutput{})
	pulumi.RegisterOutputType(RoutesV2DestinationIpv6IpPtrOutput{})
	pulumi.RegisterOutputType(RoutesV2LinkOutput{})
	pulumi.RegisterOutputType(RoutesV2LinkArrayOutput{})
	pulumi.RegisterOutputType(RoutesV2MetadataOutput{})
	pulumi.RegisterOutputType(RoutesV2MetadataPtrOutput{})
	pulumi.RegisterOutputType(RoutesV2NextHopOutput{})
	pulumi.RegisterOutputType(RoutesV2NextHopPtrOutput{})
	pulumi.RegisterOutputType(RoutesV2NextHopNextHopIpAddressOutput{})
	pulumi.RegisterOutputType(RoutesV2NextHopNextHopIpAddressArrayOutput{})
	pulumi.RegisterOutputType(RoutesV2NextHopNextHopIpAddressIpv4Output{})
	pulumi.RegisterOutputType(RoutesV2NextHopNextHopIpAddressIpv6Output{})
	pulumi.RegisterOutputType(SamlIdentityProvidersV2IdpMetadataOutput{})
	pulumi.RegisterOutputType(SamlIdentityProvidersV2IdpMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(ServiceGroupServiceListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2IcmpServiceOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2IcmpServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2LinkOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2LinkArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2TcpServiceOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2TcpServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2UdpServiceOutput{})
	pulumi.RegisterOutputType(ServiceGroupsV2UdpServiceArrayOutput{})
	pulumi.RegisterOutputType(StaticRoutesDefaultRouteNexthopOutput{})
	pulumi.RegisterOutputType(StaticRoutesDefaultRouteNexthopArrayOutput{})
	pulumi.RegisterOutputType(StaticRoutesStaticRoutesListOutput{})
	pulumi.RegisterOutputType(StaticRoutesStaticRoutesListArrayOutput{})
	pulumi.RegisterOutputType(StorageContainersV2LinkOutput{})
	pulumi.RegisterOutputType(StorageContainersV2LinkArrayOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressArrayOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressFqdnOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressFqdnArrayOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressIpv4Output{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressIpv6Output{})
	pulumi.RegisterOutputType(StorageContainersV2NfsWhitelistAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetCategoryOutput{})
	pulumi.RegisterOutputType(SubnetCategoryArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionDomainNameServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2DhcpOptionNtpServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2DynamicIpAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4DefaultGatewayIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4DefaultGatewayIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4DhcpServerAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4DhcpServerAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4IpSubnetOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4IpSubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4IpSubnetIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4IpSubnetIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListEndIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListEndIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListStartIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv4PoolListStartIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6DefaultGatewayIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6DefaultGatewayIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6DhcpServerAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6DhcpServerAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6IpSubnetOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6IpSubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6IpSubnetIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6IpSubnetIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListEndIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListEndIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListStartIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpConfigIpv6PoolListStartIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeEndIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeEndIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeStartIpOutput{})
	pulumi.RegisterOutputType(SubnetV2IpUsageIpPoolUsageRangeStartIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2LinkOutput{})
	pulumi.RegisterOutputType(SubnetV2LinkArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2ReservedIpAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2ReservedIpAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterGatewayIpAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterGatewayIpAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostIpAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostIpAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostIpAddressIpOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchClusterHostIpAddressIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchLinkOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchLinkArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchMetadataOutput{})
	pulumi.RegisterOutputType(SubnetV2VirtualSwitchMetadataArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2VpcCommonDhcpOptionDomainNameServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetActiveGatewayNodeNodeIpAddressIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternalSubnetExternalIpIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv4Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv4ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv4IpOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv4IpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv6Output{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv6ArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv6IpOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcExternallyRoutablePrefixIpv6IpArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcLinkOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcLinkArrayOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcMetadataOutput{})
	pulumi.RegisterOutputType(SubnetV2VpcMetadataArrayOutput{})
}
