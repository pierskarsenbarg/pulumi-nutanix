// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to Create a Directory Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Add Directory Service .
//			_, err := nutanix.NewDirectoryServicesV2(ctx, "active-directory", &nutanix.DirectoryServicesV2Args{
//				Url:           pulumi.String("ldap://10.xx.xx.xx:xxxx"),
//				DirectoryType: pulumi.String("ACTIVE_DIRECTORY"),
//				DomainName:    pulumi.String("nutanix.com"),
//				ServiceAccounts: nutanix.DirectoryServicesV2ServiceAccountArray{
//					&nutanix.DirectoryServicesV2ServiceAccountArgs{
//						Username: pulumi.String("username"),
//						Password: pulumi.String("password"),
//					},
//				},
//				WhiteListedGroups: pulumi.StringArray{
//					pulumi.String("example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DirectoryServicesV2 struct {
	pulumi.CustomResourceState

	// - User or Service who created the Directory Service.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// - Creation time of the Directory Service.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType pulumi.StringOutput `pulumi:"directoryType"`
	// -(Required) Domain name for the Directory Service.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType pulumi.StringOutput `pulumi:"groupSearchType"`
	// - Last updated time of the Directory Service.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// -(Required) Name for the Directory Service.
	Name pulumi.StringOutput `pulumi:"name"`
	// -(Optional) Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations DirectoryServicesV2OpenLdapConfigurationArrayOutput `pulumi:"openLdapConfigurations"`
	// -(Optional) Secondary URL for the Directory Service.
	SecondaryUrls pulumi.StringArrayOutput `pulumi:"secondaryUrls"`
	// -(Required) Information of Service account to connect to the Directory Service.
	ServiceAccounts DirectoryServicesV2ServiceAccountArrayOutput `pulumi:"serviceAccounts"`
	// -(Required) URL for the Directory Service.
	Url pulumi.StringOutput `pulumi:"url"`
	// -(Optional) List of allowed User Groups for the Directory Service.
	WhiteListedGroups pulumi.StringArrayOutput `pulumi:"whiteListedGroups"`
}

// NewDirectoryServicesV2 registers a new resource with the given unique name, arguments, and options.
func NewDirectoryServicesV2(ctx *pulumi.Context,
	name string, args *DirectoryServicesV2Args, opts ...pulumi.ResourceOption) (*DirectoryServicesV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DirectoryType == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryType'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.ServiceAccounts == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccounts'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectoryServicesV2
	err := ctx.RegisterResource("nutanix:index/directoryServicesV2:DirectoryServicesV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectoryServicesV2 gets an existing DirectoryServicesV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectoryServicesV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryServicesV2State, opts ...pulumi.ResourceOption) (*DirectoryServicesV2, error) {
	var resource DirectoryServicesV2
	err := ctx.ReadResource("nutanix:index/directoryServicesV2:DirectoryServicesV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectoryServicesV2 resources.
type directoryServicesV2State struct {
	// - User or Service who created the Directory Service.
	CreatedBy *string `pulumi:"createdBy"`
	// - Creation time of the Directory Service.
	CreatedTime *string `pulumi:"createdTime"`
	// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType *string `pulumi:"directoryType"`
	// -(Required) Domain name for the Directory Service.
	DomainName *string `pulumi:"domainName"`
	// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType *string `pulumi:"groupSearchType"`
	// - Last updated time of the Directory Service.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// -(Required) Name for the Directory Service.
	Name *string `pulumi:"name"`
	// -(Optional) Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations []DirectoryServicesV2OpenLdapConfiguration `pulumi:"openLdapConfigurations"`
	// -(Optional) Secondary URL for the Directory Service.
	SecondaryUrls []string `pulumi:"secondaryUrls"`
	// -(Required) Information of Service account to connect to the Directory Service.
	ServiceAccounts []DirectoryServicesV2ServiceAccount `pulumi:"serviceAccounts"`
	// -(Required) URL for the Directory Service.
	Url *string `pulumi:"url"`
	// -(Optional) List of allowed User Groups for the Directory Service.
	WhiteListedGroups []string `pulumi:"whiteListedGroups"`
}

type DirectoryServicesV2State struct {
	// - User or Service who created the Directory Service.
	CreatedBy pulumi.StringPtrInput
	// - Creation time of the Directory Service.
	CreatedTime pulumi.StringPtrInput
	// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType pulumi.StringPtrInput
	// -(Required) Domain name for the Directory Service.
	DomainName pulumi.StringPtrInput
	// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType pulumi.StringPtrInput
	// - Last updated time of the Directory Service.
	LastUpdatedTime pulumi.StringPtrInput
	// -(Required) Name for the Directory Service.
	Name pulumi.StringPtrInput
	// -(Optional) Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations DirectoryServicesV2OpenLdapConfigurationArrayInput
	// -(Optional) Secondary URL for the Directory Service.
	SecondaryUrls pulumi.StringArrayInput
	// -(Required) Information of Service account to connect to the Directory Service.
	ServiceAccounts DirectoryServicesV2ServiceAccountArrayInput
	// -(Required) URL for the Directory Service.
	Url pulumi.StringPtrInput
	// -(Optional) List of allowed User Groups for the Directory Service.
	WhiteListedGroups pulumi.StringArrayInput
}

func (DirectoryServicesV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryServicesV2State)(nil)).Elem()
}

type directoryServicesV2Args struct {
	// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType string `pulumi:"directoryType"`
	// -(Required) Domain name for the Directory Service.
	DomainName string `pulumi:"domainName"`
	// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType *string `pulumi:"groupSearchType"`
	// -(Required) Name for the Directory Service.
	Name *string `pulumi:"name"`
	// -(Optional) Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations []DirectoryServicesV2OpenLdapConfiguration `pulumi:"openLdapConfigurations"`
	// -(Optional) Secondary URL for the Directory Service.
	SecondaryUrls []string `pulumi:"secondaryUrls"`
	// -(Required) Information of Service account to connect to the Directory Service.
	ServiceAccounts []DirectoryServicesV2ServiceAccount `pulumi:"serviceAccounts"`
	// -(Required) URL for the Directory Service.
	Url string `pulumi:"url"`
	// -(Optional) List of allowed User Groups for the Directory Service.
	WhiteListedGroups []string `pulumi:"whiteListedGroups"`
}

// The set of arguments for constructing a DirectoryServicesV2 resource.
type DirectoryServicesV2Args struct {
	// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
	DirectoryType pulumi.StringInput
	// -(Required) Domain name for the Directory Service.
	DomainName pulumi.StringInput
	// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
	GroupSearchType pulumi.StringPtrInput
	// -(Required) Name for the Directory Service.
	Name pulumi.StringPtrInput
	// -(Optional) Configuration for OpenLDAP Directory Service.
	OpenLdapConfigurations DirectoryServicesV2OpenLdapConfigurationArrayInput
	// -(Optional) Secondary URL for the Directory Service.
	SecondaryUrls pulumi.StringArrayInput
	// -(Required) Information of Service account to connect to the Directory Service.
	ServiceAccounts DirectoryServicesV2ServiceAccountArrayInput
	// -(Required) URL for the Directory Service.
	Url pulumi.StringInput
	// -(Optional) List of allowed User Groups for the Directory Service.
	WhiteListedGroups pulumi.StringArrayInput
}

func (DirectoryServicesV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryServicesV2Args)(nil)).Elem()
}

type DirectoryServicesV2Input interface {
	pulumi.Input

	ToDirectoryServicesV2Output() DirectoryServicesV2Output
	ToDirectoryServicesV2OutputWithContext(ctx context.Context) DirectoryServicesV2Output
}

func (*DirectoryServicesV2) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryServicesV2)(nil)).Elem()
}

func (i *DirectoryServicesV2) ToDirectoryServicesV2Output() DirectoryServicesV2Output {
	return i.ToDirectoryServicesV2OutputWithContext(context.Background())
}

func (i *DirectoryServicesV2) ToDirectoryServicesV2OutputWithContext(ctx context.Context) DirectoryServicesV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryServicesV2Output)
}

// DirectoryServicesV2ArrayInput is an input type that accepts DirectoryServicesV2Array and DirectoryServicesV2ArrayOutput values.
// You can construct a concrete instance of `DirectoryServicesV2ArrayInput` via:
//
//	DirectoryServicesV2Array{ DirectoryServicesV2Args{...} }
type DirectoryServicesV2ArrayInput interface {
	pulumi.Input

	ToDirectoryServicesV2ArrayOutput() DirectoryServicesV2ArrayOutput
	ToDirectoryServicesV2ArrayOutputWithContext(context.Context) DirectoryServicesV2ArrayOutput
}

type DirectoryServicesV2Array []DirectoryServicesV2Input

func (DirectoryServicesV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectoryServicesV2)(nil)).Elem()
}

func (i DirectoryServicesV2Array) ToDirectoryServicesV2ArrayOutput() DirectoryServicesV2ArrayOutput {
	return i.ToDirectoryServicesV2ArrayOutputWithContext(context.Background())
}

func (i DirectoryServicesV2Array) ToDirectoryServicesV2ArrayOutputWithContext(ctx context.Context) DirectoryServicesV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryServicesV2ArrayOutput)
}

// DirectoryServicesV2MapInput is an input type that accepts DirectoryServicesV2Map and DirectoryServicesV2MapOutput values.
// You can construct a concrete instance of `DirectoryServicesV2MapInput` via:
//
//	DirectoryServicesV2Map{ "key": DirectoryServicesV2Args{...} }
type DirectoryServicesV2MapInput interface {
	pulumi.Input

	ToDirectoryServicesV2MapOutput() DirectoryServicesV2MapOutput
	ToDirectoryServicesV2MapOutputWithContext(context.Context) DirectoryServicesV2MapOutput
}

type DirectoryServicesV2Map map[string]DirectoryServicesV2Input

func (DirectoryServicesV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectoryServicesV2)(nil)).Elem()
}

func (i DirectoryServicesV2Map) ToDirectoryServicesV2MapOutput() DirectoryServicesV2MapOutput {
	return i.ToDirectoryServicesV2MapOutputWithContext(context.Background())
}

func (i DirectoryServicesV2Map) ToDirectoryServicesV2MapOutputWithContext(ctx context.Context) DirectoryServicesV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryServicesV2MapOutput)
}

type DirectoryServicesV2Output struct{ *pulumi.OutputState }

func (DirectoryServicesV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryServicesV2)(nil)).Elem()
}

func (o DirectoryServicesV2Output) ToDirectoryServicesV2Output() DirectoryServicesV2Output {
	return o
}

func (o DirectoryServicesV2Output) ToDirectoryServicesV2OutputWithContext(ctx context.Context) DirectoryServicesV2Output {
	return o
}

// - User or Service who created the Directory Service.
func (o DirectoryServicesV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// - Creation time of the Directory Service.
func (o DirectoryServicesV2Output) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// -(Required) Type of Directory Service, Supported values are: "ACTIVE_DIRECTORY" (Directory Service type is Active Directory.) and "OPEN_LDAP" (Directory Service type is Open LDAP.)
func (o DirectoryServicesV2Output) DirectoryType() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.DirectoryType }).(pulumi.StringOutput)
}

// -(Required) Domain name for the Directory Service.
func (o DirectoryServicesV2Output) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// -(Optional) A globally unique identifier of an instance that is suitable for external consumption.
func (o DirectoryServicesV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// -(Optional) Group membership search type for the Directory Service. Supported values are: "NON_RECURSIVE" (Doesn't search recursively within groups.) and "RECURSIVE" (Searches recursively within groups.)
func (o DirectoryServicesV2Output) GroupSearchType() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.GroupSearchType }).(pulumi.StringOutput)
}

// - Last updated time of the Directory Service.
func (o DirectoryServicesV2Output) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// -(Required) Name for the Directory Service.
func (o DirectoryServicesV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// -(Optional) Configuration for OpenLDAP Directory Service.
func (o DirectoryServicesV2Output) OpenLdapConfigurations() DirectoryServicesV2OpenLdapConfigurationArrayOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) DirectoryServicesV2OpenLdapConfigurationArrayOutput {
		return v.OpenLdapConfigurations
	}).(DirectoryServicesV2OpenLdapConfigurationArrayOutput)
}

// -(Optional) Secondary URL for the Directory Service.
func (o DirectoryServicesV2Output) SecondaryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringArrayOutput { return v.SecondaryUrls }).(pulumi.StringArrayOutput)
}

// -(Required) Information of Service account to connect to the Directory Service.
func (o DirectoryServicesV2Output) ServiceAccounts() DirectoryServicesV2ServiceAccountArrayOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) DirectoryServicesV2ServiceAccountArrayOutput { return v.ServiceAccounts }).(DirectoryServicesV2ServiceAccountArrayOutput)
}

// -(Required) URL for the Directory Service.
func (o DirectoryServicesV2Output) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// -(Optional) List of allowed User Groups for the Directory Service.
func (o DirectoryServicesV2Output) WhiteListedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectoryServicesV2) pulumi.StringArrayOutput { return v.WhiteListedGroups }).(pulumi.StringArrayOutput)
}

type DirectoryServicesV2ArrayOutput struct{ *pulumi.OutputState }

func (DirectoryServicesV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectoryServicesV2)(nil)).Elem()
}

func (o DirectoryServicesV2ArrayOutput) ToDirectoryServicesV2ArrayOutput() DirectoryServicesV2ArrayOutput {
	return o
}

func (o DirectoryServicesV2ArrayOutput) ToDirectoryServicesV2ArrayOutputWithContext(ctx context.Context) DirectoryServicesV2ArrayOutput {
	return o
}

func (o DirectoryServicesV2ArrayOutput) Index(i pulumi.IntInput) DirectoryServicesV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectoryServicesV2 {
		return vs[0].([]*DirectoryServicesV2)[vs[1].(int)]
	}).(DirectoryServicesV2Output)
}

type DirectoryServicesV2MapOutput struct{ *pulumi.OutputState }

func (DirectoryServicesV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectoryServicesV2)(nil)).Elem()
}

func (o DirectoryServicesV2MapOutput) ToDirectoryServicesV2MapOutput() DirectoryServicesV2MapOutput {
	return o
}

func (o DirectoryServicesV2MapOutput) ToDirectoryServicesV2MapOutputWithContext(ctx context.Context) DirectoryServicesV2MapOutput {
	return o
}

func (o DirectoryServicesV2MapOutput) MapIndex(k pulumi.StringInput) DirectoryServicesV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectoryServicesV2 {
		return vs[0].(map[string]*DirectoryServicesV2)[vs[1].(string)]
	}).(DirectoryServicesV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryServicesV2Input)(nil)).Elem(), &DirectoryServicesV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryServicesV2ArrayInput)(nil)).Elem(), DirectoryServicesV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryServicesV2MapInput)(nil)).Elem(), DirectoryServicesV2Map{})
	pulumi.RegisterOutputType(DirectoryServicesV2Output{})
	pulumi.RegisterOutputType(DirectoryServicesV2ArrayOutput{})
	pulumi.RegisterOutputType(DirectoryServicesV2MapOutput{})
}
