// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all the service Groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupRecoveryPointsV2(ctx, &nutanix.LookupRecoveryPointsV2Args{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.LookupRecoveryPointsV2(ctx, &nutanix.LookupRecoveryPointsV2Args{
//				Filter: pulumi.StringRef("name eq 'recovery_point_001'"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRecoveryPointsV2(ctx *pulumi.Context, args *LookupRecoveryPointsV2Args, opts ...pulumi.InvokeOption) (*LookupRecoveryPointsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRecoveryPointsV2Result
	err := ctx.Invoke("nutanix:index/getRecoveryPointsV2:getRecoveryPointsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecoveryPointsV2.
type LookupRecoveryPointsV2Args struct {
	Apply *string `pulumi:"apply"`
	// Cluster type from which recovery points must be fetched.
	// * supported values:
	// * `AOS` (Default)
	// * `MST`
	ClusterId *string `pulumi:"clusterId"`
	// A URL query parameter that allows clients to filter a collection of resources.
	// * The filter can be applied to the following fields:
	// * `creationTime`
	// * `extId`
	// * `locationAgnosticId`
	Filter *string `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit *int `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
	// * The orderby can be applied to the following fields:
	// * `creationTime`
	// * `expirationTime`
	OrderBy *string `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page *int `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
	// * The select can be applied to the following fields:
	// * `creationTime`
	// * `expirationTime`
	// * `extId`
	Select *string `pulumi:"select"`
}

// A collection of values returned by getRecoveryPointsV2.
type LookupRecoveryPointsV2Result struct {
	Apply     *string `pulumi:"apply"`
	ClusterId *string `pulumi:"clusterId"`
	Filter    *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                             `pulumi:"id"`
	Limit          *int                               `pulumi:"limit"`
	OrderBy        *string                            `pulumi:"orderBy"`
	Page           *int                               `pulumi:"page"`
	RecoveryPoints []GetRecoveryPointsV2RecoveryPoint `pulumi:"recoveryPoints"`
	Select         *string                            `pulumi:"select"`
}

func LookupRecoveryPointsV2Output(ctx *pulumi.Context, args LookupRecoveryPointsV2OutputArgs, opts ...pulumi.InvokeOption) LookupRecoveryPointsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRecoveryPointsV2ResultOutput, error) {
			args := v.(LookupRecoveryPointsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getRecoveryPointsV2:getRecoveryPointsV2", args, LookupRecoveryPointsV2ResultOutput{}, options).(LookupRecoveryPointsV2ResultOutput), nil
		}).(LookupRecoveryPointsV2ResultOutput)
}

// A collection of arguments for invoking getRecoveryPointsV2.
type LookupRecoveryPointsV2OutputArgs struct {
	Apply pulumi.StringPtrInput `pulumi:"apply"`
	// Cluster type from which recovery points must be fetched.
	// * supported values:
	// * `AOS` (Default)
	// * `MST`
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// A URL query parameter that allows clients to filter a collection of resources.
	// * The filter can be applied to the following fields:
	// * `creationTime`
	// * `extId`
	// * `locationAgnosticId`
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default
	// * The orderby can be applied to the following fields:
	// * `creationTime`
	// * `expirationTime`
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the OData V4.01 URL conventions
	// * The select can be applied to the following fields:
	// * `creationTime`
	// * `expirationTime`
	// * `extId`
	Select pulumi.StringPtrInput `pulumi:"select"`
}

func (LookupRecoveryPointsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecoveryPointsV2Args)(nil)).Elem()
}

// A collection of values returned by getRecoveryPointsV2.
type LookupRecoveryPointsV2ResultOutput struct{ *pulumi.OutputState }

func (LookupRecoveryPointsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRecoveryPointsV2Result)(nil)).Elem()
}

func (o LookupRecoveryPointsV2ResultOutput) ToLookupRecoveryPointsV2ResultOutput() LookupRecoveryPointsV2ResultOutput {
	return o
}

func (o LookupRecoveryPointsV2ResultOutput) ToLookupRecoveryPointsV2ResultOutputWithContext(ctx context.Context) LookupRecoveryPointsV2ResultOutput {
	return o
}

func (o LookupRecoveryPointsV2ResultOutput) Apply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *string { return v.Apply }).(pulumi.StringPtrOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRecoveryPointsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) RecoveryPoints() GetRecoveryPointsV2RecoveryPointArrayOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) []GetRecoveryPointsV2RecoveryPoint { return v.RecoveryPoints }).(GetRecoveryPointsV2RecoveryPointArrayOutput)
}

func (o LookupRecoveryPointsV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRecoveryPointsV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRecoveryPointsV2ResultOutput{})
}
