// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to add a Role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			operations_filtered_list, err := nutanix.GetOperationsV2(ctx, &nutanix.GetOperationsV2Args{
//				Filter: pulumi.StringRef("startswith(displayName, 'Create_')"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Create role
//			_, err = nutanix.NewRolesV2(ctx, "example-role", &nutanix.RolesV2Args{
//				DisplayName: pulumi.String("example_role"),
//				Description: pulumi.String("create example role"),
//				Operations: pulumi.StringArray{
//					pulumi.String(operations_filtered_list.Operations[0].ExtId),
//					pulumi.String(operations_filtered_list.Operations[1].ExtId),
//					pulumi.String(operations_filtered_list.Operations[2].ExtId),
//					pulumi.String(operations_filtered_list.Operations[3].ExtId),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type RolesV2 struct {
	pulumi.CustomResourceState

	// - List of Accessible Clients for the Role.
	AccessibleClients pulumi.StringArrayOutput `pulumi:"accessibleClients"`
	// - List of Accessible Entity Types for the Role.
	AccessibleEntityTypes pulumi.StringArrayOutput `pulumi:"accessibleEntityTypes"`
	// - Number of Users assigned to given Role.
	AssignedUsersCount pulumi.IntOutput `pulumi:"assignedUsersCount"`
	// - Number of User Groups assigned to given Role.
	AssignedUsersGroupsCount pulumi.IntOutput `pulumi:"assignedUsersGroupsCount"`
	// - Client that created the entity.
	ClientName pulumi.StringOutput `pulumi:"clientName"`
	// - User or Service Name that created the Role.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// - The creation time of the Role.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// - Description of the Role.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// -(Required) The display name for the Role.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// - Flag identifying if the Role is system defined or not.
	IsSystemDefined pulumi.BoolOutput `pulumi:"isSystemDefined"`
	// - The time when the Role was last updated.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links RolesV2LinkArrayOutput `pulumi:"links"`
	// -(Required) List of operations for the role.
	Operations pulumi.StringArrayOutput `pulumi:"operations"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewRolesV2 registers a new resource with the given unique name, arguments, and options.
func NewRolesV2(ctx *pulumi.Context,
	name string, args *RolesV2Args, opts ...pulumi.ResourceOption) (*RolesV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Operations == nil {
		return nil, errors.New("invalid value for required argument 'Operations'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RolesV2
	err := ctx.RegisterResource("nutanix:index/rolesV2:RolesV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRolesV2 gets an existing RolesV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRolesV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RolesV2State, opts ...pulumi.ResourceOption) (*RolesV2, error) {
	var resource RolesV2
	err := ctx.ReadResource("nutanix:index/rolesV2:RolesV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RolesV2 resources.
type rolesV2State struct {
	// - List of Accessible Clients for the Role.
	AccessibleClients []string `pulumi:"accessibleClients"`
	// - List of Accessible Entity Types for the Role.
	AccessibleEntityTypes []string `pulumi:"accessibleEntityTypes"`
	// - Number of Users assigned to given Role.
	AssignedUsersCount *int `pulumi:"assignedUsersCount"`
	// - Number of User Groups assigned to given Role.
	AssignedUsersGroupsCount *int `pulumi:"assignedUsersGroupsCount"`
	// - Client that created the entity.
	ClientName *string `pulumi:"clientName"`
	// - User or Service Name that created the Role.
	CreatedBy *string `pulumi:"createdBy"`
	// - The creation time of the Role.
	CreatedTime *string `pulumi:"createdTime"`
	// - Description of the Role.
	Description *string `pulumi:"description"`
	// -(Required) The display name for the Role.
	DisplayName *string `pulumi:"displayName"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// - Flag identifying if the Role is system defined or not.
	IsSystemDefined *bool `pulumi:"isSystemDefined"`
	// - The time when the Role was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []RolesV2Link `pulumi:"links"`
	// -(Required) List of operations for the role.
	Operations []string `pulumi:"operations"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId *string `pulumi:"tenantId"`
}

type RolesV2State struct {
	// - List of Accessible Clients for the Role.
	AccessibleClients pulumi.StringArrayInput
	// - List of Accessible Entity Types for the Role.
	AccessibleEntityTypes pulumi.StringArrayInput
	// - Number of Users assigned to given Role.
	AssignedUsersCount pulumi.IntPtrInput
	// - Number of User Groups assigned to given Role.
	AssignedUsersGroupsCount pulumi.IntPtrInput
	// - Client that created the entity.
	ClientName pulumi.StringPtrInput
	// - User or Service Name that created the Role.
	CreatedBy pulumi.StringPtrInput
	// - The creation time of the Role.
	CreatedTime pulumi.StringPtrInput
	// - Description of the Role.
	Description pulumi.StringPtrInput
	// -(Required) The display name for the Role.
	DisplayName pulumi.StringPtrInput
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// - Flag identifying if the Role is system defined or not.
	IsSystemDefined pulumi.BoolPtrInput
	// - The time when the Role was last updated.
	LastUpdatedTime pulumi.StringPtrInput
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links RolesV2LinkArrayInput
	// -(Required) List of operations for the role.
	Operations pulumi.StringArrayInput
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId pulumi.StringPtrInput
}

func (RolesV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*rolesV2State)(nil)).Elem()
}

type rolesV2Args struct {
	// - Client that created the entity.
	ClientName *string `pulumi:"clientName"`
	// - Description of the Role.
	Description *string `pulumi:"description"`
	// -(Required) The display name for the Role.
	DisplayName string `pulumi:"displayName"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// -(Required) List of operations for the role.
	Operations []string `pulumi:"operations"`
}

// The set of arguments for constructing a RolesV2 resource.
type RolesV2Args struct {
	// - Client that created the entity.
	ClientName pulumi.StringPtrInput
	// - Description of the Role.
	Description pulumi.StringPtrInput
	// -(Required) The display name for the Role.
	DisplayName pulumi.StringInput
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// -(Required) List of operations for the role.
	Operations pulumi.StringArrayInput
}

func (RolesV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*rolesV2Args)(nil)).Elem()
}

type RolesV2Input interface {
	pulumi.Input

	ToRolesV2Output() RolesV2Output
	ToRolesV2OutputWithContext(ctx context.Context) RolesV2Output
}

func (*RolesV2) ElementType() reflect.Type {
	return reflect.TypeOf((**RolesV2)(nil)).Elem()
}

func (i *RolesV2) ToRolesV2Output() RolesV2Output {
	return i.ToRolesV2OutputWithContext(context.Background())
}

func (i *RolesV2) ToRolesV2OutputWithContext(ctx context.Context) RolesV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(RolesV2Output)
}

// RolesV2ArrayInput is an input type that accepts RolesV2Array and RolesV2ArrayOutput values.
// You can construct a concrete instance of `RolesV2ArrayInput` via:
//
//	RolesV2Array{ RolesV2Args{...} }
type RolesV2ArrayInput interface {
	pulumi.Input

	ToRolesV2ArrayOutput() RolesV2ArrayOutput
	ToRolesV2ArrayOutputWithContext(context.Context) RolesV2ArrayOutput
}

type RolesV2Array []RolesV2Input

func (RolesV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RolesV2)(nil)).Elem()
}

func (i RolesV2Array) ToRolesV2ArrayOutput() RolesV2ArrayOutput {
	return i.ToRolesV2ArrayOutputWithContext(context.Background())
}

func (i RolesV2Array) ToRolesV2ArrayOutputWithContext(ctx context.Context) RolesV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesV2ArrayOutput)
}

// RolesV2MapInput is an input type that accepts RolesV2Map and RolesV2MapOutput values.
// You can construct a concrete instance of `RolesV2MapInput` via:
//
//	RolesV2Map{ "key": RolesV2Args{...} }
type RolesV2MapInput interface {
	pulumi.Input

	ToRolesV2MapOutput() RolesV2MapOutput
	ToRolesV2MapOutputWithContext(context.Context) RolesV2MapOutput
}

type RolesV2Map map[string]RolesV2Input

func (RolesV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RolesV2)(nil)).Elem()
}

func (i RolesV2Map) ToRolesV2MapOutput() RolesV2MapOutput {
	return i.ToRolesV2MapOutputWithContext(context.Background())
}

func (i RolesV2Map) ToRolesV2MapOutputWithContext(ctx context.Context) RolesV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolesV2MapOutput)
}

type RolesV2Output struct{ *pulumi.OutputState }

func (RolesV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RolesV2)(nil)).Elem()
}

func (o RolesV2Output) ToRolesV2Output() RolesV2Output {
	return o
}

func (o RolesV2Output) ToRolesV2OutputWithContext(ctx context.Context) RolesV2Output {
	return o
}

// - List of Accessible Clients for the Role.
func (o RolesV2Output) AccessibleClients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringArrayOutput { return v.AccessibleClients }).(pulumi.StringArrayOutput)
}

// - List of Accessible Entity Types for the Role.
func (o RolesV2Output) AccessibleEntityTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringArrayOutput { return v.AccessibleEntityTypes }).(pulumi.StringArrayOutput)
}

// - Number of Users assigned to given Role.
func (o RolesV2Output) AssignedUsersCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.IntOutput { return v.AssignedUsersCount }).(pulumi.IntOutput)
}

// - Number of User Groups assigned to given Role.
func (o RolesV2Output) AssignedUsersGroupsCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.IntOutput { return v.AssignedUsersGroupsCount }).(pulumi.IntOutput)
}

// - Client that created the entity.
func (o RolesV2Output) ClientName() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.ClientName }).(pulumi.StringOutput)
}

// - User or Service Name that created the Role.
func (o RolesV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// - The creation time of the Role.
func (o RolesV2Output) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// - Description of the Role.
func (o RolesV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// -(Required) The display name for the Role.
func (o RolesV2Output) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o RolesV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - Flag identifying if the Role is system defined or not.
func (o RolesV2Output) IsSystemDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.BoolOutput { return v.IsSystemDefined }).(pulumi.BoolOutput)
}

// - The time when the Role was last updated.
func (o RolesV2Output) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o RolesV2Output) Links() RolesV2LinkArrayOutput {
	return o.ApplyT(func(v *RolesV2) RolesV2LinkArrayOutput { return v.Links }).(RolesV2LinkArrayOutput)
}

// -(Required) List of operations for the role.
func (o RolesV2Output) Operations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringArrayOutput { return v.Operations }).(pulumi.StringArrayOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o RolesV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *RolesV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type RolesV2ArrayOutput struct{ *pulumi.OutputState }

func (RolesV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RolesV2)(nil)).Elem()
}

func (o RolesV2ArrayOutput) ToRolesV2ArrayOutput() RolesV2ArrayOutput {
	return o
}

func (o RolesV2ArrayOutput) ToRolesV2ArrayOutputWithContext(ctx context.Context) RolesV2ArrayOutput {
	return o
}

func (o RolesV2ArrayOutput) Index(i pulumi.IntInput) RolesV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RolesV2 {
		return vs[0].([]*RolesV2)[vs[1].(int)]
	}).(RolesV2Output)
}

type RolesV2MapOutput struct{ *pulumi.OutputState }

func (RolesV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RolesV2)(nil)).Elem()
}

func (o RolesV2MapOutput) ToRolesV2MapOutput() RolesV2MapOutput {
	return o
}

func (o RolesV2MapOutput) ToRolesV2MapOutputWithContext(ctx context.Context) RolesV2MapOutput {
	return o
}

func (o RolesV2MapOutput) MapIndex(k pulumi.StringInput) RolesV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RolesV2 {
		return vs[0].(map[string]*RolesV2)[vs[1].(string)]
	}).(RolesV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RolesV2Input)(nil)).Elem(), &RolesV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesV2ArrayInput)(nil)).Elem(), RolesV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolesV2MapInput)(nil)).Elem(), RolesV2Map{})
	pulumi.RegisterOutputType(RolesV2Output{})
	pulumi.RegisterOutputType(RolesV2ArrayOutput{})
	pulumi.RegisterOutputType(RolesV2MapOutput{})
}
