// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of available IPs in Network
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetNdbNetworkAvailableIps(ctx, &nutanix.GetNdbNetworkAvailableIpsArgs{
//				ProfileId: "{{ network_profile_id }}",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNdbNetworkAvailableIps(ctx *pulumi.Context, args *GetNdbNetworkAvailableIpsArgs, opts ...pulumi.InvokeOption) (*GetNdbNetworkAvailableIpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNdbNetworkAvailableIpsResult
	err := ctx.Invoke("nutanix:index/getNdbNetworkAvailableIps:getNdbNetworkAvailableIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbNetworkAvailableIps.
type GetNdbNetworkAvailableIpsArgs struct {
	// (Required) Network Profile id.
	ProfileId string `pulumi:"profileId"`
}

// A collection of values returned by getNdbNetworkAvailableIps.
type GetNdbNetworkAvailableIpsResult struct {
	// List of network available ips
	AvailableIps []GetNdbNetworkAvailableIpsAvailableIp `pulumi:"availableIps"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required) Network Profile id.
	ProfileId string `pulumi:"profileId"`
}

func GetNdbNetworkAvailableIpsOutput(ctx *pulumi.Context, args GetNdbNetworkAvailableIpsOutputArgs, opts ...pulumi.InvokeOption) GetNdbNetworkAvailableIpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNdbNetworkAvailableIpsResultOutput, error) {
			args := v.(GetNdbNetworkAvailableIpsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetNdbNetworkAvailableIpsResult
			secret, err := ctx.InvokePackageRaw("nutanix:index/getNdbNetworkAvailableIps:getNdbNetworkAvailableIps", args, &rv, "", opts...)
			if err != nil {
				return GetNdbNetworkAvailableIpsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetNdbNetworkAvailableIpsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetNdbNetworkAvailableIpsResultOutput), nil
			}
			return output, nil
		}).(GetNdbNetworkAvailableIpsResultOutput)
}

// A collection of arguments for invoking getNdbNetworkAvailableIps.
type GetNdbNetworkAvailableIpsOutputArgs struct {
	// (Required) Network Profile id.
	ProfileId pulumi.StringInput `pulumi:"profileId"`
}

func (GetNdbNetworkAvailableIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbNetworkAvailableIpsArgs)(nil)).Elem()
}

// A collection of values returned by getNdbNetworkAvailableIps.
type GetNdbNetworkAvailableIpsResultOutput struct{ *pulumi.OutputState }

func (GetNdbNetworkAvailableIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbNetworkAvailableIpsResult)(nil)).Elem()
}

func (o GetNdbNetworkAvailableIpsResultOutput) ToGetNdbNetworkAvailableIpsResultOutput() GetNdbNetworkAvailableIpsResultOutput {
	return o
}

func (o GetNdbNetworkAvailableIpsResultOutput) ToGetNdbNetworkAvailableIpsResultOutputWithContext(ctx context.Context) GetNdbNetworkAvailableIpsResultOutput {
	return o
}

// List of network available ips
func (o GetNdbNetworkAvailableIpsResultOutput) AvailableIps() GetNdbNetworkAvailableIpsAvailableIpArrayOutput {
	return o.ApplyT(func(v GetNdbNetworkAvailableIpsResult) []GetNdbNetworkAvailableIpsAvailableIp { return v.AvailableIps }).(GetNdbNetworkAvailableIpsAvailableIpArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNdbNetworkAvailableIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdbNetworkAvailableIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required) Network Profile id.
func (o GetNdbNetworkAvailableIpsResultOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdbNetworkAvailableIpsResult) string { return v.ProfileId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNdbNetworkAvailableIpsResultOutput{})
}
