// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a datasource to retrieve all the users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.NewUser(ctx, "user", &nutanix.UserArgs{
//				DirectoryServiceUser: &nutanix.UserDirectoryServiceUserArgs{
//					DirectoryServiceReference: &nutanix.UserDirectoryServiceUserDirectoryServiceReferenceArgs{
//						Uuid: pulumi.String("<directory-service-uuid>"),
//					},
//					UserPrincipalName: pulumi.String("test-user@ntnxlab.local"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.LookupUser(ctx, &nutanix.LookupUserArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUsersResult
	err := ctx.Invoke("nutanix:index/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	// - The user kind metadata.
	Metadatas []GetUsersMetadata `pulumi:"metadatas"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	// The version of the API.
	ApiVersion string `pulumi:"apiVersion"`
	// List of Users
	Entities []GetUsersEntity `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - The user kind metadata.
	Metadatas []GetUsersMetadata `pulumi:"metadatas"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUsersResultOutput, error) {
			args := v.(GetUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getUsers:getUsers", args, GetUsersResultOutput{}, options).(GetUsersResultOutput), nil
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	// - The user kind metadata.
	Metadatas GetUsersMetadataArrayInput `pulumi:"metadatas"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

// The version of the API.
func (o GetUsersResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of Users
func (o GetUsersResultOutput) Entities() GetUsersEntityArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersEntity { return v.Entities }).(GetUsersEntityArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// - The user kind metadata.
func (o GetUsersResultOutput) Metadatas() GetUsersMetadataArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersMetadata { return v.Metadatas }).(GetUsersMetadataArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
