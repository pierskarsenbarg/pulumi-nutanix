// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a datasource to retrieve all the users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nutanix.NewUser(ctx, "user", &nutanix.UserArgs{
// 			DirectoryServiceUser: &UserDirectoryServiceUserArgs{
// 				DirectoryServiceReference: &UserDirectoryServiceUserDirectoryServiceReferenceArgs{
// 					Uuid: pulumi.String("<directory-service-uuid>"),
// 				},
// 				UserPrincipalName: pulumi.String("test-user@ntnxlab.local"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = nutanix.LookupUser(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetUsersResult
	err := ctx.Invoke("nutanix:index/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	Metadatas []GetUsersMetadata `pulumi:"metadatas"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	// The version of the API.
	// * `state`: - The state of the entity.
	// * `name`: - The name of the user.
	// * `userType`: - The name of the user.
	// * `displayName`: - The display name of the user (common name) provided by the directory service.
	// * `projectReferenceList`: - A list of projects the user is part of. See #reference for more details.
	// * `accessControlPolicyReferenceList`: - List of ACP references. See #reference for more details.
	// * `directoryServiceUser`: - (Optional) The directory service user configuration. See below for more information.
	// * `identityProviderUser`: - (Optional) (Optional) The identity provider user configuration. See below for more information.
	// * `categories`: - (Optional) Categories for the user.
	// * `projectReference`: - (Optional) The reference to a project.
	// * `ownerReference`: - (Optional) The reference to a user.
	ApiVersion string           `pulumi:"apiVersion"`
	Entities   []GetUsersEntity `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id        string             `pulumi:"id"`
	Metadatas []GetUsersMetadata `pulumi:"metadatas"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResult, error) {
			args := v.(GetUsersArgs)
			r, err := GetUsers(ctx, &args, opts...)
			var s GetUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	Metadatas GetUsersMetadataArrayInput `pulumi:"metadatas"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

// The version of the API.
// * `state`: - The state of the entity.
// * `name`: - The name of the user.
// * `userType`: - The name of the user.
// * `displayName`: - The display name of the user (common name) provided by the directory service.
// * `projectReferenceList`: - A list of projects the user is part of. See #reference for more details.
// * `accessControlPolicyReferenceList`: - List of ACP references. See #reference for more details.
// * `directoryServiceUser`: - (Optional) The directory service user configuration. See below for more information.
// * `identityProviderUser`: - (Optional) (Optional) The identity provider user configuration. See below for more information.
// * `categories`: - (Optional) Categories for the user.
// * `projectReference`: - (Optional) The reference to a project.
// * `ownerReference`: - (Optional) The reference to a user.
func (o GetUsersResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) Entities() GetUsersEntityArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersEntity { return v.Entities }).(GetUsersEntityArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) Metadatas() GetUsersMetadataArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersMetadata { return v.Metadatas }).(GetUsersMetadataArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
