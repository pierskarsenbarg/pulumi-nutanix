// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a cluster or object store as the backup target. For a given Prism Central, there can be up to 3 clusters as backup targets and 1 object store as backup target. If any cluster or object store is not eligible for backup or lacks appropriate permissions, the API request will fail. For object store backup targets, specifying backup policy is mandatory along with the location of the object store.
//
// ## Example Usage
//
// ### Object Store Location
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// using object store location
//			_, err := nutanix.NewPcBackupTargetV2(ctx, "object-store-location", &nutanix.PcBackupTargetV2Args{
//				DomainManagerExtId: pulumi.String("75dde184-3a0e-4f59-a185-03ca1efead17"),
//				Location: &nutanix.PcBackupTargetV2LocationArgs{
//					ObjectStoreLocations: nutanix.PcBackupTargetV2LocationObjectStoreLocationArray{
//						&nutanix.PcBackupTargetV2LocationObjectStoreLocationArgs{
//							ProviderConfigs: nutanix.PcBackupTargetV2LocationObjectStoreLocationProviderConfigArray{
//								&nutanix.PcBackupTargetV2LocationObjectStoreLocationProviderConfigArgs{
//									BucketName: pulumi.String("nutanix-terraform-bucket"),
//									Region:     pulumi.String("us-west-1"),
//									Credentials: &nutanix.PcBackupTargetV2LocationObjectStoreLocationProviderConfigCredentialsArgs{
//										AccessKeyId:     pulumi.String("IHSAJHDHADFWYTKJHFGCJKHASGJHKDSA"),
//										SecretAccessKey: pulumi.String("JGSDHJYHGFHGHDS+JKBASDF/HSDAFHJ+SjkfbdsASDfdJFdSDFJfk"),
//									},
//								},
//							},
//							BackupPolicies: nutanix.PcBackupTargetV2LocationObjectStoreLocationBackupPolicyArray{
//								&nutanix.PcBackupTargetV2LocationObjectStoreLocationBackupPolicyArgs{
//									RpoInMinutes: pulumi.Int(120),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PcBackupTargetV2 struct {
	pulumi.CustomResourceState

	BackupPauseReason pulumi.StringOutput `pulumi:"backupPauseReason"`
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId pulumi.StringOutput             `pulumi:"domainManagerExtId"`
	ExtId              pulumi.StringOutput             `pulumi:"extId"`
	IsBackupPaused     pulumi.BoolOutput               `pulumi:"isBackupPaused"`
	LastSyncTime       pulumi.StringOutput             `pulumi:"lastSyncTime"`
	Links              PcBackupTargetV2LinkArrayOutput `pulumi:"links"`
	// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Location PcBackupTargetV2LocationOutput `pulumi:"location"`
	TenantId pulumi.StringOutput            `pulumi:"tenantId"`
}

// NewPcBackupTargetV2 registers a new resource with the given unique name, arguments, and options.
func NewPcBackupTargetV2(ctx *pulumi.Context,
	name string, args *PcBackupTargetV2Args, opts ...pulumi.ResourceOption) (*PcBackupTargetV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainManagerExtId == nil {
		return nil, errors.New("invalid value for required argument 'DomainManagerExtId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PcBackupTargetV2
	err := ctx.RegisterResource("nutanix:index/pcBackupTargetV2:PcBackupTargetV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPcBackupTargetV2 gets an existing PcBackupTargetV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPcBackupTargetV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PcBackupTargetV2State, opts ...pulumi.ResourceOption) (*PcBackupTargetV2, error) {
	var resource PcBackupTargetV2
	err := ctx.ReadResource("nutanix:index/pcBackupTargetV2:PcBackupTargetV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PcBackupTargetV2 resources.
type pcBackupTargetV2State struct {
	BackupPauseReason *string `pulumi:"backupPauseReason"`
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId *string                `pulumi:"domainManagerExtId"`
	ExtId              *string                `pulumi:"extId"`
	IsBackupPaused     *bool                  `pulumi:"isBackupPaused"`
	LastSyncTime       *string                `pulumi:"lastSyncTime"`
	Links              []PcBackupTargetV2Link `pulumi:"links"`
	// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Location *PcBackupTargetV2Location `pulumi:"location"`
	TenantId *string                   `pulumi:"tenantId"`
}

type PcBackupTargetV2State struct {
	BackupPauseReason pulumi.StringPtrInput
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId pulumi.StringPtrInput
	ExtId              pulumi.StringPtrInput
	IsBackupPaused     pulumi.BoolPtrInput
	LastSyncTime       pulumi.StringPtrInput
	Links              PcBackupTargetV2LinkArrayInput
	// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Location PcBackupTargetV2LocationPtrInput
	TenantId pulumi.StringPtrInput
}

func (PcBackupTargetV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*pcBackupTargetV2State)(nil)).Elem()
}

type pcBackupTargetV2Args struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId string `pulumi:"domainManagerExtId"`
	// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Location PcBackupTargetV2Location `pulumi:"location"`
}

// The set of arguments for constructing a PcBackupTargetV2 resource.
type PcBackupTargetV2Args struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId pulumi.StringInput
	// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
	Location PcBackupTargetV2LocationInput
}

func (PcBackupTargetV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*pcBackupTargetV2Args)(nil)).Elem()
}

type PcBackupTargetV2Input interface {
	pulumi.Input

	ToPcBackupTargetV2Output() PcBackupTargetV2Output
	ToPcBackupTargetV2OutputWithContext(ctx context.Context) PcBackupTargetV2Output
}

func (*PcBackupTargetV2) ElementType() reflect.Type {
	return reflect.TypeOf((**PcBackupTargetV2)(nil)).Elem()
}

func (i *PcBackupTargetV2) ToPcBackupTargetV2Output() PcBackupTargetV2Output {
	return i.ToPcBackupTargetV2OutputWithContext(context.Background())
}

func (i *PcBackupTargetV2) ToPcBackupTargetV2OutputWithContext(ctx context.Context) PcBackupTargetV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(PcBackupTargetV2Output)
}

// PcBackupTargetV2ArrayInput is an input type that accepts PcBackupTargetV2Array and PcBackupTargetV2ArrayOutput values.
// You can construct a concrete instance of `PcBackupTargetV2ArrayInput` via:
//
//	PcBackupTargetV2Array{ PcBackupTargetV2Args{...} }
type PcBackupTargetV2ArrayInput interface {
	pulumi.Input

	ToPcBackupTargetV2ArrayOutput() PcBackupTargetV2ArrayOutput
	ToPcBackupTargetV2ArrayOutputWithContext(context.Context) PcBackupTargetV2ArrayOutput
}

type PcBackupTargetV2Array []PcBackupTargetV2Input

func (PcBackupTargetV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PcBackupTargetV2)(nil)).Elem()
}

func (i PcBackupTargetV2Array) ToPcBackupTargetV2ArrayOutput() PcBackupTargetV2ArrayOutput {
	return i.ToPcBackupTargetV2ArrayOutputWithContext(context.Background())
}

func (i PcBackupTargetV2Array) ToPcBackupTargetV2ArrayOutputWithContext(ctx context.Context) PcBackupTargetV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcBackupTargetV2ArrayOutput)
}

// PcBackupTargetV2MapInput is an input type that accepts PcBackupTargetV2Map and PcBackupTargetV2MapOutput values.
// You can construct a concrete instance of `PcBackupTargetV2MapInput` via:
//
//	PcBackupTargetV2Map{ "key": PcBackupTargetV2Args{...} }
type PcBackupTargetV2MapInput interface {
	pulumi.Input

	ToPcBackupTargetV2MapOutput() PcBackupTargetV2MapOutput
	ToPcBackupTargetV2MapOutputWithContext(context.Context) PcBackupTargetV2MapOutput
}

type PcBackupTargetV2Map map[string]PcBackupTargetV2Input

func (PcBackupTargetV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PcBackupTargetV2)(nil)).Elem()
}

func (i PcBackupTargetV2Map) ToPcBackupTargetV2MapOutput() PcBackupTargetV2MapOutput {
	return i.ToPcBackupTargetV2MapOutputWithContext(context.Background())
}

func (i PcBackupTargetV2Map) ToPcBackupTargetV2MapOutputWithContext(ctx context.Context) PcBackupTargetV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PcBackupTargetV2MapOutput)
}

type PcBackupTargetV2Output struct{ *pulumi.OutputState }

func (PcBackupTargetV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**PcBackupTargetV2)(nil)).Elem()
}

func (o PcBackupTargetV2Output) ToPcBackupTargetV2Output() PcBackupTargetV2Output {
	return o
}

func (o PcBackupTargetV2Output) ToPcBackupTargetV2OutputWithContext(ctx context.Context) PcBackupTargetV2Output {
	return o
}

func (o PcBackupTargetV2Output) BackupPauseReason() pulumi.StringOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.StringOutput { return v.BackupPauseReason }).(pulumi.StringOutput)
}

// -(Required) A unique identifier for the domain manager.
func (o PcBackupTargetV2Output) DomainManagerExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.StringOutput { return v.DomainManagerExtId }).(pulumi.StringOutput)
}

func (o PcBackupTargetV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

func (o PcBackupTargetV2Output) IsBackupPaused() pulumi.BoolOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.BoolOutput { return v.IsBackupPaused }).(pulumi.BoolOutput)
}

func (o PcBackupTargetV2Output) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.StringOutput { return v.LastSyncTime }).(pulumi.StringOutput)
}

func (o PcBackupTargetV2Output) Links() PcBackupTargetV2LinkArrayOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) PcBackupTargetV2LinkArrayOutput { return v.Links }).(PcBackupTargetV2LinkArrayOutput)
}

// -(Required) Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
func (o PcBackupTargetV2Output) Location() PcBackupTargetV2LocationOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) PcBackupTargetV2LocationOutput { return v.Location }).(PcBackupTargetV2LocationOutput)
}

func (o PcBackupTargetV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *PcBackupTargetV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type PcBackupTargetV2ArrayOutput struct{ *pulumi.OutputState }

func (PcBackupTargetV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PcBackupTargetV2)(nil)).Elem()
}

func (o PcBackupTargetV2ArrayOutput) ToPcBackupTargetV2ArrayOutput() PcBackupTargetV2ArrayOutput {
	return o
}

func (o PcBackupTargetV2ArrayOutput) ToPcBackupTargetV2ArrayOutputWithContext(ctx context.Context) PcBackupTargetV2ArrayOutput {
	return o
}

func (o PcBackupTargetV2ArrayOutput) Index(i pulumi.IntInput) PcBackupTargetV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PcBackupTargetV2 {
		return vs[0].([]*PcBackupTargetV2)[vs[1].(int)]
	}).(PcBackupTargetV2Output)
}

type PcBackupTargetV2MapOutput struct{ *pulumi.OutputState }

func (PcBackupTargetV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PcBackupTargetV2)(nil)).Elem()
}

func (o PcBackupTargetV2MapOutput) ToPcBackupTargetV2MapOutput() PcBackupTargetV2MapOutput {
	return o
}

func (o PcBackupTargetV2MapOutput) ToPcBackupTargetV2MapOutputWithContext(ctx context.Context) PcBackupTargetV2MapOutput {
	return o
}

func (o PcBackupTargetV2MapOutput) MapIndex(k pulumi.StringInput) PcBackupTargetV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PcBackupTargetV2 {
		return vs[0].(map[string]*PcBackupTargetV2)[vs[1].(string)]
	}).(PcBackupTargetV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PcBackupTargetV2Input)(nil)).Elem(), &PcBackupTargetV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcBackupTargetV2ArrayInput)(nil)).Elem(), PcBackupTargetV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PcBackupTargetV2MapInput)(nil)).Elem(), PcBackupTargetV2Map{})
	pulumi.RegisterOutputType(PcBackupTargetV2Output{})
	pulumi.RegisterOutputType(PcBackupTargetV2ArrayOutput{})
	pulumi.RegisterOutputType(PcBackupTargetV2MapOutput{})
}
