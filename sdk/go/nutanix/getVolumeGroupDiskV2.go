// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a Query the Volume Disk identified by {extId} in the Volume Group identified by {volumeGroupExtId}.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupVolumeGroupDiskV2(ctx, &nutanix.LookupVolumeGroupDiskV2Args{
//				ExtId:            "1d92110d-26b5-46c0-8c93-20b8171373e0",
//				VolumeGroupExtId: "3770be9d-06be-4e25-b85d-3457d9b0ceb1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVolumeGroupDiskV2(ctx *pulumi.Context, args *LookupVolumeGroupDiskV2Args, opts ...pulumi.InvokeOption) (*LookupVolumeGroupDiskV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVolumeGroupDiskV2Result
	err := ctx.Invoke("nutanix:index/getVolumeGroupDiskV2:getVolumeGroupDiskV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumeGroupDiskV2.
type LookupVolumeGroupDiskV2Args struct {
	// - The external identifier of the Data Source Reference.
	ExtId            string `pulumi:"extId"`
	VolumeGroupExtId string `pulumi:"volumeGroupExtId"`
}

// A collection of values returned by getVolumeGroupDiskV2.
type LookupVolumeGroupDiskV2Result struct {
	// - Volume Disk description.
	Description string `pulumi:"description"`
	// - Disk Data Source Reference.
	DiskDataSourceReferences []GetVolumeGroupDiskV2DiskDataSourceReference `pulumi:"diskDataSourceReferences"`
	// - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
	DiskSizeBytes int `pulumi:"diskSizeBytes"`
	// - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
	DiskStorageFeatures []GetVolumeGroupDiskV2DiskStorageFeature `pulumi:"diskStorageFeatures"`
	// - The external identifier of the Data Source Reference.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - Index of the disk in a Volume Group. This field is optional and immutable.
	Index int `pulumi:"index"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetVolumeGroupDiskV2Link `pulumi:"links"`
	// - Storage container on which the disk must be created. This is a read-only field.
	StorageContainerId string `pulumi:"storageContainerId"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId         string `pulumi:"tenantId"`
	VolumeGroupExtId string `pulumi:"volumeGroupExtId"`
}

func LookupVolumeGroupDiskV2Output(ctx *pulumi.Context, args LookupVolumeGroupDiskV2OutputArgs, opts ...pulumi.InvokeOption) LookupVolumeGroupDiskV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVolumeGroupDiskV2ResultOutput, error) {
			args := v.(LookupVolumeGroupDiskV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getVolumeGroupDiskV2:getVolumeGroupDiskV2", args, LookupVolumeGroupDiskV2ResultOutput{}, options).(LookupVolumeGroupDiskV2ResultOutput), nil
		}).(LookupVolumeGroupDiskV2ResultOutput)
}

// A collection of arguments for invoking getVolumeGroupDiskV2.
type LookupVolumeGroupDiskV2OutputArgs struct {
	// - The external identifier of the Data Source Reference.
	ExtId            pulumi.StringInput `pulumi:"extId"`
	VolumeGroupExtId pulumi.StringInput `pulumi:"volumeGroupExtId"`
}

func (LookupVolumeGroupDiskV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeGroupDiskV2Args)(nil)).Elem()
}

// A collection of values returned by getVolumeGroupDiskV2.
type LookupVolumeGroupDiskV2ResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeGroupDiskV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeGroupDiskV2Result)(nil)).Elem()
}

func (o LookupVolumeGroupDiskV2ResultOutput) ToLookupVolumeGroupDiskV2ResultOutput() LookupVolumeGroupDiskV2ResultOutput {
	return o
}

func (o LookupVolumeGroupDiskV2ResultOutput) ToLookupVolumeGroupDiskV2ResultOutputWithContext(ctx context.Context) LookupVolumeGroupDiskV2ResultOutput {
	return o
}

// - Volume Disk description.
func (o LookupVolumeGroupDiskV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// - Disk Data Source Reference.
func (o LookupVolumeGroupDiskV2ResultOutput) DiskDataSourceReferences() GetVolumeGroupDiskV2DiskDataSourceReferenceArrayOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) []GetVolumeGroupDiskV2DiskDataSourceReference {
		return v.DiskDataSourceReferences
	}).(GetVolumeGroupDiskV2DiskDataSourceReferenceArrayOutput)
}

// - ize of the disk in bytes. This field is mandatory during Volume Group creation if a new disk is being created on the storage container.
func (o LookupVolumeGroupDiskV2ResultOutput) DiskSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) int { return v.DiskSizeBytes }).(pulumi.IntOutput)
}

// - Storage optimization features which must be enabled on the Volume Disks. This is an optional field. If omitted, the disks will honor the Volume Group specific storage features setting.
func (o LookupVolumeGroupDiskV2ResultOutput) DiskStorageFeatures() GetVolumeGroupDiskV2DiskStorageFeatureArrayOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) []GetVolumeGroupDiskV2DiskStorageFeature {
		return v.DiskStorageFeatures
	}).(GetVolumeGroupDiskV2DiskStorageFeatureArrayOutput)
}

// - The external identifier of the Data Source Reference.
func (o LookupVolumeGroupDiskV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVolumeGroupDiskV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - Index of the disk in a Volume Group. This field is optional and immutable.
func (o LookupVolumeGroupDiskV2ResultOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) int { return v.Index }).(pulumi.IntOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupVolumeGroupDiskV2ResultOutput) Links() GetVolumeGroupDiskV2LinkArrayOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) []GetVolumeGroupDiskV2Link { return v.Links }).(GetVolumeGroupDiskV2LinkArrayOutput)
}

// - Storage container on which the disk must be created. This is a read-only field.
func (o LookupVolumeGroupDiskV2ResultOutput) StorageContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.StorageContainerId }).(pulumi.StringOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o LookupVolumeGroupDiskV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o LookupVolumeGroupDiskV2ResultOutput) VolumeGroupExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupDiskV2Result) string { return v.VolumeGroupExtId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeGroupDiskV2ResultOutput{})
}
