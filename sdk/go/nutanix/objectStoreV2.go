// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
type ObjectStoreV2 struct {
	pulumi.CustomResourceState

	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds pulumi.StringArrayOutput `pulumi:"certificateExtIds"`
	// -(Optional) UUID of the AHV or ESXi cluster.
	ClusterExtId pulumi.StringOutput `pulumi:"clusterExtId"`
	// - The time when the Object store was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// -(Optional) The deployment version of the Object store.
	DeploymentVersion pulumi.StringOutput `pulumi:"deploymentVersion"`
	// -(Optional) A brief description of the Object store.
	Description pulumi.StringOutput `pulumi:"description"`
	// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// - The time when the Object store was last updated.
	LastUpdateTime pulumi.StringOutput `pulumi:"lastUpdateTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links ObjectStoreV2LinkArrayOutput `pulumi:"links"`
	// -(Optional) Metadata associated with this resource.
	Metadatas ObjectStoreV2MetadataArrayOutput `pulumi:"metadatas"`
	// -(Required) The name of the Object store.
	Name pulumi.StringOutput `pulumi:"name"`
	// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes pulumi.IntOutput `pulumi:"numWorkerNodes"`
	// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps ObjectStoreV2PublicNetworkIpArrayOutput `pulumi:"publicNetworkIps"`
	// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference pulumi.StringOutput `pulumi:"publicNetworkReference"`
	// -(Optional) The region in which the Object store is deployed.
	Region pulumi.StringOutput `pulumi:"region"`
	// -(Optional) Enum for the state of the Object store.
	// | Enum                                   | Description                                                     |
	// |----------------------------------------|-----------------------------------------------------------------|
	// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State pulumi.StringOutput `pulumi:"state"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIp ObjectStoreV2StorageNetworkDnsIpOutput `pulumi:"storageNetworkDnsIp"`
	// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference pulumi.StringOutput `pulumi:"storageNetworkReference"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVip ObjectStoreV2StorageNetworkVipOutput `pulumi:"storageNetworkVip"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// -(Optional) Size of the Object store in GiB.
	TotalCapacityGib pulumi.IntOutput `pulumi:"totalCapacityGib"`
}

// NewObjectStoreV2 registers a new resource with the given unique name, arguments, and options.
func NewObjectStoreV2(ctx *pulumi.Context,
	name string, args *ObjectStoreV2Args, opts ...pulumi.ResourceOption) (*ObjectStoreV2, error) {
	if args == nil {
		args = &ObjectStoreV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectStoreV2
	err := ctx.RegisterResource("nutanix:index/objectStoreV2:ObjectStoreV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectStoreV2 gets an existing ObjectStoreV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectStoreV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectStoreV2State, opts ...pulumi.ResourceOption) (*ObjectStoreV2, error) {
	var resource ObjectStoreV2
	err := ctx.ReadResource("nutanix:index/objectStoreV2:ObjectStoreV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectStoreV2 resources.
type objectStoreV2State struct {
	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds []string `pulumi:"certificateExtIds"`
	// -(Optional) UUID of the AHV or ESXi cluster.
	ClusterExtId *string `pulumi:"clusterExtId"`
	// - The time when the Object store was created.
	CreationTime *string `pulumi:"creationTime"`
	// -(Optional) The deployment version of the Object store.
	DeploymentVersion *string `pulumi:"deploymentVersion"`
	// -(Optional) A brief description of the Object store.
	Description *string `pulumi:"description"`
	// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain *string `pulumi:"domain"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// - The time when the Object store was last updated.
	LastUpdateTime *string `pulumi:"lastUpdateTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []ObjectStoreV2Link `pulumi:"links"`
	// -(Optional) Metadata associated with this resource.
	Metadatas []ObjectStoreV2Metadata `pulumi:"metadatas"`
	// -(Required) The name of the Object store.
	Name *string `pulumi:"name"`
	// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes *int `pulumi:"numWorkerNodes"`
	// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps []ObjectStoreV2PublicNetworkIp `pulumi:"publicNetworkIps"`
	// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference *string `pulumi:"publicNetworkReference"`
	// -(Optional) The region in which the Object store is deployed.
	Region *string `pulumi:"region"`
	// -(Optional) Enum for the state of the Object store.
	// | Enum                                   | Description                                                     |
	// |----------------------------------------|-----------------------------------------------------------------|
	// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State *string `pulumi:"state"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIp *ObjectStoreV2StorageNetworkDnsIp `pulumi:"storageNetworkDnsIp"`
	// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference *string `pulumi:"storageNetworkReference"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVip *ObjectStoreV2StorageNetworkVip `pulumi:"storageNetworkVip"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId *string `pulumi:"tenantId"`
	// -(Optional) Size of the Object store in GiB.
	TotalCapacityGib *int `pulumi:"totalCapacityGib"`
}

type ObjectStoreV2State struct {
	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds pulumi.StringArrayInput
	// -(Optional) UUID of the AHV or ESXi cluster.
	ClusterExtId pulumi.StringPtrInput
	// - The time when the Object store was created.
	CreationTime pulumi.StringPtrInput
	// -(Optional) The deployment version of the Object store.
	DeploymentVersion pulumi.StringPtrInput
	// -(Optional) A brief description of the Object store.
	Description pulumi.StringPtrInput
	// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain pulumi.StringPtrInput
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// - The time when the Object store was last updated.
	LastUpdateTime pulumi.StringPtrInput
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links ObjectStoreV2LinkArrayInput
	// -(Optional) Metadata associated with this resource.
	Metadatas ObjectStoreV2MetadataArrayInput
	// -(Required) The name of the Object store.
	Name pulumi.StringPtrInput
	// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes pulumi.IntPtrInput
	// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps ObjectStoreV2PublicNetworkIpArrayInput
	// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference pulumi.StringPtrInput
	// -(Optional) The region in which the Object store is deployed.
	Region pulumi.StringPtrInput
	// -(Optional) Enum for the state of the Object store.
	// | Enum                                   | Description                                                     |
	// |----------------------------------------|-----------------------------------------------------------------|
	// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State pulumi.StringPtrInput
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIp ObjectStoreV2StorageNetworkDnsIpPtrInput
	// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference pulumi.StringPtrInput
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVip ObjectStoreV2StorageNetworkVipPtrInput
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId pulumi.StringPtrInput
	// -(Optional) Size of the Object store in GiB.
	TotalCapacityGib pulumi.IntPtrInput
}

func (ObjectStoreV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStoreV2State)(nil)).Elem()
}

type objectStoreV2Args struct {
	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds []string `pulumi:"certificateExtIds"`
	// -(Optional) UUID of the AHV or ESXi cluster.
	ClusterExtId *string `pulumi:"clusterExtId"`
	// -(Optional) The deployment version of the Object store.
	DeploymentVersion *string `pulumi:"deploymentVersion"`
	// -(Optional) A brief description of the Object store.
	Description *string `pulumi:"description"`
	// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain *string `pulumi:"domain"`
	// -(Optional) Metadata associated with this resource.
	Metadatas []ObjectStoreV2Metadata `pulumi:"metadatas"`
	// -(Required) The name of the Object store.
	Name *string `pulumi:"name"`
	// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes *int `pulumi:"numWorkerNodes"`
	// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps []ObjectStoreV2PublicNetworkIp `pulumi:"publicNetworkIps"`
	// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference *string `pulumi:"publicNetworkReference"`
	// -(Optional) The region in which the Object store is deployed.
	Region *string `pulumi:"region"`
	// -(Optional) Enum for the state of the Object store.
	// | Enum                                   | Description                                                     |
	// |----------------------------------------|-----------------------------------------------------------------|
	// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State *string `pulumi:"state"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIp *ObjectStoreV2StorageNetworkDnsIp `pulumi:"storageNetworkDnsIp"`
	// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference *string `pulumi:"storageNetworkReference"`
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVip *ObjectStoreV2StorageNetworkVip `pulumi:"storageNetworkVip"`
	// -(Optional) Size of the Object store in GiB.
	TotalCapacityGib *int `pulumi:"totalCapacityGib"`
}

// The set of arguments for constructing a ObjectStoreV2 resource.
type ObjectStoreV2Args struct {
	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds pulumi.StringArrayInput
	// -(Optional) UUID of the AHV or ESXi cluster.
	ClusterExtId pulumi.StringPtrInput
	// -(Optional) The deployment version of the Object store.
	DeploymentVersion pulumi.StringPtrInput
	// -(Optional) A brief description of the Object store.
	Description pulumi.StringPtrInput
	// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain pulumi.StringPtrInput
	// -(Optional) Metadata associated with this resource.
	Metadatas ObjectStoreV2MetadataArrayInput
	// -(Required) The name of the Object store.
	Name pulumi.StringPtrInput
	// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes pulumi.IntPtrInput
	// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps ObjectStoreV2PublicNetworkIpArrayInput
	// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference pulumi.StringPtrInput
	// -(Optional) The region in which the Object store is deployed.
	Region pulumi.StringPtrInput
	// -(Optional) Enum for the state of the Object store.
	// | Enum                                   | Description                                                     |
	// |----------------------------------------|-----------------------------------------------------------------|
	// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State pulumi.StringPtrInput
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIp ObjectStoreV2StorageNetworkDnsIpPtrInput
	// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference pulumi.StringPtrInput
	// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVip ObjectStoreV2StorageNetworkVipPtrInput
	// -(Optional) Size of the Object store in GiB.
	TotalCapacityGib pulumi.IntPtrInput
}

func (ObjectStoreV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*objectStoreV2Args)(nil)).Elem()
}

type ObjectStoreV2Input interface {
	pulumi.Input

	ToObjectStoreV2Output() ObjectStoreV2Output
	ToObjectStoreV2OutputWithContext(ctx context.Context) ObjectStoreV2Output
}

func (*ObjectStoreV2) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStoreV2)(nil)).Elem()
}

func (i *ObjectStoreV2) ToObjectStoreV2Output() ObjectStoreV2Output {
	return i.ToObjectStoreV2OutputWithContext(context.Background())
}

func (i *ObjectStoreV2) ToObjectStoreV2OutputWithContext(ctx context.Context) ObjectStoreV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStoreV2Output)
}

// ObjectStoreV2ArrayInput is an input type that accepts ObjectStoreV2Array and ObjectStoreV2ArrayOutput values.
// You can construct a concrete instance of `ObjectStoreV2ArrayInput` via:
//
//	ObjectStoreV2Array{ ObjectStoreV2Args{...} }
type ObjectStoreV2ArrayInput interface {
	pulumi.Input

	ToObjectStoreV2ArrayOutput() ObjectStoreV2ArrayOutput
	ToObjectStoreV2ArrayOutputWithContext(context.Context) ObjectStoreV2ArrayOutput
}

type ObjectStoreV2Array []ObjectStoreV2Input

func (ObjectStoreV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStoreV2)(nil)).Elem()
}

func (i ObjectStoreV2Array) ToObjectStoreV2ArrayOutput() ObjectStoreV2ArrayOutput {
	return i.ToObjectStoreV2ArrayOutputWithContext(context.Background())
}

func (i ObjectStoreV2Array) ToObjectStoreV2ArrayOutputWithContext(ctx context.Context) ObjectStoreV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStoreV2ArrayOutput)
}

// ObjectStoreV2MapInput is an input type that accepts ObjectStoreV2Map and ObjectStoreV2MapOutput values.
// You can construct a concrete instance of `ObjectStoreV2MapInput` via:
//
//	ObjectStoreV2Map{ "key": ObjectStoreV2Args{...} }
type ObjectStoreV2MapInput interface {
	pulumi.Input

	ToObjectStoreV2MapOutput() ObjectStoreV2MapOutput
	ToObjectStoreV2MapOutputWithContext(context.Context) ObjectStoreV2MapOutput
}

type ObjectStoreV2Map map[string]ObjectStoreV2Input

func (ObjectStoreV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStoreV2)(nil)).Elem()
}

func (i ObjectStoreV2Map) ToObjectStoreV2MapOutput() ObjectStoreV2MapOutput {
	return i.ToObjectStoreV2MapOutputWithContext(context.Background())
}

func (i ObjectStoreV2Map) ToObjectStoreV2MapOutputWithContext(ctx context.Context) ObjectStoreV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStoreV2MapOutput)
}

type ObjectStoreV2Output struct{ *pulumi.OutputState }

func (ObjectStoreV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectStoreV2)(nil)).Elem()
}

func (o ObjectStoreV2Output) ToObjectStoreV2Output() ObjectStoreV2Output {
	return o
}

func (o ObjectStoreV2Output) ToObjectStoreV2OutputWithContext(ctx context.Context) ObjectStoreV2Output {
	return o
}

// - A list of the UUIDs of the certificates of an Object store.
func (o ObjectStoreV2Output) CertificateExtIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringArrayOutput { return v.CertificateExtIds }).(pulumi.StringArrayOutput)
}

// -(Optional) UUID of the AHV or ESXi cluster.
func (o ObjectStoreV2Output) ClusterExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.ClusterExtId }).(pulumi.StringOutput)
}

// - The time when the Object store was created.
func (o ObjectStoreV2Output) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// -(Optional) The deployment version of the Object store.
func (o ObjectStoreV2Output) DeploymentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.DeploymentVersion }).(pulumi.StringOutput)
}

// -(Optional) A brief description of the Object store.
func (o ObjectStoreV2Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// -(Optional) The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
func (o ObjectStoreV2Output) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o ObjectStoreV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - The time when the Object store was last updated.
func (o ObjectStoreV2Output) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o ObjectStoreV2Output) Links() ObjectStoreV2LinkArrayOutput {
	return o.ApplyT(func(v *ObjectStoreV2) ObjectStoreV2LinkArrayOutput { return v.Links }).(ObjectStoreV2LinkArrayOutput)
}

// -(Optional) Metadata associated with this resource.
func (o ObjectStoreV2Output) Metadatas() ObjectStoreV2MetadataArrayOutput {
	return o.ApplyT(func(v *ObjectStoreV2) ObjectStoreV2MetadataArrayOutput { return v.Metadatas }).(ObjectStoreV2MetadataArrayOutput)
}

// -(Required) The name of the Object store.
func (o ObjectStoreV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// -(Optional) The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
func (o ObjectStoreV2Output) NumWorkerNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.IntOutput { return v.NumWorkerNodes }).(pulumi.IntOutput)
}

// -(Optional) A list of static IP addresses used as public IPs to access the Object store.
func (o ObjectStoreV2Output) PublicNetworkIps() ObjectStoreV2PublicNetworkIpArrayOutput {
	return o.ApplyT(func(v *ObjectStoreV2) ObjectStoreV2PublicNetworkIpArrayOutput { return v.PublicNetworkIps }).(ObjectStoreV2PublicNetworkIpArrayOutput)
}

// -(Optional) Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
func (o ObjectStoreV2Output) PublicNetworkReference() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.PublicNetworkReference }).(pulumi.StringOutput)
}

// -(Optional) The region in which the Object store is deployed.
func (o ObjectStoreV2Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// -(Optional) Enum for the state of the Object store.
// | Enum                                   | Description                                                     |
// |----------------------------------------|-----------------------------------------------------------------|
// | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
// | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
// | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
// | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
// | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
// | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
// | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
// | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
// | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
// | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
func (o ObjectStoreV2Output) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
func (o ObjectStoreV2Output) StorageNetworkDnsIp() ObjectStoreV2StorageNetworkDnsIpOutput {
	return o.ApplyT(func(v *ObjectStoreV2) ObjectStoreV2StorageNetworkDnsIpOutput { return v.StorageNetworkDnsIp }).(ObjectStoreV2StorageNetworkDnsIpOutput)
}

// -(Optional) Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
func (o ObjectStoreV2Output) StorageNetworkReference() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.StorageNetworkReference }).(pulumi.StringOutput)
}

// -(Optional) An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
func (o ObjectStoreV2Output) StorageNetworkVip() ObjectStoreV2StorageNetworkVipOutput {
	return o.ApplyT(func(v *ObjectStoreV2) ObjectStoreV2StorageNetworkVipOutput { return v.StorageNetworkVip }).(ObjectStoreV2StorageNetworkVipOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o ObjectStoreV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// -(Optional) Size of the Object store in GiB.
func (o ObjectStoreV2Output) TotalCapacityGib() pulumi.IntOutput {
	return o.ApplyT(func(v *ObjectStoreV2) pulumi.IntOutput { return v.TotalCapacityGib }).(pulumi.IntOutput)
}

type ObjectStoreV2ArrayOutput struct{ *pulumi.OutputState }

func (ObjectStoreV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectStoreV2)(nil)).Elem()
}

func (o ObjectStoreV2ArrayOutput) ToObjectStoreV2ArrayOutput() ObjectStoreV2ArrayOutput {
	return o
}

func (o ObjectStoreV2ArrayOutput) ToObjectStoreV2ArrayOutputWithContext(ctx context.Context) ObjectStoreV2ArrayOutput {
	return o
}

func (o ObjectStoreV2ArrayOutput) Index(i pulumi.IntInput) ObjectStoreV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectStoreV2 {
		return vs[0].([]*ObjectStoreV2)[vs[1].(int)]
	}).(ObjectStoreV2Output)
}

type ObjectStoreV2MapOutput struct{ *pulumi.OutputState }

func (ObjectStoreV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectStoreV2)(nil)).Elem()
}

func (o ObjectStoreV2MapOutput) ToObjectStoreV2MapOutput() ObjectStoreV2MapOutput {
	return o
}

func (o ObjectStoreV2MapOutput) ToObjectStoreV2MapOutputWithContext(ctx context.Context) ObjectStoreV2MapOutput {
	return o
}

func (o ObjectStoreV2MapOutput) MapIndex(k pulumi.StringInput) ObjectStoreV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectStoreV2 {
		return vs[0].(map[string]*ObjectStoreV2)[vs[1].(string)]
	}).(ObjectStoreV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStoreV2Input)(nil)).Elem(), &ObjectStoreV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStoreV2ArrayInput)(nil)).Elem(), ObjectStoreV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStoreV2MapInput)(nil)).Elem(), ObjectStoreV2Map{})
	pulumi.RegisterOutputType(ObjectStoreV2Output{})
	pulumi.RegisterOutputType(ObjectStoreV2ArrayOutput{})
	pulumi.RegisterOutputType(ObjectStoreV2MapOutput{})
}
