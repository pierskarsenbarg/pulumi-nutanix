// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a Network Security Policy by ExtID
func LookupNetworkSecurityPolicyV2(ctx *pulumi.Context, args *LookupNetworkSecurityPolicyV2Args, opts ...pulumi.InvokeOption) (*LookupNetworkSecurityPolicyV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkSecurityPolicyV2Result
	err := ctx.Invoke("nutanix:index/getNetworkSecurityPolicyV2:getNetworkSecurityPolicyV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkSecurityPolicyV2.
type LookupNetworkSecurityPolicyV2Args struct {
	// Network security policy UUID.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getNetworkSecurityPolicyV2.
type LookupNetworkSecurityPolicyV2Result struct {
	// created by.
	CreatedBy string `pulumi:"createdBy"`
	// creation time of NSP
	CreationTime string `pulumi:"creationTime"`
	// A user defined annotation for a rule.
	Description string `pulumi:"description"`
	// A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// If Hitlog is enabled.
	IsHitlogEnabled bool `pulumi:"isHitlogEnabled"`
	// If Ipv6 Traffic is allowed.
	IsIpv6TrafficAllowed bool `pulumi:"isIpv6TrafficAllowed"`
	// Is system defined NSP
	IsSystemDefined bool `pulumi:"isSystemDefined"`
	// last updated time
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetNetworkSecurityPolicyV2Link `pulumi:"links"`
	// Name of the Flow Network Security Policy.
	Name string `pulumi:"name"`
	// A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
	Rules []GetNetworkSecurityPolicyV2Rule `pulumi:"rules"`
	// Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
	Scope string `pulumi:"scope"`
	// Uuids of the secured groups in the NSP.
	SecuredGroups []string `pulumi:"securedGroups"`
	// Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it.
	State string `pulumi:"state"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId string `pulumi:"tenantId"`
	// Icmp service Type. Ignore this field if Type has to be ANY.
	Type string `pulumi:"type"`
	// A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
	VpcReferences []string `pulumi:"vpcReferences"`
}

func LookupNetworkSecurityPolicyV2Output(ctx *pulumi.Context, args LookupNetworkSecurityPolicyV2OutputArgs, opts ...pulumi.InvokeOption) LookupNetworkSecurityPolicyV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkSecurityPolicyV2ResultOutput, error) {
			args := v.(LookupNetworkSecurityPolicyV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getNetworkSecurityPolicyV2:getNetworkSecurityPolicyV2", args, LookupNetworkSecurityPolicyV2ResultOutput{}, options).(LookupNetworkSecurityPolicyV2ResultOutput), nil
		}).(LookupNetworkSecurityPolicyV2ResultOutput)
}

// A collection of arguments for invoking getNetworkSecurityPolicyV2.
type LookupNetworkSecurityPolicyV2OutputArgs struct {
	// Network security policy UUID.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (LookupNetworkSecurityPolicyV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityPolicyV2Args)(nil)).Elem()
}

// A collection of values returned by getNetworkSecurityPolicyV2.
type LookupNetworkSecurityPolicyV2ResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkSecurityPolicyV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityPolicyV2Result)(nil)).Elem()
}

func (o LookupNetworkSecurityPolicyV2ResultOutput) ToLookupNetworkSecurityPolicyV2ResultOutput() LookupNetworkSecurityPolicyV2ResultOutput {
	return o
}

func (o LookupNetworkSecurityPolicyV2ResultOutput) ToLookupNetworkSecurityPolicyV2ResultOutputWithContext(ctx context.Context) LookupNetworkSecurityPolicyV2ResultOutput {
	return o
}

// created by.
func (o LookupNetworkSecurityPolicyV2ResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// creation time of NSP
func (o LookupNetworkSecurityPolicyV2ResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.CreationTime }).(pulumi.StringOutput)
}

// A user defined annotation for a rule.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// A globally unique identifier of an instance that is suitable for external consumption.
func (o LookupNetworkSecurityPolicyV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// If Hitlog is enabled.
func (o LookupNetworkSecurityPolicyV2ResultOutput) IsHitlogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) bool { return v.IsHitlogEnabled }).(pulumi.BoolOutput)
}

// If Ipv6 Traffic is allowed.
func (o LookupNetworkSecurityPolicyV2ResultOutput) IsIpv6TrafficAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) bool { return v.IsIpv6TrafficAllowed }).(pulumi.BoolOutput)
}

// Is system defined NSP
func (o LookupNetworkSecurityPolicyV2ResultOutput) IsSystemDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) bool { return v.IsSystemDefined }).(pulumi.BoolOutput)
}

// last updated time
func (o LookupNetworkSecurityPolicyV2ResultOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Links() GetNetworkSecurityPolicyV2LinkArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) []GetNetworkSecurityPolicyV2Link { return v.Links }).(GetNetworkSecurityPolicyV2LinkArrayOutput)
}

// Name of the Flow Network Security Policy.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// A list of rules that form a policy. For isolation policies, use isolation rules; for application or quarantine policies, use application rules.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Rules() GetNetworkSecurityPolicyV2RuleArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) []GetNetworkSecurityPolicyV2Rule { return v.Rules }).(GetNetworkSecurityPolicyV2RuleArrayOutput)
}

// Defines the scope of the policy. Currently, only ALL_VLAN and VPC_LIST are supported. If scope is not provided, the default is set based on whether vpcReferences field is provided or not.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.Scope }).(pulumi.StringOutput)
}

// Uuids of the secured groups in the NSP.
func (o LookupNetworkSecurityPolicyV2ResultOutput) SecuredGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) []string { return v.SecuredGroups }).(pulumi.StringArrayOutput)
}

// Whether the policy is applied or monitored; can be omitted or set null to save the policy without applying or monitoring it.
func (o LookupNetworkSecurityPolicyV2ResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.State }).(pulumi.StringOutput)
}

// A globally unique identifier that represents the tenant that owns this entity
func (o LookupNetworkSecurityPolicyV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

// Icmp service Type. Ignore this field if Type has to be ANY.
func (o LookupNetworkSecurityPolicyV2ResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) string { return v.Type }).(pulumi.StringOutput)
}

// A list of external ids for VPCs, used only when the scope of policy is a list of VPCs.
func (o LookupNetworkSecurityPolicyV2ResultOutput) VpcReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityPolicyV2Result) []string { return v.VpcReferences }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkSecurityPolicyV2ResultOutput{})
}
