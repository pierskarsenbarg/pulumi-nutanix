// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all database instances in Nutanix Database Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			dbs, err := nutanix.GetNdbDatabases(ctx, &nutanix.GetNdbDatabasesArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("dbsOutput", dbs)
//			return nil
//		})
//	}
//
// ```
//
// ## databaseInstances
//
// The following attributes are exported for each database_instances:
//
// * `id`: - id of database instance
// * `name`: - name of database instance
// * `description`: - description
// * `dateCreated`: - creation date
// * `dateModified`: - date modified
// * `properties`: - properties
// * `tags`: - tags attached
// * `clustered`: - if clustered or not
// * `clone`: - if cloned
// * `databaseName`: - database instance name
// * `type`: - database engine type
// * `status`: - status of database instance
// * `dbserverLogicalClusterId`: - NA
// * `timeMachineId`: - time machine ID
// * `timeZone`: - timezone
// * `info`: - info regarding disks, vm, storage, etc.
// * `metric`: - metrics
// * `parentDatabaseId`: - parent database ID
// * `lcmConfig`: - lcm configuration
// * `timeMachine`: - time machine related config info
// * `databaseNodes`: - nodes info
// * `dbserverLogicalCluster`: - NA
// * `linkedDatabases`: - list of databases created in instance with info
//
// See detailed information in [List Database Instances](https://www.nutanix.dev/api_references/ndb/#/1e508756bcdcc-get-all-the-databases).
func GetNdbDatabases(ctx *pulumi.Context, args *GetNdbDatabasesArgs, opts ...pulumi.InvokeOption) (*GetNdbDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNdbDatabasesResult
	err := ctx.Invoke("nutanix:index/getNdbDatabases:getNdbDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbDatabases.
type GetNdbDatabasesArgs struct {
	DatabaseType *string `pulumi:"databaseType"`
}

// A collection of values returned by getNdbDatabases.
type GetNdbDatabasesResult struct {
	// - list of database instances
	DatabaseInstances []GetNdbDatabasesDatabaseInstance `pulumi:"databaseInstances"`
	DatabaseType      *string                           `pulumi:"databaseType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetNdbDatabasesOutput(ctx *pulumi.Context, args GetNdbDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetNdbDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNdbDatabasesResultOutput, error) {
			args := v.(GetNdbDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getNdbDatabases:getNdbDatabases", args, GetNdbDatabasesResultOutput{}, options).(GetNdbDatabasesResultOutput), nil
		}).(GetNdbDatabasesResultOutput)
}

// A collection of arguments for invoking getNdbDatabases.
type GetNdbDatabasesOutputArgs struct {
	DatabaseType pulumi.StringPtrInput `pulumi:"databaseType"`
}

func (GetNdbDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getNdbDatabases.
type GetNdbDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetNdbDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbDatabasesResult)(nil)).Elem()
}

func (o GetNdbDatabasesResultOutput) ToGetNdbDatabasesResultOutput() GetNdbDatabasesResultOutput {
	return o
}

func (o GetNdbDatabasesResultOutput) ToGetNdbDatabasesResultOutputWithContext(ctx context.Context) GetNdbDatabasesResultOutput {
	return o
}

// - list of database instances
func (o GetNdbDatabasesResultOutput) DatabaseInstances() GetNdbDatabasesDatabaseInstanceArrayOutput {
	return o.ApplyT(func(v GetNdbDatabasesResult) []GetNdbDatabasesDatabaseInstance { return v.DatabaseInstances }).(GetNdbDatabasesDatabaseInstanceArrayOutput)
}

func (o GetNdbDatabasesResultOutput) DatabaseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNdbDatabasesResult) *string { return v.DatabaseType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNdbDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdbDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNdbDatabasesResultOutput{})
}
