// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix datasource to Retrieves the Nutanix Guest Tools configuration for a Virtual Machine.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetNgtConfigurationV2(ctx, &nutanix.GetNgtConfigurationV2Args{
//				ExtId: "f29535e2-6bd8-4782-b879-409f17217b31",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNgtConfigurationV2(ctx *pulumi.Context, args *GetNgtConfigurationV2Args, opts ...pulumi.InvokeOption) (*GetNgtConfigurationV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNgtConfigurationV2Result
	err := ctx.Invoke("nutanix:index/getNgtConfigurationV2:getNgtConfigurationV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNgtConfigurationV2.
type GetNgtConfigurationV2Args struct {
	// uuid of the Virtual Machine.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getNgtConfigurationV2.
type GetNgtConfigurationV2Result struct {
	// Version of Nutanix Guest Tools available on the cluster.
	AvailableVersion string `pulumi:"availableVersion"`
	// The list of the application names that are enabled on the guest VM. [`SELF_SERVICE_RESTORE`, `VSS_SNAPSHOT`]
	Capablities []string `pulumi:"capablities"`
	// uuid of the Virtual Machine.
	ExtId string `pulumi:"extId"`
	// Version of the operating system on the VM.
	GuestOsVersion string `pulumi:"guestOsVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether Nutanix Guest Tools is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// Indicates whether Nutanix Guest Tools is installed on the VM or not.
	IsInstalled bool `pulumi:"isInstalled"`
	// Indicates whether Nutanix Guest Tools ISO is inserted or not.
	IsIsoInserted bool `pulumi:"isIsoInserted"`
	// Indicates whether the communication from VM to CVM is active or not.
	IsReachable bool `pulumi:"isReachable"`
	// Indicates whether the VM mobility drivers are installed on the VM or not.
	IsVmMobilityDriversInstalled bool `pulumi:"isVmMobilityDriversInstalled"`
	// Indicates whether the VM is configured to take VSS snapshots through NGT or not.
	IsVssSnapshotCapable bool `pulumi:"isVssSnapshotCapable"`
	// Version of Nutanix Guest Tools installed on the VM.
	Version string `pulumi:"version"`
}

func GetNgtConfigurationV2Output(ctx *pulumi.Context, args GetNgtConfigurationV2OutputArgs, opts ...pulumi.InvokeOption) GetNgtConfigurationV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNgtConfigurationV2ResultOutput, error) {
			args := v.(GetNgtConfigurationV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getNgtConfigurationV2:getNgtConfigurationV2", args, GetNgtConfigurationV2ResultOutput{}, options).(GetNgtConfigurationV2ResultOutput), nil
		}).(GetNgtConfigurationV2ResultOutput)
}

// A collection of arguments for invoking getNgtConfigurationV2.
type GetNgtConfigurationV2OutputArgs struct {
	// uuid of the Virtual Machine.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (GetNgtConfigurationV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNgtConfigurationV2Args)(nil)).Elem()
}

// A collection of values returned by getNgtConfigurationV2.
type GetNgtConfigurationV2ResultOutput struct{ *pulumi.OutputState }

func (GetNgtConfigurationV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNgtConfigurationV2Result)(nil)).Elem()
}

func (o GetNgtConfigurationV2ResultOutput) ToGetNgtConfigurationV2ResultOutput() GetNgtConfigurationV2ResultOutput {
	return o
}

func (o GetNgtConfigurationV2ResultOutput) ToGetNgtConfigurationV2ResultOutputWithContext(ctx context.Context) GetNgtConfigurationV2ResultOutput {
	return o
}

// Version of Nutanix Guest Tools available on the cluster.
func (o GetNgtConfigurationV2ResultOutput) AvailableVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) string { return v.AvailableVersion }).(pulumi.StringOutput)
}

// The list of the application names that are enabled on the guest VM. [`SELF_SERVICE_RESTORE`, `VSS_SNAPSHOT`]
func (o GetNgtConfigurationV2ResultOutput) Capablities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) []string { return v.Capablities }).(pulumi.StringArrayOutput)
}

// uuid of the Virtual Machine.
func (o GetNgtConfigurationV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// Version of the operating system on the VM.
func (o GetNgtConfigurationV2ResultOutput) GuestOsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) string { return v.GuestOsVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNgtConfigurationV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether Nutanix Guest Tools is enabled or not.
func (o GetNgtConfigurationV2ResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Indicates whether Nutanix Guest Tools is installed on the VM or not.
func (o GetNgtConfigurationV2ResultOutput) IsInstalled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsInstalled }).(pulumi.BoolOutput)
}

// Indicates whether Nutanix Guest Tools ISO is inserted or not.
func (o GetNgtConfigurationV2ResultOutput) IsIsoInserted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsIsoInserted }).(pulumi.BoolOutput)
}

// Indicates whether the communication from VM to CVM is active or not.
func (o GetNgtConfigurationV2ResultOutput) IsReachable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsReachable }).(pulumi.BoolOutput)
}

// Indicates whether the VM mobility drivers are installed on the VM or not.
func (o GetNgtConfigurationV2ResultOutput) IsVmMobilityDriversInstalled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsVmMobilityDriversInstalled }).(pulumi.BoolOutput)
}

// Indicates whether the VM is configured to take VSS snapshots through NGT or not.
func (o GetNgtConfigurationV2ResultOutput) IsVssSnapshotCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) bool { return v.IsVssSnapshotCapable }).(pulumi.BoolOutput)
}

// Version of Nutanix Guest Tools installed on the VM.
func (o GetNgtConfigurationV2ResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetNgtConfigurationV2Result) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNgtConfigurationV2ResultOutput{})
}
