// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Describes a Image
func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageResult
	err := ctx.Invoke("nutanix:index/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type LookupImageArgs struct {
	// - Categories for the image.
	Categories []GetImageCategory `pulumi:"categories"`
	// Represents image UUID
	ImageId *string `pulumi:"imageId"`
	// Represents image name
	ImageName *string `pulumi:"imageName"`
}

// A collection of values returned by getImage.
type LookupImageResult struct {
	ApiVersion string `pulumi:"apiVersion"`
	// - The supported CPU architecture for a disk image.
	Architecture string `pulumi:"architecture"`
	// - The reference to a availability_zone.
	AvailabilityZoneReference map[string]string `pulumi:"availabilityZoneReference"`
	// - Categories for the image.
	Categories []GetImageCategory `pulumi:"categories"`
	// - Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.
	Checksum                     map[string]string                     `pulumi:"checksum"`
	ClusterName                  string                                `pulumi:"clusterName"`
	ClusterReferences            []GetImageClusterReference            `pulumi:"clusterReferences"`
	ClusterUuid                  string                                `pulumi:"clusterUuid"`
	CurrentClusterReferenceLists []GetImageCurrentClusterReferenceList `pulumi:"currentClusterReferenceLists"`
	// - A description for image.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	ImageId   *string `pulumi:"imageId"`
	ImageName *string `pulumi:"imageName"`
	// - The type of image.
	ImageType string `pulumi:"imageType"`
	// - The image kind metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// - the name.
	Name string `pulumi:"name"`
	// - The reference to a user.
	OwnerReference map[string]string `pulumi:"ownerReference"`
	// - The reference to a project.
	ProjectReference map[string]string `pulumi:"projectReference"`
	// - List of URIs where the raw image data can be accessed.
	RetrievalUriLists []string `pulumi:"retrievalUriLists"`
	// - The size of the image in bytes.
	SizeBytes int `pulumi:"sizeBytes"`
	// - The source URI points at the location of the source image which is used to create/update image.
	SourceUri string `pulumi:"sourceUri"`
	// - The state of the image.
	State string `pulumi:"state"`
	// - The image version.
	Version map[string]string `pulumi:"version"`
}

func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageResult, error) {
			args := v.(LookupImageArgs)
			r, err := LookupImage(ctx, &args, opts...)
			var s LookupImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageResultOutput)
}

// A collection of arguments for invoking getImage.
type LookupImageOutputArgs struct {
	// - Categories for the image.
	Categories GetImageCategoryArrayInput `pulumi:"categories"`
	// Represents image UUID
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// Represents image name
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupImageResult] {
	return pulumix.Output[LookupImageResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupImageResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// - The supported CPU architecture for a disk image.
func (o LookupImageResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// - The reference to a availability_zone.
func (o LookupImageResultOutput) AvailabilityZoneReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.AvailabilityZoneReference }).(pulumi.StringMapOutput)
}

// - Categories for the image.
func (o LookupImageResultOutput) Categories() GetImageCategoryArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageCategory { return v.Categories }).(GetImageCategoryArrayOutput)
}

// - Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.
func (o LookupImageResultOutput) Checksum() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.Checksum }).(pulumi.StringMapOutput)
}

func (o LookupImageResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ClusterReferences() GetImageClusterReferenceArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageClusterReference { return v.ClusterReferences }).(GetImageClusterReferenceArrayOutput)
}

func (o LookupImageResultOutput) ClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ClusterUuid }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) CurrentClusterReferenceLists() GetImageCurrentClusterReferenceListArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageCurrentClusterReferenceList { return v.CurrentClusterReferenceLists }).(GetImageCurrentClusterReferenceListArrayOutput)
}

// - A description for image.
func (o LookupImageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o LookupImageResultOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImageResult) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// - The type of image.
func (o LookupImageResultOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageType }).(pulumi.StringOutput)
}

// - The image kind metadata.
func (o LookupImageResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// - the name.
func (o LookupImageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Name }).(pulumi.StringOutput)
}

// - The reference to a user.
func (o LookupImageResultOutput) OwnerReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.OwnerReference }).(pulumi.StringMapOutput)
}

// - The reference to a project.
func (o LookupImageResultOutput) ProjectReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.ProjectReference }).(pulumi.StringMapOutput)
}

// - List of URIs where the raw image data can be accessed.
func (o LookupImageResultOutput) RetrievalUriLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []string { return v.RetrievalUriLists }).(pulumi.StringArrayOutput)
}

// - The size of the image in bytes.
func (o LookupImageResultOutput) SizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupImageResult) int { return v.SizeBytes }).(pulumi.IntOutput)
}

// - The source URI points at the location of the source image which is used to create/update image.
func (o LookupImageResultOutput) SourceUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.SourceUri }).(pulumi.StringOutput)
}

// - The state of the image.
func (o LookupImageResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.State }).(pulumi.StringOutput)
}

// - The image version.
func (o LookupImageResultOutput) Version() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.Version }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
