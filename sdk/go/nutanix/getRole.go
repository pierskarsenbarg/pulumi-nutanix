// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a Role.
func LookupRole(ctx *pulumi.Context, args *LookupRoleArgs, opts ...pulumi.InvokeOption) (*LookupRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoleResult
	err := ctx.Invoke("nutanix:index/getRole:getRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRole.
type LookupRoleArgs struct {
	// - Categories for the Role.
	Categories []GetRoleCategory `pulumi:"categories"`
	// - (Optional) The UUID of a Role.
	RoleId *string `pulumi:"roleId"`
	// - (Optional) The name of a Role.
	RoleName *string `pulumi:"roleName"`
}

// A collection of values returned by getRole.
type LookupRoleResult struct {
	// The version of the API.
	ApiVersion string `pulumi:"apiVersion"`
	// - Categories for the Role.
	Categories []GetRoleCategory `pulumi:"categories"`
	// - The description of the Role.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - The role kind metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// - the name(Optional).
	Name string `pulumi:"name"`
	// - The reference to a user.
	OwnerReference map[string]string `pulumi:"ownerReference"`
	// - (Required) List of permission references.
	PermissionReferenceLists []GetRolePermissionReferenceList `pulumi:"permissionReferenceLists"`
	// - The reference to a project.
	ProjectReference map[string]string `pulumi:"projectReference"`
	RoleId           *string           `pulumi:"roleId"`
	RoleName         *string           `pulumi:"roleName"`
	// - The state of the role.
	State string `pulumi:"state"`
}

func LookupRoleOutput(ctx *pulumi.Context, args LookupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupRoleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoleResultOutput, error) {
			args := v.(LookupRoleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getRole:getRole", args, LookupRoleResultOutput{}, options).(LookupRoleResultOutput), nil
		}).(LookupRoleResultOutput)
}

// A collection of arguments for invoking getRole.
type LookupRoleOutputArgs struct {
	// - Categories for the Role.
	Categories GetRoleCategoryArrayInput `pulumi:"categories"`
	// - (Optional) The UUID of a Role.
	RoleId pulumi.StringPtrInput `pulumi:"roleId"`
	// - (Optional) The name of a Role.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (LookupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleArgs)(nil)).Elem()
}

// A collection of values returned by getRole.
type LookupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleResult)(nil)).Elem()
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutput() LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutputWithContext(ctx context.Context) LookupRoleResultOutput {
	return o
}

// The version of the API.
func (o LookupRoleResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// - Categories for the Role.
func (o LookupRoleResultOutput) Categories() GetRoleCategoryArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []GetRoleCategory { return v.Categories }).(GetRoleCategoryArrayOutput)
}

// - The description of the Role.
func (o LookupRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// - The role kind metadata.
func (o LookupRoleResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoleResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// - the name(Optional).
func (o LookupRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// - The reference to a user.
func (o LookupRoleResultOutput) OwnerReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoleResult) map[string]string { return v.OwnerReference }).(pulumi.StringMapOutput)
}

// - (Required) List of permission references.
func (o LookupRoleResultOutput) PermissionReferenceLists() GetRolePermissionReferenceListArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []GetRolePermissionReferenceList { return v.PermissionReferenceLists }).(GetRolePermissionReferenceListArrayOutput)
}

// - The reference to a project.
func (o LookupRoleResultOutput) ProjectReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoleResult) map[string]string { return v.ProjectReference }).(pulumi.StringMapOutput)
}

func (o LookupRoleResultOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o LookupRoleResultOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

// - The state of the role.
func (o LookupRoleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleResultOutput{})
}
