// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeployTemplatesV2 struct {
	pulumi.CustomResourceState

	ClusterReference     pulumi.StringOutput                             `pulumi:"clusterReference"`
	ExtId                pulumi.StringOutput                             `pulumi:"extId"`
	NumberOfVms          pulumi.IntOutput                                `pulumi:"numberOfVms"`
	OverrideVmConfigMaps DeployTemplatesV2OverrideVmConfigMapArrayOutput `pulumi:"overrideVmConfigMaps"`
	VersionId            pulumi.StringPtrOutput                          `pulumi:"versionId"`
}

// NewDeployTemplatesV2 registers a new resource with the given unique name, arguments, and options.
func NewDeployTemplatesV2(ctx *pulumi.Context,
	name string, args *DeployTemplatesV2Args, opts ...pulumi.ResourceOption) (*DeployTemplatesV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterReference == nil {
		return nil, errors.New("invalid value for required argument 'ClusterReference'")
	}
	if args.ExtId == nil {
		return nil, errors.New("invalid value for required argument 'ExtId'")
	}
	if args.NumberOfVms == nil {
		return nil, errors.New("invalid value for required argument 'NumberOfVms'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeployTemplatesV2
	err := ctx.RegisterResource("nutanix:index/deployTemplatesV2:DeployTemplatesV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployTemplatesV2 gets an existing DeployTemplatesV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployTemplatesV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeployTemplatesV2State, opts ...pulumi.ResourceOption) (*DeployTemplatesV2, error) {
	var resource DeployTemplatesV2
	err := ctx.ReadResource("nutanix:index/deployTemplatesV2:DeployTemplatesV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeployTemplatesV2 resources.
type deployTemplatesV2State struct {
	ClusterReference     *string                                `pulumi:"clusterReference"`
	ExtId                *string                                `pulumi:"extId"`
	NumberOfVms          *int                                   `pulumi:"numberOfVms"`
	OverrideVmConfigMaps []DeployTemplatesV2OverrideVmConfigMap `pulumi:"overrideVmConfigMaps"`
	VersionId            *string                                `pulumi:"versionId"`
}

type DeployTemplatesV2State struct {
	ClusterReference     pulumi.StringPtrInput
	ExtId                pulumi.StringPtrInput
	NumberOfVms          pulumi.IntPtrInput
	OverrideVmConfigMaps DeployTemplatesV2OverrideVmConfigMapArrayInput
	VersionId            pulumi.StringPtrInput
}

func (DeployTemplatesV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*deployTemplatesV2State)(nil)).Elem()
}

type deployTemplatesV2Args struct {
	ClusterReference     string                                 `pulumi:"clusterReference"`
	ExtId                string                                 `pulumi:"extId"`
	NumberOfVms          int                                    `pulumi:"numberOfVms"`
	OverrideVmConfigMaps []DeployTemplatesV2OverrideVmConfigMap `pulumi:"overrideVmConfigMaps"`
	VersionId            *string                                `pulumi:"versionId"`
}

// The set of arguments for constructing a DeployTemplatesV2 resource.
type DeployTemplatesV2Args struct {
	ClusterReference     pulumi.StringInput
	ExtId                pulumi.StringInput
	NumberOfVms          pulumi.IntInput
	OverrideVmConfigMaps DeployTemplatesV2OverrideVmConfigMapArrayInput
	VersionId            pulumi.StringPtrInput
}

func (DeployTemplatesV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*deployTemplatesV2Args)(nil)).Elem()
}

type DeployTemplatesV2Input interface {
	pulumi.Input

	ToDeployTemplatesV2Output() DeployTemplatesV2Output
	ToDeployTemplatesV2OutputWithContext(ctx context.Context) DeployTemplatesV2Output
}

func (*DeployTemplatesV2) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployTemplatesV2)(nil)).Elem()
}

func (i *DeployTemplatesV2) ToDeployTemplatesV2Output() DeployTemplatesV2Output {
	return i.ToDeployTemplatesV2OutputWithContext(context.Background())
}

func (i *DeployTemplatesV2) ToDeployTemplatesV2OutputWithContext(ctx context.Context) DeployTemplatesV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DeployTemplatesV2Output)
}

// DeployTemplatesV2ArrayInput is an input type that accepts DeployTemplatesV2Array and DeployTemplatesV2ArrayOutput values.
// You can construct a concrete instance of `DeployTemplatesV2ArrayInput` via:
//
//	DeployTemplatesV2Array{ DeployTemplatesV2Args{...} }
type DeployTemplatesV2ArrayInput interface {
	pulumi.Input

	ToDeployTemplatesV2ArrayOutput() DeployTemplatesV2ArrayOutput
	ToDeployTemplatesV2ArrayOutputWithContext(context.Context) DeployTemplatesV2ArrayOutput
}

type DeployTemplatesV2Array []DeployTemplatesV2Input

func (DeployTemplatesV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployTemplatesV2)(nil)).Elem()
}

func (i DeployTemplatesV2Array) ToDeployTemplatesV2ArrayOutput() DeployTemplatesV2ArrayOutput {
	return i.ToDeployTemplatesV2ArrayOutputWithContext(context.Background())
}

func (i DeployTemplatesV2Array) ToDeployTemplatesV2ArrayOutputWithContext(ctx context.Context) DeployTemplatesV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployTemplatesV2ArrayOutput)
}

// DeployTemplatesV2MapInput is an input type that accepts DeployTemplatesV2Map and DeployTemplatesV2MapOutput values.
// You can construct a concrete instance of `DeployTemplatesV2MapInput` via:
//
//	DeployTemplatesV2Map{ "key": DeployTemplatesV2Args{...} }
type DeployTemplatesV2MapInput interface {
	pulumi.Input

	ToDeployTemplatesV2MapOutput() DeployTemplatesV2MapOutput
	ToDeployTemplatesV2MapOutputWithContext(context.Context) DeployTemplatesV2MapOutput
}

type DeployTemplatesV2Map map[string]DeployTemplatesV2Input

func (DeployTemplatesV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployTemplatesV2)(nil)).Elem()
}

func (i DeployTemplatesV2Map) ToDeployTemplatesV2MapOutput() DeployTemplatesV2MapOutput {
	return i.ToDeployTemplatesV2MapOutputWithContext(context.Background())
}

func (i DeployTemplatesV2Map) ToDeployTemplatesV2MapOutputWithContext(ctx context.Context) DeployTemplatesV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployTemplatesV2MapOutput)
}

type DeployTemplatesV2Output struct{ *pulumi.OutputState }

func (DeployTemplatesV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployTemplatesV2)(nil)).Elem()
}

func (o DeployTemplatesV2Output) ToDeployTemplatesV2Output() DeployTemplatesV2Output {
	return o
}

func (o DeployTemplatesV2Output) ToDeployTemplatesV2OutputWithContext(ctx context.Context) DeployTemplatesV2Output {
	return o
}

func (o DeployTemplatesV2Output) ClusterReference() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployTemplatesV2) pulumi.StringOutput { return v.ClusterReference }).(pulumi.StringOutput)
}

func (o DeployTemplatesV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployTemplatesV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

func (o DeployTemplatesV2Output) NumberOfVms() pulumi.IntOutput {
	return o.ApplyT(func(v *DeployTemplatesV2) pulumi.IntOutput { return v.NumberOfVms }).(pulumi.IntOutput)
}

func (o DeployTemplatesV2Output) OverrideVmConfigMaps() DeployTemplatesV2OverrideVmConfigMapArrayOutput {
	return o.ApplyT(func(v *DeployTemplatesV2) DeployTemplatesV2OverrideVmConfigMapArrayOutput {
		return v.OverrideVmConfigMaps
	}).(DeployTemplatesV2OverrideVmConfigMapArrayOutput)
}

func (o DeployTemplatesV2Output) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeployTemplatesV2) pulumi.StringPtrOutput { return v.VersionId }).(pulumi.StringPtrOutput)
}

type DeployTemplatesV2ArrayOutput struct{ *pulumi.OutputState }

func (DeployTemplatesV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployTemplatesV2)(nil)).Elem()
}

func (o DeployTemplatesV2ArrayOutput) ToDeployTemplatesV2ArrayOutput() DeployTemplatesV2ArrayOutput {
	return o
}

func (o DeployTemplatesV2ArrayOutput) ToDeployTemplatesV2ArrayOutputWithContext(ctx context.Context) DeployTemplatesV2ArrayOutput {
	return o
}

func (o DeployTemplatesV2ArrayOutput) Index(i pulumi.IntInput) DeployTemplatesV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeployTemplatesV2 {
		return vs[0].([]*DeployTemplatesV2)[vs[1].(int)]
	}).(DeployTemplatesV2Output)
}

type DeployTemplatesV2MapOutput struct{ *pulumi.OutputState }

func (DeployTemplatesV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployTemplatesV2)(nil)).Elem()
}

func (o DeployTemplatesV2MapOutput) ToDeployTemplatesV2MapOutput() DeployTemplatesV2MapOutput {
	return o
}

func (o DeployTemplatesV2MapOutput) ToDeployTemplatesV2MapOutputWithContext(ctx context.Context) DeployTemplatesV2MapOutput {
	return o
}

func (o DeployTemplatesV2MapOutput) MapIndex(k pulumi.StringInput) DeployTemplatesV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeployTemplatesV2 {
		return vs[0].(map[string]*DeployTemplatesV2)[vs[1].(string)]
	}).(DeployTemplatesV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeployTemplatesV2Input)(nil)).Elem(), &DeployTemplatesV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployTemplatesV2ArrayInput)(nil)).Elem(), DeployTemplatesV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployTemplatesV2MapInput)(nil)).Elem(), DeployTemplatesV2Map{})
	pulumi.RegisterOutputType(DeployTemplatesV2Output{})
	pulumi.RegisterOutputType(DeployTemplatesV2ArrayOutput{})
	pulumi.RegisterOutputType(DeployTemplatesV2MapOutput{})
}
