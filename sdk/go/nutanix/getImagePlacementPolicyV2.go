// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve the image placement policy details for the provided external identifier.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupImagePlacementPolicyV2(ctx, &nutanix.LookupImagePlacementPolicyV2Args{
//				ExtId: "cf96e27a-4e52-4cec-b563-d0b25413cc4a",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImagePlacementPolicyV2(ctx *pulumi.Context, args *LookupImagePlacementPolicyV2Args, opts ...pulumi.InvokeOption) (*LookupImagePlacementPolicyV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImagePlacementPolicyV2Result
	err := ctx.Invoke("nutanix:index/getImagePlacementPolicyV2:getImagePlacementPolicyV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImagePlacementPolicyV2.
type LookupImagePlacementPolicyV2Args struct {
	// The external identifier of an image placement policy.
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getImagePlacementPolicyV2.
type LookupImagePlacementPolicyV2Result struct {
	// (Required) Category-based entity filter.
	ClusterEntityFilters []GetImagePlacementPolicyV2ClusterEntityFilter `pulumi:"clusterEntityFilters"`
	CreateTime           string                                         `pulumi:"createTime"`
	// (Optional) Description of the image placement policy.
	Description string `pulumi:"description"`
	// (Optional) Enforcement status of the image placement policy. Valid values:
	// - ACTIVE: The image placement policy is being actively enforced.
	// - SUSPENDED: The policy enforcement for image placement is suspended.
	EnforcementState string `pulumi:"enforcementState"`
	ExtId            string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required) Category-based entity filter.
	ImageEntityFilters []GetImagePlacementPolicyV2ImageEntityFilter `pulumi:"imageEntityFilters"`
	LastUpdateTime     string                                       `pulumi:"lastUpdateTime"`
	// (Required) Name of the image placement policy.
	Name       string `pulumi:"name"`
	OwnerExtId string `pulumi:"ownerExtId"`
	// (Required) Type of the image placement policy. Valid values:
	// - HARD: Hard placement policy. Images can only be placed on clusters enforced by the image placement policy.
	// - SOFT: Soft placement policy. Images can be placed on clusters apart from those enforced by the image placement policy.
	PlacementType string `pulumi:"placementType"`
}

func LookupImagePlacementPolicyV2Output(ctx *pulumi.Context, args LookupImagePlacementPolicyV2OutputArgs, opts ...pulumi.InvokeOption) LookupImagePlacementPolicyV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupImagePlacementPolicyV2ResultOutput, error) {
			args := v.(LookupImagePlacementPolicyV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getImagePlacementPolicyV2:getImagePlacementPolicyV2", args, LookupImagePlacementPolicyV2ResultOutput{}, options).(LookupImagePlacementPolicyV2ResultOutput), nil
		}).(LookupImagePlacementPolicyV2ResultOutput)
}

// A collection of arguments for invoking getImagePlacementPolicyV2.
type LookupImagePlacementPolicyV2OutputArgs struct {
	// The external identifier of an image placement policy.
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (LookupImagePlacementPolicyV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePlacementPolicyV2Args)(nil)).Elem()
}

// A collection of values returned by getImagePlacementPolicyV2.
type LookupImagePlacementPolicyV2ResultOutput struct{ *pulumi.OutputState }

func (LookupImagePlacementPolicyV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePlacementPolicyV2Result)(nil)).Elem()
}

func (o LookupImagePlacementPolicyV2ResultOutput) ToLookupImagePlacementPolicyV2ResultOutput() LookupImagePlacementPolicyV2ResultOutput {
	return o
}

func (o LookupImagePlacementPolicyV2ResultOutput) ToLookupImagePlacementPolicyV2ResultOutputWithContext(ctx context.Context) LookupImagePlacementPolicyV2ResultOutput {
	return o
}

// (Required) Category-based entity filter.
func (o LookupImagePlacementPolicyV2ResultOutput) ClusterEntityFilters() GetImagePlacementPolicyV2ClusterEntityFilterArrayOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) []GetImagePlacementPolicyV2ClusterEntityFilter {
		return v.ClusterEntityFilters
	}).(GetImagePlacementPolicyV2ClusterEntityFilterArrayOutput)
}

func (o LookupImagePlacementPolicyV2ResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.CreateTime }).(pulumi.StringOutput)
}

// (Optional) Description of the image placement policy.
func (o LookupImagePlacementPolicyV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional) Enforcement status of the image placement policy. Valid values:
// - ACTIVE: The image placement policy is being actively enforced.
// - SUSPENDED: The policy enforcement for image placement is suspended.
func (o LookupImagePlacementPolicyV2ResultOutput) EnforcementState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.EnforcementState }).(pulumi.StringOutput)
}

func (o LookupImagePlacementPolicyV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImagePlacementPolicyV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// (Required) Category-based entity filter.
func (o LookupImagePlacementPolicyV2ResultOutput) ImageEntityFilters() GetImagePlacementPolicyV2ImageEntityFilterArrayOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) []GetImagePlacementPolicyV2ImageEntityFilter {
		return v.ImageEntityFilters
	}).(GetImagePlacementPolicyV2ImageEntityFilterArrayOutput)
}

func (o LookupImagePlacementPolicyV2ResultOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// (Required) Name of the image placement policy.
func (o LookupImagePlacementPolicyV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupImagePlacementPolicyV2ResultOutput) OwnerExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.OwnerExtId }).(pulumi.StringOutput)
}

// (Required) Type of the image placement policy. Valid values:
// - HARD: Hard placement policy. Images can only be placed on clusters enforced by the image placement policy.
// - SOFT: Soft placement policy. Images can be placed on clusters apart from those enforced by the image placement policy.
func (o LookupImagePlacementPolicyV2ResultOutput) PlacementType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePlacementPolicyV2Result) string { return v.PlacementType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImagePlacementPolicyV2ResultOutput{})
}
