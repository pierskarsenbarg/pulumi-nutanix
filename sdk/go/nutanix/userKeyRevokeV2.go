// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix resource to Revoke the requested key for a user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// revoke key
//			_, err := nutanix.NewUserKeyRevokeV2(ctx, "revoke-key", &nutanix.UserKeyRevokeV2Args{
//				ExtId:     pulumi.String("<USER_KEY_UUID>"),
//				UserExtId: pulumi.String("<SERVICE_ACCOUNT_UUID>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Argument Reference
//
// The following arguments are supported:
//
// * `userExtId`: - ( Required ) External Identifier of the User.
// * `extId`: - ( Required ) External identifier of the key.
type UserKeyRevokeV2 struct {
	pulumi.CustomResourceState

	// - The map of argument name to value.
	ArgumentsMaps UserKeyRevokeV2ArgumentsMapArrayOutput `pulumi:"argumentsMaps"`
	// - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
	Code pulumi.StringOutput `pulumi:"code"`
	// - The error group associated with this message of severity ERROR.
	ErrorGroup pulumi.StringOutput `pulumi:"errorGroup"`
	ExtId      pulumi.StringOutput `pulumi:"extId"`
	// - Locale for this message. The default locale would be 'en-US'.
	Locale pulumi.StringOutput `pulumi:"locale"`
	// - The message string.
	Message pulumi.StringOutput `pulumi:"message"`
	// - The message severity.
	Severity  pulumi.StringOutput `pulumi:"severity"`
	UserExtId pulumi.StringOutput `pulumi:"userExtId"`
}

// NewUserKeyRevokeV2 registers a new resource with the given unique name, arguments, and options.
func NewUserKeyRevokeV2(ctx *pulumi.Context,
	name string, args *UserKeyRevokeV2Args, opts ...pulumi.ResourceOption) (*UserKeyRevokeV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtId == nil {
		return nil, errors.New("invalid value for required argument 'ExtId'")
	}
	if args.UserExtId == nil {
		return nil, errors.New("invalid value for required argument 'UserExtId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserKeyRevokeV2
	err := ctx.RegisterResource("nutanix:index/userKeyRevokeV2:UserKeyRevokeV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserKeyRevokeV2 gets an existing UserKeyRevokeV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserKeyRevokeV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserKeyRevokeV2State, opts ...pulumi.ResourceOption) (*UserKeyRevokeV2, error) {
	var resource UserKeyRevokeV2
	err := ctx.ReadResource("nutanix:index/userKeyRevokeV2:UserKeyRevokeV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserKeyRevokeV2 resources.
type userKeyRevokeV2State struct {
	// - The map of argument name to value.
	ArgumentsMaps []UserKeyRevokeV2ArgumentsMap `pulumi:"argumentsMaps"`
	// - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
	Code *string `pulumi:"code"`
	// - The error group associated with this message of severity ERROR.
	ErrorGroup *string `pulumi:"errorGroup"`
	ExtId      *string `pulumi:"extId"`
	// - Locale for this message. The default locale would be 'en-US'.
	Locale *string `pulumi:"locale"`
	// - The message string.
	Message *string `pulumi:"message"`
	// - The message severity.
	Severity  *string `pulumi:"severity"`
	UserExtId *string `pulumi:"userExtId"`
}

type UserKeyRevokeV2State struct {
	// - The map of argument name to value.
	ArgumentsMaps UserKeyRevokeV2ArgumentsMapArrayInput
	// - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
	Code pulumi.StringPtrInput
	// - The error group associated with this message of severity ERROR.
	ErrorGroup pulumi.StringPtrInput
	ExtId      pulumi.StringPtrInput
	// - Locale for this message. The default locale would be 'en-US'.
	Locale pulumi.StringPtrInput
	// - The message string.
	Message pulumi.StringPtrInput
	// - The message severity.
	Severity  pulumi.StringPtrInput
	UserExtId pulumi.StringPtrInput
}

func (UserKeyRevokeV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*userKeyRevokeV2State)(nil)).Elem()
}

type userKeyRevokeV2Args struct {
	ExtId     string `pulumi:"extId"`
	UserExtId string `pulumi:"userExtId"`
}

// The set of arguments for constructing a UserKeyRevokeV2 resource.
type UserKeyRevokeV2Args struct {
	ExtId     pulumi.StringInput
	UserExtId pulumi.StringInput
}

func (UserKeyRevokeV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*userKeyRevokeV2Args)(nil)).Elem()
}

type UserKeyRevokeV2Input interface {
	pulumi.Input

	ToUserKeyRevokeV2Output() UserKeyRevokeV2Output
	ToUserKeyRevokeV2OutputWithContext(ctx context.Context) UserKeyRevokeV2Output
}

func (*UserKeyRevokeV2) ElementType() reflect.Type {
	return reflect.TypeOf((**UserKeyRevokeV2)(nil)).Elem()
}

func (i *UserKeyRevokeV2) ToUserKeyRevokeV2Output() UserKeyRevokeV2Output {
	return i.ToUserKeyRevokeV2OutputWithContext(context.Background())
}

func (i *UserKeyRevokeV2) ToUserKeyRevokeV2OutputWithContext(ctx context.Context) UserKeyRevokeV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyRevokeV2Output)
}

// UserKeyRevokeV2ArrayInput is an input type that accepts UserKeyRevokeV2Array and UserKeyRevokeV2ArrayOutput values.
// You can construct a concrete instance of `UserKeyRevokeV2ArrayInput` via:
//
//	UserKeyRevokeV2Array{ UserKeyRevokeV2Args{...} }
type UserKeyRevokeV2ArrayInput interface {
	pulumi.Input

	ToUserKeyRevokeV2ArrayOutput() UserKeyRevokeV2ArrayOutput
	ToUserKeyRevokeV2ArrayOutputWithContext(context.Context) UserKeyRevokeV2ArrayOutput
}

type UserKeyRevokeV2Array []UserKeyRevokeV2Input

func (UserKeyRevokeV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserKeyRevokeV2)(nil)).Elem()
}

func (i UserKeyRevokeV2Array) ToUserKeyRevokeV2ArrayOutput() UserKeyRevokeV2ArrayOutput {
	return i.ToUserKeyRevokeV2ArrayOutputWithContext(context.Background())
}

func (i UserKeyRevokeV2Array) ToUserKeyRevokeV2ArrayOutputWithContext(ctx context.Context) UserKeyRevokeV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyRevokeV2ArrayOutput)
}

// UserKeyRevokeV2MapInput is an input type that accepts UserKeyRevokeV2Map and UserKeyRevokeV2MapOutput values.
// You can construct a concrete instance of `UserKeyRevokeV2MapInput` via:
//
//	UserKeyRevokeV2Map{ "key": UserKeyRevokeV2Args{...} }
type UserKeyRevokeV2MapInput interface {
	pulumi.Input

	ToUserKeyRevokeV2MapOutput() UserKeyRevokeV2MapOutput
	ToUserKeyRevokeV2MapOutputWithContext(context.Context) UserKeyRevokeV2MapOutput
}

type UserKeyRevokeV2Map map[string]UserKeyRevokeV2Input

func (UserKeyRevokeV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserKeyRevokeV2)(nil)).Elem()
}

func (i UserKeyRevokeV2Map) ToUserKeyRevokeV2MapOutput() UserKeyRevokeV2MapOutput {
	return i.ToUserKeyRevokeV2MapOutputWithContext(context.Background())
}

func (i UserKeyRevokeV2Map) ToUserKeyRevokeV2MapOutputWithContext(ctx context.Context) UserKeyRevokeV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyRevokeV2MapOutput)
}

type UserKeyRevokeV2Output struct{ *pulumi.OutputState }

func (UserKeyRevokeV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**UserKeyRevokeV2)(nil)).Elem()
}

func (o UserKeyRevokeV2Output) ToUserKeyRevokeV2Output() UserKeyRevokeV2Output {
	return o
}

func (o UserKeyRevokeV2Output) ToUserKeyRevokeV2OutputWithContext(ctx context.Context) UserKeyRevokeV2Output {
	return o
}

// - The map of argument name to value.
func (o UserKeyRevokeV2Output) ArgumentsMaps() UserKeyRevokeV2ArgumentsMapArrayOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) UserKeyRevokeV2ArgumentsMapArrayOutput { return v.ArgumentsMaps }).(UserKeyRevokeV2ArgumentsMapArrayOutput)
}

// - The code associated with this message.This string is typically prefixed by the namespace the endpoint belongs to. For example: VMM-40000.
func (o UserKeyRevokeV2Output) Code() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.Code }).(pulumi.StringOutput)
}

// - The error group associated with this message of severity ERROR.
func (o UserKeyRevokeV2Output) ErrorGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.ErrorGroup }).(pulumi.StringOutput)
}

func (o UserKeyRevokeV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - Locale for this message. The default locale would be 'en-US'.
func (o UserKeyRevokeV2Output) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.Locale }).(pulumi.StringOutput)
}

// - The message string.
func (o UserKeyRevokeV2Output) Message() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.Message }).(pulumi.StringOutput)
}

// - The message severity.
func (o UserKeyRevokeV2Output) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

func (o UserKeyRevokeV2Output) UserExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyRevokeV2) pulumi.StringOutput { return v.UserExtId }).(pulumi.StringOutput)
}

type UserKeyRevokeV2ArrayOutput struct{ *pulumi.OutputState }

func (UserKeyRevokeV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserKeyRevokeV2)(nil)).Elem()
}

func (o UserKeyRevokeV2ArrayOutput) ToUserKeyRevokeV2ArrayOutput() UserKeyRevokeV2ArrayOutput {
	return o
}

func (o UserKeyRevokeV2ArrayOutput) ToUserKeyRevokeV2ArrayOutputWithContext(ctx context.Context) UserKeyRevokeV2ArrayOutput {
	return o
}

func (o UserKeyRevokeV2ArrayOutput) Index(i pulumi.IntInput) UserKeyRevokeV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserKeyRevokeV2 {
		return vs[0].([]*UserKeyRevokeV2)[vs[1].(int)]
	}).(UserKeyRevokeV2Output)
}

type UserKeyRevokeV2MapOutput struct{ *pulumi.OutputState }

func (UserKeyRevokeV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserKeyRevokeV2)(nil)).Elem()
}

func (o UserKeyRevokeV2MapOutput) ToUserKeyRevokeV2MapOutput() UserKeyRevokeV2MapOutput {
	return o
}

func (o UserKeyRevokeV2MapOutput) ToUserKeyRevokeV2MapOutputWithContext(ctx context.Context) UserKeyRevokeV2MapOutput {
	return o
}

func (o UserKeyRevokeV2MapOutput) MapIndex(k pulumi.StringInput) UserKeyRevokeV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserKeyRevokeV2 {
		return vs[0].(map[string]*UserKeyRevokeV2)[vs[1].(string)]
	}).(UserKeyRevokeV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyRevokeV2Input)(nil)).Elem(), &UserKeyRevokeV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyRevokeV2ArrayInput)(nil)).Elem(), UserKeyRevokeV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyRevokeV2MapInput)(nil)).Elem(), UserKeyRevokeV2Map{})
	pulumi.RegisterOutputType(UserKeyRevokeV2Output{})
	pulumi.RegisterOutputType(UserKeyRevokeV2ArrayOutput{})
	pulumi.RegisterOutputType(UserKeyRevokeV2MapOutput{})
}
