// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix resource to Create key of a requested type for a user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create key under service account, never expires
//			_, err := nutanix.NewUserKeyV2(ctx, "createKey", &nutanix.UserKeyV2Args{
//				AssignedTo: pulumi.String("developer_user_1"),
//				ExpiryTime: pulumi.String("2125-01-01T00:00:00Z"),
//				KeyType:    pulumi.String("API_KEY"),
//				UserExtId:  pulumi.String("<SERVICE_ACCOUNT_UUID>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Argument Reference
//
// The following arguments are supported:
//
// * `userExtId`: - ( Required ) External Identifier of the User.
// * `name`: - ( Required ) Identifier for the key in the form of a name.
// * `description`: - ( Optional ) Brief description of the key.
// * `keyType`: - ( Required ) The type of key. Enum Values:
//   - "API_KEY":	A key type that is used to identify a service.
//   - "OBJECT_KEY":	A combination of access key and secret key to sign an API request.
//
// * `creationType`: - ( Optional ) The creation mechanism of this entity. Enum Values:
//   - "PREDEFINED":	Predefined creator workflow type is for entity created by the system.
//   - "SERVICEDEFINED":	Servicedefined creator workflow type is for entity created by the service.
//   - "USERDEFINED":	Userdefined creator workflow type is for entity created by the users.
//
// * `expiryTime`: - ( Optional ) The time when the key will expire.
// * `status`: - ( Optional ) The status of the key. Enum Values:
//   - "REVOKED":	Key is revoked.
//   - "VALID":	Key is valid.
//   - "EXPIRED":	Key is expired.
//
// * `assignedTo`: - ( Optional ) External client to whom the given key is allocated.
type UserKeyV2 struct {
	pulumi.CustomResourceState

	// - External client to whom the given key is allocated.
	AssignedTo pulumi.StringOutput `pulumi:"assignedTo"`
	// - User or service who created the key.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// - The creation time of the key.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// - The creation mechanism of this entity.
	CreationType pulumi.StringOutput `pulumi:"creationType"`
	// - Brief description of the key.
	Description pulumi.StringOutput `pulumi:"description"`
	// - The time when the key will expire.
	ExpiryTime pulumi.StringOutput `pulumi:"expiryTime"`
	// - The External Identifier of the User Group.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// - Details specific to type of the key.
	KeyDetails UserKeyV2KeyDetailArrayOutput `pulumi:"keyDetails"`
	// - The type of key.
	KeyType pulumi.StringOutput `pulumi:"keyType"`
	// - User who updated the key.
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// - The time when the key was updated.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// - The time when the key was last used.
	LastUsedTime pulumi.StringOutput `pulumi:"lastUsedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links UserKeyV2LinkArrayOutput `pulumi:"links"`
	// - Identifier for the key in the form of a name.
	Name pulumi.StringOutput `pulumi:"name"`
	// - The status of the key.
	Status pulumi.StringOutput `pulumi:"status"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId  pulumi.StringOutput `pulumi:"tenantId"`
	UserExtId pulumi.StringOutput `pulumi:"userExtId"`
}

// NewUserKeyV2 registers a new resource with the given unique name, arguments, and options.
func NewUserKeyV2(ctx *pulumi.Context,
	name string, args *UserKeyV2Args, opts ...pulumi.ResourceOption) (*UserKeyV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyType == nil {
		return nil, errors.New("invalid value for required argument 'KeyType'")
	}
	if args.UserExtId == nil {
		return nil, errors.New("invalid value for required argument 'UserExtId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserKeyV2
	err := ctx.RegisterResource("nutanix:index/userKeyV2:UserKeyV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserKeyV2 gets an existing UserKeyV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserKeyV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserKeyV2State, opts ...pulumi.ResourceOption) (*UserKeyV2, error) {
	var resource UserKeyV2
	err := ctx.ReadResource("nutanix:index/userKeyV2:UserKeyV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserKeyV2 resources.
type userKeyV2State struct {
	// - External client to whom the given key is allocated.
	AssignedTo *string `pulumi:"assignedTo"`
	// - User or service who created the key.
	CreatedBy *string `pulumi:"createdBy"`
	// - The creation time of the key.
	CreatedTime *string `pulumi:"createdTime"`
	// - The creation mechanism of this entity.
	CreationType *string `pulumi:"creationType"`
	// - Brief description of the key.
	Description *string `pulumi:"description"`
	// - The time when the key will expire.
	ExpiryTime *string `pulumi:"expiryTime"`
	// - The External Identifier of the User Group.
	ExtId *string `pulumi:"extId"`
	// - Details specific to type of the key.
	KeyDetails []UserKeyV2KeyDetail `pulumi:"keyDetails"`
	// - The type of key.
	KeyType *string `pulumi:"keyType"`
	// - User who updated the key.
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// - The time when the key was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// - The time when the key was last used.
	LastUsedTime *string `pulumi:"lastUsedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []UserKeyV2Link `pulumi:"links"`
	// - Identifier for the key in the form of a name.
	Name *string `pulumi:"name"`
	// - The status of the key.
	Status *string `pulumi:"status"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId  *string `pulumi:"tenantId"`
	UserExtId *string `pulumi:"userExtId"`
}

type UserKeyV2State struct {
	// - External client to whom the given key is allocated.
	AssignedTo pulumi.StringPtrInput
	// - User or service who created the key.
	CreatedBy pulumi.StringPtrInput
	// - The creation time of the key.
	CreatedTime pulumi.StringPtrInput
	// - The creation mechanism of this entity.
	CreationType pulumi.StringPtrInput
	// - Brief description of the key.
	Description pulumi.StringPtrInput
	// - The time when the key will expire.
	ExpiryTime pulumi.StringPtrInput
	// - The External Identifier of the User Group.
	ExtId pulumi.StringPtrInput
	// - Details specific to type of the key.
	KeyDetails UserKeyV2KeyDetailArrayInput
	// - The type of key.
	KeyType pulumi.StringPtrInput
	// - User who updated the key.
	LastUpdatedBy pulumi.StringPtrInput
	// - The time when the key was updated.
	LastUpdatedTime pulumi.StringPtrInput
	// - The time when the key was last used.
	LastUsedTime pulumi.StringPtrInput
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links UserKeyV2LinkArrayInput
	// - Identifier for the key in the form of a name.
	Name pulumi.StringPtrInput
	// - The status of the key.
	Status pulumi.StringPtrInput
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId  pulumi.StringPtrInput
	UserExtId pulumi.StringPtrInput
}

func (UserKeyV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*userKeyV2State)(nil)).Elem()
}

type userKeyV2Args struct {
	// - External client to whom the given key is allocated.
	AssignedTo *string `pulumi:"assignedTo"`
	// - User or service who created the key.
	CreatedBy *string `pulumi:"createdBy"`
	// - The creation time of the key.
	CreatedTime *string `pulumi:"createdTime"`
	// - The creation mechanism of this entity.
	CreationType *string `pulumi:"creationType"`
	// - Brief description of the key.
	Description *string `pulumi:"description"`
	// - The time when the key will expire.
	ExpiryTime *string `pulumi:"expiryTime"`
	// - The type of key.
	KeyType string `pulumi:"keyType"`
	// - User who updated the key.
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// - The time when the key was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// - The time when the key was last used.
	LastUsedTime *string `pulumi:"lastUsedTime"`
	// - Identifier for the key in the form of a name.
	Name *string `pulumi:"name"`
	// - The status of the key.
	Status    *string `pulumi:"status"`
	UserExtId string  `pulumi:"userExtId"`
}

// The set of arguments for constructing a UserKeyV2 resource.
type UserKeyV2Args struct {
	// - External client to whom the given key is allocated.
	AssignedTo pulumi.StringPtrInput
	// - User or service who created the key.
	CreatedBy pulumi.StringPtrInput
	// - The creation time of the key.
	CreatedTime pulumi.StringPtrInput
	// - The creation mechanism of this entity.
	CreationType pulumi.StringPtrInput
	// - Brief description of the key.
	Description pulumi.StringPtrInput
	// - The time when the key will expire.
	ExpiryTime pulumi.StringPtrInput
	// - The type of key.
	KeyType pulumi.StringInput
	// - User who updated the key.
	LastUpdatedBy pulumi.StringPtrInput
	// - The time when the key was updated.
	LastUpdatedTime pulumi.StringPtrInput
	// - The time when the key was last used.
	LastUsedTime pulumi.StringPtrInput
	// - Identifier for the key in the form of a name.
	Name pulumi.StringPtrInput
	// - The status of the key.
	Status    pulumi.StringPtrInput
	UserExtId pulumi.StringInput
}

func (UserKeyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*userKeyV2Args)(nil)).Elem()
}

type UserKeyV2Input interface {
	pulumi.Input

	ToUserKeyV2Output() UserKeyV2Output
	ToUserKeyV2OutputWithContext(ctx context.Context) UserKeyV2Output
}

func (*UserKeyV2) ElementType() reflect.Type {
	return reflect.TypeOf((**UserKeyV2)(nil)).Elem()
}

func (i *UserKeyV2) ToUserKeyV2Output() UserKeyV2Output {
	return i.ToUserKeyV2OutputWithContext(context.Background())
}

func (i *UserKeyV2) ToUserKeyV2OutputWithContext(ctx context.Context) UserKeyV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyV2Output)
}

// UserKeyV2ArrayInput is an input type that accepts UserKeyV2Array and UserKeyV2ArrayOutput values.
// You can construct a concrete instance of `UserKeyV2ArrayInput` via:
//
//	UserKeyV2Array{ UserKeyV2Args{...} }
type UserKeyV2ArrayInput interface {
	pulumi.Input

	ToUserKeyV2ArrayOutput() UserKeyV2ArrayOutput
	ToUserKeyV2ArrayOutputWithContext(context.Context) UserKeyV2ArrayOutput
}

type UserKeyV2Array []UserKeyV2Input

func (UserKeyV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserKeyV2)(nil)).Elem()
}

func (i UserKeyV2Array) ToUserKeyV2ArrayOutput() UserKeyV2ArrayOutput {
	return i.ToUserKeyV2ArrayOutputWithContext(context.Background())
}

func (i UserKeyV2Array) ToUserKeyV2ArrayOutputWithContext(ctx context.Context) UserKeyV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyV2ArrayOutput)
}

// UserKeyV2MapInput is an input type that accepts UserKeyV2Map and UserKeyV2MapOutput values.
// You can construct a concrete instance of `UserKeyV2MapInput` via:
//
//	UserKeyV2Map{ "key": UserKeyV2Args{...} }
type UserKeyV2MapInput interface {
	pulumi.Input

	ToUserKeyV2MapOutput() UserKeyV2MapOutput
	ToUserKeyV2MapOutputWithContext(context.Context) UserKeyV2MapOutput
}

type UserKeyV2Map map[string]UserKeyV2Input

func (UserKeyV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserKeyV2)(nil)).Elem()
}

func (i UserKeyV2Map) ToUserKeyV2MapOutput() UserKeyV2MapOutput {
	return i.ToUserKeyV2MapOutputWithContext(context.Background())
}

func (i UserKeyV2Map) ToUserKeyV2MapOutputWithContext(ctx context.Context) UserKeyV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserKeyV2MapOutput)
}

type UserKeyV2Output struct{ *pulumi.OutputState }

func (UserKeyV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**UserKeyV2)(nil)).Elem()
}

func (o UserKeyV2Output) ToUserKeyV2Output() UserKeyV2Output {
	return o
}

func (o UserKeyV2Output) ToUserKeyV2OutputWithContext(ctx context.Context) UserKeyV2Output {
	return o
}

// - External client to whom the given key is allocated.
func (o UserKeyV2Output) AssignedTo() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.AssignedTo }).(pulumi.StringOutput)
}

// - User or service who created the key.
func (o UserKeyV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// - The creation time of the key.
func (o UserKeyV2Output) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// - The creation mechanism of this entity.
func (o UserKeyV2Output) CreationType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.CreationType }).(pulumi.StringOutput)
}

// - Brief description of the key.
func (o UserKeyV2Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// - The time when the key will expire.
func (o UserKeyV2Output) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.ExpiryTime }).(pulumi.StringOutput)
}

// - The External Identifier of the User Group.
func (o UserKeyV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - Details specific to type of the key.
func (o UserKeyV2Output) KeyDetails() UserKeyV2KeyDetailArrayOutput {
	return o.ApplyT(func(v *UserKeyV2) UserKeyV2KeyDetailArrayOutput { return v.KeyDetails }).(UserKeyV2KeyDetailArrayOutput)
}

// - The type of key.
func (o UserKeyV2Output) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.KeyType }).(pulumi.StringOutput)
}

// - User who updated the key.
func (o UserKeyV2Output) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// - The time when the key was updated.
func (o UserKeyV2Output) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - The time when the key was last used.
func (o UserKeyV2Output) LastUsedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.LastUsedTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o UserKeyV2Output) Links() UserKeyV2LinkArrayOutput {
	return o.ApplyT(func(v *UserKeyV2) UserKeyV2LinkArrayOutput { return v.Links }).(UserKeyV2LinkArrayOutput)
}

// - Identifier for the key in the form of a name.
func (o UserKeyV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// - The status of the key.
func (o UserKeyV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o UserKeyV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func (o UserKeyV2Output) UserExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserKeyV2) pulumi.StringOutput { return v.UserExtId }).(pulumi.StringOutput)
}

type UserKeyV2ArrayOutput struct{ *pulumi.OutputState }

func (UserKeyV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserKeyV2)(nil)).Elem()
}

func (o UserKeyV2ArrayOutput) ToUserKeyV2ArrayOutput() UserKeyV2ArrayOutput {
	return o
}

func (o UserKeyV2ArrayOutput) ToUserKeyV2ArrayOutputWithContext(ctx context.Context) UserKeyV2ArrayOutput {
	return o
}

func (o UserKeyV2ArrayOutput) Index(i pulumi.IntInput) UserKeyV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserKeyV2 {
		return vs[0].([]*UserKeyV2)[vs[1].(int)]
	}).(UserKeyV2Output)
}

type UserKeyV2MapOutput struct{ *pulumi.OutputState }

func (UserKeyV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserKeyV2)(nil)).Elem()
}

func (o UserKeyV2MapOutput) ToUserKeyV2MapOutput() UserKeyV2MapOutput {
	return o
}

func (o UserKeyV2MapOutput) ToUserKeyV2MapOutputWithContext(ctx context.Context) UserKeyV2MapOutput {
	return o
}

func (o UserKeyV2MapOutput) MapIndex(k pulumi.StringInput) UserKeyV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserKeyV2 {
		return vs[0].(map[string]*UserKeyV2)[vs[1].(string)]
	}).(UserKeyV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyV2Input)(nil)).Elem(), &UserKeyV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyV2ArrayInput)(nil)).Elem(), UserKeyV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserKeyV2MapInput)(nil)).Elem(), UserKeyV2Map{})
	pulumi.RegisterOutputType(UserKeyV2Output{})
	pulumi.RegisterOutputType(UserKeyV2ArrayOutput{})
	pulumi.RegisterOutputType(UserKeyV2MapOutput{})
}
