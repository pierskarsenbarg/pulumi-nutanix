// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to restore the database instance based on the input parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.NewNdbDatabaseRestore(ctx, "name", &nutanix.NdbDatabaseRestoreArgs{
//				DatabaseId: pulumi.String("{{ database_id }}"),
//				SnapshotId: pulumi.String("{{ snapshot id }}"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type NdbDatabaseRestore struct {
	pulumi.CustomResourceState

	// whether instance is cloned or not
	Clone pulumi.BoolOutput `pulumi:"clone"`
	// database cluster type
	DatabaseClusterType pulumi.StringOutput `pulumi:"databaseClusterType"`
	// database id
	DatabaseId         pulumi.StringOutput `pulumi:"databaseId"`
	DatabaseInstanceId pulumi.StringOutput `pulumi:"databaseInstanceId"`
	// name of database
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// database nodes associated with database instance
	DatabaseNodes NdbDatabaseRestoreDatabaseNodeArrayOutput `pulumi:"databaseNodes"`
	// date created for db instance
	DateCreated pulumi.StringOutput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringOutput `pulumi:"dateModified"`
	// dbserver logical cluster
	DbserverLogicalCluster pulumi.StringMapOutput `pulumi:"dbserverLogicalCluster"`
	// dbserver logical cluster id
	DbserverLogicalClusterId pulumi.StringOutput `pulumi:"dbserverLogicalClusterId"`
	// description of database instance
	Description pulumi.StringOutput `pulumi:"description"`
	// info of instance
	Infos NdbDatabaseRestoreInfoArrayOutput `pulumi:"infos"`
	// latest snapshot id
	LatestSnapshot pulumi.StringPtrOutput `pulumi:"latestSnapshot"`
	// LCM config of instance
	LcmConfigs NdbDatabaseRestoreLcmConfigArrayOutput `pulumi:"lcmConfigs"`
	// linked databases within database instance
	LinkedDatabases NdbDatabaseRestoreLinkedDatabaseArrayOutput `pulumi:"linkedDatabases"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapOutput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringOutput `pulumi:"name"`
	// parent database id
	ParentDatabaseId pulumi.StringOutput `pulumi:"parentDatabaseId"`
	// properties of database created
	Properties NdbDatabaseRestorePropertyArrayOutput `pulumi:"properties"`
	// helps to restore the database with same config.
	RestoreVersion pulumi.IntPtrOutput `pulumi:"restoreVersion"`
	// snapshot id from you want to use for restoring the instance
	SnapshotId pulumi.StringPtrOutput `pulumi:"snapshotId"`
	// status of instance
	Status pulumi.StringOutput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseRestoreTagArrayOutput `pulumi:"tags"`
	// time machine id of instance
	TimeMachineId pulumi.StringOutput `pulumi:"timeMachineId"`
	// Time Machine details of instance
	TimeMachines NdbDatabaseRestoreTimeMachineArrayOutput `pulumi:"timeMachines"`
	// timezone on which instance is created xw
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// timezone . Should be used with  `userPitrTimestamp`
	TimeZonePitr pulumi.StringPtrOutput `pulumi:"timeZonePitr"`
	// type of database
	Type pulumi.StringOutput `pulumi:"type"`
	// the time to which you want to restore your instance.
	UserPitrTimestamp pulumi.StringPtrOutput `pulumi:"userPitrTimestamp"`
}

// NewNdbDatabaseRestore registers a new resource with the given unique name, arguments, and options.
func NewNdbDatabaseRestore(ctx *pulumi.Context,
	name string, args *NdbDatabaseRestoreArgs, opts ...pulumi.ResourceOption) (*NdbDatabaseRestore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NdbDatabaseRestore
	err := ctx.RegisterResource("nutanix:index/ndbDatabaseRestore:NdbDatabaseRestore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNdbDatabaseRestore gets an existing NdbDatabaseRestore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNdbDatabaseRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NdbDatabaseRestoreState, opts ...pulumi.ResourceOption) (*NdbDatabaseRestore, error) {
	var resource NdbDatabaseRestore
	err := ctx.ReadResource("nutanix:index/ndbDatabaseRestore:NdbDatabaseRestore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NdbDatabaseRestore resources.
type ndbDatabaseRestoreState struct {
	// whether instance is cloned or not
	Clone *bool `pulumi:"clone"`
	// database cluster type
	DatabaseClusterType *string `pulumi:"databaseClusterType"`
	// database id
	DatabaseId         *string `pulumi:"databaseId"`
	DatabaseInstanceId *string `pulumi:"databaseInstanceId"`
	// name of database
	DatabaseName *string `pulumi:"databaseName"`
	// database nodes associated with database instance
	DatabaseNodes []NdbDatabaseRestoreDatabaseNode `pulumi:"databaseNodes"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// dbserver logical cluster
	DbserverLogicalCluster map[string]string `pulumi:"dbserverLogicalCluster"`
	// dbserver logical cluster id
	DbserverLogicalClusterId *string `pulumi:"dbserverLogicalClusterId"`
	// description of database instance
	Description *string `pulumi:"description"`
	// info of instance
	Infos []NdbDatabaseRestoreInfo `pulumi:"infos"`
	// latest snapshot id
	LatestSnapshot *string `pulumi:"latestSnapshot"`
	// LCM config of instance
	LcmConfigs []NdbDatabaseRestoreLcmConfig `pulumi:"lcmConfigs"`
	// linked databases within database instance
	LinkedDatabases []NdbDatabaseRestoreLinkedDatabase `pulumi:"linkedDatabases"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId *string `pulumi:"parentDatabaseId"`
	// properties of database created
	Properties []NdbDatabaseRestoreProperty `pulumi:"properties"`
	// helps to restore the database with same config.
	RestoreVersion *int `pulumi:"restoreVersion"`
	// snapshot id from you want to use for restoring the instance
	SnapshotId *string `pulumi:"snapshotId"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseRestoreTag `pulumi:"tags"`
	// time machine id of instance
	TimeMachineId *string `pulumi:"timeMachineId"`
	// Time Machine details of instance
	TimeMachines []NdbDatabaseRestoreTimeMachine `pulumi:"timeMachines"`
	// timezone on which instance is created xw
	TimeZone *string `pulumi:"timeZone"`
	// timezone . Should be used with  `userPitrTimestamp`
	TimeZonePitr *string `pulumi:"timeZonePitr"`
	// type of database
	Type *string `pulumi:"type"`
	// the time to which you want to restore your instance.
	UserPitrTimestamp *string `pulumi:"userPitrTimestamp"`
}

type NdbDatabaseRestoreState struct {
	// whether instance is cloned or not
	Clone pulumi.BoolPtrInput
	// database cluster type
	DatabaseClusterType pulumi.StringPtrInput
	// database id
	DatabaseId         pulumi.StringPtrInput
	DatabaseInstanceId pulumi.StringPtrInput
	// name of database
	DatabaseName pulumi.StringPtrInput
	// database nodes associated with database instance
	DatabaseNodes NdbDatabaseRestoreDatabaseNodeArrayInput
	// date created for db instance
	DateCreated pulumi.StringPtrInput
	// date modified for instance
	DateModified pulumi.StringPtrInput
	// dbserver logical cluster
	DbserverLogicalCluster pulumi.StringMapInput
	// dbserver logical cluster id
	DbserverLogicalClusterId pulumi.StringPtrInput
	// description of database instance
	Description pulumi.StringPtrInput
	// info of instance
	Infos NdbDatabaseRestoreInfoArrayInput
	// latest snapshot id
	LatestSnapshot pulumi.StringPtrInput
	// LCM config of instance
	LcmConfigs NdbDatabaseRestoreLcmConfigArrayInput
	// linked databases within database instance
	LinkedDatabases NdbDatabaseRestoreLinkedDatabaseArrayInput
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput
	// Name of database instance
	Name pulumi.StringPtrInput
	// parent database id
	ParentDatabaseId pulumi.StringPtrInput
	// properties of database created
	Properties NdbDatabaseRestorePropertyArrayInput
	// helps to restore the database with same config.
	RestoreVersion pulumi.IntPtrInput
	// snapshot id from you want to use for restoring the instance
	SnapshotId pulumi.StringPtrInput
	// status of instance
	Status pulumi.StringPtrInput
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseRestoreTagArrayInput
	// time machine id of instance
	TimeMachineId pulumi.StringPtrInput
	// Time Machine details of instance
	TimeMachines NdbDatabaseRestoreTimeMachineArrayInput
	// timezone on which instance is created xw
	TimeZone pulumi.StringPtrInput
	// timezone . Should be used with  `userPitrTimestamp`
	TimeZonePitr pulumi.StringPtrInput
	// type of database
	Type pulumi.StringPtrInput
	// the time to which you want to restore your instance.
	UserPitrTimestamp pulumi.StringPtrInput
}

func (NdbDatabaseRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*ndbDatabaseRestoreState)(nil)).Elem()
}

type ndbDatabaseRestoreArgs struct {
	// database id
	DatabaseId string `pulumi:"databaseId"`
	// latest snapshot id
	LatestSnapshot *string `pulumi:"latestSnapshot"`
	// helps to restore the database with same config.
	RestoreVersion *int `pulumi:"restoreVersion"`
	// snapshot id from you want to use for restoring the instance
	SnapshotId *string `pulumi:"snapshotId"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseRestoreTag `pulumi:"tags"`
	// timezone . Should be used with  `userPitrTimestamp`
	TimeZonePitr *string `pulumi:"timeZonePitr"`
	// the time to which you want to restore your instance.
	UserPitrTimestamp *string `pulumi:"userPitrTimestamp"`
}

// The set of arguments for constructing a NdbDatabaseRestore resource.
type NdbDatabaseRestoreArgs struct {
	// database id
	DatabaseId pulumi.StringInput
	// latest snapshot id
	LatestSnapshot pulumi.StringPtrInput
	// helps to restore the database with same config.
	RestoreVersion pulumi.IntPtrInput
	// snapshot id from you want to use for restoring the instance
	SnapshotId pulumi.StringPtrInput
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseRestoreTagArrayInput
	// timezone . Should be used with  `userPitrTimestamp`
	TimeZonePitr pulumi.StringPtrInput
	// the time to which you want to restore your instance.
	UserPitrTimestamp pulumi.StringPtrInput
}

func (NdbDatabaseRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ndbDatabaseRestoreArgs)(nil)).Elem()
}

type NdbDatabaseRestoreInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreOutput() NdbDatabaseRestoreOutput
	ToNdbDatabaseRestoreOutputWithContext(ctx context.Context) NdbDatabaseRestoreOutput
}

func (*NdbDatabaseRestore) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseRestore)(nil)).Elem()
}

func (i *NdbDatabaseRestore) ToNdbDatabaseRestoreOutput() NdbDatabaseRestoreOutput {
	return i.ToNdbDatabaseRestoreOutputWithContext(context.Background())
}

func (i *NdbDatabaseRestore) ToNdbDatabaseRestoreOutputWithContext(ctx context.Context) NdbDatabaseRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreOutput)
}

// NdbDatabaseRestoreArrayInput is an input type that accepts NdbDatabaseRestoreArray and NdbDatabaseRestoreArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreArrayInput` via:
//
//	NdbDatabaseRestoreArray{ NdbDatabaseRestoreArgs{...} }
type NdbDatabaseRestoreArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreArrayOutput() NdbDatabaseRestoreArrayOutput
	ToNdbDatabaseRestoreArrayOutputWithContext(context.Context) NdbDatabaseRestoreArrayOutput
}

type NdbDatabaseRestoreArray []NdbDatabaseRestoreInput

func (NdbDatabaseRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NdbDatabaseRestore)(nil)).Elem()
}

func (i NdbDatabaseRestoreArray) ToNdbDatabaseRestoreArrayOutput() NdbDatabaseRestoreArrayOutput {
	return i.ToNdbDatabaseRestoreArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreArray) ToNdbDatabaseRestoreArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreArrayOutput)
}

// NdbDatabaseRestoreMapInput is an input type that accepts NdbDatabaseRestoreMap and NdbDatabaseRestoreMapOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreMapInput` via:
//
//	NdbDatabaseRestoreMap{ "key": NdbDatabaseRestoreArgs{...} }
type NdbDatabaseRestoreMapInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreMapOutput() NdbDatabaseRestoreMapOutput
	ToNdbDatabaseRestoreMapOutputWithContext(context.Context) NdbDatabaseRestoreMapOutput
}

type NdbDatabaseRestoreMap map[string]NdbDatabaseRestoreInput

func (NdbDatabaseRestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NdbDatabaseRestore)(nil)).Elem()
}

func (i NdbDatabaseRestoreMap) ToNdbDatabaseRestoreMapOutput() NdbDatabaseRestoreMapOutput {
	return i.ToNdbDatabaseRestoreMapOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreMap) ToNdbDatabaseRestoreMapOutputWithContext(ctx context.Context) NdbDatabaseRestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreMapOutput)
}

type NdbDatabaseRestoreOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseRestore)(nil)).Elem()
}

func (o NdbDatabaseRestoreOutput) ToNdbDatabaseRestoreOutput() NdbDatabaseRestoreOutput {
	return o
}

func (o NdbDatabaseRestoreOutput) ToNdbDatabaseRestoreOutputWithContext(ctx context.Context) NdbDatabaseRestoreOutput {
	return o
}

// whether instance is cloned or not
func (o NdbDatabaseRestoreOutput) Clone() pulumi.BoolOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.BoolOutput { return v.Clone }).(pulumi.BoolOutput)
}

// database cluster type
func (o NdbDatabaseRestoreOutput) DatabaseClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DatabaseClusterType }).(pulumi.StringOutput)
}

// database id
func (o NdbDatabaseRestoreOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DatabaseId }).(pulumi.StringOutput)
}

func (o NdbDatabaseRestoreOutput) DatabaseInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DatabaseInstanceId }).(pulumi.StringOutput)
}

// name of database
func (o NdbDatabaseRestoreOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// database nodes associated with database instance
func (o NdbDatabaseRestoreOutput) DatabaseNodes() NdbDatabaseRestoreDatabaseNodeArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreDatabaseNodeArrayOutput { return v.DatabaseNodes }).(NdbDatabaseRestoreDatabaseNodeArrayOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DateCreated }).(pulumi.StringOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreOutput) DateModified() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DateModified }).(pulumi.StringOutput)
}

// dbserver logical cluster
func (o NdbDatabaseRestoreOutput) DbserverLogicalCluster() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringMapOutput { return v.DbserverLogicalCluster }).(pulumi.StringMapOutput)
}

// dbserver logical cluster id
func (o NdbDatabaseRestoreOutput) DbserverLogicalClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.DbserverLogicalClusterId }).(pulumi.StringOutput)
}

// description of database instance
func (o NdbDatabaseRestoreOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// info of instance
func (o NdbDatabaseRestoreOutput) Infos() NdbDatabaseRestoreInfoArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreInfoArrayOutput { return v.Infos }).(NdbDatabaseRestoreInfoArrayOutput)
}

// latest snapshot id
func (o NdbDatabaseRestoreOutput) LatestSnapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringPtrOutput { return v.LatestSnapshot }).(pulumi.StringPtrOutput)
}

// LCM config of instance
func (o NdbDatabaseRestoreOutput) LcmConfigs() NdbDatabaseRestoreLcmConfigArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreLcmConfigArrayOutput { return v.LcmConfigs }).(NdbDatabaseRestoreLcmConfigArrayOutput)
}

// linked databases within database instance
func (o NdbDatabaseRestoreOutput) LinkedDatabases() NdbDatabaseRestoreLinkedDatabaseArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreLinkedDatabaseArrayOutput { return v.LinkedDatabases }).(NdbDatabaseRestoreLinkedDatabaseArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbDatabaseRestoreOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringMapOutput { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// parent database id
func (o NdbDatabaseRestoreOutput) ParentDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.ParentDatabaseId }).(pulumi.StringOutput)
}

// properties of database created
func (o NdbDatabaseRestoreOutput) Properties() NdbDatabaseRestorePropertyArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestorePropertyArrayOutput { return v.Properties }).(NdbDatabaseRestorePropertyArrayOutput)
}

// helps to restore the database with same config.
func (o NdbDatabaseRestoreOutput) RestoreVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.IntPtrOutput { return v.RestoreVersion }).(pulumi.IntPtrOutput)
}

// snapshot id from you want to use for restoring the instance
func (o NdbDatabaseRestoreOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringPtrOutput { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbDatabaseRestoreOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbDatabaseRestoreOutput) Tags() NdbDatabaseRestoreTagArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreTagArrayOutput { return v.Tags }).(NdbDatabaseRestoreTagArrayOutput)
}

// time machine id of instance
func (o NdbDatabaseRestoreOutput) TimeMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.TimeMachineId }).(pulumi.StringOutput)
}

// Time Machine details of instance
func (o NdbDatabaseRestoreOutput) TimeMachines() NdbDatabaseRestoreTimeMachineArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) NdbDatabaseRestoreTimeMachineArrayOutput { return v.TimeMachines }).(NdbDatabaseRestoreTimeMachineArrayOutput)
}

// timezone on which instance is created xw
func (o NdbDatabaseRestoreOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// timezone . Should be used with  `userPitrTimestamp`
func (o NdbDatabaseRestoreOutput) TimeZonePitr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringPtrOutput { return v.TimeZonePitr }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbDatabaseRestoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// the time to which you want to restore your instance.
func (o NdbDatabaseRestoreOutput) UserPitrTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseRestore) pulumi.StringPtrOutput { return v.UserPitrTimestamp }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NdbDatabaseRestore)(nil)).Elem()
}

func (o NdbDatabaseRestoreArrayOutput) ToNdbDatabaseRestoreArrayOutput() NdbDatabaseRestoreArrayOutput {
	return o
}

func (o NdbDatabaseRestoreArrayOutput) ToNdbDatabaseRestoreArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreArrayOutput {
	return o
}

func (o NdbDatabaseRestoreArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NdbDatabaseRestore {
		return vs[0].([]*NdbDatabaseRestore)[vs[1].(int)]
	}).(NdbDatabaseRestoreOutput)
}

type NdbDatabaseRestoreMapOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NdbDatabaseRestore)(nil)).Elem()
}

func (o NdbDatabaseRestoreMapOutput) ToNdbDatabaseRestoreMapOutput() NdbDatabaseRestoreMapOutput {
	return o
}

func (o NdbDatabaseRestoreMapOutput) ToNdbDatabaseRestoreMapOutputWithContext(ctx context.Context) NdbDatabaseRestoreMapOutput {
	return o
}

func (o NdbDatabaseRestoreMapOutput) MapIndex(k pulumi.StringInput) NdbDatabaseRestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NdbDatabaseRestore {
		return vs[0].(map[string]*NdbDatabaseRestore)[vs[1].(string)]
	}).(NdbDatabaseRestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInput)(nil)).Elem(), &NdbDatabaseRestore{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreArrayInput)(nil)).Elem(), NdbDatabaseRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreMapInput)(nil)).Elem(), NdbDatabaseRestoreMap{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreMapOutput{})
}
