// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches the list of iSCSI clients.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetVolumeIscsiClientsV2(ctx, &nutanix.GetVolumeIscsiClientsV2Args{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Argument Reference
//
// The following arguments are supported:
//
// * `page`: - A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
// * `limit` : A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
// * `filter` : A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields: clusterReference, extId.
// * `orderby` : A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '\$orderby=templateName desc' would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: clusterReference, extId.
// * `expand` : A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are \$filter, \$select and \$orderby. The following expansion keys are supported. The expand can be applied to the following fields: cluster.
// * `select` : A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields: clusterReference, extId.
func GetVolumeIscsiClientsV2(ctx *pulumi.Context, args *GetVolumeIscsiClientsV2Args, opts ...pulumi.InvokeOption) (*GetVolumeIscsiClientsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeIscsiClientsV2Result
	err := ctx.Invoke("nutanix:index/getVolumeIscsiClientsV2:getVolumeIscsiClientsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumeIscsiClientsV2.
type GetVolumeIscsiClientsV2Args struct {
	Expand  *string `pulumi:"expand"`
	Filter  *string `pulumi:"filter"`
	Limit   *int    `pulumi:"limit"`
	Orderby *string `pulumi:"orderby"`
	Page    *int    `pulumi:"page"`
	Select  *string `pulumi:"select"`
}

// A collection of values returned by getVolumeIscsiClientsV2.
type GetVolumeIscsiClientsV2Result struct {
	Expand *string `pulumi:"expand"`
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - List all the iSCSI clients.
	IscsiClients []GetVolumeIscsiClientsV2IscsiClient `pulumi:"iscsiClients"`
	Limit        *int                                 `pulumi:"limit"`
	Orderby      *string                              `pulumi:"orderby"`
	Page         *int                                 `pulumi:"page"`
	Select       *string                              `pulumi:"select"`
}

func GetVolumeIscsiClientsV2Output(ctx *pulumi.Context, args GetVolumeIscsiClientsV2OutputArgs, opts ...pulumi.InvokeOption) GetVolumeIscsiClientsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVolumeIscsiClientsV2ResultOutput, error) {
			args := v.(GetVolumeIscsiClientsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getVolumeIscsiClientsV2:getVolumeIscsiClientsV2", args, GetVolumeIscsiClientsV2ResultOutput{}, options).(GetVolumeIscsiClientsV2ResultOutput), nil
		}).(GetVolumeIscsiClientsV2ResultOutput)
}

// A collection of arguments for invoking getVolumeIscsiClientsV2.
type GetVolumeIscsiClientsV2OutputArgs struct {
	Expand  pulumi.StringPtrInput `pulumi:"expand"`
	Filter  pulumi.StringPtrInput `pulumi:"filter"`
	Limit   pulumi.IntPtrInput    `pulumi:"limit"`
	Orderby pulumi.StringPtrInput `pulumi:"orderby"`
	Page    pulumi.IntPtrInput    `pulumi:"page"`
	Select  pulumi.StringPtrInput `pulumi:"select"`
}

func (GetVolumeIscsiClientsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeIscsiClientsV2Args)(nil)).Elem()
}

// A collection of values returned by getVolumeIscsiClientsV2.
type GetVolumeIscsiClientsV2ResultOutput struct{ *pulumi.OutputState }

func (GetVolumeIscsiClientsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeIscsiClientsV2Result)(nil)).Elem()
}

func (o GetVolumeIscsiClientsV2ResultOutput) ToGetVolumeIscsiClientsV2ResultOutput() GetVolumeIscsiClientsV2ResultOutput {
	return o
}

func (o GetVolumeIscsiClientsV2ResultOutput) ToGetVolumeIscsiClientsV2ResultOutputWithContext(ctx context.Context) GetVolumeIscsiClientsV2ResultOutput {
	return o
}

func (o GetVolumeIscsiClientsV2ResultOutput) Expand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *string { return v.Expand }).(pulumi.StringPtrOutput)
}

func (o GetVolumeIscsiClientsV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVolumeIscsiClientsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - List all the iSCSI clients.
func (o GetVolumeIscsiClientsV2ResultOutput) IscsiClients() GetVolumeIscsiClientsV2IscsiClientArrayOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) []GetVolumeIscsiClientsV2IscsiClient { return v.IscsiClients }).(GetVolumeIscsiClientsV2IscsiClientArrayOutput)
}

func (o GetVolumeIscsiClientsV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetVolumeIscsiClientsV2ResultOutput) Orderby() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *string { return v.Orderby }).(pulumi.StringPtrOutput)
}

func (o GetVolumeIscsiClientsV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetVolumeIscsiClientsV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeIscsiClientsV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeIscsiClientsV2ResultOutput{})
}
