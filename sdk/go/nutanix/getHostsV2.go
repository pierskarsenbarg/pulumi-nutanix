// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes the Lists of all host entities across clusters registered to Prism Central.
func GetHostsV2(ctx *pulumi.Context, args *GetHostsV2Args, opts ...pulumi.InvokeOption) (*GetHostsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHostsV2Result
	err := ctx.Invoke("nutanix:index/getHostsV2:getHostsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostsV2.
type GetHostsV2Args struct {
	// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName. The groupby can be applied on the following fields:
	// * `cluster/name`
	// * `hypervisor/type`
	Apply *string `pulumi:"apply"`
	// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
	// * `bootTimeUsecs`
	// * `cluster/name`
	// * `cluster/uuid`
	// * `cpuCapacityHz`
	// * `cpuFrequencyHz`
	// * `cpuModel`
	// * `defaultVhdContainerUuid`
	// * `defaultVhdLocation`
	// * `defaultVmContainerUuid`
	// * `defaultVmLocation`
	// * `extId`
	// * `gpuDriverVersion`
	// * `gpuList`
	// * `hostName`
	// * `hypervisor/type`
	// * `memorySizeBytes`
	// * `numberOfCpuCores`
	// * `numberOfCpuSockets`
	// * `numberOfCpuThreads`
	Filter *string `pulumi:"filter"`
	// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	// -(Optional) A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
	Page *int `pulumi:"page"`
	// -(Optional) A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields:
	// * `blockModel`
	// * `blockSerial`
	// * `bootTimeUsecs`
	Select *string `pulumi:"select"`
}

// A collection of values returned by getHostsV2.
type GetHostsV2Result struct {
	Apply  *string `pulumi:"apply"`
	Filter *string `pulumi:"filter"`
	// - Lists all host entities across clusters registered to Prism Central.
	HostEntities []GetHostsV2HostEntity `pulumi:"hostEntities"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Limit   *int    `pulumi:"limit"`
	OrderBy *string `pulumi:"orderBy"`
	Page    *int    `pulumi:"page"`
	Select  *string `pulumi:"select"`
}

func GetHostsV2Output(ctx *pulumi.Context, args GetHostsV2OutputArgs, opts ...pulumi.InvokeOption) GetHostsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetHostsV2ResultOutput, error) {
			args := v.(GetHostsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getHostsV2:getHostsV2", args, GetHostsV2ResultOutput{}, options).(GetHostsV2ResultOutput), nil
		}).(GetHostsV2ResultOutput)
}

// A collection of arguments for invoking getHostsV2.
type GetHostsV2OutputArgs struct {
	// -(Optional) A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '\$apply=groupby((templateName))' would get all templates grouped by templateName. The groupby can be applied on the following fields:
	// * `cluster/name`
	// * `hypervisor/type`
	Apply pulumi.StringPtrInput `pulumi:"apply"`
	// -(Optional) A URL query parameter that allows clients to filter a collection of resources. The expression specified with \$filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the \$filter must conform to the OData V4.01 URL conventions. For example, filter '\$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '\$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'. The filter can be applied to the following fields:
	// * `bootTimeUsecs`
	// * `cluster/name`
	// * `cluster/uuid`
	// * `cpuCapacityHz`
	// * `cpuFrequencyHz`
	// * `cpuModel`
	// * `defaultVhdContainerUuid`
	// * `defaultVhdLocation`
	// * `defaultVmContainerUuid`
	// * `defaultVmLocation`
	// * `extId`
	// * `gpuDriverVersion`
	// * `gpuList`
	// * `hostName`
	// * `hypervisor/type`
	// * `memorySizeBytes`
	// * `numberOfCpuCores`
	// * `numberOfCpuSockets`
	// * `numberOfCpuThreads`
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// -(Optional) A URL query parameter that specifies the total number of records returned in the result set. Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
	Limit   pulumi.IntPtrInput    `pulumi:"limit"`
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
	// -(Optional) A query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource.
	Page pulumi.IntPtrInput `pulumi:"page"`
	// -(Optional) A query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the \$select must conform to the OData V4.01 URL conventions. If a \$select expression consists of a single select item that is an asterisk (i.e., \*), then all properties on the matching resource will be returned. The select can be applied to the following fields:
	// * `blockModel`
	// * `blockSerial`
	// * `bootTimeUsecs`
	Select pulumi.StringPtrInput `pulumi:"select"`
}

func (GetHostsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsV2Args)(nil)).Elem()
}

// A collection of values returned by getHostsV2.
type GetHostsV2ResultOutput struct{ *pulumi.OutputState }

func (GetHostsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsV2Result)(nil)).Elem()
}

func (o GetHostsV2ResultOutput) ToGetHostsV2ResultOutput() GetHostsV2ResultOutput {
	return o
}

func (o GetHostsV2ResultOutput) ToGetHostsV2ResultOutputWithContext(ctx context.Context) GetHostsV2ResultOutput {
	return o
}

func (o GetHostsV2ResultOutput) Apply() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *string { return v.Apply }).(pulumi.StringPtrOutput)
}

func (o GetHostsV2ResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// - Lists all host entities across clusters registered to Prism Central.
func (o GetHostsV2ResultOutput) HostEntities() GetHostsV2HostEntityArrayOutput {
	return o.ApplyT(func(v GetHostsV2Result) []GetHostsV2HostEntity { return v.HostEntities }).(GetHostsV2HostEntityArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHostsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHostsV2ResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetHostsV2ResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetHostsV2ResultOutput) Page() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *int { return v.Page }).(pulumi.IntPtrOutput)
}

func (o GetHostsV2ResultOutput) Select() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostsV2Result) *string { return v.Select }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHostsV2ResultOutput{})
}
