// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TemplateV2 struct {
	pulumi.CustomResourceState

	CreateTime          pulumi.StringOutput                    `pulumi:"createTime"`
	CreatedBies         TemplateV2CreatedByArrayOutput         `pulumi:"createdBies"`
	ExtId               pulumi.StringOutput                    `pulumi:"extId"`
	GuestUpdateStatuses TemplateV2GuestUpdateStatusArrayOutput `pulumi:"guestUpdateStatuses"`
	Links               TemplateV2LinkArrayOutput              `pulumi:"links"`
	TemplateDescription pulumi.StringOutput                    `pulumi:"templateDescription"`
	TemplateName        pulumi.StringOutput                    `pulumi:"templateName"`
	TemplateVersionSpec TemplateV2TemplateVersionSpecOutput    `pulumi:"templateVersionSpec"`
	TenantId            pulumi.StringOutput                    `pulumi:"tenantId"`
	UpdateTime          pulumi.StringOutput                    `pulumi:"updateTime"`
	UpdatedBies         TemplateV2UpdatedByArrayOutput         `pulumi:"updatedBies"`
}

// NewTemplateV2 registers a new resource with the given unique name, arguments, and options.
func NewTemplateV2(ctx *pulumi.Context,
	name string, args *TemplateV2Args, opts ...pulumi.ResourceOption) (*TemplateV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	if args.TemplateVersionSpec == nil {
		return nil, errors.New("invalid value for required argument 'TemplateVersionSpec'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TemplateV2
	err := ctx.RegisterResource("nutanix:index/templateV2:TemplateV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplateV2 gets an existing TemplateV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplateV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateV2State, opts ...pulumi.ResourceOption) (*TemplateV2, error) {
	var resource TemplateV2
	err := ctx.ReadResource("nutanix:index/templateV2:TemplateV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TemplateV2 resources.
type templateV2State struct {
	CreateTime          *string                        `pulumi:"createTime"`
	CreatedBies         []TemplateV2CreatedBy          `pulumi:"createdBies"`
	ExtId               *string                        `pulumi:"extId"`
	GuestUpdateStatuses []TemplateV2GuestUpdateStatus  `pulumi:"guestUpdateStatuses"`
	Links               []TemplateV2Link               `pulumi:"links"`
	TemplateDescription *string                        `pulumi:"templateDescription"`
	TemplateName        *string                        `pulumi:"templateName"`
	TemplateVersionSpec *TemplateV2TemplateVersionSpec `pulumi:"templateVersionSpec"`
	TenantId            *string                        `pulumi:"tenantId"`
	UpdateTime          *string                        `pulumi:"updateTime"`
	UpdatedBies         []TemplateV2UpdatedBy          `pulumi:"updatedBies"`
}

type TemplateV2State struct {
	CreateTime          pulumi.StringPtrInput
	CreatedBies         TemplateV2CreatedByArrayInput
	ExtId               pulumi.StringPtrInput
	GuestUpdateStatuses TemplateV2GuestUpdateStatusArrayInput
	Links               TemplateV2LinkArrayInput
	TemplateDescription pulumi.StringPtrInput
	TemplateName        pulumi.StringPtrInput
	TemplateVersionSpec TemplateV2TemplateVersionSpecPtrInput
	TenantId            pulumi.StringPtrInput
	UpdateTime          pulumi.StringPtrInput
	UpdatedBies         TemplateV2UpdatedByArrayInput
}

func (TemplateV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*templateV2State)(nil)).Elem()
}

type templateV2Args struct {
	CreatedBies         []TemplateV2CreatedBy         `pulumi:"createdBies"`
	GuestUpdateStatuses []TemplateV2GuestUpdateStatus `pulumi:"guestUpdateStatuses"`
	TemplateDescription *string                       `pulumi:"templateDescription"`
	TemplateName        string                        `pulumi:"templateName"`
	TemplateVersionSpec TemplateV2TemplateVersionSpec `pulumi:"templateVersionSpec"`
	UpdatedBies         []TemplateV2UpdatedBy         `pulumi:"updatedBies"`
}

// The set of arguments for constructing a TemplateV2 resource.
type TemplateV2Args struct {
	CreatedBies         TemplateV2CreatedByArrayInput
	GuestUpdateStatuses TemplateV2GuestUpdateStatusArrayInput
	TemplateDescription pulumi.StringPtrInput
	TemplateName        pulumi.StringInput
	TemplateVersionSpec TemplateV2TemplateVersionSpecInput
	UpdatedBies         TemplateV2UpdatedByArrayInput
}

func (TemplateV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*templateV2Args)(nil)).Elem()
}

type TemplateV2Input interface {
	pulumi.Input

	ToTemplateV2Output() TemplateV2Output
	ToTemplateV2OutputWithContext(ctx context.Context) TemplateV2Output
}

func (*TemplateV2) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateV2)(nil)).Elem()
}

func (i *TemplateV2) ToTemplateV2Output() TemplateV2Output {
	return i.ToTemplateV2OutputWithContext(context.Background())
}

func (i *TemplateV2) ToTemplateV2OutputWithContext(ctx context.Context) TemplateV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV2Output)
}

// TemplateV2ArrayInput is an input type that accepts TemplateV2Array and TemplateV2ArrayOutput values.
// You can construct a concrete instance of `TemplateV2ArrayInput` via:
//
//	TemplateV2Array{ TemplateV2Args{...} }
type TemplateV2ArrayInput interface {
	pulumi.Input

	ToTemplateV2ArrayOutput() TemplateV2ArrayOutput
	ToTemplateV2ArrayOutputWithContext(context.Context) TemplateV2ArrayOutput
}

type TemplateV2Array []TemplateV2Input

func (TemplateV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TemplateV2)(nil)).Elem()
}

func (i TemplateV2Array) ToTemplateV2ArrayOutput() TemplateV2ArrayOutput {
	return i.ToTemplateV2ArrayOutputWithContext(context.Background())
}

func (i TemplateV2Array) ToTemplateV2ArrayOutputWithContext(ctx context.Context) TemplateV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV2ArrayOutput)
}

// TemplateV2MapInput is an input type that accepts TemplateV2Map and TemplateV2MapOutput values.
// You can construct a concrete instance of `TemplateV2MapInput` via:
//
//	TemplateV2Map{ "key": TemplateV2Args{...} }
type TemplateV2MapInput interface {
	pulumi.Input

	ToTemplateV2MapOutput() TemplateV2MapOutput
	ToTemplateV2MapOutputWithContext(context.Context) TemplateV2MapOutput
}

type TemplateV2Map map[string]TemplateV2Input

func (TemplateV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TemplateV2)(nil)).Elem()
}

func (i TemplateV2Map) ToTemplateV2MapOutput() TemplateV2MapOutput {
	return i.ToTemplateV2MapOutputWithContext(context.Background())
}

func (i TemplateV2Map) ToTemplateV2MapOutputWithContext(ctx context.Context) TemplateV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV2MapOutput)
}

type TemplateV2Output struct{ *pulumi.OutputState }

func (TemplateV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateV2)(nil)).Elem()
}

func (o TemplateV2Output) ToTemplateV2Output() TemplateV2Output {
	return o
}

func (o TemplateV2Output) ToTemplateV2OutputWithContext(ctx context.Context) TemplateV2Output {
	return o
}

func (o TemplateV2Output) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o TemplateV2Output) CreatedBies() TemplateV2CreatedByArrayOutput {
	return o.ApplyT(func(v *TemplateV2) TemplateV2CreatedByArrayOutput { return v.CreatedBies }).(TemplateV2CreatedByArrayOutput)
}

func (o TemplateV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

func (o TemplateV2Output) GuestUpdateStatuses() TemplateV2GuestUpdateStatusArrayOutput {
	return o.ApplyT(func(v *TemplateV2) TemplateV2GuestUpdateStatusArrayOutput { return v.GuestUpdateStatuses }).(TemplateV2GuestUpdateStatusArrayOutput)
}

func (o TemplateV2Output) Links() TemplateV2LinkArrayOutput {
	return o.ApplyT(func(v *TemplateV2) TemplateV2LinkArrayOutput { return v.Links }).(TemplateV2LinkArrayOutput)
}

func (o TemplateV2Output) TemplateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.TemplateDescription }).(pulumi.StringOutput)
}

func (o TemplateV2Output) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

func (o TemplateV2Output) TemplateVersionSpec() TemplateV2TemplateVersionSpecOutput {
	return o.ApplyT(func(v *TemplateV2) TemplateV2TemplateVersionSpecOutput { return v.TemplateVersionSpec }).(TemplateV2TemplateVersionSpecOutput)
}

func (o TemplateV2Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

func (o TemplateV2Output) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateV2) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o TemplateV2Output) UpdatedBies() TemplateV2UpdatedByArrayOutput {
	return o.ApplyT(func(v *TemplateV2) TemplateV2UpdatedByArrayOutput { return v.UpdatedBies }).(TemplateV2UpdatedByArrayOutput)
}

type TemplateV2ArrayOutput struct{ *pulumi.OutputState }

func (TemplateV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TemplateV2)(nil)).Elem()
}

func (o TemplateV2ArrayOutput) ToTemplateV2ArrayOutput() TemplateV2ArrayOutput {
	return o
}

func (o TemplateV2ArrayOutput) ToTemplateV2ArrayOutputWithContext(ctx context.Context) TemplateV2ArrayOutput {
	return o
}

func (o TemplateV2ArrayOutput) Index(i pulumi.IntInput) TemplateV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TemplateV2 {
		return vs[0].([]*TemplateV2)[vs[1].(int)]
	}).(TemplateV2Output)
}

type TemplateV2MapOutput struct{ *pulumi.OutputState }

func (TemplateV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TemplateV2)(nil)).Elem()
}

func (o TemplateV2MapOutput) ToTemplateV2MapOutput() TemplateV2MapOutput {
	return o
}

func (o TemplateV2MapOutput) ToTemplateV2MapOutputWithContext(ctx context.Context) TemplateV2MapOutput {
	return o
}

func (o TemplateV2MapOutput) MapIndex(k pulumi.StringInput) TemplateV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TemplateV2 {
		return vs[0].(map[string]*TemplateV2)[vs[1].(string)]
	}).(TemplateV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV2Input)(nil)).Elem(), &TemplateV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV2ArrayInput)(nil)).Elem(), TemplateV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV2MapInput)(nil)).Elem(), TemplateV2Map{})
	pulumi.RegisterOutputType(TemplateV2Output{})
	pulumi.RegisterOutputType(TemplateV2ArrayOutput{})
	pulumi.RegisterOutputType(TemplateV2MapOutput{})
}
