// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix resource to create authorization policy.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.NewAuthorizationPolicyV2(ctx, "ap-example", &nutanix.AuthorizationPolicyV2Args{
//				AuthorizationPolicyType: pulumi.String("USER_DEFINED"),
//				Description:             pulumi.String("authorization policy example"),
//				DisplayName:             pulumi.String("auth_policy_example"),
//				Entities: nutanix.AuthorizationPolicyV2EntityArray{
//					&nutanix.AuthorizationPolicyV2EntityArgs{
//						Reserved: pulumi.String("{\"images\":{\"*\":{\"eq\":\"*\"}}}"),
//					},
//					&nutanix.AuthorizationPolicyV2EntityArgs{
//						Reserved: pulumi.String("{\"marketplace_item\":{\"owner_uuid\":{\"eq\":\"SELF_OWNED\"}}}"),
//					},
//				},
//				Identities: nutanix.AuthorizationPolicyV2IdentityArray{
//					&nutanix.AuthorizationPolicyV2IdentityArgs{
//						Reserved: pulumi.String("{\"user\":{\"uuid\":{\"anyof\":[\"00000000-0000-0000-0000-000000000000\"]}}}"),
//					},
//				},
//				Role: pulumi.String("ba250e3e-1db1-4950-917f-a9e2ea35b8e3"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AuthorizationPolicyV2 struct {
	pulumi.CustomResourceState

	// Type of Authorization Policy.
	// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
	// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
	// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
	// * `SERVICE_DEFINED` : ACP defined by a service.
	// * `USER_DEFINED` : ACP defined by an User.
	AuthorizationPolicyType pulumi.StringPtrOutput `pulumi:"authorizationPolicyType"`
	// Client that created the entity.
	ClientName pulumi.StringOutput `pulumi:"clientName"`
	// User or Service Name that created the Authorization Policy.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The creation time of the Authorization Policy.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// Description of the Authorization Policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the Authorization Policy.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The entities being qualified by the Authorization Policy.
	Entities AuthorizationPolicyV2EntityArrayOutput `pulumi:"entities"`
	// ext_id of Authorization policy.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// The identities for which the Authorization Policy is created.
	Identities AuthorizationPolicyV2IdentityArrayOutput `pulumi:"identities"`
	// Flag identifying if the Authorization Policy is system defined or not.
	IsSystemDefined pulumi.BoolOutput `pulumi:"isSystemDefined"`
	// The time when the Authorization Policy was last updated.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// The Role associated with the Authorization Policy.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewAuthorizationPolicyV2 registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationPolicyV2(ctx *pulumi.Context,
	name string, args *AuthorizationPolicyV2Args, opts ...pulumi.ResourceOption) (*AuthorizationPolicyV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Entities == nil {
		return nil, errors.New("invalid value for required argument 'Entities'")
	}
	if args.Identities == nil {
		return nil, errors.New("invalid value for required argument 'Identities'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizationPolicyV2
	err := ctx.RegisterResource("nutanix:index/authorizationPolicyV2:AuthorizationPolicyV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationPolicyV2 gets an existing AuthorizationPolicyV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationPolicyV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationPolicyV2State, opts ...pulumi.ResourceOption) (*AuthorizationPolicyV2, error) {
	var resource AuthorizationPolicyV2
	err := ctx.ReadResource("nutanix:index/authorizationPolicyV2:AuthorizationPolicyV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationPolicyV2 resources.
type authorizationPolicyV2State struct {
	// Type of Authorization Policy.
	// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
	// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
	// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
	// * `SERVICE_DEFINED` : ACP defined by a service.
	// * `USER_DEFINED` : ACP defined by an User.
	AuthorizationPolicyType *string `pulumi:"authorizationPolicyType"`
	// Client that created the entity.
	ClientName *string `pulumi:"clientName"`
	// User or Service Name that created the Authorization Policy.
	CreatedBy *string `pulumi:"createdBy"`
	// The creation time of the Authorization Policy.
	CreatedTime *string `pulumi:"createdTime"`
	// Description of the Authorization Policy.
	Description *string `pulumi:"description"`
	// Name of the Authorization Policy.
	DisplayName *string `pulumi:"displayName"`
	// The entities being qualified by the Authorization Policy.
	Entities []AuthorizationPolicyV2Entity `pulumi:"entities"`
	// ext_id of Authorization policy.
	ExtId *string `pulumi:"extId"`
	// The identities for which the Authorization Policy is created.
	Identities []AuthorizationPolicyV2Identity `pulumi:"identities"`
	// Flag identifying if the Authorization Policy is system defined or not.
	IsSystemDefined *bool `pulumi:"isSystemDefined"`
	// The time when the Authorization Policy was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// The Role associated with the Authorization Policy.
	Role *string `pulumi:"role"`
}

type AuthorizationPolicyV2State struct {
	// Type of Authorization Policy.
	// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
	// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
	// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
	// * `SERVICE_DEFINED` : ACP defined by a service.
	// * `USER_DEFINED` : ACP defined by an User.
	AuthorizationPolicyType pulumi.StringPtrInput
	// Client that created the entity.
	ClientName pulumi.StringPtrInput
	// User or Service Name that created the Authorization Policy.
	CreatedBy pulumi.StringPtrInput
	// The creation time of the Authorization Policy.
	CreatedTime pulumi.StringPtrInput
	// Description of the Authorization Policy.
	Description pulumi.StringPtrInput
	// Name of the Authorization Policy.
	DisplayName pulumi.StringPtrInput
	// The entities being qualified by the Authorization Policy.
	Entities AuthorizationPolicyV2EntityArrayInput
	// ext_id of Authorization policy.
	ExtId pulumi.StringPtrInput
	// The identities for which the Authorization Policy is created.
	Identities AuthorizationPolicyV2IdentityArrayInput
	// Flag identifying if the Authorization Policy is system defined or not.
	IsSystemDefined pulumi.BoolPtrInput
	// The time when the Authorization Policy was last updated.
	LastUpdatedTime pulumi.StringPtrInput
	// The Role associated with the Authorization Policy.
	Role pulumi.StringPtrInput
}

func (AuthorizationPolicyV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationPolicyV2State)(nil)).Elem()
}

type authorizationPolicyV2Args struct {
	// Type of Authorization Policy.
	// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
	// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
	// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
	// * `SERVICE_DEFINED` : ACP defined by a service.
	// * `USER_DEFINED` : ACP defined by an User.
	AuthorizationPolicyType *string `pulumi:"authorizationPolicyType"`
	// Description of the Authorization Policy.
	Description *string `pulumi:"description"`
	// Name of the Authorization Policy.
	DisplayName string `pulumi:"displayName"`
	// The entities being qualified by the Authorization Policy.
	Entities []AuthorizationPolicyV2Entity `pulumi:"entities"`
	// ext_id of Authorization policy.
	ExtId *string `pulumi:"extId"`
	// The identities for which the Authorization Policy is created.
	Identities []AuthorizationPolicyV2Identity `pulumi:"identities"`
	// The Role associated with the Authorization Policy.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a AuthorizationPolicyV2 resource.
type AuthorizationPolicyV2Args struct {
	// Type of Authorization Policy.
	// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
	// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
	// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
	// * `SERVICE_DEFINED` : ACP defined by a service.
	// * `USER_DEFINED` : ACP defined by an User.
	AuthorizationPolicyType pulumi.StringPtrInput
	// Description of the Authorization Policy.
	Description pulumi.StringPtrInput
	// Name of the Authorization Policy.
	DisplayName pulumi.StringInput
	// The entities being qualified by the Authorization Policy.
	Entities AuthorizationPolicyV2EntityArrayInput
	// ext_id of Authorization policy.
	ExtId pulumi.StringPtrInput
	// The identities for which the Authorization Policy is created.
	Identities AuthorizationPolicyV2IdentityArrayInput
	// The Role associated with the Authorization Policy.
	Role pulumi.StringInput
}

func (AuthorizationPolicyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationPolicyV2Args)(nil)).Elem()
}

type AuthorizationPolicyV2Input interface {
	pulumi.Input

	ToAuthorizationPolicyV2Output() AuthorizationPolicyV2Output
	ToAuthorizationPolicyV2OutputWithContext(ctx context.Context) AuthorizationPolicyV2Output
}

func (*AuthorizationPolicyV2) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyV2)(nil)).Elem()
}

func (i *AuthorizationPolicyV2) ToAuthorizationPolicyV2Output() AuthorizationPolicyV2Output {
	return i.ToAuthorizationPolicyV2OutputWithContext(context.Background())
}

func (i *AuthorizationPolicyV2) ToAuthorizationPolicyV2OutputWithContext(ctx context.Context) AuthorizationPolicyV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyV2Output)
}

// AuthorizationPolicyV2ArrayInput is an input type that accepts AuthorizationPolicyV2Array and AuthorizationPolicyV2ArrayOutput values.
// You can construct a concrete instance of `AuthorizationPolicyV2ArrayInput` via:
//
//	AuthorizationPolicyV2Array{ AuthorizationPolicyV2Args{...} }
type AuthorizationPolicyV2ArrayInput interface {
	pulumi.Input

	ToAuthorizationPolicyV2ArrayOutput() AuthorizationPolicyV2ArrayOutput
	ToAuthorizationPolicyV2ArrayOutputWithContext(context.Context) AuthorizationPolicyV2ArrayOutput
}

type AuthorizationPolicyV2Array []AuthorizationPolicyV2Input

func (AuthorizationPolicyV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationPolicyV2)(nil)).Elem()
}

func (i AuthorizationPolicyV2Array) ToAuthorizationPolicyV2ArrayOutput() AuthorizationPolicyV2ArrayOutput {
	return i.ToAuthorizationPolicyV2ArrayOutputWithContext(context.Background())
}

func (i AuthorizationPolicyV2Array) ToAuthorizationPolicyV2ArrayOutputWithContext(ctx context.Context) AuthorizationPolicyV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyV2ArrayOutput)
}

// AuthorizationPolicyV2MapInput is an input type that accepts AuthorizationPolicyV2Map and AuthorizationPolicyV2MapOutput values.
// You can construct a concrete instance of `AuthorizationPolicyV2MapInput` via:
//
//	AuthorizationPolicyV2Map{ "key": AuthorizationPolicyV2Args{...} }
type AuthorizationPolicyV2MapInput interface {
	pulumi.Input

	ToAuthorizationPolicyV2MapOutput() AuthorizationPolicyV2MapOutput
	ToAuthorizationPolicyV2MapOutputWithContext(context.Context) AuthorizationPolicyV2MapOutput
}

type AuthorizationPolicyV2Map map[string]AuthorizationPolicyV2Input

func (AuthorizationPolicyV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationPolicyV2)(nil)).Elem()
}

func (i AuthorizationPolicyV2Map) ToAuthorizationPolicyV2MapOutput() AuthorizationPolicyV2MapOutput {
	return i.ToAuthorizationPolicyV2MapOutputWithContext(context.Background())
}

func (i AuthorizationPolicyV2Map) ToAuthorizationPolicyV2MapOutputWithContext(ctx context.Context) AuthorizationPolicyV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPolicyV2MapOutput)
}

type AuthorizationPolicyV2Output struct{ *pulumi.OutputState }

func (AuthorizationPolicyV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPolicyV2)(nil)).Elem()
}

func (o AuthorizationPolicyV2Output) ToAuthorizationPolicyV2Output() AuthorizationPolicyV2Output {
	return o
}

func (o AuthorizationPolicyV2Output) ToAuthorizationPolicyV2OutputWithContext(ctx context.Context) AuthorizationPolicyV2Output {
	return o
}

// Type of Authorization Policy.
// * `PREDEFINED_READ_ONLY` : System-defined read-only ACP, i.e. no modifications allowed.
// * `SERVICE_DEFINED_READ_ONLY` : Read-only ACP defined by a service.
// * `PREDEFINED_UPDATE_IDENTITY_ONLY` : System-defined ACP prohibiting any modifications from customer.
// * `SERVICE_DEFINED` : ACP defined by a service.
// * `USER_DEFINED` : ACP defined by an User.
func (o AuthorizationPolicyV2Output) AuthorizationPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringPtrOutput { return v.AuthorizationPolicyType }).(pulumi.StringPtrOutput)
}

// Client that created the entity.
func (o AuthorizationPolicyV2Output) ClientName() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.ClientName }).(pulumi.StringOutput)
}

// User or Service Name that created the Authorization Policy.
func (o AuthorizationPolicyV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The creation time of the Authorization Policy.
func (o AuthorizationPolicyV2Output) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// Description of the Authorization Policy.
func (o AuthorizationPolicyV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the Authorization Policy.
func (o AuthorizationPolicyV2Output) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The entities being qualified by the Authorization Policy.
func (o AuthorizationPolicyV2Output) Entities() AuthorizationPolicyV2EntityArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) AuthorizationPolicyV2EntityArrayOutput { return v.Entities }).(AuthorizationPolicyV2EntityArrayOutput)
}

// ext_id of Authorization policy.
func (o AuthorizationPolicyV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// The identities for which the Authorization Policy is created.
func (o AuthorizationPolicyV2Output) Identities() AuthorizationPolicyV2IdentityArrayOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) AuthorizationPolicyV2IdentityArrayOutput { return v.Identities }).(AuthorizationPolicyV2IdentityArrayOutput)
}

// Flag identifying if the Authorization Policy is system defined or not.
func (o AuthorizationPolicyV2Output) IsSystemDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.BoolOutput { return v.IsSystemDefined }).(pulumi.BoolOutput)
}

// The time when the Authorization Policy was last updated.
func (o AuthorizationPolicyV2Output) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// The Role associated with the Authorization Policy.
func (o AuthorizationPolicyV2Output) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationPolicyV2) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AuthorizationPolicyV2ArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizationPolicyV2)(nil)).Elem()
}

func (o AuthorizationPolicyV2ArrayOutput) ToAuthorizationPolicyV2ArrayOutput() AuthorizationPolicyV2ArrayOutput {
	return o
}

func (o AuthorizationPolicyV2ArrayOutput) ToAuthorizationPolicyV2ArrayOutputWithContext(ctx context.Context) AuthorizationPolicyV2ArrayOutput {
	return o
}

func (o AuthorizationPolicyV2ArrayOutput) Index(i pulumi.IntInput) AuthorizationPolicyV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizationPolicyV2 {
		return vs[0].([]*AuthorizationPolicyV2)[vs[1].(int)]
	}).(AuthorizationPolicyV2Output)
}

type AuthorizationPolicyV2MapOutput struct{ *pulumi.OutputState }

func (AuthorizationPolicyV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizationPolicyV2)(nil)).Elem()
}

func (o AuthorizationPolicyV2MapOutput) ToAuthorizationPolicyV2MapOutput() AuthorizationPolicyV2MapOutput {
	return o
}

func (o AuthorizationPolicyV2MapOutput) ToAuthorizationPolicyV2MapOutputWithContext(ctx context.Context) AuthorizationPolicyV2MapOutput {
	return o
}

func (o AuthorizationPolicyV2MapOutput) MapIndex(k pulumi.StringInput) AuthorizationPolicyV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizationPolicyV2 {
		return vs[0].(map[string]*AuthorizationPolicyV2)[vs[1].(string)]
	}).(AuthorizationPolicyV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyV2Input)(nil)).Elem(), &AuthorizationPolicyV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyV2ArrayInput)(nil)).Elem(), AuthorizationPolicyV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationPolicyV2MapInput)(nil)).Elem(), AuthorizationPolicyV2Map{})
	pulumi.RegisterOutputType(AuthorizationPolicyV2Output{})
	pulumi.RegisterOutputType(AuthorizationPolicyV2ArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPolicyV2MapOutput{})
}
