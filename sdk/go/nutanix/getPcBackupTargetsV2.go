// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists backup targets (cluster or object store) configured for a given domain manager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetPcBackupTargetsV2(ctx, &nutanix.GetPcBackupTargetsV2Args{
//				DomainManagerExtId: "75dde184-3a0e-4f59-a185-03ca1efead17",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Backup Targets
//
// The `backupTargets` argument supports the following:
//
// - `tenantId`: - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
// - `extId`: - A globally unique identifier of an instance that is suitable for external consumption.
// - `links`: - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
// - `location`: - Location of the backup target. For example, a cluster or an object store endpoint, such as AWS s3.
// - `lastSyncTime`: - Represents the time when the domain manager was last synchronized or copied its configuration data to the backup target. This field is updated every 30 minutes.
// - `isBackupPaused`: - Whether the backup is paused on the given cluster or not.
// - `backupPauseReason`: - Specifies a reason why the backup might have paused. This will be empty if the isBackupPaused field is false.
//
// ### Location
//
// The location argument exports the following:
//
// - `clusterLocation`: - A boolean value indicating whether to enable lockdown mode for a cluster.
// - `objectStoreLocation`: - Currently representing the build information to be used for the cluster creation.
//
// #### Cluster Location
//
// The `clusterLocation` argument exports the following:
//
// - `config`: - Cluster reference of the remote cluster to be connected.
//
// ##### Config
//
// The `config` argument exports the following:
//
// - `extId`: - Cluster UUID of a remote cluster.
// - `name`: - Name of the cluster.
//
// #### Object Store Location
//
// The `objectStoreLocation` argument exports the following:
//
// - `providerConfig`: -(Required) The base model of S3 object store endpoint where domain manager is backed up.
// - `backupPolicy`: -(Optional) Backup policy for the object store provided.
//
// ##### Provider Config
//
// The `providerConfig` argument exports the following:
//
// - `bucketName`: - The bucket name of the object store endpoint where backup data of domain manager is to be stored.
// - `region`: - The region name of the object store endpoint where backup data of domain manager is stored. Default is `us-east-1`.
// - `credentials`: - Secret credentials model for the object store containing access key ID and secret access key.
//
// ###### Credentials
//
// The `credentials` argument exports the following:
//
// - `accessKeyId`: - Access key ID for the object store provided for backup target.
// - `secretAccessKey`: - Secret access key for the object store provided for backup target.
//
// ##### Backup Policy
//
// The `backupPolicy` argument exports the following:
//
// - `rpoInMinutes`: - RPO interval in minutes at which the backup will be taken. The Value should be in the range of 60 to 1440.
//
// See detailed information in [Nutanix List Backup Targets ](https://developers.nutanix.com/api-reference?namespace=prism&version=v4.0#tag/DomainManager/operation/listBackupTargets).
func GetPcBackupTargetsV2(ctx *pulumi.Context, args *GetPcBackupTargetsV2Args, opts ...pulumi.InvokeOption) (*GetPcBackupTargetsV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPcBackupTargetsV2Result
	err := ctx.Invoke("nutanix:index/getPcBackupTargetsV2:getPcBackupTargetsV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPcBackupTargetsV2.
type GetPcBackupTargetsV2Args struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId string `pulumi:"domainManagerExtId"`
}

// A collection of values returned by getPcBackupTargetsV2.
type GetPcBackupTargetsV2Result struct {
	// - A list of backup target entities.
	BackupTargets      []GetPcBackupTargetsV2BackupTarget `pulumi:"backupTargets"`
	DomainManagerExtId string                             `pulumi:"domainManagerExtId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetPcBackupTargetsV2Output(ctx *pulumi.Context, args GetPcBackupTargetsV2OutputArgs, opts ...pulumi.InvokeOption) GetPcBackupTargetsV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPcBackupTargetsV2ResultOutput, error) {
			args := v.(GetPcBackupTargetsV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getPcBackupTargetsV2:getPcBackupTargetsV2", args, GetPcBackupTargetsV2ResultOutput{}, options).(GetPcBackupTargetsV2ResultOutput), nil
		}).(GetPcBackupTargetsV2ResultOutput)
}

// A collection of arguments for invoking getPcBackupTargetsV2.
type GetPcBackupTargetsV2OutputArgs struct {
	// -(Required) A unique identifier for the domain manager.
	DomainManagerExtId pulumi.StringInput `pulumi:"domainManagerExtId"`
}

func (GetPcBackupTargetsV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPcBackupTargetsV2Args)(nil)).Elem()
}

// A collection of values returned by getPcBackupTargetsV2.
type GetPcBackupTargetsV2ResultOutput struct{ *pulumi.OutputState }

func (GetPcBackupTargetsV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPcBackupTargetsV2Result)(nil)).Elem()
}

func (o GetPcBackupTargetsV2ResultOutput) ToGetPcBackupTargetsV2ResultOutput() GetPcBackupTargetsV2ResultOutput {
	return o
}

func (o GetPcBackupTargetsV2ResultOutput) ToGetPcBackupTargetsV2ResultOutputWithContext(ctx context.Context) GetPcBackupTargetsV2ResultOutput {
	return o
}

// - A list of backup target entities.
func (o GetPcBackupTargetsV2ResultOutput) BackupTargets() GetPcBackupTargetsV2BackupTargetArrayOutput {
	return o.ApplyT(func(v GetPcBackupTargetsV2Result) []GetPcBackupTargetsV2BackupTarget { return v.BackupTargets }).(GetPcBackupTargetsV2BackupTargetArrayOutput)
}

func (o GetPcBackupTargetsV2ResultOutput) DomainManagerExtId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcBackupTargetsV2Result) string { return v.DomainManagerExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPcBackupTargetsV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPcBackupTargetsV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPcBackupTargetsV2ResultOutput{})
}
