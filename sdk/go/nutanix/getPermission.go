// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describe a Nutanix Permission and its values (if it has them).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nutanix.GetPermission(ctx, &GetPermissionArgs{
// 			PermissionId: pulumi.StringRef("26b81a55-2bca-48c6-9fab-4f82c6bb4284"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = nutanix.GetPermission(ctx, &GetPermissionArgs{
// 			PermissionName: pulumi.StringRef("Access_Console_Virtual_Machine"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPermission(ctx *pulumi.Context, args *GetPermissionArgs, opts ...pulumi.InvokeOption) (*GetPermissionResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPermissionResult
	err := ctx.Invoke("nutanix:index/getPermission:getPermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermission.
type GetPermissionArgs struct {
	Categories     []GetPermissionCategory `pulumi:"categories"`
	PermissionId   *string                 `pulumi:"permissionId"`
	PermissionName *string                 `pulumi:"permissionName"`
}

// A collection of values returned by getPermission.
type GetPermissionResult struct {
	ApiVersion  string                  `pulumi:"apiVersion"`
	Categories  []GetPermissionCategory `pulumi:"categories"`
	Description string                  `pulumi:"description"`
	Fields      []GetPermissionField    `pulumi:"fields"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Required) The kind name (Default value: `project`).
	Kind     string            `pulumi:"kind"`
	Metadata map[string]string `pulumi:"metadata"`
	// the name.
	Name             string            `pulumi:"name"`
	Operation        string            `pulumi:"operation"`
	OwnerReference   map[string]string `pulumi:"ownerReference"`
	PermissionId     *string           `pulumi:"permissionId"`
	PermissionName   *string           `pulumi:"permissionName"`
	ProjectReference map[string]string `pulumi:"projectReference"`
	State            string            `pulumi:"state"`
}

func GetPermissionOutput(ctx *pulumi.Context, args GetPermissionOutputArgs, opts ...pulumi.InvokeOption) GetPermissionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionResult, error) {
			args := v.(GetPermissionArgs)
			r, err := GetPermission(ctx, &args, opts...)
			var s GetPermissionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionResultOutput)
}

// A collection of arguments for invoking getPermission.
type GetPermissionOutputArgs struct {
	Categories     GetPermissionCategoryArrayInput `pulumi:"categories"`
	PermissionId   pulumi.StringPtrInput           `pulumi:"permissionId"`
	PermissionName pulumi.StringPtrInput           `pulumi:"permissionName"`
}

func (GetPermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionArgs)(nil)).Elem()
}

// A collection of values returned by getPermission.
type GetPermissionResultOutput struct{ *pulumi.OutputState }

func (GetPermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionResult)(nil)).Elem()
}

func (o GetPermissionResultOutput) ToGetPermissionResultOutput() GetPermissionResultOutput {
	return o
}

func (o GetPermissionResultOutput) ToGetPermissionResultOutputWithContext(ctx context.Context) GetPermissionResultOutput {
	return o
}

func (o GetPermissionResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetPermissionResultOutput) Categories() GetPermissionCategoryArrayOutput {
	return o.ApplyT(func(v GetPermissionResult) []GetPermissionCategory { return v.Categories }).(GetPermissionCategoryArrayOutput)
}

func (o GetPermissionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPermissionResultOutput) Fields() GetPermissionFieldArrayOutput {
	return o.ApplyT(func(v GetPermissionResult) []GetPermissionField { return v.Fields }).(GetPermissionFieldArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required) The kind name (Default value: `project`).
func (o GetPermissionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetPermissionResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPermissionResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// the name.
func (o GetPermissionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPermissionResultOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetPermissionResultOutput) OwnerReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPermissionResult) map[string]string { return v.OwnerReference }).(pulumi.StringMapOutput)
}

func (o GetPermissionResultOutput) PermissionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionResult) *string { return v.PermissionId }).(pulumi.StringPtrOutput)
}

func (o GetPermissionResultOutput) PermissionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionResult) *string { return v.PermissionName }).(pulumi.StringPtrOutput)
}

func (o GetPermissionResultOutput) ProjectReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPermissionResult) map[string]string { return v.ProjectReference }).(pulumi.StringMapOutput)
}

func (o GetPermissionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionResultOutput{})
}
