// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of tags in Nutanix Database Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetNdbTags(ctx, &nutanix.GetNdbTagsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNdbTags(ctx *pulumi.Context, args *GetNdbTagsArgs, opts ...pulumi.InvokeOption) (*GetNdbTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNdbTagsResult
	err := ctx.Invoke("nutanix:index/getNdbTags:getNdbTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbTags.
type GetNdbTagsArgs struct {
	// entity for the tag to be associated with.
	EntityType *string `pulumi:"entityType"`
}

// A collection of values returned by getNdbTags.
type GetNdbTagsResult struct {
	// entity for the tag to be associated with.
	EntityType *string `pulumi:"entityType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of tags present in NDB.
	Tags []GetNdbTagsTag `pulumi:"tags"`
}

func GetNdbTagsOutput(ctx *pulumi.Context, args GetNdbTagsOutputArgs, opts ...pulumi.InvokeOption) GetNdbTagsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNdbTagsResultOutput, error) {
			args := v.(GetNdbTagsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getNdbTags:getNdbTags", args, GetNdbTagsResultOutput{}, options).(GetNdbTagsResultOutput), nil
		}).(GetNdbTagsResultOutput)
}

// A collection of arguments for invoking getNdbTags.
type GetNdbTagsOutputArgs struct {
	// entity for the tag to be associated with.
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
}

func (GetNdbTagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbTagsArgs)(nil)).Elem()
}

// A collection of values returned by getNdbTags.
type GetNdbTagsResultOutput struct{ *pulumi.OutputState }

func (GetNdbTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNdbTagsResult)(nil)).Elem()
}

func (o GetNdbTagsResultOutput) ToGetNdbTagsResultOutput() GetNdbTagsResultOutput {
	return o
}

func (o GetNdbTagsResultOutput) ToGetNdbTagsResultOutputWithContext(ctx context.Context) GetNdbTagsResultOutput {
	return o
}

// entity for the tag to be associated with.
func (o GetNdbTagsResultOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNdbTagsResult) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNdbTagsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNdbTagsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of tags present in NDB.
func (o GetNdbTagsResultOutput) Tags() GetNdbTagsTagArrayOutput {
	return o.ApplyT(func(v GetNdbTagsResult) []GetNdbTagsTag { return v.Tags }).(GetNdbTagsTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNdbTagsResultOutput{})
}
