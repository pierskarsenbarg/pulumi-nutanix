// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides Nutanix resource to Create a User.
//
// ## Import
//
// This helps to manage existing entities which are not created through terraform. Users can be imported using the `UUID`.  eg,
//
// hcl
//
// // create its configuration in the root module. For example:
//
// resource "nutanix_users_v2" "import_user" {}
//
// // execute this command
//
// ```sh
// $ pulumi import nutanix:index/usersV2:UsersV2 import_user <UUID>
// ```
//
// See detailed information in [Nutanix Users v4](https://developers.nutanix.com/api-reference?namespace=iam&version=v4.0#tag/Users/operation/createUser).
type UsersV2 struct {
	pulumi.CustomResourceState

	// -  Any additional attribute for the User.
	AdditionalAttributes UsersV2AdditionalAttributeArrayOutput `pulumi:"additionalAttributes"`
	// - Bucket Access Keys for the User.
	BucketsAccessKeys UsersV2BucketsAccessKeyArrayOutput `pulumi:"bucketsAccessKeys"`
	// - User or Service who created the User.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// - Creation time for the Bucket Access Key.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// - Display name for the User.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// - Email Id for the User.
	EmailId pulumi.StringOutput `pulumi:"emailId"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// - First name for the User.
	FirstName          pulumi.StringOutput `pulumi:"firstName"`
	ForceResetPassword pulumi.BoolOutput   `pulumi:"forceResetPassword"`
	// - Identifier of the IDP for the User.
	IdpId pulumi.StringOutput `pulumi:"idpId"`
	// - Last successful logged in time for the User.
	LastLoginTime pulumi.StringOutput `pulumi:"lastLoginTime"`
	// - Last name for the User.
	LastName pulumi.StringOutput `pulumi:"lastName"`
	// - Last updated time of the User.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links UsersV2LinkArrayOutput `pulumi:"links"`
	// - Default locale for the User.
	Locale pulumi.StringOutput `pulumi:"locale"`
	// - Middle name for the User.
	MiddleInitial pulumi.StringOutput `pulumi:"middleInitial"`
	Password      pulumi.StringOutput `pulumi:"password"`
	// - Default Region for the User.
	Region pulumi.StringOutput `pulumi:"region"`
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status pulumi.StringOutput `pulumi:"status"`
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType pulumi.StringOutput `pulumi:"userType"`
	// - Identifier for the User in the form an email address.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewUsersV2 registers a new resource with the given unique name, arguments, and options.
func NewUsersV2(ctx *pulumi.Context,
	name string, args *UsersV2Args, opts ...pulumi.ResourceOption) (*UsersV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserType == nil {
		return nil, errors.New("invalid value for required argument 'UserType'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UsersV2
	err := ctx.RegisterResource("nutanix:index/usersV2:UsersV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsersV2 gets an existing UsersV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsersV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UsersV2State, opts ...pulumi.ResourceOption) (*UsersV2, error) {
	var resource UsersV2
	err := ctx.ReadResource("nutanix:index/usersV2:UsersV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UsersV2 resources.
type usersV2State struct {
	// -  Any additional attribute for the User.
	AdditionalAttributes []UsersV2AdditionalAttribute `pulumi:"additionalAttributes"`
	// - Bucket Access Keys for the User.
	BucketsAccessKeys []UsersV2BucketsAccessKey `pulumi:"bucketsAccessKeys"`
	// - User or Service who created the User.
	CreatedBy *string `pulumi:"createdBy"`
	// - Creation time for the Bucket Access Key.
	CreatedTime *string `pulumi:"createdTime"`
	// - Display name for the User.
	DisplayName *string `pulumi:"displayName"`
	// - Email Id for the User.
	EmailId *string `pulumi:"emailId"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId *string `pulumi:"extId"`
	// - First name for the User.
	FirstName          *string `pulumi:"firstName"`
	ForceResetPassword *bool   `pulumi:"forceResetPassword"`
	// - Identifier of the IDP for the User.
	IdpId *string `pulumi:"idpId"`
	// - Last successful logged in time for the User.
	LastLoginTime *string `pulumi:"lastLoginTime"`
	// - Last name for the User.
	LastName *string `pulumi:"lastName"`
	// - Last updated time of the User.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []UsersV2Link `pulumi:"links"`
	// - Default locale for the User.
	Locale *string `pulumi:"locale"`
	// - Middle name for the User.
	MiddleInitial *string `pulumi:"middleInitial"`
	Password      *string `pulumi:"password"`
	// - Default Region for the User.
	Region *string `pulumi:"region"`
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status *string `pulumi:"status"`
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType *string `pulumi:"userType"`
	// - Identifier for the User in the form an email address.
	Username *string `pulumi:"username"`
}

type UsersV2State struct {
	// -  Any additional attribute for the User.
	AdditionalAttributes UsersV2AdditionalAttributeArrayInput
	// - Bucket Access Keys for the User.
	BucketsAccessKeys UsersV2BucketsAccessKeyArrayInput
	// - User or Service who created the User.
	CreatedBy pulumi.StringPtrInput
	// - Creation time for the Bucket Access Key.
	CreatedTime pulumi.StringPtrInput
	// - Display name for the User.
	DisplayName pulumi.StringPtrInput
	// - Email Id for the User.
	EmailId pulumi.StringPtrInput
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId pulumi.StringPtrInput
	// - First name for the User.
	FirstName          pulumi.StringPtrInput
	ForceResetPassword pulumi.BoolPtrInput
	// - Identifier of the IDP for the User.
	IdpId pulumi.StringPtrInput
	// - Last successful logged in time for the User.
	LastLoginTime pulumi.StringPtrInput
	// - Last name for the User.
	LastName pulumi.StringPtrInput
	// - Last updated time of the User.
	LastUpdatedTime pulumi.StringPtrInput
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links UsersV2LinkArrayInput
	// - Default locale for the User.
	Locale pulumi.StringPtrInput
	// - Middle name for the User.
	MiddleInitial pulumi.StringPtrInput
	Password      pulumi.StringPtrInput
	// - Default Region for the User.
	Region pulumi.StringPtrInput
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status pulumi.StringPtrInput
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType pulumi.StringPtrInput
	// - Identifier for the User in the form an email address.
	Username pulumi.StringPtrInput
}

func (UsersV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*usersV2State)(nil)).Elem()
}

type usersV2Args struct {
	// -  Any additional attribute for the User.
	AdditionalAttributes []UsersV2AdditionalAttribute `pulumi:"additionalAttributes"`
	// - Display name for the User.
	DisplayName *string `pulumi:"displayName"`
	// - Email Id for the User.
	EmailId *string `pulumi:"emailId"`
	// - First name for the User.
	FirstName          *string `pulumi:"firstName"`
	ForceResetPassword *bool   `pulumi:"forceResetPassword"`
	// - Identifier of the IDP for the User.
	IdpId *string `pulumi:"idpId"`
	// - Last name for the User.
	LastName *string `pulumi:"lastName"`
	// - Default locale for the User.
	Locale *string `pulumi:"locale"`
	// - Middle name for the User.
	MiddleInitial *string `pulumi:"middleInitial"`
	Password      *string `pulumi:"password"`
	// - Default Region for the User.
	Region *string `pulumi:"region"`
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status *string `pulumi:"status"`
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType string `pulumi:"userType"`
	// - Identifier for the User in the form an email address.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a UsersV2 resource.
type UsersV2Args struct {
	// -  Any additional attribute for the User.
	AdditionalAttributes UsersV2AdditionalAttributeArrayInput
	// - Display name for the User.
	DisplayName pulumi.StringPtrInput
	// - Email Id for the User.
	EmailId pulumi.StringPtrInput
	// - First name for the User.
	FirstName          pulumi.StringPtrInput
	ForceResetPassword pulumi.BoolPtrInput
	// - Identifier of the IDP for the User.
	IdpId pulumi.StringPtrInput
	// - Last name for the User.
	LastName pulumi.StringPtrInput
	// - Default locale for the User.
	Locale pulumi.StringPtrInput
	// - Middle name for the User.
	MiddleInitial pulumi.StringPtrInput
	Password      pulumi.StringPtrInput
	// - Default Region for the User.
	Region pulumi.StringPtrInput
	// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
	Status pulumi.StringPtrInput
	// - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
	//   Type of the User.
	UserType pulumi.StringInput
	// - Identifier for the User in the form an email address.
	Username pulumi.StringInput
}

func (UsersV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*usersV2Args)(nil)).Elem()
}

type UsersV2Input interface {
	pulumi.Input

	ToUsersV2Output() UsersV2Output
	ToUsersV2OutputWithContext(ctx context.Context) UsersV2Output
}

func (*UsersV2) ElementType() reflect.Type {
	return reflect.TypeOf((**UsersV2)(nil)).Elem()
}

func (i *UsersV2) ToUsersV2Output() UsersV2Output {
	return i.ToUsersV2OutputWithContext(context.Background())
}

func (i *UsersV2) ToUsersV2OutputWithContext(ctx context.Context) UsersV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(UsersV2Output)
}

// UsersV2ArrayInput is an input type that accepts UsersV2Array and UsersV2ArrayOutput values.
// You can construct a concrete instance of `UsersV2ArrayInput` via:
//
//	UsersV2Array{ UsersV2Args{...} }
type UsersV2ArrayInput interface {
	pulumi.Input

	ToUsersV2ArrayOutput() UsersV2ArrayOutput
	ToUsersV2ArrayOutputWithContext(context.Context) UsersV2ArrayOutput
}

type UsersV2Array []UsersV2Input

func (UsersV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UsersV2)(nil)).Elem()
}

func (i UsersV2Array) ToUsersV2ArrayOutput() UsersV2ArrayOutput {
	return i.ToUsersV2ArrayOutputWithContext(context.Background())
}

func (i UsersV2Array) ToUsersV2ArrayOutputWithContext(ctx context.Context) UsersV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersV2ArrayOutput)
}

// UsersV2MapInput is an input type that accepts UsersV2Map and UsersV2MapOutput values.
// You can construct a concrete instance of `UsersV2MapInput` via:
//
//	UsersV2Map{ "key": UsersV2Args{...} }
type UsersV2MapInput interface {
	pulumi.Input

	ToUsersV2MapOutput() UsersV2MapOutput
	ToUsersV2MapOutputWithContext(context.Context) UsersV2MapOutput
}

type UsersV2Map map[string]UsersV2Input

func (UsersV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UsersV2)(nil)).Elem()
}

func (i UsersV2Map) ToUsersV2MapOutput() UsersV2MapOutput {
	return i.ToUsersV2MapOutputWithContext(context.Background())
}

func (i UsersV2Map) ToUsersV2MapOutputWithContext(ctx context.Context) UsersV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsersV2MapOutput)
}

type UsersV2Output struct{ *pulumi.OutputState }

func (UsersV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**UsersV2)(nil)).Elem()
}

func (o UsersV2Output) ToUsersV2Output() UsersV2Output {
	return o
}

func (o UsersV2Output) ToUsersV2OutputWithContext(ctx context.Context) UsersV2Output {
	return o
}

// -  Any additional attribute for the User.
func (o UsersV2Output) AdditionalAttributes() UsersV2AdditionalAttributeArrayOutput {
	return o.ApplyT(func(v *UsersV2) UsersV2AdditionalAttributeArrayOutput { return v.AdditionalAttributes }).(UsersV2AdditionalAttributeArrayOutput)
}

// - Bucket Access Keys for the User.
func (o UsersV2Output) BucketsAccessKeys() UsersV2BucketsAccessKeyArrayOutput {
	return o.ApplyT(func(v *UsersV2) UsersV2BucketsAccessKeyArrayOutput { return v.BucketsAccessKeys }).(UsersV2BucketsAccessKeyArrayOutput)
}

// - User or Service who created the User.
func (o UsersV2Output) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// - Creation time for the Bucket Access Key.
func (o UsersV2Output) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// - Display name for the User.
func (o UsersV2Output) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// - Email Id for the User.
func (o UsersV2Output) EmailId() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.EmailId }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o UsersV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// - First name for the User.
func (o UsersV2Output) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.FirstName }).(pulumi.StringOutput)
}

func (o UsersV2Output) ForceResetPassword() pulumi.BoolOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.BoolOutput { return v.ForceResetPassword }).(pulumi.BoolOutput)
}

// - Identifier of the IDP for the User.
func (o UsersV2Output) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.IdpId }).(pulumi.StringOutput)
}

// - Last successful logged in time for the User.
func (o UsersV2Output) LastLoginTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.LastLoginTime }).(pulumi.StringOutput)
}

// - Last name for the User.
func (o UsersV2Output) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.LastName }).(pulumi.StringOutput)
}

// - Last updated time of the User.
func (o UsersV2Output) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o UsersV2Output) Links() UsersV2LinkArrayOutput {
	return o.ApplyT(func(v *UsersV2) UsersV2LinkArrayOutput { return v.Links }).(UsersV2LinkArrayOutput)
}

// - Default locale for the User.
func (o UsersV2Output) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.Locale }).(pulumi.StringOutput)
}

// - Middle name for the User.
func (o UsersV2Output) MiddleInitial() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.MiddleInitial }).(pulumi.StringOutput)
}

func (o UsersV2Output) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// - Default Region for the User.
func (o UsersV2Output) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// - Status of the User. `ACTIVE`: Denotes that the local User is active. `INACTIVE`: Denotes that the local User is inactive and needs to be reactivated.
func (o UsersV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

//   - Enum: `$UNKNOWN` `$REDACTED` `LOCAL` `SAML` `LDAP` `EXTERNAL`
//     Type of the User.
func (o UsersV2Output) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.UserType }).(pulumi.StringOutput)
}

// - Identifier for the User in the form an email address.
func (o UsersV2Output) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *UsersV2) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type UsersV2ArrayOutput struct{ *pulumi.OutputState }

func (UsersV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UsersV2)(nil)).Elem()
}

func (o UsersV2ArrayOutput) ToUsersV2ArrayOutput() UsersV2ArrayOutput {
	return o
}

func (o UsersV2ArrayOutput) ToUsersV2ArrayOutputWithContext(ctx context.Context) UsersV2ArrayOutput {
	return o
}

func (o UsersV2ArrayOutput) Index(i pulumi.IntInput) UsersV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UsersV2 {
		return vs[0].([]*UsersV2)[vs[1].(int)]
	}).(UsersV2Output)
}

type UsersV2MapOutput struct{ *pulumi.OutputState }

func (UsersV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UsersV2)(nil)).Elem()
}

func (o UsersV2MapOutput) ToUsersV2MapOutput() UsersV2MapOutput {
	return o
}

func (o UsersV2MapOutput) ToUsersV2MapOutputWithContext(ctx context.Context) UsersV2MapOutput {
	return o
}

func (o UsersV2MapOutput) MapIndex(k pulumi.StringInput) UsersV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UsersV2 {
		return vs[0].(map[string]*UsersV2)[vs[1].(string)]
	}).(UsersV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UsersV2Input)(nil)).Elem(), &UsersV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersV2ArrayInput)(nil)).Elem(), UsersV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsersV2MapInput)(nil)).Elem(), UsersV2Map{})
	pulumi.RegisterOutputType(UsersV2Output{})
	pulumi.RegisterOutputType(UsersV2ArrayOutput{})
	pulumi.RegisterOutputType(UsersV2MapOutput{})
}
