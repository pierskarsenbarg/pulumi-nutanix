// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an Object store for the provided UUID
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupObjectStoreV2(ctx, &nutanix.LookupObjectStoreV2Args{
//				ExtId: "95eb5f66-f547-4aea-9af8-b580e2060693",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupObjectStoreV2(ctx *pulumi.Context, args *LookupObjectStoreV2Args, opts ...pulumi.InvokeOption) (*LookupObjectStoreV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupObjectStoreV2Result
	err := ctx.Invoke("nutanix:index/getObjectStoreV2:getObjectStoreV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjectStoreV2.
type LookupObjectStoreV2Args struct {
	// -(Required) The UUID of the Object store.
	ExtId string `pulumi:"extId"`
	// - The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes *int `pulumi:"numWorkerNodes"`
}

// A collection of values returned by getObjectStoreV2.
type LookupObjectStoreV2Result struct {
	// - A list of the UUIDs of the certificates of an Object store.
	CertificateExtIds []string `pulumi:"certificateExtIds"`
	// - UUID of the AHV or ESXi cluster.
	ClusterExtId string `pulumi:"clusterExtId"`
	// - The time when the Object store was created.
	CreationTime string `pulumi:"creationTime"`
	// - The deployment version of the Object store.
	DeploymentVersion string `pulumi:"deploymentVersion"`
	// - A brief description of the Object store.
	Description string `pulumi:"description"`
	// - The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
	Domain string `pulumi:"domain"`
	// - A globally unique identifier of an instance that is suitable for external consumption.
	ExtId string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - The time when the Object store was last updated.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetObjectStoreV2Link `pulumi:"links"`
	// - Metadata associated with this resource.
	Metadatas []GetObjectStoreV2Metadata `pulumi:"metadatas"`
	// - The name of the Object store.
	Name string `pulumi:"name"`
	// - The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes int `pulumi:"numWorkerNodes"`
	// - A list of static IP addresses used as public IPs to access the Object store.
	PublicNetworkIps []GetObjectStoreV2PublicNetworkIp `pulumi:"publicNetworkIps"`
	// - Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	PublicNetworkReference string `pulumi:"publicNetworkReference"`
	// - The region in which the Object store is deployed.
	Region string `pulumi:"region"`
	// - Enum for the state of the Object store.
	//   | Enum                                   | Description                                                     |
	//   |----------------------------------------|-----------------------------------------------------------------|
	//   | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
	//   | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
	//   | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
	//   | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
	//   | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
	//   | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
	//   | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
	//   | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
	//   | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
	//   | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
	State string `pulumi:"state"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkDnsIps []GetObjectStoreV2StorageNetworkDnsIp `pulumi:"storageNetworkDnsIps"`
	// - Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
	StorageNetworkReference string `pulumi:"storageNetworkReference"`
	// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
	StorageNetworkVips []GetObjectStoreV2StorageNetworkVip `pulumi:"storageNetworkVips"`
	// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
	TenantId string `pulumi:"tenantId"`
	// - Size of the Object store in GiB.
	TotalCapacityGib int `pulumi:"totalCapacityGib"`
}

func LookupObjectStoreV2Output(ctx *pulumi.Context, args LookupObjectStoreV2OutputArgs, opts ...pulumi.InvokeOption) LookupObjectStoreV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupObjectStoreV2ResultOutput, error) {
			args := v.(LookupObjectStoreV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getObjectStoreV2:getObjectStoreV2", args, LookupObjectStoreV2ResultOutput{}, options).(LookupObjectStoreV2ResultOutput), nil
		}).(LookupObjectStoreV2ResultOutput)
}

// A collection of arguments for invoking getObjectStoreV2.
type LookupObjectStoreV2OutputArgs struct {
	// -(Required) The UUID of the Object store.
	ExtId pulumi.StringInput `pulumi:"extId"`
	// - The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
	NumWorkerNodes pulumi.IntPtrInput `pulumi:"numWorkerNodes"`
}

func (LookupObjectStoreV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectStoreV2Args)(nil)).Elem()
}

// A collection of values returned by getObjectStoreV2.
type LookupObjectStoreV2ResultOutput struct{ *pulumi.OutputState }

func (LookupObjectStoreV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectStoreV2Result)(nil)).Elem()
}

func (o LookupObjectStoreV2ResultOutput) ToLookupObjectStoreV2ResultOutput() LookupObjectStoreV2ResultOutput {
	return o
}

func (o LookupObjectStoreV2ResultOutput) ToLookupObjectStoreV2ResultOutputWithContext(ctx context.Context) LookupObjectStoreV2ResultOutput {
	return o
}

// - A list of the UUIDs of the certificates of an Object store.
func (o LookupObjectStoreV2ResultOutput) CertificateExtIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []string { return v.CertificateExtIds }).(pulumi.StringArrayOutput)
}

// - UUID of the AHV or ESXi cluster.
func (o LookupObjectStoreV2ResultOutput) ClusterExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.ClusterExtId }).(pulumi.StringOutput)
}

// - The time when the Object store was created.
func (o LookupObjectStoreV2ResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.CreationTime }).(pulumi.StringOutput)
}

// - The deployment version of the Object store.
func (o LookupObjectStoreV2ResultOutput) DeploymentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.DeploymentVersion }).(pulumi.StringOutput)
}

// - A brief description of the Object store.
func (o LookupObjectStoreV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.Description }).(pulumi.StringOutput)
}

// - The DNS domain/subdomain the Object store belongs to. All the Object stores under one Prism Central must have the same domain name. The domain name must consist of at least 2 parts separated by a '.'. Each part can contain upper and lower case letters, digits, hyphens, or underscores. Each part can be up to 63 characters long. The domain must begin and end with an alphanumeric character. For example - 'objects-0.pc_nutanix.com'.
func (o LookupObjectStoreV2ResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.Domain }).(pulumi.StringOutput)
}

// - A globally unique identifier of an instance that is suitable for external consumption.
func (o LookupObjectStoreV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupObjectStoreV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// - The time when the Object store was last updated.
func (o LookupObjectStoreV2ResultOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// - A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupObjectStoreV2ResultOutput) Links() GetObjectStoreV2LinkArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []GetObjectStoreV2Link { return v.Links }).(GetObjectStoreV2LinkArrayOutput)
}

// - Metadata associated with this resource.
func (o LookupObjectStoreV2ResultOutput) Metadatas() GetObjectStoreV2MetadataArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []GetObjectStoreV2Metadata { return v.Metadatas }).(GetObjectStoreV2MetadataArrayOutput)
}

// - The name of the Object store.
func (o LookupObjectStoreV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// - The number of worker nodes (VMs) to be created for the Object store. Each worker node requires 10 vCPUs and 32 GiB of memory.
func (o LookupObjectStoreV2ResultOutput) NumWorkerNodes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) int { return v.NumWorkerNodes }).(pulumi.IntOutput)
}

// - A list of static IP addresses used as public IPs to access the Object store.
func (o LookupObjectStoreV2ResultOutput) PublicNetworkIps() GetObjectStoreV2PublicNetworkIpArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []GetObjectStoreV2PublicNetworkIp { return v.PublicNetworkIps }).(GetObjectStoreV2PublicNetworkIpArrayOutput)
}

// - Public network reference of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
func (o LookupObjectStoreV2ResultOutput) PublicNetworkReference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.PublicNetworkReference }).(pulumi.StringOutput)
}

// - The region in which the Object store is deployed.
func (o LookupObjectStoreV2ResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.Region }).(pulumi.StringOutput)
}

//   - Enum for the state of the Object store.
//     | Enum                                   | Description                                                     |
//     |----------------------------------------|-----------------------------------------------------------------|
//     | `DEPLOYING_OBJECT_STORE`             | The Object store is being deployed.                             |
//     | `OBJECT_STORE_DEPLOYMENT_FAILED`     | The Object store deployment has failed.                         |
//     | `DELETING_OBJECT_STORE`              | A deployed Object store is being deleted.                       |
//     | `OBJECT_STORE_OPERATION_FAILED`      | There was an error while performing an operation on the Object store. |
//     | `UNDEPLOYED_OBJECT_STORE`            | The Object store is not deployed.                               |
//     | `OBJECT_STORE_OPERATION_PENDING`     | There is an ongoing operation on the Object store.              |
//     | `OBJECT_STORE_AVAILABLE`            | There are no ongoing operations on the deployed Object store.   |
//     | `OBJECT_STORE_CERT_CREATION_FAILED`  | Creating the Object store certificate has failed.               |
//     | `CREATING_OBJECT_STORE_CERT`         | A certificate is being created for the Object store.            |
//     | `OBJECT_STORE_DELETION_FAILED`       | There was an error deleting the Object store.                   |
func (o LookupObjectStoreV2ResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.State }).(pulumi.StringOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
func (o LookupObjectStoreV2ResultOutput) StorageNetworkDnsIps() GetObjectStoreV2StorageNetworkDnsIpArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []GetObjectStoreV2StorageNetworkDnsIp { return v.StorageNetworkDnsIps }).(GetObjectStoreV2StorageNetworkDnsIpArrayOutput)
}

// - Reference to the Storage Network of the Object store. This is the subnet UUID for an AHV cluster or the IPAM name for an ESXi cluster.
func (o LookupObjectStoreV2ResultOutput) StorageNetworkReference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.StorageNetworkReference }).(pulumi.StringOutput)
}

// - An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
func (o LookupObjectStoreV2ResultOutput) StorageNetworkVips() GetObjectStoreV2StorageNetworkVipArrayOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) []GetObjectStoreV2StorageNetworkVip { return v.StorageNetworkVips }).(GetObjectStoreV2StorageNetworkVipArrayOutput)
}

// - A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
func (o LookupObjectStoreV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

// - Size of the Object store in GiB.
func (o LookupObjectStoreV2ResultOutput) TotalCapacityGib() pulumi.IntOutput {
	return o.ApplyT(func(v LookupObjectStoreV2Result) int { return v.TotalCapacityGib }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupObjectStoreV2ResultOutput{})
}
