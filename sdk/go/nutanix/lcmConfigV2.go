// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Update LCM configuration.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Enable Auto Inventory, Add Auto Inventory Schedule and enable auto upgrade
//			_, err := nutanix.NewLcmConfigV2(ctx, "lcm-configuration-update", &nutanix.LcmConfigV2Args{
//				AutoInventorySchedule:       pulumi.String("16:30"),
//				HasModuleAutoUpgradeEnabled: pulumi.Bool(true),
//				IsAutoInventoryEnabled:      pulumi.Bool(true),
//				XClusterId:                  pulumi.String("0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b"),
//			})
//			if err != nil {
//				return err
//			}
//			// Update the LCM url to darksite server
//			_, err = nutanix.NewLcmConfigV2(ctx, "lcm-configuration-update-connectivity-type", &nutanix.LcmConfigV2Args{
//				ConnectivityType: pulumi.String("DARKSITE_WEB_SERVER"),
//				Url:              pulumi.String("https://x.x.x.x:8000/builds"),
//				XClusterId:       pulumi.String("0005a104-0b0b-4b0b-8005-0b0b0b0b0b0b"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type LcmConfigV2 struct {
	pulumi.CustomResourceState

	// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
	AutoInventorySchedule pulumi.StringPtrOutput `pulumi:"autoInventorySchedule"`
	// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
	ConnectivityType pulumi.StringPtrOutput `pulumi:"connectivityType"`
	ExtId            pulumi.StringOutput    `pulumi:"extId"`
	// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
	//
	// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
	HasModuleAutoUpgradeEnabled pulumi.BoolPtrOutput `pulumi:"hasModuleAutoUpgradeEnabled"`
	// Indicates if the auto inventory operation is enabled. The default value is set to False.
	IsAutoInventoryEnabled pulumi.BoolPtrOutput `pulumi:"isAutoInventoryEnabled"`
	// Indicates if the LCM URL has HTTPS enabled. The default value is True.
	IsHttpsEnabled pulumi.BoolPtrOutput `pulumi:"isHttpsEnabled"`
	// URL of the LCM repository.
	Url pulumi.StringPtrOutput `pulumi:"url"`
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId pulumi.StringPtrOutput `pulumi:"xClusterId"`
}

// NewLcmConfigV2 registers a new resource with the given unique name, arguments, and options.
func NewLcmConfigV2(ctx *pulumi.Context,
	name string, args *LcmConfigV2Args, opts ...pulumi.ResourceOption) (*LcmConfigV2, error) {
	if args == nil {
		args = &LcmConfigV2Args{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LcmConfigV2
	err := ctx.RegisterResource("nutanix:index/lcmConfigV2:LcmConfigV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLcmConfigV2 gets an existing LcmConfigV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLcmConfigV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LcmConfigV2State, opts ...pulumi.ResourceOption) (*LcmConfigV2, error) {
	var resource LcmConfigV2
	err := ctx.ReadResource("nutanix:index/lcmConfigV2:LcmConfigV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LcmConfigV2 resources.
type lcmConfigV2State struct {
	// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
	AutoInventorySchedule *string `pulumi:"autoInventorySchedule"`
	// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
	ConnectivityType *string `pulumi:"connectivityType"`
	ExtId            *string `pulumi:"extId"`
	// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
	//
	// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
	HasModuleAutoUpgradeEnabled *bool `pulumi:"hasModuleAutoUpgradeEnabled"`
	// Indicates if the auto inventory operation is enabled. The default value is set to False.
	IsAutoInventoryEnabled *bool `pulumi:"isAutoInventoryEnabled"`
	// Indicates if the LCM URL has HTTPS enabled. The default value is True.
	IsHttpsEnabled *bool `pulumi:"isHttpsEnabled"`
	// URL of the LCM repository.
	Url *string `pulumi:"url"`
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId *string `pulumi:"xClusterId"`
}

type LcmConfigV2State struct {
	// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
	AutoInventorySchedule pulumi.StringPtrInput
	// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
	ConnectivityType pulumi.StringPtrInput
	ExtId            pulumi.StringPtrInput
	// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
	//
	// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
	HasModuleAutoUpgradeEnabled pulumi.BoolPtrInput
	// Indicates if the auto inventory operation is enabled. The default value is set to False.
	IsAutoInventoryEnabled pulumi.BoolPtrInput
	// Indicates if the LCM URL has HTTPS enabled. The default value is True.
	IsHttpsEnabled pulumi.BoolPtrInput
	// URL of the LCM repository.
	Url pulumi.StringPtrInput
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId pulumi.StringPtrInput
}

func (LcmConfigV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*lcmConfigV2State)(nil)).Elem()
}

type lcmConfigV2Args struct {
	// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
	AutoInventorySchedule *string `pulumi:"autoInventorySchedule"`
	// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
	ConnectivityType *string `pulumi:"connectivityType"`
	// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
	//
	// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
	HasModuleAutoUpgradeEnabled *bool `pulumi:"hasModuleAutoUpgradeEnabled"`
	// Indicates if the auto inventory operation is enabled. The default value is set to False.
	IsAutoInventoryEnabled *bool `pulumi:"isAutoInventoryEnabled"`
	// Indicates if the LCM URL has HTTPS enabled. The default value is True.
	IsHttpsEnabled *bool `pulumi:"isHttpsEnabled"`
	// URL of the LCM repository.
	Url *string `pulumi:"url"`
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId *string `pulumi:"xClusterId"`
}

// The set of arguments for constructing a LcmConfigV2 resource.
type LcmConfigV2Args struct {
	// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
	AutoInventorySchedule pulumi.StringPtrInput
	// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
	ConnectivityType pulumi.StringPtrInput
	// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
	//
	// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
	HasModuleAutoUpgradeEnabled pulumi.BoolPtrInput
	// Indicates if the auto inventory operation is enabled. The default value is set to False.
	IsAutoInventoryEnabled pulumi.BoolPtrInput
	// Indicates if the LCM URL has HTTPS enabled. The default value is True.
	IsHttpsEnabled pulumi.BoolPtrInput
	// URL of the LCM repository.
	Url pulumi.StringPtrInput
	// Cluster uuid on which the resource is present or operation is being performed.
	XClusterId pulumi.StringPtrInput
}

func (LcmConfigV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*lcmConfigV2Args)(nil)).Elem()
}

type LcmConfigV2Input interface {
	pulumi.Input

	ToLcmConfigV2Output() LcmConfigV2Output
	ToLcmConfigV2OutputWithContext(ctx context.Context) LcmConfigV2Output
}

func (*LcmConfigV2) ElementType() reflect.Type {
	return reflect.TypeOf((**LcmConfigV2)(nil)).Elem()
}

func (i *LcmConfigV2) ToLcmConfigV2Output() LcmConfigV2Output {
	return i.ToLcmConfigV2OutputWithContext(context.Background())
}

func (i *LcmConfigV2) ToLcmConfigV2OutputWithContext(ctx context.Context) LcmConfigV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(LcmConfigV2Output)
}

// LcmConfigV2ArrayInput is an input type that accepts LcmConfigV2Array and LcmConfigV2ArrayOutput values.
// You can construct a concrete instance of `LcmConfigV2ArrayInput` via:
//
//	LcmConfigV2Array{ LcmConfigV2Args{...} }
type LcmConfigV2ArrayInput interface {
	pulumi.Input

	ToLcmConfigV2ArrayOutput() LcmConfigV2ArrayOutput
	ToLcmConfigV2ArrayOutputWithContext(context.Context) LcmConfigV2ArrayOutput
}

type LcmConfigV2Array []LcmConfigV2Input

func (LcmConfigV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LcmConfigV2)(nil)).Elem()
}

func (i LcmConfigV2Array) ToLcmConfigV2ArrayOutput() LcmConfigV2ArrayOutput {
	return i.ToLcmConfigV2ArrayOutputWithContext(context.Background())
}

func (i LcmConfigV2Array) ToLcmConfigV2ArrayOutputWithContext(ctx context.Context) LcmConfigV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LcmConfigV2ArrayOutput)
}

// LcmConfigV2MapInput is an input type that accepts LcmConfigV2Map and LcmConfigV2MapOutput values.
// You can construct a concrete instance of `LcmConfigV2MapInput` via:
//
//	LcmConfigV2Map{ "key": LcmConfigV2Args{...} }
type LcmConfigV2MapInput interface {
	pulumi.Input

	ToLcmConfigV2MapOutput() LcmConfigV2MapOutput
	ToLcmConfigV2MapOutputWithContext(context.Context) LcmConfigV2MapOutput
}

type LcmConfigV2Map map[string]LcmConfigV2Input

func (LcmConfigV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LcmConfigV2)(nil)).Elem()
}

func (i LcmConfigV2Map) ToLcmConfigV2MapOutput() LcmConfigV2MapOutput {
	return i.ToLcmConfigV2MapOutputWithContext(context.Background())
}

func (i LcmConfigV2Map) ToLcmConfigV2MapOutputWithContext(ctx context.Context) LcmConfigV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LcmConfigV2MapOutput)
}

type LcmConfigV2Output struct{ *pulumi.OutputState }

func (LcmConfigV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**LcmConfigV2)(nil)).Elem()
}

func (o LcmConfigV2Output) ToLcmConfigV2Output() LcmConfigV2Output {
	return o
}

func (o LcmConfigV2Output) ToLcmConfigV2OutputWithContext(ctx context.Context) LcmConfigV2Output {
	return o
}

// The scheduled time in "%H:%M" 24-hour format of the next inventory execution. Used when autoInventoryEnabled is set to True. The default schedule time is 03:00(AM).
func (o LcmConfigV2Output) AutoInventorySchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.StringPtrOutput { return v.AutoInventorySchedule }).(pulumi.StringPtrOutput)
}

// This field indicates whether LCM framework on the cluster is running in connected-site mode or darksite mode.
func (o LcmConfigV2Output) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.StringPtrOutput { return v.ConnectivityType }).(pulumi.StringPtrOutput)
}

func (o LcmConfigV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// Indicates if LCM is enabled to auto-upgrade products. The default value is False.
//
// See detailed information in [Nutanix Update LCM Config V4](https://developers.nutanix.com/api-reference?namespace=lifecycle&version=v4.0#tag/Config/operation/updateConfig)
func (o LcmConfigV2Output) HasModuleAutoUpgradeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.BoolPtrOutput { return v.HasModuleAutoUpgradeEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates if the auto inventory operation is enabled. The default value is set to False.
func (o LcmConfigV2Output) IsAutoInventoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.BoolPtrOutput { return v.IsAutoInventoryEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates if the LCM URL has HTTPS enabled. The default value is True.
func (o LcmConfigV2Output) IsHttpsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.BoolPtrOutput { return v.IsHttpsEnabled }).(pulumi.BoolPtrOutput)
}

// URL of the LCM repository.
func (o LcmConfigV2Output) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.StringPtrOutput { return v.Url }).(pulumi.StringPtrOutput)
}

// Cluster uuid on which the resource is present or operation is being performed.
func (o LcmConfigV2Output) XClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LcmConfigV2) pulumi.StringPtrOutput { return v.XClusterId }).(pulumi.StringPtrOutput)
}

type LcmConfigV2ArrayOutput struct{ *pulumi.OutputState }

func (LcmConfigV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LcmConfigV2)(nil)).Elem()
}

func (o LcmConfigV2ArrayOutput) ToLcmConfigV2ArrayOutput() LcmConfigV2ArrayOutput {
	return o
}

func (o LcmConfigV2ArrayOutput) ToLcmConfigV2ArrayOutputWithContext(ctx context.Context) LcmConfigV2ArrayOutput {
	return o
}

func (o LcmConfigV2ArrayOutput) Index(i pulumi.IntInput) LcmConfigV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LcmConfigV2 {
		return vs[0].([]*LcmConfigV2)[vs[1].(int)]
	}).(LcmConfigV2Output)
}

type LcmConfigV2MapOutput struct{ *pulumi.OutputState }

func (LcmConfigV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LcmConfigV2)(nil)).Elem()
}

func (o LcmConfigV2MapOutput) ToLcmConfigV2MapOutput() LcmConfigV2MapOutput {
	return o
}

func (o LcmConfigV2MapOutput) ToLcmConfigV2MapOutputWithContext(ctx context.Context) LcmConfigV2MapOutput {
	return o
}

func (o LcmConfigV2MapOutput) MapIndex(k pulumi.StringInput) LcmConfigV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LcmConfigV2 {
		return vs[0].(map[string]*LcmConfigV2)[vs[1].(string)]
	}).(LcmConfigV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LcmConfigV2Input)(nil)).Elem(), &LcmConfigV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*LcmConfigV2ArrayInput)(nil)).Elem(), LcmConfigV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*LcmConfigV2MapInput)(nil)).Elem(), LcmConfigV2Map{})
	pulumi.RegisterOutputType(LcmConfigV2Output{})
	pulumi.RegisterOutputType(LcmConfigV2ArrayOutput{})
	pulumi.RegisterOutputType(LcmConfigV2MapOutput{})
}
