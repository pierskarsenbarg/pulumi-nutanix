// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a single Routing Policy corresponding to the extId.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupPbrV2(ctx, &nutanix.LookupPbrV2Args{
//				ExtId: "96a22c81-ed58-4bed-96bc-46b488626612",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPbrV2(ctx *pulumi.Context, args *LookupPbrV2Args, opts ...pulumi.InvokeOption) (*LookupPbrV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPbrV2Result
	err := ctx.Invoke("nutanix:index/getPbrV2:getPbrV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPbrV2.
type LookupPbrV2Args struct {
	// pbr UUID
	ExtId string `pulumi:"extId"`
}

// A collection of values returned by getPbrV2.
type LookupPbrV2Result struct {
	// A description of the routing policy.
	Description string `pulumi:"description"`
	ExtId       string `pulumi:"extId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
	Links []GetPbrV2Link `pulumi:"links"`
	// Metadata associated with this resource.
	Metadatas []GetPbrV2Metadata `pulumi:"metadatas"`
	// Name of the routing policy.
	Name string `pulumi:"name"`
	// Routing Policies
	Policies []GetPbrV2Policy `pulumi:"policies"`
	// Priority of the routing policy.
	Priority int `pulumi:"priority"`
	// A globally unique identifier that represents the tenant that owns this entity
	TenantId string `pulumi:"tenantId"`
	// ExtId of the VPC extId to which the routing policy belongs.
	VpcExtId string `pulumi:"vpcExtId"`
	// VPC name for projections
	Vpcs []GetPbrV2Vpc `pulumi:"vpcs"`
}

func LookupPbrV2Output(ctx *pulumi.Context, args LookupPbrV2OutputArgs, opts ...pulumi.InvokeOption) LookupPbrV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPbrV2ResultOutput, error) {
			args := v.(LookupPbrV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getPbrV2:getPbrV2", args, LookupPbrV2ResultOutput{}, options).(LookupPbrV2ResultOutput), nil
		}).(LookupPbrV2ResultOutput)
}

// A collection of arguments for invoking getPbrV2.
type LookupPbrV2OutputArgs struct {
	// pbr UUID
	ExtId pulumi.StringInput `pulumi:"extId"`
}

func (LookupPbrV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPbrV2Args)(nil)).Elem()
}

// A collection of values returned by getPbrV2.
type LookupPbrV2ResultOutput struct{ *pulumi.OutputState }

func (LookupPbrV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPbrV2Result)(nil)).Elem()
}

func (o LookupPbrV2ResultOutput) ToLookupPbrV2ResultOutput() LookupPbrV2ResultOutput {
	return o
}

func (o LookupPbrV2ResultOutput) ToLookupPbrV2ResultOutputWithContext(ctx context.Context) LookupPbrV2ResultOutput {
	return o
}

// A description of the routing policy.
func (o LookupPbrV2ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPbrV2ResultOutput) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.ExtId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPbrV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// A HATEOAS style link for the response. Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
func (o LookupPbrV2ResultOutput) Links() GetPbrV2LinkArrayOutput {
	return o.ApplyT(func(v LookupPbrV2Result) []GetPbrV2Link { return v.Links }).(GetPbrV2LinkArrayOutput)
}

// Metadata associated with this resource.
func (o LookupPbrV2ResultOutput) Metadatas() GetPbrV2MetadataArrayOutput {
	return o.ApplyT(func(v LookupPbrV2Result) []GetPbrV2Metadata { return v.Metadatas }).(GetPbrV2MetadataArrayOutput)
}

// Name of the routing policy.
func (o LookupPbrV2ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.Name }).(pulumi.StringOutput)
}

// Routing Policies
func (o LookupPbrV2ResultOutput) Policies() GetPbrV2PolicyArrayOutput {
	return o.ApplyT(func(v LookupPbrV2Result) []GetPbrV2Policy { return v.Policies }).(GetPbrV2PolicyArrayOutput)
}

// Priority of the routing policy.
func (o LookupPbrV2ResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPbrV2Result) int { return v.Priority }).(pulumi.IntOutput)
}

// A globally unique identifier that represents the tenant that owns this entity
func (o LookupPbrV2ResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.TenantId }).(pulumi.StringOutput)
}

// ExtId of the VPC extId to which the routing policy belongs.
func (o LookupPbrV2ResultOutput) VpcExtId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPbrV2Result) string { return v.VpcExtId }).(pulumi.StringOutput)
}

// VPC name for projections
func (o LookupPbrV2ResultOutput) Vpcs() GetPbrV2VpcArrayOutput {
	return o.ApplyT(func(v LookupPbrV2Result) []GetPbrV2Vpc { return v.Vpcs }).(GetPbrV2VpcArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPbrV2ResultOutput{})
}
