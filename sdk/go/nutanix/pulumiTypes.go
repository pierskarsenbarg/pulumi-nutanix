// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessControlPolicyCategory struct {
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - value of the key.
	Value *string `pulumi:"value"`
}

// AccessControlPolicyCategoryInput is an input type that accepts AccessControlPolicyCategoryArgs and AccessControlPolicyCategoryOutput values.
// You can construct a concrete instance of `AccessControlPolicyCategoryInput` via:
//
//	AccessControlPolicyCategoryArgs{...}
type AccessControlPolicyCategoryInput interface {
	pulumi.Input

	ToAccessControlPolicyCategoryOutput() AccessControlPolicyCategoryOutput
	ToAccessControlPolicyCategoryOutputWithContext(context.Context) AccessControlPolicyCategoryOutput
}

type AccessControlPolicyCategoryArgs struct {
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AccessControlPolicyCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyCategory)(nil)).Elem()
}

func (i AccessControlPolicyCategoryArgs) ToAccessControlPolicyCategoryOutput() AccessControlPolicyCategoryOutput {
	return i.ToAccessControlPolicyCategoryOutputWithContext(context.Background())
}

func (i AccessControlPolicyCategoryArgs) ToAccessControlPolicyCategoryOutputWithContext(ctx context.Context) AccessControlPolicyCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyCategoryOutput)
}

// AccessControlPolicyCategoryArrayInput is an input type that accepts AccessControlPolicyCategoryArray and AccessControlPolicyCategoryArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyCategoryArrayInput` via:
//
//	AccessControlPolicyCategoryArray{ AccessControlPolicyCategoryArgs{...} }
type AccessControlPolicyCategoryArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyCategoryArrayOutput() AccessControlPolicyCategoryArrayOutput
	ToAccessControlPolicyCategoryArrayOutputWithContext(context.Context) AccessControlPolicyCategoryArrayOutput
}

type AccessControlPolicyCategoryArray []AccessControlPolicyCategoryInput

func (AccessControlPolicyCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyCategory)(nil)).Elem()
}

func (i AccessControlPolicyCategoryArray) ToAccessControlPolicyCategoryArrayOutput() AccessControlPolicyCategoryArrayOutput {
	return i.ToAccessControlPolicyCategoryArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyCategoryArray) ToAccessControlPolicyCategoryArrayOutputWithContext(ctx context.Context) AccessControlPolicyCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyCategoryArrayOutput)
}

type AccessControlPolicyCategoryOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyCategory)(nil)).Elem()
}

func (o AccessControlPolicyCategoryOutput) ToAccessControlPolicyCategoryOutput() AccessControlPolicyCategoryOutput {
	return o
}

func (o AccessControlPolicyCategoryOutput) ToAccessControlPolicyCategoryOutputWithContext(ctx context.Context) AccessControlPolicyCategoryOutput {
	return o
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o AccessControlPolicyCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AccessControlPolicyCategoryArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyCategory)(nil)).Elem()
}

func (o AccessControlPolicyCategoryArrayOutput) ToAccessControlPolicyCategoryArrayOutput() AccessControlPolicyCategoryArrayOutput {
	return o
}

func (o AccessControlPolicyCategoryArrayOutput) ToAccessControlPolicyCategoryArrayOutputWithContext(ctx context.Context) AccessControlPolicyCategoryArrayOutput {
	return o
}

func (o AccessControlPolicyCategoryArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyCategory {
		return vs[0].([]AccessControlPolicyCategory)[vs[1].(int)]
	}).(AccessControlPolicyCategoryOutput)
}

type AccessControlPolicyContextFilterList struct {
	EntityFilterExpressionLists []AccessControlPolicyContextFilterListEntityFilterExpressionList `pulumi:"entityFilterExpressionLists"`
	ScopeFilterExpressionLists  []AccessControlPolicyContextFilterListScopeFilterExpressionList  `pulumi:"scopeFilterExpressionLists"`
}

// AccessControlPolicyContextFilterListInput is an input type that accepts AccessControlPolicyContextFilterListArgs and AccessControlPolicyContextFilterListOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListInput` via:
//
//	AccessControlPolicyContextFilterListArgs{...}
type AccessControlPolicyContextFilterListInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListOutput() AccessControlPolicyContextFilterListOutput
	ToAccessControlPolicyContextFilterListOutputWithContext(context.Context) AccessControlPolicyContextFilterListOutput
}

type AccessControlPolicyContextFilterListArgs struct {
	EntityFilterExpressionLists AccessControlPolicyContextFilterListEntityFilterExpressionListArrayInput `pulumi:"entityFilterExpressionLists"`
	ScopeFilterExpressionLists  AccessControlPolicyContextFilterListScopeFilterExpressionListArrayInput  `pulumi:"scopeFilterExpressionLists"`
}

func (AccessControlPolicyContextFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListArgs) ToAccessControlPolicyContextFilterListOutput() AccessControlPolicyContextFilterListOutput {
	return i.ToAccessControlPolicyContextFilterListOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListArgs) ToAccessControlPolicyContextFilterListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListOutput)
}

// AccessControlPolicyContextFilterListArrayInput is an input type that accepts AccessControlPolicyContextFilterListArray and AccessControlPolicyContextFilterListArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListArrayInput` via:
//
//	AccessControlPolicyContextFilterListArray{ AccessControlPolicyContextFilterListArgs{...} }
type AccessControlPolicyContextFilterListArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListArrayOutput() AccessControlPolicyContextFilterListArrayOutput
	ToAccessControlPolicyContextFilterListArrayOutputWithContext(context.Context) AccessControlPolicyContextFilterListArrayOutput
}

type AccessControlPolicyContextFilterListArray []AccessControlPolicyContextFilterListInput

func (AccessControlPolicyContextFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListArray) ToAccessControlPolicyContextFilterListArrayOutput() AccessControlPolicyContextFilterListArrayOutput {
	return i.ToAccessControlPolicyContextFilterListArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListArray) ToAccessControlPolicyContextFilterListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListArrayOutput)
}

type AccessControlPolicyContextFilterListOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListOutput) ToAccessControlPolicyContextFilterListOutput() AccessControlPolicyContextFilterListOutput {
	return o
}

func (o AccessControlPolicyContextFilterListOutput) ToAccessControlPolicyContextFilterListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListOutput {
	return o
}

func (o AccessControlPolicyContextFilterListOutput) EntityFilterExpressionLists() AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterList) []AccessControlPolicyContextFilterListEntityFilterExpressionList {
		return v.EntityFilterExpressionLists
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput)
}

func (o AccessControlPolicyContextFilterListOutput) ScopeFilterExpressionLists() AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterList) []AccessControlPolicyContextFilterListScopeFilterExpressionList {
		return v.ScopeFilterExpressionLists
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput)
}

type AccessControlPolicyContextFilterListArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListArrayOutput) ToAccessControlPolicyContextFilterListArrayOutput() AccessControlPolicyContextFilterListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListArrayOutput) ToAccessControlPolicyContextFilterListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyContextFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyContextFilterList {
		return vs[0].([]AccessControlPolicyContextFilterList)[vs[1].(int)]
	}).(AccessControlPolicyContextFilterListOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType *string `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// AccessControlPolicyContextFilterListEntityFilterExpressionListInput is an input type that accepts AccessControlPolicyContextFilterListEntityFilterExpressionListArgs and AccessControlPolicyContextFilterListEntityFilterExpressionListOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListEntityFilterExpressionListInput` via:
//
//	AccessControlPolicyContextFilterListEntityFilterExpressionListArgs{...}
type AccessControlPolicyContextFilterListEntityFilterExpressionListInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListOutput
	ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutputWithContext(context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListOutput
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType pulumi.StringPtrInput `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (AccessControlPolicyContextFilterListEntityFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListOutput)
}

// AccessControlPolicyContextFilterListEntityFilterExpressionListArrayInput is an input type that accepts AccessControlPolicyContextFilterListEntityFilterExpressionListArray and AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListEntityFilterExpressionListArrayInput` via:
//
//	AccessControlPolicyContextFilterListEntityFilterExpressionListArray{ AccessControlPolicyContextFilterListEntityFilterExpressionListArgs{...} }
type AccessControlPolicyContextFilterListEntityFilterExpressionListArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput
	ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListArray []AccessControlPolicyContextFilterListEntityFilterExpressionListInput

func (AccessControlPolicyContextFilterListEntityFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListArray) ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListArray) ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the entity type.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) LeftHandSideEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionList) *string {
		return v.LeftHandSideEntityType
	}).(pulumi.StringPtrOutput)
}

// - (Required) The operator in the filter expression.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListOutput) RightHandSide() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionList) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyContextFilterListEntityFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyContextFilterListEntityFilterExpressionList {
		return vs[0].([]AccessControlPolicyContextFilterListEntityFilterExpressionList)[vs[1].(int)]
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideInput is an input type that accepts AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs and AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideInput` via:
//
//	AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs{...}
type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput
	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) Categories() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide) *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide) *string {
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSide) []string {
		return v.UuidLists
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories struct {
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - value of the key.
	Values []string `pulumi:"values"`
}

// AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput is an input type that accepts AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs and AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput` via:
//
//	AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs struct {
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput).ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs, AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr and AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
	ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
}

type accessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs

func AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr(v *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*accessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*accessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *accessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *accessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return &v
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToAccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories
		return ret
	}).(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide string `pulumi:"leftHandSide"`
	// - (Required) The operator of the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// AccessControlPolicyContextFilterListScopeFilterExpressionListInput is an input type that accepts AccessControlPolicyContextFilterListScopeFilterExpressionListArgs and AccessControlPolicyContextFilterListScopeFilterExpressionListOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListScopeFilterExpressionListInput` via:
//
//	AccessControlPolicyContextFilterListScopeFilterExpressionListArgs{...}
type AccessControlPolicyContextFilterListScopeFilterExpressionListInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListOutput
	ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutputWithContext(context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListOutput
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide pulumi.StringInput `pulumi:"leftHandSide"`
	// - (Required) The operator of the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (AccessControlPolicyContextFilterListScopeFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListOutput)
}

// AccessControlPolicyContextFilterListScopeFilterExpressionListArrayInput is an input type that accepts AccessControlPolicyContextFilterListScopeFilterExpressionListArray and AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListScopeFilterExpressionListArrayInput` via:
//
//	AccessControlPolicyContextFilterListScopeFilterExpressionListArray{ AccessControlPolicyContextFilterListScopeFilterExpressionListArgs{...} }
type AccessControlPolicyContextFilterListScopeFilterExpressionListArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput
	ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListArray []AccessControlPolicyContextFilterListScopeFilterExpressionListInput

func (AccessControlPolicyContextFilterListScopeFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListArray) ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListArray) ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the scope type.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) LeftHandSide() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionList) string { return v.LeftHandSide }).(pulumi.StringOutput)
}

// - (Required) The operator of the filter expression.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListOutput) RightHandSide() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionList) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyContextFilterListScopeFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyContextFilterListScopeFilterExpressionList {
		return vs[0].([]AccessControlPolicyContextFilterListScopeFilterExpressionList)[vs[1].(int)]
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideInput is an input type that accepts AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs and AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideInput` via:
//
//	AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs{...}
type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput
	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) Categories() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide) *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide) *string {
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSide) []string {
		return v.UuidLists
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories struct {
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - value of the key.
	Values []string `pulumi:"values"`
}

// AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput is an input type that accepts AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs and AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput` via:
//
//	AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs struct {
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput).ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs, AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr and AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
	ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
}

type accessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs

func AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr(v *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*accessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*accessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *accessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *accessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return &v
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToAccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories
		return ret
	}).(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - value of the key.
func (o AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type AccessControlPolicyOwnerReference struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// AccessControlPolicyOwnerReferenceInput is an input type that accepts AccessControlPolicyOwnerReferenceArgs and AccessControlPolicyOwnerReferenceOutput values.
// You can construct a concrete instance of `AccessControlPolicyOwnerReferenceInput` via:
//
//	AccessControlPolicyOwnerReferenceArgs{...}
type AccessControlPolicyOwnerReferenceInput interface {
	pulumi.Input

	ToAccessControlPolicyOwnerReferenceOutput() AccessControlPolicyOwnerReferenceOutput
	ToAccessControlPolicyOwnerReferenceOutputWithContext(context.Context) AccessControlPolicyOwnerReferenceOutput
}

type AccessControlPolicyOwnerReferenceArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (AccessControlPolicyOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyOwnerReference)(nil)).Elem()
}

func (i AccessControlPolicyOwnerReferenceArgs) ToAccessControlPolicyOwnerReferenceOutput() AccessControlPolicyOwnerReferenceOutput {
	return i.ToAccessControlPolicyOwnerReferenceOutputWithContext(context.Background())
}

func (i AccessControlPolicyOwnerReferenceArgs) ToAccessControlPolicyOwnerReferenceOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyOwnerReferenceOutput)
}

func (i AccessControlPolicyOwnerReferenceArgs) ToAccessControlPolicyOwnerReferencePtrOutput() AccessControlPolicyOwnerReferencePtrOutput {
	return i.ToAccessControlPolicyOwnerReferencePtrOutputWithContext(context.Background())
}

func (i AccessControlPolicyOwnerReferenceArgs) ToAccessControlPolicyOwnerReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyOwnerReferenceOutput).ToAccessControlPolicyOwnerReferencePtrOutputWithContext(ctx)
}

// AccessControlPolicyOwnerReferencePtrInput is an input type that accepts AccessControlPolicyOwnerReferenceArgs, AccessControlPolicyOwnerReferencePtr and AccessControlPolicyOwnerReferencePtrOutput values.
// You can construct a concrete instance of `AccessControlPolicyOwnerReferencePtrInput` via:
//
//	        AccessControlPolicyOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type AccessControlPolicyOwnerReferencePtrInput interface {
	pulumi.Input

	ToAccessControlPolicyOwnerReferencePtrOutput() AccessControlPolicyOwnerReferencePtrOutput
	ToAccessControlPolicyOwnerReferencePtrOutputWithContext(context.Context) AccessControlPolicyOwnerReferencePtrOutput
}

type accessControlPolicyOwnerReferencePtrType AccessControlPolicyOwnerReferenceArgs

func AccessControlPolicyOwnerReferencePtr(v *AccessControlPolicyOwnerReferenceArgs) AccessControlPolicyOwnerReferencePtrInput {
	return (*accessControlPolicyOwnerReferencePtrType)(v)
}

func (*accessControlPolicyOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyOwnerReference)(nil)).Elem()
}

func (i *accessControlPolicyOwnerReferencePtrType) ToAccessControlPolicyOwnerReferencePtrOutput() AccessControlPolicyOwnerReferencePtrOutput {
	return i.ToAccessControlPolicyOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *accessControlPolicyOwnerReferencePtrType) ToAccessControlPolicyOwnerReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyOwnerReferencePtrOutput)
}

type AccessControlPolicyOwnerReferenceOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyOwnerReference)(nil)).Elem()
}

func (o AccessControlPolicyOwnerReferenceOutput) ToAccessControlPolicyOwnerReferenceOutput() AccessControlPolicyOwnerReferenceOutput {
	return o
}

func (o AccessControlPolicyOwnerReferenceOutput) ToAccessControlPolicyOwnerReferenceOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferenceOutput {
	return o
}

func (o AccessControlPolicyOwnerReferenceOutput) ToAccessControlPolicyOwnerReferencePtrOutput() AccessControlPolicyOwnerReferencePtrOutput {
	return o.ToAccessControlPolicyOwnerReferencePtrOutputWithContext(context.Background())
}

func (o AccessControlPolicyOwnerReferenceOutput) ToAccessControlPolicyOwnerReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessControlPolicyOwnerReference) *AccessControlPolicyOwnerReference {
		return &v
	}).(AccessControlPolicyOwnerReferencePtrOutput)
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type AccessControlPolicyOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyOwnerReference)(nil)).Elem()
}

func (o AccessControlPolicyOwnerReferencePtrOutput) ToAccessControlPolicyOwnerReferencePtrOutput() AccessControlPolicyOwnerReferencePtrOutput {
	return o
}

func (o AccessControlPolicyOwnerReferencePtrOutput) ToAccessControlPolicyOwnerReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyOwnerReferencePtrOutput {
	return o
}

func (o AccessControlPolicyOwnerReferencePtrOutput) Elem() AccessControlPolicyOwnerReferenceOutput {
	return o.ApplyT(func(v *AccessControlPolicyOwnerReference) AccessControlPolicyOwnerReference {
		if v != nil {
			return *v
		}
		var ret AccessControlPolicyOwnerReference
		return ret
	}).(AccessControlPolicyOwnerReferenceOutput)
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type AccessControlPolicyRoleReference struct {
	// - The kind name (Default value: project)(Required).
	Kind string `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid string `pulumi:"uuid"`
}

// AccessControlPolicyRoleReferenceInput is an input type that accepts AccessControlPolicyRoleReferenceArgs and AccessControlPolicyRoleReferenceOutput values.
// You can construct a concrete instance of `AccessControlPolicyRoleReferenceInput` via:
//
//	AccessControlPolicyRoleReferenceArgs{...}
type AccessControlPolicyRoleReferenceInput interface {
	pulumi.Input

	ToAccessControlPolicyRoleReferenceOutput() AccessControlPolicyRoleReferenceOutput
	ToAccessControlPolicyRoleReferenceOutputWithContext(context.Context) AccessControlPolicyRoleReferenceOutput
}

type AccessControlPolicyRoleReferenceArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringInput `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (AccessControlPolicyRoleReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyRoleReference)(nil)).Elem()
}

func (i AccessControlPolicyRoleReferenceArgs) ToAccessControlPolicyRoleReferenceOutput() AccessControlPolicyRoleReferenceOutput {
	return i.ToAccessControlPolicyRoleReferenceOutputWithContext(context.Background())
}

func (i AccessControlPolicyRoleReferenceArgs) ToAccessControlPolicyRoleReferenceOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyRoleReferenceOutput)
}

func (i AccessControlPolicyRoleReferenceArgs) ToAccessControlPolicyRoleReferencePtrOutput() AccessControlPolicyRoleReferencePtrOutput {
	return i.ToAccessControlPolicyRoleReferencePtrOutputWithContext(context.Background())
}

func (i AccessControlPolicyRoleReferenceArgs) ToAccessControlPolicyRoleReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyRoleReferenceOutput).ToAccessControlPolicyRoleReferencePtrOutputWithContext(ctx)
}

// AccessControlPolicyRoleReferencePtrInput is an input type that accepts AccessControlPolicyRoleReferenceArgs, AccessControlPolicyRoleReferencePtr and AccessControlPolicyRoleReferencePtrOutput values.
// You can construct a concrete instance of `AccessControlPolicyRoleReferencePtrInput` via:
//
//	        AccessControlPolicyRoleReferenceArgs{...}
//
//	or:
//
//	        nil
type AccessControlPolicyRoleReferencePtrInput interface {
	pulumi.Input

	ToAccessControlPolicyRoleReferencePtrOutput() AccessControlPolicyRoleReferencePtrOutput
	ToAccessControlPolicyRoleReferencePtrOutputWithContext(context.Context) AccessControlPolicyRoleReferencePtrOutput
}

type accessControlPolicyRoleReferencePtrType AccessControlPolicyRoleReferenceArgs

func AccessControlPolicyRoleReferencePtr(v *AccessControlPolicyRoleReferenceArgs) AccessControlPolicyRoleReferencePtrInput {
	return (*accessControlPolicyRoleReferencePtrType)(v)
}

func (*accessControlPolicyRoleReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyRoleReference)(nil)).Elem()
}

func (i *accessControlPolicyRoleReferencePtrType) ToAccessControlPolicyRoleReferencePtrOutput() AccessControlPolicyRoleReferencePtrOutput {
	return i.ToAccessControlPolicyRoleReferencePtrOutputWithContext(context.Background())
}

func (i *accessControlPolicyRoleReferencePtrType) ToAccessControlPolicyRoleReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyRoleReferencePtrOutput)
}

type AccessControlPolicyRoleReferenceOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyRoleReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyRoleReference)(nil)).Elem()
}

func (o AccessControlPolicyRoleReferenceOutput) ToAccessControlPolicyRoleReferenceOutput() AccessControlPolicyRoleReferenceOutput {
	return o
}

func (o AccessControlPolicyRoleReferenceOutput) ToAccessControlPolicyRoleReferenceOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferenceOutput {
	return o
}

func (o AccessControlPolicyRoleReferenceOutput) ToAccessControlPolicyRoleReferencePtrOutput() AccessControlPolicyRoleReferencePtrOutput {
	return o.ToAccessControlPolicyRoleReferencePtrOutputWithContext(context.Background())
}

func (o AccessControlPolicyRoleReferenceOutput) ToAccessControlPolicyRoleReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessControlPolicyRoleReference) *AccessControlPolicyRoleReference {
		return &v
	}).(AccessControlPolicyRoleReferencePtrOutput)
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyRoleReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyRoleReference) string { return v.Kind }).(pulumi.StringOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyRoleReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyRoleReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyRoleReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyRoleReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type AccessControlPolicyRoleReferencePtrOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyRoleReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlPolicyRoleReference)(nil)).Elem()
}

func (o AccessControlPolicyRoleReferencePtrOutput) ToAccessControlPolicyRoleReferencePtrOutput() AccessControlPolicyRoleReferencePtrOutput {
	return o
}

func (o AccessControlPolicyRoleReferencePtrOutput) ToAccessControlPolicyRoleReferencePtrOutputWithContext(ctx context.Context) AccessControlPolicyRoleReferencePtrOutput {
	return o
}

func (o AccessControlPolicyRoleReferencePtrOutput) Elem() AccessControlPolicyRoleReferenceOutput {
	return o.ApplyT(func(v *AccessControlPolicyRoleReference) AccessControlPolicyRoleReference {
		if v != nil {
			return *v
		}
		var ret AccessControlPolicyRoleReference
		return ret
	}).(AccessControlPolicyRoleReferenceOutput)
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyRoleReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyRoleReference) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyRoleReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyRoleReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyRoleReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessControlPolicyRoleReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type AccessControlPolicyUserGroupReferenceList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid string `pulumi:"uuid"`
}

// AccessControlPolicyUserGroupReferenceListInput is an input type that accepts AccessControlPolicyUserGroupReferenceListArgs and AccessControlPolicyUserGroupReferenceListOutput values.
// You can construct a concrete instance of `AccessControlPolicyUserGroupReferenceListInput` via:
//
//	AccessControlPolicyUserGroupReferenceListArgs{...}
type AccessControlPolicyUserGroupReferenceListInput interface {
	pulumi.Input

	ToAccessControlPolicyUserGroupReferenceListOutput() AccessControlPolicyUserGroupReferenceListOutput
	ToAccessControlPolicyUserGroupReferenceListOutputWithContext(context.Context) AccessControlPolicyUserGroupReferenceListOutput
}

type AccessControlPolicyUserGroupReferenceListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (AccessControlPolicyUserGroupReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyUserGroupReferenceList)(nil)).Elem()
}

func (i AccessControlPolicyUserGroupReferenceListArgs) ToAccessControlPolicyUserGroupReferenceListOutput() AccessControlPolicyUserGroupReferenceListOutput {
	return i.ToAccessControlPolicyUserGroupReferenceListOutputWithContext(context.Background())
}

func (i AccessControlPolicyUserGroupReferenceListArgs) ToAccessControlPolicyUserGroupReferenceListOutputWithContext(ctx context.Context) AccessControlPolicyUserGroupReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyUserGroupReferenceListOutput)
}

// AccessControlPolicyUserGroupReferenceListArrayInput is an input type that accepts AccessControlPolicyUserGroupReferenceListArray and AccessControlPolicyUserGroupReferenceListArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyUserGroupReferenceListArrayInput` via:
//
//	AccessControlPolicyUserGroupReferenceListArray{ AccessControlPolicyUserGroupReferenceListArgs{...} }
type AccessControlPolicyUserGroupReferenceListArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyUserGroupReferenceListArrayOutput() AccessControlPolicyUserGroupReferenceListArrayOutput
	ToAccessControlPolicyUserGroupReferenceListArrayOutputWithContext(context.Context) AccessControlPolicyUserGroupReferenceListArrayOutput
}

type AccessControlPolicyUserGroupReferenceListArray []AccessControlPolicyUserGroupReferenceListInput

func (AccessControlPolicyUserGroupReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyUserGroupReferenceList)(nil)).Elem()
}

func (i AccessControlPolicyUserGroupReferenceListArray) ToAccessControlPolicyUserGroupReferenceListArrayOutput() AccessControlPolicyUserGroupReferenceListArrayOutput {
	return i.ToAccessControlPolicyUserGroupReferenceListArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyUserGroupReferenceListArray) ToAccessControlPolicyUserGroupReferenceListArrayOutputWithContext(ctx context.Context) AccessControlPolicyUserGroupReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyUserGroupReferenceListArrayOutput)
}

type AccessControlPolicyUserGroupReferenceListOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyUserGroupReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyUserGroupReferenceList)(nil)).Elem()
}

func (o AccessControlPolicyUserGroupReferenceListOutput) ToAccessControlPolicyUserGroupReferenceListOutput() AccessControlPolicyUserGroupReferenceListOutput {
	return o
}

func (o AccessControlPolicyUserGroupReferenceListOutput) ToAccessControlPolicyUserGroupReferenceListOutputWithContext(ctx context.Context) AccessControlPolicyUserGroupReferenceListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyUserGroupReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyUserGroupReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyUserGroupReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyUserGroupReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyUserGroupReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyUserGroupReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type AccessControlPolicyUserGroupReferenceListArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyUserGroupReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyUserGroupReferenceList)(nil)).Elem()
}

func (o AccessControlPolicyUserGroupReferenceListArrayOutput) ToAccessControlPolicyUserGroupReferenceListArrayOutput() AccessControlPolicyUserGroupReferenceListArrayOutput {
	return o
}

func (o AccessControlPolicyUserGroupReferenceListArrayOutput) ToAccessControlPolicyUserGroupReferenceListArrayOutputWithContext(ctx context.Context) AccessControlPolicyUserGroupReferenceListArrayOutput {
	return o
}

func (o AccessControlPolicyUserGroupReferenceListArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyUserGroupReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyUserGroupReferenceList {
		return vs[0].([]AccessControlPolicyUserGroupReferenceList)[vs[1].(int)]
	}).(AccessControlPolicyUserGroupReferenceListOutput)
}

type AccessControlPolicyUserReferenceList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid string `pulumi:"uuid"`
}

// AccessControlPolicyUserReferenceListInput is an input type that accepts AccessControlPolicyUserReferenceListArgs and AccessControlPolicyUserReferenceListOutput values.
// You can construct a concrete instance of `AccessControlPolicyUserReferenceListInput` via:
//
//	AccessControlPolicyUserReferenceListArgs{...}
type AccessControlPolicyUserReferenceListInput interface {
	pulumi.Input

	ToAccessControlPolicyUserReferenceListOutput() AccessControlPolicyUserReferenceListOutput
	ToAccessControlPolicyUserReferenceListOutputWithContext(context.Context) AccessControlPolicyUserReferenceListOutput
}

type AccessControlPolicyUserReferenceListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Optional) Name of the Access Control Policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (AccessControlPolicyUserReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyUserReferenceList)(nil)).Elem()
}

func (i AccessControlPolicyUserReferenceListArgs) ToAccessControlPolicyUserReferenceListOutput() AccessControlPolicyUserReferenceListOutput {
	return i.ToAccessControlPolicyUserReferenceListOutputWithContext(context.Background())
}

func (i AccessControlPolicyUserReferenceListArgs) ToAccessControlPolicyUserReferenceListOutputWithContext(ctx context.Context) AccessControlPolicyUserReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyUserReferenceListOutput)
}

// AccessControlPolicyUserReferenceListArrayInput is an input type that accepts AccessControlPolicyUserReferenceListArray and AccessControlPolicyUserReferenceListArrayOutput values.
// You can construct a concrete instance of `AccessControlPolicyUserReferenceListArrayInput` via:
//
//	AccessControlPolicyUserReferenceListArray{ AccessControlPolicyUserReferenceListArgs{...} }
type AccessControlPolicyUserReferenceListArrayInput interface {
	pulumi.Input

	ToAccessControlPolicyUserReferenceListArrayOutput() AccessControlPolicyUserReferenceListArrayOutput
	ToAccessControlPolicyUserReferenceListArrayOutputWithContext(context.Context) AccessControlPolicyUserReferenceListArrayOutput
}

type AccessControlPolicyUserReferenceListArray []AccessControlPolicyUserReferenceListInput

func (AccessControlPolicyUserReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyUserReferenceList)(nil)).Elem()
}

func (i AccessControlPolicyUserReferenceListArray) ToAccessControlPolicyUserReferenceListArrayOutput() AccessControlPolicyUserReferenceListArrayOutput {
	return i.ToAccessControlPolicyUserReferenceListArrayOutputWithContext(context.Background())
}

func (i AccessControlPolicyUserReferenceListArray) ToAccessControlPolicyUserReferenceListArrayOutputWithContext(ctx context.Context) AccessControlPolicyUserReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessControlPolicyUserReferenceListArrayOutput)
}

type AccessControlPolicyUserReferenceListOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyUserReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlPolicyUserReferenceList)(nil)).Elem()
}

func (o AccessControlPolicyUserReferenceListOutput) ToAccessControlPolicyUserReferenceListOutput() AccessControlPolicyUserReferenceListOutput {
	return o
}

func (o AccessControlPolicyUserReferenceListOutput) ToAccessControlPolicyUserReferenceListOutputWithContext(ctx context.Context) AccessControlPolicyUserReferenceListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o AccessControlPolicyUserReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyUserReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Optional) Name of the Access Control Policy.
func (o AccessControlPolicyUserReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessControlPolicyUserReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o AccessControlPolicyUserReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v AccessControlPolicyUserReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type AccessControlPolicyUserReferenceListArrayOutput struct{ *pulumi.OutputState }

func (AccessControlPolicyUserReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessControlPolicyUserReferenceList)(nil)).Elem()
}

func (o AccessControlPolicyUserReferenceListArrayOutput) ToAccessControlPolicyUserReferenceListArrayOutput() AccessControlPolicyUserReferenceListArrayOutput {
	return o
}

func (o AccessControlPolicyUserReferenceListArrayOutput) ToAccessControlPolicyUserReferenceListArrayOutputWithContext(ctx context.Context) AccessControlPolicyUserReferenceListArrayOutput {
	return o
}

func (o AccessControlPolicyUserReferenceListArrayOutput) Index(i pulumi.IntInput) AccessControlPolicyUserReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessControlPolicyUserReferenceList {
		return vs[0].([]AccessControlPolicyUserReferenceList)[vs[1].(int)]
	}).(AccessControlPolicyUserReferenceListOutput)
}

type AddressGroupIpAddressBlockList struct {
	Ip           string `pulumi:"ip"`
	PrefixLength int    `pulumi:"prefixLength"`
}

// AddressGroupIpAddressBlockListInput is an input type that accepts AddressGroupIpAddressBlockListArgs and AddressGroupIpAddressBlockListOutput values.
// You can construct a concrete instance of `AddressGroupIpAddressBlockListInput` via:
//
//	AddressGroupIpAddressBlockListArgs{...}
type AddressGroupIpAddressBlockListInput interface {
	pulumi.Input

	ToAddressGroupIpAddressBlockListOutput() AddressGroupIpAddressBlockListOutput
	ToAddressGroupIpAddressBlockListOutputWithContext(context.Context) AddressGroupIpAddressBlockListOutput
}

type AddressGroupIpAddressBlockListArgs struct {
	Ip           pulumi.StringInput `pulumi:"ip"`
	PrefixLength pulumi.IntInput    `pulumi:"prefixLength"`
}

func (AddressGroupIpAddressBlockListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressGroupIpAddressBlockList)(nil)).Elem()
}

func (i AddressGroupIpAddressBlockListArgs) ToAddressGroupIpAddressBlockListOutput() AddressGroupIpAddressBlockListOutput {
	return i.ToAddressGroupIpAddressBlockListOutputWithContext(context.Background())
}

func (i AddressGroupIpAddressBlockListArgs) ToAddressGroupIpAddressBlockListOutputWithContext(ctx context.Context) AddressGroupIpAddressBlockListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIpAddressBlockListOutput)
}

// AddressGroupIpAddressBlockListArrayInput is an input type that accepts AddressGroupIpAddressBlockListArray and AddressGroupIpAddressBlockListArrayOutput values.
// You can construct a concrete instance of `AddressGroupIpAddressBlockListArrayInput` via:
//
//	AddressGroupIpAddressBlockListArray{ AddressGroupIpAddressBlockListArgs{...} }
type AddressGroupIpAddressBlockListArrayInput interface {
	pulumi.Input

	ToAddressGroupIpAddressBlockListArrayOutput() AddressGroupIpAddressBlockListArrayOutput
	ToAddressGroupIpAddressBlockListArrayOutputWithContext(context.Context) AddressGroupIpAddressBlockListArrayOutput
}

type AddressGroupIpAddressBlockListArray []AddressGroupIpAddressBlockListInput

func (AddressGroupIpAddressBlockListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressGroupIpAddressBlockList)(nil)).Elem()
}

func (i AddressGroupIpAddressBlockListArray) ToAddressGroupIpAddressBlockListArrayOutput() AddressGroupIpAddressBlockListArrayOutput {
	return i.ToAddressGroupIpAddressBlockListArrayOutputWithContext(context.Background())
}

func (i AddressGroupIpAddressBlockListArray) ToAddressGroupIpAddressBlockListArrayOutputWithContext(ctx context.Context) AddressGroupIpAddressBlockListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupIpAddressBlockListArrayOutput)
}

type AddressGroupIpAddressBlockListOutput struct{ *pulumi.OutputState }

func (AddressGroupIpAddressBlockListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressGroupIpAddressBlockList)(nil)).Elem()
}

func (o AddressGroupIpAddressBlockListOutput) ToAddressGroupIpAddressBlockListOutput() AddressGroupIpAddressBlockListOutput {
	return o
}

func (o AddressGroupIpAddressBlockListOutput) ToAddressGroupIpAddressBlockListOutputWithContext(ctx context.Context) AddressGroupIpAddressBlockListOutput {
	return o
}

func (o AddressGroupIpAddressBlockListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v AddressGroupIpAddressBlockList) string { return v.Ip }).(pulumi.StringOutput)
}

func (o AddressGroupIpAddressBlockListOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v AddressGroupIpAddressBlockList) int { return v.PrefixLength }).(pulumi.IntOutput)
}

type AddressGroupIpAddressBlockListArrayOutput struct{ *pulumi.OutputState }

func (AddressGroupIpAddressBlockListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressGroupIpAddressBlockList)(nil)).Elem()
}

func (o AddressGroupIpAddressBlockListArrayOutput) ToAddressGroupIpAddressBlockListArrayOutput() AddressGroupIpAddressBlockListArrayOutput {
	return o
}

func (o AddressGroupIpAddressBlockListArrayOutput) ToAddressGroupIpAddressBlockListArrayOutputWithContext(ctx context.Context) AddressGroupIpAddressBlockListArrayOutput {
	return o
}

func (o AddressGroupIpAddressBlockListArrayOutput) Index(i pulumi.IntInput) AddressGroupIpAddressBlockListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressGroupIpAddressBlockList {
		return vs[0].([]AddressGroupIpAddressBlockList)[vs[1].(int)]
	}).(AddressGroupIpAddressBlockListOutput)
}

type FoundationCentralImageClusterClusterStatus struct {
	AggregatePercentComplete *float64                                                          `pulumi:"aggregatePercentComplete"`
	ClusterCreationStarted   *bool                                                             `pulumi:"clusterCreationStarted"`
	ClusterProgressDetails   []FoundationCentralImageClusterClusterStatusClusterProgressDetail `pulumi:"clusterProgressDetails"`
	CurrentFoundationIp      *string                                                           `pulumi:"currentFoundationIp"`
	FoundationSessionId      *string                                                           `pulumi:"foundationSessionId"`
	ImagingStopped           *bool                                                             `pulumi:"imagingStopped"`
	IntentPickedUp           *bool                                                             `pulumi:"intentPickedUp"`
	NodeProgressDetails      []FoundationCentralImageClusterClusterStatusNodeProgressDetail    `pulumi:"nodeProgressDetails"`
}

// FoundationCentralImageClusterClusterStatusInput is an input type that accepts FoundationCentralImageClusterClusterStatusArgs and FoundationCentralImageClusterClusterStatusOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusInput` via:
//
//	FoundationCentralImageClusterClusterStatusArgs{...}
type FoundationCentralImageClusterClusterStatusInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusOutput() FoundationCentralImageClusterClusterStatusOutput
	ToFoundationCentralImageClusterClusterStatusOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusOutput
}

type FoundationCentralImageClusterClusterStatusArgs struct {
	AggregatePercentComplete pulumi.Float64PtrInput                                                    `pulumi:"aggregatePercentComplete"`
	ClusterCreationStarted   pulumi.BoolPtrInput                                                       `pulumi:"clusterCreationStarted"`
	ClusterProgressDetails   FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayInput `pulumi:"clusterProgressDetails"`
	CurrentFoundationIp      pulumi.StringPtrInput                                                     `pulumi:"currentFoundationIp"`
	FoundationSessionId      pulumi.StringPtrInput                                                     `pulumi:"foundationSessionId"`
	ImagingStopped           pulumi.BoolPtrInput                                                       `pulumi:"imagingStopped"`
	IntentPickedUp           pulumi.BoolPtrInput                                                       `pulumi:"intentPickedUp"`
	NodeProgressDetails      FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayInput    `pulumi:"nodeProgressDetails"`
}

func (FoundationCentralImageClusterClusterStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatus)(nil)).Elem()
}

func (i FoundationCentralImageClusterClusterStatusArgs) ToFoundationCentralImageClusterClusterStatusOutput() FoundationCentralImageClusterClusterStatusOutput {
	return i.ToFoundationCentralImageClusterClusterStatusOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusArgs) ToFoundationCentralImageClusterClusterStatusOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusOutput)
}

func (i FoundationCentralImageClusterClusterStatusArgs) ToFoundationCentralImageClusterClusterStatusPtrOutput() FoundationCentralImageClusterClusterStatusPtrOutput {
	return i.ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusArgs) ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusOutput).ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(ctx)
}

// FoundationCentralImageClusterClusterStatusPtrInput is an input type that accepts FoundationCentralImageClusterClusterStatusArgs, FoundationCentralImageClusterClusterStatusPtr and FoundationCentralImageClusterClusterStatusPtrOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusPtrInput` via:
//
//	        FoundationCentralImageClusterClusterStatusArgs{...}
//
//	or:
//
//	        nil
type FoundationCentralImageClusterClusterStatusPtrInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusPtrOutput() FoundationCentralImageClusterClusterStatusPtrOutput
	ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusPtrOutput
}

type foundationCentralImageClusterClusterStatusPtrType FoundationCentralImageClusterClusterStatusArgs

func FoundationCentralImageClusterClusterStatusPtr(v *FoundationCentralImageClusterClusterStatusArgs) FoundationCentralImageClusterClusterStatusPtrInput {
	return (*foundationCentralImageClusterClusterStatusPtrType)(v)
}

func (*foundationCentralImageClusterClusterStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterClusterStatus)(nil)).Elem()
}

func (i *foundationCentralImageClusterClusterStatusPtrType) ToFoundationCentralImageClusterClusterStatusPtrOutput() FoundationCentralImageClusterClusterStatusPtrOutput {
	return i.ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(context.Background())
}

func (i *foundationCentralImageClusterClusterStatusPtrType) ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusPtrOutput)
}

type FoundationCentralImageClusterClusterStatusOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatus)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusOutput) ToFoundationCentralImageClusterClusterStatusOutput() FoundationCentralImageClusterClusterStatusOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusOutput) ToFoundationCentralImageClusterClusterStatusOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusOutput) ToFoundationCentralImageClusterClusterStatusPtrOutput() FoundationCentralImageClusterClusterStatusPtrOutput {
	return o.ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(context.Background())
}

func (o FoundationCentralImageClusterClusterStatusOutput) ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationCentralImageClusterClusterStatus) *FoundationCentralImageClusterClusterStatus {
		return &v
	}).(FoundationCentralImageClusterClusterStatusPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) AggregatePercentComplete() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *float64 { return v.AggregatePercentComplete }).(pulumi.Float64PtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) ClusterCreationStarted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *bool { return v.ClusterCreationStarted }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) ClusterProgressDetails() FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) []FoundationCentralImageClusterClusterStatusClusterProgressDetail {
		return v.ClusterProgressDetails
	}).(FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) CurrentFoundationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *string { return v.CurrentFoundationIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) FoundationSessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *string { return v.FoundationSessionId }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) ImagingStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *bool { return v.ImagingStopped }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) IntentPickedUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) *bool { return v.IntentPickedUp }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusOutput) NodeProgressDetails() FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatus) []FoundationCentralImageClusterClusterStatusNodeProgressDetail {
		return v.NodeProgressDetails
	}).(FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput)
}

type FoundationCentralImageClusterClusterStatusPtrOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterClusterStatus)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) ToFoundationCentralImageClusterClusterStatusPtrOutput() FoundationCentralImageClusterClusterStatusPtrOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) ToFoundationCentralImageClusterClusterStatusPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusPtrOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) Elem() FoundationCentralImageClusterClusterStatusOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) FoundationCentralImageClusterClusterStatus {
		if v != nil {
			return *v
		}
		var ret FoundationCentralImageClusterClusterStatus
		return ret
	}).(FoundationCentralImageClusterClusterStatusOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) AggregatePercentComplete() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *float64 {
		if v == nil {
			return nil
		}
		return v.AggregatePercentComplete
	}).(pulumi.Float64PtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) ClusterCreationStarted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ClusterCreationStarted
	}).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) ClusterProgressDetails() FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) []FoundationCentralImageClusterClusterStatusClusterProgressDetail {
		if v == nil {
			return nil
		}
		return v.ClusterProgressDetails
	}).(FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) CurrentFoundationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.CurrentFoundationIp
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) FoundationSessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *string {
		if v == nil {
			return nil
		}
		return v.FoundationSessionId
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) ImagingStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *bool {
		if v == nil {
			return nil
		}
		return v.ImagingStopped
	}).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) IntentPickedUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) *bool {
		if v == nil {
			return nil
		}
		return v.IntentPickedUp
	}).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusPtrOutput) NodeProgressDetails() FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterClusterStatus) []FoundationCentralImageClusterClusterStatusNodeProgressDetail {
		if v == nil {
			return nil
		}
		return v.NodeProgressDetails
	}).(FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput)
}

type FoundationCentralImageClusterClusterStatusClusterProgressDetail struct {
	// Name of the cluster.
	ClusterName     *string  `pulumi:"clusterName"`
	MessageLists    []string `pulumi:"messageLists"`
	PercentComplete *float64 `pulumi:"percentComplete"`
	Status          *string  `pulumi:"status"`
}

// FoundationCentralImageClusterClusterStatusClusterProgressDetailInput is an input type that accepts FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs and FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusClusterProgressDetailInput` via:
//
//	FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs{...}
type FoundationCentralImageClusterClusterStatusClusterProgressDetailInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput
	ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput
}

type FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs struct {
	// Name of the cluster.
	ClusterName     pulumi.StringPtrInput   `pulumi:"clusterName"`
	MessageLists    pulumi.StringArrayInput `pulumi:"messageLists"`
	PercentComplete pulumi.Float64PtrInput  `pulumi:"percentComplete"`
	Status          pulumi.StringPtrInput   `pulumi:"status"`
}

func (FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatusClusterProgressDetail)(nil)).Elem()
}

func (i FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput {
	return i.ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput)
}

// FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayInput is an input type that accepts FoundationCentralImageClusterClusterStatusClusterProgressDetailArray and FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayInput` via:
//
//	FoundationCentralImageClusterClusterStatusClusterProgressDetailArray{ FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs{...} }
type FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput
	ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput
}

type FoundationCentralImageClusterClusterStatusClusterProgressDetailArray []FoundationCentralImageClusterClusterStatusClusterProgressDetailInput

func (FoundationCentralImageClusterClusterStatusClusterProgressDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterClusterStatusClusterProgressDetail)(nil)).Elem()
}

func (i FoundationCentralImageClusterClusterStatusClusterProgressDetailArray) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return i.ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusClusterProgressDetailArray) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput)
}

type FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatusClusterProgressDetail)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput {
	return o
}

// Name of the cluster.
func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusClusterProgressDetail) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) MessageLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusClusterProgressDetail) []string {
		return v.MessageLists
	}).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) PercentComplete() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusClusterProgressDetail) *float64 {
		return v.PercentComplete
	}).(pulumi.Float64PtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusClusterProgressDetail) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterClusterStatusClusterProgressDetail)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput) ToFoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterClusterStatusClusterProgressDetail {
		return vs[0].([]FoundationCentralImageClusterClusterStatusClusterProgressDetail)[vs[1].(int)]
	}).(FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput)
}

type FoundationCentralImageClusterClusterStatusNodeProgressDetail struct {
	ImagedNodeUuid  *string  `pulumi:"imagedNodeUuid"`
	ImagingStopped  *bool    `pulumi:"imagingStopped"`
	IntentPickedUp  *bool    `pulumi:"intentPickedUp"`
	MessageLists    []string `pulumi:"messageLists"`
	PercentComplete *float64 `pulumi:"percentComplete"`
	Status          *string  `pulumi:"status"`
}

// FoundationCentralImageClusterClusterStatusNodeProgressDetailInput is an input type that accepts FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs and FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusNodeProgressDetailInput` via:
//
//	FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs{...}
type FoundationCentralImageClusterClusterStatusNodeProgressDetailInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput
	ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput
}

type FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs struct {
	ImagedNodeUuid  pulumi.StringPtrInput   `pulumi:"imagedNodeUuid"`
	ImagingStopped  pulumi.BoolPtrInput     `pulumi:"imagingStopped"`
	IntentPickedUp  pulumi.BoolPtrInput     `pulumi:"intentPickedUp"`
	MessageLists    pulumi.StringArrayInput `pulumi:"messageLists"`
	PercentComplete pulumi.Float64PtrInput  `pulumi:"percentComplete"`
	Status          pulumi.StringPtrInput   `pulumi:"status"`
}

func (FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatusNodeProgressDetail)(nil)).Elem()
}

func (i FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput {
	return i.ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput)
}

// FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayInput is an input type that accepts FoundationCentralImageClusterClusterStatusNodeProgressDetailArray and FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayInput` via:
//
//	FoundationCentralImageClusterClusterStatusNodeProgressDetailArray{ FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs{...} }
type FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput
	ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutputWithContext(context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput
}

type FoundationCentralImageClusterClusterStatusNodeProgressDetailArray []FoundationCentralImageClusterClusterStatusNodeProgressDetailInput

func (FoundationCentralImageClusterClusterStatusNodeProgressDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterClusterStatusNodeProgressDetail)(nil)).Elem()
}

func (i FoundationCentralImageClusterClusterStatusNodeProgressDetailArray) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return i.ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterClusterStatusNodeProgressDetailArray) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput)
}

type FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterClusterStatusNodeProgressDetail)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) ImagedNodeUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) *string { return v.ImagedNodeUuid }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) ImagingStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) *bool { return v.ImagingStopped }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) IntentPickedUp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) *bool { return v.IntentPickedUp }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) MessageLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) []string { return v.MessageLists }).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) PercentComplete() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) *float64 {
		return v.PercentComplete
	}).(pulumi.Float64PtrOutput)
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterClusterStatusNodeProgressDetail) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterClusterStatusNodeProgressDetail)(nil)).Elem()
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput() FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput) ToFoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput {
	return o
}

func (o FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterClusterStatusNodeProgressDetail {
		return vs[0].([]FoundationCentralImageClusterClusterStatusNodeProgressDetail)[vs[1].(int)]
	}).(FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput)
}

type FoundationCentralImageClusterCommonNetworkSettings struct {
	CvmDnsServers        []string `pulumi:"cvmDnsServers"`
	CvmNtpServers        []string `pulumi:"cvmNtpServers"`
	HypervisorDnsServers []string `pulumi:"hypervisorDnsServers"`
	HypervisorNtpServers []string `pulumi:"hypervisorNtpServers"`
}

// FoundationCentralImageClusterCommonNetworkSettingsInput is an input type that accepts FoundationCentralImageClusterCommonNetworkSettingsArgs and FoundationCentralImageClusterCommonNetworkSettingsOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterCommonNetworkSettingsInput` via:
//
//	FoundationCentralImageClusterCommonNetworkSettingsArgs{...}
type FoundationCentralImageClusterCommonNetworkSettingsInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterCommonNetworkSettingsOutput() FoundationCentralImageClusterCommonNetworkSettingsOutput
	ToFoundationCentralImageClusterCommonNetworkSettingsOutputWithContext(context.Context) FoundationCentralImageClusterCommonNetworkSettingsOutput
}

type FoundationCentralImageClusterCommonNetworkSettingsArgs struct {
	CvmDnsServers        pulumi.StringArrayInput `pulumi:"cvmDnsServers"`
	CvmNtpServers        pulumi.StringArrayInput `pulumi:"cvmNtpServers"`
	HypervisorDnsServers pulumi.StringArrayInput `pulumi:"hypervisorDnsServers"`
	HypervisorNtpServers pulumi.StringArrayInput `pulumi:"hypervisorNtpServers"`
}

func (FoundationCentralImageClusterCommonNetworkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterCommonNetworkSettings)(nil)).Elem()
}

func (i FoundationCentralImageClusterCommonNetworkSettingsArgs) ToFoundationCentralImageClusterCommonNetworkSettingsOutput() FoundationCentralImageClusterCommonNetworkSettingsOutput {
	return i.ToFoundationCentralImageClusterCommonNetworkSettingsOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterCommonNetworkSettingsArgs) ToFoundationCentralImageClusterCommonNetworkSettingsOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterCommonNetworkSettingsOutput)
}

func (i FoundationCentralImageClusterCommonNetworkSettingsArgs) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutput() FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return i.ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterCommonNetworkSettingsArgs) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterCommonNetworkSettingsOutput).ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(ctx)
}

// FoundationCentralImageClusterCommonNetworkSettingsPtrInput is an input type that accepts FoundationCentralImageClusterCommonNetworkSettingsArgs, FoundationCentralImageClusterCommonNetworkSettingsPtr and FoundationCentralImageClusterCommonNetworkSettingsPtrOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterCommonNetworkSettingsPtrInput` via:
//
//	        FoundationCentralImageClusterCommonNetworkSettingsArgs{...}
//
//	or:
//
//	        nil
type FoundationCentralImageClusterCommonNetworkSettingsPtrInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutput() FoundationCentralImageClusterCommonNetworkSettingsPtrOutput
	ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(context.Context) FoundationCentralImageClusterCommonNetworkSettingsPtrOutput
}

type foundationCentralImageClusterCommonNetworkSettingsPtrType FoundationCentralImageClusterCommonNetworkSettingsArgs

func FoundationCentralImageClusterCommonNetworkSettingsPtr(v *FoundationCentralImageClusterCommonNetworkSettingsArgs) FoundationCentralImageClusterCommonNetworkSettingsPtrInput {
	return (*foundationCentralImageClusterCommonNetworkSettingsPtrType)(v)
}

func (*foundationCentralImageClusterCommonNetworkSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterCommonNetworkSettings)(nil)).Elem()
}

func (i *foundationCentralImageClusterCommonNetworkSettingsPtrType) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutput() FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return i.ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(context.Background())
}

func (i *foundationCentralImageClusterCommonNetworkSettingsPtrType) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterCommonNetworkSettingsPtrOutput)
}

type FoundationCentralImageClusterCommonNetworkSettingsOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterCommonNetworkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterCommonNetworkSettings)(nil)).Elem()
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) ToFoundationCentralImageClusterCommonNetworkSettingsOutput() FoundationCentralImageClusterCommonNetworkSettingsOutput {
	return o
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) ToFoundationCentralImageClusterCommonNetworkSettingsOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsOutput {
	return o
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutput() FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return o.ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(context.Background())
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationCentralImageClusterCommonNetworkSettings) *FoundationCentralImageClusterCommonNetworkSettings {
		return &v
	}).(FoundationCentralImageClusterCommonNetworkSettingsPtrOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) CvmDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterCommonNetworkSettings) []string { return v.CvmDnsServers }).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) CvmNtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterCommonNetworkSettings) []string { return v.CvmNtpServers }).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) HypervisorDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterCommonNetworkSettings) []string { return v.HypervisorDnsServers }).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsOutput) HypervisorNtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterCommonNetworkSettings) []string { return v.HypervisorNtpServers }).(pulumi.StringArrayOutput)
}

type FoundationCentralImageClusterCommonNetworkSettingsPtrOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterCommonNetworkSettings)(nil)).Elem()
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutput() FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return o
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) ToFoundationCentralImageClusterCommonNetworkSettingsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterCommonNetworkSettingsPtrOutput {
	return o
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) Elem() FoundationCentralImageClusterCommonNetworkSettingsOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterCommonNetworkSettings) FoundationCentralImageClusterCommonNetworkSettings {
		if v != nil {
			return *v
		}
		var ret FoundationCentralImageClusterCommonNetworkSettings
		return ret
	}).(FoundationCentralImageClusterCommonNetworkSettingsOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) CvmDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterCommonNetworkSettings) []string {
		if v == nil {
			return nil
		}
		return v.CvmDnsServers
	}).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) CvmNtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterCommonNetworkSettings) []string {
		if v == nil {
			return nil
		}
		return v.CvmNtpServers
	}).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) HypervisorDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterCommonNetworkSettings) []string {
		if v == nil {
			return nil
		}
		return v.HypervisorDnsServers
	}).(pulumi.StringArrayOutput)
}

func (o FoundationCentralImageClusterCommonNetworkSettingsPtrOutput) HypervisorNtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterCommonNetworkSettings) []string {
		if v == nil {
			return nil
		}
		return v.HypervisorNtpServers
	}).(pulumi.StringArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfig struct {
	Blocks            []FoundationCentralImageClusterFoundationInitConfigBlock         `pulumi:"blocks"`
	Clusters          []FoundationCentralImageClusterFoundationInitConfigCluster       `pulumi:"clusters"`
	CvmGateway        *string                                                          `pulumi:"cvmGateway"`
	CvmNetmask        *string                                                          `pulumi:"cvmNetmask"`
	DnsServers        *string                                                          `pulumi:"dnsServers"`
	HypervProductKey  *string                                                          `pulumi:"hypervProductKey"`
	HypervSku         *string                                                          `pulumi:"hypervSku"`
	HypervisorGateway *string                                                          `pulumi:"hypervisorGateway"`
	HypervisorIsoUrl  map[string]string                                                `pulumi:"hypervisorIsoUrl"`
	HypervisorIsos    []FoundationCentralImageClusterFoundationInitConfigHypervisorIso `pulumi:"hypervisorIsos"`
	HypervisorNetmask *string                                                          `pulumi:"hypervisorNetmask"`
	IpmiGateway       *string                                                          `pulumi:"ipmiGateway"`
	IpmiNetmask       *string                                                          `pulumi:"ipmiNetmask"`
	NosPackageUrls    []FoundationCentralImageClusterFoundationInitConfigNosPackageUrl `pulumi:"nosPackageUrls"`
}

// FoundationCentralImageClusterFoundationInitConfigInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigArgs and FoundationCentralImageClusterFoundationInitConfigOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigArgs{...}
type FoundationCentralImageClusterFoundationInitConfigInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigOutput() FoundationCentralImageClusterFoundationInitConfigOutput
	ToFoundationCentralImageClusterFoundationInitConfigOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigOutput
}

type FoundationCentralImageClusterFoundationInitConfigArgs struct {
	Blocks            FoundationCentralImageClusterFoundationInitConfigBlockArrayInput         `pulumi:"blocks"`
	Clusters          FoundationCentralImageClusterFoundationInitConfigClusterArrayInput       `pulumi:"clusters"`
	CvmGateway        pulumi.StringPtrInput                                                    `pulumi:"cvmGateway"`
	CvmNetmask        pulumi.StringPtrInput                                                    `pulumi:"cvmNetmask"`
	DnsServers        pulumi.StringPtrInput                                                    `pulumi:"dnsServers"`
	HypervProductKey  pulumi.StringPtrInput                                                    `pulumi:"hypervProductKey"`
	HypervSku         pulumi.StringPtrInput                                                    `pulumi:"hypervSku"`
	HypervisorGateway pulumi.StringPtrInput                                                    `pulumi:"hypervisorGateway"`
	HypervisorIsoUrl  pulumi.StringMapInput                                                    `pulumi:"hypervisorIsoUrl"`
	HypervisorIsos    FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayInput `pulumi:"hypervisorIsos"`
	HypervisorNetmask pulumi.StringPtrInput                                                    `pulumi:"hypervisorNetmask"`
	IpmiGateway       pulumi.StringPtrInput                                                    `pulumi:"ipmiGateway"`
	IpmiNetmask       pulumi.StringPtrInput                                                    `pulumi:"ipmiNetmask"`
	NosPackageUrls    FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayInput `pulumi:"nosPackageUrls"`
}

func (FoundationCentralImageClusterFoundationInitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfig)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigArgs) ToFoundationCentralImageClusterFoundationInitConfigOutput() FoundationCentralImageClusterFoundationInitConfigOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigArgs) ToFoundationCentralImageClusterFoundationInitConfigOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigOutput)
}

// FoundationCentralImageClusterFoundationInitConfigArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigArray and FoundationCentralImageClusterFoundationInitConfigArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigArray{ FoundationCentralImageClusterFoundationInitConfigArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigArrayOutput() FoundationCentralImageClusterFoundationInitConfigArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigArray []FoundationCentralImageClusterFoundationInitConfigInput

func (FoundationCentralImageClusterFoundationInitConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfig)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigArray) ToFoundationCentralImageClusterFoundationInitConfigArrayOutput() FoundationCentralImageClusterFoundationInitConfigArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigArray) ToFoundationCentralImageClusterFoundationInitConfigArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfig)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) ToFoundationCentralImageClusterFoundationInitConfigOutput() FoundationCentralImageClusterFoundationInitConfigOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) ToFoundationCentralImageClusterFoundationInitConfigOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) Blocks() FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) []FoundationCentralImageClusterFoundationInitConfigBlock {
		return v.Blocks
	}).(FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) Clusters() FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) []FoundationCentralImageClusterFoundationInitConfigCluster {
		return v.Clusters
	}).(FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) CvmGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.CvmGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) CvmNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.CvmNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) DnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.DnsServers }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.HypervProductKey }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.HypervSku }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervisorGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.HypervisorGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervisorIsoUrl() pulumi.StringMapOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) map[string]string { return v.HypervisorIsoUrl }).(pulumi.StringMapOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervisorIsos() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) []FoundationCentralImageClusterFoundationInitConfigHypervisorIso {
		return v.HypervisorIsos
	}).(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) HypervisorNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.HypervisorNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) IpmiGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.IpmiGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) IpmiNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) *string { return v.IpmiNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigOutput) NosPackageUrls() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfig) []FoundationCentralImageClusterFoundationInitConfigNosPackageUrl {
		return v.NosPackageUrls
	}).(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfig)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigArrayOutput() FoundationCentralImageClusterFoundationInitConfigArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfig {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfig)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlock struct {
	BlockId *string                                                      `pulumi:"blockId"`
	Nodes   []FoundationCentralImageClusterFoundationInitConfigBlockNode `pulumi:"nodes"`
}

// FoundationCentralImageClusterFoundationInitConfigBlockInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigBlockArgs and FoundationCentralImageClusterFoundationInitConfigBlockOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigBlockInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigBlockArgs{...}
type FoundationCentralImageClusterFoundationInitConfigBlockInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigBlockOutput() FoundationCentralImageClusterFoundationInitConfigBlockOutput
	ToFoundationCentralImageClusterFoundationInitConfigBlockOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigBlockOutput
}

type FoundationCentralImageClusterFoundationInitConfigBlockArgs struct {
	BlockId pulumi.StringPtrInput                                                `pulumi:"blockId"`
	Nodes   FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayInput `pulumi:"nodes"`
}

func (FoundationCentralImageClusterFoundationInitConfigBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlock)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockArgs) ToFoundationCentralImageClusterFoundationInitConfigBlockOutput() FoundationCentralImageClusterFoundationInitConfigBlockOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigBlockOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockArgs) ToFoundationCentralImageClusterFoundationInitConfigBlockOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigBlockOutput)
}

// FoundationCentralImageClusterFoundationInitConfigBlockArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigBlockArray and FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigBlockArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigBlockArray{ FoundationCentralImageClusterFoundationInitConfigBlockArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigBlockArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigBlockArray []FoundationCentralImageClusterFoundationInitConfigBlockInput

func (FoundationCentralImageClusterFoundationInitConfigBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigBlock)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockArray) ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockArray) ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlockOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlock)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockOutput() FoundationCentralImageClusterFoundationInitConfigBlockOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockOutput) BlockId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlock) *string { return v.BlockId }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockOutput) Nodes() FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlock) []FoundationCentralImageClusterFoundationInitConfigBlockNode {
		return v.Nodes
	}).(FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigBlock)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfigBlock {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfigBlock)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigBlockOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlockNode struct {
	CvmIp                      *string           `pulumi:"cvmIp"`
	CvmVlanId                  *int              `pulumi:"cvmVlanId"`
	FcImagedNodeUuid           *string           `pulumi:"fcImagedNodeUuid"`
	HardwareAttributesOverride map[string]string `pulumi:"hardwareAttributesOverride"`
	Hypervisor                 *string           `pulumi:"hypervisor"`
	HypervisorHostname         *string           `pulumi:"hypervisorHostname"`
	HypervisorIp               *string           `pulumi:"hypervisorIp"`
	ImageNow                   *bool             `pulumi:"imageNow"`
	IpmiIp                     *string           `pulumi:"ipmiIp"`
	Ipv6Address                *string           `pulumi:"ipv6Address"`
	NodePosition               *string           `pulumi:"nodePosition"`
	NodeSerial                 *string           `pulumi:"nodeSerial"`
}

// FoundationCentralImageClusterFoundationInitConfigBlockNodeInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs and FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigBlockNodeInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs{...}
type FoundationCentralImageClusterFoundationInitConfigBlockNodeInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput
	ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput
}

type FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs struct {
	CvmIp                      pulumi.StringPtrInput `pulumi:"cvmIp"`
	CvmVlanId                  pulumi.IntPtrInput    `pulumi:"cvmVlanId"`
	FcImagedNodeUuid           pulumi.StringPtrInput `pulumi:"fcImagedNodeUuid"`
	HardwareAttributesOverride pulumi.StringMapInput `pulumi:"hardwareAttributesOverride"`
	Hypervisor                 pulumi.StringPtrInput `pulumi:"hypervisor"`
	HypervisorHostname         pulumi.StringPtrInput `pulumi:"hypervisorHostname"`
	HypervisorIp               pulumi.StringPtrInput `pulumi:"hypervisorIp"`
	ImageNow                   pulumi.BoolPtrInput   `pulumi:"imageNow"`
	IpmiIp                     pulumi.StringPtrInput `pulumi:"ipmiIp"`
	Ipv6Address                pulumi.StringPtrInput `pulumi:"ipv6Address"`
	NodePosition               pulumi.StringPtrInput `pulumi:"nodePosition"`
	NodeSerial                 pulumi.StringPtrInput `pulumi:"nodeSerial"`
}

func (FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockNode)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput)
}

// FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigBlockNodeArray and FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigBlockNodeArray{ FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigBlockNodeArray []FoundationCentralImageClusterFoundationInitConfigBlockNodeInput

func (FoundationCentralImageClusterFoundationInitConfigBlockNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigBlockNode)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockNodeArray) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigBlockNodeArray) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockNode)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) CvmIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.CvmIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) CvmVlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *int { return v.CvmVlanId }).(pulumi.IntPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) FcImagedNodeUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.FcImagedNodeUuid }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) HardwareAttributesOverride() pulumi.StringMapOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) map[string]string {
		return v.HardwareAttributesOverride
	}).(pulumi.StringMapOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) Hypervisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.Hypervisor }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) HypervisorHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string {
		return v.HypervisorHostname
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) HypervisorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.HypervisorIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) ImageNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *bool { return v.ImageNow }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) IpmiIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.IpmiIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) NodePosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.NodePosition }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput) NodeSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigBlockNode) *string { return v.NodeSerial }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigBlockNode)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput() FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfigBlockNode {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfigBlockNode)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput)
}

type FoundationCentralImageClusterFoundationInitConfigCluster struct {
	// External management ip of the cluster.
	ClusterExternalIp     *string  `pulumi:"clusterExternalIp"`
	ClusterInitNow        *bool    `pulumi:"clusterInitNow"`
	ClusterInitSuccessful *bool    `pulumi:"clusterInitSuccessful"`
	ClusterMembers        []string `pulumi:"clusterMembers"`
	// Name of the cluster.
	ClusterName   *string `pulumi:"clusterName"`
	CvmDnsServers *string `pulumi:"cvmDnsServers"`
	CvmNtpServers *string `pulumi:"cvmNtpServers"`
	// Redundancy factor of the cluster.
	RedundancyFactor *int `pulumi:"redundancyFactor"`
	// Timezone to be set on the cluster.
	Timezone *string `pulumi:"timezone"`
}

// FoundationCentralImageClusterFoundationInitConfigClusterInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigClusterArgs and FoundationCentralImageClusterFoundationInitConfigClusterOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigClusterInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigClusterArgs{...}
type FoundationCentralImageClusterFoundationInitConfigClusterInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigClusterOutput() FoundationCentralImageClusterFoundationInitConfigClusterOutput
	ToFoundationCentralImageClusterFoundationInitConfigClusterOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigClusterOutput
}

type FoundationCentralImageClusterFoundationInitConfigClusterArgs struct {
	// External management ip of the cluster.
	ClusterExternalIp     pulumi.StringPtrInput   `pulumi:"clusterExternalIp"`
	ClusterInitNow        pulumi.BoolPtrInput     `pulumi:"clusterInitNow"`
	ClusterInitSuccessful pulumi.BoolPtrInput     `pulumi:"clusterInitSuccessful"`
	ClusterMembers        pulumi.StringArrayInput `pulumi:"clusterMembers"`
	// Name of the cluster.
	ClusterName   pulumi.StringPtrInput `pulumi:"clusterName"`
	CvmDnsServers pulumi.StringPtrInput `pulumi:"cvmDnsServers"`
	CvmNtpServers pulumi.StringPtrInput `pulumi:"cvmNtpServers"`
	// Redundancy factor of the cluster.
	RedundancyFactor pulumi.IntPtrInput `pulumi:"redundancyFactor"`
	// Timezone to be set on the cluster.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (FoundationCentralImageClusterFoundationInitConfigClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigCluster)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigClusterArgs) ToFoundationCentralImageClusterFoundationInitConfigClusterOutput() FoundationCentralImageClusterFoundationInitConfigClusterOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigClusterOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigClusterArgs) ToFoundationCentralImageClusterFoundationInitConfigClusterOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigClusterOutput)
}

// FoundationCentralImageClusterFoundationInitConfigClusterArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigClusterArray and FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigClusterArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigClusterArray{ FoundationCentralImageClusterFoundationInitConfigClusterArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigClusterArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutput() FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigClusterArray []FoundationCentralImageClusterFoundationInitConfigClusterInput

func (FoundationCentralImageClusterFoundationInitConfigClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigCluster)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigClusterArray) ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutput() FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigClusterArray) ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigClusterOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigCluster)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ToFoundationCentralImageClusterFoundationInitConfigClusterOutput() FoundationCentralImageClusterFoundationInitConfigClusterOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ToFoundationCentralImageClusterFoundationInitConfigClusterOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigClusterOutput {
	return o
}

// External management ip of the cluster.
func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ClusterExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *string { return v.ClusterExternalIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ClusterInitNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *bool { return v.ClusterInitNow }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ClusterInitSuccessful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *bool { return v.ClusterInitSuccessful }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ClusterMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) []string { return v.ClusterMembers }).(pulumi.StringArrayOutput)
}

// Name of the cluster.
func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) CvmDnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *string { return v.CvmDnsServers }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) CvmNtpServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *string { return v.CvmNtpServers }).(pulumi.StringPtrOutput)
}

// Redundancy factor of the cluster.
func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) RedundancyFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *int { return v.RedundancyFactor }).(pulumi.IntPtrOutput)
}

// Timezone to be set on the cluster.
func (o FoundationCentralImageClusterFoundationInitConfigClusterOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigCluster) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigCluster)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutput() FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigClusterArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfigCluster {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfigCluster)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigClusterOutput)
}

type FoundationCentralImageClusterFoundationInitConfigHypervisorIso struct {
	HypervisorType *string `pulumi:"hypervisorType"`
	Sha256sum      *string `pulumi:"sha256sum"`
	Url            *string `pulumi:"url"`
}

// FoundationCentralImageClusterFoundationInitConfigHypervisorIsoInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs and FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigHypervisorIsoInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs{...}
type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput
	ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput
}

type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs struct {
	HypervisorType pulumi.StringPtrInput `pulumi:"hypervisorType"`
	Sha256sum      pulumi.StringPtrInput `pulumi:"sha256sum"`
	Url            pulumi.StringPtrInput `pulumi:"url"`
}

func (FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigHypervisorIso)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput)
}

// FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray and FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray{ FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray []FoundationCentralImageClusterFoundationInitConfigHypervisorIsoInput

func (FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigHypervisorIso)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigHypervisorIso)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) HypervisorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigHypervisorIso) *string {
		return v.HypervisorType
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigHypervisorIso) *string { return v.Sha256sum }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigHypervisorIso) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigHypervisorIso)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput() FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfigHypervisorIso {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfigHypervisorIso)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput)
}

type FoundationCentralImageClusterFoundationInitConfigNosPackageUrl struct {
	Sha256sum *string `pulumi:"sha256sum"`
	Url       *string `pulumi:"url"`
}

// FoundationCentralImageClusterFoundationInitConfigNosPackageUrlInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs and FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigNosPackageUrlInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs{...}
type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput
	ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput
}

type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs struct {
	Sha256sum pulumi.StringPtrInput `pulumi:"sha256sum"`
	Url       pulumi.StringPtrInput `pulumi:"url"`
}

func (FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigNosPackageUrl)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput)
}

// FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayInput is an input type that accepts FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray and FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayInput` via:
//
//	FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray{ FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs{...} }
type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput
	ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutputWithContext(context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput
}

type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray []FoundationCentralImageClusterFoundationInitConfigNosPackageUrlInput

func (FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigNosPackageUrl)(nil)).Elem()
}

func (i FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput {
	return i.ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput)
}

type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigNosPackageUrl)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigNosPackageUrl) *string { return v.Sha256sum }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterFoundationInitConfigNosPackageUrl) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterFoundationInitConfigNosPackageUrl)(nil)).Elem()
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput() FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput) ToFoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput {
	return o
}

func (o FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterFoundationInitConfigNosPackageUrl {
		return vs[0].([]FoundationCentralImageClusterFoundationInitConfigNosPackageUrl)[vs[1].(int)]
	}).(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput)
}

type FoundationCentralImageClusterHypervisorIsoDetails struct {
	HypervProductKey *string `pulumi:"hypervProductKey"`
	HypervSku        *string `pulumi:"hypervSku"`
	Sha256sum        *string `pulumi:"sha256sum"`
	Url              *string `pulumi:"url"`
}

// FoundationCentralImageClusterHypervisorIsoDetailsInput is an input type that accepts FoundationCentralImageClusterHypervisorIsoDetailsArgs and FoundationCentralImageClusterHypervisorIsoDetailsOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterHypervisorIsoDetailsInput` via:
//
//	FoundationCentralImageClusterHypervisorIsoDetailsArgs{...}
type FoundationCentralImageClusterHypervisorIsoDetailsInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterHypervisorIsoDetailsOutput() FoundationCentralImageClusterHypervisorIsoDetailsOutput
	ToFoundationCentralImageClusterHypervisorIsoDetailsOutputWithContext(context.Context) FoundationCentralImageClusterHypervisorIsoDetailsOutput
}

type FoundationCentralImageClusterHypervisorIsoDetailsArgs struct {
	HypervProductKey pulumi.StringPtrInput `pulumi:"hypervProductKey"`
	HypervSku        pulumi.StringPtrInput `pulumi:"hypervSku"`
	Sha256sum        pulumi.StringPtrInput `pulumi:"sha256sum"`
	Url              pulumi.StringPtrInput `pulumi:"url"`
}

func (FoundationCentralImageClusterHypervisorIsoDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterHypervisorIsoDetails)(nil)).Elem()
}

func (i FoundationCentralImageClusterHypervisorIsoDetailsArgs) ToFoundationCentralImageClusterHypervisorIsoDetailsOutput() FoundationCentralImageClusterHypervisorIsoDetailsOutput {
	return i.ToFoundationCentralImageClusterHypervisorIsoDetailsOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterHypervisorIsoDetailsArgs) ToFoundationCentralImageClusterHypervisorIsoDetailsOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterHypervisorIsoDetailsOutput)
}

func (i FoundationCentralImageClusterHypervisorIsoDetailsArgs) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutput() FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return i.ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterHypervisorIsoDetailsArgs) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterHypervisorIsoDetailsOutput).ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(ctx)
}

// FoundationCentralImageClusterHypervisorIsoDetailsPtrInput is an input type that accepts FoundationCentralImageClusterHypervisorIsoDetailsArgs, FoundationCentralImageClusterHypervisorIsoDetailsPtr and FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterHypervisorIsoDetailsPtrInput` via:
//
//	        FoundationCentralImageClusterHypervisorIsoDetailsArgs{...}
//
//	or:
//
//	        nil
type FoundationCentralImageClusterHypervisorIsoDetailsPtrInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutput() FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput
	ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(context.Context) FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput
}

type foundationCentralImageClusterHypervisorIsoDetailsPtrType FoundationCentralImageClusterHypervisorIsoDetailsArgs

func FoundationCentralImageClusterHypervisorIsoDetailsPtr(v *FoundationCentralImageClusterHypervisorIsoDetailsArgs) FoundationCentralImageClusterHypervisorIsoDetailsPtrInput {
	return (*foundationCentralImageClusterHypervisorIsoDetailsPtrType)(v)
}

func (*foundationCentralImageClusterHypervisorIsoDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterHypervisorIsoDetails)(nil)).Elem()
}

func (i *foundationCentralImageClusterHypervisorIsoDetailsPtrType) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutput() FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return i.ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(context.Background())
}

func (i *foundationCentralImageClusterHypervisorIsoDetailsPtrType) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput)
}

type FoundationCentralImageClusterHypervisorIsoDetailsOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterHypervisorIsoDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterHypervisorIsoDetails)(nil)).Elem()
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsOutput() FoundationCentralImageClusterHypervisorIsoDetailsOutput {
	return o
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsOutput {
	return o
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutput() FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return o.ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(context.Background())
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationCentralImageClusterHypervisorIsoDetails) *FoundationCentralImageClusterHypervisorIsoDetails {
		return &v
	}).(FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) HypervProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterHypervisorIsoDetails) *string { return v.HypervProductKey }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) HypervSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterHypervisorIsoDetails) *string { return v.HypervSku }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterHypervisorIsoDetails) *string { return v.Sha256sum }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterHypervisorIsoDetails) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationCentralImageClusterHypervisorIsoDetails)(nil)).Elem()
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutput() FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return o
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) ToFoundationCentralImageClusterHypervisorIsoDetailsPtrOutputWithContext(ctx context.Context) FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput {
	return o
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) Elem() FoundationCentralImageClusterHypervisorIsoDetailsOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterHypervisorIsoDetails) FoundationCentralImageClusterHypervisorIsoDetails {
		if v != nil {
			return *v
		}
		var ret FoundationCentralImageClusterHypervisorIsoDetails
		return ret
	}).(FoundationCentralImageClusterHypervisorIsoDetailsOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) HypervProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterHypervisorIsoDetails) *string {
		if v == nil {
			return nil
		}
		return v.HypervProductKey
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) HypervSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterHypervisorIsoDetails) *string {
		if v == nil {
			return nil
		}
		return v.HypervSku
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterHypervisorIsoDetails) *string {
		if v == nil {
			return nil
		}
		return v.Sha256sum
	}).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationCentralImageClusterHypervisorIsoDetails) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type FoundationCentralImageClusterNodeList struct {
	CvmGateway                 *string                `pulumi:"cvmGateway"`
	CvmIp                      *string                `pulumi:"cvmIp"`
	CvmNetmask                 *string                `pulumi:"cvmNetmask"`
	CvmRamGb                   *int                   `pulumi:"cvmRamGb"`
	CvmVlanId                  *int                   `pulumi:"cvmVlanId"`
	HardwareAttributesOverride map[string]interface{} `pulumi:"hardwareAttributesOverride"`
	HypervisorGateway          *string                `pulumi:"hypervisorGateway"`
	HypervisorHostname         *string                `pulumi:"hypervisorHostname"`
	HypervisorIp               *string                `pulumi:"hypervisorIp"`
	HypervisorNetmask          *string                `pulumi:"hypervisorNetmask"`
	HypervisorType             *string                `pulumi:"hypervisorType"`
	ImageNow                   *bool                  `pulumi:"imageNow"`
	ImagedNodeUuid             *string                `pulumi:"imagedNodeUuid"`
	IpmiGateway                *string                `pulumi:"ipmiGateway"`
	IpmiIp                     *string                `pulumi:"ipmiIp"`
	IpmiNetmask                *string                `pulumi:"ipmiNetmask"`
	RdmaPassthrough            *bool                  `pulumi:"rdmaPassthrough"`
	UseExistingNetworkSettings *bool                  `pulumi:"useExistingNetworkSettings"`
}

// FoundationCentralImageClusterNodeListInput is an input type that accepts FoundationCentralImageClusterNodeListArgs and FoundationCentralImageClusterNodeListOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterNodeListInput` via:
//
//	FoundationCentralImageClusterNodeListArgs{...}
type FoundationCentralImageClusterNodeListInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterNodeListOutput() FoundationCentralImageClusterNodeListOutput
	ToFoundationCentralImageClusterNodeListOutputWithContext(context.Context) FoundationCentralImageClusterNodeListOutput
}

type FoundationCentralImageClusterNodeListArgs struct {
	CvmGateway                 pulumi.StringPtrInput `pulumi:"cvmGateway"`
	CvmIp                      pulumi.StringPtrInput `pulumi:"cvmIp"`
	CvmNetmask                 pulumi.StringPtrInput `pulumi:"cvmNetmask"`
	CvmRamGb                   pulumi.IntPtrInput    `pulumi:"cvmRamGb"`
	CvmVlanId                  pulumi.IntPtrInput    `pulumi:"cvmVlanId"`
	HardwareAttributesOverride pulumi.MapInput       `pulumi:"hardwareAttributesOverride"`
	HypervisorGateway          pulumi.StringPtrInput `pulumi:"hypervisorGateway"`
	HypervisorHostname         pulumi.StringPtrInput `pulumi:"hypervisorHostname"`
	HypervisorIp               pulumi.StringPtrInput `pulumi:"hypervisorIp"`
	HypervisorNetmask          pulumi.StringPtrInput `pulumi:"hypervisorNetmask"`
	HypervisorType             pulumi.StringPtrInput `pulumi:"hypervisorType"`
	ImageNow                   pulumi.BoolPtrInput   `pulumi:"imageNow"`
	ImagedNodeUuid             pulumi.StringPtrInput `pulumi:"imagedNodeUuid"`
	IpmiGateway                pulumi.StringPtrInput `pulumi:"ipmiGateway"`
	IpmiIp                     pulumi.StringPtrInput `pulumi:"ipmiIp"`
	IpmiNetmask                pulumi.StringPtrInput `pulumi:"ipmiNetmask"`
	RdmaPassthrough            pulumi.BoolPtrInput   `pulumi:"rdmaPassthrough"`
	UseExistingNetworkSettings pulumi.BoolPtrInput   `pulumi:"useExistingNetworkSettings"`
}

func (FoundationCentralImageClusterNodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterNodeList)(nil)).Elem()
}

func (i FoundationCentralImageClusterNodeListArgs) ToFoundationCentralImageClusterNodeListOutput() FoundationCentralImageClusterNodeListOutput {
	return i.ToFoundationCentralImageClusterNodeListOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterNodeListArgs) ToFoundationCentralImageClusterNodeListOutputWithContext(ctx context.Context) FoundationCentralImageClusterNodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterNodeListOutput)
}

// FoundationCentralImageClusterNodeListArrayInput is an input type that accepts FoundationCentralImageClusterNodeListArray and FoundationCentralImageClusterNodeListArrayOutput values.
// You can construct a concrete instance of `FoundationCentralImageClusterNodeListArrayInput` via:
//
//	FoundationCentralImageClusterNodeListArray{ FoundationCentralImageClusterNodeListArgs{...} }
type FoundationCentralImageClusterNodeListArrayInput interface {
	pulumi.Input

	ToFoundationCentralImageClusterNodeListArrayOutput() FoundationCentralImageClusterNodeListArrayOutput
	ToFoundationCentralImageClusterNodeListArrayOutputWithContext(context.Context) FoundationCentralImageClusterNodeListArrayOutput
}

type FoundationCentralImageClusterNodeListArray []FoundationCentralImageClusterNodeListInput

func (FoundationCentralImageClusterNodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterNodeList)(nil)).Elem()
}

func (i FoundationCentralImageClusterNodeListArray) ToFoundationCentralImageClusterNodeListArrayOutput() FoundationCentralImageClusterNodeListArrayOutput {
	return i.ToFoundationCentralImageClusterNodeListArrayOutputWithContext(context.Background())
}

func (i FoundationCentralImageClusterNodeListArray) ToFoundationCentralImageClusterNodeListArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterNodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationCentralImageClusterNodeListArrayOutput)
}

type FoundationCentralImageClusterNodeListOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterNodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationCentralImageClusterNodeList)(nil)).Elem()
}

func (o FoundationCentralImageClusterNodeListOutput) ToFoundationCentralImageClusterNodeListOutput() FoundationCentralImageClusterNodeListOutput {
	return o
}

func (o FoundationCentralImageClusterNodeListOutput) ToFoundationCentralImageClusterNodeListOutputWithContext(ctx context.Context) FoundationCentralImageClusterNodeListOutput {
	return o
}

func (o FoundationCentralImageClusterNodeListOutput) CvmGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.CvmGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) CvmIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.CvmIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) CvmNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.CvmNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) CvmRamGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *int { return v.CvmRamGb }).(pulumi.IntPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) CvmVlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *int { return v.CvmVlanId }).(pulumi.IntPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HardwareAttributesOverride() pulumi.MapOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) map[string]interface{} {
		return v.HardwareAttributesOverride
	}).(pulumi.MapOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HypervisorGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.HypervisorGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HypervisorHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.HypervisorHostname }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HypervisorIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.HypervisorIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HypervisorNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.HypervisorNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) HypervisorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.HypervisorType }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) ImageNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *bool { return v.ImageNow }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) ImagedNodeUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.ImagedNodeUuid }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) IpmiGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.IpmiGateway }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) IpmiIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.IpmiIp }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) IpmiNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *string { return v.IpmiNetmask }).(pulumi.StringPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) RdmaPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *bool { return v.RdmaPassthrough }).(pulumi.BoolPtrOutput)
}

func (o FoundationCentralImageClusterNodeListOutput) UseExistingNetworkSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationCentralImageClusterNodeList) *bool { return v.UseExistingNetworkSettings }).(pulumi.BoolPtrOutput)
}

type FoundationCentralImageClusterNodeListArrayOutput struct{ *pulumi.OutputState }

func (FoundationCentralImageClusterNodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationCentralImageClusterNodeList)(nil)).Elem()
}

func (o FoundationCentralImageClusterNodeListArrayOutput) ToFoundationCentralImageClusterNodeListArrayOutput() FoundationCentralImageClusterNodeListArrayOutput {
	return o
}

func (o FoundationCentralImageClusterNodeListArrayOutput) ToFoundationCentralImageClusterNodeListArrayOutputWithContext(ctx context.Context) FoundationCentralImageClusterNodeListArrayOutput {
	return o
}

func (o FoundationCentralImageClusterNodeListArrayOutput) Index(i pulumi.IntInput) FoundationCentralImageClusterNodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationCentralImageClusterNodeList {
		return vs[0].([]FoundationCentralImageClusterNodeList)[vs[1].(int)]
	}).(FoundationCentralImageClusterNodeListOutput)
}

type FoundationImageNodesBlock struct {
	// - Block ID.
	BlockId *string                         `pulumi:"blockId"`
	Nodes   []FoundationImageNodesBlockNode `pulumi:"nodes"`
}

// FoundationImageNodesBlockInput is an input type that accepts FoundationImageNodesBlockArgs and FoundationImageNodesBlockOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockInput` via:
//
//	FoundationImageNodesBlockArgs{...}
type FoundationImageNodesBlockInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockOutput() FoundationImageNodesBlockOutput
	ToFoundationImageNodesBlockOutputWithContext(context.Context) FoundationImageNodesBlockOutput
}

type FoundationImageNodesBlockArgs struct {
	// - Block ID.
	BlockId pulumi.StringPtrInput                   `pulumi:"blockId"`
	Nodes   FoundationImageNodesBlockNodeArrayInput `pulumi:"nodes"`
}

func (FoundationImageNodesBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlock)(nil)).Elem()
}

func (i FoundationImageNodesBlockArgs) ToFoundationImageNodesBlockOutput() FoundationImageNodesBlockOutput {
	return i.ToFoundationImageNodesBlockOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockArgs) ToFoundationImageNodesBlockOutputWithContext(ctx context.Context) FoundationImageNodesBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockOutput)
}

// FoundationImageNodesBlockArrayInput is an input type that accepts FoundationImageNodesBlockArray and FoundationImageNodesBlockArrayOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockArrayInput` via:
//
//	FoundationImageNodesBlockArray{ FoundationImageNodesBlockArgs{...} }
type FoundationImageNodesBlockArrayInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockArrayOutput() FoundationImageNodesBlockArrayOutput
	ToFoundationImageNodesBlockArrayOutputWithContext(context.Context) FoundationImageNodesBlockArrayOutput
}

type FoundationImageNodesBlockArray []FoundationImageNodesBlockInput

func (FoundationImageNodesBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlock)(nil)).Elem()
}

func (i FoundationImageNodesBlockArray) ToFoundationImageNodesBlockArrayOutput() FoundationImageNodesBlockArrayOutput {
	return i.ToFoundationImageNodesBlockArrayOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockArray) ToFoundationImageNodesBlockArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockArrayOutput)
}

type FoundationImageNodesBlockOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlock)(nil)).Elem()
}

func (o FoundationImageNodesBlockOutput) ToFoundationImageNodesBlockOutput() FoundationImageNodesBlockOutput {
	return o
}

func (o FoundationImageNodesBlockOutput) ToFoundationImageNodesBlockOutputWithContext(ctx context.Context) FoundationImageNodesBlockOutput {
	return o
}

// - Block ID.
func (o FoundationImageNodesBlockOutput) BlockId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlock) *string { return v.BlockId }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockOutput) Nodes() FoundationImageNodesBlockNodeArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesBlock) []FoundationImageNodesBlockNode { return v.Nodes }).(FoundationImageNodesBlockNodeArrayOutput)
}

type FoundationImageNodesBlockArrayOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlock)(nil)).Elem()
}

func (o FoundationImageNodesBlockArrayOutput) ToFoundationImageNodesBlockArrayOutput() FoundationImageNodesBlockArrayOutput {
	return o
}

func (o FoundationImageNodesBlockArrayOutput) ToFoundationImageNodesBlockArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockArrayOutput {
	return o
}

func (o FoundationImageNodesBlockArrayOutput) Index(i pulumi.IntInput) FoundationImageNodesBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationImageNodesBlock {
		return vs[0].([]FoundationImageNodesBlock)[vs[1].(int)]
	}).(FoundationImageNodesBlockOutput)
}

type FoundationImageNodesBlockNode struct {
	// - (Required if node is lacp configured) slow or fast if lacp if being used at the switch
	BondLacpRate *string `pulumi:"bondLacpRate"`
	// - (Required if node is capable) dynamic if using LACP, static for LAG
	BondMode *string `pulumi:"bondMode"`
	// - MAC Addresses of NICs in a team/bond
	BondUplinks *string `pulumi:"bondUplinks"`
	// - ID of cluster.
	ClusterId *string `pulumi:"clusterId"`
	// - Current CVM vlan tag. 0 Value with remove vlan tag.
	CurrentCvmVlanTag *int `pulumi:"currentCvmVlanTag"`
	// - CVM current network interface.
	CurrentNetworkInterface *string `pulumi:"currentNetworkInterface"`
	// - RAM capacity of CVM in GB.
	CvmGbRam *int    `pulumi:"cvmGbRam"`
	CvmIp    *string `pulumi:"cvmIp"`
	// - Number of CVM vcpus.
	CvmNumVcpus *int `pulumi:"cvmNumVcpus"`
	// - use "vmInstaller" to enable CVM imaging from standalone.
	DeviceHint *string `pulumi:"deviceHint"`
	// - serial of boot device to be excluded (used by NX G6 platforms)
	ExludeBootSerial *string `pulumi:"exludeBootSerial"`
	Hypervisor       *string `pulumi:"hypervisor"`
	// - (Required) Hypervisor Hostname.
	HypervisorHostname string `pulumi:"hypervisorHostname"`
	// - (Required) Hypervisor IP address.
	HypervisorIp string `pulumi:"hypervisorIp"`
	// - Imaging delay.
	ImageDelay *int `pulumi:"imageDelay"`
	// - (Optional, Default = true) If the node should be imaged now.
	ImageNow        *bool `pulumi:"imageNow"`
	ImageSuccessful *bool `pulumi:"imageSuccessful"`
	// - Whether IPMI should be configured.
	IpmiConfigureNow *bool `pulumi:"ipmiConfigureNow"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI gateway for this node
	IpmiGateway *string `pulumi:"ipmiGateway"`
	// - (Required) IPMI IP address.
	IpmiIp *string `pulumi:"ipmiIp"`
	// - IPMI MAC address.
	IpmiMac *string `pulumi:"ipmiMac"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI netmask for this node
	IpmiNetmask *string `pulumi:"ipmiNetmask"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI username
	IpmiPassword *string `pulumi:"ipmiPassword"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI password
	IpmiUser *string `pulumi:"ipmiUser"`
	// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) IPV6 address.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) ipv6 interface.
	Ipv6Interface *string `pulumi:"ipv6Interface"`
	// - relocate bootbank files to make space for phoenix files.
	MitigateLowBootSpace *bool `pulumi:"mitigateLowBootSpace"`
	// - (Required) Position of the node in the block.
	NodePosition string `pulumi:"nodePosition"`
	// - serial number of the node.
	NodeSerial *string `pulumi:"nodeSerial"`
	// - mac address of nic to be used for rdma
	RdmaMacAddr *string `pulumi:"rdmaMacAddr"`
	// - (Required if node is capable) passthru RDMA nic to CVM if possible, default to false
	RdmaPassthrough *bool `pulumi:"rdmaPassthrough"`
	// - UCSM Managed mode.
	UcsmManagedMode *string `pulumi:"ucsmManagedMode"`
	// - UCSM node serial.
	UcsmNodeSerial *string `pulumi:"ucsmNodeSerial"`
	// - Object of UCSM parameters.
	// * `ucsm_params.native_vlan` :- If the vlan is native.
	// * `ucsm_params.keep_ucsm_settings` :- Whether UCSM settings should be kept.
	// * `ucsm_params.mac_pool` :- Mac address pool.
	// * `ucsm_params.vlan_name` :- Name of vlan.
	UcsmParams *FoundationImageNodesBlockNodeUcsmParams `pulumi:"ucsmParams"`
	Vswitches  []FoundationImageNodesBlockNodeVswitch   `pulumi:"vswitches"`
}

// FoundationImageNodesBlockNodeInput is an input type that accepts FoundationImageNodesBlockNodeArgs and FoundationImageNodesBlockNodeOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeInput` via:
//
//	FoundationImageNodesBlockNodeArgs{...}
type FoundationImageNodesBlockNodeInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeOutput() FoundationImageNodesBlockNodeOutput
	ToFoundationImageNodesBlockNodeOutputWithContext(context.Context) FoundationImageNodesBlockNodeOutput
}

type FoundationImageNodesBlockNodeArgs struct {
	// - (Required if node is lacp configured) slow or fast if lacp if being used at the switch
	BondLacpRate pulumi.StringPtrInput `pulumi:"bondLacpRate"`
	// - (Required if node is capable) dynamic if using LACP, static for LAG
	BondMode pulumi.StringPtrInput `pulumi:"bondMode"`
	// - MAC Addresses of NICs in a team/bond
	BondUplinks pulumi.StringPtrInput `pulumi:"bondUplinks"`
	// - ID of cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// - Current CVM vlan tag. 0 Value with remove vlan tag.
	CurrentCvmVlanTag pulumi.IntPtrInput `pulumi:"currentCvmVlanTag"`
	// - CVM current network interface.
	CurrentNetworkInterface pulumi.StringPtrInput `pulumi:"currentNetworkInterface"`
	// - RAM capacity of CVM in GB.
	CvmGbRam pulumi.IntPtrInput    `pulumi:"cvmGbRam"`
	CvmIp    pulumi.StringPtrInput `pulumi:"cvmIp"`
	// - Number of CVM vcpus.
	CvmNumVcpus pulumi.IntPtrInput `pulumi:"cvmNumVcpus"`
	// - use "vmInstaller" to enable CVM imaging from standalone.
	DeviceHint pulumi.StringPtrInput `pulumi:"deviceHint"`
	// - serial of boot device to be excluded (used by NX G6 platforms)
	ExludeBootSerial pulumi.StringPtrInput `pulumi:"exludeBootSerial"`
	Hypervisor       pulumi.StringPtrInput `pulumi:"hypervisor"`
	// - (Required) Hypervisor Hostname.
	HypervisorHostname pulumi.StringInput `pulumi:"hypervisorHostname"`
	// - (Required) Hypervisor IP address.
	HypervisorIp pulumi.StringInput `pulumi:"hypervisorIp"`
	// - Imaging delay.
	ImageDelay pulumi.IntPtrInput `pulumi:"imageDelay"`
	// - (Optional, Default = true) If the node should be imaged now.
	ImageNow        pulumi.BoolPtrInput `pulumi:"imageNow"`
	ImageSuccessful pulumi.BoolPtrInput `pulumi:"imageSuccessful"`
	// - Whether IPMI should be configured.
	IpmiConfigureNow pulumi.BoolPtrInput `pulumi:"ipmiConfigureNow"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI gateway for this node
	IpmiGateway pulumi.StringPtrInput `pulumi:"ipmiGateway"`
	// - (Required) IPMI IP address.
	IpmiIp pulumi.StringPtrInput `pulumi:"ipmiIp"`
	// - IPMI MAC address.
	IpmiMac pulumi.StringPtrInput `pulumi:"ipmiMac"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI netmask for this node
	IpmiNetmask pulumi.StringPtrInput `pulumi:"ipmiNetmask"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI username
	IpmiPassword pulumi.StringPtrInput `pulumi:"ipmiPassword"`
	// - (Required incase using IPMI based imaging either here or outside blocks) IPMI password
	IpmiUser pulumi.StringPtrInput `pulumi:"ipmiUser"`
	// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) IPV6 address.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) ipv6 interface.
	Ipv6Interface pulumi.StringPtrInput `pulumi:"ipv6Interface"`
	// - relocate bootbank files to make space for phoenix files.
	MitigateLowBootSpace pulumi.BoolPtrInput `pulumi:"mitigateLowBootSpace"`
	// - (Required) Position of the node in the block.
	NodePosition pulumi.StringInput `pulumi:"nodePosition"`
	// - serial number of the node.
	NodeSerial pulumi.StringPtrInput `pulumi:"nodeSerial"`
	// - mac address of nic to be used for rdma
	RdmaMacAddr pulumi.StringPtrInput `pulumi:"rdmaMacAddr"`
	// - (Required if node is capable) passthru RDMA nic to CVM if possible, default to false
	RdmaPassthrough pulumi.BoolPtrInput `pulumi:"rdmaPassthrough"`
	// - UCSM Managed mode.
	UcsmManagedMode pulumi.StringPtrInput `pulumi:"ucsmManagedMode"`
	// - UCSM node serial.
	UcsmNodeSerial pulumi.StringPtrInput `pulumi:"ucsmNodeSerial"`
	// - Object of UCSM parameters.
	// * `ucsm_params.native_vlan` :- If the vlan is native.
	// * `ucsm_params.keep_ucsm_settings` :- Whether UCSM settings should be kept.
	// * `ucsm_params.mac_pool` :- Mac address pool.
	// * `ucsm_params.vlan_name` :- Name of vlan.
	UcsmParams FoundationImageNodesBlockNodeUcsmParamsPtrInput `pulumi:"ucsmParams"`
	Vswitches  FoundationImageNodesBlockNodeVswitchArrayInput  `pulumi:"vswitches"`
}

func (FoundationImageNodesBlockNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNode)(nil)).Elem()
}

func (i FoundationImageNodesBlockNodeArgs) ToFoundationImageNodesBlockNodeOutput() FoundationImageNodesBlockNodeOutput {
	return i.ToFoundationImageNodesBlockNodeOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeArgs) ToFoundationImageNodesBlockNodeOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeOutput)
}

// FoundationImageNodesBlockNodeArrayInput is an input type that accepts FoundationImageNodesBlockNodeArray and FoundationImageNodesBlockNodeArrayOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeArrayInput` via:
//
//	FoundationImageNodesBlockNodeArray{ FoundationImageNodesBlockNodeArgs{...} }
type FoundationImageNodesBlockNodeArrayInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeArrayOutput() FoundationImageNodesBlockNodeArrayOutput
	ToFoundationImageNodesBlockNodeArrayOutputWithContext(context.Context) FoundationImageNodesBlockNodeArrayOutput
}

type FoundationImageNodesBlockNodeArray []FoundationImageNodesBlockNodeInput

func (FoundationImageNodesBlockNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlockNode)(nil)).Elem()
}

func (i FoundationImageNodesBlockNodeArray) ToFoundationImageNodesBlockNodeArrayOutput() FoundationImageNodesBlockNodeArrayOutput {
	return i.ToFoundationImageNodesBlockNodeArrayOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeArray) ToFoundationImageNodesBlockNodeArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeArrayOutput)
}

type FoundationImageNodesBlockNodeOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNode)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeOutput) ToFoundationImageNodesBlockNodeOutput() FoundationImageNodesBlockNodeOutput {
	return o
}

func (o FoundationImageNodesBlockNodeOutput) ToFoundationImageNodesBlockNodeOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeOutput {
	return o
}

// - (Required if node is lacp configured) slow or fast if lacp if being used at the switch
func (o FoundationImageNodesBlockNodeOutput) BondLacpRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.BondLacpRate }).(pulumi.StringPtrOutput)
}

// - (Required if node is capable) dynamic if using LACP, static for LAG
func (o FoundationImageNodesBlockNodeOutput) BondMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.BondMode }).(pulumi.StringPtrOutput)
}

// - MAC Addresses of NICs in a team/bond
func (o FoundationImageNodesBlockNodeOutput) BondUplinks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.BondUplinks }).(pulumi.StringPtrOutput)
}

// - ID of cluster.
func (o FoundationImageNodesBlockNodeOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// - Current CVM vlan tag. 0 Value with remove vlan tag.
func (o FoundationImageNodesBlockNodeOutput) CurrentCvmVlanTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *int { return v.CurrentCvmVlanTag }).(pulumi.IntPtrOutput)
}

// - CVM current network interface.
func (o FoundationImageNodesBlockNodeOutput) CurrentNetworkInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.CurrentNetworkInterface }).(pulumi.StringPtrOutput)
}

// - RAM capacity of CVM in GB.
func (o FoundationImageNodesBlockNodeOutput) CvmGbRam() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *int { return v.CvmGbRam }).(pulumi.IntPtrOutput)
}

func (o FoundationImageNodesBlockNodeOutput) CvmIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.CvmIp }).(pulumi.StringPtrOutput)
}

// - Number of CVM vcpus.
func (o FoundationImageNodesBlockNodeOutput) CvmNumVcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *int { return v.CvmNumVcpus }).(pulumi.IntPtrOutput)
}

// - use "vmInstaller" to enable CVM imaging from standalone.
func (o FoundationImageNodesBlockNodeOutput) DeviceHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.DeviceHint }).(pulumi.StringPtrOutput)
}

// - serial of boot device to be excluded (used by NX G6 platforms)
func (o FoundationImageNodesBlockNodeOutput) ExludeBootSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.ExludeBootSerial }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeOutput) Hypervisor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.Hypervisor }).(pulumi.StringPtrOutput)
}

// - (Required) Hypervisor Hostname.
func (o FoundationImageNodesBlockNodeOutput) HypervisorHostname() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) string { return v.HypervisorHostname }).(pulumi.StringOutput)
}

// - (Required) Hypervisor IP address.
func (o FoundationImageNodesBlockNodeOutput) HypervisorIp() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) string { return v.HypervisorIp }).(pulumi.StringOutput)
}

// - Imaging delay.
func (o FoundationImageNodesBlockNodeOutput) ImageDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *int { return v.ImageDelay }).(pulumi.IntPtrOutput)
}

// - (Optional, Default = true) If the node should be imaged now.
func (o FoundationImageNodesBlockNodeOutput) ImageNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *bool { return v.ImageNow }).(pulumi.BoolPtrOutput)
}

func (o FoundationImageNodesBlockNodeOutput) ImageSuccessful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *bool { return v.ImageSuccessful }).(pulumi.BoolPtrOutput)
}

// - Whether IPMI should be configured.
func (o FoundationImageNodesBlockNodeOutput) IpmiConfigureNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *bool { return v.IpmiConfigureNow }).(pulumi.BoolPtrOutput)
}

// - (Required incase using IPMI based imaging either here or outside blocks) IPMI gateway for this node
func (o FoundationImageNodesBlockNodeOutput) IpmiGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiGateway }).(pulumi.StringPtrOutput)
}

// - (Required) IPMI IP address.
func (o FoundationImageNodesBlockNodeOutput) IpmiIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiIp }).(pulumi.StringPtrOutput)
}

// - IPMI MAC address.
func (o FoundationImageNodesBlockNodeOutput) IpmiMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiMac }).(pulumi.StringPtrOutput)
}

// - (Required incase using IPMI based imaging either here or outside blocks) IPMI netmask for this node
func (o FoundationImageNodesBlockNodeOutput) IpmiNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiNetmask }).(pulumi.StringPtrOutput)
}

// - (Required incase using IPMI based imaging either here or outside blocks) IPMI username
func (o FoundationImageNodesBlockNodeOutput) IpmiPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiPassword }).(pulumi.StringPtrOutput)
}

// - (Required incase using IPMI based imaging either here or outside blocks) IPMI password
func (o FoundationImageNodesBlockNodeOutput) IpmiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.IpmiUser }).(pulumi.StringPtrOutput)
}

// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) IPV6 address.
func (o FoundationImageNodesBlockNodeOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// - (Required when deviceHint = "vmInstaller" for imaging using node's existing cvm for imaging) ipv6 interface.
func (o FoundationImageNodesBlockNodeOutput) Ipv6Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.Ipv6Interface }).(pulumi.StringPtrOutput)
}

// - relocate bootbank files to make space for phoenix files.
func (o FoundationImageNodesBlockNodeOutput) MitigateLowBootSpace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *bool { return v.MitigateLowBootSpace }).(pulumi.BoolPtrOutput)
}

// - (Required) Position of the node in the block.
func (o FoundationImageNodesBlockNodeOutput) NodePosition() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) string { return v.NodePosition }).(pulumi.StringOutput)
}

// - serial number of the node.
func (o FoundationImageNodesBlockNodeOutput) NodeSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.NodeSerial }).(pulumi.StringPtrOutput)
}

// - mac address of nic to be used for rdma
func (o FoundationImageNodesBlockNodeOutput) RdmaMacAddr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.RdmaMacAddr }).(pulumi.StringPtrOutput)
}

// - (Required if node is capable) passthru RDMA nic to CVM if possible, default to false
func (o FoundationImageNodesBlockNodeOutput) RdmaPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *bool { return v.RdmaPassthrough }).(pulumi.BoolPtrOutput)
}

// - UCSM Managed mode.
func (o FoundationImageNodesBlockNodeOutput) UcsmManagedMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.UcsmManagedMode }).(pulumi.StringPtrOutput)
}

// - UCSM node serial.
func (o FoundationImageNodesBlockNodeOutput) UcsmNodeSerial() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *string { return v.UcsmNodeSerial }).(pulumi.StringPtrOutput)
}

// - Object of UCSM parameters.
// * `ucsm_params.native_vlan` :- If the vlan is native.
// * `ucsm_params.keep_ucsm_settings` :- Whether UCSM settings should be kept.
// * `ucsm_params.mac_pool` :- Mac address pool.
// * `ucsm_params.vlan_name` :- Name of vlan.
func (o FoundationImageNodesBlockNodeOutput) UcsmParams() FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) *FoundationImageNodesBlockNodeUcsmParams { return v.UcsmParams }).(FoundationImageNodesBlockNodeUcsmParamsPtrOutput)
}

func (o FoundationImageNodesBlockNodeOutput) Vswitches() FoundationImageNodesBlockNodeVswitchArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNode) []FoundationImageNodesBlockNodeVswitch { return v.Vswitches }).(FoundationImageNodesBlockNodeVswitchArrayOutput)
}

type FoundationImageNodesBlockNodeArrayOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlockNode)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeArrayOutput) ToFoundationImageNodesBlockNodeArrayOutput() FoundationImageNodesBlockNodeArrayOutput {
	return o
}

func (o FoundationImageNodesBlockNodeArrayOutput) ToFoundationImageNodesBlockNodeArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeArrayOutput {
	return o
}

func (o FoundationImageNodesBlockNodeArrayOutput) Index(i pulumi.IntInput) FoundationImageNodesBlockNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationImageNodesBlockNode {
		return vs[0].([]FoundationImageNodesBlockNode)[vs[1].(int)]
	}).(FoundationImageNodesBlockNodeOutput)
}

type FoundationImageNodesBlockNodeUcsmParams struct {
	KeepUcsmSettings *bool   `pulumi:"keepUcsmSettings"`
	MacPool          *string `pulumi:"macPool"`
	NativeVlan       *bool   `pulumi:"nativeVlan"`
	VlanName         *string `pulumi:"vlanName"`
}

// FoundationImageNodesBlockNodeUcsmParamsInput is an input type that accepts FoundationImageNodesBlockNodeUcsmParamsArgs and FoundationImageNodesBlockNodeUcsmParamsOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeUcsmParamsInput` via:
//
//	FoundationImageNodesBlockNodeUcsmParamsArgs{...}
type FoundationImageNodesBlockNodeUcsmParamsInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeUcsmParamsOutput() FoundationImageNodesBlockNodeUcsmParamsOutput
	ToFoundationImageNodesBlockNodeUcsmParamsOutputWithContext(context.Context) FoundationImageNodesBlockNodeUcsmParamsOutput
}

type FoundationImageNodesBlockNodeUcsmParamsArgs struct {
	KeepUcsmSettings pulumi.BoolPtrInput   `pulumi:"keepUcsmSettings"`
	MacPool          pulumi.StringPtrInput `pulumi:"macPool"`
	NativeVlan       pulumi.BoolPtrInput   `pulumi:"nativeVlan"`
	VlanName         pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (FoundationImageNodesBlockNodeUcsmParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNodeUcsmParams)(nil)).Elem()
}

func (i FoundationImageNodesBlockNodeUcsmParamsArgs) ToFoundationImageNodesBlockNodeUcsmParamsOutput() FoundationImageNodesBlockNodeUcsmParamsOutput {
	return i.ToFoundationImageNodesBlockNodeUcsmParamsOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeUcsmParamsArgs) ToFoundationImageNodesBlockNodeUcsmParamsOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeUcsmParamsOutput)
}

func (i FoundationImageNodesBlockNodeUcsmParamsArgs) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutput() FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return i.ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeUcsmParamsArgs) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeUcsmParamsOutput).ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(ctx)
}

// FoundationImageNodesBlockNodeUcsmParamsPtrInput is an input type that accepts FoundationImageNodesBlockNodeUcsmParamsArgs, FoundationImageNodesBlockNodeUcsmParamsPtr and FoundationImageNodesBlockNodeUcsmParamsPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeUcsmParamsPtrInput` via:
//
//	        FoundationImageNodesBlockNodeUcsmParamsArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesBlockNodeUcsmParamsPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeUcsmParamsPtrOutput() FoundationImageNodesBlockNodeUcsmParamsPtrOutput
	ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(context.Context) FoundationImageNodesBlockNodeUcsmParamsPtrOutput
}

type foundationImageNodesBlockNodeUcsmParamsPtrType FoundationImageNodesBlockNodeUcsmParamsArgs

func FoundationImageNodesBlockNodeUcsmParamsPtr(v *FoundationImageNodesBlockNodeUcsmParamsArgs) FoundationImageNodesBlockNodeUcsmParamsPtrInput {
	return (*foundationImageNodesBlockNodeUcsmParamsPtrType)(v)
}

func (*foundationImageNodesBlockNodeUcsmParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesBlockNodeUcsmParams)(nil)).Elem()
}

func (i *foundationImageNodesBlockNodeUcsmParamsPtrType) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutput() FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return i.ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesBlockNodeUcsmParamsPtrType) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeUcsmParamsPtrOutput)
}

type FoundationImageNodesBlockNodeUcsmParamsOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeUcsmParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNodeUcsmParams)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) ToFoundationImageNodesBlockNodeUcsmParamsOutput() FoundationImageNodesBlockNodeUcsmParamsOutput {
	return o
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) ToFoundationImageNodesBlockNodeUcsmParamsOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsOutput {
	return o
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutput() FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return o.ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesBlockNodeUcsmParams) *FoundationImageNodesBlockNodeUcsmParams {
		return &v
	}).(FoundationImageNodesBlockNodeUcsmParamsPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) KeepUcsmSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeUcsmParams) *bool { return v.KeepUcsmSettings }).(pulumi.BoolPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) MacPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeUcsmParams) *string { return v.MacPool }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) NativeVlan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeUcsmParams) *bool { return v.NativeVlan }).(pulumi.BoolPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeUcsmParams) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type FoundationImageNodesBlockNodeUcsmParamsPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeUcsmParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesBlockNodeUcsmParams)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutput() FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return o
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) ToFoundationImageNodesBlockNodeUcsmParamsPtrOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeUcsmParamsPtrOutput {
	return o
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) Elem() FoundationImageNodesBlockNodeUcsmParamsOutput {
	return o.ApplyT(func(v *FoundationImageNodesBlockNodeUcsmParams) FoundationImageNodesBlockNodeUcsmParams {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesBlockNodeUcsmParams
		return ret
	}).(FoundationImageNodesBlockNodeUcsmParamsOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) KeepUcsmSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesBlockNodeUcsmParams) *bool {
		if v == nil {
			return nil
		}
		return v.KeepUcsmSettings
	}).(pulumi.BoolPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) MacPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesBlockNodeUcsmParams) *string {
		if v == nil {
			return nil
		}
		return v.MacPool
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) NativeVlan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesBlockNodeUcsmParams) *bool {
		if v == nil {
			return nil
		}
		return v.NativeVlan
	}).(pulumi.BoolPtrOutput)
}

func (o FoundationImageNodesBlockNodeUcsmParamsPtrOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesBlockNodeUcsmParams) *string {
		if v == nil {
			return nil
		}
		return v.VlanName
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesBlockNodeVswitch struct {
	BondMode     *string  `pulumi:"bondMode"`
	Lacp         *string  `pulumi:"lacp"`
	Mtu          *int     `pulumi:"mtu"`
	Name         *string  `pulumi:"name"`
	OtherConfigs []string `pulumi:"otherConfigs"`
	Uplinks      []string `pulumi:"uplinks"`
}

// FoundationImageNodesBlockNodeVswitchInput is an input type that accepts FoundationImageNodesBlockNodeVswitchArgs and FoundationImageNodesBlockNodeVswitchOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeVswitchInput` via:
//
//	FoundationImageNodesBlockNodeVswitchArgs{...}
type FoundationImageNodesBlockNodeVswitchInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeVswitchOutput() FoundationImageNodesBlockNodeVswitchOutput
	ToFoundationImageNodesBlockNodeVswitchOutputWithContext(context.Context) FoundationImageNodesBlockNodeVswitchOutput
}

type FoundationImageNodesBlockNodeVswitchArgs struct {
	BondMode     pulumi.StringPtrInput   `pulumi:"bondMode"`
	Lacp         pulumi.StringPtrInput   `pulumi:"lacp"`
	Mtu          pulumi.IntPtrInput      `pulumi:"mtu"`
	Name         pulumi.StringPtrInput   `pulumi:"name"`
	OtherConfigs pulumi.StringArrayInput `pulumi:"otherConfigs"`
	Uplinks      pulumi.StringArrayInput `pulumi:"uplinks"`
}

func (FoundationImageNodesBlockNodeVswitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNodeVswitch)(nil)).Elem()
}

func (i FoundationImageNodesBlockNodeVswitchArgs) ToFoundationImageNodesBlockNodeVswitchOutput() FoundationImageNodesBlockNodeVswitchOutput {
	return i.ToFoundationImageNodesBlockNodeVswitchOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeVswitchArgs) ToFoundationImageNodesBlockNodeVswitchOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeVswitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeVswitchOutput)
}

// FoundationImageNodesBlockNodeVswitchArrayInput is an input type that accepts FoundationImageNodesBlockNodeVswitchArray and FoundationImageNodesBlockNodeVswitchArrayOutput values.
// You can construct a concrete instance of `FoundationImageNodesBlockNodeVswitchArrayInput` via:
//
//	FoundationImageNodesBlockNodeVswitchArray{ FoundationImageNodesBlockNodeVswitchArgs{...} }
type FoundationImageNodesBlockNodeVswitchArrayInput interface {
	pulumi.Input

	ToFoundationImageNodesBlockNodeVswitchArrayOutput() FoundationImageNodesBlockNodeVswitchArrayOutput
	ToFoundationImageNodesBlockNodeVswitchArrayOutputWithContext(context.Context) FoundationImageNodesBlockNodeVswitchArrayOutput
}

type FoundationImageNodesBlockNodeVswitchArray []FoundationImageNodesBlockNodeVswitchInput

func (FoundationImageNodesBlockNodeVswitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlockNodeVswitch)(nil)).Elem()
}

func (i FoundationImageNodesBlockNodeVswitchArray) ToFoundationImageNodesBlockNodeVswitchArrayOutput() FoundationImageNodesBlockNodeVswitchArrayOutput {
	return i.ToFoundationImageNodesBlockNodeVswitchArrayOutputWithContext(context.Background())
}

func (i FoundationImageNodesBlockNodeVswitchArray) ToFoundationImageNodesBlockNodeVswitchArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeVswitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesBlockNodeVswitchArrayOutput)
}

type FoundationImageNodesBlockNodeVswitchOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeVswitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesBlockNodeVswitch)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeVswitchOutput) ToFoundationImageNodesBlockNodeVswitchOutput() FoundationImageNodesBlockNodeVswitchOutput {
	return o
}

func (o FoundationImageNodesBlockNodeVswitchOutput) ToFoundationImageNodesBlockNodeVswitchOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeVswitchOutput {
	return o
}

func (o FoundationImageNodesBlockNodeVswitchOutput) BondMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) *string { return v.BondMode }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeVswitchOutput) Lacp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) *string { return v.Lacp }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeVswitchOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o FoundationImageNodesBlockNodeVswitchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesBlockNodeVswitchOutput) OtherConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) []string { return v.OtherConfigs }).(pulumi.StringArrayOutput)
}

func (o FoundationImageNodesBlockNodeVswitchOutput) Uplinks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesBlockNodeVswitch) []string { return v.Uplinks }).(pulumi.StringArrayOutput)
}

type FoundationImageNodesBlockNodeVswitchArrayOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesBlockNodeVswitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesBlockNodeVswitch)(nil)).Elem()
}

func (o FoundationImageNodesBlockNodeVswitchArrayOutput) ToFoundationImageNodesBlockNodeVswitchArrayOutput() FoundationImageNodesBlockNodeVswitchArrayOutput {
	return o
}

func (o FoundationImageNodesBlockNodeVswitchArrayOutput) ToFoundationImageNodesBlockNodeVswitchArrayOutputWithContext(ctx context.Context) FoundationImageNodesBlockNodeVswitchArrayOutput {
	return o
}

func (o FoundationImageNodesBlockNodeVswitchArrayOutput) Index(i pulumi.IntInput) FoundationImageNodesBlockNodeVswitchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationImageNodesBlockNodeVswitch {
		return vs[0].([]FoundationImageNodesBlockNodeVswitch)[vs[1].(int)]
	}).(FoundationImageNodesBlockNodeVswitchOutput)
}

type FoundationImageNodesCluster struct {
	// - Backplane netmask.
	BackplaneNetmask *string `pulumi:"backplaneNetmask"`
	// - Backplane subnet address.
	BackplaneSubnet *string `pulumi:"backplaneSubnet"`
	// - Backplane vlan.
	BackplaneVlan *string `pulumi:"backplaneVlan"`
	// - External IP of the cluster.
	ClusterExternalIp *string `pulumi:"clusterExternalIp"`
	// - (Optional, Default = true) If cluster should be created.
	ClusterInitNow *bool `pulumi:"clusterInitNow"`
	// - If cluster initialization was successful.
	ClusterInitSuccessful *bool `pulumi:"clusterInitSuccessful"`
	// - (Required) Members in the cluster.
	ClusterMembers []string `pulumi:"clusterMembers"`
	// - (Required) Name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// - DNS servers of CVM.
	CvmDnsServers *string `pulumi:"cvmDnsServers"`
	// - NTP servers of CVM.
	CvmNtpServers *string `pulumi:"cvmNtpServers"`
	// - If network segmentation should be enabled.
	EnableNs *bool `pulumi:"enableNs"`
	// - NTP servers of hypervisor.
	HypervisorNtpServers *string `pulumi:"hypervisorNtpServers"`
	// - (Required) Cluster Redundancy Factor.
	RedundancyFactor int `pulumi:"redundancyFactor"`
	// - If it is a single node cluster.
	SingleNodeCluster *bool `pulumi:"singleNodeCluster"`
	// - Set timezone for every CVM
	Timezone *string `pulumi:"timezone"`
}

// FoundationImageNodesClusterInput is an input type that accepts FoundationImageNodesClusterArgs and FoundationImageNodesClusterOutput values.
// You can construct a concrete instance of `FoundationImageNodesClusterInput` via:
//
//	FoundationImageNodesClusterArgs{...}
type FoundationImageNodesClusterInput interface {
	pulumi.Input

	ToFoundationImageNodesClusterOutput() FoundationImageNodesClusterOutput
	ToFoundationImageNodesClusterOutputWithContext(context.Context) FoundationImageNodesClusterOutput
}

type FoundationImageNodesClusterArgs struct {
	// - Backplane netmask.
	BackplaneNetmask pulumi.StringPtrInput `pulumi:"backplaneNetmask"`
	// - Backplane subnet address.
	BackplaneSubnet pulumi.StringPtrInput `pulumi:"backplaneSubnet"`
	// - Backplane vlan.
	BackplaneVlan pulumi.StringPtrInput `pulumi:"backplaneVlan"`
	// - External IP of the cluster.
	ClusterExternalIp pulumi.StringPtrInput `pulumi:"clusterExternalIp"`
	// - (Optional, Default = true) If cluster should be created.
	ClusterInitNow pulumi.BoolPtrInput `pulumi:"clusterInitNow"`
	// - If cluster initialization was successful.
	ClusterInitSuccessful pulumi.BoolPtrInput `pulumi:"clusterInitSuccessful"`
	// - (Required) Members in the cluster.
	ClusterMembers pulumi.StringArrayInput `pulumi:"clusterMembers"`
	// - (Required) Name of the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// - DNS servers of CVM.
	CvmDnsServers pulumi.StringPtrInput `pulumi:"cvmDnsServers"`
	// - NTP servers of CVM.
	CvmNtpServers pulumi.StringPtrInput `pulumi:"cvmNtpServers"`
	// - If network segmentation should be enabled.
	EnableNs pulumi.BoolPtrInput `pulumi:"enableNs"`
	// - NTP servers of hypervisor.
	HypervisorNtpServers pulumi.StringPtrInput `pulumi:"hypervisorNtpServers"`
	// - (Required) Cluster Redundancy Factor.
	RedundancyFactor pulumi.IntInput `pulumi:"redundancyFactor"`
	// - If it is a single node cluster.
	SingleNodeCluster pulumi.BoolPtrInput `pulumi:"singleNodeCluster"`
	// - Set timezone for every CVM
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (FoundationImageNodesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesCluster)(nil)).Elem()
}

func (i FoundationImageNodesClusterArgs) ToFoundationImageNodesClusterOutput() FoundationImageNodesClusterOutput {
	return i.ToFoundationImageNodesClusterOutputWithContext(context.Background())
}

func (i FoundationImageNodesClusterArgs) ToFoundationImageNodesClusterOutputWithContext(ctx context.Context) FoundationImageNodesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesClusterOutput)
}

// FoundationImageNodesClusterArrayInput is an input type that accepts FoundationImageNodesClusterArray and FoundationImageNodesClusterArrayOutput values.
// You can construct a concrete instance of `FoundationImageNodesClusterArrayInput` via:
//
//	FoundationImageNodesClusterArray{ FoundationImageNodesClusterArgs{...} }
type FoundationImageNodesClusterArrayInput interface {
	pulumi.Input

	ToFoundationImageNodesClusterArrayOutput() FoundationImageNodesClusterArrayOutput
	ToFoundationImageNodesClusterArrayOutputWithContext(context.Context) FoundationImageNodesClusterArrayOutput
}

type FoundationImageNodesClusterArray []FoundationImageNodesClusterInput

func (FoundationImageNodesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesCluster)(nil)).Elem()
}

func (i FoundationImageNodesClusterArray) ToFoundationImageNodesClusterArrayOutput() FoundationImageNodesClusterArrayOutput {
	return i.ToFoundationImageNodesClusterArrayOutputWithContext(context.Background())
}

func (i FoundationImageNodesClusterArray) ToFoundationImageNodesClusterArrayOutputWithContext(ctx context.Context) FoundationImageNodesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesClusterArrayOutput)
}

type FoundationImageNodesClusterOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesCluster)(nil)).Elem()
}

func (o FoundationImageNodesClusterOutput) ToFoundationImageNodesClusterOutput() FoundationImageNodesClusterOutput {
	return o
}

func (o FoundationImageNodesClusterOutput) ToFoundationImageNodesClusterOutputWithContext(ctx context.Context) FoundationImageNodesClusterOutput {
	return o
}

// - Backplane netmask.
func (o FoundationImageNodesClusterOutput) BackplaneNetmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.BackplaneNetmask }).(pulumi.StringPtrOutput)
}

// - Backplane subnet address.
func (o FoundationImageNodesClusterOutput) BackplaneSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.BackplaneSubnet }).(pulumi.StringPtrOutput)
}

// - Backplane vlan.
func (o FoundationImageNodesClusterOutput) BackplaneVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.BackplaneVlan }).(pulumi.StringPtrOutput)
}

// - External IP of the cluster.
func (o FoundationImageNodesClusterOutput) ClusterExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.ClusterExternalIp }).(pulumi.StringPtrOutput)
}

// - (Optional, Default = true) If cluster should be created.
func (o FoundationImageNodesClusterOutput) ClusterInitNow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *bool { return v.ClusterInitNow }).(pulumi.BoolPtrOutput)
}

// - If cluster initialization was successful.
func (o FoundationImageNodesClusterOutput) ClusterInitSuccessful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *bool { return v.ClusterInitSuccessful }).(pulumi.BoolPtrOutput)
}

// - (Required) Members in the cluster.
func (o FoundationImageNodesClusterOutput) ClusterMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) []string { return v.ClusterMembers }).(pulumi.StringArrayOutput)
}

// - (Required) Name of the cluster.
func (o FoundationImageNodesClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// - DNS servers of CVM.
func (o FoundationImageNodesClusterOutput) CvmDnsServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.CvmDnsServers }).(pulumi.StringPtrOutput)
}

// - NTP servers of CVM.
func (o FoundationImageNodesClusterOutput) CvmNtpServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.CvmNtpServers }).(pulumi.StringPtrOutput)
}

// - If network segmentation should be enabled.
func (o FoundationImageNodesClusterOutput) EnableNs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *bool { return v.EnableNs }).(pulumi.BoolPtrOutput)
}

// - NTP servers of hypervisor.
func (o FoundationImageNodesClusterOutput) HypervisorNtpServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.HypervisorNtpServers }).(pulumi.StringPtrOutput)
}

// - (Required) Cluster Redundancy Factor.
func (o FoundationImageNodesClusterOutput) RedundancyFactor() pulumi.IntOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) int { return v.RedundancyFactor }).(pulumi.IntOutput)
}

// - If it is a single node cluster.
func (o FoundationImageNodesClusterOutput) SingleNodeCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *bool { return v.SingleNodeCluster }).(pulumi.BoolPtrOutput)
}

// - Set timezone for every CVM
func (o FoundationImageNodesClusterOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesCluster) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type FoundationImageNodesClusterArrayOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesCluster)(nil)).Elem()
}

func (o FoundationImageNodesClusterArrayOutput) ToFoundationImageNodesClusterArrayOutput() FoundationImageNodesClusterArrayOutput {
	return o
}

func (o FoundationImageNodesClusterArrayOutput) ToFoundationImageNodesClusterArrayOutputWithContext(ctx context.Context) FoundationImageNodesClusterArrayOutput {
	return o
}

func (o FoundationImageNodesClusterArrayOutput) Index(i pulumi.IntInput) FoundationImageNodesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationImageNodesCluster {
		return vs[0].([]FoundationImageNodesCluster)[vs[1].(int)]
	}).(FoundationImageNodesClusterOutput)
}

type FoundationImageNodesClusterUrl struct {
	ClusterName *string `pulumi:"clusterName"`
	ClusterUrl  *string `pulumi:"clusterUrl"`
}

// FoundationImageNodesClusterUrlInput is an input type that accepts FoundationImageNodesClusterUrlArgs and FoundationImageNodesClusterUrlOutput values.
// You can construct a concrete instance of `FoundationImageNodesClusterUrlInput` via:
//
//	FoundationImageNodesClusterUrlArgs{...}
type FoundationImageNodesClusterUrlInput interface {
	pulumi.Input

	ToFoundationImageNodesClusterUrlOutput() FoundationImageNodesClusterUrlOutput
	ToFoundationImageNodesClusterUrlOutputWithContext(context.Context) FoundationImageNodesClusterUrlOutput
}

type FoundationImageNodesClusterUrlArgs struct {
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	ClusterUrl  pulumi.StringPtrInput `pulumi:"clusterUrl"`
}

func (FoundationImageNodesClusterUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesClusterUrl)(nil)).Elem()
}

func (i FoundationImageNodesClusterUrlArgs) ToFoundationImageNodesClusterUrlOutput() FoundationImageNodesClusterUrlOutput {
	return i.ToFoundationImageNodesClusterUrlOutputWithContext(context.Background())
}

func (i FoundationImageNodesClusterUrlArgs) ToFoundationImageNodesClusterUrlOutputWithContext(ctx context.Context) FoundationImageNodesClusterUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesClusterUrlOutput)
}

// FoundationImageNodesClusterUrlArrayInput is an input type that accepts FoundationImageNodesClusterUrlArray and FoundationImageNodesClusterUrlArrayOutput values.
// You can construct a concrete instance of `FoundationImageNodesClusterUrlArrayInput` via:
//
//	FoundationImageNodesClusterUrlArray{ FoundationImageNodesClusterUrlArgs{...} }
type FoundationImageNodesClusterUrlArrayInput interface {
	pulumi.Input

	ToFoundationImageNodesClusterUrlArrayOutput() FoundationImageNodesClusterUrlArrayOutput
	ToFoundationImageNodesClusterUrlArrayOutputWithContext(context.Context) FoundationImageNodesClusterUrlArrayOutput
}

type FoundationImageNodesClusterUrlArray []FoundationImageNodesClusterUrlInput

func (FoundationImageNodesClusterUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesClusterUrl)(nil)).Elem()
}

func (i FoundationImageNodesClusterUrlArray) ToFoundationImageNodesClusterUrlArrayOutput() FoundationImageNodesClusterUrlArrayOutput {
	return i.ToFoundationImageNodesClusterUrlArrayOutputWithContext(context.Background())
}

func (i FoundationImageNodesClusterUrlArray) ToFoundationImageNodesClusterUrlArrayOutputWithContext(ctx context.Context) FoundationImageNodesClusterUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesClusterUrlArrayOutput)
}

type FoundationImageNodesClusterUrlOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesClusterUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesClusterUrl)(nil)).Elem()
}

func (o FoundationImageNodesClusterUrlOutput) ToFoundationImageNodesClusterUrlOutput() FoundationImageNodesClusterUrlOutput {
	return o
}

func (o FoundationImageNodesClusterUrlOutput) ToFoundationImageNodesClusterUrlOutputWithContext(ctx context.Context) FoundationImageNodesClusterUrlOutput {
	return o
}

func (o FoundationImageNodesClusterUrlOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesClusterUrl) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesClusterUrlOutput) ClusterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesClusterUrl) *string { return v.ClusterUrl }).(pulumi.StringPtrOutput)
}

type FoundationImageNodesClusterUrlArrayOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesClusterUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationImageNodesClusterUrl)(nil)).Elem()
}

func (o FoundationImageNodesClusterUrlArrayOutput) ToFoundationImageNodesClusterUrlArrayOutput() FoundationImageNodesClusterUrlArrayOutput {
	return o
}

func (o FoundationImageNodesClusterUrlArrayOutput) ToFoundationImageNodesClusterUrlArrayOutputWithContext(ctx context.Context) FoundationImageNodesClusterUrlArrayOutput {
	return o
}

func (o FoundationImageNodesClusterUrlArrayOutput) Index(i pulumi.IntInput) FoundationImageNodesClusterUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationImageNodesClusterUrl {
		return vs[0].([]FoundationImageNodesClusterUrl)[vs[1].(int)]
	}).(FoundationImageNodesClusterUrlOutput)
}

type FoundationImageNodesEosMetadata struct {
	// - arrya of account names
	AccountNames []string `pulumi:"accountNames"`
	// - Id of the Eos config uploaded in foundation GUI.
	ConfigId *string `pulumi:"configId"`
	// - Email address of the user who downloaded Eos config.
	Email *string `pulumi:"email"`
}

// FoundationImageNodesEosMetadataInput is an input type that accepts FoundationImageNodesEosMetadataArgs and FoundationImageNodesEosMetadataOutput values.
// You can construct a concrete instance of `FoundationImageNodesEosMetadataInput` via:
//
//	FoundationImageNodesEosMetadataArgs{...}
type FoundationImageNodesEosMetadataInput interface {
	pulumi.Input

	ToFoundationImageNodesEosMetadataOutput() FoundationImageNodesEosMetadataOutput
	ToFoundationImageNodesEosMetadataOutputWithContext(context.Context) FoundationImageNodesEosMetadataOutput
}

type FoundationImageNodesEosMetadataArgs struct {
	// - arrya of account names
	AccountNames pulumi.StringArrayInput `pulumi:"accountNames"`
	// - Id of the Eos config uploaded in foundation GUI.
	ConfigId pulumi.StringPtrInput `pulumi:"configId"`
	// - Email address of the user who downloaded Eos config.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (FoundationImageNodesEosMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesEosMetadata)(nil)).Elem()
}

func (i FoundationImageNodesEosMetadataArgs) ToFoundationImageNodesEosMetadataOutput() FoundationImageNodesEosMetadataOutput {
	return i.ToFoundationImageNodesEosMetadataOutputWithContext(context.Background())
}

func (i FoundationImageNodesEosMetadataArgs) ToFoundationImageNodesEosMetadataOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesEosMetadataOutput)
}

func (i FoundationImageNodesEosMetadataArgs) ToFoundationImageNodesEosMetadataPtrOutput() FoundationImageNodesEosMetadataPtrOutput {
	return i.ToFoundationImageNodesEosMetadataPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesEosMetadataArgs) ToFoundationImageNodesEosMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesEosMetadataOutput).ToFoundationImageNodesEosMetadataPtrOutputWithContext(ctx)
}

// FoundationImageNodesEosMetadataPtrInput is an input type that accepts FoundationImageNodesEosMetadataArgs, FoundationImageNodesEosMetadataPtr and FoundationImageNodesEosMetadataPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesEosMetadataPtrInput` via:
//
//	        FoundationImageNodesEosMetadataArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesEosMetadataPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesEosMetadataPtrOutput() FoundationImageNodesEosMetadataPtrOutput
	ToFoundationImageNodesEosMetadataPtrOutputWithContext(context.Context) FoundationImageNodesEosMetadataPtrOutput
}

type foundationImageNodesEosMetadataPtrType FoundationImageNodesEosMetadataArgs

func FoundationImageNodesEosMetadataPtr(v *FoundationImageNodesEosMetadataArgs) FoundationImageNodesEosMetadataPtrInput {
	return (*foundationImageNodesEosMetadataPtrType)(v)
}

func (*foundationImageNodesEosMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesEosMetadata)(nil)).Elem()
}

func (i *foundationImageNodesEosMetadataPtrType) ToFoundationImageNodesEosMetadataPtrOutput() FoundationImageNodesEosMetadataPtrOutput {
	return i.ToFoundationImageNodesEosMetadataPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesEosMetadataPtrType) ToFoundationImageNodesEosMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesEosMetadataPtrOutput)
}

type FoundationImageNodesEosMetadataOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesEosMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesEosMetadata)(nil)).Elem()
}

func (o FoundationImageNodesEosMetadataOutput) ToFoundationImageNodesEosMetadataOutput() FoundationImageNodesEosMetadataOutput {
	return o
}

func (o FoundationImageNodesEosMetadataOutput) ToFoundationImageNodesEosMetadataOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataOutput {
	return o
}

func (o FoundationImageNodesEosMetadataOutput) ToFoundationImageNodesEosMetadataPtrOutput() FoundationImageNodesEosMetadataPtrOutput {
	return o.ToFoundationImageNodesEosMetadataPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesEosMetadataOutput) ToFoundationImageNodesEosMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesEosMetadata) *FoundationImageNodesEosMetadata {
		return &v
	}).(FoundationImageNodesEosMetadataPtrOutput)
}

// - arrya of account names
func (o FoundationImageNodesEosMetadataOutput) AccountNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FoundationImageNodesEosMetadata) []string { return v.AccountNames }).(pulumi.StringArrayOutput)
}

// - Id of the Eos config uploaded in foundation GUI.
func (o FoundationImageNodesEosMetadataOutput) ConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesEosMetadata) *string { return v.ConfigId }).(pulumi.StringPtrOutput)
}

// - Email address of the user who downloaded Eos config.
func (o FoundationImageNodesEosMetadataOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesEosMetadata) *string { return v.Email }).(pulumi.StringPtrOutput)
}

type FoundationImageNodesEosMetadataPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesEosMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesEosMetadata)(nil)).Elem()
}

func (o FoundationImageNodesEosMetadataPtrOutput) ToFoundationImageNodesEosMetadataPtrOutput() FoundationImageNodesEosMetadataPtrOutput {
	return o
}

func (o FoundationImageNodesEosMetadataPtrOutput) ToFoundationImageNodesEosMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesEosMetadataPtrOutput {
	return o
}

func (o FoundationImageNodesEosMetadataPtrOutput) Elem() FoundationImageNodesEosMetadataOutput {
	return o.ApplyT(func(v *FoundationImageNodesEosMetadata) FoundationImageNodesEosMetadata {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesEosMetadata
		return ret
	}).(FoundationImageNodesEosMetadataOutput)
}

// - arrya of account names
func (o FoundationImageNodesEosMetadataPtrOutput) AccountNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FoundationImageNodesEosMetadata) []string {
		if v == nil {
			return nil
		}
		return v.AccountNames
	}).(pulumi.StringArrayOutput)
}

// - Id of the Eos config uploaded in foundation GUI.
func (o FoundationImageNodesEosMetadataPtrOutput) ConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesEosMetadata) *string {
		if v == nil {
			return nil
		}
		return v.ConfigId
	}).(pulumi.StringPtrOutput)
}

// - Email address of the user who downloaded Eos config.
func (o FoundationImageNodesEosMetadataPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesEosMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesFcSettings struct {
	// - Foundation Central metadata which will be transferred to the newly imaged node.
	// * `fc_metadata.fc_ip` :- IP address of foundation central.
	// * `fc_metadata.api_key` :- apiKey which the node uses to register itself with foundation central.
	FcMetadata FoundationImageNodesFcSettingsFcMetadata `pulumi:"fcMetadata"`
	// - If this attribute is set to True, FC workflow will be invoked.
	FoundationCentral bool `pulumi:"foundationCentral"`
}

// FoundationImageNodesFcSettingsInput is an input type that accepts FoundationImageNodesFcSettingsArgs and FoundationImageNodesFcSettingsOutput values.
// You can construct a concrete instance of `FoundationImageNodesFcSettingsInput` via:
//
//	FoundationImageNodesFcSettingsArgs{...}
type FoundationImageNodesFcSettingsInput interface {
	pulumi.Input

	ToFoundationImageNodesFcSettingsOutput() FoundationImageNodesFcSettingsOutput
	ToFoundationImageNodesFcSettingsOutputWithContext(context.Context) FoundationImageNodesFcSettingsOutput
}

type FoundationImageNodesFcSettingsArgs struct {
	// - Foundation Central metadata which will be transferred to the newly imaged node.
	// * `fc_metadata.fc_ip` :- IP address of foundation central.
	// * `fc_metadata.api_key` :- apiKey which the node uses to register itself with foundation central.
	FcMetadata FoundationImageNodesFcSettingsFcMetadataInput `pulumi:"fcMetadata"`
	// - If this attribute is set to True, FC workflow will be invoked.
	FoundationCentral pulumi.BoolInput `pulumi:"foundationCentral"`
}

func (FoundationImageNodesFcSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesFcSettings)(nil)).Elem()
}

func (i FoundationImageNodesFcSettingsArgs) ToFoundationImageNodesFcSettingsOutput() FoundationImageNodesFcSettingsOutput {
	return i.ToFoundationImageNodesFcSettingsOutputWithContext(context.Background())
}

func (i FoundationImageNodesFcSettingsArgs) ToFoundationImageNodesFcSettingsOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsOutput)
}

func (i FoundationImageNodesFcSettingsArgs) ToFoundationImageNodesFcSettingsPtrOutput() FoundationImageNodesFcSettingsPtrOutput {
	return i.ToFoundationImageNodesFcSettingsPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesFcSettingsArgs) ToFoundationImageNodesFcSettingsPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsOutput).ToFoundationImageNodesFcSettingsPtrOutputWithContext(ctx)
}

// FoundationImageNodesFcSettingsPtrInput is an input type that accepts FoundationImageNodesFcSettingsArgs, FoundationImageNodesFcSettingsPtr and FoundationImageNodesFcSettingsPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesFcSettingsPtrInput` via:
//
//	        FoundationImageNodesFcSettingsArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesFcSettingsPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesFcSettingsPtrOutput() FoundationImageNodesFcSettingsPtrOutput
	ToFoundationImageNodesFcSettingsPtrOutputWithContext(context.Context) FoundationImageNodesFcSettingsPtrOutput
}

type foundationImageNodesFcSettingsPtrType FoundationImageNodesFcSettingsArgs

func FoundationImageNodesFcSettingsPtr(v *FoundationImageNodesFcSettingsArgs) FoundationImageNodesFcSettingsPtrInput {
	return (*foundationImageNodesFcSettingsPtrType)(v)
}

func (*foundationImageNodesFcSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesFcSettings)(nil)).Elem()
}

func (i *foundationImageNodesFcSettingsPtrType) ToFoundationImageNodesFcSettingsPtrOutput() FoundationImageNodesFcSettingsPtrOutput {
	return i.ToFoundationImageNodesFcSettingsPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesFcSettingsPtrType) ToFoundationImageNodesFcSettingsPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsPtrOutput)
}

type FoundationImageNodesFcSettingsOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesFcSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesFcSettings)(nil)).Elem()
}

func (o FoundationImageNodesFcSettingsOutput) ToFoundationImageNodesFcSettingsOutput() FoundationImageNodesFcSettingsOutput {
	return o
}

func (o FoundationImageNodesFcSettingsOutput) ToFoundationImageNodesFcSettingsOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsOutput {
	return o
}

func (o FoundationImageNodesFcSettingsOutput) ToFoundationImageNodesFcSettingsPtrOutput() FoundationImageNodesFcSettingsPtrOutput {
	return o.ToFoundationImageNodesFcSettingsPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesFcSettingsOutput) ToFoundationImageNodesFcSettingsPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesFcSettings) *FoundationImageNodesFcSettings {
		return &v
	}).(FoundationImageNodesFcSettingsPtrOutput)
}

// - Foundation Central metadata which will be transferred to the newly imaged node.
// * `fc_metadata.fc_ip` :- IP address of foundation central.
// * `fc_metadata.api_key` :- apiKey which the node uses to register itself with foundation central.
func (o FoundationImageNodesFcSettingsOutput) FcMetadata() FoundationImageNodesFcSettingsFcMetadataOutput {
	return o.ApplyT(func(v FoundationImageNodesFcSettings) FoundationImageNodesFcSettingsFcMetadata { return v.FcMetadata }).(FoundationImageNodesFcSettingsFcMetadataOutput)
}

// - If this attribute is set to True, FC workflow will be invoked.
func (o FoundationImageNodesFcSettingsOutput) FoundationCentral() pulumi.BoolOutput {
	return o.ApplyT(func(v FoundationImageNodesFcSettings) bool { return v.FoundationCentral }).(pulumi.BoolOutput)
}

type FoundationImageNodesFcSettingsPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesFcSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesFcSettings)(nil)).Elem()
}

func (o FoundationImageNodesFcSettingsPtrOutput) ToFoundationImageNodesFcSettingsPtrOutput() FoundationImageNodesFcSettingsPtrOutput {
	return o
}

func (o FoundationImageNodesFcSettingsPtrOutput) ToFoundationImageNodesFcSettingsPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsPtrOutput {
	return o
}

func (o FoundationImageNodesFcSettingsPtrOutput) Elem() FoundationImageNodesFcSettingsOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettings) FoundationImageNodesFcSettings {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesFcSettings
		return ret
	}).(FoundationImageNodesFcSettingsOutput)
}

// - Foundation Central metadata which will be transferred to the newly imaged node.
// * `fc_metadata.fc_ip` :- IP address of foundation central.
// * `fc_metadata.api_key` :- apiKey which the node uses to register itself with foundation central.
func (o FoundationImageNodesFcSettingsPtrOutput) FcMetadata() FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettings) *FoundationImageNodesFcSettingsFcMetadata {
		if v == nil {
			return nil
		}
		return &v.FcMetadata
	}).(FoundationImageNodesFcSettingsFcMetadataPtrOutput)
}

// - If this attribute is set to True, FC workflow will be invoked.
func (o FoundationImageNodesFcSettingsPtrOutput) FoundationCentral() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.FoundationCentral
	}).(pulumi.BoolPtrOutput)
}

type FoundationImageNodesFcSettingsFcMetadata struct {
	ApiKey string `pulumi:"apiKey"`
	FcIp   string `pulumi:"fcIp"`
}

// FoundationImageNodesFcSettingsFcMetadataInput is an input type that accepts FoundationImageNodesFcSettingsFcMetadataArgs and FoundationImageNodesFcSettingsFcMetadataOutput values.
// You can construct a concrete instance of `FoundationImageNodesFcSettingsFcMetadataInput` via:
//
//	FoundationImageNodesFcSettingsFcMetadataArgs{...}
type FoundationImageNodesFcSettingsFcMetadataInput interface {
	pulumi.Input

	ToFoundationImageNodesFcSettingsFcMetadataOutput() FoundationImageNodesFcSettingsFcMetadataOutput
	ToFoundationImageNodesFcSettingsFcMetadataOutputWithContext(context.Context) FoundationImageNodesFcSettingsFcMetadataOutput
}

type FoundationImageNodesFcSettingsFcMetadataArgs struct {
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	FcIp   pulumi.StringInput `pulumi:"fcIp"`
}

func (FoundationImageNodesFcSettingsFcMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesFcSettingsFcMetadata)(nil)).Elem()
}

func (i FoundationImageNodesFcSettingsFcMetadataArgs) ToFoundationImageNodesFcSettingsFcMetadataOutput() FoundationImageNodesFcSettingsFcMetadataOutput {
	return i.ToFoundationImageNodesFcSettingsFcMetadataOutputWithContext(context.Background())
}

func (i FoundationImageNodesFcSettingsFcMetadataArgs) ToFoundationImageNodesFcSettingsFcMetadataOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsFcMetadataOutput)
}

func (i FoundationImageNodesFcSettingsFcMetadataArgs) ToFoundationImageNodesFcSettingsFcMetadataPtrOutput() FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return i.ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesFcSettingsFcMetadataArgs) ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsFcMetadataOutput).ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(ctx)
}

// FoundationImageNodesFcSettingsFcMetadataPtrInput is an input type that accepts FoundationImageNodesFcSettingsFcMetadataArgs, FoundationImageNodesFcSettingsFcMetadataPtr and FoundationImageNodesFcSettingsFcMetadataPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesFcSettingsFcMetadataPtrInput` via:
//
//	        FoundationImageNodesFcSettingsFcMetadataArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesFcSettingsFcMetadataPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesFcSettingsFcMetadataPtrOutput() FoundationImageNodesFcSettingsFcMetadataPtrOutput
	ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(context.Context) FoundationImageNodesFcSettingsFcMetadataPtrOutput
}

type foundationImageNodesFcSettingsFcMetadataPtrType FoundationImageNodesFcSettingsFcMetadataArgs

func FoundationImageNodesFcSettingsFcMetadataPtr(v *FoundationImageNodesFcSettingsFcMetadataArgs) FoundationImageNodesFcSettingsFcMetadataPtrInput {
	return (*foundationImageNodesFcSettingsFcMetadataPtrType)(v)
}

func (*foundationImageNodesFcSettingsFcMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesFcSettingsFcMetadata)(nil)).Elem()
}

func (i *foundationImageNodesFcSettingsFcMetadataPtrType) ToFoundationImageNodesFcSettingsFcMetadataPtrOutput() FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return i.ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesFcSettingsFcMetadataPtrType) ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesFcSettingsFcMetadataPtrOutput)
}

type FoundationImageNodesFcSettingsFcMetadataOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesFcSettingsFcMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesFcSettingsFcMetadata)(nil)).Elem()
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) ToFoundationImageNodesFcSettingsFcMetadataOutput() FoundationImageNodesFcSettingsFcMetadataOutput {
	return o
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) ToFoundationImageNodesFcSettingsFcMetadataOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataOutput {
	return o
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) ToFoundationImageNodesFcSettingsFcMetadataPtrOutput() FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return o.ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesFcSettingsFcMetadata) *FoundationImageNodesFcSettingsFcMetadata {
		return &v
	}).(FoundationImageNodesFcSettingsFcMetadataPtrOutput)
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesFcSettingsFcMetadata) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o FoundationImageNodesFcSettingsFcMetadataOutput) FcIp() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesFcSettingsFcMetadata) string { return v.FcIp }).(pulumi.StringOutput)
}

type FoundationImageNodesFcSettingsFcMetadataPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesFcSettingsFcMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesFcSettingsFcMetadata)(nil)).Elem()
}

func (o FoundationImageNodesFcSettingsFcMetadataPtrOutput) ToFoundationImageNodesFcSettingsFcMetadataPtrOutput() FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return o
}

func (o FoundationImageNodesFcSettingsFcMetadataPtrOutput) ToFoundationImageNodesFcSettingsFcMetadataPtrOutputWithContext(ctx context.Context) FoundationImageNodesFcSettingsFcMetadataPtrOutput {
	return o
}

func (o FoundationImageNodesFcSettingsFcMetadataPtrOutput) Elem() FoundationImageNodesFcSettingsFcMetadataOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettingsFcMetadata) FoundationImageNodesFcSettingsFcMetadata {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesFcSettingsFcMetadata
		return ret
	}).(FoundationImageNodesFcSettingsFcMetadataOutput)
}

func (o FoundationImageNodesFcSettingsFcMetadataPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettingsFcMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesFcSettingsFcMetadataPtrOutput) FcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesFcSettingsFcMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.FcIp
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesHypervisorIso struct {
	// - Details of hypervisor ISO of type esx.
	Esx *FoundationImageNodesHypervisorIsoEsx `pulumi:"esx"`
	// - Details of hypervisor ISO of type hyperv.
	Hyperv *FoundationImageNodesHypervisorIsoHyperv `pulumi:"hyperv"`
	// - Details of hypervisor ISO of type kvm.
	Kvm *FoundationImageNodesHypervisorIsoKvm `pulumi:"kvm"`
	// - Details of hypervisor ISO of type xen.
	Xen *FoundationImageNodesHypervisorIsoXen `pulumi:"xen"`
}

// FoundationImageNodesHypervisorIsoInput is an input type that accepts FoundationImageNodesHypervisorIsoArgs and FoundationImageNodesHypervisorIsoOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoInput` via:
//
//	FoundationImageNodesHypervisorIsoArgs{...}
type FoundationImageNodesHypervisorIsoInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoOutput() FoundationImageNodesHypervisorIsoOutput
	ToFoundationImageNodesHypervisorIsoOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoOutput
}

type FoundationImageNodesHypervisorIsoArgs struct {
	// - Details of hypervisor ISO of type esx.
	Esx FoundationImageNodesHypervisorIsoEsxPtrInput `pulumi:"esx"`
	// - Details of hypervisor ISO of type hyperv.
	Hyperv FoundationImageNodesHypervisorIsoHypervPtrInput `pulumi:"hyperv"`
	// - Details of hypervisor ISO of type kvm.
	Kvm FoundationImageNodesHypervisorIsoKvmPtrInput `pulumi:"kvm"`
	// - Details of hypervisor ISO of type xen.
	Xen FoundationImageNodesHypervisorIsoXenPtrInput `pulumi:"xen"`
}

func (FoundationImageNodesHypervisorIsoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIso)(nil)).Elem()
}

func (i FoundationImageNodesHypervisorIsoArgs) ToFoundationImageNodesHypervisorIsoOutput() FoundationImageNodesHypervisorIsoOutput {
	return i.ToFoundationImageNodesHypervisorIsoOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoArgs) ToFoundationImageNodesHypervisorIsoOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoOutput)
}

func (i FoundationImageNodesHypervisorIsoArgs) ToFoundationImageNodesHypervisorIsoPtrOutput() FoundationImageNodesHypervisorIsoPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoArgs) ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoOutput).ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(ctx)
}

// FoundationImageNodesHypervisorIsoPtrInput is an input type that accepts FoundationImageNodesHypervisorIsoArgs, FoundationImageNodesHypervisorIsoPtr and FoundationImageNodesHypervisorIsoPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoPtrInput` via:
//
//	        FoundationImageNodesHypervisorIsoArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesHypervisorIsoPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoPtrOutput() FoundationImageNodesHypervisorIsoPtrOutput
	ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoPtrOutput
}

type foundationImageNodesHypervisorIsoPtrType FoundationImageNodesHypervisorIsoArgs

func FoundationImageNodesHypervisorIsoPtr(v *FoundationImageNodesHypervisorIsoArgs) FoundationImageNodesHypervisorIsoPtrInput {
	return (*foundationImageNodesHypervisorIsoPtrType)(v)
}

func (*foundationImageNodesHypervisorIsoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIso)(nil)).Elem()
}

func (i *foundationImageNodesHypervisorIsoPtrType) ToFoundationImageNodesHypervisorIsoPtrOutput() FoundationImageNodesHypervisorIsoPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesHypervisorIsoPtrType) ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoPtrOutput)
}

type FoundationImageNodesHypervisorIsoOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIso)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoOutput) ToFoundationImageNodesHypervisorIsoOutput() FoundationImageNodesHypervisorIsoOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoOutput) ToFoundationImageNodesHypervisorIsoOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoOutput) ToFoundationImageNodesHypervisorIsoPtrOutput() FoundationImageNodesHypervisorIsoPtrOutput {
	return o.ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesHypervisorIsoOutput) ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIso {
		return &v
	}).(FoundationImageNodesHypervisorIsoPtrOutput)
}

// - Details of hypervisor ISO of type esx.
func (o FoundationImageNodesHypervisorIsoOutput) Esx() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoEsx { return v.Esx }).(FoundationImageNodesHypervisorIsoEsxPtrOutput)
}

// - Details of hypervisor ISO of type hyperv.
func (o FoundationImageNodesHypervisorIsoOutput) Hyperv() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoHyperv { return v.Hyperv }).(FoundationImageNodesHypervisorIsoHypervPtrOutput)
}

// - Details of hypervisor ISO of type kvm.
func (o FoundationImageNodesHypervisorIsoOutput) Kvm() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoKvm { return v.Kvm }).(FoundationImageNodesHypervisorIsoKvmPtrOutput)
}

// - Details of hypervisor ISO of type xen.
func (o FoundationImageNodesHypervisorIsoOutput) Xen() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoXen { return v.Xen }).(FoundationImageNodesHypervisorIsoXenPtrOutput)
}

type FoundationImageNodesHypervisorIsoPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIso)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoPtrOutput) ToFoundationImageNodesHypervisorIsoPtrOutput() FoundationImageNodesHypervisorIsoPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoPtrOutput) ToFoundationImageNodesHypervisorIsoPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoPtrOutput) Elem() FoundationImageNodesHypervisorIsoOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIso) FoundationImageNodesHypervisorIso {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesHypervisorIso
		return ret
	}).(FoundationImageNodesHypervisorIsoOutput)
}

// - Details of hypervisor ISO of type esx.
func (o FoundationImageNodesHypervisorIsoPtrOutput) Esx() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoEsx {
		if v == nil {
			return nil
		}
		return v.Esx
	}).(FoundationImageNodesHypervisorIsoEsxPtrOutput)
}

// - Details of hypervisor ISO of type hyperv.
func (o FoundationImageNodesHypervisorIsoPtrOutput) Hyperv() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoHyperv {
		if v == nil {
			return nil
		}
		return v.Hyperv
	}).(FoundationImageNodesHypervisorIsoHypervPtrOutput)
}

// - Details of hypervisor ISO of type kvm.
func (o FoundationImageNodesHypervisorIsoPtrOutput) Kvm() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoKvm {
		if v == nil {
			return nil
		}
		return v.Kvm
	}).(FoundationImageNodesHypervisorIsoKvmPtrOutput)
}

// - Details of hypervisor ISO of type xen.
func (o FoundationImageNodesHypervisorIsoPtrOutput) Xen() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIso) *FoundationImageNodesHypervisorIsoXen {
		if v == nil {
			return nil
		}
		return v.Xen
	}).(FoundationImageNodesHypervisorIsoXenPtrOutput)
}

type FoundationImageNodesHypervisorIsoEsx struct {
	Checksum string `pulumi:"checksum"`
	Filename string `pulumi:"filename"`
}

// FoundationImageNodesHypervisorIsoEsxInput is an input type that accepts FoundationImageNodesHypervisorIsoEsxArgs and FoundationImageNodesHypervisorIsoEsxOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoEsxInput` via:
//
//	FoundationImageNodesHypervisorIsoEsxArgs{...}
type FoundationImageNodesHypervisorIsoEsxInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoEsxOutput() FoundationImageNodesHypervisorIsoEsxOutput
	ToFoundationImageNodesHypervisorIsoEsxOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoEsxOutput
}

type FoundationImageNodesHypervisorIsoEsxArgs struct {
	Checksum pulumi.StringInput `pulumi:"checksum"`
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (FoundationImageNodesHypervisorIsoEsxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoEsx)(nil)).Elem()
}

func (i FoundationImageNodesHypervisorIsoEsxArgs) ToFoundationImageNodesHypervisorIsoEsxOutput() FoundationImageNodesHypervisorIsoEsxOutput {
	return i.ToFoundationImageNodesHypervisorIsoEsxOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoEsxArgs) ToFoundationImageNodesHypervisorIsoEsxOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoEsxOutput)
}

func (i FoundationImageNodesHypervisorIsoEsxArgs) ToFoundationImageNodesHypervisorIsoEsxPtrOutput() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoEsxArgs) ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoEsxOutput).ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(ctx)
}

// FoundationImageNodesHypervisorIsoEsxPtrInput is an input type that accepts FoundationImageNodesHypervisorIsoEsxArgs, FoundationImageNodesHypervisorIsoEsxPtr and FoundationImageNodesHypervisorIsoEsxPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoEsxPtrInput` via:
//
//	        FoundationImageNodesHypervisorIsoEsxArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesHypervisorIsoEsxPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoEsxPtrOutput() FoundationImageNodesHypervisorIsoEsxPtrOutput
	ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoEsxPtrOutput
}

type foundationImageNodesHypervisorIsoEsxPtrType FoundationImageNodesHypervisorIsoEsxArgs

func FoundationImageNodesHypervisorIsoEsxPtr(v *FoundationImageNodesHypervisorIsoEsxArgs) FoundationImageNodesHypervisorIsoEsxPtrInput {
	return (*foundationImageNodesHypervisorIsoEsxPtrType)(v)
}

func (*foundationImageNodesHypervisorIsoEsxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoEsx)(nil)).Elem()
}

func (i *foundationImageNodesHypervisorIsoEsxPtrType) ToFoundationImageNodesHypervisorIsoEsxPtrOutput() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesHypervisorIsoEsxPtrType) ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoEsxPtrOutput)
}

type FoundationImageNodesHypervisorIsoEsxOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoEsxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoEsx)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) ToFoundationImageNodesHypervisorIsoEsxOutput() FoundationImageNodesHypervisorIsoEsxOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) ToFoundationImageNodesHypervisorIsoEsxOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) ToFoundationImageNodesHypervisorIsoEsxPtrOutput() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o.ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesHypervisorIsoEsx) *FoundationImageNodesHypervisorIsoEsx {
		return &v
	}).(FoundationImageNodesHypervisorIsoEsxPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoEsx) string { return v.Checksum }).(pulumi.StringOutput)
}

func (o FoundationImageNodesHypervisorIsoEsxOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoEsx) string { return v.Filename }).(pulumi.StringOutput)
}

type FoundationImageNodesHypervisorIsoEsxPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoEsxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoEsx)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoEsxPtrOutput) ToFoundationImageNodesHypervisorIsoEsxPtrOutput() FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoEsxPtrOutput) ToFoundationImageNodesHypervisorIsoEsxPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoEsxPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoEsxPtrOutput) Elem() FoundationImageNodesHypervisorIsoEsxOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoEsx) FoundationImageNodesHypervisorIsoEsx {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesHypervisorIsoEsx
		return ret
	}).(FoundationImageNodesHypervisorIsoEsxOutput)
}

func (o FoundationImageNodesHypervisorIsoEsxPtrOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoEsx) *string {
		if v == nil {
			return nil
		}
		return &v.Checksum
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoEsxPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoEsx) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesHypervisorIsoHyperv struct {
	Checksum string `pulumi:"checksum"`
	Filename string `pulumi:"filename"`
}

// FoundationImageNodesHypervisorIsoHypervInput is an input type that accepts FoundationImageNodesHypervisorIsoHypervArgs and FoundationImageNodesHypervisorIsoHypervOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoHypervInput` via:
//
//	FoundationImageNodesHypervisorIsoHypervArgs{...}
type FoundationImageNodesHypervisorIsoHypervInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoHypervOutput() FoundationImageNodesHypervisorIsoHypervOutput
	ToFoundationImageNodesHypervisorIsoHypervOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoHypervOutput
}

type FoundationImageNodesHypervisorIsoHypervArgs struct {
	Checksum pulumi.StringInput `pulumi:"checksum"`
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (FoundationImageNodesHypervisorIsoHypervArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoHyperv)(nil)).Elem()
}

func (i FoundationImageNodesHypervisorIsoHypervArgs) ToFoundationImageNodesHypervisorIsoHypervOutput() FoundationImageNodesHypervisorIsoHypervOutput {
	return i.ToFoundationImageNodesHypervisorIsoHypervOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoHypervArgs) ToFoundationImageNodesHypervisorIsoHypervOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoHypervOutput)
}

func (i FoundationImageNodesHypervisorIsoHypervArgs) ToFoundationImageNodesHypervisorIsoHypervPtrOutput() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoHypervArgs) ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoHypervOutput).ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(ctx)
}

// FoundationImageNodesHypervisorIsoHypervPtrInput is an input type that accepts FoundationImageNodesHypervisorIsoHypervArgs, FoundationImageNodesHypervisorIsoHypervPtr and FoundationImageNodesHypervisorIsoHypervPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoHypervPtrInput` via:
//
//	        FoundationImageNodesHypervisorIsoHypervArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesHypervisorIsoHypervPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoHypervPtrOutput() FoundationImageNodesHypervisorIsoHypervPtrOutput
	ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoHypervPtrOutput
}

type foundationImageNodesHypervisorIsoHypervPtrType FoundationImageNodesHypervisorIsoHypervArgs

func FoundationImageNodesHypervisorIsoHypervPtr(v *FoundationImageNodesHypervisorIsoHypervArgs) FoundationImageNodesHypervisorIsoHypervPtrInput {
	return (*foundationImageNodesHypervisorIsoHypervPtrType)(v)
}

func (*foundationImageNodesHypervisorIsoHypervPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoHyperv)(nil)).Elem()
}

func (i *foundationImageNodesHypervisorIsoHypervPtrType) ToFoundationImageNodesHypervisorIsoHypervPtrOutput() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesHypervisorIsoHypervPtrType) ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoHypervPtrOutput)
}

type FoundationImageNodesHypervisorIsoHypervOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoHypervOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoHyperv)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) ToFoundationImageNodesHypervisorIsoHypervOutput() FoundationImageNodesHypervisorIsoHypervOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) ToFoundationImageNodesHypervisorIsoHypervOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) ToFoundationImageNodesHypervisorIsoHypervPtrOutput() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o.ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesHypervisorIsoHyperv) *FoundationImageNodesHypervisorIsoHyperv {
		return &v
	}).(FoundationImageNodesHypervisorIsoHypervPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoHyperv) string { return v.Checksum }).(pulumi.StringOutput)
}

func (o FoundationImageNodesHypervisorIsoHypervOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoHyperv) string { return v.Filename }).(pulumi.StringOutput)
}

type FoundationImageNodesHypervisorIsoHypervPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoHypervPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoHyperv)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoHypervPtrOutput) ToFoundationImageNodesHypervisorIsoHypervPtrOutput() FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoHypervPtrOutput) ToFoundationImageNodesHypervisorIsoHypervPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoHypervPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoHypervPtrOutput) Elem() FoundationImageNodesHypervisorIsoHypervOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoHyperv) FoundationImageNodesHypervisorIsoHyperv {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesHypervisorIsoHyperv
		return ret
	}).(FoundationImageNodesHypervisorIsoHypervOutput)
}

func (o FoundationImageNodesHypervisorIsoHypervPtrOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoHyperv) *string {
		if v == nil {
			return nil
		}
		return &v.Checksum
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoHypervPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoHyperv) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesHypervisorIsoKvm struct {
	Checksum string `pulumi:"checksum"`
	Filename string `pulumi:"filename"`
}

// FoundationImageNodesHypervisorIsoKvmInput is an input type that accepts FoundationImageNodesHypervisorIsoKvmArgs and FoundationImageNodesHypervisorIsoKvmOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoKvmInput` via:
//
//	FoundationImageNodesHypervisorIsoKvmArgs{...}
type FoundationImageNodesHypervisorIsoKvmInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoKvmOutput() FoundationImageNodesHypervisorIsoKvmOutput
	ToFoundationImageNodesHypervisorIsoKvmOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoKvmOutput
}

type FoundationImageNodesHypervisorIsoKvmArgs struct {
	Checksum pulumi.StringInput `pulumi:"checksum"`
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (FoundationImageNodesHypervisorIsoKvmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoKvm)(nil)).Elem()
}

func (i FoundationImageNodesHypervisorIsoKvmArgs) ToFoundationImageNodesHypervisorIsoKvmOutput() FoundationImageNodesHypervisorIsoKvmOutput {
	return i.ToFoundationImageNodesHypervisorIsoKvmOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoKvmArgs) ToFoundationImageNodesHypervisorIsoKvmOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoKvmOutput)
}

func (i FoundationImageNodesHypervisorIsoKvmArgs) ToFoundationImageNodesHypervisorIsoKvmPtrOutput() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoKvmArgs) ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoKvmOutput).ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(ctx)
}

// FoundationImageNodesHypervisorIsoKvmPtrInput is an input type that accepts FoundationImageNodesHypervisorIsoKvmArgs, FoundationImageNodesHypervisorIsoKvmPtr and FoundationImageNodesHypervisorIsoKvmPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoKvmPtrInput` via:
//
//	        FoundationImageNodesHypervisorIsoKvmArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesHypervisorIsoKvmPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoKvmPtrOutput() FoundationImageNodesHypervisorIsoKvmPtrOutput
	ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoKvmPtrOutput
}

type foundationImageNodesHypervisorIsoKvmPtrType FoundationImageNodesHypervisorIsoKvmArgs

func FoundationImageNodesHypervisorIsoKvmPtr(v *FoundationImageNodesHypervisorIsoKvmArgs) FoundationImageNodesHypervisorIsoKvmPtrInput {
	return (*foundationImageNodesHypervisorIsoKvmPtrType)(v)
}

func (*foundationImageNodesHypervisorIsoKvmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoKvm)(nil)).Elem()
}

func (i *foundationImageNodesHypervisorIsoKvmPtrType) ToFoundationImageNodesHypervisorIsoKvmPtrOutput() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesHypervisorIsoKvmPtrType) ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoKvmPtrOutput)
}

type FoundationImageNodesHypervisorIsoKvmOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoKvmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoKvm)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) ToFoundationImageNodesHypervisorIsoKvmOutput() FoundationImageNodesHypervisorIsoKvmOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) ToFoundationImageNodesHypervisorIsoKvmOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) ToFoundationImageNodesHypervisorIsoKvmPtrOutput() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o.ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesHypervisorIsoKvm) *FoundationImageNodesHypervisorIsoKvm {
		return &v
	}).(FoundationImageNodesHypervisorIsoKvmPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoKvm) string { return v.Checksum }).(pulumi.StringOutput)
}

func (o FoundationImageNodesHypervisorIsoKvmOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoKvm) string { return v.Filename }).(pulumi.StringOutput)
}

type FoundationImageNodesHypervisorIsoKvmPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoKvmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoKvm)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoKvmPtrOutput) ToFoundationImageNodesHypervisorIsoKvmPtrOutput() FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoKvmPtrOutput) ToFoundationImageNodesHypervisorIsoKvmPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoKvmPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoKvmPtrOutput) Elem() FoundationImageNodesHypervisorIsoKvmOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoKvm) FoundationImageNodesHypervisorIsoKvm {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesHypervisorIsoKvm
		return ret
	}).(FoundationImageNodesHypervisorIsoKvmOutput)
}

func (o FoundationImageNodesHypervisorIsoKvmPtrOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoKvm) *string {
		if v == nil {
			return nil
		}
		return &v.Checksum
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoKvmPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoKvm) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesHypervisorIsoXen struct {
	Checksum string `pulumi:"checksum"`
	Filename string `pulumi:"filename"`
}

// FoundationImageNodesHypervisorIsoXenInput is an input type that accepts FoundationImageNodesHypervisorIsoXenArgs and FoundationImageNodesHypervisorIsoXenOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoXenInput` via:
//
//	FoundationImageNodesHypervisorIsoXenArgs{...}
type FoundationImageNodesHypervisorIsoXenInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoXenOutput() FoundationImageNodesHypervisorIsoXenOutput
	ToFoundationImageNodesHypervisorIsoXenOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoXenOutput
}

type FoundationImageNodesHypervisorIsoXenArgs struct {
	Checksum pulumi.StringInput `pulumi:"checksum"`
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (FoundationImageNodesHypervisorIsoXenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoXen)(nil)).Elem()
}

func (i FoundationImageNodesHypervisorIsoXenArgs) ToFoundationImageNodesHypervisorIsoXenOutput() FoundationImageNodesHypervisorIsoXenOutput {
	return i.ToFoundationImageNodesHypervisorIsoXenOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoXenArgs) ToFoundationImageNodesHypervisorIsoXenOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoXenOutput)
}

func (i FoundationImageNodesHypervisorIsoXenArgs) ToFoundationImageNodesHypervisorIsoXenPtrOutput() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesHypervisorIsoXenArgs) ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoXenOutput).ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(ctx)
}

// FoundationImageNodesHypervisorIsoXenPtrInput is an input type that accepts FoundationImageNodesHypervisorIsoXenArgs, FoundationImageNodesHypervisorIsoXenPtr and FoundationImageNodesHypervisorIsoXenPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesHypervisorIsoXenPtrInput` via:
//
//	        FoundationImageNodesHypervisorIsoXenArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesHypervisorIsoXenPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesHypervisorIsoXenPtrOutput() FoundationImageNodesHypervisorIsoXenPtrOutput
	ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(context.Context) FoundationImageNodesHypervisorIsoXenPtrOutput
}

type foundationImageNodesHypervisorIsoXenPtrType FoundationImageNodesHypervisorIsoXenArgs

func FoundationImageNodesHypervisorIsoXenPtr(v *FoundationImageNodesHypervisorIsoXenArgs) FoundationImageNodesHypervisorIsoXenPtrInput {
	return (*foundationImageNodesHypervisorIsoXenPtrType)(v)
}

func (*foundationImageNodesHypervisorIsoXenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoXen)(nil)).Elem()
}

func (i *foundationImageNodesHypervisorIsoXenPtrType) ToFoundationImageNodesHypervisorIsoXenPtrOutput() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return i.ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesHypervisorIsoXenPtrType) ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesHypervisorIsoXenPtrOutput)
}

type FoundationImageNodesHypervisorIsoXenOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoXenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesHypervisorIsoXen)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoXenOutput) ToFoundationImageNodesHypervisorIsoXenOutput() FoundationImageNodesHypervisorIsoXenOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoXenOutput) ToFoundationImageNodesHypervisorIsoXenOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoXenOutput) ToFoundationImageNodesHypervisorIsoXenPtrOutput() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o.ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesHypervisorIsoXenOutput) ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesHypervisorIsoXen) *FoundationImageNodesHypervisorIsoXen {
		return &v
	}).(FoundationImageNodesHypervisorIsoXenPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoXenOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoXen) string { return v.Checksum }).(pulumi.StringOutput)
}

func (o FoundationImageNodesHypervisorIsoXenOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationImageNodesHypervisorIsoXen) string { return v.Filename }).(pulumi.StringOutput)
}

type FoundationImageNodesHypervisorIsoXenPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesHypervisorIsoXenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesHypervisorIsoXen)(nil)).Elem()
}

func (o FoundationImageNodesHypervisorIsoXenPtrOutput) ToFoundationImageNodesHypervisorIsoXenPtrOutput() FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoXenPtrOutput) ToFoundationImageNodesHypervisorIsoXenPtrOutputWithContext(ctx context.Context) FoundationImageNodesHypervisorIsoXenPtrOutput {
	return o
}

func (o FoundationImageNodesHypervisorIsoXenPtrOutput) Elem() FoundationImageNodesHypervisorIsoXenOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoXen) FoundationImageNodesHypervisorIsoXen {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesHypervisorIsoXen
		return ret
	}).(FoundationImageNodesHypervisorIsoXenOutput)
}

func (o FoundationImageNodesHypervisorIsoXenPtrOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoXen) *string {
		if v == nil {
			return nil
		}
		return &v.Checksum
	}).(pulumi.StringPtrOutput)
}

func (o FoundationImageNodesHypervisorIsoXenPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesHypervisorIsoXen) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type FoundationImageNodesTests struct {
	// - Whether NCC checks should run.
	RunNcc *bool `pulumi:"runNcc"`
	// - Whether system checks should run.
	RunSyscheck *bool `pulumi:"runSyscheck"`
}

// FoundationImageNodesTestsInput is an input type that accepts FoundationImageNodesTestsArgs and FoundationImageNodesTestsOutput values.
// You can construct a concrete instance of `FoundationImageNodesTestsInput` via:
//
//	FoundationImageNodesTestsArgs{...}
type FoundationImageNodesTestsInput interface {
	pulumi.Input

	ToFoundationImageNodesTestsOutput() FoundationImageNodesTestsOutput
	ToFoundationImageNodesTestsOutputWithContext(context.Context) FoundationImageNodesTestsOutput
}

type FoundationImageNodesTestsArgs struct {
	// - Whether NCC checks should run.
	RunNcc pulumi.BoolPtrInput `pulumi:"runNcc"`
	// - Whether system checks should run.
	RunSyscheck pulumi.BoolPtrInput `pulumi:"runSyscheck"`
}

func (FoundationImageNodesTestsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesTests)(nil)).Elem()
}

func (i FoundationImageNodesTestsArgs) ToFoundationImageNodesTestsOutput() FoundationImageNodesTestsOutput {
	return i.ToFoundationImageNodesTestsOutputWithContext(context.Background())
}

func (i FoundationImageNodesTestsArgs) ToFoundationImageNodesTestsOutputWithContext(ctx context.Context) FoundationImageNodesTestsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesTestsOutput)
}

func (i FoundationImageNodesTestsArgs) ToFoundationImageNodesTestsPtrOutput() FoundationImageNodesTestsPtrOutput {
	return i.ToFoundationImageNodesTestsPtrOutputWithContext(context.Background())
}

func (i FoundationImageNodesTestsArgs) ToFoundationImageNodesTestsPtrOutputWithContext(ctx context.Context) FoundationImageNodesTestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesTestsOutput).ToFoundationImageNodesTestsPtrOutputWithContext(ctx)
}

// FoundationImageNodesTestsPtrInput is an input type that accepts FoundationImageNodesTestsArgs, FoundationImageNodesTestsPtr and FoundationImageNodesTestsPtrOutput values.
// You can construct a concrete instance of `FoundationImageNodesTestsPtrInput` via:
//
//	        FoundationImageNodesTestsArgs{...}
//
//	or:
//
//	        nil
type FoundationImageNodesTestsPtrInput interface {
	pulumi.Input

	ToFoundationImageNodesTestsPtrOutput() FoundationImageNodesTestsPtrOutput
	ToFoundationImageNodesTestsPtrOutputWithContext(context.Context) FoundationImageNodesTestsPtrOutput
}

type foundationImageNodesTestsPtrType FoundationImageNodesTestsArgs

func FoundationImageNodesTestsPtr(v *FoundationImageNodesTestsArgs) FoundationImageNodesTestsPtrInput {
	return (*foundationImageNodesTestsPtrType)(v)
}

func (*foundationImageNodesTestsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesTests)(nil)).Elem()
}

func (i *foundationImageNodesTestsPtrType) ToFoundationImageNodesTestsPtrOutput() FoundationImageNodesTestsPtrOutput {
	return i.ToFoundationImageNodesTestsPtrOutputWithContext(context.Background())
}

func (i *foundationImageNodesTestsPtrType) ToFoundationImageNodesTestsPtrOutputWithContext(ctx context.Context) FoundationImageNodesTestsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationImageNodesTestsPtrOutput)
}

type FoundationImageNodesTestsOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesTestsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationImageNodesTests)(nil)).Elem()
}

func (o FoundationImageNodesTestsOutput) ToFoundationImageNodesTestsOutput() FoundationImageNodesTestsOutput {
	return o
}

func (o FoundationImageNodesTestsOutput) ToFoundationImageNodesTestsOutputWithContext(ctx context.Context) FoundationImageNodesTestsOutput {
	return o
}

func (o FoundationImageNodesTestsOutput) ToFoundationImageNodesTestsPtrOutput() FoundationImageNodesTestsPtrOutput {
	return o.ToFoundationImageNodesTestsPtrOutputWithContext(context.Background())
}

func (o FoundationImageNodesTestsOutput) ToFoundationImageNodesTestsPtrOutputWithContext(ctx context.Context) FoundationImageNodesTestsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FoundationImageNodesTests) *FoundationImageNodesTests {
		return &v
	}).(FoundationImageNodesTestsPtrOutput)
}

// - Whether NCC checks should run.
func (o FoundationImageNodesTestsOutput) RunNcc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesTests) *bool { return v.RunNcc }).(pulumi.BoolPtrOutput)
}

// - Whether system checks should run.
func (o FoundationImageNodesTestsOutput) RunSyscheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationImageNodesTests) *bool { return v.RunSyscheck }).(pulumi.BoolPtrOutput)
}

type FoundationImageNodesTestsPtrOutput struct{ *pulumi.OutputState }

func (FoundationImageNodesTestsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FoundationImageNodesTests)(nil)).Elem()
}

func (o FoundationImageNodesTestsPtrOutput) ToFoundationImageNodesTestsPtrOutput() FoundationImageNodesTestsPtrOutput {
	return o
}

func (o FoundationImageNodesTestsPtrOutput) ToFoundationImageNodesTestsPtrOutputWithContext(ctx context.Context) FoundationImageNodesTestsPtrOutput {
	return o
}

func (o FoundationImageNodesTestsPtrOutput) Elem() FoundationImageNodesTestsOutput {
	return o.ApplyT(func(v *FoundationImageNodesTests) FoundationImageNodesTests {
		if v != nil {
			return *v
		}
		var ret FoundationImageNodesTests
		return ret
	}).(FoundationImageNodesTestsOutput)
}

// - Whether NCC checks should run.
func (o FoundationImageNodesTestsPtrOutput) RunNcc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesTests) *bool {
		if v == nil {
			return nil
		}
		return v.RunNcc
	}).(pulumi.BoolPtrOutput)
}

// - Whether system checks should run.
func (o FoundationImageNodesTestsPtrOutput) RunSyscheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FoundationImageNodesTests) *bool {
		if v == nil {
			return nil
		}
		return v.RunSyscheck
	}).(pulumi.BoolPtrOutput)
}

type FoundationIpmiConfigBlock struct {
	// - (Optional) Block Id
	BlockId *string `pulumi:"blockId"`
	// - (Required) array of nodes for ipmi config.
	Nodes []FoundationIpmiConfigBlockNode `pulumi:"nodes"`
}

// FoundationIpmiConfigBlockInput is an input type that accepts FoundationIpmiConfigBlockArgs and FoundationIpmiConfigBlockOutput values.
// You can construct a concrete instance of `FoundationIpmiConfigBlockInput` via:
//
//	FoundationIpmiConfigBlockArgs{...}
type FoundationIpmiConfigBlockInput interface {
	pulumi.Input

	ToFoundationIpmiConfigBlockOutput() FoundationIpmiConfigBlockOutput
	ToFoundationIpmiConfigBlockOutputWithContext(context.Context) FoundationIpmiConfigBlockOutput
}

type FoundationIpmiConfigBlockArgs struct {
	// - (Optional) Block Id
	BlockId pulumi.StringPtrInput `pulumi:"blockId"`
	// - (Required) array of nodes for ipmi config.
	Nodes FoundationIpmiConfigBlockNodeArrayInput `pulumi:"nodes"`
}

func (FoundationIpmiConfigBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationIpmiConfigBlock)(nil)).Elem()
}

func (i FoundationIpmiConfigBlockArgs) ToFoundationIpmiConfigBlockOutput() FoundationIpmiConfigBlockOutput {
	return i.ToFoundationIpmiConfigBlockOutputWithContext(context.Background())
}

func (i FoundationIpmiConfigBlockArgs) ToFoundationIpmiConfigBlockOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationIpmiConfigBlockOutput)
}

// FoundationIpmiConfigBlockArrayInput is an input type that accepts FoundationIpmiConfigBlockArray and FoundationIpmiConfigBlockArrayOutput values.
// You can construct a concrete instance of `FoundationIpmiConfigBlockArrayInput` via:
//
//	FoundationIpmiConfigBlockArray{ FoundationIpmiConfigBlockArgs{...} }
type FoundationIpmiConfigBlockArrayInput interface {
	pulumi.Input

	ToFoundationIpmiConfigBlockArrayOutput() FoundationIpmiConfigBlockArrayOutput
	ToFoundationIpmiConfigBlockArrayOutputWithContext(context.Context) FoundationIpmiConfigBlockArrayOutput
}

type FoundationIpmiConfigBlockArray []FoundationIpmiConfigBlockInput

func (FoundationIpmiConfigBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationIpmiConfigBlock)(nil)).Elem()
}

func (i FoundationIpmiConfigBlockArray) ToFoundationIpmiConfigBlockArrayOutput() FoundationIpmiConfigBlockArrayOutput {
	return i.ToFoundationIpmiConfigBlockArrayOutputWithContext(context.Background())
}

func (i FoundationIpmiConfigBlockArray) ToFoundationIpmiConfigBlockArrayOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationIpmiConfigBlockArrayOutput)
}

type FoundationIpmiConfigBlockOutput struct{ *pulumi.OutputState }

func (FoundationIpmiConfigBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationIpmiConfigBlock)(nil)).Elem()
}

func (o FoundationIpmiConfigBlockOutput) ToFoundationIpmiConfigBlockOutput() FoundationIpmiConfigBlockOutput {
	return o
}

func (o FoundationIpmiConfigBlockOutput) ToFoundationIpmiConfigBlockOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockOutput {
	return o
}

// - (Optional) Block Id
func (o FoundationIpmiConfigBlockOutput) BlockId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlock) *string { return v.BlockId }).(pulumi.StringPtrOutput)
}

// - (Required) array of nodes for ipmi config.
func (o FoundationIpmiConfigBlockOutput) Nodes() FoundationIpmiConfigBlockNodeArrayOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlock) []FoundationIpmiConfigBlockNode { return v.Nodes }).(FoundationIpmiConfigBlockNodeArrayOutput)
}

type FoundationIpmiConfigBlockArrayOutput struct{ *pulumi.OutputState }

func (FoundationIpmiConfigBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationIpmiConfigBlock)(nil)).Elem()
}

func (o FoundationIpmiConfigBlockArrayOutput) ToFoundationIpmiConfigBlockArrayOutput() FoundationIpmiConfigBlockArrayOutput {
	return o
}

func (o FoundationIpmiConfigBlockArrayOutput) ToFoundationIpmiConfigBlockArrayOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockArrayOutput {
	return o
}

func (o FoundationIpmiConfigBlockArrayOutput) Index(i pulumi.IntInput) FoundationIpmiConfigBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationIpmiConfigBlock {
		return vs[0].([]FoundationIpmiConfigBlock)[vs[1].(int)]
	}).(FoundationIpmiConfigBlockOutput)
}

type FoundationIpmiConfigBlockNode struct {
	// - (Required) Whether IPMI should be configured. Should be kept true to configure
	IpmiConfigureNow bool `pulumi:"ipmiConfigureNow"`
	// - Whether IPMI was successfully configured.
	IpmiConfigureSuccessful *bool `pulumi:"ipmiConfigureSuccessful"`
	// - IPMI IP address.
	IpmiIp string `pulumi:"ipmiIp"`
	// - (Required) IPMI mac address.
	IpmiMac string `pulumi:"ipmiMac"`
	// - IPMI configuration status message if any.
	IpmiMessage *string `pulumi:"ipmiMessage"`
}

// FoundationIpmiConfigBlockNodeInput is an input type that accepts FoundationIpmiConfigBlockNodeArgs and FoundationIpmiConfigBlockNodeOutput values.
// You can construct a concrete instance of `FoundationIpmiConfigBlockNodeInput` via:
//
//	FoundationIpmiConfigBlockNodeArgs{...}
type FoundationIpmiConfigBlockNodeInput interface {
	pulumi.Input

	ToFoundationIpmiConfigBlockNodeOutput() FoundationIpmiConfigBlockNodeOutput
	ToFoundationIpmiConfigBlockNodeOutputWithContext(context.Context) FoundationIpmiConfigBlockNodeOutput
}

type FoundationIpmiConfigBlockNodeArgs struct {
	// - (Required) Whether IPMI should be configured. Should be kept true to configure
	IpmiConfigureNow pulumi.BoolInput `pulumi:"ipmiConfigureNow"`
	// - Whether IPMI was successfully configured.
	IpmiConfigureSuccessful pulumi.BoolPtrInput `pulumi:"ipmiConfigureSuccessful"`
	// - IPMI IP address.
	IpmiIp pulumi.StringInput `pulumi:"ipmiIp"`
	// - (Required) IPMI mac address.
	IpmiMac pulumi.StringInput `pulumi:"ipmiMac"`
	// - IPMI configuration status message if any.
	IpmiMessage pulumi.StringPtrInput `pulumi:"ipmiMessage"`
}

func (FoundationIpmiConfigBlockNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationIpmiConfigBlockNode)(nil)).Elem()
}

func (i FoundationIpmiConfigBlockNodeArgs) ToFoundationIpmiConfigBlockNodeOutput() FoundationIpmiConfigBlockNodeOutput {
	return i.ToFoundationIpmiConfigBlockNodeOutputWithContext(context.Background())
}

func (i FoundationIpmiConfigBlockNodeArgs) ToFoundationIpmiConfigBlockNodeOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationIpmiConfigBlockNodeOutput)
}

// FoundationIpmiConfigBlockNodeArrayInput is an input type that accepts FoundationIpmiConfigBlockNodeArray and FoundationIpmiConfigBlockNodeArrayOutput values.
// You can construct a concrete instance of `FoundationIpmiConfigBlockNodeArrayInput` via:
//
//	FoundationIpmiConfigBlockNodeArray{ FoundationIpmiConfigBlockNodeArgs{...} }
type FoundationIpmiConfigBlockNodeArrayInput interface {
	pulumi.Input

	ToFoundationIpmiConfigBlockNodeArrayOutput() FoundationIpmiConfigBlockNodeArrayOutput
	ToFoundationIpmiConfigBlockNodeArrayOutputWithContext(context.Context) FoundationIpmiConfigBlockNodeArrayOutput
}

type FoundationIpmiConfigBlockNodeArray []FoundationIpmiConfigBlockNodeInput

func (FoundationIpmiConfigBlockNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationIpmiConfigBlockNode)(nil)).Elem()
}

func (i FoundationIpmiConfigBlockNodeArray) ToFoundationIpmiConfigBlockNodeArrayOutput() FoundationIpmiConfigBlockNodeArrayOutput {
	return i.ToFoundationIpmiConfigBlockNodeArrayOutputWithContext(context.Background())
}

func (i FoundationIpmiConfigBlockNodeArray) ToFoundationIpmiConfigBlockNodeArrayOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FoundationIpmiConfigBlockNodeArrayOutput)
}

type FoundationIpmiConfigBlockNodeOutput struct{ *pulumi.OutputState }

func (FoundationIpmiConfigBlockNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FoundationIpmiConfigBlockNode)(nil)).Elem()
}

func (o FoundationIpmiConfigBlockNodeOutput) ToFoundationIpmiConfigBlockNodeOutput() FoundationIpmiConfigBlockNodeOutput {
	return o
}

func (o FoundationIpmiConfigBlockNodeOutput) ToFoundationIpmiConfigBlockNodeOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockNodeOutput {
	return o
}

// - (Required) Whether IPMI should be configured. Should be kept true to configure
func (o FoundationIpmiConfigBlockNodeOutput) IpmiConfigureNow() pulumi.BoolOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlockNode) bool { return v.IpmiConfigureNow }).(pulumi.BoolOutput)
}

// - Whether IPMI was successfully configured.
func (o FoundationIpmiConfigBlockNodeOutput) IpmiConfigureSuccessful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlockNode) *bool { return v.IpmiConfigureSuccessful }).(pulumi.BoolPtrOutput)
}

// - IPMI IP address.
func (o FoundationIpmiConfigBlockNodeOutput) IpmiIp() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlockNode) string { return v.IpmiIp }).(pulumi.StringOutput)
}

// - (Required) IPMI mac address.
func (o FoundationIpmiConfigBlockNodeOutput) IpmiMac() pulumi.StringOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlockNode) string { return v.IpmiMac }).(pulumi.StringOutput)
}

// - IPMI configuration status message if any.
func (o FoundationIpmiConfigBlockNodeOutput) IpmiMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FoundationIpmiConfigBlockNode) *string { return v.IpmiMessage }).(pulumi.StringPtrOutput)
}

type FoundationIpmiConfigBlockNodeArrayOutput struct{ *pulumi.OutputState }

func (FoundationIpmiConfigBlockNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FoundationIpmiConfigBlockNode)(nil)).Elem()
}

func (o FoundationIpmiConfigBlockNodeArrayOutput) ToFoundationIpmiConfigBlockNodeArrayOutput() FoundationIpmiConfigBlockNodeArrayOutput {
	return o
}

func (o FoundationIpmiConfigBlockNodeArrayOutput) ToFoundationIpmiConfigBlockNodeArrayOutputWithContext(ctx context.Context) FoundationIpmiConfigBlockNodeArrayOutput {
	return o
}

func (o FoundationIpmiConfigBlockNodeArrayOutput) Index(i pulumi.IntInput) FoundationIpmiConfigBlockNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FoundationIpmiConfigBlockNode {
		return vs[0].([]FoundationIpmiConfigBlockNode)[vs[1].(int)]
	}).(FoundationIpmiConfigBlockNodeOutput)
}

type ImageCategory struct {
	// - (Required) The name for the image.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// ImageCategoryInput is an input type that accepts ImageCategoryArgs and ImageCategoryOutput values.
// You can construct a concrete instance of `ImageCategoryInput` via:
//
//	ImageCategoryArgs{...}
type ImageCategoryInput interface {
	pulumi.Input

	ToImageCategoryOutput() ImageCategoryOutput
	ToImageCategoryOutputWithContext(context.Context) ImageCategoryOutput
}

type ImageCategoryArgs struct {
	// - (Required) The name for the image.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ImageCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageCategory)(nil)).Elem()
}

func (i ImageCategoryArgs) ToImageCategoryOutput() ImageCategoryOutput {
	return i.ToImageCategoryOutputWithContext(context.Background())
}

func (i ImageCategoryArgs) ToImageCategoryOutputWithContext(ctx context.Context) ImageCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageCategoryOutput)
}

// ImageCategoryArrayInput is an input type that accepts ImageCategoryArray and ImageCategoryArrayOutput values.
// You can construct a concrete instance of `ImageCategoryArrayInput` via:
//
//	ImageCategoryArray{ ImageCategoryArgs{...} }
type ImageCategoryArrayInput interface {
	pulumi.Input

	ToImageCategoryArrayOutput() ImageCategoryArrayOutput
	ToImageCategoryArrayOutputWithContext(context.Context) ImageCategoryArrayOutput
}

type ImageCategoryArray []ImageCategoryInput

func (ImageCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageCategory)(nil)).Elem()
}

func (i ImageCategoryArray) ToImageCategoryArrayOutput() ImageCategoryArrayOutput {
	return i.ToImageCategoryArrayOutputWithContext(context.Background())
}

func (i ImageCategoryArray) ToImageCategoryArrayOutputWithContext(ctx context.Context) ImageCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageCategoryArrayOutput)
}

type ImageCategoryOutput struct{ *pulumi.OutputState }

func (ImageCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageCategory)(nil)).Elem()
}

func (o ImageCategoryOutput) ToImageCategoryOutput() ImageCategoryOutput {
	return o
}

func (o ImageCategoryOutput) ToImageCategoryOutputWithContext(ctx context.Context) ImageCategoryOutput {
	return o
}

// - (Required) The name for the image.
func (o ImageCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ImageCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ImageCategoryArrayOutput struct{ *pulumi.OutputState }

func (ImageCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageCategory)(nil)).Elem()
}

func (o ImageCategoryArrayOutput) ToImageCategoryArrayOutput() ImageCategoryArrayOutput {
	return o
}

func (o ImageCategoryArrayOutput) ToImageCategoryArrayOutputWithContext(ctx context.Context) ImageCategoryArrayOutput {
	return o
}

func (o ImageCategoryArrayOutput) Index(i pulumi.IntInput) ImageCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageCategory {
		return vs[0].([]ImageCategory)[vs[1].(int)]
	}).(ImageCategoryOutput)
}

type ImageClusterReference struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the image.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// ImageClusterReferenceInput is an input type that accepts ImageClusterReferenceArgs and ImageClusterReferenceOutput values.
// You can construct a concrete instance of `ImageClusterReferenceInput` via:
//
//	ImageClusterReferenceArgs{...}
type ImageClusterReferenceInput interface {
	pulumi.Input

	ToImageClusterReferenceOutput() ImageClusterReferenceOutput
	ToImageClusterReferenceOutputWithContext(context.Context) ImageClusterReferenceOutput
}

type ImageClusterReferenceArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the image.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ImageClusterReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageClusterReference)(nil)).Elem()
}

func (i ImageClusterReferenceArgs) ToImageClusterReferenceOutput() ImageClusterReferenceOutput {
	return i.ToImageClusterReferenceOutputWithContext(context.Background())
}

func (i ImageClusterReferenceArgs) ToImageClusterReferenceOutputWithContext(ctx context.Context) ImageClusterReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageClusterReferenceOutput)
}

// ImageClusterReferenceArrayInput is an input type that accepts ImageClusterReferenceArray and ImageClusterReferenceArrayOutput values.
// You can construct a concrete instance of `ImageClusterReferenceArrayInput` via:
//
//	ImageClusterReferenceArray{ ImageClusterReferenceArgs{...} }
type ImageClusterReferenceArrayInput interface {
	pulumi.Input

	ToImageClusterReferenceArrayOutput() ImageClusterReferenceArrayOutput
	ToImageClusterReferenceArrayOutputWithContext(context.Context) ImageClusterReferenceArrayOutput
}

type ImageClusterReferenceArray []ImageClusterReferenceInput

func (ImageClusterReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageClusterReference)(nil)).Elem()
}

func (i ImageClusterReferenceArray) ToImageClusterReferenceArrayOutput() ImageClusterReferenceArrayOutput {
	return i.ToImageClusterReferenceArrayOutputWithContext(context.Background())
}

func (i ImageClusterReferenceArray) ToImageClusterReferenceArrayOutputWithContext(ctx context.Context) ImageClusterReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageClusterReferenceArrayOutput)
}

type ImageClusterReferenceOutput struct{ *pulumi.OutputState }

func (ImageClusterReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageClusterReference)(nil)).Elem()
}

func (o ImageClusterReferenceOutput) ToImageClusterReferenceOutput() ImageClusterReferenceOutput {
	return o
}

func (o ImageClusterReferenceOutput) ToImageClusterReferenceOutputWithContext(ctx context.Context) ImageClusterReferenceOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o ImageClusterReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageClusterReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the image.
func (o ImageClusterReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageClusterReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o ImageClusterReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageClusterReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ImageClusterReferenceArrayOutput struct{ *pulumi.OutputState }

func (ImageClusterReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageClusterReference)(nil)).Elem()
}

func (o ImageClusterReferenceArrayOutput) ToImageClusterReferenceArrayOutput() ImageClusterReferenceArrayOutput {
	return o
}

func (o ImageClusterReferenceArrayOutput) ToImageClusterReferenceArrayOutputWithContext(ctx context.Context) ImageClusterReferenceArrayOutput {
	return o
}

func (o ImageClusterReferenceArrayOutput) Index(i pulumi.IntInput) ImageClusterReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageClusterReference {
		return vs[0].([]ImageClusterReference)[vs[1].(int)]
	}).(ImageClusterReferenceOutput)
}

type ImageCurrentClusterReferenceList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the image.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// ImageCurrentClusterReferenceListInput is an input type that accepts ImageCurrentClusterReferenceListArgs and ImageCurrentClusterReferenceListOutput values.
// You can construct a concrete instance of `ImageCurrentClusterReferenceListInput` via:
//
//	ImageCurrentClusterReferenceListArgs{...}
type ImageCurrentClusterReferenceListInput interface {
	pulumi.Input

	ToImageCurrentClusterReferenceListOutput() ImageCurrentClusterReferenceListOutput
	ToImageCurrentClusterReferenceListOutputWithContext(context.Context) ImageCurrentClusterReferenceListOutput
}

type ImageCurrentClusterReferenceListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the image.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ImageCurrentClusterReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageCurrentClusterReferenceList)(nil)).Elem()
}

func (i ImageCurrentClusterReferenceListArgs) ToImageCurrentClusterReferenceListOutput() ImageCurrentClusterReferenceListOutput {
	return i.ToImageCurrentClusterReferenceListOutputWithContext(context.Background())
}

func (i ImageCurrentClusterReferenceListArgs) ToImageCurrentClusterReferenceListOutputWithContext(ctx context.Context) ImageCurrentClusterReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageCurrentClusterReferenceListOutput)
}

// ImageCurrentClusterReferenceListArrayInput is an input type that accepts ImageCurrentClusterReferenceListArray and ImageCurrentClusterReferenceListArrayOutput values.
// You can construct a concrete instance of `ImageCurrentClusterReferenceListArrayInput` via:
//
//	ImageCurrentClusterReferenceListArray{ ImageCurrentClusterReferenceListArgs{...} }
type ImageCurrentClusterReferenceListArrayInput interface {
	pulumi.Input

	ToImageCurrentClusterReferenceListArrayOutput() ImageCurrentClusterReferenceListArrayOutput
	ToImageCurrentClusterReferenceListArrayOutputWithContext(context.Context) ImageCurrentClusterReferenceListArrayOutput
}

type ImageCurrentClusterReferenceListArray []ImageCurrentClusterReferenceListInput

func (ImageCurrentClusterReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageCurrentClusterReferenceList)(nil)).Elem()
}

func (i ImageCurrentClusterReferenceListArray) ToImageCurrentClusterReferenceListArrayOutput() ImageCurrentClusterReferenceListArrayOutput {
	return i.ToImageCurrentClusterReferenceListArrayOutputWithContext(context.Background())
}

func (i ImageCurrentClusterReferenceListArray) ToImageCurrentClusterReferenceListArrayOutputWithContext(ctx context.Context) ImageCurrentClusterReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageCurrentClusterReferenceListArrayOutput)
}

type ImageCurrentClusterReferenceListOutput struct{ *pulumi.OutputState }

func (ImageCurrentClusterReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageCurrentClusterReferenceList)(nil)).Elem()
}

func (o ImageCurrentClusterReferenceListOutput) ToImageCurrentClusterReferenceListOutput() ImageCurrentClusterReferenceListOutput {
	return o
}

func (o ImageCurrentClusterReferenceListOutput) ToImageCurrentClusterReferenceListOutputWithContext(ctx context.Context) ImageCurrentClusterReferenceListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o ImageCurrentClusterReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageCurrentClusterReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the image.
func (o ImageCurrentClusterReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageCurrentClusterReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o ImageCurrentClusterReferenceListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageCurrentClusterReferenceList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ImageCurrentClusterReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ImageCurrentClusterReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageCurrentClusterReferenceList)(nil)).Elem()
}

func (o ImageCurrentClusterReferenceListArrayOutput) ToImageCurrentClusterReferenceListArrayOutput() ImageCurrentClusterReferenceListArrayOutput {
	return o
}

func (o ImageCurrentClusterReferenceListArrayOutput) ToImageCurrentClusterReferenceListArrayOutputWithContext(ctx context.Context) ImageCurrentClusterReferenceListArrayOutput {
	return o
}

func (o ImageCurrentClusterReferenceListArrayOutput) Index(i pulumi.IntInput) ImageCurrentClusterReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageCurrentClusterReferenceList {
		return vs[0].([]ImageCurrentClusterReferenceList)[vs[1].(int)]
	}).(ImageCurrentClusterReferenceListOutput)
}

type KarbonClusterActivePassiveConfig struct {
	ExternalIpv4Address string `pulumi:"externalIpv4Address"`
}

// KarbonClusterActivePassiveConfigInput is an input type that accepts KarbonClusterActivePassiveConfigArgs and KarbonClusterActivePassiveConfigOutput values.
// You can construct a concrete instance of `KarbonClusterActivePassiveConfigInput` via:
//
//	KarbonClusterActivePassiveConfigArgs{...}
type KarbonClusterActivePassiveConfigInput interface {
	pulumi.Input

	ToKarbonClusterActivePassiveConfigOutput() KarbonClusterActivePassiveConfigOutput
	ToKarbonClusterActivePassiveConfigOutputWithContext(context.Context) KarbonClusterActivePassiveConfigOutput
}

type KarbonClusterActivePassiveConfigArgs struct {
	ExternalIpv4Address pulumi.StringInput `pulumi:"externalIpv4Address"`
}

func (KarbonClusterActivePassiveConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterActivePassiveConfig)(nil)).Elem()
}

func (i KarbonClusterActivePassiveConfigArgs) ToKarbonClusterActivePassiveConfigOutput() KarbonClusterActivePassiveConfigOutput {
	return i.ToKarbonClusterActivePassiveConfigOutputWithContext(context.Background())
}

func (i KarbonClusterActivePassiveConfigArgs) ToKarbonClusterActivePassiveConfigOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterActivePassiveConfigOutput)
}

func (i KarbonClusterActivePassiveConfigArgs) ToKarbonClusterActivePassiveConfigPtrOutput() KarbonClusterActivePassiveConfigPtrOutput {
	return i.ToKarbonClusterActivePassiveConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterActivePassiveConfigArgs) ToKarbonClusterActivePassiveConfigPtrOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterActivePassiveConfigOutput).ToKarbonClusterActivePassiveConfigPtrOutputWithContext(ctx)
}

// KarbonClusterActivePassiveConfigPtrInput is an input type that accepts KarbonClusterActivePassiveConfigArgs, KarbonClusterActivePassiveConfigPtr and KarbonClusterActivePassiveConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterActivePassiveConfigPtrInput` via:
//
//	        KarbonClusterActivePassiveConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterActivePassiveConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterActivePassiveConfigPtrOutput() KarbonClusterActivePassiveConfigPtrOutput
	ToKarbonClusterActivePassiveConfigPtrOutputWithContext(context.Context) KarbonClusterActivePassiveConfigPtrOutput
}

type karbonClusterActivePassiveConfigPtrType KarbonClusterActivePassiveConfigArgs

func KarbonClusterActivePassiveConfigPtr(v *KarbonClusterActivePassiveConfigArgs) KarbonClusterActivePassiveConfigPtrInput {
	return (*karbonClusterActivePassiveConfigPtrType)(v)
}

func (*karbonClusterActivePassiveConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterActivePassiveConfig)(nil)).Elem()
}

func (i *karbonClusterActivePassiveConfigPtrType) ToKarbonClusterActivePassiveConfigPtrOutput() KarbonClusterActivePassiveConfigPtrOutput {
	return i.ToKarbonClusterActivePassiveConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterActivePassiveConfigPtrType) ToKarbonClusterActivePassiveConfigPtrOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterActivePassiveConfigPtrOutput)
}

type KarbonClusterActivePassiveConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterActivePassiveConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterActivePassiveConfig)(nil)).Elem()
}

func (o KarbonClusterActivePassiveConfigOutput) ToKarbonClusterActivePassiveConfigOutput() KarbonClusterActivePassiveConfigOutput {
	return o
}

func (o KarbonClusterActivePassiveConfigOutput) ToKarbonClusterActivePassiveConfigOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigOutput {
	return o
}

func (o KarbonClusterActivePassiveConfigOutput) ToKarbonClusterActivePassiveConfigPtrOutput() KarbonClusterActivePassiveConfigPtrOutput {
	return o.ToKarbonClusterActivePassiveConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterActivePassiveConfigOutput) ToKarbonClusterActivePassiveConfigPtrOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterActivePassiveConfig) *KarbonClusterActivePassiveConfig {
		return &v
	}).(KarbonClusterActivePassiveConfigPtrOutput)
}

func (o KarbonClusterActivePassiveConfigOutput) ExternalIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterActivePassiveConfig) string { return v.ExternalIpv4Address }).(pulumi.StringOutput)
}

type KarbonClusterActivePassiveConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterActivePassiveConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterActivePassiveConfig)(nil)).Elem()
}

func (o KarbonClusterActivePassiveConfigPtrOutput) ToKarbonClusterActivePassiveConfigPtrOutput() KarbonClusterActivePassiveConfigPtrOutput {
	return o
}

func (o KarbonClusterActivePassiveConfigPtrOutput) ToKarbonClusterActivePassiveConfigPtrOutputWithContext(ctx context.Context) KarbonClusterActivePassiveConfigPtrOutput {
	return o
}

func (o KarbonClusterActivePassiveConfigPtrOutput) Elem() KarbonClusterActivePassiveConfigOutput {
	return o.ApplyT(func(v *KarbonClusterActivePassiveConfig) KarbonClusterActivePassiveConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterActivePassiveConfig
		return ret
	}).(KarbonClusterActivePassiveConfigOutput)
}

func (o KarbonClusterActivePassiveConfigPtrOutput) ExternalIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterActivePassiveConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalIpv4Address
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterCniConfig struct {
	// - (Optional) Configuration of the calico CNI provider.
	// * `calico_config.ip_pool_config`: - (Optional) List of IP pools to be configured/managed by calico.
	// * `calico_config.ip_pool_config.cidr`: - (Optional) IP range to use for this pool, it should fall within pod cidr.
	CalicoConfig *KarbonClusterCniConfigCalicoConfig `pulumi:"calicoConfig"`
	// - (Optional) Configuration of the flannel container network interface (CNI) provider.
	FlannelConfigs []KarbonClusterCniConfigFlannelConfig `pulumi:"flannelConfigs"`
	// - (Optional) The size of the subnet from the podIpv4Cidr assigned to each host. A value of 24 would allow up to 255 pods per node.
	NodeCidrMaskSize *int `pulumi:"nodeCidrMaskSize"`
	// - (Optional) CIDR for pods in the cluster.
	PodIpv4Cidr *string `pulumi:"podIpv4Cidr"`
	// - (Optional) Classless inter-domain routing (CIDR) for k8s services in the cluster.
	ServiceIpv4Cidr *string `pulumi:"serviceIpv4Cidr"`
}

// KarbonClusterCniConfigInput is an input type that accepts KarbonClusterCniConfigArgs and KarbonClusterCniConfigOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigInput` via:
//
//	KarbonClusterCniConfigArgs{...}
type KarbonClusterCniConfigInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigOutput() KarbonClusterCniConfigOutput
	ToKarbonClusterCniConfigOutputWithContext(context.Context) KarbonClusterCniConfigOutput
}

type KarbonClusterCniConfigArgs struct {
	// - (Optional) Configuration of the calico CNI provider.
	// * `calico_config.ip_pool_config`: - (Optional) List of IP pools to be configured/managed by calico.
	// * `calico_config.ip_pool_config.cidr`: - (Optional) IP range to use for this pool, it should fall within pod cidr.
	CalicoConfig KarbonClusterCniConfigCalicoConfigPtrInput `pulumi:"calicoConfig"`
	// - (Optional) Configuration of the flannel container network interface (CNI) provider.
	FlannelConfigs KarbonClusterCniConfigFlannelConfigArrayInput `pulumi:"flannelConfigs"`
	// - (Optional) The size of the subnet from the podIpv4Cidr assigned to each host. A value of 24 would allow up to 255 pods per node.
	NodeCidrMaskSize pulumi.IntPtrInput `pulumi:"nodeCidrMaskSize"`
	// - (Optional) CIDR for pods in the cluster.
	PodIpv4Cidr pulumi.StringPtrInput `pulumi:"podIpv4Cidr"`
	// - (Optional) Classless inter-domain routing (CIDR) for k8s services in the cluster.
	ServiceIpv4Cidr pulumi.StringPtrInput `pulumi:"serviceIpv4Cidr"`
}

func (KarbonClusterCniConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigArgs) ToKarbonClusterCniConfigOutput() KarbonClusterCniConfigOutput {
	return i.ToKarbonClusterCniConfigOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigArgs) ToKarbonClusterCniConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigOutput)
}

func (i KarbonClusterCniConfigArgs) ToKarbonClusterCniConfigPtrOutput() KarbonClusterCniConfigPtrOutput {
	return i.ToKarbonClusterCniConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigArgs) ToKarbonClusterCniConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigOutput).ToKarbonClusterCniConfigPtrOutputWithContext(ctx)
}

// KarbonClusterCniConfigPtrInput is an input type that accepts KarbonClusterCniConfigArgs, KarbonClusterCniConfigPtr and KarbonClusterCniConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigPtrInput` via:
//
//	        KarbonClusterCniConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterCniConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigPtrOutput() KarbonClusterCniConfigPtrOutput
	ToKarbonClusterCniConfigPtrOutputWithContext(context.Context) KarbonClusterCniConfigPtrOutput
}

type karbonClusterCniConfigPtrType KarbonClusterCniConfigArgs

func KarbonClusterCniConfigPtr(v *KarbonClusterCniConfigArgs) KarbonClusterCniConfigPtrInput {
	return (*karbonClusterCniConfigPtrType)(v)
}

func (*karbonClusterCniConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterCniConfig)(nil)).Elem()
}

func (i *karbonClusterCniConfigPtrType) ToKarbonClusterCniConfigPtrOutput() KarbonClusterCniConfigPtrOutput {
	return i.ToKarbonClusterCniConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterCniConfigPtrType) ToKarbonClusterCniConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigPtrOutput)
}

type KarbonClusterCniConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigOutput) ToKarbonClusterCniConfigOutput() KarbonClusterCniConfigOutput {
	return o
}

func (o KarbonClusterCniConfigOutput) ToKarbonClusterCniConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigOutput {
	return o
}

func (o KarbonClusterCniConfigOutput) ToKarbonClusterCniConfigPtrOutput() KarbonClusterCniConfigPtrOutput {
	return o.ToKarbonClusterCniConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterCniConfigOutput) ToKarbonClusterCniConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterCniConfig) *KarbonClusterCniConfig {
		return &v
	}).(KarbonClusterCniConfigPtrOutput)
}

// - (Optional) Configuration of the calico CNI provider.
// * `calico_config.ip_pool_config`: - (Optional) List of IP pools to be configured/managed by calico.
// * `calico_config.ip_pool_config.cidr`: - (Optional) IP range to use for this pool, it should fall within pod cidr.
func (o KarbonClusterCniConfigOutput) CalicoConfig() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o.ApplyT(func(v KarbonClusterCniConfig) *KarbonClusterCniConfigCalicoConfig { return v.CalicoConfig }).(KarbonClusterCniConfigCalicoConfigPtrOutput)
}

// - (Optional) Configuration of the flannel container network interface (CNI) provider.
func (o KarbonClusterCniConfigOutput) FlannelConfigs() KarbonClusterCniConfigFlannelConfigArrayOutput {
	return o.ApplyT(func(v KarbonClusterCniConfig) []KarbonClusterCniConfigFlannelConfig { return v.FlannelConfigs }).(KarbonClusterCniConfigFlannelConfigArrayOutput)
}

// - (Optional) The size of the subnet from the podIpv4Cidr assigned to each host. A value of 24 would allow up to 255 pods per node.
func (o KarbonClusterCniConfigOutput) NodeCidrMaskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterCniConfig) *int { return v.NodeCidrMaskSize }).(pulumi.IntPtrOutput)
}

// - (Optional) CIDR for pods in the cluster.
func (o KarbonClusterCniConfigOutput) PodIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterCniConfig) *string { return v.PodIpv4Cidr }).(pulumi.StringPtrOutput)
}

// - (Optional) Classless inter-domain routing (CIDR) for k8s services in the cluster.
func (o KarbonClusterCniConfigOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterCniConfig) *string { return v.ServiceIpv4Cidr }).(pulumi.StringPtrOutput)
}

type KarbonClusterCniConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterCniConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigPtrOutput) ToKarbonClusterCniConfigPtrOutput() KarbonClusterCniConfigPtrOutput {
	return o
}

func (o KarbonClusterCniConfigPtrOutput) ToKarbonClusterCniConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigPtrOutput {
	return o
}

func (o KarbonClusterCniConfigPtrOutput) Elem() KarbonClusterCniConfigOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) KarbonClusterCniConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterCniConfig
		return ret
	}).(KarbonClusterCniConfigOutput)
}

// - (Optional) Configuration of the calico CNI provider.
// * `calico_config.ip_pool_config`: - (Optional) List of IP pools to be configured/managed by calico.
// * `calico_config.ip_pool_config.cidr`: - (Optional) IP range to use for this pool, it should fall within pod cidr.
func (o KarbonClusterCniConfigPtrOutput) CalicoConfig() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) *KarbonClusterCniConfigCalicoConfig {
		if v == nil {
			return nil
		}
		return v.CalicoConfig
	}).(KarbonClusterCniConfigCalicoConfigPtrOutput)
}

// - (Optional) Configuration of the flannel container network interface (CNI) provider.
func (o KarbonClusterCniConfigPtrOutput) FlannelConfigs() KarbonClusterCniConfigFlannelConfigArrayOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) []KarbonClusterCniConfigFlannelConfig {
		if v == nil {
			return nil
		}
		return v.FlannelConfigs
	}).(KarbonClusterCniConfigFlannelConfigArrayOutput)
}

// - (Optional) The size of the subnet from the podIpv4Cidr assigned to each host. A value of 24 would allow up to 255 pods per node.
func (o KarbonClusterCniConfigPtrOutput) NodeCidrMaskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) *int {
		if v == nil {
			return nil
		}
		return v.NodeCidrMaskSize
	}).(pulumi.IntPtrOutput)
}

// - (Optional) CIDR for pods in the cluster.
func (o KarbonClusterCniConfigPtrOutput) PodIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) *string {
		if v == nil {
			return nil
		}
		return v.PodIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Classless inter-domain routing (CIDR) for k8s services in the cluster.
func (o KarbonClusterCniConfigPtrOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterCniConfigCalicoConfig struct {
	IpPoolConfigs []KarbonClusterCniConfigCalicoConfigIpPoolConfig `pulumi:"ipPoolConfigs"`
}

// KarbonClusterCniConfigCalicoConfigInput is an input type that accepts KarbonClusterCniConfigCalicoConfigArgs and KarbonClusterCniConfigCalicoConfigOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigCalicoConfigInput` via:
//
//	KarbonClusterCniConfigCalicoConfigArgs{...}
type KarbonClusterCniConfigCalicoConfigInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigCalicoConfigOutput() KarbonClusterCniConfigCalicoConfigOutput
	ToKarbonClusterCniConfigCalicoConfigOutputWithContext(context.Context) KarbonClusterCniConfigCalicoConfigOutput
}

type KarbonClusterCniConfigCalicoConfigArgs struct {
	IpPoolConfigs KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayInput `pulumi:"ipPoolConfigs"`
}

func (KarbonClusterCniConfigCalicoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigCalicoConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigCalicoConfigArgs) ToKarbonClusterCniConfigCalicoConfigOutput() KarbonClusterCniConfigCalicoConfigOutput {
	return i.ToKarbonClusterCniConfigCalicoConfigOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigCalicoConfigArgs) ToKarbonClusterCniConfigCalicoConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigCalicoConfigOutput)
}

func (i KarbonClusterCniConfigCalicoConfigArgs) ToKarbonClusterCniConfigCalicoConfigPtrOutput() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return i.ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigCalicoConfigArgs) ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigCalicoConfigOutput).ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(ctx)
}

// KarbonClusterCniConfigCalicoConfigPtrInput is an input type that accepts KarbonClusterCniConfigCalicoConfigArgs, KarbonClusterCniConfigCalicoConfigPtr and KarbonClusterCniConfigCalicoConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigCalicoConfigPtrInput` via:
//
//	        KarbonClusterCniConfigCalicoConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterCniConfigCalicoConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigCalicoConfigPtrOutput() KarbonClusterCniConfigCalicoConfigPtrOutput
	ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(context.Context) KarbonClusterCniConfigCalicoConfigPtrOutput
}

type karbonClusterCniConfigCalicoConfigPtrType KarbonClusterCniConfigCalicoConfigArgs

func KarbonClusterCniConfigCalicoConfigPtr(v *KarbonClusterCniConfigCalicoConfigArgs) KarbonClusterCniConfigCalicoConfigPtrInput {
	return (*karbonClusterCniConfigCalicoConfigPtrType)(v)
}

func (*karbonClusterCniConfigCalicoConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterCniConfigCalicoConfig)(nil)).Elem()
}

func (i *karbonClusterCniConfigCalicoConfigPtrType) ToKarbonClusterCniConfigCalicoConfigPtrOutput() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return i.ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterCniConfigCalicoConfigPtrType) ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigCalicoConfigPtrOutput)
}

type KarbonClusterCniConfigCalicoConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigCalicoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigCalicoConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigCalicoConfigOutput) ToKarbonClusterCniConfigCalicoConfigOutput() KarbonClusterCniConfigCalicoConfigOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigOutput) ToKarbonClusterCniConfigCalicoConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigOutput) ToKarbonClusterCniConfigCalicoConfigPtrOutput() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o.ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterCniConfigCalicoConfigOutput) ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterCniConfigCalicoConfig) *KarbonClusterCniConfigCalicoConfig {
		return &v
	}).(KarbonClusterCniConfigCalicoConfigPtrOutput)
}

func (o KarbonClusterCniConfigCalicoConfigOutput) IpPoolConfigs() KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return o.ApplyT(func(v KarbonClusterCniConfigCalicoConfig) []KarbonClusterCniConfigCalicoConfigIpPoolConfig {
		return v.IpPoolConfigs
	}).(KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput)
}

type KarbonClusterCniConfigCalicoConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigCalicoConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterCniConfigCalicoConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigCalicoConfigPtrOutput) ToKarbonClusterCniConfigCalicoConfigPtrOutput() KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigPtrOutput) ToKarbonClusterCniConfigCalicoConfigPtrOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigPtrOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigPtrOutput) Elem() KarbonClusterCniConfigCalicoConfigOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfigCalicoConfig) KarbonClusterCniConfigCalicoConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterCniConfigCalicoConfig
		return ret
	}).(KarbonClusterCniConfigCalicoConfigOutput)
}

func (o KarbonClusterCniConfigCalicoConfigPtrOutput) IpPoolConfigs() KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return o.ApplyT(func(v *KarbonClusterCniConfigCalicoConfig) []KarbonClusterCniConfigCalicoConfigIpPoolConfig {
		if v == nil {
			return nil
		}
		return v.IpPoolConfigs
	}).(KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput)
}

type KarbonClusterCniConfigCalicoConfigIpPoolConfig struct {
	Cidr *string `pulumi:"cidr"`
}

// KarbonClusterCniConfigCalicoConfigIpPoolConfigInput is an input type that accepts KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs and KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigCalicoConfigIpPoolConfigInput` via:
//
//	KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs{...}
type KarbonClusterCniConfigCalicoConfigIpPoolConfigInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput
	ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutputWithContext(context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput
}

type KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs struct {
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
}

func (KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigIpPoolConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput {
	return i.ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput)
}

// KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayInput is an input type that accepts KarbonClusterCniConfigCalicoConfigIpPoolConfigArray and KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayInput` via:
//
//	KarbonClusterCniConfigCalicoConfigIpPoolConfigArray{ KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs{...} }
type KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput
	ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutputWithContext(context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput
}

type KarbonClusterCniConfigCalicoConfigIpPoolConfigArray []KarbonClusterCniConfigCalicoConfigIpPoolConfigInput

func (KarbonClusterCniConfigCalicoConfigIpPoolConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterCniConfigCalicoConfigIpPoolConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigCalicoConfigIpPoolConfigArray) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return i.ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigCalicoConfigIpPoolConfigArray) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput)
}

type KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigIpPoolConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterCniConfigCalicoConfigIpPoolConfig) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

type KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterCniConfigCalicoConfigIpPoolConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput() KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput) ToKarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutputWithContext(ctx context.Context) KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput {
	return o
}

func (o KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput) Index(i pulumi.IntInput) KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterCniConfigCalicoConfigIpPoolConfig {
		return vs[0].([]KarbonClusterCniConfigCalicoConfigIpPoolConfig)[vs[1].(int)]
	}).(KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput)
}

type KarbonClusterCniConfigFlannelConfig struct {
}

// KarbonClusterCniConfigFlannelConfigInput is an input type that accepts KarbonClusterCniConfigFlannelConfigArgs and KarbonClusterCniConfigFlannelConfigOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigFlannelConfigInput` via:
//
//	KarbonClusterCniConfigFlannelConfigArgs{...}
type KarbonClusterCniConfigFlannelConfigInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigFlannelConfigOutput() KarbonClusterCniConfigFlannelConfigOutput
	ToKarbonClusterCniConfigFlannelConfigOutputWithContext(context.Context) KarbonClusterCniConfigFlannelConfigOutput
}

type KarbonClusterCniConfigFlannelConfigArgs struct {
}

func (KarbonClusterCniConfigFlannelConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigFlannelConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigFlannelConfigArgs) ToKarbonClusterCniConfigFlannelConfigOutput() KarbonClusterCniConfigFlannelConfigOutput {
	return i.ToKarbonClusterCniConfigFlannelConfigOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigFlannelConfigArgs) ToKarbonClusterCniConfigFlannelConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigFlannelConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigFlannelConfigOutput)
}

// KarbonClusterCniConfigFlannelConfigArrayInput is an input type that accepts KarbonClusterCniConfigFlannelConfigArray and KarbonClusterCniConfigFlannelConfigArrayOutput values.
// You can construct a concrete instance of `KarbonClusterCniConfigFlannelConfigArrayInput` via:
//
//	KarbonClusterCniConfigFlannelConfigArray{ KarbonClusterCniConfigFlannelConfigArgs{...} }
type KarbonClusterCniConfigFlannelConfigArrayInput interface {
	pulumi.Input

	ToKarbonClusterCniConfigFlannelConfigArrayOutput() KarbonClusterCniConfigFlannelConfigArrayOutput
	ToKarbonClusterCniConfigFlannelConfigArrayOutputWithContext(context.Context) KarbonClusterCniConfigFlannelConfigArrayOutput
}

type KarbonClusterCniConfigFlannelConfigArray []KarbonClusterCniConfigFlannelConfigInput

func (KarbonClusterCniConfigFlannelConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterCniConfigFlannelConfig)(nil)).Elem()
}

func (i KarbonClusterCniConfigFlannelConfigArray) ToKarbonClusterCniConfigFlannelConfigArrayOutput() KarbonClusterCniConfigFlannelConfigArrayOutput {
	return i.ToKarbonClusterCniConfigFlannelConfigArrayOutputWithContext(context.Background())
}

func (i KarbonClusterCniConfigFlannelConfigArray) ToKarbonClusterCniConfigFlannelConfigArrayOutputWithContext(ctx context.Context) KarbonClusterCniConfigFlannelConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterCniConfigFlannelConfigArrayOutput)
}

type KarbonClusterCniConfigFlannelConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigFlannelConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterCniConfigFlannelConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigFlannelConfigOutput) ToKarbonClusterCniConfigFlannelConfigOutput() KarbonClusterCniConfigFlannelConfigOutput {
	return o
}

func (o KarbonClusterCniConfigFlannelConfigOutput) ToKarbonClusterCniConfigFlannelConfigOutputWithContext(ctx context.Context) KarbonClusterCniConfigFlannelConfigOutput {
	return o
}

type KarbonClusterCniConfigFlannelConfigArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterCniConfigFlannelConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterCniConfigFlannelConfig)(nil)).Elem()
}

func (o KarbonClusterCniConfigFlannelConfigArrayOutput) ToKarbonClusterCniConfigFlannelConfigArrayOutput() KarbonClusterCniConfigFlannelConfigArrayOutput {
	return o
}

func (o KarbonClusterCniConfigFlannelConfigArrayOutput) ToKarbonClusterCniConfigFlannelConfigArrayOutputWithContext(ctx context.Context) KarbonClusterCniConfigFlannelConfigArrayOutput {
	return o
}

func (o KarbonClusterCniConfigFlannelConfigArrayOutput) Index(i pulumi.IntInput) KarbonClusterCniConfigFlannelConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterCniConfigFlannelConfig {
		return vs[0].([]KarbonClusterCniConfigFlannelConfig)[vs[1].(int)]
	}).(KarbonClusterCniConfigFlannelConfigOutput)
}

type KarbonClusterEtcdNodePool struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig *KarbonClusterEtcdNodePoolAhvConfig `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name *string `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion string `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes []KarbonClusterEtcdNodePoolNode `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances int `pulumi:"numInstances"`
}

// KarbonClusterEtcdNodePoolInput is an input type that accepts KarbonClusterEtcdNodePoolArgs and KarbonClusterEtcdNodePoolOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolInput` via:
//
//	KarbonClusterEtcdNodePoolArgs{...}
type KarbonClusterEtcdNodePoolInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolOutput() KarbonClusterEtcdNodePoolOutput
	ToKarbonClusterEtcdNodePoolOutputWithContext(context.Context) KarbonClusterEtcdNodePoolOutput
}

type KarbonClusterEtcdNodePoolArgs struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig KarbonClusterEtcdNodePoolAhvConfigPtrInput `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion pulumi.StringInput `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes KarbonClusterEtcdNodePoolNodeArrayInput `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances pulumi.IntInput `pulumi:"numInstances"`
}

func (KarbonClusterEtcdNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePool)(nil)).Elem()
}

func (i KarbonClusterEtcdNodePoolArgs) ToKarbonClusterEtcdNodePoolOutput() KarbonClusterEtcdNodePoolOutput {
	return i.ToKarbonClusterEtcdNodePoolOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolArgs) ToKarbonClusterEtcdNodePoolOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolOutput)
}

func (i KarbonClusterEtcdNodePoolArgs) ToKarbonClusterEtcdNodePoolPtrOutput() KarbonClusterEtcdNodePoolPtrOutput {
	return i.ToKarbonClusterEtcdNodePoolPtrOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolArgs) ToKarbonClusterEtcdNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolOutput).ToKarbonClusterEtcdNodePoolPtrOutputWithContext(ctx)
}

// KarbonClusterEtcdNodePoolPtrInput is an input type that accepts KarbonClusterEtcdNodePoolArgs, KarbonClusterEtcdNodePoolPtr and KarbonClusterEtcdNodePoolPtrOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolPtrInput` via:
//
//	        KarbonClusterEtcdNodePoolArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterEtcdNodePoolPtrInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolPtrOutput() KarbonClusterEtcdNodePoolPtrOutput
	ToKarbonClusterEtcdNodePoolPtrOutputWithContext(context.Context) KarbonClusterEtcdNodePoolPtrOutput
}

type karbonClusterEtcdNodePoolPtrType KarbonClusterEtcdNodePoolArgs

func KarbonClusterEtcdNodePoolPtr(v *KarbonClusterEtcdNodePoolArgs) KarbonClusterEtcdNodePoolPtrInput {
	return (*karbonClusterEtcdNodePoolPtrType)(v)
}

func (*karbonClusterEtcdNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterEtcdNodePool)(nil)).Elem()
}

func (i *karbonClusterEtcdNodePoolPtrType) ToKarbonClusterEtcdNodePoolPtrOutput() KarbonClusterEtcdNodePoolPtrOutput {
	return i.ToKarbonClusterEtcdNodePoolPtrOutputWithContext(context.Background())
}

func (i *karbonClusterEtcdNodePoolPtrType) ToKarbonClusterEtcdNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolPtrOutput)
}

type KarbonClusterEtcdNodePoolOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePool)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolOutput) ToKarbonClusterEtcdNodePoolOutput() KarbonClusterEtcdNodePoolOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolOutput) ToKarbonClusterEtcdNodePoolOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolOutput) ToKarbonClusterEtcdNodePoolPtrOutput() KarbonClusterEtcdNodePoolPtrOutput {
	return o.ToKarbonClusterEtcdNodePoolPtrOutputWithContext(context.Background())
}

func (o KarbonClusterEtcdNodePoolOutput) ToKarbonClusterEtcdNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterEtcdNodePool) *KarbonClusterEtcdNodePool {
		return &v
	}).(KarbonClusterEtcdNodePoolPtrOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterEtcdNodePoolOutput) AhvConfig() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePool) *KarbonClusterEtcdNodePoolAhvConfig { return v.AhvConfig }).(KarbonClusterEtcdNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterEtcdNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterEtcdNodePoolOutput) NodeOsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePool) string { return v.NodeOsVersion }).(pulumi.StringOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterEtcdNodePoolOutput) Nodes() KarbonClusterEtcdNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePool) []KarbonClusterEtcdNodePoolNode { return v.Nodes }).(KarbonClusterEtcdNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterEtcdNodePoolOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePool) int { return v.NumInstances }).(pulumi.IntOutput)
}

type KarbonClusterEtcdNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterEtcdNodePool)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolPtrOutput) ToKarbonClusterEtcdNodePoolPtrOutput() KarbonClusterEtcdNodePoolPtrOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolPtrOutput) ToKarbonClusterEtcdNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolPtrOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolPtrOutput) Elem() KarbonClusterEtcdNodePoolOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) KarbonClusterEtcdNodePool {
		if v != nil {
			return *v
		}
		var ret KarbonClusterEtcdNodePool
		return ret
	}).(KarbonClusterEtcdNodePoolOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterEtcdNodePoolPtrOutput) AhvConfig() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) *KarbonClusterEtcdNodePoolAhvConfig {
		if v == nil {
			return nil
		}
		return v.AhvConfig
	}).(KarbonClusterEtcdNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterEtcdNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterEtcdNodePoolPtrOutput) NodeOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.NodeOsVersion
	}).(pulumi.StringPtrOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterEtcdNodePoolPtrOutput) Nodes() KarbonClusterEtcdNodePoolNodeArrayOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) []KarbonClusterEtcdNodePoolNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(KarbonClusterEtcdNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterEtcdNodePoolPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePool) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

type KarbonClusterEtcdNodePoolAhvConfig struct {
	Cpu                     *int   `pulumi:"cpu"`
	DiskMib                 *int   `pulumi:"diskMib"`
	MemoryMib               *int   `pulumi:"memoryMib"`
	NetworkUuid             string `pulumi:"networkUuid"`
	PrismElementClusterUuid string `pulumi:"prismElementClusterUuid"`
}

// KarbonClusterEtcdNodePoolAhvConfigInput is an input type that accepts KarbonClusterEtcdNodePoolAhvConfigArgs and KarbonClusterEtcdNodePoolAhvConfigOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolAhvConfigInput` via:
//
//	KarbonClusterEtcdNodePoolAhvConfigArgs{...}
type KarbonClusterEtcdNodePoolAhvConfigInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolAhvConfigOutput() KarbonClusterEtcdNodePoolAhvConfigOutput
	ToKarbonClusterEtcdNodePoolAhvConfigOutputWithContext(context.Context) KarbonClusterEtcdNodePoolAhvConfigOutput
}

type KarbonClusterEtcdNodePoolAhvConfigArgs struct {
	Cpu                     pulumi.IntPtrInput `pulumi:"cpu"`
	DiskMib                 pulumi.IntPtrInput `pulumi:"diskMib"`
	MemoryMib               pulumi.IntPtrInput `pulumi:"memoryMib"`
	NetworkUuid             pulumi.StringInput `pulumi:"networkUuid"`
	PrismElementClusterUuid pulumi.StringInput `pulumi:"prismElementClusterUuid"`
}

func (KarbonClusterEtcdNodePoolAhvConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePoolAhvConfig)(nil)).Elem()
}

func (i KarbonClusterEtcdNodePoolAhvConfigArgs) ToKarbonClusterEtcdNodePoolAhvConfigOutput() KarbonClusterEtcdNodePoolAhvConfigOutput {
	return i.ToKarbonClusterEtcdNodePoolAhvConfigOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolAhvConfigArgs) ToKarbonClusterEtcdNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolAhvConfigOutput)
}

func (i KarbonClusterEtcdNodePoolAhvConfigArgs) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutput() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolAhvConfigArgs) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolAhvConfigOutput).ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(ctx)
}

// KarbonClusterEtcdNodePoolAhvConfigPtrInput is an input type that accepts KarbonClusterEtcdNodePoolAhvConfigArgs, KarbonClusterEtcdNodePoolAhvConfigPtr and KarbonClusterEtcdNodePoolAhvConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolAhvConfigPtrInput` via:
//
//	        KarbonClusterEtcdNodePoolAhvConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterEtcdNodePoolAhvConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolAhvConfigPtrOutput() KarbonClusterEtcdNodePoolAhvConfigPtrOutput
	ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(context.Context) KarbonClusterEtcdNodePoolAhvConfigPtrOutput
}

type karbonClusterEtcdNodePoolAhvConfigPtrType KarbonClusterEtcdNodePoolAhvConfigArgs

func KarbonClusterEtcdNodePoolAhvConfigPtr(v *KarbonClusterEtcdNodePoolAhvConfigArgs) KarbonClusterEtcdNodePoolAhvConfigPtrInput {
	return (*karbonClusterEtcdNodePoolAhvConfigPtrType)(v)
}

func (*karbonClusterEtcdNodePoolAhvConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterEtcdNodePoolAhvConfig)(nil)).Elem()
}

func (i *karbonClusterEtcdNodePoolAhvConfigPtrType) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutput() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterEtcdNodePoolAhvConfigPtrType) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolAhvConfigPtrOutput)
}

type KarbonClusterEtcdNodePoolAhvConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolAhvConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) ToKarbonClusterEtcdNodePoolAhvConfigOutput() KarbonClusterEtcdNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) ToKarbonClusterEtcdNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutput() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o.ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterEtcdNodePoolAhvConfig) *KarbonClusterEtcdNodePoolAhvConfig {
		return &v
	}).(KarbonClusterEtcdNodePoolAhvConfigPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolAhvConfig) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolAhvConfig) *int { return v.DiskMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolAhvConfig) *int { return v.MemoryMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) NetworkUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolAhvConfig) string { return v.NetworkUuid }).(pulumi.StringOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigOutput) PrismElementClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolAhvConfig) string { return v.PrismElementClusterUuid }).(pulumi.StringOutput)
}

type KarbonClusterEtcdNodePoolAhvConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolAhvConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterEtcdNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutput() KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) ToKarbonClusterEtcdNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) Elem() KarbonClusterEtcdNodePoolAhvConfigOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) KarbonClusterEtcdNodePoolAhvConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterEtcdNodePoolAhvConfig
		return ret
	}).(KarbonClusterEtcdNodePoolAhvConfigOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) NetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkUuid
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterEtcdNodePoolAhvConfigPtrOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterEtcdNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PrismElementClusterUuid
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterEtcdNodePoolNode struct {
	Hostname    *string `pulumi:"hostname"`
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// KarbonClusterEtcdNodePoolNodeInput is an input type that accepts KarbonClusterEtcdNodePoolNodeArgs and KarbonClusterEtcdNodePoolNodeOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolNodeInput` via:
//
//	KarbonClusterEtcdNodePoolNodeArgs{...}
type KarbonClusterEtcdNodePoolNodeInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolNodeOutput() KarbonClusterEtcdNodePoolNodeOutput
	ToKarbonClusterEtcdNodePoolNodeOutputWithContext(context.Context) KarbonClusterEtcdNodePoolNodeOutput
}

type KarbonClusterEtcdNodePoolNodeArgs struct {
	Hostname    pulumi.StringPtrInput `pulumi:"hostname"`
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (KarbonClusterEtcdNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterEtcdNodePoolNodeArgs) ToKarbonClusterEtcdNodePoolNodeOutput() KarbonClusterEtcdNodePoolNodeOutput {
	return i.ToKarbonClusterEtcdNodePoolNodeOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolNodeArgs) ToKarbonClusterEtcdNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolNodeOutput)
}

// KarbonClusterEtcdNodePoolNodeArrayInput is an input type that accepts KarbonClusterEtcdNodePoolNodeArray and KarbonClusterEtcdNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KarbonClusterEtcdNodePoolNodeArrayInput` via:
//
//	KarbonClusterEtcdNodePoolNodeArray{ KarbonClusterEtcdNodePoolNodeArgs{...} }
type KarbonClusterEtcdNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKarbonClusterEtcdNodePoolNodeArrayOutput() KarbonClusterEtcdNodePoolNodeArrayOutput
	ToKarbonClusterEtcdNodePoolNodeArrayOutputWithContext(context.Context) KarbonClusterEtcdNodePoolNodeArrayOutput
}

type KarbonClusterEtcdNodePoolNodeArray []KarbonClusterEtcdNodePoolNodeInput

func (KarbonClusterEtcdNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterEtcdNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterEtcdNodePoolNodeArray) ToKarbonClusterEtcdNodePoolNodeArrayOutput() KarbonClusterEtcdNodePoolNodeArrayOutput {
	return i.ToKarbonClusterEtcdNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KarbonClusterEtcdNodePoolNodeArray) ToKarbonClusterEtcdNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterEtcdNodePoolNodeArrayOutput)
}

type KarbonClusterEtcdNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterEtcdNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolNodeOutput) ToKarbonClusterEtcdNodePoolNodeOutput() KarbonClusterEtcdNodePoolNodeOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolNodeOutput) ToKarbonClusterEtcdNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolNodeOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolNodeOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolNode) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o KarbonClusterEtcdNodePoolNodeOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterEtcdNodePoolNode) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type KarbonClusterEtcdNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterEtcdNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterEtcdNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterEtcdNodePoolNodeArrayOutput) ToKarbonClusterEtcdNodePoolNodeArrayOutput() KarbonClusterEtcdNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolNodeArrayOutput) ToKarbonClusterEtcdNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterEtcdNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterEtcdNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KarbonClusterEtcdNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterEtcdNodePoolNode {
		return vs[0].([]KarbonClusterEtcdNodePoolNode)[vs[1].(int)]
	}).(KarbonClusterEtcdNodePoolNodeOutput)
}

type KarbonClusterExternalLbConfig struct {
	ExternalIpv4Address string                                           `pulumi:"externalIpv4Address"`
	MasterNodesConfigs  []KarbonClusterExternalLbConfigMasterNodesConfig `pulumi:"masterNodesConfigs"`
}

// KarbonClusterExternalLbConfigInput is an input type that accepts KarbonClusterExternalLbConfigArgs and KarbonClusterExternalLbConfigOutput values.
// You can construct a concrete instance of `KarbonClusterExternalLbConfigInput` via:
//
//	KarbonClusterExternalLbConfigArgs{...}
type KarbonClusterExternalLbConfigInput interface {
	pulumi.Input

	ToKarbonClusterExternalLbConfigOutput() KarbonClusterExternalLbConfigOutput
	ToKarbonClusterExternalLbConfigOutputWithContext(context.Context) KarbonClusterExternalLbConfigOutput
}

type KarbonClusterExternalLbConfigArgs struct {
	ExternalIpv4Address pulumi.StringInput                                       `pulumi:"externalIpv4Address"`
	MasterNodesConfigs  KarbonClusterExternalLbConfigMasterNodesConfigArrayInput `pulumi:"masterNodesConfigs"`
}

func (KarbonClusterExternalLbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterExternalLbConfig)(nil)).Elem()
}

func (i KarbonClusterExternalLbConfigArgs) ToKarbonClusterExternalLbConfigOutput() KarbonClusterExternalLbConfigOutput {
	return i.ToKarbonClusterExternalLbConfigOutputWithContext(context.Background())
}

func (i KarbonClusterExternalLbConfigArgs) ToKarbonClusterExternalLbConfigOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterExternalLbConfigOutput)
}

func (i KarbonClusterExternalLbConfigArgs) ToKarbonClusterExternalLbConfigPtrOutput() KarbonClusterExternalLbConfigPtrOutput {
	return i.ToKarbonClusterExternalLbConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterExternalLbConfigArgs) ToKarbonClusterExternalLbConfigPtrOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterExternalLbConfigOutput).ToKarbonClusterExternalLbConfigPtrOutputWithContext(ctx)
}

// KarbonClusterExternalLbConfigPtrInput is an input type that accepts KarbonClusterExternalLbConfigArgs, KarbonClusterExternalLbConfigPtr and KarbonClusterExternalLbConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterExternalLbConfigPtrInput` via:
//
//	        KarbonClusterExternalLbConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterExternalLbConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterExternalLbConfigPtrOutput() KarbonClusterExternalLbConfigPtrOutput
	ToKarbonClusterExternalLbConfigPtrOutputWithContext(context.Context) KarbonClusterExternalLbConfigPtrOutput
}

type karbonClusterExternalLbConfigPtrType KarbonClusterExternalLbConfigArgs

func KarbonClusterExternalLbConfigPtr(v *KarbonClusterExternalLbConfigArgs) KarbonClusterExternalLbConfigPtrInput {
	return (*karbonClusterExternalLbConfigPtrType)(v)
}

func (*karbonClusterExternalLbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterExternalLbConfig)(nil)).Elem()
}

func (i *karbonClusterExternalLbConfigPtrType) ToKarbonClusterExternalLbConfigPtrOutput() KarbonClusterExternalLbConfigPtrOutput {
	return i.ToKarbonClusterExternalLbConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterExternalLbConfigPtrType) ToKarbonClusterExternalLbConfigPtrOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterExternalLbConfigPtrOutput)
}

type KarbonClusterExternalLbConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterExternalLbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterExternalLbConfig)(nil)).Elem()
}

func (o KarbonClusterExternalLbConfigOutput) ToKarbonClusterExternalLbConfigOutput() KarbonClusterExternalLbConfigOutput {
	return o
}

func (o KarbonClusterExternalLbConfigOutput) ToKarbonClusterExternalLbConfigOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigOutput {
	return o
}

func (o KarbonClusterExternalLbConfigOutput) ToKarbonClusterExternalLbConfigPtrOutput() KarbonClusterExternalLbConfigPtrOutput {
	return o.ToKarbonClusterExternalLbConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterExternalLbConfigOutput) ToKarbonClusterExternalLbConfigPtrOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterExternalLbConfig) *KarbonClusterExternalLbConfig {
		return &v
	}).(KarbonClusterExternalLbConfigPtrOutput)
}

func (o KarbonClusterExternalLbConfigOutput) ExternalIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterExternalLbConfig) string { return v.ExternalIpv4Address }).(pulumi.StringOutput)
}

func (o KarbonClusterExternalLbConfigOutput) MasterNodesConfigs() KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return o.ApplyT(func(v KarbonClusterExternalLbConfig) []KarbonClusterExternalLbConfigMasterNodesConfig {
		return v.MasterNodesConfigs
	}).(KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput)
}

type KarbonClusterExternalLbConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterExternalLbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterExternalLbConfig)(nil)).Elem()
}

func (o KarbonClusterExternalLbConfigPtrOutput) ToKarbonClusterExternalLbConfigPtrOutput() KarbonClusterExternalLbConfigPtrOutput {
	return o
}

func (o KarbonClusterExternalLbConfigPtrOutput) ToKarbonClusterExternalLbConfigPtrOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigPtrOutput {
	return o
}

func (o KarbonClusterExternalLbConfigPtrOutput) Elem() KarbonClusterExternalLbConfigOutput {
	return o.ApplyT(func(v *KarbonClusterExternalLbConfig) KarbonClusterExternalLbConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterExternalLbConfig
		return ret
	}).(KarbonClusterExternalLbConfigOutput)
}

func (o KarbonClusterExternalLbConfigPtrOutput) ExternalIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterExternalLbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalIpv4Address
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterExternalLbConfigPtrOutput) MasterNodesConfigs() KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return o.ApplyT(func(v *KarbonClusterExternalLbConfig) []KarbonClusterExternalLbConfigMasterNodesConfig {
		if v == nil {
			return nil
		}
		return v.MasterNodesConfigs
	}).(KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput)
}

type KarbonClusterExternalLbConfigMasterNodesConfig struct {
	Ipv4Address  string  `pulumi:"ipv4Address"`
	NodePoolName *string `pulumi:"nodePoolName"`
}

// KarbonClusterExternalLbConfigMasterNodesConfigInput is an input type that accepts KarbonClusterExternalLbConfigMasterNodesConfigArgs and KarbonClusterExternalLbConfigMasterNodesConfigOutput values.
// You can construct a concrete instance of `KarbonClusterExternalLbConfigMasterNodesConfigInput` via:
//
//	KarbonClusterExternalLbConfigMasterNodesConfigArgs{...}
type KarbonClusterExternalLbConfigMasterNodesConfigInput interface {
	pulumi.Input

	ToKarbonClusterExternalLbConfigMasterNodesConfigOutput() KarbonClusterExternalLbConfigMasterNodesConfigOutput
	ToKarbonClusterExternalLbConfigMasterNodesConfigOutputWithContext(context.Context) KarbonClusterExternalLbConfigMasterNodesConfigOutput
}

type KarbonClusterExternalLbConfigMasterNodesConfigArgs struct {
	Ipv4Address  pulumi.StringInput    `pulumi:"ipv4Address"`
	NodePoolName pulumi.StringPtrInput `pulumi:"nodePoolName"`
}

func (KarbonClusterExternalLbConfigMasterNodesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterExternalLbConfigMasterNodesConfig)(nil)).Elem()
}

func (i KarbonClusterExternalLbConfigMasterNodesConfigArgs) ToKarbonClusterExternalLbConfigMasterNodesConfigOutput() KarbonClusterExternalLbConfigMasterNodesConfigOutput {
	return i.ToKarbonClusterExternalLbConfigMasterNodesConfigOutputWithContext(context.Background())
}

func (i KarbonClusterExternalLbConfigMasterNodesConfigArgs) ToKarbonClusterExternalLbConfigMasterNodesConfigOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigMasterNodesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterExternalLbConfigMasterNodesConfigOutput)
}

// KarbonClusterExternalLbConfigMasterNodesConfigArrayInput is an input type that accepts KarbonClusterExternalLbConfigMasterNodesConfigArray and KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput values.
// You can construct a concrete instance of `KarbonClusterExternalLbConfigMasterNodesConfigArrayInput` via:
//
//	KarbonClusterExternalLbConfigMasterNodesConfigArray{ KarbonClusterExternalLbConfigMasterNodesConfigArgs{...} }
type KarbonClusterExternalLbConfigMasterNodesConfigArrayInput interface {
	pulumi.Input

	ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutput() KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput
	ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutputWithContext(context.Context) KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput
}

type KarbonClusterExternalLbConfigMasterNodesConfigArray []KarbonClusterExternalLbConfigMasterNodesConfigInput

func (KarbonClusterExternalLbConfigMasterNodesConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterExternalLbConfigMasterNodesConfig)(nil)).Elem()
}

func (i KarbonClusterExternalLbConfigMasterNodesConfigArray) ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutput() KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return i.ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutputWithContext(context.Background())
}

func (i KarbonClusterExternalLbConfigMasterNodesConfigArray) ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput)
}

type KarbonClusterExternalLbConfigMasterNodesConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterExternalLbConfigMasterNodesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterExternalLbConfigMasterNodesConfig)(nil)).Elem()
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigOutput) ToKarbonClusterExternalLbConfigMasterNodesConfigOutput() KarbonClusterExternalLbConfigMasterNodesConfigOutput {
	return o
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigOutput) ToKarbonClusterExternalLbConfigMasterNodesConfigOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigMasterNodesConfigOutput {
	return o
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterExternalLbConfigMasterNodesConfig) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigOutput) NodePoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterExternalLbConfigMasterNodesConfig) *string { return v.NodePoolName }).(pulumi.StringPtrOutput)
}

type KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterExternalLbConfigMasterNodesConfig)(nil)).Elem()
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput) ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutput() KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return o
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput) ToKarbonClusterExternalLbConfigMasterNodesConfigArrayOutputWithContext(ctx context.Context) KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput {
	return o
}

func (o KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput) Index(i pulumi.IntInput) KarbonClusterExternalLbConfigMasterNodesConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterExternalLbConfigMasterNodesConfig {
		return vs[0].([]KarbonClusterExternalLbConfigMasterNodesConfig)[vs[1].(int)]
	}).(KarbonClusterExternalLbConfigMasterNodesConfigOutput)
}

type KarbonClusterMasterNodePool struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig *KarbonClusterMasterNodePoolAhvConfig `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name *string `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion string `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes []KarbonClusterMasterNodePoolNode `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances int `pulumi:"numInstances"`
}

// KarbonClusterMasterNodePoolInput is an input type that accepts KarbonClusterMasterNodePoolArgs and KarbonClusterMasterNodePoolOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolInput` via:
//
//	KarbonClusterMasterNodePoolArgs{...}
type KarbonClusterMasterNodePoolInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolOutput() KarbonClusterMasterNodePoolOutput
	ToKarbonClusterMasterNodePoolOutputWithContext(context.Context) KarbonClusterMasterNodePoolOutput
}

type KarbonClusterMasterNodePoolArgs struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig KarbonClusterMasterNodePoolAhvConfigPtrInput `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion pulumi.StringInput `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes KarbonClusterMasterNodePoolNodeArrayInput `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances pulumi.IntInput `pulumi:"numInstances"`
}

func (KarbonClusterMasterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePool)(nil)).Elem()
}

func (i KarbonClusterMasterNodePoolArgs) ToKarbonClusterMasterNodePoolOutput() KarbonClusterMasterNodePoolOutput {
	return i.ToKarbonClusterMasterNodePoolOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolArgs) ToKarbonClusterMasterNodePoolOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolOutput)
}

func (i KarbonClusterMasterNodePoolArgs) ToKarbonClusterMasterNodePoolPtrOutput() KarbonClusterMasterNodePoolPtrOutput {
	return i.ToKarbonClusterMasterNodePoolPtrOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolArgs) ToKarbonClusterMasterNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolOutput).ToKarbonClusterMasterNodePoolPtrOutputWithContext(ctx)
}

// KarbonClusterMasterNodePoolPtrInput is an input type that accepts KarbonClusterMasterNodePoolArgs, KarbonClusterMasterNodePoolPtr and KarbonClusterMasterNodePoolPtrOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolPtrInput` via:
//
//	        KarbonClusterMasterNodePoolArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterMasterNodePoolPtrInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolPtrOutput() KarbonClusterMasterNodePoolPtrOutput
	ToKarbonClusterMasterNodePoolPtrOutputWithContext(context.Context) KarbonClusterMasterNodePoolPtrOutput
}

type karbonClusterMasterNodePoolPtrType KarbonClusterMasterNodePoolArgs

func KarbonClusterMasterNodePoolPtr(v *KarbonClusterMasterNodePoolArgs) KarbonClusterMasterNodePoolPtrInput {
	return (*karbonClusterMasterNodePoolPtrType)(v)
}

func (*karbonClusterMasterNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterMasterNodePool)(nil)).Elem()
}

func (i *karbonClusterMasterNodePoolPtrType) ToKarbonClusterMasterNodePoolPtrOutput() KarbonClusterMasterNodePoolPtrOutput {
	return i.ToKarbonClusterMasterNodePoolPtrOutputWithContext(context.Background())
}

func (i *karbonClusterMasterNodePoolPtrType) ToKarbonClusterMasterNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolPtrOutput)
}

type KarbonClusterMasterNodePoolOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePool)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolOutput) ToKarbonClusterMasterNodePoolOutput() KarbonClusterMasterNodePoolOutput {
	return o
}

func (o KarbonClusterMasterNodePoolOutput) ToKarbonClusterMasterNodePoolOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolOutput {
	return o
}

func (o KarbonClusterMasterNodePoolOutput) ToKarbonClusterMasterNodePoolPtrOutput() KarbonClusterMasterNodePoolPtrOutput {
	return o.ToKarbonClusterMasterNodePoolPtrOutputWithContext(context.Background())
}

func (o KarbonClusterMasterNodePoolOutput) ToKarbonClusterMasterNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterMasterNodePool) *KarbonClusterMasterNodePool {
		return &v
	}).(KarbonClusterMasterNodePoolPtrOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterMasterNodePoolOutput) AhvConfig() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePool) *KarbonClusterMasterNodePoolAhvConfig { return v.AhvConfig }).(KarbonClusterMasterNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterMasterNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterMasterNodePoolOutput) NodeOsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePool) string { return v.NodeOsVersion }).(pulumi.StringOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterMasterNodePoolOutput) Nodes() KarbonClusterMasterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePool) []KarbonClusterMasterNodePoolNode { return v.Nodes }).(KarbonClusterMasterNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterMasterNodePoolOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePool) int { return v.NumInstances }).(pulumi.IntOutput)
}

type KarbonClusterMasterNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterMasterNodePool)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolPtrOutput) ToKarbonClusterMasterNodePoolPtrOutput() KarbonClusterMasterNodePoolPtrOutput {
	return o
}

func (o KarbonClusterMasterNodePoolPtrOutput) ToKarbonClusterMasterNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolPtrOutput {
	return o
}

func (o KarbonClusterMasterNodePoolPtrOutput) Elem() KarbonClusterMasterNodePoolOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) KarbonClusterMasterNodePool {
		if v != nil {
			return *v
		}
		var ret KarbonClusterMasterNodePool
		return ret
	}).(KarbonClusterMasterNodePoolOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterMasterNodePoolPtrOutput) AhvConfig() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) *KarbonClusterMasterNodePoolAhvConfig {
		if v == nil {
			return nil
		}
		return v.AhvConfig
	}).(KarbonClusterMasterNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterMasterNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterMasterNodePoolPtrOutput) NodeOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.NodeOsVersion
	}).(pulumi.StringPtrOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterMasterNodePoolPtrOutput) Nodes() KarbonClusterMasterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) []KarbonClusterMasterNodePoolNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(KarbonClusterMasterNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterMasterNodePoolPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePool) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

type KarbonClusterMasterNodePoolAhvConfig struct {
	Cpu                     *int   `pulumi:"cpu"`
	DiskMib                 *int   `pulumi:"diskMib"`
	MemoryMib               *int   `pulumi:"memoryMib"`
	NetworkUuid             string `pulumi:"networkUuid"`
	PrismElementClusterUuid string `pulumi:"prismElementClusterUuid"`
}

// KarbonClusterMasterNodePoolAhvConfigInput is an input type that accepts KarbonClusterMasterNodePoolAhvConfigArgs and KarbonClusterMasterNodePoolAhvConfigOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolAhvConfigInput` via:
//
//	KarbonClusterMasterNodePoolAhvConfigArgs{...}
type KarbonClusterMasterNodePoolAhvConfigInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolAhvConfigOutput() KarbonClusterMasterNodePoolAhvConfigOutput
	ToKarbonClusterMasterNodePoolAhvConfigOutputWithContext(context.Context) KarbonClusterMasterNodePoolAhvConfigOutput
}

type KarbonClusterMasterNodePoolAhvConfigArgs struct {
	Cpu                     pulumi.IntPtrInput `pulumi:"cpu"`
	DiskMib                 pulumi.IntPtrInput `pulumi:"diskMib"`
	MemoryMib               pulumi.IntPtrInput `pulumi:"memoryMib"`
	NetworkUuid             pulumi.StringInput `pulumi:"networkUuid"`
	PrismElementClusterUuid pulumi.StringInput `pulumi:"prismElementClusterUuid"`
}

func (KarbonClusterMasterNodePoolAhvConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePoolAhvConfig)(nil)).Elem()
}

func (i KarbonClusterMasterNodePoolAhvConfigArgs) ToKarbonClusterMasterNodePoolAhvConfigOutput() KarbonClusterMasterNodePoolAhvConfigOutput {
	return i.ToKarbonClusterMasterNodePoolAhvConfigOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolAhvConfigArgs) ToKarbonClusterMasterNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolAhvConfigOutput)
}

func (i KarbonClusterMasterNodePoolAhvConfigArgs) ToKarbonClusterMasterNodePoolAhvConfigPtrOutput() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolAhvConfigArgs) ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolAhvConfigOutput).ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(ctx)
}

// KarbonClusterMasterNodePoolAhvConfigPtrInput is an input type that accepts KarbonClusterMasterNodePoolAhvConfigArgs, KarbonClusterMasterNodePoolAhvConfigPtr and KarbonClusterMasterNodePoolAhvConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolAhvConfigPtrInput` via:
//
//	        KarbonClusterMasterNodePoolAhvConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterMasterNodePoolAhvConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolAhvConfigPtrOutput() KarbonClusterMasterNodePoolAhvConfigPtrOutput
	ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(context.Context) KarbonClusterMasterNodePoolAhvConfigPtrOutput
}

type karbonClusterMasterNodePoolAhvConfigPtrType KarbonClusterMasterNodePoolAhvConfigArgs

func KarbonClusterMasterNodePoolAhvConfigPtr(v *KarbonClusterMasterNodePoolAhvConfigArgs) KarbonClusterMasterNodePoolAhvConfigPtrInput {
	return (*karbonClusterMasterNodePoolAhvConfigPtrType)(v)
}

func (*karbonClusterMasterNodePoolAhvConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterMasterNodePoolAhvConfig)(nil)).Elem()
}

func (i *karbonClusterMasterNodePoolAhvConfigPtrType) ToKarbonClusterMasterNodePoolAhvConfigPtrOutput() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterMasterNodePoolAhvConfigPtrType) ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolAhvConfigPtrOutput)
}

type KarbonClusterMasterNodePoolAhvConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolAhvConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) ToKarbonClusterMasterNodePoolAhvConfigOutput() KarbonClusterMasterNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) ToKarbonClusterMasterNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) ToKarbonClusterMasterNodePoolAhvConfigPtrOutput() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o.ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterMasterNodePoolAhvConfig) *KarbonClusterMasterNodePoolAhvConfig {
		return &v
	}).(KarbonClusterMasterNodePoolAhvConfigPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolAhvConfig) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolAhvConfig) *int { return v.DiskMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolAhvConfig) *int { return v.MemoryMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) NetworkUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolAhvConfig) string { return v.NetworkUuid }).(pulumi.StringOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigOutput) PrismElementClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolAhvConfig) string { return v.PrismElementClusterUuid }).(pulumi.StringOutput)
}

type KarbonClusterMasterNodePoolAhvConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolAhvConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterMasterNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) ToKarbonClusterMasterNodePoolAhvConfigPtrOutput() KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) ToKarbonClusterMasterNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) Elem() KarbonClusterMasterNodePoolAhvConfigOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) KarbonClusterMasterNodePoolAhvConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterMasterNodePoolAhvConfig
		return ret
	}).(KarbonClusterMasterNodePoolAhvConfigOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) NetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkUuid
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterMasterNodePoolAhvConfigPtrOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterMasterNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PrismElementClusterUuid
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterMasterNodePoolNode struct {
	Hostname    *string `pulumi:"hostname"`
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// KarbonClusterMasterNodePoolNodeInput is an input type that accepts KarbonClusterMasterNodePoolNodeArgs and KarbonClusterMasterNodePoolNodeOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolNodeInput` via:
//
//	KarbonClusterMasterNodePoolNodeArgs{...}
type KarbonClusterMasterNodePoolNodeInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolNodeOutput() KarbonClusterMasterNodePoolNodeOutput
	ToKarbonClusterMasterNodePoolNodeOutputWithContext(context.Context) KarbonClusterMasterNodePoolNodeOutput
}

type KarbonClusterMasterNodePoolNodeArgs struct {
	Hostname    pulumi.StringPtrInput `pulumi:"hostname"`
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (KarbonClusterMasterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterMasterNodePoolNodeArgs) ToKarbonClusterMasterNodePoolNodeOutput() KarbonClusterMasterNodePoolNodeOutput {
	return i.ToKarbonClusterMasterNodePoolNodeOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolNodeArgs) ToKarbonClusterMasterNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolNodeOutput)
}

// KarbonClusterMasterNodePoolNodeArrayInput is an input type that accepts KarbonClusterMasterNodePoolNodeArray and KarbonClusterMasterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KarbonClusterMasterNodePoolNodeArrayInput` via:
//
//	KarbonClusterMasterNodePoolNodeArray{ KarbonClusterMasterNodePoolNodeArgs{...} }
type KarbonClusterMasterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKarbonClusterMasterNodePoolNodeArrayOutput() KarbonClusterMasterNodePoolNodeArrayOutput
	ToKarbonClusterMasterNodePoolNodeArrayOutputWithContext(context.Context) KarbonClusterMasterNodePoolNodeArrayOutput
}

type KarbonClusterMasterNodePoolNodeArray []KarbonClusterMasterNodePoolNodeInput

func (KarbonClusterMasterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterMasterNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterMasterNodePoolNodeArray) ToKarbonClusterMasterNodePoolNodeArrayOutput() KarbonClusterMasterNodePoolNodeArrayOutput {
	return i.ToKarbonClusterMasterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KarbonClusterMasterNodePoolNodeArray) ToKarbonClusterMasterNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterMasterNodePoolNodeArrayOutput)
}

type KarbonClusterMasterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterMasterNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolNodeOutput) ToKarbonClusterMasterNodePoolNodeOutput() KarbonClusterMasterNodePoolNodeOutput {
	return o
}

func (o KarbonClusterMasterNodePoolNodeOutput) ToKarbonClusterMasterNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolNodeOutput {
	return o
}

func (o KarbonClusterMasterNodePoolNodeOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolNode) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o KarbonClusterMasterNodePoolNodeOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterMasterNodePoolNode) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type KarbonClusterMasterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterMasterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterMasterNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterMasterNodePoolNodeArrayOutput) ToKarbonClusterMasterNodePoolNodeArrayOutput() KarbonClusterMasterNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterMasterNodePoolNodeArrayOutput) ToKarbonClusterMasterNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterMasterNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterMasterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KarbonClusterMasterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterMasterNodePoolNode {
		return vs[0].([]KarbonClusterMasterNodePoolNode)[vs[1].(int)]
	}).(KarbonClusterMasterNodePoolNodeOutput)
}

type KarbonClusterPrivateRegistry struct {
	RegistryName string `pulumi:"registryName"`
}

// KarbonClusterPrivateRegistryInput is an input type that accepts KarbonClusterPrivateRegistryArgs and KarbonClusterPrivateRegistryOutput values.
// You can construct a concrete instance of `KarbonClusterPrivateRegistryInput` via:
//
//	KarbonClusterPrivateRegistryArgs{...}
type KarbonClusterPrivateRegistryInput interface {
	pulumi.Input

	ToKarbonClusterPrivateRegistryOutput() KarbonClusterPrivateRegistryOutput
	ToKarbonClusterPrivateRegistryOutputWithContext(context.Context) KarbonClusterPrivateRegistryOutput
}

type KarbonClusterPrivateRegistryArgs struct {
	RegistryName pulumi.StringInput `pulumi:"registryName"`
}

func (KarbonClusterPrivateRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterPrivateRegistry)(nil)).Elem()
}

func (i KarbonClusterPrivateRegistryArgs) ToKarbonClusterPrivateRegistryOutput() KarbonClusterPrivateRegistryOutput {
	return i.ToKarbonClusterPrivateRegistryOutputWithContext(context.Background())
}

func (i KarbonClusterPrivateRegistryArgs) ToKarbonClusterPrivateRegistryOutputWithContext(ctx context.Context) KarbonClusterPrivateRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterPrivateRegistryOutput)
}

// KarbonClusterPrivateRegistryArrayInput is an input type that accepts KarbonClusterPrivateRegistryArray and KarbonClusterPrivateRegistryArrayOutput values.
// You can construct a concrete instance of `KarbonClusterPrivateRegistryArrayInput` via:
//
//	KarbonClusterPrivateRegistryArray{ KarbonClusterPrivateRegistryArgs{...} }
type KarbonClusterPrivateRegistryArrayInput interface {
	pulumi.Input

	ToKarbonClusterPrivateRegistryArrayOutput() KarbonClusterPrivateRegistryArrayOutput
	ToKarbonClusterPrivateRegistryArrayOutputWithContext(context.Context) KarbonClusterPrivateRegistryArrayOutput
}

type KarbonClusterPrivateRegistryArray []KarbonClusterPrivateRegistryInput

func (KarbonClusterPrivateRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterPrivateRegistry)(nil)).Elem()
}

func (i KarbonClusterPrivateRegistryArray) ToKarbonClusterPrivateRegistryArrayOutput() KarbonClusterPrivateRegistryArrayOutput {
	return i.ToKarbonClusterPrivateRegistryArrayOutputWithContext(context.Background())
}

func (i KarbonClusterPrivateRegistryArray) ToKarbonClusterPrivateRegistryArrayOutputWithContext(ctx context.Context) KarbonClusterPrivateRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterPrivateRegistryArrayOutput)
}

type KarbonClusterPrivateRegistryOutput struct{ *pulumi.OutputState }

func (KarbonClusterPrivateRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterPrivateRegistry)(nil)).Elem()
}

func (o KarbonClusterPrivateRegistryOutput) ToKarbonClusterPrivateRegistryOutput() KarbonClusterPrivateRegistryOutput {
	return o
}

func (o KarbonClusterPrivateRegistryOutput) ToKarbonClusterPrivateRegistryOutputWithContext(ctx context.Context) KarbonClusterPrivateRegistryOutput {
	return o
}

func (o KarbonClusterPrivateRegistryOutput) RegistryName() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterPrivateRegistry) string { return v.RegistryName }).(pulumi.StringOutput)
}

type KarbonClusterPrivateRegistryArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterPrivateRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterPrivateRegistry)(nil)).Elem()
}

func (o KarbonClusterPrivateRegistryArrayOutput) ToKarbonClusterPrivateRegistryArrayOutput() KarbonClusterPrivateRegistryArrayOutput {
	return o
}

func (o KarbonClusterPrivateRegistryArrayOutput) ToKarbonClusterPrivateRegistryArrayOutputWithContext(ctx context.Context) KarbonClusterPrivateRegistryArrayOutput {
	return o
}

func (o KarbonClusterPrivateRegistryArrayOutput) Index(i pulumi.IntInput) KarbonClusterPrivateRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterPrivateRegistry {
		return vs[0].([]KarbonClusterPrivateRegistry)[vs[1].(int)]
	}).(KarbonClusterPrivateRegistryOutput)
}

type KarbonClusterSingleMasterConfig struct {
}

// KarbonClusterSingleMasterConfigInput is an input type that accepts KarbonClusterSingleMasterConfigArgs and KarbonClusterSingleMasterConfigOutput values.
// You can construct a concrete instance of `KarbonClusterSingleMasterConfigInput` via:
//
//	KarbonClusterSingleMasterConfigArgs{...}
type KarbonClusterSingleMasterConfigInput interface {
	pulumi.Input

	ToKarbonClusterSingleMasterConfigOutput() KarbonClusterSingleMasterConfigOutput
	ToKarbonClusterSingleMasterConfigOutputWithContext(context.Context) KarbonClusterSingleMasterConfigOutput
}

type KarbonClusterSingleMasterConfigArgs struct {
}

func (KarbonClusterSingleMasterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterSingleMasterConfig)(nil)).Elem()
}

func (i KarbonClusterSingleMasterConfigArgs) ToKarbonClusterSingleMasterConfigOutput() KarbonClusterSingleMasterConfigOutput {
	return i.ToKarbonClusterSingleMasterConfigOutputWithContext(context.Background())
}

func (i KarbonClusterSingleMasterConfigArgs) ToKarbonClusterSingleMasterConfigOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterSingleMasterConfigOutput)
}

func (i KarbonClusterSingleMasterConfigArgs) ToKarbonClusterSingleMasterConfigPtrOutput() KarbonClusterSingleMasterConfigPtrOutput {
	return i.ToKarbonClusterSingleMasterConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterSingleMasterConfigArgs) ToKarbonClusterSingleMasterConfigPtrOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterSingleMasterConfigOutput).ToKarbonClusterSingleMasterConfigPtrOutputWithContext(ctx)
}

// KarbonClusterSingleMasterConfigPtrInput is an input type that accepts KarbonClusterSingleMasterConfigArgs, KarbonClusterSingleMasterConfigPtr and KarbonClusterSingleMasterConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterSingleMasterConfigPtrInput` via:
//
//	        KarbonClusterSingleMasterConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterSingleMasterConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterSingleMasterConfigPtrOutput() KarbonClusterSingleMasterConfigPtrOutput
	ToKarbonClusterSingleMasterConfigPtrOutputWithContext(context.Context) KarbonClusterSingleMasterConfigPtrOutput
}

type karbonClusterSingleMasterConfigPtrType KarbonClusterSingleMasterConfigArgs

func KarbonClusterSingleMasterConfigPtr(v *KarbonClusterSingleMasterConfigArgs) KarbonClusterSingleMasterConfigPtrInput {
	return (*karbonClusterSingleMasterConfigPtrType)(v)
}

func (*karbonClusterSingleMasterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterSingleMasterConfig)(nil)).Elem()
}

func (i *karbonClusterSingleMasterConfigPtrType) ToKarbonClusterSingleMasterConfigPtrOutput() KarbonClusterSingleMasterConfigPtrOutput {
	return i.ToKarbonClusterSingleMasterConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterSingleMasterConfigPtrType) ToKarbonClusterSingleMasterConfigPtrOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterSingleMasterConfigPtrOutput)
}

type KarbonClusterSingleMasterConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterSingleMasterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterSingleMasterConfig)(nil)).Elem()
}

func (o KarbonClusterSingleMasterConfigOutput) ToKarbonClusterSingleMasterConfigOutput() KarbonClusterSingleMasterConfigOutput {
	return o
}

func (o KarbonClusterSingleMasterConfigOutput) ToKarbonClusterSingleMasterConfigOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigOutput {
	return o
}

func (o KarbonClusterSingleMasterConfigOutput) ToKarbonClusterSingleMasterConfigPtrOutput() KarbonClusterSingleMasterConfigPtrOutput {
	return o.ToKarbonClusterSingleMasterConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterSingleMasterConfigOutput) ToKarbonClusterSingleMasterConfigPtrOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterSingleMasterConfig) *KarbonClusterSingleMasterConfig {
		return &v
	}).(KarbonClusterSingleMasterConfigPtrOutput)
}

type KarbonClusterSingleMasterConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterSingleMasterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterSingleMasterConfig)(nil)).Elem()
}

func (o KarbonClusterSingleMasterConfigPtrOutput) ToKarbonClusterSingleMasterConfigPtrOutput() KarbonClusterSingleMasterConfigPtrOutput {
	return o
}

func (o KarbonClusterSingleMasterConfigPtrOutput) ToKarbonClusterSingleMasterConfigPtrOutputWithContext(ctx context.Context) KarbonClusterSingleMasterConfigPtrOutput {
	return o
}

func (o KarbonClusterSingleMasterConfigPtrOutput) Elem() KarbonClusterSingleMasterConfigOutput {
	return o.ApplyT(func(v *KarbonClusterSingleMasterConfig) KarbonClusterSingleMasterConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterSingleMasterConfig
		return ret
	}).(KarbonClusterSingleMasterConfigOutput)
}

type KarbonClusterStorageClassConfig struct {
	// - (Required) The name of the storage class.
	Name *string `pulumi:"name"`
	// Reclaim policy for persistent volumes provisioned using the specified storage class.
	// * `volumes_config.#.file_system` - (Optional) Karbon uses either the ext4 or xfs file-system on the volume disk.
	// * `volumes_config.#.flash_mode` - (Optional) Pins the persistent volumes to the flash tier in case of a `true` value.
	// * `volumes_config.#.password` - (Required) The password of the Prism Element user that the API calls use to provision volumes.
	// * `volumes_config.#.prism_element_cluster_uuid` - (Required) The universally unique identifier (UUID) of the Prism Element cluster.
	// * `volumes_config.#.storage_container` - (Required) Name of the storage container the storage container uses to provision volumes.
	// * `volumes_config.#.username` - (Required) Username of the Prism Element user that the API calls use to provision volumes.
	//
	// **Note:** Updates to this attribute forces new resource creation.
	ReclaimPolicy *string                                      `pulumi:"reclaimPolicy"`
	VolumesConfig KarbonClusterStorageClassConfigVolumesConfig `pulumi:"volumesConfig"`
}

// KarbonClusterStorageClassConfigInput is an input type that accepts KarbonClusterStorageClassConfigArgs and KarbonClusterStorageClassConfigOutput values.
// You can construct a concrete instance of `KarbonClusterStorageClassConfigInput` via:
//
//	KarbonClusterStorageClassConfigArgs{...}
type KarbonClusterStorageClassConfigInput interface {
	pulumi.Input

	ToKarbonClusterStorageClassConfigOutput() KarbonClusterStorageClassConfigOutput
	ToKarbonClusterStorageClassConfigOutputWithContext(context.Context) KarbonClusterStorageClassConfigOutput
}

type KarbonClusterStorageClassConfigArgs struct {
	// - (Required) The name of the storage class.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reclaim policy for persistent volumes provisioned using the specified storage class.
	// * `volumes_config.#.file_system` - (Optional) Karbon uses either the ext4 or xfs file-system on the volume disk.
	// * `volumes_config.#.flash_mode` - (Optional) Pins the persistent volumes to the flash tier in case of a `true` value.
	// * `volumes_config.#.password` - (Required) The password of the Prism Element user that the API calls use to provision volumes.
	// * `volumes_config.#.prism_element_cluster_uuid` - (Required) The universally unique identifier (UUID) of the Prism Element cluster.
	// * `volumes_config.#.storage_container` - (Required) Name of the storage container the storage container uses to provision volumes.
	// * `volumes_config.#.username` - (Required) Username of the Prism Element user that the API calls use to provision volumes.
	//
	// **Note:** Updates to this attribute forces new resource creation.
	ReclaimPolicy pulumi.StringPtrInput                             `pulumi:"reclaimPolicy"`
	VolumesConfig KarbonClusterStorageClassConfigVolumesConfigInput `pulumi:"volumesConfig"`
}

func (KarbonClusterStorageClassConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterStorageClassConfig)(nil)).Elem()
}

func (i KarbonClusterStorageClassConfigArgs) ToKarbonClusterStorageClassConfigOutput() KarbonClusterStorageClassConfigOutput {
	return i.ToKarbonClusterStorageClassConfigOutputWithContext(context.Background())
}

func (i KarbonClusterStorageClassConfigArgs) ToKarbonClusterStorageClassConfigOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigOutput)
}

func (i KarbonClusterStorageClassConfigArgs) ToKarbonClusterStorageClassConfigPtrOutput() KarbonClusterStorageClassConfigPtrOutput {
	return i.ToKarbonClusterStorageClassConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterStorageClassConfigArgs) ToKarbonClusterStorageClassConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigOutput).ToKarbonClusterStorageClassConfigPtrOutputWithContext(ctx)
}

// KarbonClusterStorageClassConfigPtrInput is an input type that accepts KarbonClusterStorageClassConfigArgs, KarbonClusterStorageClassConfigPtr and KarbonClusterStorageClassConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterStorageClassConfigPtrInput` via:
//
//	        KarbonClusterStorageClassConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterStorageClassConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterStorageClassConfigPtrOutput() KarbonClusterStorageClassConfigPtrOutput
	ToKarbonClusterStorageClassConfigPtrOutputWithContext(context.Context) KarbonClusterStorageClassConfigPtrOutput
}

type karbonClusterStorageClassConfigPtrType KarbonClusterStorageClassConfigArgs

func KarbonClusterStorageClassConfigPtr(v *KarbonClusterStorageClassConfigArgs) KarbonClusterStorageClassConfigPtrInput {
	return (*karbonClusterStorageClassConfigPtrType)(v)
}

func (*karbonClusterStorageClassConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterStorageClassConfig)(nil)).Elem()
}

func (i *karbonClusterStorageClassConfigPtrType) ToKarbonClusterStorageClassConfigPtrOutput() KarbonClusterStorageClassConfigPtrOutput {
	return i.ToKarbonClusterStorageClassConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterStorageClassConfigPtrType) ToKarbonClusterStorageClassConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigPtrOutput)
}

type KarbonClusterStorageClassConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterStorageClassConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterStorageClassConfig)(nil)).Elem()
}

func (o KarbonClusterStorageClassConfigOutput) ToKarbonClusterStorageClassConfigOutput() KarbonClusterStorageClassConfigOutput {
	return o
}

func (o KarbonClusterStorageClassConfigOutput) ToKarbonClusterStorageClassConfigOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigOutput {
	return o
}

func (o KarbonClusterStorageClassConfigOutput) ToKarbonClusterStorageClassConfigPtrOutput() KarbonClusterStorageClassConfigPtrOutput {
	return o.ToKarbonClusterStorageClassConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterStorageClassConfigOutput) ToKarbonClusterStorageClassConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterStorageClassConfig) *KarbonClusterStorageClassConfig {
		return &v
	}).(KarbonClusterStorageClassConfigPtrOutput)
}

// - (Required) The name of the storage class.
func (o KarbonClusterStorageClassConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reclaim policy for persistent volumes provisioned using the specified storage class.
// * `volumes_config.#.file_system` - (Optional) Karbon uses either the ext4 or xfs file-system on the volume disk.
// * `volumes_config.#.flash_mode` - (Optional) Pins the persistent volumes to the flash tier in case of a `true` value.
// * `volumes_config.#.password` - (Required) The password of the Prism Element user that the API calls use to provision volumes.
// * `volumes_config.#.prism_element_cluster_uuid` - (Required) The universally unique identifier (UUID) of the Prism Element cluster.
// * `volumes_config.#.storage_container` - (Required) Name of the storage container the storage container uses to provision volumes.
// * `volumes_config.#.username` - (Required) Username of the Prism Element user that the API calls use to provision volumes.
//
// **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterStorageClassConfigOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfig) *string { return v.ReclaimPolicy }).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigOutput) VolumesConfig() KarbonClusterStorageClassConfigVolumesConfigOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfig) KarbonClusterStorageClassConfigVolumesConfig {
		return v.VolumesConfig
	}).(KarbonClusterStorageClassConfigVolumesConfigOutput)
}

type KarbonClusterStorageClassConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterStorageClassConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterStorageClassConfig)(nil)).Elem()
}

func (o KarbonClusterStorageClassConfigPtrOutput) ToKarbonClusterStorageClassConfigPtrOutput() KarbonClusterStorageClassConfigPtrOutput {
	return o
}

func (o KarbonClusterStorageClassConfigPtrOutput) ToKarbonClusterStorageClassConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigPtrOutput {
	return o
}

func (o KarbonClusterStorageClassConfigPtrOutput) Elem() KarbonClusterStorageClassConfigOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfig) KarbonClusterStorageClassConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterStorageClassConfig
		return ret
	}).(KarbonClusterStorageClassConfigOutput)
}

// - (Required) The name of the storage class.
func (o KarbonClusterStorageClassConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfig) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reclaim policy for persistent volumes provisioned using the specified storage class.
// * `volumes_config.#.file_system` - (Optional) Karbon uses either the ext4 or xfs file-system on the volume disk.
// * `volumes_config.#.flash_mode` - (Optional) Pins the persistent volumes to the flash tier in case of a `true` value.
// * `volumes_config.#.password` - (Required) The password of the Prism Element user that the API calls use to provision volumes.
// * `volumes_config.#.prism_element_cluster_uuid` - (Required) The universally unique identifier (UUID) of the Prism Element cluster.
// * `volumes_config.#.storage_container` - (Required) Name of the storage container the storage container uses to provision volumes.
// * `volumes_config.#.username` - (Required) Username of the Prism Element user that the API calls use to provision volumes.
//
// **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterStorageClassConfigPtrOutput) ReclaimPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReclaimPolicy
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigPtrOutput) VolumesConfig() KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfig) *KarbonClusterStorageClassConfigVolumesConfig {
		if v == nil {
			return nil
		}
		return &v.VolumesConfig
	}).(KarbonClusterStorageClassConfigVolumesConfigPtrOutput)
}

type KarbonClusterStorageClassConfigVolumesConfig struct {
	FileSystem              *string `pulumi:"fileSystem"`
	FlashMode               *bool   `pulumi:"flashMode"`
	Password                string  `pulumi:"password"`
	PrismElementClusterUuid string  `pulumi:"prismElementClusterUuid"`
	StorageContainer        string  `pulumi:"storageContainer"`
	Username                string  `pulumi:"username"`
}

// KarbonClusterStorageClassConfigVolumesConfigInput is an input type that accepts KarbonClusterStorageClassConfigVolumesConfigArgs and KarbonClusterStorageClassConfigVolumesConfigOutput values.
// You can construct a concrete instance of `KarbonClusterStorageClassConfigVolumesConfigInput` via:
//
//	KarbonClusterStorageClassConfigVolumesConfigArgs{...}
type KarbonClusterStorageClassConfigVolumesConfigInput interface {
	pulumi.Input

	ToKarbonClusterStorageClassConfigVolumesConfigOutput() KarbonClusterStorageClassConfigVolumesConfigOutput
	ToKarbonClusterStorageClassConfigVolumesConfigOutputWithContext(context.Context) KarbonClusterStorageClassConfigVolumesConfigOutput
}

type KarbonClusterStorageClassConfigVolumesConfigArgs struct {
	FileSystem              pulumi.StringPtrInput `pulumi:"fileSystem"`
	FlashMode               pulumi.BoolPtrInput   `pulumi:"flashMode"`
	Password                pulumi.StringInput    `pulumi:"password"`
	PrismElementClusterUuid pulumi.StringInput    `pulumi:"prismElementClusterUuid"`
	StorageContainer        pulumi.StringInput    `pulumi:"storageContainer"`
	Username                pulumi.StringInput    `pulumi:"username"`
}

func (KarbonClusterStorageClassConfigVolumesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterStorageClassConfigVolumesConfig)(nil)).Elem()
}

func (i KarbonClusterStorageClassConfigVolumesConfigArgs) ToKarbonClusterStorageClassConfigVolumesConfigOutput() KarbonClusterStorageClassConfigVolumesConfigOutput {
	return i.ToKarbonClusterStorageClassConfigVolumesConfigOutputWithContext(context.Background())
}

func (i KarbonClusterStorageClassConfigVolumesConfigArgs) ToKarbonClusterStorageClassConfigVolumesConfigOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigVolumesConfigOutput)
}

func (i KarbonClusterStorageClassConfigVolumesConfigArgs) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutput() KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return i.ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterStorageClassConfigVolumesConfigArgs) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigVolumesConfigOutput).ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(ctx)
}

// KarbonClusterStorageClassConfigVolumesConfigPtrInput is an input type that accepts KarbonClusterStorageClassConfigVolumesConfigArgs, KarbonClusterStorageClassConfigVolumesConfigPtr and KarbonClusterStorageClassConfigVolumesConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterStorageClassConfigVolumesConfigPtrInput` via:
//
//	        KarbonClusterStorageClassConfigVolumesConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterStorageClassConfigVolumesConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterStorageClassConfigVolumesConfigPtrOutput() KarbonClusterStorageClassConfigVolumesConfigPtrOutput
	ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(context.Context) KarbonClusterStorageClassConfigVolumesConfigPtrOutput
}

type karbonClusterStorageClassConfigVolumesConfigPtrType KarbonClusterStorageClassConfigVolumesConfigArgs

func KarbonClusterStorageClassConfigVolumesConfigPtr(v *KarbonClusterStorageClassConfigVolumesConfigArgs) KarbonClusterStorageClassConfigVolumesConfigPtrInput {
	return (*karbonClusterStorageClassConfigVolumesConfigPtrType)(v)
}

func (*karbonClusterStorageClassConfigVolumesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterStorageClassConfigVolumesConfig)(nil)).Elem()
}

func (i *karbonClusterStorageClassConfigVolumesConfigPtrType) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutput() KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return i.ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterStorageClassConfigVolumesConfigPtrType) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterStorageClassConfigVolumesConfigPtrOutput)
}

type KarbonClusterStorageClassConfigVolumesConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterStorageClassConfigVolumesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterStorageClassConfigVolumesConfig)(nil)).Elem()
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) ToKarbonClusterStorageClassConfigVolumesConfigOutput() KarbonClusterStorageClassConfigVolumesConfigOutput {
	return o
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) ToKarbonClusterStorageClassConfigVolumesConfigOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigOutput {
	return o
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutput() KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return o.ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterStorageClassConfigVolumesConfig) *KarbonClusterStorageClassConfigVolumesConfig {
		return &v
	}).(KarbonClusterStorageClassConfigVolumesConfigPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) FlashMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) *bool { return v.FlashMode }).(pulumi.BoolPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) string { return v.Password }).(pulumi.StringOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) PrismElementClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) string { return v.PrismElementClusterUuid }).(pulumi.StringOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) StorageContainer() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) string { return v.StorageContainer }).(pulumi.StringOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterStorageClassConfigVolumesConfig) string { return v.Username }).(pulumi.StringOutput)
}

type KarbonClusterStorageClassConfigVolumesConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterStorageClassConfigVolumesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterStorageClassConfigVolumesConfig)(nil)).Elem()
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutput() KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return o
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) ToKarbonClusterStorageClassConfigVolumesConfigPtrOutputWithContext(ctx context.Context) KarbonClusterStorageClassConfigVolumesConfigPtrOutput {
	return o
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) Elem() KarbonClusterStorageClassConfigVolumesConfigOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) KarbonClusterStorageClassConfigVolumesConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterStorageClassConfigVolumesConfig
		return ret
	}).(KarbonClusterStorageClassConfigVolumesConfigOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *string {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) FlashMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FlashMode
	}).(pulumi.BoolPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PrismElementClusterUuid
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) StorageContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageContainer
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterStorageClassConfigVolumesConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterStorageClassConfigVolumesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterWorkerNodePool struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig *KarbonClusterWorkerNodePoolAhvConfig `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name *string `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion string `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes []KarbonClusterWorkerNodePoolNode `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances int `pulumi:"numInstances"`
}

// KarbonClusterWorkerNodePoolInput is an input type that accepts KarbonClusterWorkerNodePoolArgs and KarbonClusterWorkerNodePoolOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolInput` via:
//
//	KarbonClusterWorkerNodePoolArgs{...}
type KarbonClusterWorkerNodePoolInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolOutput() KarbonClusterWorkerNodePoolOutput
	ToKarbonClusterWorkerNodePoolOutputWithContext(context.Context) KarbonClusterWorkerNodePoolOutput
}

type KarbonClusterWorkerNodePoolArgs struct {
	// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
	// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
	AhvConfig KarbonClusterWorkerNodePoolAhvConfigPtrInput `pulumi:"ahvConfig"`
	// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
	NodeOsVersion pulumi.StringInput `pulumi:"nodeOsVersion"`
	// - List of the deployed nodes in the node pool.
	// * `nodes.hostname`: - Hostname of the deployed node.
	// * `nodes.ipv4_address`: - IP of the deployed node.
	Nodes KarbonClusterWorkerNodePoolNodeArrayInput `pulumi:"nodes"`
	// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
	NumInstances pulumi.IntInput `pulumi:"numInstances"`
}

func (KarbonClusterWorkerNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePool)(nil)).Elem()
}

func (i KarbonClusterWorkerNodePoolArgs) ToKarbonClusterWorkerNodePoolOutput() KarbonClusterWorkerNodePoolOutput {
	return i.ToKarbonClusterWorkerNodePoolOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolArgs) ToKarbonClusterWorkerNodePoolOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolOutput)
}

func (i KarbonClusterWorkerNodePoolArgs) ToKarbonClusterWorkerNodePoolPtrOutput() KarbonClusterWorkerNodePoolPtrOutput {
	return i.ToKarbonClusterWorkerNodePoolPtrOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolArgs) ToKarbonClusterWorkerNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolOutput).ToKarbonClusterWorkerNodePoolPtrOutputWithContext(ctx)
}

// KarbonClusterWorkerNodePoolPtrInput is an input type that accepts KarbonClusterWorkerNodePoolArgs, KarbonClusterWorkerNodePoolPtr and KarbonClusterWorkerNodePoolPtrOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolPtrInput` via:
//
//	        KarbonClusterWorkerNodePoolArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterWorkerNodePoolPtrInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolPtrOutput() KarbonClusterWorkerNodePoolPtrOutput
	ToKarbonClusterWorkerNodePoolPtrOutputWithContext(context.Context) KarbonClusterWorkerNodePoolPtrOutput
}

type karbonClusterWorkerNodePoolPtrType KarbonClusterWorkerNodePoolArgs

func KarbonClusterWorkerNodePoolPtr(v *KarbonClusterWorkerNodePoolArgs) KarbonClusterWorkerNodePoolPtrInput {
	return (*karbonClusterWorkerNodePoolPtrType)(v)
}

func (*karbonClusterWorkerNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterWorkerNodePool)(nil)).Elem()
}

func (i *karbonClusterWorkerNodePoolPtrType) ToKarbonClusterWorkerNodePoolPtrOutput() KarbonClusterWorkerNodePoolPtrOutput {
	return i.ToKarbonClusterWorkerNodePoolPtrOutputWithContext(context.Background())
}

func (i *karbonClusterWorkerNodePoolPtrType) ToKarbonClusterWorkerNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolPtrOutput)
}

type KarbonClusterWorkerNodePoolOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePool)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolOutput) ToKarbonClusterWorkerNodePoolOutput() KarbonClusterWorkerNodePoolOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolOutput) ToKarbonClusterWorkerNodePoolOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolOutput) ToKarbonClusterWorkerNodePoolPtrOutput() KarbonClusterWorkerNodePoolPtrOutput {
	return o.ToKarbonClusterWorkerNodePoolPtrOutputWithContext(context.Background())
}

func (o KarbonClusterWorkerNodePoolOutput) ToKarbonClusterWorkerNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterWorkerNodePool) *KarbonClusterWorkerNodePool {
		return &v
	}).(KarbonClusterWorkerNodePoolPtrOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterWorkerNodePoolOutput) AhvConfig() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePool) *KarbonClusterWorkerNodePoolAhvConfig { return v.AhvConfig }).(KarbonClusterWorkerNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterWorkerNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterWorkerNodePoolOutput) NodeOsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePool) string { return v.NodeOsVersion }).(pulumi.StringOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterWorkerNodePoolOutput) Nodes() KarbonClusterWorkerNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePool) []KarbonClusterWorkerNodePoolNode { return v.Nodes }).(KarbonClusterWorkerNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterWorkerNodePoolOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePool) int { return v.NumInstances }).(pulumi.IntOutput)
}

type KarbonClusterWorkerNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterWorkerNodePool)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolPtrOutput) ToKarbonClusterWorkerNodePoolPtrOutput() KarbonClusterWorkerNodePoolPtrOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolPtrOutput) ToKarbonClusterWorkerNodePoolPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolPtrOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolPtrOutput) Elem() KarbonClusterWorkerNodePoolOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) KarbonClusterWorkerNodePool {
		if v != nil {
			return *v
		}
		var ret KarbonClusterWorkerNodePool
		return ret
	}).(KarbonClusterWorkerNodePoolOutput)
}

// - (Optional) VM configuration in AHV. **Note:** Updates to this attribute forces new resource creation.
// * `ahv_config.cpu`: - (Required) The number of VCPUs allocated for each VM on the PE cluster.
// * `ahv_config.disk_mib`: - (Optional) Size of local storage for each VM on the PE cluster in MiB.
// * `ahv_config.memory_mib`: - (Optional) Memory allocated for each VM on the PE cluster in MiB.
// * `ahv_config.network_uuid`: - (Required) The UUID of the network for the VMs deployed with this resource configuration.
// * `ahv_config.prism_element_cluster_uuid`: - (Required) The unique universal identifier (UUID) of the Prism Element cluster used to deploy VMs for this node pool.
func (o KarbonClusterWorkerNodePoolPtrOutput) AhvConfig() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) *KarbonClusterWorkerNodePoolAhvConfig {
		if v == nil {
			return nil
		}
		return v.AhvConfig
	}).(KarbonClusterWorkerNodePoolAhvConfigPtrOutput)
}

// - (Optional) Unique name of the node pool. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterWorkerNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Required) The version of the node OS image. **Note:** Updates to this attribute forces new resource creation.
func (o KarbonClusterWorkerNodePoolPtrOutput) NodeOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.NodeOsVersion
	}).(pulumi.StringPtrOutput)
}

// - List of the deployed nodes in the node pool.
// * `nodes.hostname`: - Hostname of the deployed node.
// * `nodes.ipv4_address`: - IP of the deployed node.
func (o KarbonClusterWorkerNodePoolPtrOutput) Nodes() KarbonClusterWorkerNodePoolNodeArrayOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) []KarbonClusterWorkerNodePoolNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(KarbonClusterWorkerNodePoolNodeArrayOutput)
}

// - (Required) Number of nodes in the node pool. **Note:** Updates to etcd or master node pool forces new resource creation.
func (o KarbonClusterWorkerNodePoolPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePool) *int {
		if v == nil {
			return nil
		}
		return &v.NumInstances
	}).(pulumi.IntPtrOutput)
}

type KarbonClusterWorkerNodePoolAhvConfig struct {
	Cpu                     *int   `pulumi:"cpu"`
	DiskMib                 *int   `pulumi:"diskMib"`
	MemoryMib               *int   `pulumi:"memoryMib"`
	NetworkUuid             string `pulumi:"networkUuid"`
	PrismElementClusterUuid string `pulumi:"prismElementClusterUuid"`
}

// KarbonClusterWorkerNodePoolAhvConfigInput is an input type that accepts KarbonClusterWorkerNodePoolAhvConfigArgs and KarbonClusterWorkerNodePoolAhvConfigOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolAhvConfigInput` via:
//
//	KarbonClusterWorkerNodePoolAhvConfigArgs{...}
type KarbonClusterWorkerNodePoolAhvConfigInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolAhvConfigOutput() KarbonClusterWorkerNodePoolAhvConfigOutput
	ToKarbonClusterWorkerNodePoolAhvConfigOutputWithContext(context.Context) KarbonClusterWorkerNodePoolAhvConfigOutput
}

type KarbonClusterWorkerNodePoolAhvConfigArgs struct {
	Cpu                     pulumi.IntPtrInput `pulumi:"cpu"`
	DiskMib                 pulumi.IntPtrInput `pulumi:"diskMib"`
	MemoryMib               pulumi.IntPtrInput `pulumi:"memoryMib"`
	NetworkUuid             pulumi.StringInput `pulumi:"networkUuid"`
	PrismElementClusterUuid pulumi.StringInput `pulumi:"prismElementClusterUuid"`
}

func (KarbonClusterWorkerNodePoolAhvConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePoolAhvConfig)(nil)).Elem()
}

func (i KarbonClusterWorkerNodePoolAhvConfigArgs) ToKarbonClusterWorkerNodePoolAhvConfigOutput() KarbonClusterWorkerNodePoolAhvConfigOutput {
	return i.ToKarbonClusterWorkerNodePoolAhvConfigOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolAhvConfigArgs) ToKarbonClusterWorkerNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolAhvConfigOutput)
}

func (i KarbonClusterWorkerNodePoolAhvConfigArgs) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutput() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolAhvConfigArgs) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolAhvConfigOutput).ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(ctx)
}

// KarbonClusterWorkerNodePoolAhvConfigPtrInput is an input type that accepts KarbonClusterWorkerNodePoolAhvConfigArgs, KarbonClusterWorkerNodePoolAhvConfigPtr and KarbonClusterWorkerNodePoolAhvConfigPtrOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolAhvConfigPtrInput` via:
//
//	        KarbonClusterWorkerNodePoolAhvConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonClusterWorkerNodePoolAhvConfigPtrInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolAhvConfigPtrOutput() KarbonClusterWorkerNodePoolAhvConfigPtrOutput
	ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(context.Context) KarbonClusterWorkerNodePoolAhvConfigPtrOutput
}

type karbonClusterWorkerNodePoolAhvConfigPtrType KarbonClusterWorkerNodePoolAhvConfigArgs

func KarbonClusterWorkerNodePoolAhvConfigPtr(v *KarbonClusterWorkerNodePoolAhvConfigArgs) KarbonClusterWorkerNodePoolAhvConfigPtrInput {
	return (*karbonClusterWorkerNodePoolAhvConfigPtrType)(v)
}

func (*karbonClusterWorkerNodePoolAhvConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterWorkerNodePoolAhvConfig)(nil)).Elem()
}

func (i *karbonClusterWorkerNodePoolAhvConfigPtrType) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutput() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return i.ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i *karbonClusterWorkerNodePoolAhvConfigPtrType) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolAhvConfigPtrOutput)
}

type KarbonClusterWorkerNodePoolAhvConfigOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolAhvConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) ToKarbonClusterWorkerNodePoolAhvConfigOutput() KarbonClusterWorkerNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) ToKarbonClusterWorkerNodePoolAhvConfigOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutput() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o.ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(context.Background())
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonClusterWorkerNodePoolAhvConfig) *KarbonClusterWorkerNodePoolAhvConfig {
		return &v
	}).(KarbonClusterWorkerNodePoolAhvConfigPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolAhvConfig) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolAhvConfig) *int { return v.DiskMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolAhvConfig) *int { return v.MemoryMib }).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) NetworkUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolAhvConfig) string { return v.NetworkUuid }).(pulumi.StringOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigOutput) PrismElementClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolAhvConfig) string { return v.PrismElementClusterUuid }).(pulumi.StringOutput)
}

type KarbonClusterWorkerNodePoolAhvConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolAhvConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonClusterWorkerNodePoolAhvConfig)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutput() KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) ToKarbonClusterWorkerNodePoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolAhvConfigPtrOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) Elem() KarbonClusterWorkerNodePoolAhvConfigOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) KarbonClusterWorkerNodePoolAhvConfig {
		if v != nil {
			return *v
		}
		var ret KarbonClusterWorkerNodePoolAhvConfig
		return ret
	}).(KarbonClusterWorkerNodePoolAhvConfigOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMib
	}).(pulumi.IntPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) NetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkUuid
	}).(pulumi.StringPtrOutput)
}

func (o KarbonClusterWorkerNodePoolAhvConfigPtrOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonClusterWorkerNodePoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PrismElementClusterUuid
	}).(pulumi.StringPtrOutput)
}

type KarbonClusterWorkerNodePoolNode struct {
	Hostname    *string `pulumi:"hostname"`
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// KarbonClusterWorkerNodePoolNodeInput is an input type that accepts KarbonClusterWorkerNodePoolNodeArgs and KarbonClusterWorkerNodePoolNodeOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolNodeInput` via:
//
//	KarbonClusterWorkerNodePoolNodeArgs{...}
type KarbonClusterWorkerNodePoolNodeInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolNodeOutput() KarbonClusterWorkerNodePoolNodeOutput
	ToKarbonClusterWorkerNodePoolNodeOutputWithContext(context.Context) KarbonClusterWorkerNodePoolNodeOutput
}

type KarbonClusterWorkerNodePoolNodeArgs struct {
	Hostname    pulumi.StringPtrInput `pulumi:"hostname"`
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (KarbonClusterWorkerNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterWorkerNodePoolNodeArgs) ToKarbonClusterWorkerNodePoolNodeOutput() KarbonClusterWorkerNodePoolNodeOutput {
	return i.ToKarbonClusterWorkerNodePoolNodeOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolNodeArgs) ToKarbonClusterWorkerNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolNodeOutput)
}

// KarbonClusterWorkerNodePoolNodeArrayInput is an input type that accepts KarbonClusterWorkerNodePoolNodeArray and KarbonClusterWorkerNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KarbonClusterWorkerNodePoolNodeArrayInput` via:
//
//	KarbonClusterWorkerNodePoolNodeArray{ KarbonClusterWorkerNodePoolNodeArgs{...} }
type KarbonClusterWorkerNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKarbonClusterWorkerNodePoolNodeArrayOutput() KarbonClusterWorkerNodePoolNodeArrayOutput
	ToKarbonClusterWorkerNodePoolNodeArrayOutputWithContext(context.Context) KarbonClusterWorkerNodePoolNodeArrayOutput
}

type KarbonClusterWorkerNodePoolNodeArray []KarbonClusterWorkerNodePoolNodeInput

func (KarbonClusterWorkerNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterWorkerNodePoolNode)(nil)).Elem()
}

func (i KarbonClusterWorkerNodePoolNodeArray) ToKarbonClusterWorkerNodePoolNodeArrayOutput() KarbonClusterWorkerNodePoolNodeArrayOutput {
	return i.ToKarbonClusterWorkerNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KarbonClusterWorkerNodePoolNodeArray) ToKarbonClusterWorkerNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonClusterWorkerNodePoolNodeArrayOutput)
}

type KarbonClusterWorkerNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonClusterWorkerNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolNodeOutput) ToKarbonClusterWorkerNodePoolNodeOutput() KarbonClusterWorkerNodePoolNodeOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolNodeOutput) ToKarbonClusterWorkerNodePoolNodeOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolNodeOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolNodeOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolNode) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o KarbonClusterWorkerNodePoolNodeOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonClusterWorkerNodePoolNode) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type KarbonClusterWorkerNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KarbonClusterWorkerNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonClusterWorkerNodePoolNode)(nil)).Elem()
}

func (o KarbonClusterWorkerNodePoolNodeArrayOutput) ToKarbonClusterWorkerNodePoolNodeArrayOutput() KarbonClusterWorkerNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolNodeArrayOutput) ToKarbonClusterWorkerNodePoolNodeArrayOutputWithContext(ctx context.Context) KarbonClusterWorkerNodePoolNodeArrayOutput {
	return o
}

func (o KarbonClusterWorkerNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KarbonClusterWorkerNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonClusterWorkerNodePoolNode {
		return vs[0].([]KarbonClusterWorkerNodePoolNode)[vs[1].(int)]
	}).(KarbonClusterWorkerNodePoolNodeOutput)
}

type KarbonWorkerNodepoolAhvConfig struct {
	// - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	Cpu *int `pulumi:"cpu"`
	// - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	DiskMib *int `pulumi:"diskMib"`
	// VM network UUID for isolating iscsi data traffic.
	IscsiNetworkUuid *string `pulumi:"iscsiNetworkUuid"`
	// - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	MemoryMib *int `pulumi:"memoryMib"`
	// - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	NetworkUuid string `pulumi:"networkUuid"`
	// - (Optional) The unique universal identifier (UUID) of the Prism Element
	PrismElementClusterUuid *string `pulumi:"prismElementClusterUuid"`
}

// KarbonWorkerNodepoolAhvConfigInput is an input type that accepts KarbonWorkerNodepoolAhvConfigArgs and KarbonWorkerNodepoolAhvConfigOutput values.
// You can construct a concrete instance of `KarbonWorkerNodepoolAhvConfigInput` via:
//
//	KarbonWorkerNodepoolAhvConfigArgs{...}
type KarbonWorkerNodepoolAhvConfigInput interface {
	pulumi.Input

	ToKarbonWorkerNodepoolAhvConfigOutput() KarbonWorkerNodepoolAhvConfigOutput
	ToKarbonWorkerNodepoolAhvConfigOutputWithContext(context.Context) KarbonWorkerNodepoolAhvConfigOutput
}

type KarbonWorkerNodepoolAhvConfigArgs struct {
	// - (Required) The number of VCPUs allocated for each VM on the PE cluster.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
	// - (Optional) Size of local storage for each VM on the PE cluster in MiB.
	DiskMib pulumi.IntPtrInput `pulumi:"diskMib"`
	// VM network UUID for isolating iscsi data traffic.
	IscsiNetworkUuid pulumi.StringPtrInput `pulumi:"iscsiNetworkUuid"`
	// - (Optional) Memory allocated for each VM on the PE cluster in MiB.
	MemoryMib pulumi.IntPtrInput `pulumi:"memoryMib"`
	// - (Required) The UUID of the network for the VMs deployed with this resource configuration.
	NetworkUuid pulumi.StringInput `pulumi:"networkUuid"`
	// - (Optional) The unique universal identifier (UUID) of the Prism Element
	PrismElementClusterUuid pulumi.StringPtrInput `pulumi:"prismElementClusterUuid"`
}

func (KarbonWorkerNodepoolAhvConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonWorkerNodepoolAhvConfig)(nil)).Elem()
}

func (i KarbonWorkerNodepoolAhvConfigArgs) ToKarbonWorkerNodepoolAhvConfigOutput() KarbonWorkerNodepoolAhvConfigOutput {
	return i.ToKarbonWorkerNodepoolAhvConfigOutputWithContext(context.Background())
}

func (i KarbonWorkerNodepoolAhvConfigArgs) ToKarbonWorkerNodepoolAhvConfigOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonWorkerNodepoolAhvConfigOutput)
}

func (i KarbonWorkerNodepoolAhvConfigArgs) ToKarbonWorkerNodepoolAhvConfigPtrOutput() KarbonWorkerNodepoolAhvConfigPtrOutput {
	return i.ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i KarbonWorkerNodepoolAhvConfigArgs) ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonWorkerNodepoolAhvConfigOutput).ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(ctx)
}

// KarbonWorkerNodepoolAhvConfigPtrInput is an input type that accepts KarbonWorkerNodepoolAhvConfigArgs, KarbonWorkerNodepoolAhvConfigPtr and KarbonWorkerNodepoolAhvConfigPtrOutput values.
// You can construct a concrete instance of `KarbonWorkerNodepoolAhvConfigPtrInput` via:
//
//	        KarbonWorkerNodepoolAhvConfigArgs{...}
//
//	or:
//
//	        nil
type KarbonWorkerNodepoolAhvConfigPtrInput interface {
	pulumi.Input

	ToKarbonWorkerNodepoolAhvConfigPtrOutput() KarbonWorkerNodepoolAhvConfigPtrOutput
	ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(context.Context) KarbonWorkerNodepoolAhvConfigPtrOutput
}

type karbonWorkerNodepoolAhvConfigPtrType KarbonWorkerNodepoolAhvConfigArgs

func KarbonWorkerNodepoolAhvConfigPtr(v *KarbonWorkerNodepoolAhvConfigArgs) KarbonWorkerNodepoolAhvConfigPtrInput {
	return (*karbonWorkerNodepoolAhvConfigPtrType)(v)
}

func (*karbonWorkerNodepoolAhvConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonWorkerNodepoolAhvConfig)(nil)).Elem()
}

func (i *karbonWorkerNodepoolAhvConfigPtrType) ToKarbonWorkerNodepoolAhvConfigPtrOutput() KarbonWorkerNodepoolAhvConfigPtrOutput {
	return i.ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(context.Background())
}

func (i *karbonWorkerNodepoolAhvConfigPtrType) ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonWorkerNodepoolAhvConfigPtrOutput)
}

type KarbonWorkerNodepoolAhvConfigOutput struct{ *pulumi.OutputState }

func (KarbonWorkerNodepoolAhvConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonWorkerNodepoolAhvConfig)(nil)).Elem()
}

func (o KarbonWorkerNodepoolAhvConfigOutput) ToKarbonWorkerNodepoolAhvConfigOutput() KarbonWorkerNodepoolAhvConfigOutput {
	return o
}

func (o KarbonWorkerNodepoolAhvConfigOutput) ToKarbonWorkerNodepoolAhvConfigOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigOutput {
	return o
}

func (o KarbonWorkerNodepoolAhvConfigOutput) ToKarbonWorkerNodepoolAhvConfigPtrOutput() KarbonWorkerNodepoolAhvConfigPtrOutput {
	return o.ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(context.Background())
}

func (o KarbonWorkerNodepoolAhvConfigOutput) ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KarbonWorkerNodepoolAhvConfig) *KarbonWorkerNodepoolAhvConfig {
		return &v
	}).(KarbonWorkerNodepoolAhvConfigPtrOutput)
}

// - (Required) The number of VCPUs allocated for each VM on the PE cluster.
func (o KarbonWorkerNodepoolAhvConfigOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

// - (Optional) Size of local storage for each VM on the PE cluster in MiB.
func (o KarbonWorkerNodepoolAhvConfigOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) *int { return v.DiskMib }).(pulumi.IntPtrOutput)
}

// VM network UUID for isolating iscsi data traffic.
func (o KarbonWorkerNodepoolAhvConfigOutput) IscsiNetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) *string { return v.IscsiNetworkUuid }).(pulumi.StringPtrOutput)
}

// - (Optional) Memory allocated for each VM on the PE cluster in MiB.
func (o KarbonWorkerNodepoolAhvConfigOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) *int { return v.MemoryMib }).(pulumi.IntPtrOutput)
}

// - (Required) The UUID of the network for the VMs deployed with this resource configuration.
func (o KarbonWorkerNodepoolAhvConfigOutput) NetworkUuid() pulumi.StringOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) string { return v.NetworkUuid }).(pulumi.StringOutput)
}

// - (Optional) The unique universal identifier (UUID) of the Prism Element
func (o KarbonWorkerNodepoolAhvConfigOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolAhvConfig) *string { return v.PrismElementClusterUuid }).(pulumi.StringPtrOutput)
}

type KarbonWorkerNodepoolAhvConfigPtrOutput struct{ *pulumi.OutputState }

func (KarbonWorkerNodepoolAhvConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KarbonWorkerNodepoolAhvConfig)(nil)).Elem()
}

func (o KarbonWorkerNodepoolAhvConfigPtrOutput) ToKarbonWorkerNodepoolAhvConfigPtrOutput() KarbonWorkerNodepoolAhvConfigPtrOutput {
	return o
}

func (o KarbonWorkerNodepoolAhvConfigPtrOutput) ToKarbonWorkerNodepoolAhvConfigPtrOutputWithContext(ctx context.Context) KarbonWorkerNodepoolAhvConfigPtrOutput {
	return o
}

func (o KarbonWorkerNodepoolAhvConfigPtrOutput) Elem() KarbonWorkerNodepoolAhvConfigOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) KarbonWorkerNodepoolAhvConfig {
		if v != nil {
			return *v
		}
		var ret KarbonWorkerNodepoolAhvConfig
		return ret
	}).(KarbonWorkerNodepoolAhvConfigOutput)
}

// - (Required) The number of VCPUs allocated for each VM on the PE cluster.
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// - (Optional) Size of local storage for each VM on the PE cluster in MiB.
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) DiskMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskMib
	}).(pulumi.IntPtrOutput)
}

// VM network UUID for isolating iscsi data traffic.
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) IscsiNetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return v.IscsiNetworkUuid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) Memory allocated for each VM on the PE cluster in MiB.
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) MemoryMib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *int {
		if v == nil {
			return nil
		}
		return v.MemoryMib
	}).(pulumi.IntPtrOutput)
}

// - (Required) The UUID of the network for the VMs deployed with this resource configuration.
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) NetworkUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkUuid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) The unique universal identifier (UUID) of the Prism Element
func (o KarbonWorkerNodepoolAhvConfigPtrOutput) PrismElementClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KarbonWorkerNodepoolAhvConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrismElementClusterUuid
	}).(pulumi.StringPtrOutput)
}

type KarbonWorkerNodepoolNode struct {
	// hostname of node
	Hostname *string `pulumi:"hostname"`
	// ipv4 address of node
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// KarbonWorkerNodepoolNodeInput is an input type that accepts KarbonWorkerNodepoolNodeArgs and KarbonWorkerNodepoolNodeOutput values.
// You can construct a concrete instance of `KarbonWorkerNodepoolNodeInput` via:
//
//	KarbonWorkerNodepoolNodeArgs{...}
type KarbonWorkerNodepoolNodeInput interface {
	pulumi.Input

	ToKarbonWorkerNodepoolNodeOutput() KarbonWorkerNodepoolNodeOutput
	ToKarbonWorkerNodepoolNodeOutputWithContext(context.Context) KarbonWorkerNodepoolNodeOutput
}

type KarbonWorkerNodepoolNodeArgs struct {
	// hostname of node
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// ipv4 address of node
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (KarbonWorkerNodepoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonWorkerNodepoolNode)(nil)).Elem()
}

func (i KarbonWorkerNodepoolNodeArgs) ToKarbonWorkerNodepoolNodeOutput() KarbonWorkerNodepoolNodeOutput {
	return i.ToKarbonWorkerNodepoolNodeOutputWithContext(context.Background())
}

func (i KarbonWorkerNodepoolNodeArgs) ToKarbonWorkerNodepoolNodeOutputWithContext(ctx context.Context) KarbonWorkerNodepoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonWorkerNodepoolNodeOutput)
}

// KarbonWorkerNodepoolNodeArrayInput is an input type that accepts KarbonWorkerNodepoolNodeArray and KarbonWorkerNodepoolNodeArrayOutput values.
// You can construct a concrete instance of `KarbonWorkerNodepoolNodeArrayInput` via:
//
//	KarbonWorkerNodepoolNodeArray{ KarbonWorkerNodepoolNodeArgs{...} }
type KarbonWorkerNodepoolNodeArrayInput interface {
	pulumi.Input

	ToKarbonWorkerNodepoolNodeArrayOutput() KarbonWorkerNodepoolNodeArrayOutput
	ToKarbonWorkerNodepoolNodeArrayOutputWithContext(context.Context) KarbonWorkerNodepoolNodeArrayOutput
}

type KarbonWorkerNodepoolNodeArray []KarbonWorkerNodepoolNodeInput

func (KarbonWorkerNodepoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonWorkerNodepoolNode)(nil)).Elem()
}

func (i KarbonWorkerNodepoolNodeArray) ToKarbonWorkerNodepoolNodeArrayOutput() KarbonWorkerNodepoolNodeArrayOutput {
	return i.ToKarbonWorkerNodepoolNodeArrayOutputWithContext(context.Background())
}

func (i KarbonWorkerNodepoolNodeArray) ToKarbonWorkerNodepoolNodeArrayOutputWithContext(ctx context.Context) KarbonWorkerNodepoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KarbonWorkerNodepoolNodeArrayOutput)
}

type KarbonWorkerNodepoolNodeOutput struct{ *pulumi.OutputState }

func (KarbonWorkerNodepoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KarbonWorkerNodepoolNode)(nil)).Elem()
}

func (o KarbonWorkerNodepoolNodeOutput) ToKarbonWorkerNodepoolNodeOutput() KarbonWorkerNodepoolNodeOutput {
	return o
}

func (o KarbonWorkerNodepoolNodeOutput) ToKarbonWorkerNodepoolNodeOutputWithContext(ctx context.Context) KarbonWorkerNodepoolNodeOutput {
	return o
}

// hostname of node
func (o KarbonWorkerNodepoolNodeOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolNode) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// ipv4 address of node
func (o KarbonWorkerNodepoolNodeOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KarbonWorkerNodepoolNode) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type KarbonWorkerNodepoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KarbonWorkerNodepoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KarbonWorkerNodepoolNode)(nil)).Elem()
}

func (o KarbonWorkerNodepoolNodeArrayOutput) ToKarbonWorkerNodepoolNodeArrayOutput() KarbonWorkerNodepoolNodeArrayOutput {
	return o
}

func (o KarbonWorkerNodepoolNodeArrayOutput) ToKarbonWorkerNodepoolNodeArrayOutputWithContext(ctx context.Context) KarbonWorkerNodepoolNodeArrayOutput {
	return o
}

func (o KarbonWorkerNodepoolNodeArrayOutput) Index(i pulumi.IntInput) KarbonWorkerNodepoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KarbonWorkerNodepoolNode {
		return vs[0].([]KarbonWorkerNodepoolNode)[vs[1].(int)]
	}).(KarbonWorkerNodepoolNodeOutput)
}

type NdbCloneActionargument struct {
	// - (Required) name of argument
	Name string `pulumi:"name"`
	// - (Required) value for argument
	Value string `pulumi:"value"`
}

// NdbCloneActionargumentInput is an input type that accepts NdbCloneActionargumentArgs and NdbCloneActionargumentOutput values.
// You can construct a concrete instance of `NdbCloneActionargumentInput` via:
//
//	NdbCloneActionargumentArgs{...}
type NdbCloneActionargumentInput interface {
	pulumi.Input

	ToNdbCloneActionargumentOutput() NdbCloneActionargumentOutput
	ToNdbCloneActionargumentOutputWithContext(context.Context) NdbCloneActionargumentOutput
}

type NdbCloneActionargumentArgs struct {
	// - (Required) name of argument
	Name pulumi.StringInput `pulumi:"name"`
	// - (Required) value for argument
	Value pulumi.StringInput `pulumi:"value"`
}

func (NdbCloneActionargumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneActionargument)(nil)).Elem()
}

func (i NdbCloneActionargumentArgs) ToNdbCloneActionargumentOutput() NdbCloneActionargumentOutput {
	return i.ToNdbCloneActionargumentOutputWithContext(context.Background())
}

func (i NdbCloneActionargumentArgs) ToNdbCloneActionargumentOutputWithContext(ctx context.Context) NdbCloneActionargumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneActionargumentOutput)
}

// NdbCloneActionargumentArrayInput is an input type that accepts NdbCloneActionargumentArray and NdbCloneActionargumentArrayOutput values.
// You can construct a concrete instance of `NdbCloneActionargumentArrayInput` via:
//
//	NdbCloneActionargumentArray{ NdbCloneActionargumentArgs{...} }
type NdbCloneActionargumentArrayInput interface {
	pulumi.Input

	ToNdbCloneActionargumentArrayOutput() NdbCloneActionargumentArrayOutput
	ToNdbCloneActionargumentArrayOutputWithContext(context.Context) NdbCloneActionargumentArrayOutput
}

type NdbCloneActionargumentArray []NdbCloneActionargumentInput

func (NdbCloneActionargumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneActionargument)(nil)).Elem()
}

func (i NdbCloneActionargumentArray) ToNdbCloneActionargumentArrayOutput() NdbCloneActionargumentArrayOutput {
	return i.ToNdbCloneActionargumentArrayOutputWithContext(context.Background())
}

func (i NdbCloneActionargumentArray) ToNdbCloneActionargumentArrayOutputWithContext(ctx context.Context) NdbCloneActionargumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneActionargumentArrayOutput)
}

type NdbCloneActionargumentOutput struct{ *pulumi.OutputState }

func (NdbCloneActionargumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneActionargument)(nil)).Elem()
}

func (o NdbCloneActionargumentOutput) ToNdbCloneActionargumentOutput() NdbCloneActionargumentOutput {
	return o
}

func (o NdbCloneActionargumentOutput) ToNdbCloneActionargumentOutputWithContext(ctx context.Context) NdbCloneActionargumentOutput {
	return o
}

// - (Required) name of argument
func (o NdbCloneActionargumentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbCloneActionargument) string { return v.Name }).(pulumi.StringOutput)
}

// - (Required) value for argument
func (o NdbCloneActionargumentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NdbCloneActionargument) string { return v.Value }).(pulumi.StringOutput)
}

type NdbCloneActionargumentArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneActionargumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneActionargument)(nil)).Elem()
}

func (o NdbCloneActionargumentArrayOutput) ToNdbCloneActionargumentArrayOutput() NdbCloneActionargumentArrayOutput {
	return o
}

func (o NdbCloneActionargumentArrayOutput) ToNdbCloneActionargumentArrayOutputWithContext(ctx context.Context) NdbCloneActionargumentArrayOutput {
	return o
}

func (o NdbCloneActionargumentArrayOutput) Index(i pulumi.IntInput) NdbCloneActionargumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneActionargument {
		return vs[0].([]NdbCloneActionargument)[vs[1].(int)]
	}).(NdbCloneActionargumentOutput)
}

type NdbCloneDatabaseNode struct {
	AccessLevel    map[string]string `pulumi:"accessLevel"`
	DatabaseId     *string           `pulumi:"databaseId"`
	DatabaseStatus *string           `pulumi:"databaseStatus"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	// Specify if you want to create a database server. This value can be set to true or false as required.
	DbserverId *string `pulumi:"dbserverId"`
	// database instance description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of clone
	Infos []NdbCloneDatabaseNodeInfo `pulumi:"infos"`
	// database instance name
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// List of all the properties
	Properties             []NdbCloneDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbCloneDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                `pulumi:"softwareInstallationId"`
	// status of clone
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbCloneDatabaseNodeTag `pulumi:"tags"`
}

// NdbCloneDatabaseNodeInput is an input type that accepts NdbCloneDatabaseNodeArgs and NdbCloneDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeInput` via:
//
//	NdbCloneDatabaseNodeArgs{...}
type NdbCloneDatabaseNodeInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeOutput() NdbCloneDatabaseNodeOutput
	ToNdbCloneDatabaseNodeOutputWithContext(context.Context) NdbCloneDatabaseNodeOutput
}

type NdbCloneDatabaseNodeArgs struct {
	AccessLevel    pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	// Specify if you want to create a database server. This value can be set to true or false as required.
	DbserverId pulumi.StringPtrInput `pulumi:"dbserverId"`
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of clone
	Infos NdbCloneDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// database instance name
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// List of all the properties
	Properties             NdbCloneDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                          `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbCloneDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                          `pulumi:"softwareInstallationId"`
	// status of clone
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbCloneDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbCloneDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNode)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeArgs) ToNdbCloneDatabaseNodeOutput() NdbCloneDatabaseNodeOutput {
	return i.ToNdbCloneDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeArgs) ToNdbCloneDatabaseNodeOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeOutput)
}

// NdbCloneDatabaseNodeArrayInput is an input type that accepts NdbCloneDatabaseNodeArray and NdbCloneDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeArrayInput` via:
//
//	NdbCloneDatabaseNodeArray{ NdbCloneDatabaseNodeArgs{...} }
type NdbCloneDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeArrayOutput() NdbCloneDatabaseNodeArrayOutput
	ToNdbCloneDatabaseNodeArrayOutputWithContext(context.Context) NdbCloneDatabaseNodeArrayOutput
}

type NdbCloneDatabaseNodeArray []NdbCloneDatabaseNodeInput

func (NdbCloneDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNode)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeArray) ToNdbCloneDatabaseNodeArrayOutput() NdbCloneDatabaseNodeArrayOutput {
	return i.ToNdbCloneDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeArray) ToNdbCloneDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeArrayOutput)
}

type NdbCloneDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNode)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeOutput) ToNdbCloneDatabaseNodeOutput() NdbCloneDatabaseNodeOutput {
	return o
}

func (o NdbCloneDatabaseNodeOutput) ToNdbCloneDatabaseNodeOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeOutput {
	return o
}

func (o NdbCloneDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbCloneDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for clone
func (o NdbCloneDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

// Specify if you want to create a database server. This value can be set to true or false as required.
func (o NdbCloneDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of clone
func (o NdbCloneDatabaseNodeOutput) Infos() NdbCloneDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) []NdbCloneDatabaseNodeInfo { return v.Infos }).(NdbCloneDatabaseNodeInfoArrayOutput)
}

// database instance name
func (o NdbCloneDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// List of all the properties
func (o NdbCloneDatabaseNodeOutput) Properties() NdbCloneDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) []NdbCloneDatabaseNodeProperty { return v.Properties }).(NdbCloneDatabaseNodePropertyArrayOutput)
}

func (o NdbCloneDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeOutput) ProtectionDomains() NdbCloneDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) []NdbCloneDatabaseNodeProtectionDomain { return v.ProtectionDomains }).(NdbCloneDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbCloneDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of clone
func (o NdbCloneDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbCloneDatabaseNodeOutput) Tags() NdbCloneDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNode) []NdbCloneDatabaseNodeTag { return v.Tags }).(NdbCloneDatabaseNodeTagArrayOutput)
}

type NdbCloneDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNode)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeArrayOutput) ToNdbCloneDatabaseNodeArrayOutput() NdbCloneDatabaseNodeArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeArrayOutput) ToNdbCloneDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNode {
		return vs[0].([]NdbCloneDatabaseNode)[vs[1].(int)]
	}).(NdbCloneDatabaseNodeOutput)
}

type NdbCloneDatabaseNodeInfo struct {
	// info of clone
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbCloneDatabaseNodeInfoInput is an input type that accepts NdbCloneDatabaseNodeInfoArgs and NdbCloneDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeInfoInput` via:
//
//	NdbCloneDatabaseNodeInfoArgs{...}
type NdbCloneDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeInfoOutput() NdbCloneDatabaseNodeInfoOutput
	ToNdbCloneDatabaseNodeInfoOutputWithContext(context.Context) NdbCloneDatabaseNodeInfoOutput
}

type NdbCloneDatabaseNodeInfoArgs struct {
	// info of clone
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbCloneDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeInfoArgs) ToNdbCloneDatabaseNodeInfoOutput() NdbCloneDatabaseNodeInfoOutput {
	return i.ToNdbCloneDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeInfoArgs) ToNdbCloneDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeInfoOutput)
}

// NdbCloneDatabaseNodeInfoArrayInput is an input type that accepts NdbCloneDatabaseNodeInfoArray and NdbCloneDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeInfoArrayInput` via:
//
//	NdbCloneDatabaseNodeInfoArray{ NdbCloneDatabaseNodeInfoArgs{...} }
type NdbCloneDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeInfoArrayOutput() NdbCloneDatabaseNodeInfoArrayOutput
	ToNdbCloneDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbCloneDatabaseNodeInfoArrayOutput
}

type NdbCloneDatabaseNodeInfoArray []NdbCloneDatabaseNodeInfoInput

func (NdbCloneDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeInfoArray) ToNdbCloneDatabaseNodeInfoArrayOutput() NdbCloneDatabaseNodeInfoArrayOutput {
	return i.ToNdbCloneDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeInfoArray) ToNdbCloneDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeInfoArrayOutput)
}

type NdbCloneDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeInfoOutput) ToNdbCloneDatabaseNodeInfoOutput() NdbCloneDatabaseNodeInfoOutput {
	return o
}

func (o NdbCloneDatabaseNodeInfoOutput) ToNdbCloneDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeInfoOutput {
	return o
}

// info of clone
func (o NdbCloneDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbCloneDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbCloneDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeInfoArrayOutput) ToNdbCloneDatabaseNodeInfoArrayOutput() NdbCloneDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeInfoArrayOutput) ToNdbCloneDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNodeInfo {
		return vs[0].([]NdbCloneDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbCloneDatabaseNodeInfoOutput)
}

type NdbCloneDatabaseNodeProperty struct {
	// database instance description
	Description *string `pulumi:"description"`
	// database instance name
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbCloneDatabaseNodePropertyInput is an input type that accepts NdbCloneDatabaseNodePropertyArgs and NdbCloneDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodePropertyInput` via:
//
//	NdbCloneDatabaseNodePropertyArgs{...}
type NdbCloneDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodePropertyOutput() NdbCloneDatabaseNodePropertyOutput
	ToNdbCloneDatabaseNodePropertyOutputWithContext(context.Context) NdbCloneDatabaseNodePropertyOutput
}

type NdbCloneDatabaseNodePropertyArgs struct {
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// database instance name
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbCloneDatabaseNodePropertyArgs) ToNdbCloneDatabaseNodePropertyOutput() NdbCloneDatabaseNodePropertyOutput {
	return i.ToNdbCloneDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodePropertyArgs) ToNdbCloneDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbCloneDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodePropertyOutput)
}

// NdbCloneDatabaseNodePropertyArrayInput is an input type that accepts NdbCloneDatabaseNodePropertyArray and NdbCloneDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodePropertyArrayInput` via:
//
//	NdbCloneDatabaseNodePropertyArray{ NdbCloneDatabaseNodePropertyArgs{...} }
type NdbCloneDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodePropertyArrayOutput() NdbCloneDatabaseNodePropertyArrayOutput
	ToNdbCloneDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbCloneDatabaseNodePropertyArrayOutput
}

type NdbCloneDatabaseNodePropertyArray []NdbCloneDatabaseNodePropertyInput

func (NdbCloneDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbCloneDatabaseNodePropertyArray) ToNdbCloneDatabaseNodePropertyArrayOutput() NdbCloneDatabaseNodePropertyArrayOutput {
	return i.ToNdbCloneDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodePropertyArray) ToNdbCloneDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodePropertyArrayOutput)
}

type NdbCloneDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbCloneDatabaseNodePropertyOutput) ToNdbCloneDatabaseNodePropertyOutput() NdbCloneDatabaseNodePropertyOutput {
	return o
}

func (o NdbCloneDatabaseNodePropertyOutput) ToNdbCloneDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbCloneDatabaseNodePropertyOutput {
	return o
}

// database instance description
func (o NdbCloneDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// database instance name
func (o NdbCloneDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbCloneDatabaseNodePropertyArrayOutput) ToNdbCloneDatabaseNodePropertyArrayOutput() NdbCloneDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodePropertyArrayOutput) ToNdbCloneDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNodeProperty {
		return vs[0].([]NdbCloneDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbCloneDatabaseNodePropertyOutput)
}

type NdbCloneDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string `pulumi:"dateModified"`
	// database instance description
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// database instance name
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// List of all the properties
	Properties []NdbCloneDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of clone
	Status *string `pulumi:"status"`
	// type of clone
	Type *string `pulumi:"type"`
}

// NdbCloneDatabaseNodeProtectionDomainInput is an input type that accepts NdbCloneDatabaseNodeProtectionDomainArgs and NdbCloneDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeProtectionDomainInput` via:
//
//	NdbCloneDatabaseNodeProtectionDomainArgs{...}
type NdbCloneDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeProtectionDomainOutput() NdbCloneDatabaseNodeProtectionDomainOutput
	ToNdbCloneDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbCloneDatabaseNodeProtectionDomainOutput
}

type NdbCloneDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// database instance name
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// List of all the properties
	Properties NdbCloneDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of clone
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of clone
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbCloneDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeProtectionDomainArgs) ToNdbCloneDatabaseNodeProtectionDomainOutput() NdbCloneDatabaseNodeProtectionDomainOutput {
	return i.ToNdbCloneDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeProtectionDomainArgs) ToNdbCloneDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeProtectionDomainOutput)
}

// NdbCloneDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbCloneDatabaseNodeProtectionDomainArray and NdbCloneDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbCloneDatabaseNodeProtectionDomainArray{ NdbCloneDatabaseNodeProtectionDomainArgs{...} }
type NdbCloneDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeProtectionDomainArrayOutput() NdbCloneDatabaseNodeProtectionDomainArrayOutput
	ToNdbCloneDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbCloneDatabaseNodeProtectionDomainArrayOutput
}

type NdbCloneDatabaseNodeProtectionDomainArray []NdbCloneDatabaseNodeProtectionDomainInput

func (NdbCloneDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeProtectionDomainArray) ToNdbCloneDatabaseNodeProtectionDomainArrayOutput() NdbCloneDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbCloneDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeProtectionDomainArray) ToNdbCloneDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeProtectionDomainArrayOutput)
}

type NdbCloneDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) ToNdbCloneDatabaseNodeProtectionDomainOutput() NdbCloneDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) ToNdbCloneDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for clone
func (o NdbCloneDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// database instance name
func (o NdbCloneDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// List of all the properties
func (o NdbCloneDatabaseNodeProtectionDomainOutput) Properties() NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) []NdbCloneDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of clone
func (o NdbCloneDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of clone
func (o NdbCloneDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbCloneDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeProtectionDomainArrayOutput) ToNdbCloneDatabaseNodeProtectionDomainArrayOutput() NdbCloneDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainArrayOutput) ToNdbCloneDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNodeProtectionDomain {
		return vs[0].([]NdbCloneDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbCloneDatabaseNodeProtectionDomainOutput)
}

type NdbCloneDatabaseNodeProtectionDomainProperty struct {
	// database instance description
	Description *string `pulumi:"description"`
	// database instance name
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbCloneDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbCloneDatabaseNodeProtectionDomainPropertyArgs and NdbCloneDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbCloneDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbCloneDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeProtectionDomainPropertyOutput() NdbCloneDatabaseNodeProtectionDomainPropertyOutput
	ToNdbCloneDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyOutput
}

type NdbCloneDatabaseNodeProtectionDomainPropertyArgs struct {
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// database instance name
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeProtectionDomainPropertyArgs) ToNdbCloneDatabaseNodeProtectionDomainPropertyOutput() NdbCloneDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbCloneDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeProtectionDomainPropertyArgs) ToNdbCloneDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbCloneDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbCloneDatabaseNodeProtectionDomainPropertyArray and NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbCloneDatabaseNodeProtectionDomainPropertyArray{ NdbCloneDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbCloneDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput() NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbCloneDatabaseNodeProtectionDomainPropertyArray []NdbCloneDatabaseNodeProtectionDomainPropertyInput

func (NdbCloneDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeProtectionDomainPropertyArray) ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput() NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeProtectionDomainPropertyArray) ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbCloneDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) ToNdbCloneDatabaseNodeProtectionDomainPropertyOutput() NdbCloneDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) ToNdbCloneDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// database instance description
func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// database instance name
func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput() NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbCloneDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbCloneDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbCloneDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbCloneDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbCloneDatabaseNodeTagInput is an input type that accepts NdbCloneDatabaseNodeTagArgs and NdbCloneDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeTagInput` via:
//
//	NdbCloneDatabaseNodeTagArgs{...}
type NdbCloneDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeTagOutput() NdbCloneDatabaseNodeTagOutput
	ToNdbCloneDatabaseNodeTagOutputWithContext(context.Context) NdbCloneDatabaseNodeTagOutput
}

type NdbCloneDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeTag)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeTagArgs) ToNdbCloneDatabaseNodeTagOutput() NdbCloneDatabaseNodeTagOutput {
	return i.ToNdbCloneDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeTagArgs) ToNdbCloneDatabaseNodeTagOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeTagOutput)
}

// NdbCloneDatabaseNodeTagArrayInput is an input type that accepts NdbCloneDatabaseNodeTagArray and NdbCloneDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbCloneDatabaseNodeTagArrayInput` via:
//
//	NdbCloneDatabaseNodeTagArray{ NdbCloneDatabaseNodeTagArgs{...} }
type NdbCloneDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbCloneDatabaseNodeTagArrayOutput() NdbCloneDatabaseNodeTagArrayOutput
	ToNdbCloneDatabaseNodeTagArrayOutputWithContext(context.Context) NdbCloneDatabaseNodeTagArrayOutput
}

type NdbCloneDatabaseNodeTagArray []NdbCloneDatabaseNodeTagInput

func (NdbCloneDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeTag)(nil)).Elem()
}

func (i NdbCloneDatabaseNodeTagArray) ToNdbCloneDatabaseNodeTagArrayOutput() NdbCloneDatabaseNodeTagArrayOutput {
	return i.ToNdbCloneDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbCloneDatabaseNodeTagArray) ToNdbCloneDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneDatabaseNodeTagArrayOutput)
}

type NdbCloneDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneDatabaseNodeTag)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeTagOutput) ToNdbCloneDatabaseNodeTagOutput() NdbCloneDatabaseNodeTagOutput {
	return o
}

func (o NdbCloneDatabaseNodeTagOutput) ToNdbCloneDatabaseNodeTagOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeTagOutput {
	return o
}

func (o NdbCloneDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneDatabaseNodeTag)(nil)).Elem()
}

func (o NdbCloneDatabaseNodeTagArrayOutput) ToNdbCloneDatabaseNodeTagArrayOutput() NdbCloneDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeTagArrayOutput) ToNdbCloneDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbCloneDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbCloneDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbCloneDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneDatabaseNodeTag {
		return vs[0].([]NdbCloneDatabaseNodeTag)[vs[1].(int)]
	}).(NdbCloneDatabaseNodeTagOutput)
}

type NdbCloneInfo struct {
	BpgConfigs []NdbCloneInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string       `pulumi:"secureInfo"`
}

// NdbCloneInfoInput is an input type that accepts NdbCloneInfoArgs and NdbCloneInfoOutput values.
// You can construct a concrete instance of `NdbCloneInfoInput` via:
//
//	NdbCloneInfoArgs{...}
type NdbCloneInfoInput interface {
	pulumi.Input

	ToNdbCloneInfoOutput() NdbCloneInfoOutput
	ToNdbCloneInfoOutputWithContext(context.Context) NdbCloneInfoOutput
}

type NdbCloneInfoArgs struct {
	BpgConfigs NdbCloneInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput           `pulumi:"secureInfo"`
}

func (NdbCloneInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfo)(nil)).Elem()
}

func (i NdbCloneInfoArgs) ToNdbCloneInfoOutput() NdbCloneInfoOutput {
	return i.ToNdbCloneInfoOutputWithContext(context.Background())
}

func (i NdbCloneInfoArgs) ToNdbCloneInfoOutputWithContext(ctx context.Context) NdbCloneInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoOutput)
}

// NdbCloneInfoArrayInput is an input type that accepts NdbCloneInfoArray and NdbCloneInfoArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoArrayInput` via:
//
//	NdbCloneInfoArray{ NdbCloneInfoArgs{...} }
type NdbCloneInfoArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoArrayOutput() NdbCloneInfoArrayOutput
	ToNdbCloneInfoArrayOutputWithContext(context.Context) NdbCloneInfoArrayOutput
}

type NdbCloneInfoArray []NdbCloneInfoInput

func (NdbCloneInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfo)(nil)).Elem()
}

func (i NdbCloneInfoArray) ToNdbCloneInfoArrayOutput() NdbCloneInfoArrayOutput {
	return i.ToNdbCloneInfoArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoArray) ToNdbCloneInfoArrayOutputWithContext(ctx context.Context) NdbCloneInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoArrayOutput)
}

type NdbCloneInfoOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfo)(nil)).Elem()
}

func (o NdbCloneInfoOutput) ToNdbCloneInfoOutput() NdbCloneInfoOutput {
	return o
}

func (o NdbCloneInfoOutput) ToNdbCloneInfoOutputWithContext(ctx context.Context) NdbCloneInfoOutput {
	return o
}

func (o NdbCloneInfoOutput) BpgConfigs() NdbCloneInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbCloneInfo) []NdbCloneInfoBpgConfig { return v.BpgConfigs }).(NdbCloneInfoBpgConfigArrayOutput)
}

func (o NdbCloneInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbCloneInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfo)(nil)).Elem()
}

func (o NdbCloneInfoArrayOutput) ToNdbCloneInfoArrayOutput() NdbCloneInfoArrayOutput {
	return o
}

func (o NdbCloneInfoArrayOutput) ToNdbCloneInfoArrayOutputWithContext(ctx context.Context) NdbCloneInfoArrayOutput {
	return o
}

func (o NdbCloneInfoArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfo {
		return vs[0].([]NdbCloneInfo)[vs[1].(int)]
	}).(NdbCloneInfoOutput)
}

type NdbCloneInfoBpgConfig struct {
	BpgDbParams  []NdbCloneInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbCloneInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbCloneInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbCloneInfoBpgConfigInput is an input type that accepts NdbCloneInfoBpgConfigArgs and NdbCloneInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigInput` via:
//
//	NdbCloneInfoBpgConfigArgs{...}
type NdbCloneInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigOutput() NdbCloneInfoBpgConfigOutput
	ToNdbCloneInfoBpgConfigOutputWithContext(context.Context) NdbCloneInfoBpgConfigOutput
}

type NdbCloneInfoBpgConfigArgs struct {
	BpgDbParams  NdbCloneInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbCloneInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbCloneInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbCloneInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfig)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigArgs) ToNdbCloneInfoBpgConfigOutput() NdbCloneInfoBpgConfigOutput {
	return i.ToNdbCloneInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigArgs) ToNdbCloneInfoBpgConfigOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigOutput)
}

// NdbCloneInfoBpgConfigArrayInput is an input type that accepts NdbCloneInfoBpgConfigArray and NdbCloneInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigArrayInput` via:
//
//	NdbCloneInfoBpgConfigArray{ NdbCloneInfoBpgConfigArgs{...} }
type NdbCloneInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigArrayOutput() NdbCloneInfoBpgConfigArrayOutput
	ToNdbCloneInfoBpgConfigArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigArrayOutput
}

type NdbCloneInfoBpgConfigArray []NdbCloneInfoBpgConfigInput

func (NdbCloneInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfig)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigArray) ToNdbCloneInfoBpgConfigArrayOutput() NdbCloneInfoBpgConfigArrayOutput {
	return i.ToNdbCloneInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigArray) ToNdbCloneInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigArrayOutput)
}

type NdbCloneInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfig)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigOutput) ToNdbCloneInfoBpgConfigOutput() NdbCloneInfoBpgConfigOutput {
	return o
}

func (o NdbCloneInfoBpgConfigOutput) ToNdbCloneInfoBpgConfigOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigOutput {
	return o
}

func (o NdbCloneInfoBpgConfigOutput) BpgDbParams() NdbCloneInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfig) []NdbCloneInfoBpgConfigBpgDbParam { return v.BpgDbParams }).(NdbCloneInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbCloneInfoBpgConfigOutput) Storages() NdbCloneInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfig) []NdbCloneInfoBpgConfigStorage { return v.Storages }).(NdbCloneInfoBpgConfigStorageArrayOutput)
}

func (o NdbCloneInfoBpgConfigOutput) VmProperties() NdbCloneInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfig) []NdbCloneInfoBpgConfigVmProperty { return v.VmProperties }).(NdbCloneInfoBpgConfigVmPropertyArrayOutput)
}

type NdbCloneInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfig)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigArrayOutput) ToNdbCloneInfoBpgConfigArrayOutput() NdbCloneInfoBpgConfigArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigArrayOutput) ToNdbCloneInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfig {
		return vs[0].([]NdbCloneInfoBpgConfig)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigOutput)
}

type NdbCloneInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbCloneInfoBpgConfigBpgDbParamInput is an input type that accepts NdbCloneInfoBpgConfigBpgDbParamArgs and NdbCloneInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigBpgDbParamInput` via:
//
//	NdbCloneInfoBpgConfigBpgDbParamArgs{...}
type NdbCloneInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigBpgDbParamOutput() NdbCloneInfoBpgConfigBpgDbParamOutput
	ToNdbCloneInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbCloneInfoBpgConfigBpgDbParamOutput
}

type NdbCloneInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbCloneInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigBpgDbParamArgs) ToNdbCloneInfoBpgConfigBpgDbParamOutput() NdbCloneInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbCloneInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigBpgDbParamArgs) ToNdbCloneInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigBpgDbParamOutput)
}

// NdbCloneInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbCloneInfoBpgConfigBpgDbParamArray and NdbCloneInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbCloneInfoBpgConfigBpgDbParamArray{ NdbCloneInfoBpgConfigBpgDbParamArgs{...} }
type NdbCloneInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigBpgDbParamArrayOutput() NdbCloneInfoBpgConfigBpgDbParamArrayOutput
	ToNdbCloneInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigBpgDbParamArrayOutput
}

type NdbCloneInfoBpgConfigBpgDbParamArray []NdbCloneInfoBpgConfigBpgDbParamInput

func (NdbCloneInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigBpgDbParamArray) ToNdbCloneInfoBpgConfigBpgDbParamArrayOutput() NdbCloneInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbCloneInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigBpgDbParamArray) ToNdbCloneInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbCloneInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) ToNdbCloneInfoBpgConfigBpgDbParamOutput() NdbCloneInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) ToNdbCloneInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbCloneInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbCloneInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigBpgDbParamArrayOutput) ToNdbCloneInfoBpgConfigBpgDbParamArrayOutput() NdbCloneInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigBpgDbParamArrayOutput) ToNdbCloneInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbCloneInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigBpgDbParamOutput)
}

type NdbCloneInfoBpgConfigStorage struct {
	ArchiveStorages []NdbCloneInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbCloneInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbCloneInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbCloneInfoBpgConfigStorageInput is an input type that accepts NdbCloneInfoBpgConfigStorageArgs and NdbCloneInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageInput` via:
//
//	NdbCloneInfoBpgConfigStorageArgs{...}
type NdbCloneInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageOutput() NdbCloneInfoBpgConfigStorageOutput
	ToNdbCloneInfoBpgConfigStorageOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageOutput
}

type NdbCloneInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbCloneInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbCloneInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbCloneInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbCloneInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageArgs) ToNdbCloneInfoBpgConfigStorageOutput() NdbCloneInfoBpgConfigStorageOutput {
	return i.ToNdbCloneInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageArgs) ToNdbCloneInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageOutput)
}

// NdbCloneInfoBpgConfigStorageArrayInput is an input type that accepts NdbCloneInfoBpgConfigStorageArray and NdbCloneInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageArrayInput` via:
//
//	NdbCloneInfoBpgConfigStorageArray{ NdbCloneInfoBpgConfigStorageArgs{...} }
type NdbCloneInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageArrayOutput() NdbCloneInfoBpgConfigStorageArrayOutput
	ToNdbCloneInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageArrayOutput
}

type NdbCloneInfoBpgConfigStorageArray []NdbCloneInfoBpgConfigStorageInput

func (NdbCloneInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageArray) ToNdbCloneInfoBpgConfigStorageArrayOutput() NdbCloneInfoBpgConfigStorageArrayOutput {
	return i.ToNdbCloneInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageArray) ToNdbCloneInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageArrayOutput)
}

type NdbCloneInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageOutput) ToNdbCloneInfoBpgConfigStorageOutput() NdbCloneInfoBpgConfigStorageOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageOutput) ToNdbCloneInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageOutput) ArchiveStorages() NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorage) []NdbCloneInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbCloneInfoBpgConfigStorageOutput) DataDisks() NdbCloneInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorage) []NdbCloneInfoBpgConfigStorageDataDisk { return v.DataDisks }).(NdbCloneInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbCloneInfoBpgConfigStorageOutput) LogDisks() NdbCloneInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorage) []NdbCloneInfoBpgConfigStorageLogDisk { return v.LogDisks }).(NdbCloneInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbCloneInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageArrayOutput) ToNdbCloneInfoBpgConfigStorageArrayOutput() NdbCloneInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArrayOutput) ToNdbCloneInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigStorage {
		return vs[0].([]NdbCloneInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigStorageOutput)
}

type NdbCloneInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbCloneInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbCloneInfoBpgConfigStorageArchiveStorageArgs and NdbCloneInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbCloneInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbCloneInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageArchiveStorageOutput() NdbCloneInfoBpgConfigStorageArchiveStorageOutput
	ToNdbCloneInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageOutput
}

type NdbCloneInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbCloneInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageArchiveStorageArgs) ToNdbCloneInfoBpgConfigStorageArchiveStorageOutput() NdbCloneInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbCloneInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageArchiveStorageArgs) ToNdbCloneInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbCloneInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbCloneInfoBpgConfigStorageArchiveStorageArray and NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbCloneInfoBpgConfigStorageArchiveStorageArray{ NdbCloneInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbCloneInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput() NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbCloneInfoBpgConfigStorageArchiveStorageArray []NdbCloneInfoBpgConfigStorageArchiveStorageInput

func (NdbCloneInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageArchiveStorageArray) ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput() NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageArchiveStorageArray) ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbCloneInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageOutput) ToNdbCloneInfoBpgConfigStorageArchiveStorageOutput() NdbCloneInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageOutput) ToNdbCloneInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput() NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbCloneInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbCloneInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbCloneInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbCloneInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbCloneInfoBpgConfigStorageDataDiskArgs and NdbCloneInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbCloneInfoBpgConfigStorageDataDiskArgs{...}
type NdbCloneInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageDataDiskOutput() NdbCloneInfoBpgConfigStorageDataDiskOutput
	ToNdbCloneInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageDataDiskOutput
}

type NdbCloneInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbCloneInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageDataDiskArgs) ToNdbCloneInfoBpgConfigStorageDataDiskOutput() NdbCloneInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbCloneInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageDataDiskArgs) ToNdbCloneInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageDataDiskOutput)
}

// NdbCloneInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbCloneInfoBpgConfigStorageDataDiskArray and NdbCloneInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbCloneInfoBpgConfigStorageDataDiskArray{ NdbCloneInfoBpgConfigStorageDataDiskArgs{...} }
type NdbCloneInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutput() NdbCloneInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbCloneInfoBpgConfigStorageDataDiskArray []NdbCloneInfoBpgConfigStorageDataDiskInput

func (NdbCloneInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageDataDiskArray) ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutput() NdbCloneInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageDataDiskArray) ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbCloneInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageDataDiskOutput) ToNdbCloneInfoBpgConfigStorageDataDiskOutput() NdbCloneInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageDataDiskOutput) ToNdbCloneInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbCloneInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageDataDiskArrayOutput) ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutput() NdbCloneInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageDataDiskArrayOutput) ToNdbCloneInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbCloneInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigStorageDataDiskOutput)
}

type NdbCloneInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbCloneInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbCloneInfoBpgConfigStorageLogDiskArgs and NdbCloneInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbCloneInfoBpgConfigStorageLogDiskArgs{...}
type NdbCloneInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageLogDiskOutput() NdbCloneInfoBpgConfigStorageLogDiskOutput
	ToNdbCloneInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageLogDiskOutput
}

type NdbCloneInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbCloneInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageLogDiskArgs) ToNdbCloneInfoBpgConfigStorageLogDiskOutput() NdbCloneInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbCloneInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageLogDiskArgs) ToNdbCloneInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageLogDiskOutput)
}

// NdbCloneInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbCloneInfoBpgConfigStorageLogDiskArray and NdbCloneInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbCloneInfoBpgConfigStorageLogDiskArray{ NdbCloneInfoBpgConfigStorageLogDiskArgs{...} }
type NdbCloneInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutput() NdbCloneInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbCloneInfoBpgConfigStorageLogDiskArray []NdbCloneInfoBpgConfigStorageLogDiskInput

func (NdbCloneInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigStorageLogDiskArray) ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutput() NdbCloneInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigStorageLogDiskArray) ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbCloneInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageLogDiskOutput) ToNdbCloneInfoBpgConfigStorageLogDiskOutput() NdbCloneInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageLogDiskOutput) ToNdbCloneInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbCloneInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigStorageLogDiskArrayOutput) ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutput() NdbCloneInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageLogDiskArrayOutput) ToNdbCloneInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbCloneInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigStorageLogDiskOutput)
}

type NdbCloneInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbCloneInfoBpgConfigVmPropertyInput is an input type that accepts NdbCloneInfoBpgConfigVmPropertyArgs and NdbCloneInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigVmPropertyInput` via:
//
//	NdbCloneInfoBpgConfigVmPropertyArgs{...}
type NdbCloneInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigVmPropertyOutput() NdbCloneInfoBpgConfigVmPropertyOutput
	ToNdbCloneInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbCloneInfoBpgConfigVmPropertyOutput
}

type NdbCloneInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbCloneInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigVmPropertyArgs) ToNdbCloneInfoBpgConfigVmPropertyOutput() NdbCloneInfoBpgConfigVmPropertyOutput {
	return i.ToNdbCloneInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigVmPropertyArgs) ToNdbCloneInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigVmPropertyOutput)
}

// NdbCloneInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbCloneInfoBpgConfigVmPropertyArray and NdbCloneInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbCloneInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbCloneInfoBpgConfigVmPropertyArray{ NdbCloneInfoBpgConfigVmPropertyArgs{...} }
type NdbCloneInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbCloneInfoBpgConfigVmPropertyArrayOutput() NdbCloneInfoBpgConfigVmPropertyArrayOutput
	ToNdbCloneInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbCloneInfoBpgConfigVmPropertyArrayOutput
}

type NdbCloneInfoBpgConfigVmPropertyArray []NdbCloneInfoBpgConfigVmPropertyInput

func (NdbCloneInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbCloneInfoBpgConfigVmPropertyArray) ToNdbCloneInfoBpgConfigVmPropertyArrayOutput() NdbCloneInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbCloneInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbCloneInfoBpgConfigVmPropertyArray) ToNdbCloneInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneInfoBpgConfigVmPropertyArrayOutput)
}

type NdbCloneInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) ToNdbCloneInfoBpgConfigVmPropertyOutput() NdbCloneInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) ToNdbCloneInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbCloneInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbCloneInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbCloneInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbCloneInfoBpgConfigVmPropertyArrayOutput) ToNdbCloneInfoBpgConfigVmPropertyArrayOutput() NdbCloneInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigVmPropertyArrayOutput) ToNdbCloneInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbCloneInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbCloneInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbCloneInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneInfoBpgConfigVmProperty {
		return vs[0].([]NdbCloneInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbCloneInfoBpgConfigVmPropertyOutput)
}

type NdbCloneLcmConfig struct {
	DatabaseLcmConfigs []NdbCloneLcmConfigDatabaseLcmConfig `pulumi:"databaseLcmConfigs"`
}

// NdbCloneLcmConfigInput is an input type that accepts NdbCloneLcmConfigArgs and NdbCloneLcmConfigOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigInput` via:
//
//	NdbCloneLcmConfigArgs{...}
type NdbCloneLcmConfigInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigOutput() NdbCloneLcmConfigOutput
	ToNdbCloneLcmConfigOutputWithContext(context.Context) NdbCloneLcmConfigOutput
}

type NdbCloneLcmConfigArgs struct {
	DatabaseLcmConfigs NdbCloneLcmConfigDatabaseLcmConfigArrayInput `pulumi:"databaseLcmConfigs"`
}

func (NdbCloneLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfig)(nil)).Elem()
}

func (i NdbCloneLcmConfigArgs) ToNdbCloneLcmConfigOutput() NdbCloneLcmConfigOutput {
	return i.ToNdbCloneLcmConfigOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigArgs) ToNdbCloneLcmConfigOutputWithContext(ctx context.Context) NdbCloneLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigOutput)
}

// NdbCloneLcmConfigArrayInput is an input type that accepts NdbCloneLcmConfigArray and NdbCloneLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigArrayInput` via:
//
//	NdbCloneLcmConfigArray{ NdbCloneLcmConfigArgs{...} }
type NdbCloneLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigArrayOutput() NdbCloneLcmConfigArrayOutput
	ToNdbCloneLcmConfigArrayOutputWithContext(context.Context) NdbCloneLcmConfigArrayOutput
}

type NdbCloneLcmConfigArray []NdbCloneLcmConfigInput

func (NdbCloneLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfig)(nil)).Elem()
}

func (i NdbCloneLcmConfigArray) ToNdbCloneLcmConfigArrayOutput() NdbCloneLcmConfigArrayOutput {
	return i.ToNdbCloneLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigArray) ToNdbCloneLcmConfigArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigArrayOutput)
}

type NdbCloneLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfig)(nil)).Elem()
}

func (o NdbCloneLcmConfigOutput) ToNdbCloneLcmConfigOutput() NdbCloneLcmConfigOutput {
	return o
}

func (o NdbCloneLcmConfigOutput) ToNdbCloneLcmConfigOutputWithContext(ctx context.Context) NdbCloneLcmConfigOutput {
	return o
}

func (o NdbCloneLcmConfigOutput) DatabaseLcmConfigs() NdbCloneLcmConfigDatabaseLcmConfigArrayOutput {
	return o.ApplyT(func(v NdbCloneLcmConfig) []NdbCloneLcmConfigDatabaseLcmConfig { return v.DatabaseLcmConfigs }).(NdbCloneLcmConfigDatabaseLcmConfigArrayOutput)
}

type NdbCloneLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfig)(nil)).Elem()
}

func (o NdbCloneLcmConfigArrayOutput) ToNdbCloneLcmConfigArrayOutput() NdbCloneLcmConfigArrayOutput {
	return o
}

func (o NdbCloneLcmConfigArrayOutput) ToNdbCloneLcmConfigArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigArrayOutput {
	return o
}

func (o NdbCloneLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbCloneLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLcmConfig {
		return vs[0].([]NdbCloneLcmConfig)[vs[1].(int)]
	}).(NdbCloneLcmConfigOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfig struct {
	ExpiryDetails  []NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail  `pulumi:"expiryDetails"`
	RefreshDetails []NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail `pulumi:"refreshDetails"`
}

// NdbCloneLcmConfigDatabaseLcmConfigInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigArgs and NdbCloneLcmConfigDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigArgs{...}
type NdbCloneLcmConfigDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigOutput() NdbCloneLcmConfigDatabaseLcmConfigOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigArgs struct {
	ExpiryDetails  NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayInput  `pulumi:"expiryDetails"`
	RefreshDetails NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayInput `pulumi:"refreshDetails"`
}

func (NdbCloneLcmConfigDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigArgs) ToNdbCloneLcmConfigDatabaseLcmConfigOutput() NdbCloneLcmConfigDatabaseLcmConfigOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigArgs) ToNdbCloneLcmConfigDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigOutput)
}

// NdbCloneLcmConfigDatabaseLcmConfigArrayInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigArray and NdbCloneLcmConfigDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigArrayInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigArray{ NdbCloneLcmConfigDatabaseLcmConfigArgs{...} }
type NdbCloneLcmConfigDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigArrayOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigArrayOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigArray []NdbCloneLcmConfigDatabaseLcmConfigInput

func (NdbCloneLcmConfigDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigArray) ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigArrayOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigArray) ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigArrayOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigOutput) ToNdbCloneLcmConfigDatabaseLcmConfigOutput() NdbCloneLcmConfigDatabaseLcmConfigOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigOutput) ToNdbCloneLcmConfigDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigOutput) ExpiryDetails() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfig) []NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail {
		return v.ExpiryDetails
	}).(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbCloneLcmConfigDatabaseLcmConfigOutput) RefreshDetails() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfig) []NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail {
		return v.RefreshDetails
	}).(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbCloneLcmConfigDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLcmConfigDatabaseLcmConfig {
		return vs[0].([]NdbCloneLcmConfigDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbCloneLcmConfigDatabaseLcmConfigOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool  `pulumi:"deleteDatabase"`
	ExpireInDays       *int   `pulumi:"expireInDays"`
	ExpiryDateTimezone string `pulumi:"expiryDateTimezone"`
}

// NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs and NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs{...}
type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput `pulumi:"deleteDatabase"`
	ExpireInDays       pulumi.IntPtrInput  `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringInput  `pulumi:"expiryDateTimezone"`
}

func (NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput)
}

// NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray and NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray{ NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray []NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailInput

func (NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail) string { return v.ExpiryDateTimezone }).(pulumi.StringOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbCloneLcmConfigDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail struct {
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs and NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs{...}
type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs struct {
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput)
}

// NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray and NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray{ NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray []NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailInput

func (NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput() NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbCloneLcmConfigDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput)
}

type NdbCloneLinkedDatabase struct {
	// database name
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string `pulumi:"dateModified"`
	// database instance description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of clone
	Infos []NdbCloneLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// database instance name
	Name                   *string `pulumi:"name"`
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	// snapshot id from where clone is created
	SnapshotId *string `pulumi:"snapshotId"`
	// status of clone
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbCloneLinkedDatabaseInput is an input type that accepts NdbCloneLinkedDatabaseArgs and NdbCloneLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbCloneLinkedDatabaseInput` via:
//
//	NdbCloneLinkedDatabaseArgs{...}
type NdbCloneLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbCloneLinkedDatabaseOutput() NdbCloneLinkedDatabaseOutput
	ToNdbCloneLinkedDatabaseOutputWithContext(context.Context) NdbCloneLinkedDatabaseOutput
}

type NdbCloneLinkedDatabaseArgs struct {
	// database name
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of clone
	Infos NdbCloneLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// database instance name
	Name                   pulumi.StringPtrInput `pulumi:"name"`
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	// snapshot id from where clone is created
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of clone
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbCloneLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLinkedDatabase)(nil)).Elem()
}

func (i NdbCloneLinkedDatabaseArgs) ToNdbCloneLinkedDatabaseOutput() NdbCloneLinkedDatabaseOutput {
	return i.ToNdbCloneLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbCloneLinkedDatabaseArgs) ToNdbCloneLinkedDatabaseOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLinkedDatabaseOutput)
}

// NdbCloneLinkedDatabaseArrayInput is an input type that accepts NdbCloneLinkedDatabaseArray and NdbCloneLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbCloneLinkedDatabaseArrayInput` via:
//
//	NdbCloneLinkedDatabaseArray{ NdbCloneLinkedDatabaseArgs{...} }
type NdbCloneLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbCloneLinkedDatabaseArrayOutput() NdbCloneLinkedDatabaseArrayOutput
	ToNdbCloneLinkedDatabaseArrayOutputWithContext(context.Context) NdbCloneLinkedDatabaseArrayOutput
}

type NdbCloneLinkedDatabaseArray []NdbCloneLinkedDatabaseInput

func (NdbCloneLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLinkedDatabase)(nil)).Elem()
}

func (i NdbCloneLinkedDatabaseArray) ToNdbCloneLinkedDatabaseArrayOutput() NdbCloneLinkedDatabaseArrayOutput {
	return i.ToNdbCloneLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbCloneLinkedDatabaseArray) ToNdbCloneLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLinkedDatabaseArrayOutput)
}

type NdbCloneLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbCloneLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLinkedDatabase)(nil)).Elem()
}

func (o NdbCloneLinkedDatabaseOutput) ToNdbCloneLinkedDatabaseOutput() NdbCloneLinkedDatabaseOutput {
	return o
}

func (o NdbCloneLinkedDatabaseOutput) ToNdbCloneLinkedDatabaseOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseOutput {
	return o
}

// database name
func (o NdbCloneLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for clone
func (o NdbCloneLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of clone
func (o NdbCloneLinkedDatabaseOutput) Infos() NdbCloneLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) []NdbCloneLinkedDatabaseInfo { return v.Infos }).(NdbCloneLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbCloneLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// database instance name
func (o NdbCloneLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

// snapshot id from where clone is created
func (o NdbCloneLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of clone
func (o NdbCloneLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbCloneLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbCloneLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLinkedDatabase)(nil)).Elem()
}

func (o NdbCloneLinkedDatabaseArrayOutput) ToNdbCloneLinkedDatabaseArrayOutput() NdbCloneLinkedDatabaseArrayOutput {
	return o
}

func (o NdbCloneLinkedDatabaseArrayOutput) ToNdbCloneLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseArrayOutput {
	return o
}

func (o NdbCloneLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbCloneLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLinkedDatabase {
		return vs[0].([]NdbCloneLinkedDatabase)[vs[1].(int)]
	}).(NdbCloneLinkedDatabaseOutput)
}

type NdbCloneLinkedDatabaseInfo struct {
	// info of clone
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbCloneLinkedDatabaseInfoInput is an input type that accepts NdbCloneLinkedDatabaseInfoArgs and NdbCloneLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbCloneLinkedDatabaseInfoInput` via:
//
//	NdbCloneLinkedDatabaseInfoArgs{...}
type NdbCloneLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbCloneLinkedDatabaseInfoOutput() NdbCloneLinkedDatabaseInfoOutput
	ToNdbCloneLinkedDatabaseInfoOutputWithContext(context.Context) NdbCloneLinkedDatabaseInfoOutput
}

type NdbCloneLinkedDatabaseInfoArgs struct {
	// info of clone
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbCloneLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbCloneLinkedDatabaseInfoArgs) ToNdbCloneLinkedDatabaseInfoOutput() NdbCloneLinkedDatabaseInfoOutput {
	return i.ToNdbCloneLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbCloneLinkedDatabaseInfoArgs) ToNdbCloneLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLinkedDatabaseInfoOutput)
}

// NdbCloneLinkedDatabaseInfoArrayInput is an input type that accepts NdbCloneLinkedDatabaseInfoArray and NdbCloneLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbCloneLinkedDatabaseInfoArrayInput` via:
//
//	NdbCloneLinkedDatabaseInfoArray{ NdbCloneLinkedDatabaseInfoArgs{...} }
type NdbCloneLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbCloneLinkedDatabaseInfoArrayOutput() NdbCloneLinkedDatabaseInfoArrayOutput
	ToNdbCloneLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbCloneLinkedDatabaseInfoArrayOutput
}

type NdbCloneLinkedDatabaseInfoArray []NdbCloneLinkedDatabaseInfoInput

func (NdbCloneLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbCloneLinkedDatabaseInfoArray) ToNdbCloneLinkedDatabaseInfoArrayOutput() NdbCloneLinkedDatabaseInfoArrayOutput {
	return i.ToNdbCloneLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbCloneLinkedDatabaseInfoArray) ToNdbCloneLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneLinkedDatabaseInfoArrayOutput)
}

type NdbCloneLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbCloneLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbCloneLinkedDatabaseInfoOutput) ToNdbCloneLinkedDatabaseInfoOutput() NdbCloneLinkedDatabaseInfoOutput {
	return o
}

func (o NdbCloneLinkedDatabaseInfoOutput) ToNdbCloneLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseInfoOutput {
	return o
}

// info of clone
func (o NdbCloneLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbCloneLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbCloneLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbCloneLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbCloneLinkedDatabaseInfoArrayOutput) ToNdbCloneLinkedDatabaseInfoArrayOutput() NdbCloneLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbCloneLinkedDatabaseInfoArrayOutput) ToNdbCloneLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbCloneLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbCloneLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbCloneLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneLinkedDatabaseInfo {
		return vs[0].([]NdbCloneLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbCloneLinkedDatabaseInfoOutput)
}

type NdbCloneNode struct {
	// specify compute profile id
	ComputeProfileId *string `pulumi:"computeProfileId"`
	// dberver id
	DbserverId *string `pulumi:"dbserverId"`
	// specify network profile id
	NetworkProfileId *string `pulumi:"networkProfileId"`
	// dbserver time zone
	NewDbServerTimeZone *string `pulumi:"newDbServerTimeZone"`
	// cluster id
	NxClusterId *string `pulumi:"nxClusterId"`
	// properties of vm
	Properties []NdbCloneNodeProperty `pulumi:"properties"`
	// name for the database server VM.
	VmName *string `pulumi:"vmName"`
}

// NdbCloneNodeInput is an input type that accepts NdbCloneNodeArgs and NdbCloneNodeOutput values.
// You can construct a concrete instance of `NdbCloneNodeInput` via:
//
//	NdbCloneNodeArgs{...}
type NdbCloneNodeInput interface {
	pulumi.Input

	ToNdbCloneNodeOutput() NdbCloneNodeOutput
	ToNdbCloneNodeOutputWithContext(context.Context) NdbCloneNodeOutput
}

type NdbCloneNodeArgs struct {
	// specify compute profile id
	ComputeProfileId pulumi.StringPtrInput `pulumi:"computeProfileId"`
	// dberver id
	DbserverId pulumi.StringPtrInput `pulumi:"dbserverId"`
	// specify network profile id
	NetworkProfileId pulumi.StringPtrInput `pulumi:"networkProfileId"`
	// dbserver time zone
	NewDbServerTimeZone pulumi.StringPtrInput `pulumi:"newDbServerTimeZone"`
	// cluster id
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	// properties of vm
	Properties NdbCloneNodePropertyArrayInput `pulumi:"properties"`
	// name for the database server VM.
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (NdbCloneNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneNode)(nil)).Elem()
}

func (i NdbCloneNodeArgs) ToNdbCloneNodeOutput() NdbCloneNodeOutput {
	return i.ToNdbCloneNodeOutputWithContext(context.Background())
}

func (i NdbCloneNodeArgs) ToNdbCloneNodeOutputWithContext(ctx context.Context) NdbCloneNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneNodeOutput)
}

// NdbCloneNodeArrayInput is an input type that accepts NdbCloneNodeArray and NdbCloneNodeArrayOutput values.
// You can construct a concrete instance of `NdbCloneNodeArrayInput` via:
//
//	NdbCloneNodeArray{ NdbCloneNodeArgs{...} }
type NdbCloneNodeArrayInput interface {
	pulumi.Input

	ToNdbCloneNodeArrayOutput() NdbCloneNodeArrayOutput
	ToNdbCloneNodeArrayOutputWithContext(context.Context) NdbCloneNodeArrayOutput
}

type NdbCloneNodeArray []NdbCloneNodeInput

func (NdbCloneNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneNode)(nil)).Elem()
}

func (i NdbCloneNodeArray) ToNdbCloneNodeArrayOutput() NdbCloneNodeArrayOutput {
	return i.ToNdbCloneNodeArrayOutputWithContext(context.Background())
}

func (i NdbCloneNodeArray) ToNdbCloneNodeArrayOutputWithContext(ctx context.Context) NdbCloneNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneNodeArrayOutput)
}

type NdbCloneNodeOutput struct{ *pulumi.OutputState }

func (NdbCloneNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneNode)(nil)).Elem()
}

func (o NdbCloneNodeOutput) ToNdbCloneNodeOutput() NdbCloneNodeOutput {
	return o
}

func (o NdbCloneNodeOutput) ToNdbCloneNodeOutputWithContext(ctx context.Context) NdbCloneNodeOutput {
	return o
}

// specify compute profile id
func (o NdbCloneNodeOutput) ComputeProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.ComputeProfileId }).(pulumi.StringPtrOutput)
}

// dberver id
func (o NdbCloneNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// specify network profile id
func (o NdbCloneNodeOutput) NetworkProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.NetworkProfileId }).(pulumi.StringPtrOutput)
}

// dbserver time zone
func (o NdbCloneNodeOutput) NewDbServerTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.NewDbServerTimeZone }).(pulumi.StringPtrOutput)
}

// cluster id
func (o NdbCloneNodeOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

// properties of vm
func (o NdbCloneNodeOutput) Properties() NdbCloneNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbCloneNode) []NdbCloneNodeProperty { return v.Properties }).(NdbCloneNodePropertyArrayOutput)
}

// name for the database server VM.
func (o NdbCloneNodeOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNode) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

type NdbCloneNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneNode)(nil)).Elem()
}

func (o NdbCloneNodeArrayOutput) ToNdbCloneNodeArrayOutput() NdbCloneNodeArrayOutput {
	return o
}

func (o NdbCloneNodeArrayOutput) ToNdbCloneNodeArrayOutputWithContext(ctx context.Context) NdbCloneNodeArrayOutput {
	return o
}

func (o NdbCloneNodeArrayOutput) Index(i pulumi.IntInput) NdbCloneNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneNode {
		return vs[0].([]NdbCloneNode)[vs[1].(int)]
	}).(NdbCloneNodeOutput)
}

type NdbCloneNodeProperty struct {
	// database instance name
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbCloneNodePropertyInput is an input type that accepts NdbCloneNodePropertyArgs and NdbCloneNodePropertyOutput values.
// You can construct a concrete instance of `NdbCloneNodePropertyInput` via:
//
//	NdbCloneNodePropertyArgs{...}
type NdbCloneNodePropertyInput interface {
	pulumi.Input

	ToNdbCloneNodePropertyOutput() NdbCloneNodePropertyOutput
	ToNdbCloneNodePropertyOutputWithContext(context.Context) NdbCloneNodePropertyOutput
}

type NdbCloneNodePropertyArgs struct {
	// database instance name
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneNodeProperty)(nil)).Elem()
}

func (i NdbCloneNodePropertyArgs) ToNdbCloneNodePropertyOutput() NdbCloneNodePropertyOutput {
	return i.ToNdbCloneNodePropertyOutputWithContext(context.Background())
}

func (i NdbCloneNodePropertyArgs) ToNdbCloneNodePropertyOutputWithContext(ctx context.Context) NdbCloneNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneNodePropertyOutput)
}

// NdbCloneNodePropertyArrayInput is an input type that accepts NdbCloneNodePropertyArray and NdbCloneNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbCloneNodePropertyArrayInput` via:
//
//	NdbCloneNodePropertyArray{ NdbCloneNodePropertyArgs{...} }
type NdbCloneNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbCloneNodePropertyArrayOutput() NdbCloneNodePropertyArrayOutput
	ToNdbCloneNodePropertyArrayOutputWithContext(context.Context) NdbCloneNodePropertyArrayOutput
}

type NdbCloneNodePropertyArray []NdbCloneNodePropertyInput

func (NdbCloneNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneNodeProperty)(nil)).Elem()
}

func (i NdbCloneNodePropertyArray) ToNdbCloneNodePropertyArrayOutput() NdbCloneNodePropertyArrayOutput {
	return i.ToNdbCloneNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbCloneNodePropertyArray) ToNdbCloneNodePropertyArrayOutputWithContext(ctx context.Context) NdbCloneNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneNodePropertyArrayOutput)
}

type NdbCloneNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbCloneNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneNodeProperty)(nil)).Elem()
}

func (o NdbCloneNodePropertyOutput) ToNdbCloneNodePropertyOutput() NdbCloneNodePropertyOutput {
	return o
}

func (o NdbCloneNodePropertyOutput) ToNdbCloneNodePropertyOutputWithContext(ctx context.Context) NdbCloneNodePropertyOutput {
	return o
}

// database instance name
func (o NdbCloneNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneNodeProperty)(nil)).Elem()
}

func (o NdbCloneNodePropertyArrayOutput) ToNdbCloneNodePropertyArrayOutput() NdbCloneNodePropertyArrayOutput {
	return o
}

func (o NdbCloneNodePropertyArrayOutput) ToNdbCloneNodePropertyArrayOutputWithContext(ctx context.Context) NdbCloneNodePropertyArrayOutput {
	return o
}

func (o NdbCloneNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbCloneNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneNodeProperty {
		return vs[0].([]NdbCloneNodeProperty)[vs[1].(int)]
	}).(NdbCloneNodePropertyOutput)
}

type NdbClonePostgresqlInfo struct {
	// password of the postgres superuser.
	DbPassword string `pulumi:"dbPassword"`
	// description for the dbserver.
	DbserverDescription *string `pulumi:"dbserverDescription"`
	// OS command that you want to run after the instance is created.
	PostCloneCmd *string `pulumi:"postCloneCmd"`
	// OS command that you want to run before the instance is created.
	PreCloneCmd *string `pulumi:"preCloneCmd"`
	// name for the database server VM.
	VmName string `pulumi:"vmName"`
}

// NdbClonePostgresqlInfoInput is an input type that accepts NdbClonePostgresqlInfoArgs and NdbClonePostgresqlInfoOutput values.
// You can construct a concrete instance of `NdbClonePostgresqlInfoInput` via:
//
//	NdbClonePostgresqlInfoArgs{...}
type NdbClonePostgresqlInfoInput interface {
	pulumi.Input

	ToNdbClonePostgresqlInfoOutput() NdbClonePostgresqlInfoOutput
	ToNdbClonePostgresqlInfoOutputWithContext(context.Context) NdbClonePostgresqlInfoOutput
}

type NdbClonePostgresqlInfoArgs struct {
	// password of the postgres superuser.
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// description for the dbserver.
	DbserverDescription pulumi.StringPtrInput `pulumi:"dbserverDescription"`
	// OS command that you want to run after the instance is created.
	PostCloneCmd pulumi.StringPtrInput `pulumi:"postCloneCmd"`
	// OS command that you want to run before the instance is created.
	PreCloneCmd pulumi.StringPtrInput `pulumi:"preCloneCmd"`
	// name for the database server VM.
	VmName pulumi.StringInput `pulumi:"vmName"`
}

func (NdbClonePostgresqlInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClonePostgresqlInfo)(nil)).Elem()
}

func (i NdbClonePostgresqlInfoArgs) ToNdbClonePostgresqlInfoOutput() NdbClonePostgresqlInfoOutput {
	return i.ToNdbClonePostgresqlInfoOutputWithContext(context.Background())
}

func (i NdbClonePostgresqlInfoArgs) ToNdbClonePostgresqlInfoOutputWithContext(ctx context.Context) NdbClonePostgresqlInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClonePostgresqlInfoOutput)
}

// NdbClonePostgresqlInfoArrayInput is an input type that accepts NdbClonePostgresqlInfoArray and NdbClonePostgresqlInfoArrayOutput values.
// You can construct a concrete instance of `NdbClonePostgresqlInfoArrayInput` via:
//
//	NdbClonePostgresqlInfoArray{ NdbClonePostgresqlInfoArgs{...} }
type NdbClonePostgresqlInfoArrayInput interface {
	pulumi.Input

	ToNdbClonePostgresqlInfoArrayOutput() NdbClonePostgresqlInfoArrayOutput
	ToNdbClonePostgresqlInfoArrayOutputWithContext(context.Context) NdbClonePostgresqlInfoArrayOutput
}

type NdbClonePostgresqlInfoArray []NdbClonePostgresqlInfoInput

func (NdbClonePostgresqlInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClonePostgresqlInfo)(nil)).Elem()
}

func (i NdbClonePostgresqlInfoArray) ToNdbClonePostgresqlInfoArrayOutput() NdbClonePostgresqlInfoArrayOutput {
	return i.ToNdbClonePostgresqlInfoArrayOutputWithContext(context.Background())
}

func (i NdbClonePostgresqlInfoArray) ToNdbClonePostgresqlInfoArrayOutputWithContext(ctx context.Context) NdbClonePostgresqlInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClonePostgresqlInfoArrayOutput)
}

type NdbClonePostgresqlInfoOutput struct{ *pulumi.OutputState }

func (NdbClonePostgresqlInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClonePostgresqlInfo)(nil)).Elem()
}

func (o NdbClonePostgresqlInfoOutput) ToNdbClonePostgresqlInfoOutput() NdbClonePostgresqlInfoOutput {
	return o
}

func (o NdbClonePostgresqlInfoOutput) ToNdbClonePostgresqlInfoOutputWithContext(ctx context.Context) NdbClonePostgresqlInfoOutput {
	return o
}

// password of the postgres superuser.
func (o NdbClonePostgresqlInfoOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v NdbClonePostgresqlInfo) string { return v.DbPassword }).(pulumi.StringOutput)
}

// description for the dbserver.
func (o NdbClonePostgresqlInfoOutput) DbserverDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClonePostgresqlInfo) *string { return v.DbserverDescription }).(pulumi.StringPtrOutput)
}

// OS command that you want to run after the instance is created.
func (o NdbClonePostgresqlInfoOutput) PostCloneCmd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClonePostgresqlInfo) *string { return v.PostCloneCmd }).(pulumi.StringPtrOutput)
}

// OS command that you want to run before the instance is created.
func (o NdbClonePostgresqlInfoOutput) PreCloneCmd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClonePostgresqlInfo) *string { return v.PreCloneCmd }).(pulumi.StringPtrOutput)
}

// name for the database server VM.
func (o NdbClonePostgresqlInfoOutput) VmName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbClonePostgresqlInfo) string { return v.VmName }).(pulumi.StringOutput)
}

type NdbClonePostgresqlInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbClonePostgresqlInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClonePostgresqlInfo)(nil)).Elem()
}

func (o NdbClonePostgresqlInfoArrayOutput) ToNdbClonePostgresqlInfoArrayOutput() NdbClonePostgresqlInfoArrayOutput {
	return o
}

func (o NdbClonePostgresqlInfoArrayOutput) ToNdbClonePostgresqlInfoArrayOutputWithContext(ctx context.Context) NdbClonePostgresqlInfoArrayOutput {
	return o
}

func (o NdbClonePostgresqlInfoArrayOutput) Index(i pulumi.IntInput) NdbClonePostgresqlInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClonePostgresqlInfo {
		return vs[0].([]NdbClonePostgresqlInfo)[vs[1].(int)]
	}).(NdbClonePostgresqlInfoOutput)
}

type NdbCloneProperty struct {
	// database instance name
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbClonePropertyInput is an input type that accepts NdbClonePropertyArgs and NdbClonePropertyOutput values.
// You can construct a concrete instance of `NdbClonePropertyInput` via:
//
//	NdbClonePropertyArgs{...}
type NdbClonePropertyInput interface {
	pulumi.Input

	ToNdbClonePropertyOutput() NdbClonePropertyOutput
	ToNdbClonePropertyOutputWithContext(context.Context) NdbClonePropertyOutput
}

type NdbClonePropertyArgs struct {
	// database instance name
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbClonePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneProperty)(nil)).Elem()
}

func (i NdbClonePropertyArgs) ToNdbClonePropertyOutput() NdbClonePropertyOutput {
	return i.ToNdbClonePropertyOutputWithContext(context.Background())
}

func (i NdbClonePropertyArgs) ToNdbClonePropertyOutputWithContext(ctx context.Context) NdbClonePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClonePropertyOutput)
}

// NdbClonePropertyArrayInput is an input type that accepts NdbClonePropertyArray and NdbClonePropertyArrayOutput values.
// You can construct a concrete instance of `NdbClonePropertyArrayInput` via:
//
//	NdbClonePropertyArray{ NdbClonePropertyArgs{...} }
type NdbClonePropertyArrayInput interface {
	pulumi.Input

	ToNdbClonePropertyArrayOutput() NdbClonePropertyArrayOutput
	ToNdbClonePropertyArrayOutputWithContext(context.Context) NdbClonePropertyArrayOutput
}

type NdbClonePropertyArray []NdbClonePropertyInput

func (NdbClonePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneProperty)(nil)).Elem()
}

func (i NdbClonePropertyArray) ToNdbClonePropertyArrayOutput() NdbClonePropertyArrayOutput {
	return i.ToNdbClonePropertyArrayOutputWithContext(context.Background())
}

func (i NdbClonePropertyArray) ToNdbClonePropertyArrayOutputWithContext(ctx context.Context) NdbClonePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClonePropertyArrayOutput)
}

type NdbClonePropertyOutput struct{ *pulumi.OutputState }

func (NdbClonePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneProperty)(nil)).Elem()
}

func (o NdbClonePropertyOutput) ToNdbClonePropertyOutput() NdbClonePropertyOutput {
	return o
}

func (o NdbClonePropertyOutput) ToNdbClonePropertyOutputWithContext(ctx context.Context) NdbClonePropertyOutput {
	return o
}

// database instance name
func (o NdbClonePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbClonePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbClonePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbClonePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneProperty)(nil)).Elem()
}

func (o NdbClonePropertyArrayOutput) ToNdbClonePropertyArrayOutput() NdbClonePropertyArrayOutput {
	return o
}

func (o NdbClonePropertyArrayOutput) ToNdbClonePropertyArrayOutputWithContext(ctx context.Context) NdbClonePropertyArrayOutput {
	return o
}

func (o NdbClonePropertyArrayOutput) Index(i pulumi.IntInput) NdbClonePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneProperty {
		return vs[0].([]NdbCloneProperty)[vs[1].(int)]
	}).(NdbClonePropertyOutput)
}

type NdbCloneTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbCloneTagInput is an input type that accepts NdbCloneTagArgs and NdbCloneTagOutput values.
// You can construct a concrete instance of `NdbCloneTagInput` via:
//
//	NdbCloneTagArgs{...}
type NdbCloneTagInput interface {
	pulumi.Input

	ToNdbCloneTagOutput() NdbCloneTagOutput
	ToNdbCloneTagOutputWithContext(context.Context) NdbCloneTagOutput
}

type NdbCloneTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTag)(nil)).Elem()
}

func (i NdbCloneTagArgs) ToNdbCloneTagOutput() NdbCloneTagOutput {
	return i.ToNdbCloneTagOutputWithContext(context.Background())
}

func (i NdbCloneTagArgs) ToNdbCloneTagOutputWithContext(ctx context.Context) NdbCloneTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTagOutput)
}

// NdbCloneTagArrayInput is an input type that accepts NdbCloneTagArray and NdbCloneTagArrayOutput values.
// You can construct a concrete instance of `NdbCloneTagArrayInput` via:
//
//	NdbCloneTagArray{ NdbCloneTagArgs{...} }
type NdbCloneTagArrayInput interface {
	pulumi.Input

	ToNdbCloneTagArrayOutput() NdbCloneTagArrayOutput
	ToNdbCloneTagArrayOutputWithContext(context.Context) NdbCloneTagArrayOutput
}

type NdbCloneTagArray []NdbCloneTagInput

func (NdbCloneTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTag)(nil)).Elem()
}

func (i NdbCloneTagArray) ToNdbCloneTagArrayOutput() NdbCloneTagArrayOutput {
	return i.ToNdbCloneTagArrayOutputWithContext(context.Background())
}

func (i NdbCloneTagArray) ToNdbCloneTagArrayOutputWithContext(ctx context.Context) NdbCloneTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTagArrayOutput)
}

type NdbCloneTagOutput struct{ *pulumi.OutputState }

func (NdbCloneTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTag)(nil)).Elem()
}

func (o NdbCloneTagOutput) ToNdbCloneTagOutput() NdbCloneTagOutput {
	return o
}

func (o NdbCloneTagOutput) ToNdbCloneTagOutputWithContext(ctx context.Context) NdbCloneTagOutput {
	return o
}

func (o NdbCloneTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneTagArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTag)(nil)).Elem()
}

func (o NdbCloneTagArrayOutput) ToNdbCloneTagArrayOutput() NdbCloneTagArrayOutput {
	return o
}

func (o NdbCloneTagArrayOutput) ToNdbCloneTagArrayOutputWithContext(ctx context.Context) NdbCloneTagArrayOutput {
	return o
}

func (o NdbCloneTagArrayOutput) Index(i pulumi.IntInput) NdbCloneTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTag {
		return vs[0].([]NdbCloneTag)[vs[1].(int)]
	}).(NdbCloneTagOutput)
}

type NdbCloneTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// cloned or not
	Clone  *bool   `pulumi:"clone"`
	Clones *string `pulumi:"clones"`
	// clone will be clustered or not
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string `pulumi:"dateModified"`
	// database instance description
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// database instance name
	Name *string `pulumi:"name"`
	// List of all the properties
	Properties          []NdbCloneTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                       `pulumi:"scheduleId"`
	Schedules           []NdbCloneTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                       `pulumi:"scope"`
	SlaId               *string                       `pulumi:"slaId"`
	SlaUpdateInProgress *bool                         `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                       `pulumi:"slaUpdateMetadata"`
	Slas                []NdbCloneTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                      `pulumi:"sourceNxClusters"`
	// status of clone
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbCloneTimeMachineTag `pulumi:"tags"`
	// type of clone
	Type *string `pulumi:"type"`
}

// NdbCloneTimeMachineInput is an input type that accepts NdbCloneTimeMachineArgs and NdbCloneTimeMachineOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineInput` via:
//
//	NdbCloneTimeMachineArgs{...}
type NdbCloneTimeMachineInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineOutput() NdbCloneTimeMachineOutput
	ToNdbCloneTimeMachineOutputWithContext(context.Context) NdbCloneTimeMachineOutput
}

type NdbCloneTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// cloned or not
	Clone  pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones pulumi.StringPtrInput `pulumi:"clones"`
	// clone will be clustered or not
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// database instance name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all the properties
	Properties          NdbCloneTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                 `pulumi:"scheduleId"`
	Schedules           NdbCloneTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                 `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                 `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                   `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                 `pulumi:"slaUpdateMetadata"`
	Slas                NdbCloneTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput               `pulumi:"sourceNxClusters"`
	// status of clone
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbCloneTimeMachineTagArrayInput `pulumi:"tags"`
	// type of clone
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbCloneTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachine)(nil)).Elem()
}

func (i NdbCloneTimeMachineArgs) ToNdbCloneTimeMachineOutput() NdbCloneTimeMachineOutput {
	return i.ToNdbCloneTimeMachineOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineArgs) ToNdbCloneTimeMachineOutputWithContext(ctx context.Context) NdbCloneTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineOutput)
}

// NdbCloneTimeMachineArrayInput is an input type that accepts NdbCloneTimeMachineArray and NdbCloneTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineArrayInput` via:
//
//	NdbCloneTimeMachineArray{ NdbCloneTimeMachineArgs{...} }
type NdbCloneTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineArrayOutput() NdbCloneTimeMachineArrayOutput
	ToNdbCloneTimeMachineArrayOutputWithContext(context.Context) NdbCloneTimeMachineArrayOutput
}

type NdbCloneTimeMachineArray []NdbCloneTimeMachineInput

func (NdbCloneTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachine)(nil)).Elem()
}

func (i NdbCloneTimeMachineArray) ToNdbCloneTimeMachineArrayOutput() NdbCloneTimeMachineArrayOutput {
	return i.ToNdbCloneTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineArray) ToNdbCloneTimeMachineArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineArrayOutput)
}

type NdbCloneTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachine)(nil)).Elem()
}

func (o NdbCloneTimeMachineOutput) ToNdbCloneTimeMachineOutput() NdbCloneTimeMachineOutput {
	return o
}

func (o NdbCloneTimeMachineOutput) ToNdbCloneTimeMachineOutputWithContext(ctx context.Context) NdbCloneTimeMachineOutput {
	return o
}

func (o NdbCloneTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// cloned or not
func (o NdbCloneTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

// clone will be clustered or not
func (o NdbCloneTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for clone
func (o NdbCloneTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbCloneTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// database instance name
func (o NdbCloneTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all the properties
func (o NdbCloneTimeMachineOutput) Properties() NdbCloneTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) []NdbCloneTimeMachineProperty { return v.Properties }).(NdbCloneTimeMachinePropertyArrayOutput)
}

func (o NdbCloneTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) Schedules() NdbCloneTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) []NdbCloneTimeMachineSchedule { return v.Schedules }).(NdbCloneTimeMachineScheduleArrayOutput)
}

func (o NdbCloneTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineOutput) Slas() NdbCloneTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) []NdbCloneTimeMachineSla { return v.Slas }).(NdbCloneTimeMachineSlaArrayOutput)
}

func (o NdbCloneTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of clone
func (o NdbCloneTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbCloneTimeMachineOutput) Tags() NdbCloneTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) []NdbCloneTimeMachineTag { return v.Tags }).(NdbCloneTimeMachineTagArrayOutput)
}

// type of clone
func (o NdbCloneTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbCloneTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachine)(nil)).Elem()
}

func (o NdbCloneTimeMachineArrayOutput) ToNdbCloneTimeMachineArrayOutput() NdbCloneTimeMachineArrayOutput {
	return o
}

func (o NdbCloneTimeMachineArrayOutput) ToNdbCloneTimeMachineArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineArrayOutput {
	return o
}

func (o NdbCloneTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachine {
		return vs[0].([]NdbCloneTimeMachine)[vs[1].(int)]
	}).(NdbCloneTimeMachineOutput)
}

type NdbCloneTimeMachineProperty struct {
	// database instance description
	Description *string `pulumi:"description"`
	// database instance name
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbCloneTimeMachinePropertyInput is an input type that accepts NdbCloneTimeMachinePropertyArgs and NdbCloneTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachinePropertyInput` via:
//
//	NdbCloneTimeMachinePropertyArgs{...}
type NdbCloneTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbCloneTimeMachinePropertyOutput() NdbCloneTimeMachinePropertyOutput
	ToNdbCloneTimeMachinePropertyOutputWithContext(context.Context) NdbCloneTimeMachinePropertyOutput
}

type NdbCloneTimeMachinePropertyArgs struct {
	// database instance description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// database instance name
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineProperty)(nil)).Elem()
}

func (i NdbCloneTimeMachinePropertyArgs) ToNdbCloneTimeMachinePropertyOutput() NdbCloneTimeMachinePropertyOutput {
	return i.ToNdbCloneTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachinePropertyArgs) ToNdbCloneTimeMachinePropertyOutputWithContext(ctx context.Context) NdbCloneTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachinePropertyOutput)
}

// NdbCloneTimeMachinePropertyArrayInput is an input type that accepts NdbCloneTimeMachinePropertyArray and NdbCloneTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachinePropertyArrayInput` via:
//
//	NdbCloneTimeMachinePropertyArray{ NdbCloneTimeMachinePropertyArgs{...} }
type NdbCloneTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachinePropertyArrayOutput() NdbCloneTimeMachinePropertyArrayOutput
	ToNdbCloneTimeMachinePropertyArrayOutputWithContext(context.Context) NdbCloneTimeMachinePropertyArrayOutput
}

type NdbCloneTimeMachinePropertyArray []NdbCloneTimeMachinePropertyInput

func (NdbCloneTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineProperty)(nil)).Elem()
}

func (i NdbCloneTimeMachinePropertyArray) ToNdbCloneTimeMachinePropertyArrayOutput() NdbCloneTimeMachinePropertyArrayOutput {
	return i.ToNdbCloneTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachinePropertyArray) ToNdbCloneTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachinePropertyArrayOutput)
}

type NdbCloneTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineProperty)(nil)).Elem()
}

func (o NdbCloneTimeMachinePropertyOutput) ToNdbCloneTimeMachinePropertyOutput() NdbCloneTimeMachinePropertyOutput {
	return o
}

func (o NdbCloneTimeMachinePropertyOutput) ToNdbCloneTimeMachinePropertyOutputWithContext(ctx context.Context) NdbCloneTimeMachinePropertyOutput {
	return o
}

// database instance description
func (o NdbCloneTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// database instance name
func (o NdbCloneTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineProperty)(nil)).Elem()
}

func (o NdbCloneTimeMachinePropertyArrayOutput) ToNdbCloneTimeMachinePropertyArrayOutput() NdbCloneTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbCloneTimeMachinePropertyArrayOutput) ToNdbCloneTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbCloneTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineProperty {
		return vs[0].([]NdbCloneTimeMachineProperty)[vs[1].(int)]
	}).(NdbCloneTimeMachinePropertyOutput)
}

type NdbCloneTimeMachineSchedule struct {
	ContinuousSchedules []NdbCloneTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbCloneTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string `pulumi:"dateModified"`
	// database instance description
	Description      *string                                      `pulumi:"description"`
	GlobalPolicy     *bool                                        `pulumi:"globalPolicy"`
	Id               *string                                      `pulumi:"id"`
	MonthlySchedules []NdbCloneTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// database instance name
	Name               *string                                        `pulumi:"name"`
	OwnerId            *string                                        `pulumi:"ownerId"`
	QuartelySchedules  []NdbCloneTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                           `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbCloneTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                        `pulumi:"startTime"`
	SystemPolicy       *bool                                          `pulumi:"systemPolicy"`
	// timezone
	TimeZone        *string                                     `pulumi:"timeZone"`
	UniqueName      *string                                     `pulumi:"uniqueName"`
	WeeklySchedules []NdbCloneTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbCloneTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbCloneTimeMachineScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleArgs and NdbCloneTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleArgs{...}
type NdbCloneTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleOutput() NdbCloneTimeMachineScheduleOutput
	ToNdbCloneTimeMachineScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleOutput
}

type NdbCloneTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbCloneTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbCloneTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// database instance description
	Description      pulumi.StringPtrInput                                `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                  `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                `pulumi:"id"`
	MonthlySchedules NdbCloneTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// database instance name
	Name               pulumi.StringPtrInput                                  `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                  `pulumi:"ownerId"`
	QuartelySchedules  NdbCloneTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                     `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                  `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                    `pulumi:"systemPolicy"`
	// timezone
	TimeZone        pulumi.StringPtrInput                               `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                               `pulumi:"uniqueName"`
	WeeklySchedules NdbCloneTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbCloneTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbCloneTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineSchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleArgs) ToNdbCloneTimeMachineScheduleOutput() NdbCloneTimeMachineScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleArgs) ToNdbCloneTimeMachineScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleOutput)
}

// NdbCloneTimeMachineScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleArray and NdbCloneTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleArray{ NdbCloneTimeMachineScheduleArgs{...} }
type NdbCloneTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleArrayOutput() NdbCloneTimeMachineScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleArray []NdbCloneTimeMachineScheduleInput

func (NdbCloneTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineSchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleArray) ToNdbCloneTimeMachineScheduleArrayOutput() NdbCloneTimeMachineScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleArray) ToNdbCloneTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineSchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleOutput) ToNdbCloneTimeMachineScheduleOutput() NdbCloneTimeMachineScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleOutput) ToNdbCloneTimeMachineScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleOutput) ContinuousSchedules() NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) DailySchedules() NdbCloneTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbCloneTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for clone
func (o NdbCloneTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) MonthlySchedules() NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// database instance name
func (o NdbCloneTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) QuartelySchedules() NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone
func (o NdbCloneTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) WeeklySchedules() NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbCloneTimeMachineScheduleOutput) YearlySchedules() NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSchedule) []NdbCloneTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineSchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleArrayOutput) ToNdbCloneTimeMachineScheduleArrayOutput() NdbCloneTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleArrayOutput) ToNdbCloneTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineSchedule {
		return vs[0].([]NdbCloneTimeMachineSchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleOutput)
}

type NdbCloneTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbCloneTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleContinuousScheduleArgs and NdbCloneTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleContinuousScheduleArgs{...}
type NdbCloneTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleContinuousScheduleOutput() NdbCloneTimeMachineScheduleContinuousScheduleOutput
	ToNdbCloneTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleContinuousScheduleOutput
}

type NdbCloneTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbCloneTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleContinuousScheduleArgs) ToNdbCloneTimeMachineScheduleContinuousScheduleOutput() NdbCloneTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleContinuousScheduleArgs) ToNdbCloneTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleContinuousScheduleOutput)
}

// NdbCloneTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleContinuousScheduleArray and NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleContinuousScheduleArray{ NdbCloneTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbCloneTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutput() NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleContinuousScheduleArray []NdbCloneTimeMachineScheduleContinuousScheduleInput

func (NdbCloneTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleContinuousScheduleArray) ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutput() NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleContinuousScheduleArray) ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleOutput) ToNdbCloneTimeMachineScheduleContinuousScheduleOutput() NdbCloneTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleOutput) ToNdbCloneTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutput() NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbCloneTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleContinuousScheduleOutput)
}

type NdbCloneTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbCloneTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleDailyScheduleArgs and NdbCloneTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleDailyScheduleArgs{...}
type NdbCloneTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleDailyScheduleOutput() NdbCloneTimeMachineScheduleDailyScheduleOutput
	ToNdbCloneTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleDailyScheduleOutput
}

type NdbCloneTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbCloneTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleDailyScheduleArgs) ToNdbCloneTimeMachineScheduleDailyScheduleOutput() NdbCloneTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleDailyScheduleArgs) ToNdbCloneTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleDailyScheduleOutput)
}

// NdbCloneTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleDailyScheduleArray and NdbCloneTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleDailyScheduleArray{ NdbCloneTimeMachineScheduleDailyScheduleArgs{...} }
type NdbCloneTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutput() NdbCloneTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleDailyScheduleArray []NdbCloneTimeMachineScheduleDailyScheduleInput

func (NdbCloneTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleDailyScheduleArray) ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutput() NdbCloneTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleDailyScheduleArray) ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleDailyScheduleOutput) ToNdbCloneTimeMachineScheduleDailyScheduleOutput() NdbCloneTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleDailyScheduleOutput) ToNdbCloneTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbCloneTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleDailyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutput() NdbCloneTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleDailyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleDailyScheduleOutput)
}

type NdbCloneTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbCloneTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleMonthlyScheduleArgs and NdbCloneTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbCloneTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleMonthlyScheduleOutput() NdbCloneTimeMachineScheduleMonthlyScheduleOutput
	ToNdbCloneTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleOutput
}

type NdbCloneTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbCloneTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleMonthlyScheduleArgs) ToNdbCloneTimeMachineScheduleMonthlyScheduleOutput() NdbCloneTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleMonthlyScheduleArgs) ToNdbCloneTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbCloneTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleMonthlyScheduleArray and NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleMonthlyScheduleArray{ NdbCloneTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbCloneTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput() NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleMonthlyScheduleArray []NdbCloneTimeMachineScheduleMonthlyScheduleInput

func (NdbCloneTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleMonthlyScheduleArray) ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput() NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleMonthlyScheduleArray) ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleOutput) ToNdbCloneTimeMachineScheduleMonthlyScheduleOutput() NdbCloneTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleOutput) ToNdbCloneTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput() NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbCloneTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbCloneTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleQuartelyScheduleArgs and NdbCloneTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbCloneTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleQuartelyScheduleOutput() NdbCloneTimeMachineScheduleQuartelyScheduleOutput
	ToNdbCloneTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleOutput
}

type NdbCloneTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbCloneTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleQuartelyScheduleArgs) ToNdbCloneTimeMachineScheduleQuartelyScheduleOutput() NdbCloneTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleQuartelyScheduleArgs) ToNdbCloneTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbCloneTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleQuartelyScheduleArray and NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleQuartelyScheduleArray{ NdbCloneTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbCloneTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput() NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleQuartelyScheduleArray []NdbCloneTimeMachineScheduleQuartelyScheduleInput

func (NdbCloneTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleQuartelyScheduleArray) ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput() NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleQuartelyScheduleArray) ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) ToNdbCloneTimeMachineScheduleQuartelyScheduleOutput() NdbCloneTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) ToNdbCloneTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput() NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbCloneTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbCloneTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs and NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbCloneTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray and NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray{ NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray []NdbCloneTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbCloneTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbCloneTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbCloneTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleWeeklyScheduleArgs and NdbCloneTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbCloneTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleWeeklyScheduleOutput() NdbCloneTimeMachineScheduleWeeklyScheduleOutput
	ToNdbCloneTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleOutput
}

type NdbCloneTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbCloneTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleWeeklyScheduleArgs) ToNdbCloneTimeMachineScheduleWeeklyScheduleOutput() NdbCloneTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleWeeklyScheduleArgs) ToNdbCloneTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbCloneTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleWeeklyScheduleArray and NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleWeeklyScheduleArray{ NdbCloneTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbCloneTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput() NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleWeeklyScheduleArray []NdbCloneTimeMachineScheduleWeeklyScheduleInput

func (NdbCloneTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleWeeklyScheduleArray) ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput() NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleWeeklyScheduleArray) ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleOutput) ToNdbCloneTimeMachineScheduleWeeklyScheduleOutput() NdbCloneTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleOutput) ToNdbCloneTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput() NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbCloneTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbCloneTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbCloneTimeMachineScheduleYearlyScheduleArgs and NdbCloneTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbCloneTimeMachineScheduleYearlyScheduleArgs{...}
type NdbCloneTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleYearlyScheduleOutput() NdbCloneTimeMachineScheduleYearlyScheduleOutput
	ToNdbCloneTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbCloneTimeMachineScheduleYearlyScheduleOutput
}

type NdbCloneTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbCloneTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleYearlyScheduleArgs) ToNdbCloneTimeMachineScheduleYearlyScheduleOutput() NdbCloneTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbCloneTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleYearlyScheduleArgs) ToNdbCloneTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleYearlyScheduleOutput)
}

// NdbCloneTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbCloneTimeMachineScheduleYearlyScheduleArray and NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbCloneTimeMachineScheduleYearlyScheduleArray{ NdbCloneTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbCloneTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutput() NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbCloneTimeMachineScheduleYearlyScheduleArray []NdbCloneTimeMachineScheduleYearlyScheduleInput

func (NdbCloneTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbCloneTimeMachineScheduleYearlyScheduleArray) ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutput() NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineScheduleYearlyScheduleArray) ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbCloneTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) ToNdbCloneTimeMachineScheduleYearlyScheduleOutput() NdbCloneTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) ToNdbCloneTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutput() NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbCloneTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbCloneTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbCloneTimeMachineScheduleYearlyScheduleOutput)
}

type NdbCloneTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for clone
	DateCreated *string `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified *string `pulumi:"dateModified"`
	// database instance description
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// database instance name
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbCloneTimeMachineSlaInput is an input type that accepts NdbCloneTimeMachineSlaArgs and NdbCloneTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineSlaInput` via:
//
//	NdbCloneTimeMachineSlaArgs{...}
type NdbCloneTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineSlaOutput() NdbCloneTimeMachineSlaOutput
	ToNdbCloneTimeMachineSlaOutputWithContext(context.Context) NdbCloneTimeMachineSlaOutput
}

type NdbCloneTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for clone
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// last modified date for clone
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// database instance description
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// database instance name
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbCloneTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineSla)(nil)).Elem()
}

func (i NdbCloneTimeMachineSlaArgs) ToNdbCloneTimeMachineSlaOutput() NdbCloneTimeMachineSlaOutput {
	return i.ToNdbCloneTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineSlaArgs) ToNdbCloneTimeMachineSlaOutputWithContext(ctx context.Context) NdbCloneTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineSlaOutput)
}

// NdbCloneTimeMachineSlaArrayInput is an input type that accepts NdbCloneTimeMachineSlaArray and NdbCloneTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineSlaArrayInput` via:
//
//	NdbCloneTimeMachineSlaArray{ NdbCloneTimeMachineSlaArgs{...} }
type NdbCloneTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineSlaArrayOutput() NdbCloneTimeMachineSlaArrayOutput
	ToNdbCloneTimeMachineSlaArrayOutputWithContext(context.Context) NdbCloneTimeMachineSlaArrayOutput
}

type NdbCloneTimeMachineSlaArray []NdbCloneTimeMachineSlaInput

func (NdbCloneTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineSla)(nil)).Elem()
}

func (i NdbCloneTimeMachineSlaArray) ToNdbCloneTimeMachineSlaArrayOutput() NdbCloneTimeMachineSlaArrayOutput {
	return i.ToNdbCloneTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineSlaArray) ToNdbCloneTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineSlaArrayOutput)
}

type NdbCloneTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineSla)(nil)).Elem()
}

func (o NdbCloneTimeMachineSlaOutput) ToNdbCloneTimeMachineSlaOutput() NdbCloneTimeMachineSlaOutput {
	return o
}

func (o NdbCloneTimeMachineSlaOutput) ToNdbCloneTimeMachineSlaOutputWithContext(ctx context.Context) NdbCloneTimeMachineSlaOutput {
	return o
}

func (o NdbCloneTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for clone
func (o NdbCloneTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// last modified date for clone
func (o NdbCloneTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// database instance description
func (o NdbCloneTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// database instance name
func (o NdbCloneTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbCloneTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbCloneTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineSla)(nil)).Elem()
}

func (o NdbCloneTimeMachineSlaArrayOutput) ToNdbCloneTimeMachineSlaArrayOutput() NdbCloneTimeMachineSlaArrayOutput {
	return o
}

func (o NdbCloneTimeMachineSlaArrayOutput) ToNdbCloneTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineSlaArrayOutput {
	return o
}

func (o NdbCloneTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineSla {
		return vs[0].([]NdbCloneTimeMachineSla)[vs[1].(int)]
	}).(NdbCloneTimeMachineSlaOutput)
}

type NdbCloneTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbCloneTimeMachineTagInput is an input type that accepts NdbCloneTimeMachineTagArgs and NdbCloneTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineTagInput` via:
//
//	NdbCloneTimeMachineTagArgs{...}
type NdbCloneTimeMachineTagInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineTagOutput() NdbCloneTimeMachineTagOutput
	ToNdbCloneTimeMachineTagOutputWithContext(context.Context) NdbCloneTimeMachineTagOutput
}

type NdbCloneTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbCloneTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineTag)(nil)).Elem()
}

func (i NdbCloneTimeMachineTagArgs) ToNdbCloneTimeMachineTagOutput() NdbCloneTimeMachineTagOutput {
	return i.ToNdbCloneTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineTagArgs) ToNdbCloneTimeMachineTagOutputWithContext(ctx context.Context) NdbCloneTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineTagOutput)
}

// NdbCloneTimeMachineTagArrayInput is an input type that accepts NdbCloneTimeMachineTagArray and NdbCloneTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbCloneTimeMachineTagArrayInput` via:
//
//	NdbCloneTimeMachineTagArray{ NdbCloneTimeMachineTagArgs{...} }
type NdbCloneTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbCloneTimeMachineTagArrayOutput() NdbCloneTimeMachineTagArrayOutput
	ToNdbCloneTimeMachineTagArrayOutputWithContext(context.Context) NdbCloneTimeMachineTagArrayOutput
}

type NdbCloneTimeMachineTagArray []NdbCloneTimeMachineTagInput

func (NdbCloneTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineTag)(nil)).Elem()
}

func (i NdbCloneTimeMachineTagArray) ToNdbCloneTimeMachineTagArrayOutput() NdbCloneTimeMachineTagArrayOutput {
	return i.ToNdbCloneTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbCloneTimeMachineTagArray) ToNdbCloneTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbCloneTimeMachineTagArrayOutput)
}

type NdbCloneTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbCloneTimeMachineTag)(nil)).Elem()
}

func (o NdbCloneTimeMachineTagOutput) ToNdbCloneTimeMachineTagOutput() NdbCloneTimeMachineTagOutput {
	return o
}

func (o NdbCloneTimeMachineTagOutput) ToNdbCloneTimeMachineTagOutputWithContext(ctx context.Context) NdbCloneTimeMachineTagOutput {
	return o
}

func (o NdbCloneTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbCloneTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbCloneTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbCloneTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbCloneTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbCloneTimeMachineTag)(nil)).Elem()
}

func (o NdbCloneTimeMachineTagArrayOutput) ToNdbCloneTimeMachineTagArrayOutput() NdbCloneTimeMachineTagArrayOutput {
	return o
}

func (o NdbCloneTimeMachineTagArrayOutput) ToNdbCloneTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbCloneTimeMachineTagArrayOutput {
	return o
}

func (o NdbCloneTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbCloneTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbCloneTimeMachineTag {
		return vs[0].([]NdbCloneTimeMachineTag)[vs[1].(int)]
	}).(NdbCloneTimeMachineTagOutput)
}

type NdbClusterAgentNetworkInfo struct {
	// string of DNS servers(comma separted).
	Dns *string `pulumi:"dns"`
	// string of NTP servers(comma separted).
	Ntp *string `pulumi:"ntp"`
}

// NdbClusterAgentNetworkInfoInput is an input type that accepts NdbClusterAgentNetworkInfoArgs and NdbClusterAgentNetworkInfoOutput values.
// You can construct a concrete instance of `NdbClusterAgentNetworkInfoInput` via:
//
//	NdbClusterAgentNetworkInfoArgs{...}
type NdbClusterAgentNetworkInfoInput interface {
	pulumi.Input

	ToNdbClusterAgentNetworkInfoOutput() NdbClusterAgentNetworkInfoOutput
	ToNdbClusterAgentNetworkInfoOutputWithContext(context.Context) NdbClusterAgentNetworkInfoOutput
}

type NdbClusterAgentNetworkInfoArgs struct {
	// string of DNS servers(comma separted).
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// string of NTP servers(comma separted).
	Ntp pulumi.StringPtrInput `pulumi:"ntp"`
}

func (NdbClusterAgentNetworkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterAgentNetworkInfo)(nil)).Elem()
}

func (i NdbClusterAgentNetworkInfoArgs) ToNdbClusterAgentNetworkInfoOutput() NdbClusterAgentNetworkInfoOutput {
	return i.ToNdbClusterAgentNetworkInfoOutputWithContext(context.Background())
}

func (i NdbClusterAgentNetworkInfoArgs) ToNdbClusterAgentNetworkInfoOutputWithContext(ctx context.Context) NdbClusterAgentNetworkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterAgentNetworkInfoOutput)
}

// NdbClusterAgentNetworkInfoArrayInput is an input type that accepts NdbClusterAgentNetworkInfoArray and NdbClusterAgentNetworkInfoArrayOutput values.
// You can construct a concrete instance of `NdbClusterAgentNetworkInfoArrayInput` via:
//
//	NdbClusterAgentNetworkInfoArray{ NdbClusterAgentNetworkInfoArgs{...} }
type NdbClusterAgentNetworkInfoArrayInput interface {
	pulumi.Input

	ToNdbClusterAgentNetworkInfoArrayOutput() NdbClusterAgentNetworkInfoArrayOutput
	ToNdbClusterAgentNetworkInfoArrayOutputWithContext(context.Context) NdbClusterAgentNetworkInfoArrayOutput
}

type NdbClusterAgentNetworkInfoArray []NdbClusterAgentNetworkInfoInput

func (NdbClusterAgentNetworkInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterAgentNetworkInfo)(nil)).Elem()
}

func (i NdbClusterAgentNetworkInfoArray) ToNdbClusterAgentNetworkInfoArrayOutput() NdbClusterAgentNetworkInfoArrayOutput {
	return i.ToNdbClusterAgentNetworkInfoArrayOutputWithContext(context.Background())
}

func (i NdbClusterAgentNetworkInfoArray) ToNdbClusterAgentNetworkInfoArrayOutputWithContext(ctx context.Context) NdbClusterAgentNetworkInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterAgentNetworkInfoArrayOutput)
}

type NdbClusterAgentNetworkInfoOutput struct{ *pulumi.OutputState }

func (NdbClusterAgentNetworkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterAgentNetworkInfo)(nil)).Elem()
}

func (o NdbClusterAgentNetworkInfoOutput) ToNdbClusterAgentNetworkInfoOutput() NdbClusterAgentNetworkInfoOutput {
	return o
}

func (o NdbClusterAgentNetworkInfoOutput) ToNdbClusterAgentNetworkInfoOutputWithContext(ctx context.Context) NdbClusterAgentNetworkInfoOutput {
	return o
}

// string of DNS servers(comma separted).
func (o NdbClusterAgentNetworkInfoOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterAgentNetworkInfo) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// string of NTP servers(comma separted).
func (o NdbClusterAgentNetworkInfoOutput) Ntp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterAgentNetworkInfo) *string { return v.Ntp }).(pulumi.StringPtrOutput)
}

type NdbClusterAgentNetworkInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterAgentNetworkInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterAgentNetworkInfo)(nil)).Elem()
}

func (o NdbClusterAgentNetworkInfoArrayOutput) ToNdbClusterAgentNetworkInfoArrayOutput() NdbClusterAgentNetworkInfoArrayOutput {
	return o
}

func (o NdbClusterAgentNetworkInfoArrayOutput) ToNdbClusterAgentNetworkInfoArrayOutputWithContext(ctx context.Context) NdbClusterAgentNetworkInfoArrayOutput {
	return o
}

func (o NdbClusterAgentNetworkInfoArrayOutput) Index(i pulumi.IntInput) NdbClusterAgentNetworkInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterAgentNetworkInfo {
		return vs[0].([]NdbClusterAgentNetworkInfo)[vs[1].(int)]
	}).(NdbClusterAgentNetworkInfoOutput)
}

type NdbClusterEntityCount struct {
	DbServers    *int                               `pulumi:"dbServers"`
	EngineCounts []NdbClusterEntityCountEngineCount `pulumi:"engineCounts"`
}

// NdbClusterEntityCountInput is an input type that accepts NdbClusterEntityCountArgs and NdbClusterEntityCountOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountInput` via:
//
//	NdbClusterEntityCountArgs{...}
type NdbClusterEntityCountInput interface {
	pulumi.Input

	ToNdbClusterEntityCountOutput() NdbClusterEntityCountOutput
	ToNdbClusterEntityCountOutputWithContext(context.Context) NdbClusterEntityCountOutput
}

type NdbClusterEntityCountArgs struct {
	DbServers    pulumi.IntPtrInput                         `pulumi:"dbServers"`
	EngineCounts NdbClusterEntityCountEngineCountArrayInput `pulumi:"engineCounts"`
}

func (NdbClusterEntityCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCount)(nil)).Elem()
}

func (i NdbClusterEntityCountArgs) ToNdbClusterEntityCountOutput() NdbClusterEntityCountOutput {
	return i.ToNdbClusterEntityCountOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountArgs) ToNdbClusterEntityCountOutputWithContext(ctx context.Context) NdbClusterEntityCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountOutput)
}

// NdbClusterEntityCountArrayInput is an input type that accepts NdbClusterEntityCountArray and NdbClusterEntityCountArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountArrayInput` via:
//
//	NdbClusterEntityCountArray{ NdbClusterEntityCountArgs{...} }
type NdbClusterEntityCountArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountArrayOutput() NdbClusterEntityCountArrayOutput
	ToNdbClusterEntityCountArrayOutputWithContext(context.Context) NdbClusterEntityCountArrayOutput
}

type NdbClusterEntityCountArray []NdbClusterEntityCountInput

func (NdbClusterEntityCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCount)(nil)).Elem()
}

func (i NdbClusterEntityCountArray) ToNdbClusterEntityCountArrayOutput() NdbClusterEntityCountArrayOutput {
	return i.ToNdbClusterEntityCountArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountArray) ToNdbClusterEntityCountArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountArrayOutput)
}

type NdbClusterEntityCountOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCount)(nil)).Elem()
}

func (o NdbClusterEntityCountOutput) ToNdbClusterEntityCountOutput() NdbClusterEntityCountOutput {
	return o
}

func (o NdbClusterEntityCountOutput) ToNdbClusterEntityCountOutputWithContext(ctx context.Context) NdbClusterEntityCountOutput {
	return o
}

func (o NdbClusterEntityCountOutput) DbServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCount) *int { return v.DbServers }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountOutput) EngineCounts() NdbClusterEntityCountEngineCountArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCount) []NdbClusterEntityCountEngineCount { return v.EngineCounts }).(NdbClusterEntityCountEngineCountArrayOutput)
}

type NdbClusterEntityCountArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCount)(nil)).Elem()
}

func (o NdbClusterEntityCountArrayOutput) ToNdbClusterEntityCountArrayOutput() NdbClusterEntityCountArrayOutput {
	return o
}

func (o NdbClusterEntityCountArrayOutput) ToNdbClusterEntityCountArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountArrayOutput {
	return o
}

func (o NdbClusterEntityCountArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCount {
		return vs[0].([]NdbClusterEntityCount)[vs[1].(int)]
	}).(NdbClusterEntityCountOutput)
}

type NdbClusterEntityCountEngineCount struct {
	MariadbDatabases   []NdbClusterEntityCountEngineCountMariadbDatabase   `pulumi:"mariadbDatabases"`
	MongodbDatabases   []NdbClusterEntityCountEngineCountMongodbDatabase   `pulumi:"mongodbDatabases"`
	MysqlDatabases     []NdbClusterEntityCountEngineCountMysqlDatabase     `pulumi:"mysqlDatabases"`
	OracleDatabases    []NdbClusterEntityCountEngineCountOracleDatabase    `pulumi:"oracleDatabases"`
	PostgresDatabases  []NdbClusterEntityCountEngineCountPostgresDatabase  `pulumi:"postgresDatabases"`
	SaphanaDatabases   []NdbClusterEntityCountEngineCountSaphanaDatabase   `pulumi:"saphanaDatabases"`
	SqlserverDatabases []NdbClusterEntityCountEngineCountSqlserverDatabase `pulumi:"sqlserverDatabases"`
}

// NdbClusterEntityCountEngineCountInput is an input type that accepts NdbClusterEntityCountEngineCountArgs and NdbClusterEntityCountEngineCountOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountInput` via:
//
//	NdbClusterEntityCountEngineCountArgs{...}
type NdbClusterEntityCountEngineCountInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountOutput() NdbClusterEntityCountEngineCountOutput
	ToNdbClusterEntityCountEngineCountOutputWithContext(context.Context) NdbClusterEntityCountEngineCountOutput
}

type NdbClusterEntityCountEngineCountArgs struct {
	MariadbDatabases   NdbClusterEntityCountEngineCountMariadbDatabaseArrayInput   `pulumi:"mariadbDatabases"`
	MongodbDatabases   NdbClusterEntityCountEngineCountMongodbDatabaseArrayInput   `pulumi:"mongodbDatabases"`
	MysqlDatabases     NdbClusterEntityCountEngineCountMysqlDatabaseArrayInput     `pulumi:"mysqlDatabases"`
	OracleDatabases    NdbClusterEntityCountEngineCountOracleDatabaseArrayInput    `pulumi:"oracleDatabases"`
	PostgresDatabases  NdbClusterEntityCountEngineCountPostgresDatabaseArrayInput  `pulumi:"postgresDatabases"`
	SaphanaDatabases   NdbClusterEntityCountEngineCountSaphanaDatabaseArrayInput   `pulumi:"saphanaDatabases"`
	SqlserverDatabases NdbClusterEntityCountEngineCountSqlserverDatabaseArrayInput `pulumi:"sqlserverDatabases"`
}

func (NdbClusterEntityCountEngineCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCount)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountArgs) ToNdbClusterEntityCountEngineCountOutput() NdbClusterEntityCountEngineCountOutput {
	return i.ToNdbClusterEntityCountEngineCountOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountArgs) ToNdbClusterEntityCountEngineCountOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountOutput)
}

// NdbClusterEntityCountEngineCountArrayInput is an input type that accepts NdbClusterEntityCountEngineCountArray and NdbClusterEntityCountEngineCountArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountArrayInput` via:
//
//	NdbClusterEntityCountEngineCountArray{ NdbClusterEntityCountEngineCountArgs{...} }
type NdbClusterEntityCountEngineCountArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountArrayOutput() NdbClusterEntityCountEngineCountArrayOutput
	ToNdbClusterEntityCountEngineCountArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountArrayOutput
}

type NdbClusterEntityCountEngineCountArray []NdbClusterEntityCountEngineCountInput

func (NdbClusterEntityCountEngineCountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCount)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountArray) ToNdbClusterEntityCountEngineCountArrayOutput() NdbClusterEntityCountEngineCountArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountArray) ToNdbClusterEntityCountEngineCountArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountArrayOutput)
}

type NdbClusterEntityCountEngineCountOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCount)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountOutput) ToNdbClusterEntityCountEngineCountOutput() NdbClusterEntityCountEngineCountOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOutput) ToNdbClusterEntityCountEngineCountOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOutput) MariadbDatabases() NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountMariadbDatabase {
		return v.MariadbDatabases
	}).(NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) MongodbDatabases() NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountMongodbDatabase {
		return v.MongodbDatabases
	}).(NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) MysqlDatabases() NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountMysqlDatabase {
		return v.MysqlDatabases
	}).(NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) OracleDatabases() NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountOracleDatabase {
		return v.OracleDatabases
	}).(NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) PostgresDatabases() NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountPostgresDatabase {
		return v.PostgresDatabases
	}).(NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) SaphanaDatabases() NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountSaphanaDatabase {
		return v.SaphanaDatabases
	}).(NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOutput) SqlserverDatabases() NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCount) []NdbClusterEntityCountEngineCountSqlserverDatabase {
		return v.SqlserverDatabases
	}).(NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCount)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountArrayOutput) ToNdbClusterEntityCountEngineCountArrayOutput() NdbClusterEntityCountEngineCountArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountArrayOutput) ToNdbClusterEntityCountEngineCountArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCount {
		return vs[0].([]NdbClusterEntityCountEngineCount)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountMariadbDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                     `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountMariadbDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountMariadbDatabaseArgs and NdbClusterEntityCountEngineCountMariadbDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMariadbDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountMariadbDatabaseArgs{...}
type NdbClusterEntityCountEngineCountMariadbDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMariadbDatabaseOutput() NdbClusterEntityCountEngineCountMariadbDatabaseOutput
	ToNdbClusterEntityCountEngineCountMariadbDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseOutput
}

type NdbClusterEntityCountEngineCountMariadbDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                               `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountMariadbDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseArgs) ToNdbClusterEntityCountEngineCountMariadbDatabaseOutput() NdbClusterEntityCountEngineCountMariadbDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountMariadbDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseArgs) ToNdbClusterEntityCountEngineCountMariadbDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMariadbDatabaseOutput)
}

// NdbClusterEntityCountEngineCountMariadbDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMariadbDatabaseArray and NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMariadbDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMariadbDatabaseArray{ NdbClusterEntityCountEngineCountMariadbDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountMariadbDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountMariadbDatabaseArray []NdbClusterEntityCountEngineCountMariadbDatabaseInput

func (NdbClusterEntityCountEngineCountMariadbDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMariadbDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseArray) ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseArray) ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMariadbDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseOutput() NdbClusterEntityCountEngineCountMariadbDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabase) []NdbClusterEntityCountEngineCountMariadbDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMariadbDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMariadbDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMariadbDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountMariadbDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMariadbDatabaseOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountMariadbDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs and NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMariadbDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountMariadbDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray and NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray{ NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray []NdbClusterEntityCountEngineCountMariadbDatabaseProfileInput

func (NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMariadbDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMariadbDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMariadbDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMariadbDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountMariadbDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountMongodbDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                     `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountMongodbDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountMongodbDatabaseArgs and NdbClusterEntityCountEngineCountMongodbDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMongodbDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountMongodbDatabaseArgs{...}
type NdbClusterEntityCountEngineCountMongodbDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMongodbDatabaseOutput() NdbClusterEntityCountEngineCountMongodbDatabaseOutput
	ToNdbClusterEntityCountEngineCountMongodbDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseOutput
}

type NdbClusterEntityCountEngineCountMongodbDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                               `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountMongodbDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseArgs) ToNdbClusterEntityCountEngineCountMongodbDatabaseOutput() NdbClusterEntityCountEngineCountMongodbDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountMongodbDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseArgs) ToNdbClusterEntityCountEngineCountMongodbDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMongodbDatabaseOutput)
}

// NdbClusterEntityCountEngineCountMongodbDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMongodbDatabaseArray and NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMongodbDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMongodbDatabaseArray{ NdbClusterEntityCountEngineCountMongodbDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountMongodbDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountMongodbDatabaseArray []NdbClusterEntityCountEngineCountMongodbDatabaseInput

func (NdbClusterEntityCountEngineCountMongodbDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMongodbDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseArray) ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseArray) ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMongodbDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseOutput() NdbClusterEntityCountEngineCountMongodbDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabase) []NdbClusterEntityCountEngineCountMongodbDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMongodbDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMongodbDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMongodbDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountMongodbDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMongodbDatabaseOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountMongodbDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs and NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMongodbDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountMongodbDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray and NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray{ NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray []NdbClusterEntityCountEngineCountMongodbDatabaseProfileInput

func (NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMongodbDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMongodbDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMongodbDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMongodbDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountMongodbDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountMysqlDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                   `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountMysqlDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountMysqlDatabaseArgs and NdbClusterEntityCountEngineCountMysqlDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMysqlDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountMysqlDatabaseArgs{...}
type NdbClusterEntityCountEngineCountMysqlDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMysqlDatabaseOutput() NdbClusterEntityCountEngineCountMysqlDatabaseOutput
	ToNdbClusterEntityCountEngineCountMysqlDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseOutput
}

type NdbClusterEntityCountEngineCountMysqlDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                             `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountMysqlDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseArgs) ToNdbClusterEntityCountEngineCountMysqlDatabaseOutput() NdbClusterEntityCountEngineCountMysqlDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountMysqlDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseArgs) ToNdbClusterEntityCountEngineCountMysqlDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMysqlDatabaseOutput)
}

// NdbClusterEntityCountEngineCountMysqlDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMysqlDatabaseArray and NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMysqlDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMysqlDatabaseArray{ NdbClusterEntityCountEngineCountMysqlDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountMysqlDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountMysqlDatabaseArray []NdbClusterEntityCountEngineCountMysqlDatabaseInput

func (NdbClusterEntityCountEngineCountMysqlDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMysqlDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseArray) ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseArray) ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMysqlDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseOutput() NdbClusterEntityCountEngineCountMysqlDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabase) []NdbClusterEntityCountEngineCountMysqlDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMysqlDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMysqlDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMysqlDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountMysqlDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMysqlDatabaseOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountMysqlDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs and NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMysqlDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountMysqlDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray and NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray{ NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray []NdbClusterEntityCountEngineCountMysqlDatabaseProfileInput

func (NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMysqlDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountMysqlDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountMysqlDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountMysqlDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountMysqlDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountOracleDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                    `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountOracleDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountOracleDatabaseArgs and NdbClusterEntityCountEngineCountOracleDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountOracleDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountOracleDatabaseArgs{...}
type NdbClusterEntityCountEngineCountOracleDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountOracleDatabaseOutput() NdbClusterEntityCountEngineCountOracleDatabaseOutput
	ToNdbClusterEntityCountEngineCountOracleDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountOracleDatabaseOutput
}

type NdbClusterEntityCountEngineCountOracleDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                              `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountOracleDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseArgs) ToNdbClusterEntityCountEngineCountOracleDatabaseOutput() NdbClusterEntityCountEngineCountOracleDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountOracleDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseArgs) ToNdbClusterEntityCountEngineCountOracleDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountOracleDatabaseOutput)
}

// NdbClusterEntityCountEngineCountOracleDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountOracleDatabaseArray and NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountOracleDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountOracleDatabaseArray{ NdbClusterEntityCountEngineCountOracleDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountOracleDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountOracleDatabaseArray []NdbClusterEntityCountEngineCountOracleDatabaseInput

func (NdbClusterEntityCountEngineCountOracleDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountOracleDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseArray) ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseArray) ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountOracleDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseOutput() NdbClusterEntityCountEngineCountOracleDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabase) []NdbClusterEntityCountEngineCountOracleDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountOracleDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountOracleDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountOracleDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountOracleDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountOracleDatabaseOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountOracleDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs and NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountOracleDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountOracleDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountOracleDatabaseProfileArray and NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountOracleDatabaseProfileArray{ NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountOracleDatabaseProfileArray []NdbClusterEntityCountEngineCountOracleDatabaseProfileInput

func (NdbClusterEntityCountEngineCountOracleDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountOracleDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseProfileArray) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountOracleDatabaseProfileArray) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountOracleDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountOracleDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountOracleDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountOracleDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountPostgresDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                      `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountPostgresDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountPostgresDatabaseArgs and NdbClusterEntityCountEngineCountPostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountPostgresDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountPostgresDatabaseArgs{...}
type NdbClusterEntityCountEngineCountPostgresDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountPostgresDatabaseOutput() NdbClusterEntityCountEngineCountPostgresDatabaseOutput
	ToNdbClusterEntityCountEngineCountPostgresDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseOutput
}

type NdbClusterEntityCountEngineCountPostgresDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                                `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountPostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseArgs) ToNdbClusterEntityCountEngineCountPostgresDatabaseOutput() NdbClusterEntityCountEngineCountPostgresDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountPostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseArgs) ToNdbClusterEntityCountEngineCountPostgresDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountPostgresDatabaseOutput)
}

// NdbClusterEntityCountEngineCountPostgresDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountPostgresDatabaseArray and NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountPostgresDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountPostgresDatabaseArray{ NdbClusterEntityCountEngineCountPostgresDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountPostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountPostgresDatabaseArray []NdbClusterEntityCountEngineCountPostgresDatabaseInput

func (NdbClusterEntityCountEngineCountPostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountPostgresDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseArray) ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseArray) ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountPostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseOutput() NdbClusterEntityCountEngineCountPostgresDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabase) []NdbClusterEntityCountEngineCountPostgresDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountPostgresDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountPostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountPostgresDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountPostgresDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountPostgresDatabaseOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountPostgresDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs and NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountPostgresDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountPostgresDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray and NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray{ NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray []NdbClusterEntityCountEngineCountPostgresDatabaseProfileInput

func (NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountPostgresDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountPostgresDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountPostgresDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountPostgresDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountPostgresDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountSaphanaDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                     `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountSaphanaDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountSaphanaDatabaseArgs and NdbClusterEntityCountEngineCountSaphanaDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSaphanaDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountSaphanaDatabaseArgs{...}
type NdbClusterEntityCountEngineCountSaphanaDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseOutput
	ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseOutput
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                               `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountSaphanaDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseArgs) ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseArgs) ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSaphanaDatabaseOutput)
}

// NdbClusterEntityCountEngineCountSaphanaDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountSaphanaDatabaseArray and NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSaphanaDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountSaphanaDatabaseArray{ NdbClusterEntityCountEngineCountSaphanaDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountSaphanaDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseArray []NdbClusterEntityCountEngineCountSaphanaDatabaseInput

func (NdbClusterEntityCountEngineCountSaphanaDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSaphanaDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseArray) ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseArray) ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSaphanaDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabase) []NdbClusterEntityCountEngineCountSaphanaDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSaphanaDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountSaphanaDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountSaphanaDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountSaphanaDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountSaphanaDatabaseOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountSaphanaDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs and NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSaphanaDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray and NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray{ NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray []NdbClusterEntityCountEngineCountSaphanaDatabaseProfileInput

func (NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSaphanaDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSaphanaDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSaphanaDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountSaphanaDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountSaphanaDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabase struct {
	Profiles     []NdbClusterEntityCountEngineCountSqlserverDatabaseProfile `pulumi:"profiles"`
	TimeMachines *int                                                       `pulumi:"timeMachines"`
}

// NdbClusterEntityCountEngineCountSqlserverDatabaseInput is an input type that accepts NdbClusterEntityCountEngineCountSqlserverDatabaseArgs and NdbClusterEntityCountEngineCountSqlserverDatabaseOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSqlserverDatabaseInput` via:
//
//	NdbClusterEntityCountEngineCountSqlserverDatabaseArgs{...}
type NdbClusterEntityCountEngineCountSqlserverDatabaseInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseOutput
	ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseOutput
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseArgs struct {
	Profiles     NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayInput `pulumi:"profiles"`
	TimeMachines pulumi.IntPtrInput                                                 `pulumi:"timeMachines"`
}

func (NdbClusterEntityCountEngineCountSqlserverDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseArgs) ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseOutput {
	return i.ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseArgs) ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSqlserverDatabaseOutput)
}

// NdbClusterEntityCountEngineCountSqlserverDatabaseArrayInput is an input type that accepts NdbClusterEntityCountEngineCountSqlserverDatabaseArray and NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSqlserverDatabaseArrayInput` via:
//
//	NdbClusterEntityCountEngineCountSqlserverDatabaseArray{ NdbClusterEntityCountEngineCountSqlserverDatabaseArgs{...} }
type NdbClusterEntityCountEngineCountSqlserverDatabaseArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput
	ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseArray []NdbClusterEntityCountEngineCountSqlserverDatabaseInput

func (NdbClusterEntityCountEngineCountSqlserverDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSqlserverDatabase)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseArray) ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseArray) ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSqlserverDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseOutput) Profiles() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabase) []NdbClusterEntityCountEngineCountSqlserverDatabaseProfile {
		return v.Profiles
	}).(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseOutput) TimeMachines() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabase) *int { return v.TimeMachines }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSqlserverDatabase)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountSqlserverDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountSqlserverDatabase {
		return vs[0].([]NdbClusterEntityCountEngineCountSqlserverDatabase)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountSqlserverDatabaseOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseProfile struct {
	Compute           *int `pulumi:"compute"`
	DatabaseParameter *int `pulumi:"databaseParameter"`
	Network           *int `pulumi:"network"`
	Software          *int `pulumi:"software"`
	Storage           *int `pulumi:"storage"`
	WindowsDomain     *int `pulumi:"windowsDomain"`
}

// NdbClusterEntityCountEngineCountSqlserverDatabaseProfileInput is an input type that accepts NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs and NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSqlserverDatabaseProfileInput` via:
//
//	NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs{...}
type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput
	ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs struct {
	Compute           pulumi.IntPtrInput `pulumi:"compute"`
	DatabaseParameter pulumi.IntPtrInput `pulumi:"databaseParameter"`
	Network           pulumi.IntPtrInput `pulumi:"network"`
	Software          pulumi.IntPtrInput `pulumi:"software"`
	Storage           pulumi.IntPtrInput `pulumi:"storage"`
	WindowsDomain     pulumi.IntPtrInput `pulumi:"windowsDomain"`
}

func (NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput {
	return i.ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput)
}

// NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayInput is an input type that accepts NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray and NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput values.
// You can construct a concrete instance of `NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayInput` via:
//
//	NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray{ NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs{...} }
type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayInput interface {
	pulumi.Input

	ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput
	ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutputWithContext(context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray []NdbClusterEntityCountEngineCountSqlserverDatabaseProfileInput

func (NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSqlserverDatabaseProfile)(nil)).Elem()
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput {
	return i.ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutputWithContext(context.Background())
}

func (i NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) Compute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.Compute }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) DatabaseParameter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.DatabaseParameter }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) Network() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.Network }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) Software() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.Software }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput) WindowsDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbClusterEntityCountEngineCountSqlserverDatabaseProfile) *int { return v.WindowsDomain }).(pulumi.IntPtrOutput)
}

type NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterEntityCountEngineCountSqlserverDatabaseProfile)(nil)).Elem()
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput() NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput) ToNdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutputWithContext(ctx context.Context) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput {
	return o
}

func (o NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput) Index(i pulumi.IntInput) NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterEntityCountEngineCountSqlserverDatabaseProfile {
		return vs[0].([]NdbClusterEntityCountEngineCountSqlserverDatabaseProfile)[vs[1].(int)]
	}).(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput)
}

type NdbClusterNetworksInfo struct {
	// VLAN access types for which you want to configure network segmentation. Supports [PRISM, DSIP, DBSERVER ].
	// Prism Element: Select this VLAN access type to configure a VLAN that the NDB agent VM can use to communicate with Prism.
	// Prism iSCSI Data Service. Select this VLAN access type to configure a VLAN that the agent VM can use to make connection requests to the iSCSI data services IP.
	// DBServer Access from NDB server. Select this VLAN access type to configure a VLAN that is used for communications between the NDB agent VM and the database server VM on the newly registered NDB server cluster.
	AccessTypes []string `pulumi:"accessTypes"`
	// network segmentation to segment the network traffic
	NetworkInfos []NdbClusterNetworksInfoNetworkInfo `pulumi:"networkInfos"`
	// type of vlan. Supported [DHCP, Static, IPAM]
	Type *string `pulumi:"type"`
}

// NdbClusterNetworksInfoInput is an input type that accepts NdbClusterNetworksInfoArgs and NdbClusterNetworksInfoOutput values.
// You can construct a concrete instance of `NdbClusterNetworksInfoInput` via:
//
//	NdbClusterNetworksInfoArgs{...}
type NdbClusterNetworksInfoInput interface {
	pulumi.Input

	ToNdbClusterNetworksInfoOutput() NdbClusterNetworksInfoOutput
	ToNdbClusterNetworksInfoOutputWithContext(context.Context) NdbClusterNetworksInfoOutput
}

type NdbClusterNetworksInfoArgs struct {
	// VLAN access types for which you want to configure network segmentation. Supports [PRISM, DSIP, DBSERVER ].
	// Prism Element: Select this VLAN access type to configure a VLAN that the NDB agent VM can use to communicate with Prism.
	// Prism iSCSI Data Service. Select this VLAN access type to configure a VLAN that the agent VM can use to make connection requests to the iSCSI data services IP.
	// DBServer Access from NDB server. Select this VLAN access type to configure a VLAN that is used for communications between the NDB agent VM and the database server VM on the newly registered NDB server cluster.
	AccessTypes pulumi.StringArrayInput `pulumi:"accessTypes"`
	// network segmentation to segment the network traffic
	NetworkInfos NdbClusterNetworksInfoNetworkInfoArrayInput `pulumi:"networkInfos"`
	// type of vlan. Supported [DHCP, Static, IPAM]
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbClusterNetworksInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterNetworksInfo)(nil)).Elem()
}

func (i NdbClusterNetworksInfoArgs) ToNdbClusterNetworksInfoOutput() NdbClusterNetworksInfoOutput {
	return i.ToNdbClusterNetworksInfoOutputWithContext(context.Background())
}

func (i NdbClusterNetworksInfoArgs) ToNdbClusterNetworksInfoOutputWithContext(ctx context.Context) NdbClusterNetworksInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterNetworksInfoOutput)
}

// NdbClusterNetworksInfoArrayInput is an input type that accepts NdbClusterNetworksInfoArray and NdbClusterNetworksInfoArrayOutput values.
// You can construct a concrete instance of `NdbClusterNetworksInfoArrayInput` via:
//
//	NdbClusterNetworksInfoArray{ NdbClusterNetworksInfoArgs{...} }
type NdbClusterNetworksInfoArrayInput interface {
	pulumi.Input

	ToNdbClusterNetworksInfoArrayOutput() NdbClusterNetworksInfoArrayOutput
	ToNdbClusterNetworksInfoArrayOutputWithContext(context.Context) NdbClusterNetworksInfoArrayOutput
}

type NdbClusterNetworksInfoArray []NdbClusterNetworksInfoInput

func (NdbClusterNetworksInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterNetworksInfo)(nil)).Elem()
}

func (i NdbClusterNetworksInfoArray) ToNdbClusterNetworksInfoArrayOutput() NdbClusterNetworksInfoArrayOutput {
	return i.ToNdbClusterNetworksInfoArrayOutputWithContext(context.Background())
}

func (i NdbClusterNetworksInfoArray) ToNdbClusterNetworksInfoArrayOutputWithContext(ctx context.Context) NdbClusterNetworksInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterNetworksInfoArrayOutput)
}

type NdbClusterNetworksInfoOutput struct{ *pulumi.OutputState }

func (NdbClusterNetworksInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterNetworksInfo)(nil)).Elem()
}

func (o NdbClusterNetworksInfoOutput) ToNdbClusterNetworksInfoOutput() NdbClusterNetworksInfoOutput {
	return o
}

func (o NdbClusterNetworksInfoOutput) ToNdbClusterNetworksInfoOutputWithContext(ctx context.Context) NdbClusterNetworksInfoOutput {
	return o
}

// VLAN access types for which you want to configure network segmentation. Supports [PRISM, DSIP, DBSERVER ].
// Prism Element: Select this VLAN access type to configure a VLAN that the NDB agent VM can use to communicate with Prism.
// Prism iSCSI Data Service. Select this VLAN access type to configure a VLAN that the agent VM can use to make connection requests to the iSCSI data services IP.
// DBServer Access from NDB server. Select this VLAN access type to configure a VLAN that is used for communications between the NDB agent VM and the database server VM on the newly registered NDB server cluster.
func (o NdbClusterNetworksInfoOutput) AccessTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfo) []string { return v.AccessTypes }).(pulumi.StringArrayOutput)
}

// network segmentation to segment the network traffic
func (o NdbClusterNetworksInfoOutput) NetworkInfos() NdbClusterNetworksInfoNetworkInfoArrayOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfo) []NdbClusterNetworksInfoNetworkInfo { return v.NetworkInfos }).(NdbClusterNetworksInfoNetworkInfoArrayOutput)
}

// type of vlan. Supported [DHCP, Static, IPAM]
func (o NdbClusterNetworksInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbClusterNetworksInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterNetworksInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterNetworksInfo)(nil)).Elem()
}

func (o NdbClusterNetworksInfoArrayOutput) ToNdbClusterNetworksInfoArrayOutput() NdbClusterNetworksInfoArrayOutput {
	return o
}

func (o NdbClusterNetworksInfoArrayOutput) ToNdbClusterNetworksInfoArrayOutputWithContext(ctx context.Context) NdbClusterNetworksInfoArrayOutput {
	return o
}

func (o NdbClusterNetworksInfoArrayOutput) Index(i pulumi.IntInput) NdbClusterNetworksInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterNetworksInfo {
		return vs[0].([]NdbClusterNetworksInfo)[vs[1].(int)]
	}).(NdbClusterNetworksInfoOutput)
}

type NdbClusterNetworksInfoNetworkInfo struct {
	// gateway of agent network
	Gateway *string `pulumi:"gateway"`
	// static ip of agent network
	StaticIp *string `pulumi:"staticIp"`
	// subnet mask of agent network
	SubnetMask *string `pulumi:"subnetMask"`
	// vlan name
	VlanName *string `pulumi:"vlanName"`
}

// NdbClusterNetworksInfoNetworkInfoInput is an input type that accepts NdbClusterNetworksInfoNetworkInfoArgs and NdbClusterNetworksInfoNetworkInfoOutput values.
// You can construct a concrete instance of `NdbClusterNetworksInfoNetworkInfoInput` via:
//
//	NdbClusterNetworksInfoNetworkInfoArgs{...}
type NdbClusterNetworksInfoNetworkInfoInput interface {
	pulumi.Input

	ToNdbClusterNetworksInfoNetworkInfoOutput() NdbClusterNetworksInfoNetworkInfoOutput
	ToNdbClusterNetworksInfoNetworkInfoOutputWithContext(context.Context) NdbClusterNetworksInfoNetworkInfoOutput
}

type NdbClusterNetworksInfoNetworkInfoArgs struct {
	// gateway of agent network
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// static ip of agent network
	StaticIp pulumi.StringPtrInput `pulumi:"staticIp"`
	// subnet mask of agent network
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// vlan name
	VlanName pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (NdbClusterNetworksInfoNetworkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterNetworksInfoNetworkInfo)(nil)).Elem()
}

func (i NdbClusterNetworksInfoNetworkInfoArgs) ToNdbClusterNetworksInfoNetworkInfoOutput() NdbClusterNetworksInfoNetworkInfoOutput {
	return i.ToNdbClusterNetworksInfoNetworkInfoOutputWithContext(context.Background())
}

func (i NdbClusterNetworksInfoNetworkInfoArgs) ToNdbClusterNetworksInfoNetworkInfoOutputWithContext(ctx context.Context) NdbClusterNetworksInfoNetworkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterNetworksInfoNetworkInfoOutput)
}

// NdbClusterNetworksInfoNetworkInfoArrayInput is an input type that accepts NdbClusterNetworksInfoNetworkInfoArray and NdbClusterNetworksInfoNetworkInfoArrayOutput values.
// You can construct a concrete instance of `NdbClusterNetworksInfoNetworkInfoArrayInput` via:
//
//	NdbClusterNetworksInfoNetworkInfoArray{ NdbClusterNetworksInfoNetworkInfoArgs{...} }
type NdbClusterNetworksInfoNetworkInfoArrayInput interface {
	pulumi.Input

	ToNdbClusterNetworksInfoNetworkInfoArrayOutput() NdbClusterNetworksInfoNetworkInfoArrayOutput
	ToNdbClusterNetworksInfoNetworkInfoArrayOutputWithContext(context.Context) NdbClusterNetworksInfoNetworkInfoArrayOutput
}

type NdbClusterNetworksInfoNetworkInfoArray []NdbClusterNetworksInfoNetworkInfoInput

func (NdbClusterNetworksInfoNetworkInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterNetworksInfoNetworkInfo)(nil)).Elem()
}

func (i NdbClusterNetworksInfoNetworkInfoArray) ToNdbClusterNetworksInfoNetworkInfoArrayOutput() NdbClusterNetworksInfoNetworkInfoArrayOutput {
	return i.ToNdbClusterNetworksInfoNetworkInfoArrayOutputWithContext(context.Background())
}

func (i NdbClusterNetworksInfoNetworkInfoArray) ToNdbClusterNetworksInfoNetworkInfoArrayOutputWithContext(ctx context.Context) NdbClusterNetworksInfoNetworkInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterNetworksInfoNetworkInfoArrayOutput)
}

type NdbClusterNetworksInfoNetworkInfoOutput struct{ *pulumi.OutputState }

func (NdbClusterNetworksInfoNetworkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterNetworksInfoNetworkInfo)(nil)).Elem()
}

func (o NdbClusterNetworksInfoNetworkInfoOutput) ToNdbClusterNetworksInfoNetworkInfoOutput() NdbClusterNetworksInfoNetworkInfoOutput {
	return o
}

func (o NdbClusterNetworksInfoNetworkInfoOutput) ToNdbClusterNetworksInfoNetworkInfoOutputWithContext(ctx context.Context) NdbClusterNetworksInfoNetworkInfoOutput {
	return o
}

// gateway of agent network
func (o NdbClusterNetworksInfoNetworkInfoOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfoNetworkInfo) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// static ip of agent network
func (o NdbClusterNetworksInfoNetworkInfoOutput) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfoNetworkInfo) *string { return v.StaticIp }).(pulumi.StringPtrOutput)
}

// subnet mask of agent network
func (o NdbClusterNetworksInfoNetworkInfoOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfoNetworkInfo) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// vlan name
func (o NdbClusterNetworksInfoNetworkInfoOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterNetworksInfoNetworkInfo) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type NdbClusterNetworksInfoNetworkInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterNetworksInfoNetworkInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterNetworksInfoNetworkInfo)(nil)).Elem()
}

func (o NdbClusterNetworksInfoNetworkInfoArrayOutput) ToNdbClusterNetworksInfoNetworkInfoArrayOutput() NdbClusterNetworksInfoNetworkInfoArrayOutput {
	return o
}

func (o NdbClusterNetworksInfoNetworkInfoArrayOutput) ToNdbClusterNetworksInfoNetworkInfoArrayOutputWithContext(ctx context.Context) NdbClusterNetworksInfoNetworkInfoArrayOutput {
	return o
}

func (o NdbClusterNetworksInfoNetworkInfoArrayOutput) Index(i pulumi.IntInput) NdbClusterNetworksInfoNetworkInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterNetworksInfoNetworkInfo {
		return vs[0].([]NdbClusterNetworksInfoNetworkInfo)[vs[1].(int)]
	}).(NdbClusterNetworksInfoNetworkInfoOutput)
}

type NdbClusterProperty struct {
	// description of cluster
	Description *string `pulumi:"description"`
	// name of the cluster to be registered
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbClusterPropertyInput is an input type that accepts NdbClusterPropertyArgs and NdbClusterPropertyOutput values.
// You can construct a concrete instance of `NdbClusterPropertyInput` via:
//
//	NdbClusterPropertyArgs{...}
type NdbClusterPropertyInput interface {
	pulumi.Input

	ToNdbClusterPropertyOutput() NdbClusterPropertyOutput
	ToNdbClusterPropertyOutputWithContext(context.Context) NdbClusterPropertyOutput
}

type NdbClusterPropertyArgs struct {
	// description of cluster
	Description pulumi.StringPtrInput `pulumi:"description"`
	// name of the cluster to be registered
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbClusterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterProperty)(nil)).Elem()
}

func (i NdbClusterPropertyArgs) ToNdbClusterPropertyOutput() NdbClusterPropertyOutput {
	return i.ToNdbClusterPropertyOutputWithContext(context.Background())
}

func (i NdbClusterPropertyArgs) ToNdbClusterPropertyOutputWithContext(ctx context.Context) NdbClusterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterPropertyOutput)
}

// NdbClusterPropertyArrayInput is an input type that accepts NdbClusterPropertyArray and NdbClusterPropertyArrayOutput values.
// You can construct a concrete instance of `NdbClusterPropertyArrayInput` via:
//
//	NdbClusterPropertyArray{ NdbClusterPropertyArgs{...} }
type NdbClusterPropertyArrayInput interface {
	pulumi.Input

	ToNdbClusterPropertyArrayOutput() NdbClusterPropertyArrayOutput
	ToNdbClusterPropertyArrayOutputWithContext(context.Context) NdbClusterPropertyArrayOutput
}

type NdbClusterPropertyArray []NdbClusterPropertyInput

func (NdbClusterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterProperty)(nil)).Elem()
}

func (i NdbClusterPropertyArray) ToNdbClusterPropertyArrayOutput() NdbClusterPropertyArrayOutput {
	return i.ToNdbClusterPropertyArrayOutputWithContext(context.Background())
}

func (i NdbClusterPropertyArray) ToNdbClusterPropertyArrayOutputWithContext(ctx context.Context) NdbClusterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterPropertyArrayOutput)
}

type NdbClusterPropertyOutput struct{ *pulumi.OutputState }

func (NdbClusterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterProperty)(nil)).Elem()
}

func (o NdbClusterPropertyOutput) ToNdbClusterPropertyOutput() NdbClusterPropertyOutput {
	return o
}

func (o NdbClusterPropertyOutput) ToNdbClusterPropertyOutputWithContext(ctx context.Context) NdbClusterPropertyOutput {
	return o
}

// description of cluster
func (o NdbClusterPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// name of the cluster to be registered
func (o NdbClusterPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbClusterPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbClusterPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbClusterProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbClusterPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbClusterProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbClusterPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterProperty)(nil)).Elem()
}

func (o NdbClusterPropertyArrayOutput) ToNdbClusterPropertyArrayOutput() NdbClusterPropertyArrayOutput {
	return o
}

func (o NdbClusterPropertyArrayOutput) ToNdbClusterPropertyArrayOutputWithContext(ctx context.Context) NdbClusterPropertyArrayOutput {
	return o
}

func (o NdbClusterPropertyArrayOutput) Index(i pulumi.IntInput) NdbClusterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterProperty {
		return vs[0].([]NdbClusterProperty)[vs[1].(int)]
	}).(NdbClusterPropertyOutput)
}

type NdbClusterResourceConfig struct {
	MemoryThresholdPercentage  *float64 `pulumi:"memoryThresholdPercentage"`
	StorageThresholdPercentage *float64 `pulumi:"storageThresholdPercentage"`
}

// NdbClusterResourceConfigInput is an input type that accepts NdbClusterResourceConfigArgs and NdbClusterResourceConfigOutput values.
// You can construct a concrete instance of `NdbClusterResourceConfigInput` via:
//
//	NdbClusterResourceConfigArgs{...}
type NdbClusterResourceConfigInput interface {
	pulumi.Input

	ToNdbClusterResourceConfigOutput() NdbClusterResourceConfigOutput
	ToNdbClusterResourceConfigOutputWithContext(context.Context) NdbClusterResourceConfigOutput
}

type NdbClusterResourceConfigArgs struct {
	MemoryThresholdPercentage  pulumi.Float64PtrInput `pulumi:"memoryThresholdPercentage"`
	StorageThresholdPercentage pulumi.Float64PtrInput `pulumi:"storageThresholdPercentage"`
}

func (NdbClusterResourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterResourceConfig)(nil)).Elem()
}

func (i NdbClusterResourceConfigArgs) ToNdbClusterResourceConfigOutput() NdbClusterResourceConfigOutput {
	return i.ToNdbClusterResourceConfigOutputWithContext(context.Background())
}

func (i NdbClusterResourceConfigArgs) ToNdbClusterResourceConfigOutputWithContext(ctx context.Context) NdbClusterResourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterResourceConfigOutput)
}

// NdbClusterResourceConfigArrayInput is an input type that accepts NdbClusterResourceConfigArray and NdbClusterResourceConfigArrayOutput values.
// You can construct a concrete instance of `NdbClusterResourceConfigArrayInput` via:
//
//	NdbClusterResourceConfigArray{ NdbClusterResourceConfigArgs{...} }
type NdbClusterResourceConfigArrayInput interface {
	pulumi.Input

	ToNdbClusterResourceConfigArrayOutput() NdbClusterResourceConfigArrayOutput
	ToNdbClusterResourceConfigArrayOutputWithContext(context.Context) NdbClusterResourceConfigArrayOutput
}

type NdbClusterResourceConfigArray []NdbClusterResourceConfigInput

func (NdbClusterResourceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterResourceConfig)(nil)).Elem()
}

func (i NdbClusterResourceConfigArray) ToNdbClusterResourceConfigArrayOutput() NdbClusterResourceConfigArrayOutput {
	return i.ToNdbClusterResourceConfigArrayOutputWithContext(context.Background())
}

func (i NdbClusterResourceConfigArray) ToNdbClusterResourceConfigArrayOutputWithContext(ctx context.Context) NdbClusterResourceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbClusterResourceConfigArrayOutput)
}

type NdbClusterResourceConfigOutput struct{ *pulumi.OutputState }

func (NdbClusterResourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbClusterResourceConfig)(nil)).Elem()
}

func (o NdbClusterResourceConfigOutput) ToNdbClusterResourceConfigOutput() NdbClusterResourceConfigOutput {
	return o
}

func (o NdbClusterResourceConfigOutput) ToNdbClusterResourceConfigOutputWithContext(ctx context.Context) NdbClusterResourceConfigOutput {
	return o
}

func (o NdbClusterResourceConfigOutput) MemoryThresholdPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbClusterResourceConfig) *float64 { return v.MemoryThresholdPercentage }).(pulumi.Float64PtrOutput)
}

func (o NdbClusterResourceConfigOutput) StorageThresholdPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbClusterResourceConfig) *float64 { return v.StorageThresholdPercentage }).(pulumi.Float64PtrOutput)
}

type NdbClusterResourceConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbClusterResourceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbClusterResourceConfig)(nil)).Elem()
}

func (o NdbClusterResourceConfigArrayOutput) ToNdbClusterResourceConfigArrayOutput() NdbClusterResourceConfigArrayOutput {
	return o
}

func (o NdbClusterResourceConfigArrayOutput) ToNdbClusterResourceConfigArrayOutputWithContext(ctx context.Context) NdbClusterResourceConfigArrayOutput {
	return o
}

func (o NdbClusterResourceConfigArrayOutput) Index(i pulumi.IntInput) NdbClusterResourceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbClusterResourceConfig {
		return vs[0].([]NdbClusterResourceConfig)[vs[1].(int)]
	}).(NdbClusterResourceConfigOutput)
}

type NdbDatabaseActionargument struct {
	// - (Required) name of argument
	Name string `pulumi:"name"`
	// - (Required) value for argument
	Value string `pulumi:"value"`
}

// NdbDatabaseActionargumentInput is an input type that accepts NdbDatabaseActionargumentArgs and NdbDatabaseActionargumentOutput values.
// You can construct a concrete instance of `NdbDatabaseActionargumentInput` via:
//
//	NdbDatabaseActionargumentArgs{...}
type NdbDatabaseActionargumentInput interface {
	pulumi.Input

	ToNdbDatabaseActionargumentOutput() NdbDatabaseActionargumentOutput
	ToNdbDatabaseActionargumentOutputWithContext(context.Context) NdbDatabaseActionargumentOutput
}

type NdbDatabaseActionargumentArgs struct {
	// - (Required) name of argument
	Name pulumi.StringInput `pulumi:"name"`
	// - (Required) value for argument
	Value pulumi.StringInput `pulumi:"value"`
}

func (NdbDatabaseActionargumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseActionargument)(nil)).Elem()
}

func (i NdbDatabaseActionargumentArgs) ToNdbDatabaseActionargumentOutput() NdbDatabaseActionargumentOutput {
	return i.ToNdbDatabaseActionargumentOutputWithContext(context.Background())
}

func (i NdbDatabaseActionargumentArgs) ToNdbDatabaseActionargumentOutputWithContext(ctx context.Context) NdbDatabaseActionargumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseActionargumentOutput)
}

// NdbDatabaseActionargumentArrayInput is an input type that accepts NdbDatabaseActionargumentArray and NdbDatabaseActionargumentArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseActionargumentArrayInput` via:
//
//	NdbDatabaseActionargumentArray{ NdbDatabaseActionargumentArgs{...} }
type NdbDatabaseActionargumentArrayInput interface {
	pulumi.Input

	ToNdbDatabaseActionargumentArrayOutput() NdbDatabaseActionargumentArrayOutput
	ToNdbDatabaseActionargumentArrayOutputWithContext(context.Context) NdbDatabaseActionargumentArrayOutput
}

type NdbDatabaseActionargumentArray []NdbDatabaseActionargumentInput

func (NdbDatabaseActionargumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseActionargument)(nil)).Elem()
}

func (i NdbDatabaseActionargumentArray) ToNdbDatabaseActionargumentArrayOutput() NdbDatabaseActionargumentArrayOutput {
	return i.ToNdbDatabaseActionargumentArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseActionargumentArray) ToNdbDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbDatabaseActionargumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseActionargumentArrayOutput)
}

type NdbDatabaseActionargumentOutput struct{ *pulumi.OutputState }

func (NdbDatabaseActionargumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseActionargument)(nil)).Elem()
}

func (o NdbDatabaseActionargumentOutput) ToNdbDatabaseActionargumentOutput() NdbDatabaseActionargumentOutput {
	return o
}

func (o NdbDatabaseActionargumentOutput) ToNdbDatabaseActionargumentOutputWithContext(ctx context.Context) NdbDatabaseActionargumentOutput {
	return o
}

// - (Required) name of argument
func (o NdbDatabaseActionargumentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseActionargument) string { return v.Name }).(pulumi.StringOutput)
}

// - (Required) value for argument
func (o NdbDatabaseActionargumentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseActionargument) string { return v.Value }).(pulumi.StringOutput)
}

type NdbDatabaseActionargumentArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseActionargumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseActionargument)(nil)).Elem()
}

func (o NdbDatabaseActionargumentArrayOutput) ToNdbDatabaseActionargumentArrayOutput() NdbDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbDatabaseActionargumentArrayOutput) ToNdbDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbDatabaseActionargumentArrayOutput) Index(i pulumi.IntInput) NdbDatabaseActionargumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseActionargument {
		return vs[0].([]NdbDatabaseActionargument)[vs[1].(int)]
	}).(NdbDatabaseActionargumentOutput)
}

type NdbDatabaseClusterInfo struct {
	ClusterIpInfos []NdbDatabaseClusterInfoClusterIpInfo `pulumi:"clusterIpInfos"`
}

// NdbDatabaseClusterInfoInput is an input type that accepts NdbDatabaseClusterInfoArgs and NdbDatabaseClusterInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoInput` via:
//
//	NdbDatabaseClusterInfoArgs{...}
type NdbDatabaseClusterInfoInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoOutput() NdbDatabaseClusterInfoOutput
	ToNdbDatabaseClusterInfoOutputWithContext(context.Context) NdbDatabaseClusterInfoOutput
}

type NdbDatabaseClusterInfoArgs struct {
	ClusterIpInfos NdbDatabaseClusterInfoClusterIpInfoArrayInput `pulumi:"clusterIpInfos"`
}

func (NdbDatabaseClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoArgs) ToNdbDatabaseClusterInfoOutput() NdbDatabaseClusterInfoOutput {
	return i.ToNdbDatabaseClusterInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoArgs) ToNdbDatabaseClusterInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoOutput)
}

// NdbDatabaseClusterInfoArrayInput is an input type that accepts NdbDatabaseClusterInfoArray and NdbDatabaseClusterInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoArrayInput` via:
//
//	NdbDatabaseClusterInfoArray{ NdbDatabaseClusterInfoArgs{...} }
type NdbDatabaseClusterInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoArrayOutput() NdbDatabaseClusterInfoArrayOutput
	ToNdbDatabaseClusterInfoArrayOutputWithContext(context.Context) NdbDatabaseClusterInfoArrayOutput
}

type NdbDatabaseClusterInfoArray []NdbDatabaseClusterInfoInput

func (NdbDatabaseClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoArray) ToNdbDatabaseClusterInfoArrayOutput() NdbDatabaseClusterInfoArrayOutput {
	return i.ToNdbDatabaseClusterInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoArray) ToNdbDatabaseClusterInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoArrayOutput)
}

type NdbDatabaseClusterInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoOutput) ToNdbDatabaseClusterInfoOutput() NdbDatabaseClusterInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoOutput) ToNdbDatabaseClusterInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoOutput) ClusterIpInfos() NdbDatabaseClusterInfoClusterIpInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseClusterInfo) []NdbDatabaseClusterInfoClusterIpInfo { return v.ClusterIpInfos }).(NdbDatabaseClusterInfoClusterIpInfoArrayOutput)
}

type NdbDatabaseClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoArrayOutput) ToNdbDatabaseClusterInfoArrayOutput() NdbDatabaseClusterInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoArrayOutput) ToNdbDatabaseClusterInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseClusterInfo {
		return vs[0].([]NdbDatabaseClusterInfo)[vs[1].(int)]
	}).(NdbDatabaseClusterInfoOutput)
}

type NdbDatabaseClusterInfoClusterIpInfo struct {
	IpInfos     []NdbDatabaseClusterInfoClusterIpInfoIpInfo `pulumi:"ipInfos"`
	NxClusterId string                                      `pulumi:"nxClusterId"`
}

// NdbDatabaseClusterInfoClusterIpInfoInput is an input type that accepts NdbDatabaseClusterInfoClusterIpInfoArgs and NdbDatabaseClusterInfoClusterIpInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoClusterIpInfoInput` via:
//
//	NdbDatabaseClusterInfoClusterIpInfoArgs{...}
type NdbDatabaseClusterInfoClusterIpInfoInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoClusterIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoOutput
	ToNdbDatabaseClusterInfoClusterIpInfoOutputWithContext(context.Context) NdbDatabaseClusterInfoClusterIpInfoOutput
}

type NdbDatabaseClusterInfoClusterIpInfoArgs struct {
	IpInfos     NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayInput `pulumi:"ipInfos"`
	NxClusterId pulumi.StringInput                                  `pulumi:"nxClusterId"`
}

func (NdbDatabaseClusterInfoClusterIpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoClusterIpInfoArgs) ToNdbDatabaseClusterInfoClusterIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoOutput {
	return i.ToNdbDatabaseClusterInfoClusterIpInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoClusterIpInfoArgs) ToNdbDatabaseClusterInfoClusterIpInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoClusterIpInfoOutput)
}

// NdbDatabaseClusterInfoClusterIpInfoArrayInput is an input type that accepts NdbDatabaseClusterInfoClusterIpInfoArray and NdbDatabaseClusterInfoClusterIpInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoClusterIpInfoArrayInput` via:
//
//	NdbDatabaseClusterInfoClusterIpInfoArray{ NdbDatabaseClusterInfoClusterIpInfoArgs{...} }
type NdbDatabaseClusterInfoClusterIpInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoClusterIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoArrayOutput
	ToNdbDatabaseClusterInfoClusterIpInfoArrayOutputWithContext(context.Context) NdbDatabaseClusterInfoClusterIpInfoArrayOutput
}

type NdbDatabaseClusterInfoClusterIpInfoArray []NdbDatabaseClusterInfoClusterIpInfoInput

func (NdbDatabaseClusterInfoClusterIpInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfoClusterIpInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoClusterIpInfoArray) ToNdbDatabaseClusterInfoClusterIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoArrayOutput {
	return i.ToNdbDatabaseClusterInfoClusterIpInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoClusterIpInfoArray) ToNdbDatabaseClusterInfoClusterIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoClusterIpInfoArrayOutput)
}

type NdbDatabaseClusterInfoClusterIpInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoClusterIpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoClusterIpInfoOutput) ToNdbDatabaseClusterInfoClusterIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoOutput) ToNdbDatabaseClusterInfoClusterIpInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoOutput) IpInfos() NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseClusterInfoClusterIpInfo) []NdbDatabaseClusterInfoClusterIpInfoIpInfo {
		return v.IpInfos
	}).(NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput)
}

func (o NdbDatabaseClusterInfoClusterIpInfoOutput) NxClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseClusterInfoClusterIpInfo) string { return v.NxClusterId }).(pulumi.StringOutput)
}

type NdbDatabaseClusterInfoClusterIpInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoClusterIpInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfoClusterIpInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoClusterIpInfoArrayOutput) ToNdbDatabaseClusterInfoClusterIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoArrayOutput) ToNdbDatabaseClusterInfoClusterIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseClusterInfoClusterIpInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseClusterInfoClusterIpInfo {
		return vs[0].([]NdbDatabaseClusterInfoClusterIpInfo)[vs[1].(int)]
	}).(NdbDatabaseClusterInfoClusterIpInfoOutput)
}

type NdbDatabaseClusterInfoClusterIpInfoIpInfo struct {
	IpAddresses []string `pulumi:"ipAddresses"`
	IpType      *string  `pulumi:"ipType"`
}

// NdbDatabaseClusterInfoClusterIpInfoIpInfoInput is an input type that accepts NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs and NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoClusterIpInfoIpInfoInput` via:
//
//	NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs{...}
type NdbDatabaseClusterInfoClusterIpInfoIpInfoInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput
	ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutputWithContext(context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput
}

type NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs struct {
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	IpType      pulumi.StringPtrInput   `pulumi:"ipType"`
}

func (NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoIpInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput {
	return i.ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput)
}

// NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayInput is an input type that accepts NdbDatabaseClusterInfoClusterIpInfoIpInfoArray and NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayInput` via:
//
//	NdbDatabaseClusterInfoClusterIpInfoIpInfoArray{ NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs{...} }
type NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput
	ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutputWithContext(context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput
}

type NdbDatabaseClusterInfoClusterIpInfoIpInfoArray []NdbDatabaseClusterInfoClusterIpInfoIpInfoInput

func (NdbDatabaseClusterInfoClusterIpInfoIpInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfoClusterIpInfoIpInfo)(nil)).Elem()
}

func (i NdbDatabaseClusterInfoClusterIpInfoIpInfoArray) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput {
	return i.ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseClusterInfoClusterIpInfoIpInfoArray) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput)
}

type NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoIpInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseClusterInfoClusterIpInfoIpInfo) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseClusterInfoClusterIpInfoIpInfo) *string { return v.IpType }).(pulumi.StringPtrOutput)
}

type NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseClusterInfoClusterIpInfoIpInfo)(nil)).Elem()
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput() NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput) ToNdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseClusterInfoClusterIpInfoIpInfo {
		return vs[0].([]NdbDatabaseClusterInfoClusterIpInfoIpInfo)[vs[1].(int)]
	}).(NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput)
}

type NdbDatabaseDatabaseNode struct {
	AccessLevel    map[string]string `pulumi:"accessLevel"`
	DatabaseId     *string           `pulumi:"databaseId"`
	DatabaseStatus *string           `pulumi:"databaseStatus"`
	DateCreated    *string           `pulumi:"dateCreated"`
	DateModified   *string           `pulumi:"dateModified"`
	Dbserver       map[string]string `pulumi:"dbserver"`
	DbserverId     *string           `pulumi:"dbserverId"`
	// - (Optional) The description
	Description *string                       `pulumi:"description"`
	Id          *string                       `pulumi:"id"`
	Infos       []NdbDatabaseDatabaseNodeInfo `pulumi:"infos"`
	// - (Required) Name of the instance.
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// List of all the properties
	Properties             []NdbDatabaseDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                   `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbDatabaseDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                   `pulumi:"softwareInstallationId"`
	Status                 *string                                   `pulumi:"status"`
	Tags                   []NdbDatabaseDatabaseNodeTag              `pulumi:"tags"`
}

// NdbDatabaseDatabaseNodeInput is an input type that accepts NdbDatabaseDatabaseNodeArgs and NdbDatabaseDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeInput` via:
//
//	NdbDatabaseDatabaseNodeArgs{...}
type NdbDatabaseDatabaseNodeInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeOutput() NdbDatabaseDatabaseNodeOutput
	ToNdbDatabaseDatabaseNodeOutputWithContext(context.Context) NdbDatabaseDatabaseNodeOutput
}

type NdbDatabaseDatabaseNodeArgs struct {
	AccessLevel    pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	DateCreated    pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified   pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver       pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId     pulumi.StringPtrInput `pulumi:"dbserverId"`
	// - (Optional) The description
	Description pulumi.StringPtrInput                 `pulumi:"description"`
	Id          pulumi.StringPtrInput                 `pulumi:"id"`
	Infos       NdbDatabaseDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// - (Required) Name of the instance.
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// List of all the properties
	Properties             NdbDatabaseDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                             `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbDatabaseDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                             `pulumi:"softwareInstallationId"`
	Status                 pulumi.StringPtrInput                             `pulumi:"status"`
	Tags                   NdbDatabaseDatabaseNodeTagArrayInput              `pulumi:"tags"`
}

func (NdbDatabaseDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeArgs) ToNdbDatabaseDatabaseNodeOutput() NdbDatabaseDatabaseNodeOutput {
	return i.ToNdbDatabaseDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeArgs) ToNdbDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeOutput)
}

// NdbDatabaseDatabaseNodeArrayInput is an input type that accepts NdbDatabaseDatabaseNodeArray and NdbDatabaseDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeArrayInput` via:
//
//	NdbDatabaseDatabaseNodeArray{ NdbDatabaseDatabaseNodeArgs{...} }
type NdbDatabaseDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeArrayOutput() NdbDatabaseDatabaseNodeArrayOutput
	ToNdbDatabaseDatabaseNodeArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodeArrayOutput
}

type NdbDatabaseDatabaseNodeArray []NdbDatabaseDatabaseNodeInput

func (NdbDatabaseDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeArray) ToNdbDatabaseDatabaseNodeArrayOutput() NdbDatabaseDatabaseNodeArrayOutput {
	return i.ToNdbDatabaseDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeArray) ToNdbDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeArrayOutput)
}

type NdbDatabaseDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeOutput) ToNdbDatabaseDatabaseNodeOutput() NdbDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeOutput) ToNdbDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Infos() NdbDatabaseDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) []NdbDatabaseDatabaseNodeInfo { return v.Infos }).(NdbDatabaseDatabaseNodeInfoArrayOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// List of all the properties
func (o NdbDatabaseDatabaseNodeOutput) Properties() NdbDatabaseDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) []NdbDatabaseDatabaseNodeProperty { return v.Properties }).(NdbDatabaseDatabaseNodePropertyArrayOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) ProtectionDomains() NdbDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) []NdbDatabaseDatabaseNodeProtectionDomain { return v.ProtectionDomains }).(NdbDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeOutput) Tags() NdbDatabaseDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNode) []NdbDatabaseDatabaseNodeTag { return v.Tags }).(NdbDatabaseDatabaseNodeTagArrayOutput)
}

type NdbDatabaseDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeArrayOutput) ToNdbDatabaseDatabaseNodeArrayOutput() NdbDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeArrayOutput) ToNdbDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNode {
		return vs[0].([]NdbDatabaseDatabaseNode)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodeOutput)
}

type NdbDatabaseDatabaseNodeInfo struct {
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseDatabaseNodeInfoInput is an input type that accepts NdbDatabaseDatabaseNodeInfoArgs and NdbDatabaseDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeInfoInput` via:
//
//	NdbDatabaseDatabaseNodeInfoArgs{...}
type NdbDatabaseDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeInfoOutput() NdbDatabaseDatabaseNodeInfoOutput
	ToNdbDatabaseDatabaseNodeInfoOutputWithContext(context.Context) NdbDatabaseDatabaseNodeInfoOutput
}

type NdbDatabaseDatabaseNodeInfoArgs struct {
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeInfoArgs) ToNdbDatabaseDatabaseNodeInfoOutput() NdbDatabaseDatabaseNodeInfoOutput {
	return i.ToNdbDatabaseDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeInfoArgs) ToNdbDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeInfoOutput)
}

// NdbDatabaseDatabaseNodeInfoArrayInput is an input type that accepts NdbDatabaseDatabaseNodeInfoArray and NdbDatabaseDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeInfoArrayInput` via:
//
//	NdbDatabaseDatabaseNodeInfoArray{ NdbDatabaseDatabaseNodeInfoArgs{...} }
type NdbDatabaseDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeInfoArrayOutput() NdbDatabaseDatabaseNodeInfoArrayOutput
	ToNdbDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodeInfoArrayOutput
}

type NdbDatabaseDatabaseNodeInfoArray []NdbDatabaseDatabaseNodeInfoInput

func (NdbDatabaseDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeInfoArray) ToNdbDatabaseDatabaseNodeInfoArrayOutput() NdbDatabaseDatabaseNodeInfoArrayOutput {
	return i.ToNdbDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeInfoArray) ToNdbDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeInfoArrayOutput)
}

type NdbDatabaseDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeInfoOutput) ToNdbDatabaseDatabaseNodeInfoOutput() NdbDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeInfoOutput) ToNdbDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeInfoArrayOutput) ToNdbDatabaseDatabaseNodeInfoArrayOutput() NdbDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeInfoArrayOutput) ToNdbDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNodeInfo {
		return vs[0].([]NdbDatabaseDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodeInfoOutput)
}

type NdbDatabaseDatabaseNodeProperty struct {
	// - (Optional) The description
	Description *string `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseDatabaseNodePropertyInput is an input type that accepts NdbDatabaseDatabaseNodePropertyArgs and NdbDatabaseDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodePropertyInput` via:
//
//	NdbDatabaseDatabaseNodePropertyArgs{...}
type NdbDatabaseDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodePropertyOutput() NdbDatabaseDatabaseNodePropertyOutput
	ToNdbDatabaseDatabaseNodePropertyOutputWithContext(context.Context) NdbDatabaseDatabaseNodePropertyOutput
}

type NdbDatabaseDatabaseNodePropertyArgs struct {
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodePropertyArgs) ToNdbDatabaseDatabaseNodePropertyOutput() NdbDatabaseDatabaseNodePropertyOutput {
	return i.ToNdbDatabaseDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodePropertyArgs) ToNdbDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodePropertyOutput)
}

// NdbDatabaseDatabaseNodePropertyArrayInput is an input type that accepts NdbDatabaseDatabaseNodePropertyArray and NdbDatabaseDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodePropertyArrayInput` via:
//
//	NdbDatabaseDatabaseNodePropertyArray{ NdbDatabaseDatabaseNodePropertyArgs{...} }
type NdbDatabaseDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodePropertyArrayOutput() NdbDatabaseDatabaseNodePropertyArrayOutput
	ToNdbDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodePropertyArrayOutput
}

type NdbDatabaseDatabaseNodePropertyArray []NdbDatabaseDatabaseNodePropertyInput

func (NdbDatabaseDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodePropertyArray) ToNdbDatabaseDatabaseNodePropertyArrayOutput() NdbDatabaseDatabaseNodePropertyArrayOutput {
	return i.ToNdbDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodePropertyArray) ToNdbDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodePropertyArrayOutput)
}

type NdbDatabaseDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodePropertyOutput) ToNdbDatabaseDatabaseNodePropertyOutput() NdbDatabaseDatabaseNodePropertyOutput {
	return o
}

func (o NdbDatabaseDatabaseNodePropertyOutput) ToNdbDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodePropertyOutput {
	return o
}

// - (Optional) The description
func (o NdbDatabaseDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodePropertyArrayOutput) ToNdbDatabaseDatabaseNodePropertyArrayOutput() NdbDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodePropertyArrayOutput) ToNdbDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNodeProperty {
		return vs[0].([]NdbDatabaseDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodePropertyOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	DateCreated   *string  `pulumi:"dateCreated"`
	DateModified  *string  `pulumi:"dateModified"`
	// - (Optional) The description
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// - (Required) Name of the instance.
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// List of all the properties
	Properties []NdbDatabaseDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	Status     *string                                           `pulumi:"status"`
	Type       *string                                           `pulumi:"type"`
}

// NdbDatabaseDatabaseNodeProtectionDomainInput is an input type that accepts NdbDatabaseDatabaseNodeProtectionDomainArgs and NdbDatabaseDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeProtectionDomainInput` via:
//
//	NdbDatabaseDatabaseNodeProtectionDomainArgs{...}
type NdbDatabaseDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeProtectionDomainOutput() NdbDatabaseDatabaseNodeProtectionDomainOutput
	ToNdbDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbDatabaseDatabaseNodeProtectionDomainOutput
}

type NdbDatabaseDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	DateCreated   pulumi.StringPtrInput   `pulumi:"dateCreated"`
	DateModified  pulumi.StringPtrInput   `pulumi:"dateModified"`
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// - (Required) Name of the instance.
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// List of all the properties
	Properties NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	Status     pulumi.StringPtrInput                                     `pulumi:"status"`
	Type       pulumi.StringPtrInput                                     `pulumi:"type"`
}

func (NdbDatabaseDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeProtectionDomainArgs) ToNdbDatabaseDatabaseNodeProtectionDomainOutput() NdbDatabaseDatabaseNodeProtectionDomainOutput {
	return i.ToNdbDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeProtectionDomainArgs) ToNdbDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeProtectionDomainOutput)
}

// NdbDatabaseDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbDatabaseDatabaseNodeProtectionDomainArray and NdbDatabaseDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbDatabaseDatabaseNodeProtectionDomainArray{ NdbDatabaseDatabaseNodeProtectionDomainArgs{...} }
type NdbDatabaseDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainArrayOutput
	ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodeProtectionDomainArrayOutput
}

type NdbDatabaseDatabaseNodeProtectionDomainArray []NdbDatabaseDatabaseNodeProtectionDomainInput

func (NdbDatabaseDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeProtectionDomainArray) ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeProtectionDomainArray) ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) ToNdbDatabaseDatabaseNodeProtectionDomainOutput() NdbDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) ToNdbDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// List of all the properties
func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Properties() NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) []NdbDatabaseDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNodeProtectionDomain {
		return vs[0].([]NdbDatabaseDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodeProtectionDomainOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomainProperty struct {
	// - (Optional) The description
	Description *string `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs and NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbDatabaseDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput
	ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput
}

type NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs struct {
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbDatabaseDatabaseNodeProtectionDomainPropertyArray and NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbDatabaseDatabaseNodeProtectionDomainPropertyArray{ NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbDatabaseDatabaseNodeProtectionDomainPropertyArray []NdbDatabaseDatabaseNodeProtectionDomainPropertyInput

func (NdbDatabaseDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// - (Optional) The description
func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbDatabaseDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbDatabaseDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseDatabaseNodeTagInput is an input type that accepts NdbDatabaseDatabaseNodeTagArgs and NdbDatabaseDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeTagInput` via:
//
//	NdbDatabaseDatabaseNodeTagArgs{...}
type NdbDatabaseDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeTagOutput() NdbDatabaseDatabaseNodeTagOutput
	ToNdbDatabaseDatabaseNodeTagOutputWithContext(context.Context) NdbDatabaseDatabaseNodeTagOutput
}

type NdbDatabaseDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeTagArgs) ToNdbDatabaseDatabaseNodeTagOutput() NdbDatabaseDatabaseNodeTagOutput {
	return i.ToNdbDatabaseDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeTagArgs) ToNdbDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeTagOutput)
}

// NdbDatabaseDatabaseNodeTagArrayInput is an input type that accepts NdbDatabaseDatabaseNodeTagArray and NdbDatabaseDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseDatabaseNodeTagArrayInput` via:
//
//	NdbDatabaseDatabaseNodeTagArray{ NdbDatabaseDatabaseNodeTagArgs{...} }
type NdbDatabaseDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseDatabaseNodeTagArrayOutput() NdbDatabaseDatabaseNodeTagArrayOutput
	ToNdbDatabaseDatabaseNodeTagArrayOutputWithContext(context.Context) NdbDatabaseDatabaseNodeTagArrayOutput
}

type NdbDatabaseDatabaseNodeTagArray []NdbDatabaseDatabaseNodeTagInput

func (NdbDatabaseDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseDatabaseNodeTagArray) ToNdbDatabaseDatabaseNodeTagArrayOutput() NdbDatabaseDatabaseNodeTagArrayOutput {
	return i.ToNdbDatabaseDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseDatabaseNodeTagArray) ToNdbDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseDatabaseNodeTagArrayOutput)
}

type NdbDatabaseDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeTagOutput) ToNdbDatabaseDatabaseNodeTagOutput() NdbDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeTagOutput) ToNdbDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseDatabaseNodeTagArrayOutput) ToNdbDatabaseDatabaseNodeTagArrayOutput() NdbDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeTagArrayOutput) ToNdbDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseDatabaseNodeTag {
		return vs[0].([]NdbDatabaseDatabaseNodeTag)[vs[1].(int)]
	}).(NdbDatabaseDatabaseNodeTagOutput)
}

type NdbDatabaseInfo struct {
	BpgConfigs []NdbDatabaseInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string          `pulumi:"secureInfo"`
}

// NdbDatabaseInfoInput is an input type that accepts NdbDatabaseInfoArgs and NdbDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoInput` via:
//
//	NdbDatabaseInfoArgs{...}
type NdbDatabaseInfoInput interface {
	pulumi.Input

	ToNdbDatabaseInfoOutput() NdbDatabaseInfoOutput
	ToNdbDatabaseInfoOutputWithContext(context.Context) NdbDatabaseInfoOutput
}

type NdbDatabaseInfoArgs struct {
	BpgConfigs NdbDatabaseInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput              `pulumi:"secureInfo"`
}

func (NdbDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseInfoArgs) ToNdbDatabaseInfoOutput() NdbDatabaseInfoOutput {
	return i.ToNdbDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoArgs) ToNdbDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoOutput)
}

// NdbDatabaseInfoArrayInput is an input type that accepts NdbDatabaseInfoArray and NdbDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoArrayInput` via:
//
//	NdbDatabaseInfoArray{ NdbDatabaseInfoArgs{...} }
type NdbDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoArrayOutput() NdbDatabaseInfoArrayOutput
	ToNdbDatabaseInfoArrayOutputWithContext(context.Context) NdbDatabaseInfoArrayOutput
}

type NdbDatabaseInfoArray []NdbDatabaseInfoInput

func (NdbDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseInfoArray) ToNdbDatabaseInfoArrayOutput() NdbDatabaseInfoArrayOutput {
	return i.ToNdbDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoArray) ToNdbDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoArrayOutput)
}

type NdbDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseInfoOutput) ToNdbDatabaseInfoOutput() NdbDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseInfoOutput) ToNdbDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseInfoOutput) BpgConfigs() NdbDatabaseInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfo) []NdbDatabaseInfoBpgConfig { return v.BpgConfigs }).(NdbDatabaseInfoBpgConfigArrayOutput)
}

func (o NdbDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseInfoArrayOutput) ToNdbDatabaseInfoArrayOutput() NdbDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseInfoArrayOutput) ToNdbDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfo {
		return vs[0].([]NdbDatabaseInfo)[vs[1].(int)]
	}).(NdbDatabaseInfoOutput)
}

type NdbDatabaseInfoBpgConfig struct {
	BpgDbParams  []NdbDatabaseInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbDatabaseInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbDatabaseInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbDatabaseInfoBpgConfigInput is an input type that accepts NdbDatabaseInfoBpgConfigArgs and NdbDatabaseInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigInput` via:
//
//	NdbDatabaseInfoBpgConfigArgs{...}
type NdbDatabaseInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigOutput() NdbDatabaseInfoBpgConfigOutput
	ToNdbDatabaseInfoBpgConfigOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigOutput
}

type NdbDatabaseInfoBpgConfigArgs struct {
	BpgDbParams  NdbDatabaseInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbDatabaseInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbDatabaseInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbDatabaseInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigArgs) ToNdbDatabaseInfoBpgConfigOutput() NdbDatabaseInfoBpgConfigOutput {
	return i.ToNdbDatabaseInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigArgs) ToNdbDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigOutput)
}

// NdbDatabaseInfoBpgConfigArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigArray and NdbDatabaseInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigArray{ NdbDatabaseInfoBpgConfigArgs{...} }
type NdbDatabaseInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigArrayOutput() NdbDatabaseInfoBpgConfigArrayOutput
	ToNdbDatabaseInfoBpgConfigArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigArrayOutput
}

type NdbDatabaseInfoBpgConfigArray []NdbDatabaseInfoBpgConfigInput

func (NdbDatabaseInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigArray) ToNdbDatabaseInfoBpgConfigArrayOutput() NdbDatabaseInfoBpgConfigArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigArray) ToNdbDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigArrayOutput)
}

type NdbDatabaseInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigOutput) ToNdbDatabaseInfoBpgConfigOutput() NdbDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigOutput) ToNdbDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigOutput) BpgDbParams() NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfig) []NdbDatabaseInfoBpgConfigBpgDbParam { return v.BpgDbParams }).(NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbDatabaseInfoBpgConfigOutput) Storages() NdbDatabaseInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfig) []NdbDatabaseInfoBpgConfigStorage { return v.Storages }).(NdbDatabaseInfoBpgConfigStorageArrayOutput)
}

func (o NdbDatabaseInfoBpgConfigOutput) VmProperties() NdbDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfig) []NdbDatabaseInfoBpgConfigVmProperty { return v.VmProperties }).(NdbDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigArrayOutput) ToNdbDatabaseInfoBpgConfigArrayOutput() NdbDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigArrayOutput) ToNdbDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfig {
		return vs[0].([]NdbDatabaseInfoBpgConfig)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigOutput)
}

type NdbDatabaseInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbDatabaseInfoBpgConfigBpgDbParamInput is an input type that accepts NdbDatabaseInfoBpgConfigBpgDbParamArgs and NdbDatabaseInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigBpgDbParamInput` via:
//
//	NdbDatabaseInfoBpgConfigBpgDbParamArgs{...}
type NdbDatabaseInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigBpgDbParamOutput() NdbDatabaseInfoBpgConfigBpgDbParamOutput
	ToNdbDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigBpgDbParamOutput
}

type NdbDatabaseInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbDatabaseInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseInfoBpgConfigBpgDbParamOutput() NdbDatabaseInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigBpgDbParamOutput)
}

// NdbDatabaseInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigBpgDbParamArray and NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigBpgDbParamArray{ NdbDatabaseInfoBpgConfigBpgDbParamArgs{...} }
type NdbDatabaseInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput
	ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput
}

type NdbDatabaseInfoBpgConfigBpgDbParamArray []NdbDatabaseInfoBpgConfigBpgDbParamInput

func (NdbDatabaseInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigBpgDbParamArray) ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigBpgDbParamArray) ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbDatabaseInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseInfoBpgConfigBpgDbParamOutput() NdbDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbDatabaseInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigBpgDbParamOutput)
}

type NdbDatabaseInfoBpgConfigStorage struct {
	ArchiveStorages []NdbDatabaseInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbDatabaseInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbDatabaseInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbDatabaseInfoBpgConfigStorageInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageArgs and NdbDatabaseInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageArgs{...}
type NdbDatabaseInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageOutput() NdbDatabaseInfoBpgConfigStorageOutput
	ToNdbDatabaseInfoBpgConfigStorageOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageOutput
}

type NdbDatabaseInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbDatabaseInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbDatabaseInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbDatabaseInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageArgs) ToNdbDatabaseInfoBpgConfigStorageOutput() NdbDatabaseInfoBpgConfigStorageOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageArgs) ToNdbDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageOutput)
}

// NdbDatabaseInfoBpgConfigStorageArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageArray and NdbDatabaseInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageArray{ NdbDatabaseInfoBpgConfigStorageArgs{...} }
type NdbDatabaseInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArrayOutput
	ToNdbDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageArrayOutput
}

type NdbDatabaseInfoBpgConfigStorageArray []NdbDatabaseInfoBpgConfigStorageInput

func (NdbDatabaseInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageArray) ToNdbDatabaseInfoBpgConfigStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageArray) ToNdbDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageArrayOutput)
}

type NdbDatabaseInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageOutput) ToNdbDatabaseInfoBpgConfigStorageOutput() NdbDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageOutput) ToNdbDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageOutput) ArchiveStorages() NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorage) []NdbDatabaseInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbDatabaseInfoBpgConfigStorageOutput) DataDisks() NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorage) []NdbDatabaseInfoBpgConfigStorageDataDisk { return v.DataDisks }).(NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbDatabaseInfoBpgConfigStorageOutput) LogDisks() NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorage) []NdbDatabaseInfoBpgConfigStorageLogDisk { return v.LogDisks }).(NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageArrayOutput) ToNdbDatabaseInfoBpgConfigStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArrayOutput) ToNdbDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigStorage {
		return vs[0].([]NdbDatabaseInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigStorageOutput)
}

type NdbDatabaseInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbDatabaseInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs and NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbDatabaseInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput
	ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput
}

type NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageArchiveStorageArray and NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageArchiveStorageArray{ NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbDatabaseInfoBpgConfigStorageArchiveStorageArray []NdbDatabaseInfoBpgConfigStorageArchiveStorageInput

func (NdbDatabaseInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbDatabaseInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbDatabaseInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbDatabaseInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageDataDiskArgs and NdbDatabaseInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageDataDiskArgs{...}
type NdbDatabaseInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageDataDiskOutput() NdbDatabaseInfoBpgConfigStorageDataDiskOutput
	ToNdbDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskOutput
}

type NdbDatabaseInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbDatabaseInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseInfoBpgConfigStorageDataDiskOutput() NdbDatabaseInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageDataDiskOutput)
}

// NdbDatabaseInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageDataDiskArray and NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageDataDiskArray{ NdbDatabaseInfoBpgConfigStorageDataDiskArgs{...} }
type NdbDatabaseInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbDatabaseInfoBpgConfigStorageDataDiskArray []NdbDatabaseInfoBpgConfigStorageDataDiskInput

func (NdbDatabaseInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbDatabaseInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseInfoBpgConfigStorageDataDiskOutput() NdbDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbDatabaseInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigStorageDataDiskOutput)
}

type NdbDatabaseInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbDatabaseInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageLogDiskArgs and NdbDatabaseInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageLogDiskArgs{...}
type NdbDatabaseInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageLogDiskOutput() NdbDatabaseInfoBpgConfigStorageLogDiskOutput
	ToNdbDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskOutput
}

type NdbDatabaseInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseInfoBpgConfigStorageLogDiskOutput() NdbDatabaseInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageLogDiskOutput)
}

// NdbDatabaseInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigStorageLogDiskArray and NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigStorageLogDiskArray{ NdbDatabaseInfoBpgConfigStorageLogDiskArgs{...} }
type NdbDatabaseInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbDatabaseInfoBpgConfigStorageLogDiskArray []NdbDatabaseInfoBpgConfigStorageLogDiskInput

func (NdbDatabaseInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseInfoBpgConfigStorageLogDiskOutput() NdbDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbDatabaseInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigStorageLogDiskOutput)
}

type NdbDatabaseInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbDatabaseInfoBpgConfigVmPropertyInput is an input type that accepts NdbDatabaseInfoBpgConfigVmPropertyArgs and NdbDatabaseInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigVmPropertyInput` via:
//
//	NdbDatabaseInfoBpgConfigVmPropertyArgs{...}
type NdbDatabaseInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigVmPropertyOutput() NdbDatabaseInfoBpgConfigVmPropertyOutput
	ToNdbDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigVmPropertyOutput
}

type NdbDatabaseInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbDatabaseInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigVmPropertyArgs) ToNdbDatabaseInfoBpgConfigVmPropertyOutput() NdbDatabaseInfoBpgConfigVmPropertyOutput {
	return i.ToNdbDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigVmPropertyArgs) ToNdbDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigVmPropertyOutput)
}

// NdbDatabaseInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbDatabaseInfoBpgConfigVmPropertyArray and NdbDatabaseInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbDatabaseInfoBpgConfigVmPropertyArray{ NdbDatabaseInfoBpgConfigVmPropertyArgs{...} }
type NdbDatabaseInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseInfoBpgConfigVmPropertyArrayOutput
	ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbDatabaseInfoBpgConfigVmPropertyArrayOutput
}

type NdbDatabaseInfoBpgConfigVmPropertyArray []NdbDatabaseInfoBpgConfigVmPropertyInput

func (NdbDatabaseInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseInfoBpgConfigVmPropertyArray) ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseInfoBpgConfigVmPropertyArray) ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) ToNdbDatabaseInfoBpgConfigVmPropertyOutput() NdbDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) ToNdbDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseInfoBpgConfigVmProperty {
		return vs[0].([]NdbDatabaseInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbDatabaseInfoBpgConfigVmPropertyOutput)
}

type NdbDatabaseLcmConfig struct {
	ExpiryDetails      []NdbDatabaseLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbDatabaseLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbDatabaseLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbDatabaseLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbDatabaseLcmConfigInput is an input type that accepts NdbDatabaseLcmConfigArgs and NdbDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigInput` via:
//
//	NdbDatabaseLcmConfigArgs{...}
type NdbDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigOutput() NdbDatabaseLcmConfigOutput
	ToNdbDatabaseLcmConfigOutputWithContext(context.Context) NdbDatabaseLcmConfigOutput
}

type NdbDatabaseLcmConfigArgs struct {
	ExpiryDetails      NdbDatabaseLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbDatabaseLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbDatabaseLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbDatabaseLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigArgs) ToNdbDatabaseLcmConfigOutput() NdbDatabaseLcmConfigOutput {
	return i.ToNdbDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigArgs) ToNdbDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigOutput)
}

// NdbDatabaseLcmConfigArrayInput is an input type that accepts NdbDatabaseLcmConfigArray and NdbDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigArrayInput` via:
//
//	NdbDatabaseLcmConfigArray{ NdbDatabaseLcmConfigArgs{...} }
type NdbDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigArrayOutput() NdbDatabaseLcmConfigArrayOutput
	ToNdbDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbDatabaseLcmConfigArrayOutput
}

type NdbDatabaseLcmConfigArray []NdbDatabaseLcmConfigInput

func (NdbDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigArray) ToNdbDatabaseLcmConfigArrayOutput() NdbDatabaseLcmConfigArrayOutput {
	return i.ToNdbDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigArray) ToNdbDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigArrayOutput)
}

type NdbDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigOutput) ToNdbDatabaseLcmConfigOutput() NdbDatabaseLcmConfigOutput {
	return o
}

func (o NdbDatabaseLcmConfigOutput) ToNdbDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigOutput {
	return o
}

func (o NdbDatabaseLcmConfigOutput) ExpiryDetails() NdbDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfig) []NdbDatabaseLcmConfigExpiryDetail { return v.ExpiryDetails }).(NdbDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbDatabaseLcmConfigOutput) PostDeleteCommands() NdbDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfig) []NdbDatabaseLcmConfigPostDeleteCommand { return v.PostDeleteCommands }).(NdbDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbDatabaseLcmConfigOutput) PreDeleteCommands() NdbDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfig) []NdbDatabaseLcmConfigPreDeleteCommand { return v.PreDeleteCommands }).(NdbDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbDatabaseLcmConfigOutput) RefreshDetails() NdbDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfig) []NdbDatabaseLcmConfigRefreshDetail { return v.RefreshDetails }).(NdbDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigArrayOutput) ToNdbDatabaseLcmConfigArrayOutput() NdbDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigArrayOutput) ToNdbDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLcmConfig {
		return vs[0].([]NdbDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbDatabaseLcmConfigOutput)
}

type NdbDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase *bool `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbDatabaseLcmConfigExpiryDetailArgs and NdbDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbDatabaseLcmConfigExpiryDetailArgs{...}
type NdbDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigExpiryDetailOutput() NdbDatabaseLcmConfigExpiryDetailOutput
	ToNdbDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbDatabaseLcmConfigExpiryDetailOutput
}

type NdbDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase pulumi.BoolPtrInput `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigExpiryDetailArgs) ToNdbDatabaseLcmConfigExpiryDetailOutput() NdbDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigExpiryDetailArgs) ToNdbDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigExpiryDetailOutput)
}

// NdbDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbDatabaseLcmConfigExpiryDetailArray and NdbDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbDatabaseLcmConfigExpiryDetailArray{ NdbDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigExpiryDetailArrayOutput() NdbDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbDatabaseLcmConfigExpiryDetailArray []NdbDatabaseLcmConfigExpiryDetailInput

func (NdbDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigExpiryDetailArray) ToNdbDatabaseLcmConfigExpiryDetailArrayOutput() NdbDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigExpiryDetailArray) ToNdbDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) ToNdbDatabaseLcmConfigExpiryDetailOutput() NdbDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) ToNdbDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
func (o NdbDatabaseLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseLcmConfigExpiryDetailArrayOutput() NdbDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbDatabaseLcmConfigExpiryDetailOutput)
}

type NdbDatabaseLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseLcmConfigPostDeleteCommandInput is an input type that accepts NdbDatabaseLcmConfigPostDeleteCommandArgs and NdbDatabaseLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigPostDeleteCommandInput` via:
//
//	NdbDatabaseLcmConfigPostDeleteCommandArgs{...}
type NdbDatabaseLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigPostDeleteCommandOutput() NdbDatabaseLcmConfigPostDeleteCommandOutput
	ToNdbDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbDatabaseLcmConfigPostDeleteCommandOutput
}

type NdbDatabaseLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigPostDeleteCommandArgs) ToNdbDatabaseLcmConfigPostDeleteCommandOutput() NdbDatabaseLcmConfigPostDeleteCommandOutput {
	return i.ToNdbDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigPostDeleteCommandArgs) ToNdbDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigPostDeleteCommandOutput)
}

// NdbDatabaseLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbDatabaseLcmConfigPostDeleteCommandArray and NdbDatabaseLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbDatabaseLcmConfigPostDeleteCommandArray{ NdbDatabaseLcmConfigPostDeleteCommandArgs{...} }
type NdbDatabaseLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseLcmConfigPostDeleteCommandArrayOutput
	ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseLcmConfigPostDeleteCommandArrayOutput
}

type NdbDatabaseLcmConfigPostDeleteCommandArray []NdbDatabaseLcmConfigPostDeleteCommandInput

func (NdbDatabaseLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigPostDeleteCommandArray) ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigPostDeleteCommandArray) ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

type NdbDatabaseLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigPostDeleteCommandOutput) ToNdbDatabaseLcmConfigPostDeleteCommandOutput() NdbDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseLcmConfigPostDeleteCommandOutput) ToNdbDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLcmConfigPostDeleteCommand {
		return vs[0].([]NdbDatabaseLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseLcmConfigPostDeleteCommandOutput)
}

type NdbDatabaseLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseLcmConfigPreDeleteCommandInput is an input type that accepts NdbDatabaseLcmConfigPreDeleteCommandArgs and NdbDatabaseLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigPreDeleteCommandInput` via:
//
//	NdbDatabaseLcmConfigPreDeleteCommandArgs{...}
type NdbDatabaseLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigPreDeleteCommandOutput() NdbDatabaseLcmConfigPreDeleteCommandOutput
	ToNdbDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbDatabaseLcmConfigPreDeleteCommandOutput
}

type NdbDatabaseLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigPreDeleteCommandArgs) ToNdbDatabaseLcmConfigPreDeleteCommandOutput() NdbDatabaseLcmConfigPreDeleteCommandOutput {
	return i.ToNdbDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigPreDeleteCommandArgs) ToNdbDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigPreDeleteCommandOutput)
}

// NdbDatabaseLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbDatabaseLcmConfigPreDeleteCommandArray and NdbDatabaseLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbDatabaseLcmConfigPreDeleteCommandArray{ NdbDatabaseLcmConfigPreDeleteCommandArgs{...} }
type NdbDatabaseLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseLcmConfigPreDeleteCommandArrayOutput
	ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseLcmConfigPreDeleteCommandArrayOutput
}

type NdbDatabaseLcmConfigPreDeleteCommandArray []NdbDatabaseLcmConfigPreDeleteCommandInput

func (NdbDatabaseLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigPreDeleteCommandArray) ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigPreDeleteCommandArray) ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

type NdbDatabaseLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigPreDeleteCommandOutput) ToNdbDatabaseLcmConfigPreDeleteCommandOutput() NdbDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseLcmConfigPreDeleteCommandOutput) ToNdbDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLcmConfigPreDeleteCommand {
		return vs[0].([]NdbDatabaseLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseLcmConfigPreDeleteCommandOutput)
}

type NdbDatabaseLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbDatabaseLcmConfigRefreshDetailArgs and NdbDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbDatabaseLcmConfigRefreshDetailArgs{...}
type NdbDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigRefreshDetailOutput() NdbDatabaseLcmConfigRefreshDetailOutput
	ToNdbDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbDatabaseLcmConfigRefreshDetailOutput
}

type NdbDatabaseLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigRefreshDetailArgs) ToNdbDatabaseLcmConfigRefreshDetailOutput() NdbDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigRefreshDetailArgs) ToNdbDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigRefreshDetailOutput)
}

// NdbDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbDatabaseLcmConfigRefreshDetailArray and NdbDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbDatabaseLcmConfigRefreshDetailArray{ NdbDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLcmConfigRefreshDetailArrayOutput() NdbDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbDatabaseLcmConfigRefreshDetailArray []NdbDatabaseLcmConfigRefreshDetailInput

func (NdbDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseLcmConfigRefreshDetailArray) ToNdbDatabaseLcmConfigRefreshDetailArrayOutput() NdbDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLcmConfigRefreshDetailArray) ToNdbDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) ToNdbDatabaseLcmConfigRefreshDetailOutput() NdbDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) ToNdbDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseLcmConfigRefreshDetailArrayOutput() NdbDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbDatabaseLcmConfigRefreshDetailOutput)
}

type NdbDatabaseLinkedDatabase struct {
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	DateCreated    *string `pulumi:"dateCreated"`
	DateModified   *string `pulumi:"dateModified"`
	// - (Optional) The description
	Description *string                         `pulumi:"description"`
	Id          *string                         `pulumi:"id"`
	Infos       []NdbDatabaseLinkedDatabaseInfo `pulumi:"infos"`
	Metric      map[string]string               `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name                   *string `pulumi:"name"`
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	Status                 *string `pulumi:"status"`
	Timezone               *string `pulumi:"timezone"`
}

// NdbDatabaseLinkedDatabaseInput is an input type that accepts NdbDatabaseLinkedDatabaseArgs and NdbDatabaseLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbDatabaseLinkedDatabaseInput` via:
//
//	NdbDatabaseLinkedDatabaseArgs{...}
type NdbDatabaseLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbDatabaseLinkedDatabaseOutput() NdbDatabaseLinkedDatabaseOutput
	ToNdbDatabaseLinkedDatabaseOutputWithContext(context.Context) NdbDatabaseLinkedDatabaseOutput
}

type NdbDatabaseLinkedDatabaseArgs struct {
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	DateCreated    pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified   pulumi.StringPtrInput `pulumi:"dateModified"`
	// - (Optional) The description
	Description pulumi.StringPtrInput                   `pulumi:"description"`
	Id          pulumi.StringPtrInput                   `pulumi:"id"`
	Infos       NdbDatabaseLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	Metric      pulumi.StringMapInput                   `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name                   pulumi.StringPtrInput `pulumi:"name"`
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	Status                 pulumi.StringPtrInput `pulumi:"status"`
	Timezone               pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbDatabaseLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseLinkedDatabaseArgs) ToNdbDatabaseLinkedDatabaseOutput() NdbDatabaseLinkedDatabaseOutput {
	return i.ToNdbDatabaseLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbDatabaseLinkedDatabaseArgs) ToNdbDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLinkedDatabaseOutput)
}

// NdbDatabaseLinkedDatabaseArrayInput is an input type that accepts NdbDatabaseLinkedDatabaseArray and NdbDatabaseLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLinkedDatabaseArrayInput` via:
//
//	NdbDatabaseLinkedDatabaseArray{ NdbDatabaseLinkedDatabaseArgs{...} }
type NdbDatabaseLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLinkedDatabaseArrayOutput() NdbDatabaseLinkedDatabaseArrayOutput
	ToNdbDatabaseLinkedDatabaseArrayOutputWithContext(context.Context) NdbDatabaseLinkedDatabaseArrayOutput
}

type NdbDatabaseLinkedDatabaseArray []NdbDatabaseLinkedDatabaseInput

func (NdbDatabaseLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseLinkedDatabaseArray) ToNdbDatabaseLinkedDatabaseArrayOutput() NdbDatabaseLinkedDatabaseArrayOutput {
	return i.ToNdbDatabaseLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLinkedDatabaseArray) ToNdbDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLinkedDatabaseArrayOutput)
}

type NdbDatabaseLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseLinkedDatabaseOutput) ToNdbDatabaseLinkedDatabaseOutput() NdbDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseOutput) ToNdbDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) Infos() NdbDatabaseLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) []NdbDatabaseLinkedDatabaseInfo { return v.Infos }).(NdbDatabaseLinkedDatabaseInfoArrayOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbDatabaseLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseLinkedDatabaseArrayOutput) ToNdbDatabaseLinkedDatabaseArrayOutput() NdbDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseArrayOutput) ToNdbDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLinkedDatabase {
		return vs[0].([]NdbDatabaseLinkedDatabase)[vs[1].(int)]
	}).(NdbDatabaseLinkedDatabaseOutput)
}

type NdbDatabaseLinkedDatabaseInfo struct {
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseLinkedDatabaseInfoInput is an input type that accepts NdbDatabaseLinkedDatabaseInfoArgs and NdbDatabaseLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseLinkedDatabaseInfoInput` via:
//
//	NdbDatabaseLinkedDatabaseInfoArgs{...}
type NdbDatabaseLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbDatabaseLinkedDatabaseInfoOutput() NdbDatabaseLinkedDatabaseInfoOutput
	ToNdbDatabaseLinkedDatabaseInfoOutputWithContext(context.Context) NdbDatabaseLinkedDatabaseInfoOutput
}

type NdbDatabaseLinkedDatabaseInfoArgs struct {
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseLinkedDatabaseInfoArgs) ToNdbDatabaseLinkedDatabaseInfoOutput() NdbDatabaseLinkedDatabaseInfoOutput {
	return i.ToNdbDatabaseLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseLinkedDatabaseInfoArgs) ToNdbDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLinkedDatabaseInfoOutput)
}

// NdbDatabaseLinkedDatabaseInfoArrayInput is an input type that accepts NdbDatabaseLinkedDatabaseInfoArray and NdbDatabaseLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseLinkedDatabaseInfoArrayInput` via:
//
//	NdbDatabaseLinkedDatabaseInfoArray{ NdbDatabaseLinkedDatabaseInfoArgs{...} }
type NdbDatabaseLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseLinkedDatabaseInfoArrayOutput() NdbDatabaseLinkedDatabaseInfoArrayOutput
	ToNdbDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbDatabaseLinkedDatabaseInfoArrayOutput
}

type NdbDatabaseLinkedDatabaseInfoArray []NdbDatabaseLinkedDatabaseInfoInput

func (NdbDatabaseLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseLinkedDatabaseInfoArray) ToNdbDatabaseLinkedDatabaseInfoArrayOutput() NdbDatabaseLinkedDatabaseInfoArrayOutput {
	return i.ToNdbDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseLinkedDatabaseInfoArray) ToNdbDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseLinkedDatabaseInfoArrayOutput)
}

type NdbDatabaseLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseLinkedDatabaseInfoOutput) ToNdbDatabaseLinkedDatabaseInfoOutput() NdbDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseInfoOutput) ToNdbDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseLinkedDatabaseInfoArrayOutput) ToNdbDatabaseLinkedDatabaseInfoArrayOutput() NdbDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseInfoArrayOutput) ToNdbDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseLinkedDatabaseInfo {
		return vs[0].([]NdbDatabaseLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbDatabaseLinkedDatabaseInfoOutput)
}

type NdbDatabaseMaintenanceTasks struct {
	MaintenanceWindowId *string                           `pulumi:"maintenanceWindowId"`
	Tasks               []NdbDatabaseMaintenanceTasksTask `pulumi:"tasks"`
}

// NdbDatabaseMaintenanceTasksInput is an input type that accepts NdbDatabaseMaintenanceTasksArgs and NdbDatabaseMaintenanceTasksOutput values.
// You can construct a concrete instance of `NdbDatabaseMaintenanceTasksInput` via:
//
//	NdbDatabaseMaintenanceTasksArgs{...}
type NdbDatabaseMaintenanceTasksInput interface {
	pulumi.Input

	ToNdbDatabaseMaintenanceTasksOutput() NdbDatabaseMaintenanceTasksOutput
	ToNdbDatabaseMaintenanceTasksOutputWithContext(context.Context) NdbDatabaseMaintenanceTasksOutput
}

type NdbDatabaseMaintenanceTasksArgs struct {
	MaintenanceWindowId pulumi.StringPtrInput                     `pulumi:"maintenanceWindowId"`
	Tasks               NdbDatabaseMaintenanceTasksTaskArrayInput `pulumi:"tasks"`
}

func (NdbDatabaseMaintenanceTasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseMaintenanceTasks)(nil)).Elem()
}

func (i NdbDatabaseMaintenanceTasksArgs) ToNdbDatabaseMaintenanceTasksOutput() NdbDatabaseMaintenanceTasksOutput {
	return i.ToNdbDatabaseMaintenanceTasksOutputWithContext(context.Background())
}

func (i NdbDatabaseMaintenanceTasksArgs) ToNdbDatabaseMaintenanceTasksOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseMaintenanceTasksOutput)
}

func (i NdbDatabaseMaintenanceTasksArgs) ToNdbDatabaseMaintenanceTasksPtrOutput() NdbDatabaseMaintenanceTasksPtrOutput {
	return i.ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i NdbDatabaseMaintenanceTasksArgs) ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseMaintenanceTasksOutput).ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(ctx)
}

// NdbDatabaseMaintenanceTasksPtrInput is an input type that accepts NdbDatabaseMaintenanceTasksArgs, NdbDatabaseMaintenanceTasksPtr and NdbDatabaseMaintenanceTasksPtrOutput values.
// You can construct a concrete instance of `NdbDatabaseMaintenanceTasksPtrInput` via:
//
//	        NdbDatabaseMaintenanceTasksArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseMaintenanceTasksPtrInput interface {
	pulumi.Input

	ToNdbDatabaseMaintenanceTasksPtrOutput() NdbDatabaseMaintenanceTasksPtrOutput
	ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(context.Context) NdbDatabaseMaintenanceTasksPtrOutput
}

type ndbDatabaseMaintenanceTasksPtrType NdbDatabaseMaintenanceTasksArgs

func NdbDatabaseMaintenanceTasksPtr(v *NdbDatabaseMaintenanceTasksArgs) NdbDatabaseMaintenanceTasksPtrInput {
	return (*ndbDatabaseMaintenanceTasksPtrType)(v)
}

func (*ndbDatabaseMaintenanceTasksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseMaintenanceTasks)(nil)).Elem()
}

func (i *ndbDatabaseMaintenanceTasksPtrType) ToNdbDatabaseMaintenanceTasksPtrOutput() NdbDatabaseMaintenanceTasksPtrOutput {
	return i.ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseMaintenanceTasksPtrType) ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseMaintenanceTasksPtrOutput)
}

type NdbDatabaseMaintenanceTasksOutput struct{ *pulumi.OutputState }

func (NdbDatabaseMaintenanceTasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseMaintenanceTasks)(nil)).Elem()
}

func (o NdbDatabaseMaintenanceTasksOutput) ToNdbDatabaseMaintenanceTasksOutput() NdbDatabaseMaintenanceTasksOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksOutput) ToNdbDatabaseMaintenanceTasksOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksOutput) ToNdbDatabaseMaintenanceTasksPtrOutput() NdbDatabaseMaintenanceTasksPtrOutput {
	return o.ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (o NdbDatabaseMaintenanceTasksOutput) ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseMaintenanceTasks) *NdbDatabaseMaintenanceTasks {
		return &v
	}).(NdbDatabaseMaintenanceTasksPtrOutput)
}

func (o NdbDatabaseMaintenanceTasksOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseMaintenanceTasks) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseMaintenanceTasksOutput) Tasks() NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseMaintenanceTasks) []NdbDatabaseMaintenanceTasksTask { return v.Tasks }).(NdbDatabaseMaintenanceTasksTaskArrayOutput)
}

type NdbDatabaseMaintenanceTasksPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseMaintenanceTasksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseMaintenanceTasks)(nil)).Elem()
}

func (o NdbDatabaseMaintenanceTasksPtrOutput) ToNdbDatabaseMaintenanceTasksPtrOutput() NdbDatabaseMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksPtrOutput) ToNdbDatabaseMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksPtrOutput) Elem() NdbDatabaseMaintenanceTasksOutput {
	return o.ApplyT(func(v *NdbDatabaseMaintenanceTasks) NdbDatabaseMaintenanceTasks {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseMaintenanceTasks
		return ret
	}).(NdbDatabaseMaintenanceTasksOutput)
}

func (o NdbDatabaseMaintenanceTasksPtrOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseMaintenanceTasks) *string {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowId
	}).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseMaintenanceTasksPtrOutput) Tasks() NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseMaintenanceTasks) []NdbDatabaseMaintenanceTasksTask {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(NdbDatabaseMaintenanceTasksTaskArrayOutput)
}

type NdbDatabaseMaintenanceTasksTask struct {
	PostCommand *string `pulumi:"postCommand"`
	PreCommand  *string `pulumi:"preCommand"`
	TaskType    *string `pulumi:"taskType"`
}

// NdbDatabaseMaintenanceTasksTaskInput is an input type that accepts NdbDatabaseMaintenanceTasksTaskArgs and NdbDatabaseMaintenanceTasksTaskOutput values.
// You can construct a concrete instance of `NdbDatabaseMaintenanceTasksTaskInput` via:
//
//	NdbDatabaseMaintenanceTasksTaskArgs{...}
type NdbDatabaseMaintenanceTasksTaskInput interface {
	pulumi.Input

	ToNdbDatabaseMaintenanceTasksTaskOutput() NdbDatabaseMaintenanceTasksTaskOutput
	ToNdbDatabaseMaintenanceTasksTaskOutputWithContext(context.Context) NdbDatabaseMaintenanceTasksTaskOutput
}

type NdbDatabaseMaintenanceTasksTaskArgs struct {
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	PreCommand  pulumi.StringPtrInput `pulumi:"preCommand"`
	TaskType    pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbDatabaseMaintenanceTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDatabaseMaintenanceTasksTaskArgs) ToNdbDatabaseMaintenanceTasksTaskOutput() NdbDatabaseMaintenanceTasksTaskOutput {
	return i.ToNdbDatabaseMaintenanceTasksTaskOutputWithContext(context.Background())
}

func (i NdbDatabaseMaintenanceTasksTaskArgs) ToNdbDatabaseMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseMaintenanceTasksTaskOutput)
}

// NdbDatabaseMaintenanceTasksTaskArrayInput is an input type that accepts NdbDatabaseMaintenanceTasksTaskArray and NdbDatabaseMaintenanceTasksTaskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseMaintenanceTasksTaskArrayInput` via:
//
//	NdbDatabaseMaintenanceTasksTaskArray{ NdbDatabaseMaintenanceTasksTaskArgs{...} }
type NdbDatabaseMaintenanceTasksTaskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseMaintenanceTasksTaskArrayOutput() NdbDatabaseMaintenanceTasksTaskArrayOutput
	ToNdbDatabaseMaintenanceTasksTaskArrayOutputWithContext(context.Context) NdbDatabaseMaintenanceTasksTaskArrayOutput
}

type NdbDatabaseMaintenanceTasksTaskArray []NdbDatabaseMaintenanceTasksTaskInput

func (NdbDatabaseMaintenanceTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDatabaseMaintenanceTasksTaskArray) ToNdbDatabaseMaintenanceTasksTaskArrayOutput() NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return i.ToNdbDatabaseMaintenanceTasksTaskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseMaintenanceTasksTaskArray) ToNdbDatabaseMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseMaintenanceTasksTaskArrayOutput)
}

type NdbDatabaseMaintenanceTasksTaskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseMaintenanceTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDatabaseMaintenanceTasksTaskOutput) ToNdbDatabaseMaintenanceTasksTaskOutput() NdbDatabaseMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksTaskOutput) ToNdbDatabaseMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksTaskOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseMaintenanceTasksTask) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseMaintenanceTasksTaskOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseMaintenanceTasksTask) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseMaintenanceTasksTaskOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseMaintenanceTasksTask) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbDatabaseMaintenanceTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseMaintenanceTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDatabaseMaintenanceTasksTaskArrayOutput) ToNdbDatabaseMaintenanceTasksTaskArrayOutput() NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksTaskArrayOutput) ToNdbDatabaseMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDatabaseMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDatabaseMaintenanceTasksTaskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseMaintenanceTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseMaintenanceTasksTask {
		return vs[0].([]NdbDatabaseMaintenanceTasksTask)[vs[1].(int)]
	}).(NdbDatabaseMaintenanceTasksTaskOutput)
}

type NdbDatabaseNode struct {
	// - (Optional) compute profile id
	Computeprofileid *string `pulumi:"computeprofileid"`
	// - (Optional) Database server ID required for existing VM
	Dbserverid *string `pulumi:"dbserverid"`
	// - (Optional) IP infos for custom network profile.
	IpInfos []NdbDatabaseNodeIpInfo `pulumi:"ipInfos"`
	// - (Required) network profile ID
	Networkprofileid *string `pulumi:"networkprofileid"`
	// - (Optional) cluster id.
	NxClusterId *string `pulumi:"nxClusterId"`
	// - (Optional) list of additional properties
	Properties []NdbDatabaseNodeProperty `pulumi:"properties"`
	// - (Required) name of vm
	Vmname string `pulumi:"vmname"`
}

// NdbDatabaseNodeInput is an input type that accepts NdbDatabaseNodeArgs and NdbDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbDatabaseNodeInput` via:
//
//	NdbDatabaseNodeArgs{...}
type NdbDatabaseNodeInput interface {
	pulumi.Input

	ToNdbDatabaseNodeOutput() NdbDatabaseNodeOutput
	ToNdbDatabaseNodeOutputWithContext(context.Context) NdbDatabaseNodeOutput
}

type NdbDatabaseNodeArgs struct {
	// - (Optional) compute profile id
	Computeprofileid pulumi.StringPtrInput `pulumi:"computeprofileid"`
	// - (Optional) Database server ID required for existing VM
	Dbserverid pulumi.StringPtrInput `pulumi:"dbserverid"`
	// - (Optional) IP infos for custom network profile.
	IpInfos NdbDatabaseNodeIpInfoArrayInput `pulumi:"ipInfos"`
	// - (Required) network profile ID
	Networkprofileid pulumi.StringPtrInput `pulumi:"networkprofileid"`
	// - (Optional) cluster id.
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	// - (Optional) list of additional properties
	Properties NdbDatabaseNodePropertyArrayInput `pulumi:"properties"`
	// - (Required) name of vm
	Vmname pulumi.StringInput `pulumi:"vmname"`
}

func (NdbDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseNodeArgs) ToNdbDatabaseNodeOutput() NdbDatabaseNodeOutput {
	return i.ToNdbDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbDatabaseNodeArgs) ToNdbDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodeOutput)
}

// NdbDatabaseNodeArrayInput is an input type that accepts NdbDatabaseNodeArray and NdbDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseNodeArrayInput` via:
//
//	NdbDatabaseNodeArray{ NdbDatabaseNodeArgs{...} }
type NdbDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbDatabaseNodeArrayOutput() NdbDatabaseNodeArrayOutput
	ToNdbDatabaseNodeArrayOutputWithContext(context.Context) NdbDatabaseNodeArrayOutput
}

type NdbDatabaseNodeArray []NdbDatabaseNodeInput

func (NdbDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseNodeArray) ToNdbDatabaseNodeArrayOutput() NdbDatabaseNodeArrayOutput {
	return i.ToNdbDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseNodeArray) ToNdbDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodeArrayOutput)
}

type NdbDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseNodeOutput) ToNdbDatabaseNodeOutput() NdbDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseNodeOutput) ToNdbDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseNodeOutput {
	return o
}

// - (Optional) compute profile id
func (o NdbDatabaseNodeOutput) Computeprofileid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseNode) *string { return v.Computeprofileid }).(pulumi.StringPtrOutput)
}

// - (Optional) Database server ID required for existing VM
func (o NdbDatabaseNodeOutput) Dbserverid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseNode) *string { return v.Dbserverid }).(pulumi.StringPtrOutput)
}

// - (Optional) IP infos for custom network profile.
func (o NdbDatabaseNodeOutput) IpInfos() NdbDatabaseNodeIpInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseNode) []NdbDatabaseNodeIpInfo { return v.IpInfos }).(NdbDatabaseNodeIpInfoArrayOutput)
}

// - (Required) network profile ID
func (o NdbDatabaseNodeOutput) Networkprofileid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseNode) *string { return v.Networkprofileid }).(pulumi.StringPtrOutput)
}

// - (Optional) cluster id.
func (o NdbDatabaseNodeOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseNode) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

// - (Optional) list of additional properties
func (o NdbDatabaseNodeOutput) Properties() NdbDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseNode) []NdbDatabaseNodeProperty { return v.Properties }).(NdbDatabaseNodePropertyArrayOutput)
}

// - (Required) name of vm
func (o NdbDatabaseNodeOutput) Vmname() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseNode) string { return v.Vmname }).(pulumi.StringOutput)
}

type NdbDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseNodeArrayOutput) ToNdbDatabaseNodeArrayOutput() NdbDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseNodeArrayOutput) ToNdbDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseNode {
		return vs[0].([]NdbDatabaseNode)[vs[1].(int)]
	}).(NdbDatabaseNodeOutput)
}

type NdbDatabaseNodeIpInfo struct {
	IpAddresses []string `pulumi:"ipAddresses"`
	IpType      *string  `pulumi:"ipType"`
}

// NdbDatabaseNodeIpInfoInput is an input type that accepts NdbDatabaseNodeIpInfoArgs and NdbDatabaseNodeIpInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseNodeIpInfoInput` via:
//
//	NdbDatabaseNodeIpInfoArgs{...}
type NdbDatabaseNodeIpInfoInput interface {
	pulumi.Input

	ToNdbDatabaseNodeIpInfoOutput() NdbDatabaseNodeIpInfoOutput
	ToNdbDatabaseNodeIpInfoOutputWithContext(context.Context) NdbDatabaseNodeIpInfoOutput
}

type NdbDatabaseNodeIpInfoArgs struct {
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	IpType      pulumi.StringPtrInput   `pulumi:"ipType"`
}

func (NdbDatabaseNodeIpInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNodeIpInfo)(nil)).Elem()
}

func (i NdbDatabaseNodeIpInfoArgs) ToNdbDatabaseNodeIpInfoOutput() NdbDatabaseNodeIpInfoOutput {
	return i.ToNdbDatabaseNodeIpInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseNodeIpInfoArgs) ToNdbDatabaseNodeIpInfoOutputWithContext(ctx context.Context) NdbDatabaseNodeIpInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodeIpInfoOutput)
}

// NdbDatabaseNodeIpInfoArrayInput is an input type that accepts NdbDatabaseNodeIpInfoArray and NdbDatabaseNodeIpInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseNodeIpInfoArrayInput` via:
//
//	NdbDatabaseNodeIpInfoArray{ NdbDatabaseNodeIpInfoArgs{...} }
type NdbDatabaseNodeIpInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseNodeIpInfoArrayOutput() NdbDatabaseNodeIpInfoArrayOutput
	ToNdbDatabaseNodeIpInfoArrayOutputWithContext(context.Context) NdbDatabaseNodeIpInfoArrayOutput
}

type NdbDatabaseNodeIpInfoArray []NdbDatabaseNodeIpInfoInput

func (NdbDatabaseNodeIpInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNodeIpInfo)(nil)).Elem()
}

func (i NdbDatabaseNodeIpInfoArray) ToNdbDatabaseNodeIpInfoArrayOutput() NdbDatabaseNodeIpInfoArrayOutput {
	return i.ToNdbDatabaseNodeIpInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseNodeIpInfoArray) ToNdbDatabaseNodeIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseNodeIpInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodeIpInfoArrayOutput)
}

type NdbDatabaseNodeIpInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodeIpInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNodeIpInfo)(nil)).Elem()
}

func (o NdbDatabaseNodeIpInfoOutput) ToNdbDatabaseNodeIpInfoOutput() NdbDatabaseNodeIpInfoOutput {
	return o
}

func (o NdbDatabaseNodeIpInfoOutput) ToNdbDatabaseNodeIpInfoOutputWithContext(ctx context.Context) NdbDatabaseNodeIpInfoOutput {
	return o
}

func (o NdbDatabaseNodeIpInfoOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseNodeIpInfo) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseNodeIpInfoOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseNodeIpInfo) *string { return v.IpType }).(pulumi.StringPtrOutput)
}

type NdbDatabaseNodeIpInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodeIpInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNodeIpInfo)(nil)).Elem()
}

func (o NdbDatabaseNodeIpInfoArrayOutput) ToNdbDatabaseNodeIpInfoArrayOutput() NdbDatabaseNodeIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseNodeIpInfoArrayOutput) ToNdbDatabaseNodeIpInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseNodeIpInfoArrayOutput {
	return o
}

func (o NdbDatabaseNodeIpInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseNodeIpInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseNodeIpInfo {
		return vs[0].([]NdbDatabaseNodeIpInfo)[vs[1].(int)]
	}).(NdbDatabaseNodeIpInfoOutput)
}

type NdbDatabaseNodeProperty struct {
	// - (Required) Name of the instance.
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// NdbDatabaseNodePropertyInput is an input type that accepts NdbDatabaseNodePropertyArgs and NdbDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseNodePropertyInput` via:
//
//	NdbDatabaseNodePropertyArgs{...}
type NdbDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseNodePropertyOutput() NdbDatabaseNodePropertyOutput
	ToNdbDatabaseNodePropertyOutputWithContext(context.Context) NdbDatabaseNodePropertyOutput
}

type NdbDatabaseNodePropertyArgs struct {
	// - (Required) Name of the instance.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NdbDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseNodePropertyArgs) ToNdbDatabaseNodePropertyOutput() NdbDatabaseNodePropertyOutput {
	return i.ToNdbDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseNodePropertyArgs) ToNdbDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodePropertyOutput)
}

// NdbDatabaseNodePropertyArrayInput is an input type that accepts NdbDatabaseNodePropertyArray and NdbDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseNodePropertyArrayInput` via:
//
//	NdbDatabaseNodePropertyArray{ NdbDatabaseNodePropertyArgs{...} }
type NdbDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseNodePropertyArrayOutput() NdbDatabaseNodePropertyArrayOutput
	ToNdbDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbDatabaseNodePropertyArrayOutput
}

type NdbDatabaseNodePropertyArray []NdbDatabaseNodePropertyInput

func (NdbDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseNodePropertyArray) ToNdbDatabaseNodePropertyArrayOutput() NdbDatabaseNodePropertyArrayOutput {
	return i.ToNdbDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseNodePropertyArray) ToNdbDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseNodePropertyArrayOutput)
}

type NdbDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseNodePropertyOutput) ToNdbDatabaseNodePropertyOutput() NdbDatabaseNodePropertyOutput {
	return o
}

func (o NdbDatabaseNodePropertyOutput) ToNdbDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseNodePropertyOutput {
	return o
}

// - (Required) Name of the instance.
func (o NdbDatabaseNodePropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseNodeProperty) string { return v.Name }).(pulumi.StringOutput)
}

func (o NdbDatabaseNodePropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseNodeProperty) string { return v.Value }).(pulumi.StringOutput)
}

type NdbDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseNodePropertyArrayOutput) ToNdbDatabaseNodePropertyArrayOutput() NdbDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseNodePropertyArrayOutput) ToNdbDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseNodeProperty {
		return vs[0].([]NdbDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbDatabaseNodePropertyOutput)
}

type NdbDatabasePostgresqlInfo struct {
	// - (Optional) allocate huge page. Default: false
	AllocatePgHugepage *bool `pulumi:"allocatePgHugepage"`
	// - (Optional) auth methods. Default: md5
	AuthMethod *string `pulumi:"authMethod"`
	// - (Optional) enable auto tuning of staging drive. Default: false
	AutoTuneStagingDrive *bool `pulumi:"autoTuneStagingDrive"`
	// - (Optional) if clustered database. Default: false
	ClusterDatabase *bool `pulumi:"clusterDatabase"`
	// - (Required) name of initial database to be created
	DatabaseNames string `pulumi:"databaseNames"`
	// - (Required) initial database size
	DatabaseSize string `pulumi:"databaseSize"`
	// - (Required) database instance password
	DbPassword string `pulumi:"dbPassword"`
	// - (Optional) High Availability instance
	HaInstance *NdbDatabasePostgresqlInfoHaInstance `pulumi:"haInstance"`
	// - (Required) listener port for database instance
	ListenerPort string `pulumi:"listenerPort"`
	// - (Optional) post instance create script
	PostCreateScript *string `pulumi:"postCreateScript"`
	// - (Optional) pre instance create script
	PreCreateScript *string `pulumi:"preCreateScript"`
}

// NdbDatabasePostgresqlInfoInput is an input type that accepts NdbDatabasePostgresqlInfoArgs and NdbDatabasePostgresqlInfoOutput values.
// You can construct a concrete instance of `NdbDatabasePostgresqlInfoInput` via:
//
//	NdbDatabasePostgresqlInfoArgs{...}
type NdbDatabasePostgresqlInfoInput interface {
	pulumi.Input

	ToNdbDatabasePostgresqlInfoOutput() NdbDatabasePostgresqlInfoOutput
	ToNdbDatabasePostgresqlInfoOutputWithContext(context.Context) NdbDatabasePostgresqlInfoOutput
}

type NdbDatabasePostgresqlInfoArgs struct {
	// - (Optional) allocate huge page. Default: false
	AllocatePgHugepage pulumi.BoolPtrInput `pulumi:"allocatePgHugepage"`
	// - (Optional) auth methods. Default: md5
	AuthMethod pulumi.StringPtrInput `pulumi:"authMethod"`
	// - (Optional) enable auto tuning of staging drive. Default: false
	AutoTuneStagingDrive pulumi.BoolPtrInput `pulumi:"autoTuneStagingDrive"`
	// - (Optional) if clustered database. Default: false
	ClusterDatabase pulumi.BoolPtrInput `pulumi:"clusterDatabase"`
	// - (Required) name of initial database to be created
	DatabaseNames pulumi.StringInput `pulumi:"databaseNames"`
	// - (Required) initial database size
	DatabaseSize pulumi.StringInput `pulumi:"databaseSize"`
	// - (Required) database instance password
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// - (Optional) High Availability instance
	HaInstance NdbDatabasePostgresqlInfoHaInstancePtrInput `pulumi:"haInstance"`
	// - (Required) listener port for database instance
	ListenerPort pulumi.StringInput `pulumi:"listenerPort"`
	// - (Optional) post instance create script
	PostCreateScript pulumi.StringPtrInput `pulumi:"postCreateScript"`
	// - (Optional) pre instance create script
	PreCreateScript pulumi.StringPtrInput `pulumi:"preCreateScript"`
}

func (NdbDatabasePostgresqlInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabasePostgresqlInfo)(nil)).Elem()
}

func (i NdbDatabasePostgresqlInfoArgs) ToNdbDatabasePostgresqlInfoOutput() NdbDatabasePostgresqlInfoOutput {
	return i.ToNdbDatabasePostgresqlInfoOutputWithContext(context.Background())
}

func (i NdbDatabasePostgresqlInfoArgs) ToNdbDatabasePostgresqlInfoOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoOutput)
}

func (i NdbDatabasePostgresqlInfoArgs) ToNdbDatabasePostgresqlInfoPtrOutput() NdbDatabasePostgresqlInfoPtrOutput {
	return i.ToNdbDatabasePostgresqlInfoPtrOutputWithContext(context.Background())
}

func (i NdbDatabasePostgresqlInfoArgs) ToNdbDatabasePostgresqlInfoPtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoOutput).ToNdbDatabasePostgresqlInfoPtrOutputWithContext(ctx)
}

// NdbDatabasePostgresqlInfoPtrInput is an input type that accepts NdbDatabasePostgresqlInfoArgs, NdbDatabasePostgresqlInfoPtr and NdbDatabasePostgresqlInfoPtrOutput values.
// You can construct a concrete instance of `NdbDatabasePostgresqlInfoPtrInput` via:
//
//	        NdbDatabasePostgresqlInfoArgs{...}
//
//	or:
//
//	        nil
type NdbDatabasePostgresqlInfoPtrInput interface {
	pulumi.Input

	ToNdbDatabasePostgresqlInfoPtrOutput() NdbDatabasePostgresqlInfoPtrOutput
	ToNdbDatabasePostgresqlInfoPtrOutputWithContext(context.Context) NdbDatabasePostgresqlInfoPtrOutput
}

type ndbDatabasePostgresqlInfoPtrType NdbDatabasePostgresqlInfoArgs

func NdbDatabasePostgresqlInfoPtr(v *NdbDatabasePostgresqlInfoArgs) NdbDatabasePostgresqlInfoPtrInput {
	return (*ndbDatabasePostgresqlInfoPtrType)(v)
}

func (*ndbDatabasePostgresqlInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabasePostgresqlInfo)(nil)).Elem()
}

func (i *ndbDatabasePostgresqlInfoPtrType) ToNdbDatabasePostgresqlInfoPtrOutput() NdbDatabasePostgresqlInfoPtrOutput {
	return i.ToNdbDatabasePostgresqlInfoPtrOutputWithContext(context.Background())
}

func (i *ndbDatabasePostgresqlInfoPtrType) ToNdbDatabasePostgresqlInfoPtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoPtrOutput)
}

type NdbDatabasePostgresqlInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabasePostgresqlInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabasePostgresqlInfo)(nil)).Elem()
}

func (o NdbDatabasePostgresqlInfoOutput) ToNdbDatabasePostgresqlInfoOutput() NdbDatabasePostgresqlInfoOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoOutput) ToNdbDatabasePostgresqlInfoOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoOutput) ToNdbDatabasePostgresqlInfoPtrOutput() NdbDatabasePostgresqlInfoPtrOutput {
	return o.ToNdbDatabasePostgresqlInfoPtrOutputWithContext(context.Background())
}

func (o NdbDatabasePostgresqlInfoOutput) ToNdbDatabasePostgresqlInfoPtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabasePostgresqlInfo) *NdbDatabasePostgresqlInfo {
		return &v
	}).(NdbDatabasePostgresqlInfoPtrOutput)
}

// - (Optional) allocate huge page. Default: false
func (o NdbDatabasePostgresqlInfoOutput) AllocatePgHugepage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *bool { return v.AllocatePgHugepage }).(pulumi.BoolPtrOutput)
}

// - (Optional) auth methods. Default: md5
func (o NdbDatabasePostgresqlInfoOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

// - (Optional) enable auto tuning of staging drive. Default: false
func (o NdbDatabasePostgresqlInfoOutput) AutoTuneStagingDrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *bool { return v.AutoTuneStagingDrive }).(pulumi.BoolPtrOutput)
}

// - (Optional) if clustered database. Default: false
func (o NdbDatabasePostgresqlInfoOutput) ClusterDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *bool { return v.ClusterDatabase }).(pulumi.BoolPtrOutput)
}

// - (Required) name of initial database to be created
func (o NdbDatabasePostgresqlInfoOutput) DatabaseNames() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) string { return v.DatabaseNames }).(pulumi.StringOutput)
}

// - (Required) initial database size
func (o NdbDatabasePostgresqlInfoOutput) DatabaseSize() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) string { return v.DatabaseSize }).(pulumi.StringOutput)
}

// - (Required) database instance password
func (o NdbDatabasePostgresqlInfoOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) string { return v.DbPassword }).(pulumi.StringOutput)
}

// - (Optional) High Availability instance
func (o NdbDatabasePostgresqlInfoOutput) HaInstance() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *NdbDatabasePostgresqlInfoHaInstance { return v.HaInstance }).(NdbDatabasePostgresqlInfoHaInstancePtrOutput)
}

// - (Required) listener port for database instance
func (o NdbDatabasePostgresqlInfoOutput) ListenerPort() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) string { return v.ListenerPort }).(pulumi.StringOutput)
}

// - (Optional) post instance create script
func (o NdbDatabasePostgresqlInfoOutput) PostCreateScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *string { return v.PostCreateScript }).(pulumi.StringPtrOutput)
}

// - (Optional) pre instance create script
func (o NdbDatabasePostgresqlInfoOutput) PreCreateScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfo) *string { return v.PreCreateScript }).(pulumi.StringPtrOutput)
}

type NdbDatabasePostgresqlInfoPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabasePostgresqlInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabasePostgresqlInfo)(nil)).Elem()
}

func (o NdbDatabasePostgresqlInfoPtrOutput) ToNdbDatabasePostgresqlInfoPtrOutput() NdbDatabasePostgresqlInfoPtrOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoPtrOutput) ToNdbDatabasePostgresqlInfoPtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoPtrOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoPtrOutput) Elem() NdbDatabasePostgresqlInfoOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) NdbDatabasePostgresqlInfo {
		if v != nil {
			return *v
		}
		var ret NdbDatabasePostgresqlInfo
		return ret
	}).(NdbDatabasePostgresqlInfoOutput)
}

// - (Optional) allocate huge page. Default: false
func (o NdbDatabasePostgresqlInfoPtrOutput) AllocatePgHugepage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *bool {
		if v == nil {
			return nil
		}
		return v.AllocatePgHugepage
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) auth methods. Default: md5
func (o NdbDatabasePostgresqlInfoPtrOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return v.AuthMethod
	}).(pulumi.StringPtrOutput)
}

// - (Optional) enable auto tuning of staging drive. Default: false
func (o NdbDatabasePostgresqlInfoPtrOutput) AutoTuneStagingDrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *bool {
		if v == nil {
			return nil
		}
		return v.AutoTuneStagingDrive
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) if clustered database. Default: false
func (o NdbDatabasePostgresqlInfoPtrOutput) ClusterDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ClusterDatabase
	}).(pulumi.BoolPtrOutput)
}

// - (Required) name of initial database to be created
func (o NdbDatabasePostgresqlInfoPtrOutput) DatabaseNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseNames
	}).(pulumi.StringPtrOutput)
}

// - (Required) initial database size
func (o NdbDatabasePostgresqlInfoPtrOutput) DatabaseSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseSize
	}).(pulumi.StringPtrOutput)
}

// - (Required) database instance password
func (o NdbDatabasePostgresqlInfoPtrOutput) DbPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DbPassword
	}).(pulumi.StringPtrOutput)
}

// - (Optional) High Availability instance
func (o NdbDatabasePostgresqlInfoPtrOutput) HaInstance() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *NdbDatabasePostgresqlInfoHaInstance {
		if v == nil {
			return nil
		}
		return v.HaInstance
	}).(NdbDatabasePostgresqlInfoHaInstancePtrOutput)
}

// - (Required) listener port for database instance
func (o NdbDatabasePostgresqlInfoPtrOutput) ListenerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ListenerPort
	}).(pulumi.StringPtrOutput)
}

// - (Optional) post instance create script
func (o NdbDatabasePostgresqlInfoPtrOutput) PostCreateScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return v.PostCreateScript
	}).(pulumi.StringPtrOutput)
}

// - (Optional) pre instance create script
func (o NdbDatabasePostgresqlInfoPtrOutput) PreCreateScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfo) *string {
		if v == nil {
			return nil
		}
		return v.PreCreateScript
	}).(pulumi.StringPtrOutput)
}

type NdbDatabasePostgresqlInfoHaInstance struct {
	// - (Optional) archive wal expire days. Default is set to -1
	ArchiveWalExpireDays *int `pulumi:"archiveWalExpireDays"`
	// - (Optional) backup policy for instance. Default is "primaryOnly"
	BackupPolicy       *string `pulumi:"backupPolicy"`
	ClusterDescription *string `pulumi:"clusterDescription"`
	// - (Required) cluster name
	ClusterName string `pulumi:"clusterName"`
	// - (Optional) HA proxy node. Default is set to false
	DeployHaproxy *bool `pulumi:"deployHaproxy"`
	// - (Optional) enable peer auth . Default is set to false.
	EnablePeerAuth *bool `pulumi:"enablePeerAuth"`
	// - (Optional) enable synchronous mode. Default is set to true
	EnableSynchronousMode *bool `pulumi:"enableSynchronousMode"`
	// - (Optional) failover mode of nodes.
	FailoverMode *string `pulumi:"failoverMode"`
	// - (Optional) node type of instance. Default is set to database
	NodeType *string `pulumi:"nodeType"`
	// - (Required) patroni cluster name
	PatroniClusterName string `pulumi:"patroniClusterName"`
	// - (Optional) provisional virtual ip. Default is set to true
	ProvisionVirtualIp *bool `pulumi:"provisionVirtualIp"`
	// -  (Required) proxy read port
	ProxyReadPort string `pulumi:"proxyReadPort"`
	// - (Required) proxy write port
	ProxyWritePort string `pulumi:"proxyWritePort"`
}

// NdbDatabasePostgresqlInfoHaInstanceInput is an input type that accepts NdbDatabasePostgresqlInfoHaInstanceArgs and NdbDatabasePostgresqlInfoHaInstanceOutput values.
// You can construct a concrete instance of `NdbDatabasePostgresqlInfoHaInstanceInput` via:
//
//	NdbDatabasePostgresqlInfoHaInstanceArgs{...}
type NdbDatabasePostgresqlInfoHaInstanceInput interface {
	pulumi.Input

	ToNdbDatabasePostgresqlInfoHaInstanceOutput() NdbDatabasePostgresqlInfoHaInstanceOutput
	ToNdbDatabasePostgresqlInfoHaInstanceOutputWithContext(context.Context) NdbDatabasePostgresqlInfoHaInstanceOutput
}

type NdbDatabasePostgresqlInfoHaInstanceArgs struct {
	// - (Optional) archive wal expire days. Default is set to -1
	ArchiveWalExpireDays pulumi.IntPtrInput `pulumi:"archiveWalExpireDays"`
	// - (Optional) backup policy for instance. Default is "primaryOnly"
	BackupPolicy       pulumi.StringPtrInput `pulumi:"backupPolicy"`
	ClusterDescription pulumi.StringPtrInput `pulumi:"clusterDescription"`
	// - (Required) cluster name
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// - (Optional) HA proxy node. Default is set to false
	DeployHaproxy pulumi.BoolPtrInput `pulumi:"deployHaproxy"`
	// - (Optional) enable peer auth . Default is set to false.
	EnablePeerAuth pulumi.BoolPtrInput `pulumi:"enablePeerAuth"`
	// - (Optional) enable synchronous mode. Default is set to true
	EnableSynchronousMode pulumi.BoolPtrInput `pulumi:"enableSynchronousMode"`
	// - (Optional) failover mode of nodes.
	FailoverMode pulumi.StringPtrInput `pulumi:"failoverMode"`
	// - (Optional) node type of instance. Default is set to database
	NodeType pulumi.StringPtrInput `pulumi:"nodeType"`
	// - (Required) patroni cluster name
	PatroniClusterName pulumi.StringInput `pulumi:"patroniClusterName"`
	// - (Optional) provisional virtual ip. Default is set to true
	ProvisionVirtualIp pulumi.BoolPtrInput `pulumi:"provisionVirtualIp"`
	// -  (Required) proxy read port
	ProxyReadPort pulumi.StringInput `pulumi:"proxyReadPort"`
	// - (Required) proxy write port
	ProxyWritePort pulumi.StringInput `pulumi:"proxyWritePort"`
}

func (NdbDatabasePostgresqlInfoHaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabasePostgresqlInfoHaInstance)(nil)).Elem()
}

func (i NdbDatabasePostgresqlInfoHaInstanceArgs) ToNdbDatabasePostgresqlInfoHaInstanceOutput() NdbDatabasePostgresqlInfoHaInstanceOutput {
	return i.ToNdbDatabasePostgresqlInfoHaInstanceOutputWithContext(context.Background())
}

func (i NdbDatabasePostgresqlInfoHaInstanceArgs) ToNdbDatabasePostgresqlInfoHaInstanceOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoHaInstanceOutput)
}

func (i NdbDatabasePostgresqlInfoHaInstanceArgs) ToNdbDatabasePostgresqlInfoHaInstancePtrOutput() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return i.ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(context.Background())
}

func (i NdbDatabasePostgresqlInfoHaInstanceArgs) ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoHaInstanceOutput).ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(ctx)
}

// NdbDatabasePostgresqlInfoHaInstancePtrInput is an input type that accepts NdbDatabasePostgresqlInfoHaInstanceArgs, NdbDatabasePostgresqlInfoHaInstancePtr and NdbDatabasePostgresqlInfoHaInstancePtrOutput values.
// You can construct a concrete instance of `NdbDatabasePostgresqlInfoHaInstancePtrInput` via:
//
//	        NdbDatabasePostgresqlInfoHaInstanceArgs{...}
//
//	or:
//
//	        nil
type NdbDatabasePostgresqlInfoHaInstancePtrInput interface {
	pulumi.Input

	ToNdbDatabasePostgresqlInfoHaInstancePtrOutput() NdbDatabasePostgresqlInfoHaInstancePtrOutput
	ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(context.Context) NdbDatabasePostgresqlInfoHaInstancePtrOutput
}

type ndbDatabasePostgresqlInfoHaInstancePtrType NdbDatabasePostgresqlInfoHaInstanceArgs

func NdbDatabasePostgresqlInfoHaInstancePtr(v *NdbDatabasePostgresqlInfoHaInstanceArgs) NdbDatabasePostgresqlInfoHaInstancePtrInput {
	return (*ndbDatabasePostgresqlInfoHaInstancePtrType)(v)
}

func (*ndbDatabasePostgresqlInfoHaInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabasePostgresqlInfoHaInstance)(nil)).Elem()
}

func (i *ndbDatabasePostgresqlInfoHaInstancePtrType) ToNdbDatabasePostgresqlInfoHaInstancePtrOutput() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return i.ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(context.Background())
}

func (i *ndbDatabasePostgresqlInfoHaInstancePtrType) ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePostgresqlInfoHaInstancePtrOutput)
}

type NdbDatabasePostgresqlInfoHaInstanceOutput struct{ *pulumi.OutputState }

func (NdbDatabasePostgresqlInfoHaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabasePostgresqlInfoHaInstance)(nil)).Elem()
}

func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ToNdbDatabasePostgresqlInfoHaInstanceOutput() NdbDatabasePostgresqlInfoHaInstanceOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ToNdbDatabasePostgresqlInfoHaInstanceOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstanceOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ToNdbDatabasePostgresqlInfoHaInstancePtrOutput() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o.ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(context.Background())
}

func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabasePostgresqlInfoHaInstance) *NdbDatabasePostgresqlInfoHaInstance {
		return &v
	}).(NdbDatabasePostgresqlInfoHaInstancePtrOutput)
}

// - (Optional) archive wal expire days. Default is set to -1
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ArchiveWalExpireDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *int { return v.ArchiveWalExpireDays }).(pulumi.IntPtrOutput)
}

// - (Optional) backup policy for instance. Default is "primaryOnly"
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) BackupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *string { return v.BackupPolicy }).(pulumi.StringPtrOutput)
}

func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ClusterDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *string { return v.ClusterDescription }).(pulumi.StringPtrOutput)
}

// - (Required) cluster name
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) string { return v.ClusterName }).(pulumi.StringOutput)
}

// - (Optional) HA proxy node. Default is set to false
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) DeployHaproxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *bool { return v.DeployHaproxy }).(pulumi.BoolPtrOutput)
}

// - (Optional) enable peer auth . Default is set to false.
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) EnablePeerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *bool { return v.EnablePeerAuth }).(pulumi.BoolPtrOutput)
}

// - (Optional) enable synchronous mode. Default is set to true
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) EnableSynchronousMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *bool { return v.EnableSynchronousMode }).(pulumi.BoolPtrOutput)
}

// - (Optional) failover mode of nodes.
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *string { return v.FailoverMode }).(pulumi.StringPtrOutput)
}

// - (Optional) node type of instance. Default is set to database
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *string { return v.NodeType }).(pulumi.StringPtrOutput)
}

// - (Required) patroni cluster name
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) PatroniClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) string { return v.PatroniClusterName }).(pulumi.StringOutput)
}

// - (Optional) provisional virtual ip. Default is set to true
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ProvisionVirtualIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) *bool { return v.ProvisionVirtualIp }).(pulumi.BoolPtrOutput)
}

// -  (Required) proxy read port
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ProxyReadPort() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) string { return v.ProxyReadPort }).(pulumi.StringOutput)
}

// - (Required) proxy write port
func (o NdbDatabasePostgresqlInfoHaInstanceOutput) ProxyWritePort() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabasePostgresqlInfoHaInstance) string { return v.ProxyWritePort }).(pulumi.StringOutput)
}

type NdbDatabasePostgresqlInfoHaInstancePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabasePostgresqlInfoHaInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabasePostgresqlInfoHaInstance)(nil)).Elem()
}

func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ToNdbDatabasePostgresqlInfoHaInstancePtrOutput() NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ToNdbDatabasePostgresqlInfoHaInstancePtrOutputWithContext(ctx context.Context) NdbDatabasePostgresqlInfoHaInstancePtrOutput {
	return o
}

func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) Elem() NdbDatabasePostgresqlInfoHaInstanceOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) NdbDatabasePostgresqlInfoHaInstance {
		if v != nil {
			return *v
		}
		var ret NdbDatabasePostgresqlInfoHaInstance
		return ret
	}).(NdbDatabasePostgresqlInfoHaInstanceOutput)
}

// - (Optional) archive wal expire days. Default is set to -1
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ArchiveWalExpireDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *int {
		if v == nil {
			return nil
		}
		return v.ArchiveWalExpireDays
	}).(pulumi.IntPtrOutput)
}

// - (Optional) backup policy for instance. Default is "primaryOnly"
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) BackupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return v.BackupPolicy
	}).(pulumi.StringPtrOutput)
}

func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ClusterDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDescription
	}).(pulumi.StringPtrOutput)
}

// - (Required) cluster name
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

// - (Optional) HA proxy node. Default is set to false
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) DeployHaproxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *bool {
		if v == nil {
			return nil
		}
		return v.DeployHaproxy
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) enable peer auth . Default is set to false.
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) EnablePeerAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePeerAuth
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) enable synchronous mode. Default is set to true
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) EnableSynchronousMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSynchronousMode
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) failover mode of nodes.
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) FailoverMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return v.FailoverMode
	}).(pulumi.StringPtrOutput)
}

// - (Optional) node type of instance. Default is set to database
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return v.NodeType
	}).(pulumi.StringPtrOutput)
}

// - (Required) patroni cluster name
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) PatroniClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return &v.PatroniClusterName
	}).(pulumi.StringPtrOutput)
}

// - (Optional) provisional virtual ip. Default is set to true
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ProvisionVirtualIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVirtualIp
	}).(pulumi.BoolPtrOutput)
}

// -  (Required) proxy read port
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ProxyReadPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return &v.ProxyReadPort
	}).(pulumi.StringPtrOutput)
}

// - (Required) proxy write port
func (o NdbDatabasePostgresqlInfoHaInstancePtrOutput) ProxyWritePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabasePostgresqlInfoHaInstance) *string {
		if v == nil {
			return nil
		}
		return &v.ProxyWritePort
	}).(pulumi.StringPtrOutput)
}

type NdbDatabaseProperty struct {
	// - (Required) Name of the instance.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbDatabasePropertyInput is an input type that accepts NdbDatabasePropertyArgs and NdbDatabasePropertyOutput values.
// You can construct a concrete instance of `NdbDatabasePropertyInput` via:
//
//	NdbDatabasePropertyArgs{...}
type NdbDatabasePropertyInput interface {
	pulumi.Input

	ToNdbDatabasePropertyOutput() NdbDatabasePropertyOutput
	ToNdbDatabasePropertyOutputWithContext(context.Context) NdbDatabasePropertyOutput
}

type NdbDatabasePropertyArgs struct {
	// - (Required) Name of the instance.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabasePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseProperty)(nil)).Elem()
}

func (i NdbDatabasePropertyArgs) ToNdbDatabasePropertyOutput() NdbDatabasePropertyOutput {
	return i.ToNdbDatabasePropertyOutputWithContext(context.Background())
}

func (i NdbDatabasePropertyArgs) ToNdbDatabasePropertyOutputWithContext(ctx context.Context) NdbDatabasePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePropertyOutput)
}

// NdbDatabasePropertyArrayInput is an input type that accepts NdbDatabasePropertyArray and NdbDatabasePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabasePropertyArrayInput` via:
//
//	NdbDatabasePropertyArray{ NdbDatabasePropertyArgs{...} }
type NdbDatabasePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabasePropertyArrayOutput() NdbDatabasePropertyArrayOutput
	ToNdbDatabasePropertyArrayOutputWithContext(context.Context) NdbDatabasePropertyArrayOutput
}

type NdbDatabasePropertyArray []NdbDatabasePropertyInput

func (NdbDatabasePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseProperty)(nil)).Elem()
}

func (i NdbDatabasePropertyArray) ToNdbDatabasePropertyArrayOutput() NdbDatabasePropertyArrayOutput {
	return i.ToNdbDatabasePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabasePropertyArray) ToNdbDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbDatabasePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabasePropertyArrayOutput)
}

type NdbDatabasePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabasePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseProperty)(nil)).Elem()
}

func (o NdbDatabasePropertyOutput) ToNdbDatabasePropertyOutput() NdbDatabasePropertyOutput {
	return o
}

func (o NdbDatabasePropertyOutput) ToNdbDatabasePropertyOutputWithContext(ctx context.Context) NdbDatabasePropertyOutput {
	return o
}

// - (Required) Name of the instance.
func (o NdbDatabasePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabasePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabasePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabasePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseProperty)(nil)).Elem()
}

func (o NdbDatabasePropertyArrayOutput) ToNdbDatabasePropertyArrayOutput() NdbDatabasePropertyArrayOutput {
	return o
}

func (o NdbDatabasePropertyArrayOutput) ToNdbDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbDatabasePropertyArrayOutput {
	return o
}

func (o NdbDatabasePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabasePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseProperty {
		return vs[0].([]NdbDatabaseProperty)[vs[1].(int)]
	}).(NdbDatabasePropertyOutput)
}

type NdbDatabaseRestoreDatabaseNode struct {
	AccessLevel map[string]string `pulumi:"accessLevel"`
	// database id
	DatabaseId     *string `pulumi:"databaseId"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbDatabaseRestoreDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbDatabaseRestoreDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                          `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbDatabaseRestoreDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                          `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseRestoreDatabaseNodeTag `pulumi:"tags"`
}

// NdbDatabaseRestoreDatabaseNodeInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeArgs and NdbDatabaseRestoreDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeArgs{...}
type NdbDatabaseRestoreDatabaseNodeInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeOutput() NdbDatabaseRestoreDatabaseNodeOutput
	ToNdbDatabaseRestoreDatabaseNodeOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeOutput
}

type NdbDatabaseRestoreDatabaseNodeArgs struct {
	AccessLevel pulumi.StringMapInput `pulumi:"accessLevel"`
	// database id
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbDatabaseRestoreDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbDatabaseRestoreDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                    `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                    `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseRestoreDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbDatabaseRestoreDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeArgs) ToNdbDatabaseRestoreDatabaseNodeOutput() NdbDatabaseRestoreDatabaseNodeOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeArgs) ToNdbDatabaseRestoreDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeOutput)
}

// NdbDatabaseRestoreDatabaseNodeArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeArray and NdbDatabaseRestoreDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeArray{ NdbDatabaseRestoreDatabaseNodeArgs{...} }
type NdbDatabaseRestoreDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeArrayOutput() NdbDatabaseRestoreDatabaseNodeArrayOutput
	ToNdbDatabaseRestoreDatabaseNodeArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeArrayOutput
}

type NdbDatabaseRestoreDatabaseNodeArray []NdbDatabaseRestoreDatabaseNodeInput

func (NdbDatabaseRestoreDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeArray) ToNdbDatabaseRestoreDatabaseNodeArrayOutput() NdbDatabaseRestoreDatabaseNodeArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeArray) ToNdbDatabaseRestoreDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) ToNdbDatabaseRestoreDatabaseNodeOutput() NdbDatabaseRestoreDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) ToNdbDatabaseRestoreDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

// database id
func (o NdbDatabaseRestoreDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) Infos() NdbDatabaseRestoreDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) []NdbDatabaseRestoreDatabaseNodeInfo { return v.Infos }).(NdbDatabaseRestoreDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbDatabaseRestoreDatabaseNodeOutput) Properties() NdbDatabaseRestoreDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) []NdbDatabaseRestoreDatabaseNodeProperty { return v.Properties }).(NdbDatabaseRestoreDatabaseNodePropertyArrayOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) ProtectionDomains() NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) []NdbDatabaseRestoreDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbDatabaseRestoreDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbDatabaseRestoreDatabaseNodeOutput) Tags() NdbDatabaseRestoreDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNode) []NdbDatabaseRestoreDatabaseNodeTag { return v.Tags }).(NdbDatabaseRestoreDatabaseNodeTagArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeArrayOutput) ToNdbDatabaseRestoreDatabaseNodeArrayOutput() NdbDatabaseRestoreDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeArrayOutput) ToNdbDatabaseRestoreDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNode {
		return vs[0].([]NdbDatabaseRestoreDatabaseNode)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodeOutput)
}

type NdbDatabaseRestoreDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseRestoreDatabaseNodeInfoInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeInfoArgs and NdbDatabaseRestoreDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeInfoInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeInfoArgs{...}
type NdbDatabaseRestoreDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeInfoOutput() NdbDatabaseRestoreDatabaseNodeInfoOutput
	ToNdbDatabaseRestoreDatabaseNodeInfoOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeInfoOutput
}

type NdbDatabaseRestoreDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseRestoreDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeInfoArgs) ToNdbDatabaseRestoreDatabaseNodeInfoOutput() NdbDatabaseRestoreDatabaseNodeInfoOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeInfoArgs) ToNdbDatabaseRestoreDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeInfoOutput)
}

// NdbDatabaseRestoreDatabaseNodeInfoArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeInfoArray and NdbDatabaseRestoreDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeInfoArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeInfoArray{ NdbDatabaseRestoreDatabaseNodeInfoArgs{...} }
type NdbDatabaseRestoreDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutput() NdbDatabaseRestoreDatabaseNodeInfoArrayOutput
	ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeInfoArrayOutput
}

type NdbDatabaseRestoreDatabaseNodeInfoArray []NdbDatabaseRestoreDatabaseNodeInfoInput

func (NdbDatabaseRestoreDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeInfoArray) ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutput() NdbDatabaseRestoreDatabaseNodeInfoArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeInfoArray) ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeInfoArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeInfoOutput) ToNdbDatabaseRestoreDatabaseNodeInfoOutput() NdbDatabaseRestoreDatabaseNodeInfoOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeInfoOutput) ToNdbDatabaseRestoreDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbDatabaseRestoreDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseRestoreDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeInfoArrayOutput) ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutput() NdbDatabaseRestoreDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeInfoArrayOutput) ToNdbDatabaseRestoreDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNodeInfo {
		return vs[0].([]NdbDatabaseRestoreDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodeInfoOutput)
}

type NdbDatabaseRestoreDatabaseNodeProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseRestoreDatabaseNodePropertyInput is an input type that accepts NdbDatabaseRestoreDatabaseNodePropertyArgs and NdbDatabaseRestoreDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodePropertyInput` via:
//
//	NdbDatabaseRestoreDatabaseNodePropertyArgs{...}
type NdbDatabaseRestoreDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodePropertyOutput() NdbDatabaseRestoreDatabaseNodePropertyOutput
	ToNdbDatabaseRestoreDatabaseNodePropertyOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodePropertyOutput
}

type NdbDatabaseRestoreDatabaseNodePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodePropertyArgs) ToNdbDatabaseRestoreDatabaseNodePropertyOutput() NdbDatabaseRestoreDatabaseNodePropertyOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodePropertyArgs) ToNdbDatabaseRestoreDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodePropertyOutput)
}

// NdbDatabaseRestoreDatabaseNodePropertyArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodePropertyArray and NdbDatabaseRestoreDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodePropertyArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodePropertyArray{ NdbDatabaseRestoreDatabaseNodePropertyArgs{...} }
type NdbDatabaseRestoreDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutput() NdbDatabaseRestoreDatabaseNodePropertyArrayOutput
	ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodePropertyArrayOutput
}

type NdbDatabaseRestoreDatabaseNodePropertyArray []NdbDatabaseRestoreDatabaseNodePropertyInput

func (NdbDatabaseRestoreDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodePropertyArray) ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutput() NdbDatabaseRestoreDatabaseNodePropertyArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodePropertyArray) ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodePropertyArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) ToNdbDatabaseRestoreDatabaseNodePropertyOutput() NdbDatabaseRestoreDatabaseNodePropertyOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) ToNdbDatabaseRestoreDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodePropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodePropertyArrayOutput) ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutput() NdbDatabaseRestoreDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodePropertyArrayOutput) ToNdbDatabaseRestoreDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNodeProperty {
		return vs[0].([]NdbDatabaseRestoreDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodePropertyOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbDatabaseRestoreDatabaseNodeProtectionDomainInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs and NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeProtectionDomainInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs{...}
type NdbDatabaseRestoreDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput
	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput)
}

// NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeProtectionDomainArray and NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeProtectionDomainArray{ NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs{...} }
type NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput
	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainArray []NdbDatabaseRestoreDatabaseNodeProtectionDomainInput

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainArray) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainArray) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Properties() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) []NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNodeProtectionDomain {
		return vs[0].([]NdbDatabaseRestoreDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs and NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput
	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray and NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray{ NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray []NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyInput

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbDatabaseRestoreDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbDatabaseRestoreDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseRestoreDatabaseNodeTagInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeTagArgs and NdbDatabaseRestoreDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeTagInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeTagArgs{...}
type NdbDatabaseRestoreDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeTagOutput() NdbDatabaseRestoreDatabaseNodeTagOutput
	ToNdbDatabaseRestoreDatabaseNodeTagOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeTagOutput
}

type NdbDatabaseRestoreDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeTagArgs) ToNdbDatabaseRestoreDatabaseNodeTagOutput() NdbDatabaseRestoreDatabaseNodeTagOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeTagArgs) ToNdbDatabaseRestoreDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeTagOutput)
}

// NdbDatabaseRestoreDatabaseNodeTagArrayInput is an input type that accepts NdbDatabaseRestoreDatabaseNodeTagArray and NdbDatabaseRestoreDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreDatabaseNodeTagArrayInput` via:
//
//	NdbDatabaseRestoreDatabaseNodeTagArray{ NdbDatabaseRestoreDatabaseNodeTagArgs{...} }
type NdbDatabaseRestoreDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreDatabaseNodeTagArrayOutput() NdbDatabaseRestoreDatabaseNodeTagArrayOutput
	ToNdbDatabaseRestoreDatabaseNodeTagArrayOutputWithContext(context.Context) NdbDatabaseRestoreDatabaseNodeTagArrayOutput
}

type NdbDatabaseRestoreDatabaseNodeTagArray []NdbDatabaseRestoreDatabaseNodeTagInput

func (NdbDatabaseRestoreDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreDatabaseNodeTagArray) ToNdbDatabaseRestoreDatabaseNodeTagArrayOutput() NdbDatabaseRestoreDatabaseNodeTagArrayOutput {
	return i.ToNdbDatabaseRestoreDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreDatabaseNodeTagArray) ToNdbDatabaseRestoreDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreDatabaseNodeTagArrayOutput)
}

type NdbDatabaseRestoreDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) ToNdbDatabaseRestoreDatabaseNodeTagOutput() NdbDatabaseRestoreDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) ToNdbDatabaseRestoreDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreDatabaseNodeTagArrayOutput) ToNdbDatabaseRestoreDatabaseNodeTagArrayOutput() NdbDatabaseRestoreDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeTagArrayOutput) ToNdbDatabaseRestoreDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreDatabaseNodeTag {
		return vs[0].([]NdbDatabaseRestoreDatabaseNodeTag)[vs[1].(int)]
	}).(NdbDatabaseRestoreDatabaseNodeTagOutput)
}

type NdbDatabaseRestoreInfo struct {
	BpgConfigs []NdbDatabaseRestoreInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string                 `pulumi:"secureInfo"`
}

// NdbDatabaseRestoreInfoInput is an input type that accepts NdbDatabaseRestoreInfoArgs and NdbDatabaseRestoreInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoInput` via:
//
//	NdbDatabaseRestoreInfoArgs{...}
type NdbDatabaseRestoreInfoInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoOutput() NdbDatabaseRestoreInfoOutput
	ToNdbDatabaseRestoreInfoOutputWithContext(context.Context) NdbDatabaseRestoreInfoOutput
}

type NdbDatabaseRestoreInfoArgs struct {
	BpgConfigs NdbDatabaseRestoreInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                     `pulumi:"secureInfo"`
}

func (NdbDatabaseRestoreInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoArgs) ToNdbDatabaseRestoreInfoOutput() NdbDatabaseRestoreInfoOutput {
	return i.ToNdbDatabaseRestoreInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoArgs) ToNdbDatabaseRestoreInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoOutput)
}

// NdbDatabaseRestoreInfoArrayInput is an input type that accepts NdbDatabaseRestoreInfoArray and NdbDatabaseRestoreInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoArrayInput` via:
//
//	NdbDatabaseRestoreInfoArray{ NdbDatabaseRestoreInfoArgs{...} }
type NdbDatabaseRestoreInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoArrayOutput() NdbDatabaseRestoreInfoArrayOutput
	ToNdbDatabaseRestoreInfoArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoArrayOutput
}

type NdbDatabaseRestoreInfoArray []NdbDatabaseRestoreInfoInput

func (NdbDatabaseRestoreInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoArray) ToNdbDatabaseRestoreInfoArrayOutput() NdbDatabaseRestoreInfoArrayOutput {
	return i.ToNdbDatabaseRestoreInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoArray) ToNdbDatabaseRestoreInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoArrayOutput)
}

type NdbDatabaseRestoreInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoOutput) ToNdbDatabaseRestoreInfoOutput() NdbDatabaseRestoreInfoOutput {
	return o
}

func (o NdbDatabaseRestoreInfoOutput) ToNdbDatabaseRestoreInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoOutput {
	return o
}

func (o NdbDatabaseRestoreInfoOutput) BpgConfigs() NdbDatabaseRestoreInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfo) []NdbDatabaseRestoreInfoBpgConfig { return v.BpgConfigs }).(NdbDatabaseRestoreInfoBpgConfigArrayOutput)
}

func (o NdbDatabaseRestoreInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseRestoreInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoArrayOutput) ToNdbDatabaseRestoreInfoArrayOutput() NdbDatabaseRestoreInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoArrayOutput) ToNdbDatabaseRestoreInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfo {
		return vs[0].([]NdbDatabaseRestoreInfo)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoOutput)
}

type NdbDatabaseRestoreInfoBpgConfig struct {
	BpgDbParams  []NdbDatabaseRestoreInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbDatabaseRestoreInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbDatabaseRestoreInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbDatabaseRestoreInfoBpgConfigInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigArgs and NdbDatabaseRestoreInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigArgs{...}
type NdbDatabaseRestoreInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigOutput() NdbDatabaseRestoreInfoBpgConfigOutput
	ToNdbDatabaseRestoreInfoBpgConfigOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigOutput
}

type NdbDatabaseRestoreInfoBpgConfigArgs struct {
	BpgDbParams  NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbDatabaseRestoreInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbDatabaseRestoreInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigArgs) ToNdbDatabaseRestoreInfoBpgConfigOutput() NdbDatabaseRestoreInfoBpgConfigOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigArgs) ToNdbDatabaseRestoreInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigOutput)
}

// NdbDatabaseRestoreInfoBpgConfigArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigArray and NdbDatabaseRestoreInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigArray{ NdbDatabaseRestoreInfoBpgConfigArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigArrayOutput() NdbDatabaseRestoreInfoBpgConfigArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigArray []NdbDatabaseRestoreInfoBpgConfigInput

func (NdbDatabaseRestoreInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigArray) ToNdbDatabaseRestoreInfoBpgConfigArrayOutput() NdbDatabaseRestoreInfoBpgConfigArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigArray) ToNdbDatabaseRestoreInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigOutput) ToNdbDatabaseRestoreInfoBpgConfigOutput() NdbDatabaseRestoreInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigOutput) ToNdbDatabaseRestoreInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigOutput) BpgDbParams() NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfig) []NdbDatabaseRestoreInfoBpgConfigBpgDbParam {
		return v.BpgDbParams
	}).(NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigOutput) Storages() NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfig) []NdbDatabaseRestoreInfoBpgConfigStorage { return v.Storages }).(NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigOutput) VmProperties() NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfig) []NdbDatabaseRestoreInfoBpgConfigVmProperty {
		return v.VmProperties
	}).(NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigArrayOutput() NdbDatabaseRestoreInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfig {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfig)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigOutput)
}

type NdbDatabaseRestoreInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbDatabaseRestoreInfoBpgConfigBpgDbParamInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs and NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigBpgDbParamInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs{...}
type NdbDatabaseRestoreInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput
	ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput
}

type NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput)
}

// NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray and NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray{ NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray []NdbDatabaseRestoreInfoBpgConfigBpgDbParamInput

func (NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorage struct {
	ArchiveStorages []NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbDatabaseRestoreInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbDatabaseRestoreInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbDatabaseRestoreInfoBpgConfigStorageInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageArgs and NdbDatabaseRestoreInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageArgs{...}
type NdbDatabaseRestoreInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbDatabaseRestoreInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageOutput)
}

// NdbDatabaseRestoreInfoBpgConfigStorageArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageArray and NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageArray{ NdbDatabaseRestoreInfoBpgConfigStorageArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageArray []NdbDatabaseRestoreInfoBpgConfigStorageInput

func (NdbDatabaseRestoreInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArray) ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArray) ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageOutput) ArchiveStorages() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorage) []NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageOutput) DataDisks() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorage) []NdbDatabaseRestoreInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageOutput) LogDisks() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorage) []NdbDatabaseRestoreInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigStorage {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigStorageOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs and NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray and NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray{ NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray []NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageInput

func (NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbDatabaseRestoreInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs and NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs{...}
type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput)
}

// NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray and NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray{ NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray []NdbDatabaseRestoreInfoBpgConfigStorageDataDiskInput

func (NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbDatabaseRestoreInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs and NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs{...}
type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput)
}

// NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray and NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray{ NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray []NdbDatabaseRestoreInfoBpgConfigStorageLogDiskInput

func (NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput)
}

type NdbDatabaseRestoreInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbDatabaseRestoreInfoBpgConfigVmPropertyInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs and NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigVmPropertyInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs{...}
type NdbDatabaseRestoreInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput
	ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput
}

type NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput)
}

// NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbDatabaseRestoreInfoBpgConfigVmPropertyArray and NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbDatabaseRestoreInfoBpgConfigVmPropertyArray{ NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs{...} }
type NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput
	ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput
}

type NdbDatabaseRestoreInfoBpgConfigVmPropertyArray []NdbDatabaseRestoreInfoBpgConfigVmPropertyInput

func (NdbDatabaseRestoreInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreInfoBpgConfigVmPropertyArray) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreInfoBpgConfigVmPropertyArray) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreInfoBpgConfigVmProperty {
		return vs[0].([]NdbDatabaseRestoreInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput)
}

type NdbDatabaseRestoreLcmConfig struct {
	ExpiryDetails      []NdbDatabaseRestoreLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbDatabaseRestoreLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbDatabaseRestoreLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbDatabaseRestoreLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbDatabaseRestoreLcmConfigInput is an input type that accepts NdbDatabaseRestoreLcmConfigArgs and NdbDatabaseRestoreLcmConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigInput` via:
//
//	NdbDatabaseRestoreLcmConfigArgs{...}
type NdbDatabaseRestoreLcmConfigInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigOutput() NdbDatabaseRestoreLcmConfigOutput
	ToNdbDatabaseRestoreLcmConfigOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigOutput
}

type NdbDatabaseRestoreLcmConfigArgs struct {
	ExpiryDetails      NdbDatabaseRestoreLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbDatabaseRestoreLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbDatabaseRestoreLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigArgs) ToNdbDatabaseRestoreLcmConfigOutput() NdbDatabaseRestoreLcmConfigOutput {
	return i.ToNdbDatabaseRestoreLcmConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigArgs) ToNdbDatabaseRestoreLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigOutput)
}

// NdbDatabaseRestoreLcmConfigArrayInput is an input type that accepts NdbDatabaseRestoreLcmConfigArray and NdbDatabaseRestoreLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigArrayInput` via:
//
//	NdbDatabaseRestoreLcmConfigArray{ NdbDatabaseRestoreLcmConfigArgs{...} }
type NdbDatabaseRestoreLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigArrayOutput() NdbDatabaseRestoreLcmConfigArrayOutput
	ToNdbDatabaseRestoreLcmConfigArrayOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigArrayOutput
}

type NdbDatabaseRestoreLcmConfigArray []NdbDatabaseRestoreLcmConfigInput

func (NdbDatabaseRestoreLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigArray) ToNdbDatabaseRestoreLcmConfigArrayOutput() NdbDatabaseRestoreLcmConfigArrayOutput {
	return i.ToNdbDatabaseRestoreLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigArray) ToNdbDatabaseRestoreLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigArrayOutput)
}

type NdbDatabaseRestoreLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigOutput) ToNdbDatabaseRestoreLcmConfigOutput() NdbDatabaseRestoreLcmConfigOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigOutput) ToNdbDatabaseRestoreLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigOutput) ExpiryDetails() NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfig) []NdbDatabaseRestoreLcmConfigExpiryDetail { return v.ExpiryDetails }).(NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput)
}

func (o NdbDatabaseRestoreLcmConfigOutput) PostDeleteCommands() NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfig) []NdbDatabaseRestoreLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbDatabaseRestoreLcmConfigOutput) PreDeleteCommands() NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfig) []NdbDatabaseRestoreLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbDatabaseRestoreLcmConfigOutput) RefreshDetails() NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfig) []NdbDatabaseRestoreLcmConfigRefreshDetail {
		return v.RefreshDetails
	}).(NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseRestoreLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigArrayOutput) ToNdbDatabaseRestoreLcmConfigArrayOutput() NdbDatabaseRestoreLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigArrayOutput) ToNdbDatabaseRestoreLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLcmConfig {
		return vs[0].([]NdbDatabaseRestoreLcmConfig)[vs[1].(int)]
	}).(NdbDatabaseRestoreLcmConfigOutput)
}

type NdbDatabaseRestoreLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbDatabaseRestoreLcmConfigExpiryDetailInput is an input type that accepts NdbDatabaseRestoreLcmConfigExpiryDetailArgs and NdbDatabaseRestoreLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigExpiryDetailInput` via:
//
//	NdbDatabaseRestoreLcmConfigExpiryDetailArgs{...}
type NdbDatabaseRestoreLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigExpiryDetailOutput() NdbDatabaseRestoreLcmConfigExpiryDetailOutput
	ToNdbDatabaseRestoreLcmConfigExpiryDetailOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailOutput
}

type NdbDatabaseRestoreLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbDatabaseRestoreLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigExpiryDetailArgs) ToNdbDatabaseRestoreLcmConfigExpiryDetailOutput() NdbDatabaseRestoreLcmConfigExpiryDetailOutput {
	return i.ToNdbDatabaseRestoreLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigExpiryDetailArgs) ToNdbDatabaseRestoreLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigExpiryDetailOutput)
}

// NdbDatabaseRestoreLcmConfigExpiryDetailArrayInput is an input type that accepts NdbDatabaseRestoreLcmConfigExpiryDetailArray and NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigExpiryDetailArrayInput` via:
//
//	NdbDatabaseRestoreLcmConfigExpiryDetailArray{ NdbDatabaseRestoreLcmConfigExpiryDetailArgs{...} }
type NdbDatabaseRestoreLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput() NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput
	ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput
}

type NdbDatabaseRestoreLcmConfigExpiryDetailArray []NdbDatabaseRestoreLcmConfigExpiryDetailInput

func (NdbDatabaseRestoreLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigExpiryDetailArray) ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput() NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigExpiryDetailArray) ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput)
}

type NdbDatabaseRestoreLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ToNdbDatabaseRestoreLcmConfigExpiryDetailOutput() NdbDatabaseRestoreLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ToNdbDatabaseRestoreLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput() NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseRestoreLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLcmConfigExpiryDetail {
		return vs[0].([]NdbDatabaseRestoreLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbDatabaseRestoreLcmConfigExpiryDetailOutput)
}

type NdbDatabaseRestoreLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseRestoreLcmConfigPostDeleteCommandInput is an input type that accepts NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs and NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigPostDeleteCommandInput` via:
//
//	NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs{...}
type NdbDatabaseRestoreLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput
	ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput
}

type NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput {
	return i.ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput)
}

// NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbDatabaseRestoreLcmConfigPostDeleteCommandArray and NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbDatabaseRestoreLcmConfigPostDeleteCommandArray{ NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs{...} }
type NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput
	ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput
}

type NdbDatabaseRestoreLcmConfigPostDeleteCommandArray []NdbDatabaseRestoreLcmConfigPostDeleteCommandInput

func (NdbDatabaseRestoreLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigPostDeleteCommandArray) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigPostDeleteCommandArray) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput)
}

type NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLcmConfigPostDeleteCommand {
		return vs[0].([]NdbDatabaseRestoreLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput)
}

type NdbDatabaseRestoreLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseRestoreLcmConfigPreDeleteCommandInput is an input type that accepts NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs and NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigPreDeleteCommandInput` via:
//
//	NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs{...}
type NdbDatabaseRestoreLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput
	ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput
}

type NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput {
	return i.ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput)
}

// NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbDatabaseRestoreLcmConfigPreDeleteCommandArray and NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbDatabaseRestoreLcmConfigPreDeleteCommandArray{ NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs{...} }
type NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput
	ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput
}

type NdbDatabaseRestoreLcmConfigPreDeleteCommandArray []NdbDatabaseRestoreLcmConfigPreDeleteCommandInput

func (NdbDatabaseRestoreLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigPreDeleteCommandArray) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigPreDeleteCommandArray) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput)
}

type NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLcmConfigPreDeleteCommand {
		return vs[0].([]NdbDatabaseRestoreLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput)
}

type NdbDatabaseRestoreLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbDatabaseRestoreLcmConfigRefreshDetailInput is an input type that accepts NdbDatabaseRestoreLcmConfigRefreshDetailArgs and NdbDatabaseRestoreLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigRefreshDetailInput` via:
//
//	NdbDatabaseRestoreLcmConfigRefreshDetailArgs{...}
type NdbDatabaseRestoreLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigRefreshDetailOutput() NdbDatabaseRestoreLcmConfigRefreshDetailOutput
	ToNdbDatabaseRestoreLcmConfigRefreshDetailOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailOutput
}

type NdbDatabaseRestoreLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbDatabaseRestoreLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigRefreshDetailArgs) ToNdbDatabaseRestoreLcmConfigRefreshDetailOutput() NdbDatabaseRestoreLcmConfigRefreshDetailOutput {
	return i.ToNdbDatabaseRestoreLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigRefreshDetailArgs) ToNdbDatabaseRestoreLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigRefreshDetailOutput)
}

// NdbDatabaseRestoreLcmConfigRefreshDetailArrayInput is an input type that accepts NdbDatabaseRestoreLcmConfigRefreshDetailArray and NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLcmConfigRefreshDetailArrayInput` via:
//
//	NdbDatabaseRestoreLcmConfigRefreshDetailArray{ NdbDatabaseRestoreLcmConfigRefreshDetailArgs{...} }
type NdbDatabaseRestoreLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput() NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput
	ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput
}

type NdbDatabaseRestoreLcmConfigRefreshDetailArray []NdbDatabaseRestoreLcmConfigRefreshDetailInput

func (NdbDatabaseRestoreLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseRestoreLcmConfigRefreshDetailArray) ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput() NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLcmConfigRefreshDetailArray) ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseRestoreLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) ToNdbDatabaseRestoreLcmConfigRefreshDetailOutput() NdbDatabaseRestoreLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) ToNdbDatabaseRestoreLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput() NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseRestoreLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLcmConfigRefreshDetail {
		return vs[0].([]NdbDatabaseRestoreLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbDatabaseRestoreLcmConfigRefreshDetailOutput)
}

type NdbDatabaseRestoreLinkedDatabase struct {
	// name of database
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbDatabaseRestoreLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	// snapshot id from you want to use for restoring the instance
	SnapshotId *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbDatabaseRestoreLinkedDatabaseInput is an input type that accepts NdbDatabaseRestoreLinkedDatabaseArgs and NdbDatabaseRestoreLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLinkedDatabaseInput` via:
//
//	NdbDatabaseRestoreLinkedDatabaseArgs{...}
type NdbDatabaseRestoreLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLinkedDatabaseOutput() NdbDatabaseRestoreLinkedDatabaseOutput
	ToNdbDatabaseRestoreLinkedDatabaseOutputWithContext(context.Context) NdbDatabaseRestoreLinkedDatabaseOutput
}

type NdbDatabaseRestoreLinkedDatabaseArgs struct {
	// name of database
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbDatabaseRestoreLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	// snapshot id from you want to use for restoring the instance
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbDatabaseRestoreLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseRestoreLinkedDatabaseArgs) ToNdbDatabaseRestoreLinkedDatabaseOutput() NdbDatabaseRestoreLinkedDatabaseOutput {
	return i.ToNdbDatabaseRestoreLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLinkedDatabaseArgs) ToNdbDatabaseRestoreLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLinkedDatabaseOutput)
}

// NdbDatabaseRestoreLinkedDatabaseArrayInput is an input type that accepts NdbDatabaseRestoreLinkedDatabaseArray and NdbDatabaseRestoreLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLinkedDatabaseArrayInput` via:
//
//	NdbDatabaseRestoreLinkedDatabaseArray{ NdbDatabaseRestoreLinkedDatabaseArgs{...} }
type NdbDatabaseRestoreLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLinkedDatabaseArrayOutput() NdbDatabaseRestoreLinkedDatabaseArrayOutput
	ToNdbDatabaseRestoreLinkedDatabaseArrayOutputWithContext(context.Context) NdbDatabaseRestoreLinkedDatabaseArrayOutput
}

type NdbDatabaseRestoreLinkedDatabaseArray []NdbDatabaseRestoreLinkedDatabaseInput

func (NdbDatabaseRestoreLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseRestoreLinkedDatabaseArray) ToNdbDatabaseRestoreLinkedDatabaseArrayOutput() NdbDatabaseRestoreLinkedDatabaseArrayOutput {
	return i.ToNdbDatabaseRestoreLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLinkedDatabaseArray) ToNdbDatabaseRestoreLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLinkedDatabaseArrayOutput)
}

type NdbDatabaseRestoreLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) ToNdbDatabaseRestoreLinkedDatabaseOutput() NdbDatabaseRestoreLinkedDatabaseOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) ToNdbDatabaseRestoreLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbDatabaseRestoreLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) Infos() NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) []NdbDatabaseRestoreLinkedDatabaseInfo { return v.Infos }).(NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbDatabaseRestoreLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbDatabaseRestoreLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

// snapshot id from you want to use for restoring the instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbDatabaseRestoreLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseRestoreLinkedDatabaseArrayOutput) ToNdbDatabaseRestoreLinkedDatabaseArrayOutput() NdbDatabaseRestoreLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseArrayOutput) ToNdbDatabaseRestoreLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLinkedDatabase {
		return vs[0].([]NdbDatabaseRestoreLinkedDatabase)[vs[1].(int)]
	}).(NdbDatabaseRestoreLinkedDatabaseOutput)
}

type NdbDatabaseRestoreLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseRestoreLinkedDatabaseInfoInput is an input type that accepts NdbDatabaseRestoreLinkedDatabaseInfoArgs and NdbDatabaseRestoreLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLinkedDatabaseInfoInput` via:
//
//	NdbDatabaseRestoreLinkedDatabaseInfoArgs{...}
type NdbDatabaseRestoreLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLinkedDatabaseInfoOutput() NdbDatabaseRestoreLinkedDatabaseInfoOutput
	ToNdbDatabaseRestoreLinkedDatabaseInfoOutputWithContext(context.Context) NdbDatabaseRestoreLinkedDatabaseInfoOutput
}

type NdbDatabaseRestoreLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseRestoreLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreLinkedDatabaseInfoArgs) ToNdbDatabaseRestoreLinkedDatabaseInfoOutput() NdbDatabaseRestoreLinkedDatabaseInfoOutput {
	return i.ToNdbDatabaseRestoreLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLinkedDatabaseInfoArgs) ToNdbDatabaseRestoreLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLinkedDatabaseInfoOutput)
}

// NdbDatabaseRestoreLinkedDatabaseInfoArrayInput is an input type that accepts NdbDatabaseRestoreLinkedDatabaseInfoArray and NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreLinkedDatabaseInfoArrayInput` via:
//
//	NdbDatabaseRestoreLinkedDatabaseInfoArray{ NdbDatabaseRestoreLinkedDatabaseInfoArgs{...} }
type NdbDatabaseRestoreLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutput() NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput
	ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput
}

type NdbDatabaseRestoreLinkedDatabaseInfoArray []NdbDatabaseRestoreLinkedDatabaseInfoInput

func (NdbDatabaseRestoreLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseRestoreLinkedDatabaseInfoArray) ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutput() NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput {
	return i.ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreLinkedDatabaseInfoArray) ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput)
}

type NdbDatabaseRestoreLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoOutput) ToNdbDatabaseRestoreLinkedDatabaseInfoOutput() NdbDatabaseRestoreLinkedDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoOutput) ToNdbDatabaseRestoreLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbDatabaseRestoreLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput) ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutput() NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput) ToNdbDatabaseRestoreLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreLinkedDatabaseInfo {
		return vs[0].([]NdbDatabaseRestoreLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbDatabaseRestoreLinkedDatabaseInfoOutput)
}

type NdbDatabaseRestoreProperty struct {
	// Name of database instance
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbDatabaseRestorePropertyInput is an input type that accepts NdbDatabaseRestorePropertyArgs and NdbDatabaseRestorePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseRestorePropertyInput` via:
//
//	NdbDatabaseRestorePropertyArgs{...}
type NdbDatabaseRestorePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseRestorePropertyOutput() NdbDatabaseRestorePropertyOutput
	ToNdbDatabaseRestorePropertyOutputWithContext(context.Context) NdbDatabaseRestorePropertyOutput
}

type NdbDatabaseRestorePropertyArgs struct {
	// Name of database instance
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestorePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreProperty)(nil)).Elem()
}

func (i NdbDatabaseRestorePropertyArgs) ToNdbDatabaseRestorePropertyOutput() NdbDatabaseRestorePropertyOutput {
	return i.ToNdbDatabaseRestorePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseRestorePropertyArgs) ToNdbDatabaseRestorePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestorePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestorePropertyOutput)
}

// NdbDatabaseRestorePropertyArrayInput is an input type that accepts NdbDatabaseRestorePropertyArray and NdbDatabaseRestorePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestorePropertyArrayInput` via:
//
//	NdbDatabaseRestorePropertyArray{ NdbDatabaseRestorePropertyArgs{...} }
type NdbDatabaseRestorePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestorePropertyArrayOutput() NdbDatabaseRestorePropertyArrayOutput
	ToNdbDatabaseRestorePropertyArrayOutputWithContext(context.Context) NdbDatabaseRestorePropertyArrayOutput
}

type NdbDatabaseRestorePropertyArray []NdbDatabaseRestorePropertyInput

func (NdbDatabaseRestorePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreProperty)(nil)).Elem()
}

func (i NdbDatabaseRestorePropertyArray) ToNdbDatabaseRestorePropertyArrayOutput() NdbDatabaseRestorePropertyArrayOutput {
	return i.ToNdbDatabaseRestorePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestorePropertyArray) ToNdbDatabaseRestorePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestorePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestorePropertyArrayOutput)
}

type NdbDatabaseRestorePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestorePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreProperty)(nil)).Elem()
}

func (o NdbDatabaseRestorePropertyOutput) ToNdbDatabaseRestorePropertyOutput() NdbDatabaseRestorePropertyOutput {
	return o
}

func (o NdbDatabaseRestorePropertyOutput) ToNdbDatabaseRestorePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestorePropertyOutput {
	return o
}

// Name of database instance
func (o NdbDatabaseRestorePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestorePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestorePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestorePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreProperty)(nil)).Elem()
}

func (o NdbDatabaseRestorePropertyArrayOutput) ToNdbDatabaseRestorePropertyArrayOutput() NdbDatabaseRestorePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestorePropertyArrayOutput) ToNdbDatabaseRestorePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestorePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestorePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestorePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreProperty {
		return vs[0].([]NdbDatabaseRestoreProperty)[vs[1].(int)]
	}).(NdbDatabaseRestorePropertyOutput)
}

type NdbDatabaseRestoreTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseRestoreTagInput is an input type that accepts NdbDatabaseRestoreTagArgs and NdbDatabaseRestoreTagOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTagInput` via:
//
//	NdbDatabaseRestoreTagArgs{...}
type NdbDatabaseRestoreTagInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTagOutput() NdbDatabaseRestoreTagOutput
	ToNdbDatabaseRestoreTagOutputWithContext(context.Context) NdbDatabaseRestoreTagOutput
}

type NdbDatabaseRestoreTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreTagArgs) ToNdbDatabaseRestoreTagOutput() NdbDatabaseRestoreTagOutput {
	return i.ToNdbDatabaseRestoreTagOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTagArgs) ToNdbDatabaseRestoreTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTagOutput)
}

// NdbDatabaseRestoreTagArrayInput is an input type that accepts NdbDatabaseRestoreTagArray and NdbDatabaseRestoreTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTagArrayInput` via:
//
//	NdbDatabaseRestoreTagArray{ NdbDatabaseRestoreTagArgs{...} }
type NdbDatabaseRestoreTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTagArrayOutput() NdbDatabaseRestoreTagArrayOutput
	ToNdbDatabaseRestoreTagArrayOutputWithContext(context.Context) NdbDatabaseRestoreTagArrayOutput
}

type NdbDatabaseRestoreTagArray []NdbDatabaseRestoreTagInput

func (NdbDatabaseRestoreTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreTagArray) ToNdbDatabaseRestoreTagArrayOutput() NdbDatabaseRestoreTagArrayOutput {
	return i.ToNdbDatabaseRestoreTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTagArray) ToNdbDatabaseRestoreTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTagArrayOutput)
}

type NdbDatabaseRestoreTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreTagOutput) ToNdbDatabaseRestoreTagOutput() NdbDatabaseRestoreTagOutput {
	return o
}

func (o NdbDatabaseRestoreTagOutput) ToNdbDatabaseRestoreTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreTagOutput {
	return o
}

func (o NdbDatabaseRestoreTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreTagArrayOutput) ToNdbDatabaseRestoreTagArrayOutput() NdbDatabaseRestoreTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTagArrayOutput) ToNdbDatabaseRestoreTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTag {
		return vs[0].([]NdbDatabaseRestoreTag)[vs[1].(int)]
	}).(NdbDatabaseRestoreTagOutput)
}

type NdbDatabaseRestoreTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone     *bool   `pulumi:"clone"`
	Clones    *string `pulumi:"clones"`
	Clustered *bool   `pulumi:"clustered"`
	Database  *string `pulumi:"database"`
	// database id
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties          []NdbDatabaseRestoreTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                                 `pulumi:"scheduleId"`
	Schedules           []NdbDatabaseRestoreTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                                 `pulumi:"scope"`
	SlaId               *string                                 `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                   `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                                 `pulumi:"slaUpdateMetadata"`
	Slas                []NdbDatabaseRestoreTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                                `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseRestoreTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbDatabaseRestoreTimeMachineInput is an input type that accepts NdbDatabaseRestoreTimeMachineArgs and NdbDatabaseRestoreTimeMachineOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineInput` via:
//
//	NdbDatabaseRestoreTimeMachineArgs{...}
type NdbDatabaseRestoreTimeMachineInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineOutput() NdbDatabaseRestoreTimeMachineOutput
	ToNdbDatabaseRestoreTimeMachineOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineOutput
}

type NdbDatabaseRestoreTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone     pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones    pulumi.StringPtrInput `pulumi:"clones"`
	Clustered pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database  pulumi.StringPtrInput `pulumi:"database"`
	// database id
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties          NdbDatabaseRestoreTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                           `pulumi:"scheduleId"`
	Schedules           NdbDatabaseRestoreTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                           `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                           `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                             `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                           `pulumi:"slaUpdateMetadata"`
	Slas                NdbDatabaseRestoreTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                         `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseRestoreTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbDatabaseRestoreTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineArgs) ToNdbDatabaseRestoreTimeMachineOutput() NdbDatabaseRestoreTimeMachineOutput {
	return i.ToNdbDatabaseRestoreTimeMachineOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineArgs) ToNdbDatabaseRestoreTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineOutput)
}

// NdbDatabaseRestoreTimeMachineArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineArray and NdbDatabaseRestoreTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineArray{ NdbDatabaseRestoreTimeMachineArgs{...} }
type NdbDatabaseRestoreTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineArrayOutput() NdbDatabaseRestoreTimeMachineArrayOutput
	ToNdbDatabaseRestoreTimeMachineArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineArrayOutput
}

type NdbDatabaseRestoreTimeMachineArray []NdbDatabaseRestoreTimeMachineInput

func (NdbDatabaseRestoreTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineArray) ToNdbDatabaseRestoreTimeMachineArrayOutput() NdbDatabaseRestoreTimeMachineArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineArray) ToNdbDatabaseRestoreTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineArrayOutput)
}

type NdbDatabaseRestoreTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineOutput) ToNdbDatabaseRestoreTimeMachineOutput() NdbDatabaseRestoreTimeMachineOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineOutput) ToNdbDatabaseRestoreTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbDatabaseRestoreTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// database id
func (o NdbDatabaseRestoreTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbDatabaseRestoreTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbDatabaseRestoreTimeMachineOutput) Properties() NdbDatabaseRestoreTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) []NdbDatabaseRestoreTimeMachineProperty { return v.Properties }).(NdbDatabaseRestoreTimeMachinePropertyArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Schedules() NdbDatabaseRestoreTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) []NdbDatabaseRestoreTimeMachineSchedule { return v.Schedules }).(NdbDatabaseRestoreTimeMachineScheduleArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) Slas() NdbDatabaseRestoreTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) []NdbDatabaseRestoreTimeMachineSla { return v.Slas }).(NdbDatabaseRestoreTimeMachineSlaArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbDatabaseRestoreTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbDatabaseRestoreTimeMachineOutput) Tags() NdbDatabaseRestoreTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) []NdbDatabaseRestoreTimeMachineTag { return v.Tags }).(NdbDatabaseRestoreTimeMachineTagArrayOutput)
}

// type of database
func (o NdbDatabaseRestoreTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineArrayOutput) ToNdbDatabaseRestoreTimeMachineArrayOutput() NdbDatabaseRestoreTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineArrayOutput) ToNdbDatabaseRestoreTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachine {
		return vs[0].([]NdbDatabaseRestoreTimeMachine)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineOutput)
}

type NdbDatabaseRestoreTimeMachineProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseRestoreTimeMachinePropertyInput is an input type that accepts NdbDatabaseRestoreTimeMachinePropertyArgs and NdbDatabaseRestoreTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachinePropertyInput` via:
//
//	NdbDatabaseRestoreTimeMachinePropertyArgs{...}
type NdbDatabaseRestoreTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachinePropertyOutput() NdbDatabaseRestoreTimeMachinePropertyOutput
	ToNdbDatabaseRestoreTimeMachinePropertyOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachinePropertyOutput
}

type NdbDatabaseRestoreTimeMachinePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachinePropertyArgs) ToNdbDatabaseRestoreTimeMachinePropertyOutput() NdbDatabaseRestoreTimeMachinePropertyOutput {
	return i.ToNdbDatabaseRestoreTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachinePropertyArgs) ToNdbDatabaseRestoreTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachinePropertyOutput)
}

// NdbDatabaseRestoreTimeMachinePropertyArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachinePropertyArray and NdbDatabaseRestoreTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachinePropertyArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachinePropertyArray{ NdbDatabaseRestoreTimeMachinePropertyArgs{...} }
type NdbDatabaseRestoreTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachinePropertyArrayOutput() NdbDatabaseRestoreTimeMachinePropertyArrayOutput
	ToNdbDatabaseRestoreTimeMachinePropertyArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachinePropertyArrayOutput
}

type NdbDatabaseRestoreTimeMachinePropertyArray []NdbDatabaseRestoreTimeMachinePropertyInput

func (NdbDatabaseRestoreTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachinePropertyArray) ToNdbDatabaseRestoreTimeMachinePropertyArrayOutput() NdbDatabaseRestoreTimeMachinePropertyArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachinePropertyArray) ToNdbDatabaseRestoreTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachinePropertyArrayOutput)
}

type NdbDatabaseRestoreTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachinePropertyOutput) ToNdbDatabaseRestoreTimeMachinePropertyOutput() NdbDatabaseRestoreTimeMachinePropertyOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachinePropertyOutput) ToNdbDatabaseRestoreTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachinePropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseRestoreTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachinePropertyArrayOutput) ToNdbDatabaseRestoreTimeMachinePropertyArrayOutput() NdbDatabaseRestoreTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachinePropertyArrayOutput) ToNdbDatabaseRestoreTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineProperty {
		return vs[0].([]NdbDatabaseRestoreTimeMachineProperty)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachinePropertyOutput)
}

type NdbDatabaseRestoreTimeMachineSchedule struct {
	ContinuousSchedules []NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbDatabaseRestoreTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string                                                `pulumi:"description"`
	GlobalPolicy     *bool                                                  `pulumi:"globalPolicy"`
	Id               *string                                                `pulumi:"id"`
	MonthlySchedules []NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                  `pulumi:"name"`
	OwnerId            *string                                                  `pulumi:"ownerId"`
	QuartelySchedules  []NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                     `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                  `pulumi:"startTime"`
	SystemPolicy       *bool                                                    `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                               `pulumi:"timeZone"`
	UniqueName      *string                                               `pulumi:"uniqueName"`
	WeeklySchedules []NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbDatabaseRestoreTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbDatabaseRestoreTimeMachineScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput                                          `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                            `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                          `pulumi:"id"`
	MonthlySchedules NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                            `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                            `pulumi:"ownerId"`
	QuartelySchedules  NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                               `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                            `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                              `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                         `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                         `pulumi:"uniqueName"`
	WeeklySchedules NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbDatabaseRestoreTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleArray and NdbDatabaseRestoreTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleArray []NdbDatabaseRestoreTimeMachineScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) ContinuousSchedules() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) DailySchedules() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) MonthlySchedules() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) QuartelySchedules() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbDatabaseRestoreTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) WeeklySchedules() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleOutput) YearlySchedules() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSchedule) []NdbDatabaseRestoreTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineSchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineSchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray and NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray []NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbDatabaseRestoreTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray and NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray []NdbDatabaseRestoreTimeMachineScheduleDailyScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray and NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray []NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray and NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray []NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs and NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray and NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray{ NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray []NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray and NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray []NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs and NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs{...}
type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput
	ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput
}

type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput)
}

// NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray and NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray{ NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray []NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleInput

func (NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbDatabaseRestoreTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput)
}

type NdbDatabaseRestoreTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbDatabaseRestoreTimeMachineSlaInput is an input type that accepts NdbDatabaseRestoreTimeMachineSlaArgs and NdbDatabaseRestoreTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineSlaInput` via:
//
//	NdbDatabaseRestoreTimeMachineSlaArgs{...}
type NdbDatabaseRestoreTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineSlaOutput() NdbDatabaseRestoreTimeMachineSlaOutput
	ToNdbDatabaseRestoreTimeMachineSlaOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineSlaOutput
}

type NdbDatabaseRestoreTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbDatabaseRestoreTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineSlaArgs) ToNdbDatabaseRestoreTimeMachineSlaOutput() NdbDatabaseRestoreTimeMachineSlaOutput {
	return i.ToNdbDatabaseRestoreTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineSlaArgs) ToNdbDatabaseRestoreTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineSlaOutput)
}

// NdbDatabaseRestoreTimeMachineSlaArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineSlaArray and NdbDatabaseRestoreTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineSlaArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineSlaArray{ NdbDatabaseRestoreTimeMachineSlaArgs{...} }
type NdbDatabaseRestoreTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineSlaArrayOutput() NdbDatabaseRestoreTimeMachineSlaArrayOutput
	ToNdbDatabaseRestoreTimeMachineSlaArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineSlaArrayOutput
}

type NdbDatabaseRestoreTimeMachineSlaArray []NdbDatabaseRestoreTimeMachineSlaInput

func (NdbDatabaseRestoreTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineSlaArray) ToNdbDatabaseRestoreTimeMachineSlaArrayOutput() NdbDatabaseRestoreTimeMachineSlaArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineSlaArray) ToNdbDatabaseRestoreTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineSlaArrayOutput)
}

type NdbDatabaseRestoreTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) ToNdbDatabaseRestoreTimeMachineSlaOutput() NdbDatabaseRestoreTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) ToNdbDatabaseRestoreTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbDatabaseRestoreTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseRestoreTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseRestoreTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbDatabaseRestoreTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbDatabaseRestoreTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineSlaArrayOutput) ToNdbDatabaseRestoreTimeMachineSlaArrayOutput() NdbDatabaseRestoreTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineSlaArrayOutput) ToNdbDatabaseRestoreTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineSla {
		return vs[0].([]NdbDatabaseRestoreTimeMachineSla)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineSlaOutput)
}

type NdbDatabaseRestoreTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseRestoreTimeMachineTagInput is an input type that accepts NdbDatabaseRestoreTimeMachineTagArgs and NdbDatabaseRestoreTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineTagInput` via:
//
//	NdbDatabaseRestoreTimeMachineTagArgs{...}
type NdbDatabaseRestoreTimeMachineTagInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineTagOutput() NdbDatabaseRestoreTimeMachineTagOutput
	ToNdbDatabaseRestoreTimeMachineTagOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineTagOutput
}

type NdbDatabaseRestoreTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseRestoreTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineTagArgs) ToNdbDatabaseRestoreTimeMachineTagOutput() NdbDatabaseRestoreTimeMachineTagOutput {
	return i.ToNdbDatabaseRestoreTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineTagArgs) ToNdbDatabaseRestoreTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineTagOutput)
}

// NdbDatabaseRestoreTimeMachineTagArrayInput is an input type that accepts NdbDatabaseRestoreTimeMachineTagArray and NdbDatabaseRestoreTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseRestoreTimeMachineTagArrayInput` via:
//
//	NdbDatabaseRestoreTimeMachineTagArray{ NdbDatabaseRestoreTimeMachineTagArgs{...} }
type NdbDatabaseRestoreTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseRestoreTimeMachineTagArrayOutput() NdbDatabaseRestoreTimeMachineTagArrayOutput
	ToNdbDatabaseRestoreTimeMachineTagArrayOutputWithContext(context.Context) NdbDatabaseRestoreTimeMachineTagArrayOutput
}

type NdbDatabaseRestoreTimeMachineTagArray []NdbDatabaseRestoreTimeMachineTagInput

func (NdbDatabaseRestoreTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseRestoreTimeMachineTagArray) ToNdbDatabaseRestoreTimeMachineTagArrayOutput() NdbDatabaseRestoreTimeMachineTagArrayOutput {
	return i.ToNdbDatabaseRestoreTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseRestoreTimeMachineTagArray) ToNdbDatabaseRestoreTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseRestoreTimeMachineTagArrayOutput)
}

type NdbDatabaseRestoreTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseRestoreTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) ToNdbDatabaseRestoreTimeMachineTagOutput() NdbDatabaseRestoreTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) ToNdbDatabaseRestoreTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseRestoreTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseRestoreTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseRestoreTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseRestoreTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseRestoreTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseRestoreTimeMachineTagArrayOutput) ToNdbDatabaseRestoreTimeMachineTagArrayOutput() NdbDatabaseRestoreTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineTagArrayOutput) ToNdbDatabaseRestoreTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseRestoreTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseRestoreTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseRestoreTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseRestoreTimeMachineTag {
		return vs[0].([]NdbDatabaseRestoreTimeMachineTag)[vs[1].(int)]
	}).(NdbDatabaseRestoreTimeMachineTagOutput)
}

type NdbDatabaseScaleDatabaseNode struct {
	AccessLevel    map[string]string `pulumi:"accessLevel"`
	DatabaseId     *string           `pulumi:"databaseId"`
	DatabaseStatus *string           `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbDatabaseScaleDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbDatabaseScaleDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                        `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbDatabaseScaleDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                        `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseScaleDatabaseNodeTag `pulumi:"tags"`
}

// NdbDatabaseScaleDatabaseNodeInput is an input type that accepts NdbDatabaseScaleDatabaseNodeArgs and NdbDatabaseScaleDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeInput` via:
//
//	NdbDatabaseScaleDatabaseNodeArgs{...}
type NdbDatabaseScaleDatabaseNodeInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeOutput() NdbDatabaseScaleDatabaseNodeOutput
	ToNdbDatabaseScaleDatabaseNodeOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeOutput
}

type NdbDatabaseScaleDatabaseNodeArgs struct {
	AccessLevel    pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbDatabaseScaleDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbDatabaseScaleDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                  `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbDatabaseScaleDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                  `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseScaleDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbDatabaseScaleDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeArgs) ToNdbDatabaseScaleDatabaseNodeOutput() NdbDatabaseScaleDatabaseNodeOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeArgs) ToNdbDatabaseScaleDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeOutput)
}

// NdbDatabaseScaleDatabaseNodeArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodeArray and NdbDatabaseScaleDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodeArray{ NdbDatabaseScaleDatabaseNodeArgs{...} }
type NdbDatabaseScaleDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeArrayOutput() NdbDatabaseScaleDatabaseNodeArrayOutput
	ToNdbDatabaseScaleDatabaseNodeArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeArrayOutput
}

type NdbDatabaseScaleDatabaseNodeArray []NdbDatabaseScaleDatabaseNodeInput

func (NdbDatabaseScaleDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNode)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeArray) ToNdbDatabaseScaleDatabaseNodeArrayOutput() NdbDatabaseScaleDatabaseNodeArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeArray) ToNdbDatabaseScaleDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeOutput) ToNdbDatabaseScaleDatabaseNodeOutput() NdbDatabaseScaleDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeOutput) ToNdbDatabaseScaleDatabaseNodeOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseScaleDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbDatabaseScaleDatabaseNodeOutput) Infos() NdbDatabaseScaleDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) []NdbDatabaseScaleDatabaseNodeInfo { return v.Infos }).(NdbDatabaseScaleDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbDatabaseScaleDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbDatabaseScaleDatabaseNodeOutput) Properties() NdbDatabaseScaleDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) []NdbDatabaseScaleDatabaseNodeProperty { return v.Properties }).(NdbDatabaseScaleDatabaseNodePropertyArrayOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) ProtectionDomains() NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) []NdbDatabaseScaleDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbDatabaseScaleDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbDatabaseScaleDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbDatabaseScaleDatabaseNodeOutput) Tags() NdbDatabaseScaleDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNode) []NdbDatabaseScaleDatabaseNodeTag { return v.Tags }).(NdbDatabaseScaleDatabaseNodeTagArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNode)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeArrayOutput) ToNdbDatabaseScaleDatabaseNodeArrayOutput() NdbDatabaseScaleDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeArrayOutput) ToNdbDatabaseScaleDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNode {
		return vs[0].([]NdbDatabaseScaleDatabaseNode)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodeOutput)
}

type NdbDatabaseScaleDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseScaleDatabaseNodeInfoInput is an input type that accepts NdbDatabaseScaleDatabaseNodeInfoArgs and NdbDatabaseScaleDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeInfoInput` via:
//
//	NdbDatabaseScaleDatabaseNodeInfoArgs{...}
type NdbDatabaseScaleDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeInfoOutput() NdbDatabaseScaleDatabaseNodeInfoOutput
	ToNdbDatabaseScaleDatabaseNodeInfoOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeInfoOutput
}

type NdbDatabaseScaleDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseScaleDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeInfoArgs) ToNdbDatabaseScaleDatabaseNodeInfoOutput() NdbDatabaseScaleDatabaseNodeInfoOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeInfoArgs) ToNdbDatabaseScaleDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeInfoOutput)
}

// NdbDatabaseScaleDatabaseNodeInfoArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodeInfoArray and NdbDatabaseScaleDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeInfoArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodeInfoArray{ NdbDatabaseScaleDatabaseNodeInfoArgs{...} }
type NdbDatabaseScaleDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeInfoArrayOutput() NdbDatabaseScaleDatabaseNodeInfoArrayOutput
	ToNdbDatabaseScaleDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeInfoArrayOutput
}

type NdbDatabaseScaleDatabaseNodeInfoArray []NdbDatabaseScaleDatabaseNodeInfoInput

func (NdbDatabaseScaleDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeInfoArray) ToNdbDatabaseScaleDatabaseNodeInfoArrayOutput() NdbDatabaseScaleDatabaseNodeInfoArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeInfoArray) ToNdbDatabaseScaleDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeInfoArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeInfoOutput) ToNdbDatabaseScaleDatabaseNodeInfoOutput() NdbDatabaseScaleDatabaseNodeInfoOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeInfoOutput) ToNdbDatabaseScaleDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbDatabaseScaleDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseScaleDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseScaleDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeInfoArrayOutput) ToNdbDatabaseScaleDatabaseNodeInfoArrayOutput() NdbDatabaseScaleDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeInfoArrayOutput) ToNdbDatabaseScaleDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNodeInfo {
		return vs[0].([]NdbDatabaseScaleDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodeInfoOutput)
}

type NdbDatabaseScaleDatabaseNodeProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseScaleDatabaseNodePropertyInput is an input type that accepts NdbDatabaseScaleDatabaseNodePropertyArgs and NdbDatabaseScaleDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodePropertyInput` via:
//
//	NdbDatabaseScaleDatabaseNodePropertyArgs{...}
type NdbDatabaseScaleDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodePropertyOutput() NdbDatabaseScaleDatabaseNodePropertyOutput
	ToNdbDatabaseScaleDatabaseNodePropertyOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodePropertyOutput
}

type NdbDatabaseScaleDatabaseNodePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodePropertyArgs) ToNdbDatabaseScaleDatabaseNodePropertyOutput() NdbDatabaseScaleDatabaseNodePropertyOutput {
	return i.ToNdbDatabaseScaleDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodePropertyArgs) ToNdbDatabaseScaleDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodePropertyOutput)
}

// NdbDatabaseScaleDatabaseNodePropertyArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodePropertyArray and NdbDatabaseScaleDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodePropertyArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodePropertyArray{ NdbDatabaseScaleDatabaseNodePropertyArgs{...} }
type NdbDatabaseScaleDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodePropertyArrayOutput() NdbDatabaseScaleDatabaseNodePropertyArrayOutput
	ToNdbDatabaseScaleDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodePropertyArrayOutput
}

type NdbDatabaseScaleDatabaseNodePropertyArray []NdbDatabaseScaleDatabaseNodePropertyInput

func (NdbDatabaseScaleDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodePropertyArray) ToNdbDatabaseScaleDatabaseNodePropertyArrayOutput() NdbDatabaseScaleDatabaseNodePropertyArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodePropertyArray) ToNdbDatabaseScaleDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodePropertyArrayOutput)
}

type NdbDatabaseScaleDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodePropertyOutput) ToNdbDatabaseScaleDatabaseNodePropertyOutput() NdbDatabaseScaleDatabaseNodePropertyOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodePropertyOutput) ToNdbDatabaseScaleDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodePropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseScaleDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodePropertyArrayOutput) ToNdbDatabaseScaleDatabaseNodePropertyArrayOutput() NdbDatabaseScaleDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodePropertyArrayOutput) ToNdbDatabaseScaleDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNodeProperty {
		return vs[0].([]NdbDatabaseScaleDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodePropertyOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbDatabaseScaleDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbDatabaseScaleDatabaseNodeProtectionDomainInput is an input type that accepts NdbDatabaseScaleDatabaseNodeProtectionDomainArgs and NdbDatabaseScaleDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeProtectionDomainInput` via:
//
//	NdbDatabaseScaleDatabaseNodeProtectionDomainArgs{...}
type NdbDatabaseScaleDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainOutput
	ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainOutput
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbDatabaseScaleDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainArgs) ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainArgs) ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeProtectionDomainOutput)
}

// NdbDatabaseScaleDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodeProtectionDomainArray and NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodeProtectionDomainArray{ NdbDatabaseScaleDatabaseNodeProtectionDomainArgs{...} }
type NdbDatabaseScaleDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput
	ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainArray []NdbDatabaseScaleDatabaseNodeProtectionDomainInput

func (NdbDatabaseScaleDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainArray) ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainArray) ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Properties() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) []NdbDatabaseScaleDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNodeProtectionDomain {
		return vs[0].([]NdbDatabaseScaleDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodeProtectionDomainOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs and NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput
	ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray and NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray{ NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray []NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyInput

func (NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput() NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbDatabaseScaleDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbDatabaseScaleDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseScaleDatabaseNodeTagInput is an input type that accepts NdbDatabaseScaleDatabaseNodeTagArgs and NdbDatabaseScaleDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeTagInput` via:
//
//	NdbDatabaseScaleDatabaseNodeTagArgs{...}
type NdbDatabaseScaleDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeTagOutput() NdbDatabaseScaleDatabaseNodeTagOutput
	ToNdbDatabaseScaleDatabaseNodeTagOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeTagOutput
}

type NdbDatabaseScaleDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeTagArgs) ToNdbDatabaseScaleDatabaseNodeTagOutput() NdbDatabaseScaleDatabaseNodeTagOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeTagArgs) ToNdbDatabaseScaleDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeTagOutput)
}

// NdbDatabaseScaleDatabaseNodeTagArrayInput is an input type that accepts NdbDatabaseScaleDatabaseNodeTagArray and NdbDatabaseScaleDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleDatabaseNodeTagArrayInput` via:
//
//	NdbDatabaseScaleDatabaseNodeTagArray{ NdbDatabaseScaleDatabaseNodeTagArgs{...} }
type NdbDatabaseScaleDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleDatabaseNodeTagArrayOutput() NdbDatabaseScaleDatabaseNodeTagArrayOutput
	ToNdbDatabaseScaleDatabaseNodeTagArrayOutputWithContext(context.Context) NdbDatabaseScaleDatabaseNodeTagArrayOutput
}

type NdbDatabaseScaleDatabaseNodeTagArray []NdbDatabaseScaleDatabaseNodeTagInput

func (NdbDatabaseScaleDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeTag)(nil)).Elem()
}

func (i NdbDatabaseScaleDatabaseNodeTagArray) ToNdbDatabaseScaleDatabaseNodeTagArrayOutput() NdbDatabaseScaleDatabaseNodeTagArrayOutput {
	return i.ToNdbDatabaseScaleDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleDatabaseNodeTagArray) ToNdbDatabaseScaleDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleDatabaseNodeTagArrayOutput)
}

type NdbDatabaseScaleDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) ToNdbDatabaseScaleDatabaseNodeTagOutput() NdbDatabaseScaleDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) ToNdbDatabaseScaleDatabaseNodeTagOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeTagOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleDatabaseNodeTag)(nil)).Elem()
}

func (o NdbDatabaseScaleDatabaseNodeTagArrayOutput) ToNdbDatabaseScaleDatabaseNodeTagArrayOutput() NdbDatabaseScaleDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeTagArrayOutput) ToNdbDatabaseScaleDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleDatabaseNodeTag {
		return vs[0].([]NdbDatabaseScaleDatabaseNodeTag)[vs[1].(int)]
	}).(NdbDatabaseScaleDatabaseNodeTagOutput)
}

type NdbDatabaseScaleInfo struct {
	BpgConfigs []NdbDatabaseScaleInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string               `pulumi:"secureInfo"`
}

// NdbDatabaseScaleInfoInput is an input type that accepts NdbDatabaseScaleInfoArgs and NdbDatabaseScaleInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoInput` via:
//
//	NdbDatabaseScaleInfoArgs{...}
type NdbDatabaseScaleInfoInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoOutput() NdbDatabaseScaleInfoOutput
	ToNdbDatabaseScaleInfoOutputWithContext(context.Context) NdbDatabaseScaleInfoOutput
}

type NdbDatabaseScaleInfoArgs struct {
	BpgConfigs NdbDatabaseScaleInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                   `pulumi:"secureInfo"`
}

func (NdbDatabaseScaleInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoArgs) ToNdbDatabaseScaleInfoOutput() NdbDatabaseScaleInfoOutput {
	return i.ToNdbDatabaseScaleInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoArgs) ToNdbDatabaseScaleInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoOutput)
}

// NdbDatabaseScaleInfoArrayInput is an input type that accepts NdbDatabaseScaleInfoArray and NdbDatabaseScaleInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoArrayInput` via:
//
//	NdbDatabaseScaleInfoArray{ NdbDatabaseScaleInfoArgs{...} }
type NdbDatabaseScaleInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoArrayOutput() NdbDatabaseScaleInfoArrayOutput
	ToNdbDatabaseScaleInfoArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoArrayOutput
}

type NdbDatabaseScaleInfoArray []NdbDatabaseScaleInfoInput

func (NdbDatabaseScaleInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoArray) ToNdbDatabaseScaleInfoArrayOutput() NdbDatabaseScaleInfoArrayOutput {
	return i.ToNdbDatabaseScaleInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoArray) ToNdbDatabaseScaleInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoArrayOutput)
}

type NdbDatabaseScaleInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoOutput) ToNdbDatabaseScaleInfoOutput() NdbDatabaseScaleInfoOutput {
	return o
}

func (o NdbDatabaseScaleInfoOutput) ToNdbDatabaseScaleInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoOutput {
	return o
}

func (o NdbDatabaseScaleInfoOutput) BpgConfigs() NdbDatabaseScaleInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfo) []NdbDatabaseScaleInfoBpgConfig { return v.BpgConfigs }).(NdbDatabaseScaleInfoBpgConfigArrayOutput)
}

func (o NdbDatabaseScaleInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseScaleInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoArrayOutput) ToNdbDatabaseScaleInfoArrayOutput() NdbDatabaseScaleInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoArrayOutput) ToNdbDatabaseScaleInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfo {
		return vs[0].([]NdbDatabaseScaleInfo)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoOutput)
}

type NdbDatabaseScaleInfoBpgConfig struct {
	BpgDbParams  []NdbDatabaseScaleInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbDatabaseScaleInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbDatabaseScaleInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbDatabaseScaleInfoBpgConfigInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigArgs and NdbDatabaseScaleInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigArgs{...}
type NdbDatabaseScaleInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigOutput() NdbDatabaseScaleInfoBpgConfigOutput
	ToNdbDatabaseScaleInfoBpgConfigOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigOutput
}

type NdbDatabaseScaleInfoBpgConfigArgs struct {
	BpgDbParams  NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbDatabaseScaleInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbDatabaseScaleInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbDatabaseScaleInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigArgs) ToNdbDatabaseScaleInfoBpgConfigOutput() NdbDatabaseScaleInfoBpgConfigOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigArgs) ToNdbDatabaseScaleInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigOutput)
}

// NdbDatabaseScaleInfoBpgConfigArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigArray and NdbDatabaseScaleInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigArray{ NdbDatabaseScaleInfoBpgConfigArgs{...} }
type NdbDatabaseScaleInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigArrayOutput() NdbDatabaseScaleInfoBpgConfigArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigArray []NdbDatabaseScaleInfoBpgConfigInput

func (NdbDatabaseScaleInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfig)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigArray) ToNdbDatabaseScaleInfoBpgConfigArrayOutput() NdbDatabaseScaleInfoBpgConfigArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigArray) ToNdbDatabaseScaleInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigOutput) ToNdbDatabaseScaleInfoBpgConfigOutput() NdbDatabaseScaleInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigOutput) ToNdbDatabaseScaleInfoBpgConfigOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigOutput) BpgDbParams() NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfig) []NdbDatabaseScaleInfoBpgConfigBpgDbParam { return v.BpgDbParams }).(NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigOutput) Storages() NdbDatabaseScaleInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfig) []NdbDatabaseScaleInfoBpgConfigStorage { return v.Storages }).(NdbDatabaseScaleInfoBpgConfigStorageArrayOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigOutput) VmProperties() NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfig) []NdbDatabaseScaleInfoBpgConfigVmProperty { return v.VmProperties }).(NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfig)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigArrayOutput) ToNdbDatabaseScaleInfoBpgConfigArrayOutput() NdbDatabaseScaleInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigArrayOutput) ToNdbDatabaseScaleInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfig {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfig)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigOutput)
}

type NdbDatabaseScaleInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbDatabaseScaleInfoBpgConfigBpgDbParamInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs and NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigBpgDbParamInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs{...}
type NdbDatabaseScaleInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput
	ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput
}

type NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput)
}

// NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigBpgDbParamArray and NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigBpgDbParamArray{ NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs{...} }
type NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigBpgDbParamArray []NdbDatabaseScaleInfoBpgConfigBpgDbParamInput

func (NdbDatabaseScaleInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigBpgDbParamArray) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigBpgDbParamArray) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput() NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput) ToNdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorage struct {
	ArchiveStorages []NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbDatabaseScaleInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbDatabaseScaleInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbDatabaseScaleInfoBpgConfigStorageInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageArgs and NdbDatabaseScaleInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageArgs{...}
type NdbDatabaseScaleInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbDatabaseScaleInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArgs) ToNdbDatabaseScaleInfoBpgConfigStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArgs) ToNdbDatabaseScaleInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageOutput)
}

// NdbDatabaseScaleInfoBpgConfigStorageArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageArray and NdbDatabaseScaleInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageArray{ NdbDatabaseScaleInfoBpgConfigStorageArgs{...} }
type NdbDatabaseScaleInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageArray []NdbDatabaseScaleInfoBpgConfigStorageInput

func (NdbDatabaseScaleInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArray) ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArray) ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageOutput) ToNdbDatabaseScaleInfoBpgConfigStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageOutput) ToNdbDatabaseScaleInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageOutput) ArchiveStorages() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorage) []NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigStorageOutput) DataDisks() NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorage) []NdbDatabaseScaleInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigStorageOutput) LogDisks() NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorage) []NdbDatabaseScaleInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigStorage {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigStorageOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs and NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray and NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray{ NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray []NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageInput

func (NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbDatabaseScaleInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs and NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs{...}
type NdbDatabaseScaleInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput)
}

// NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray and NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray{ NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs{...} }
type NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray []NdbDatabaseScaleInfoBpgConfigStorageDataDiskInput

func (NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbDatabaseScaleInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs and NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs{...}
type NdbDatabaseScaleInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput)
}

// NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray and NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray{ NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs{...} }
type NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray []NdbDatabaseScaleInfoBpgConfigStorageLogDiskInput

func (NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput() NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput) ToNdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput)
}

type NdbDatabaseScaleInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbDatabaseScaleInfoBpgConfigVmPropertyInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigVmPropertyArgs and NdbDatabaseScaleInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigVmPropertyInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigVmPropertyArgs{...}
type NdbDatabaseScaleInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyOutput
	ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyOutput
}

type NdbDatabaseScaleInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbDatabaseScaleInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigVmPropertyArgs) ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigVmPropertyArgs) ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigVmPropertyOutput)
}

// NdbDatabaseScaleInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbDatabaseScaleInfoBpgConfigVmPropertyArray and NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbDatabaseScaleInfoBpgConfigVmPropertyArray{ NdbDatabaseScaleInfoBpgConfigVmPropertyArgs{...} }
type NdbDatabaseScaleInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput
	ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput
}

type NdbDatabaseScaleInfoBpgConfigVmPropertyArray []NdbDatabaseScaleInfoBpgConfigVmPropertyInput

func (NdbDatabaseScaleInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleInfoBpgConfigVmPropertyArray) ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleInfoBpgConfigVmPropertyArray) ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput)
}

type NdbDatabaseScaleInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) ToNdbDatabaseScaleInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput() NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput) ToNdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleInfoBpgConfigVmProperty {
		return vs[0].([]NdbDatabaseScaleInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbDatabaseScaleInfoBpgConfigVmPropertyOutput)
}

type NdbDatabaseScaleLcmConfig struct {
	ExpiryDetails      []NdbDatabaseScaleLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbDatabaseScaleLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbDatabaseScaleLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbDatabaseScaleLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbDatabaseScaleLcmConfigInput is an input type that accepts NdbDatabaseScaleLcmConfigArgs and NdbDatabaseScaleLcmConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigInput` via:
//
//	NdbDatabaseScaleLcmConfigArgs{...}
type NdbDatabaseScaleLcmConfigInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigOutput() NdbDatabaseScaleLcmConfigOutput
	ToNdbDatabaseScaleLcmConfigOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigOutput
}

type NdbDatabaseScaleLcmConfigArgs struct {
	ExpiryDetails      NdbDatabaseScaleLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbDatabaseScaleLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbDatabaseScaleLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbDatabaseScaleLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbDatabaseScaleLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigArgs) ToNdbDatabaseScaleLcmConfigOutput() NdbDatabaseScaleLcmConfigOutput {
	return i.ToNdbDatabaseScaleLcmConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigArgs) ToNdbDatabaseScaleLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigOutput)
}

// NdbDatabaseScaleLcmConfigArrayInput is an input type that accepts NdbDatabaseScaleLcmConfigArray and NdbDatabaseScaleLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigArrayInput` via:
//
//	NdbDatabaseScaleLcmConfigArray{ NdbDatabaseScaleLcmConfigArgs{...} }
type NdbDatabaseScaleLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigArrayOutput() NdbDatabaseScaleLcmConfigArrayOutput
	ToNdbDatabaseScaleLcmConfigArrayOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigArrayOutput
}

type NdbDatabaseScaleLcmConfigArray []NdbDatabaseScaleLcmConfigInput

func (NdbDatabaseScaleLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigArray) ToNdbDatabaseScaleLcmConfigArrayOutput() NdbDatabaseScaleLcmConfigArrayOutput {
	return i.ToNdbDatabaseScaleLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigArray) ToNdbDatabaseScaleLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigArrayOutput)
}

type NdbDatabaseScaleLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigOutput) ToNdbDatabaseScaleLcmConfigOutput() NdbDatabaseScaleLcmConfigOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigOutput) ToNdbDatabaseScaleLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigOutput) ExpiryDetails() NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfig) []NdbDatabaseScaleLcmConfigExpiryDetail { return v.ExpiryDetails }).(NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput)
}

func (o NdbDatabaseScaleLcmConfigOutput) PostDeleteCommands() NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfig) []NdbDatabaseScaleLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbDatabaseScaleLcmConfigOutput) PreDeleteCommands() NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfig) []NdbDatabaseScaleLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbDatabaseScaleLcmConfigOutput) RefreshDetails() NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfig) []NdbDatabaseScaleLcmConfigRefreshDetail { return v.RefreshDetails }).(NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseScaleLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigArrayOutput) ToNdbDatabaseScaleLcmConfigArrayOutput() NdbDatabaseScaleLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigArrayOutput) ToNdbDatabaseScaleLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLcmConfig {
		return vs[0].([]NdbDatabaseScaleLcmConfig)[vs[1].(int)]
	}).(NdbDatabaseScaleLcmConfigOutput)
}

type NdbDatabaseScaleLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbDatabaseScaleLcmConfigExpiryDetailInput is an input type that accepts NdbDatabaseScaleLcmConfigExpiryDetailArgs and NdbDatabaseScaleLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigExpiryDetailInput` via:
//
//	NdbDatabaseScaleLcmConfigExpiryDetailArgs{...}
type NdbDatabaseScaleLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigExpiryDetailOutput() NdbDatabaseScaleLcmConfigExpiryDetailOutput
	ToNdbDatabaseScaleLcmConfigExpiryDetailOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigExpiryDetailOutput
}

type NdbDatabaseScaleLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbDatabaseScaleLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigExpiryDetailArgs) ToNdbDatabaseScaleLcmConfigExpiryDetailOutput() NdbDatabaseScaleLcmConfigExpiryDetailOutput {
	return i.ToNdbDatabaseScaleLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigExpiryDetailArgs) ToNdbDatabaseScaleLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigExpiryDetailOutput)
}

// NdbDatabaseScaleLcmConfigExpiryDetailArrayInput is an input type that accepts NdbDatabaseScaleLcmConfigExpiryDetailArray and NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigExpiryDetailArrayInput` via:
//
//	NdbDatabaseScaleLcmConfigExpiryDetailArray{ NdbDatabaseScaleLcmConfigExpiryDetailArgs{...} }
type NdbDatabaseScaleLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutput() NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput
	ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput
}

type NdbDatabaseScaleLcmConfigExpiryDetailArray []NdbDatabaseScaleLcmConfigExpiryDetailInput

func (NdbDatabaseScaleLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigExpiryDetailArray) ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutput() NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigExpiryDetailArray) ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput)
}

type NdbDatabaseScaleLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) ToNdbDatabaseScaleLcmConfigExpiryDetailOutput() NdbDatabaseScaleLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) ToNdbDatabaseScaleLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutput() NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseScaleLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLcmConfigExpiryDetail {
		return vs[0].([]NdbDatabaseScaleLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbDatabaseScaleLcmConfigExpiryDetailOutput)
}

type NdbDatabaseScaleLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseScaleLcmConfigPostDeleteCommandInput is an input type that accepts NdbDatabaseScaleLcmConfigPostDeleteCommandArgs and NdbDatabaseScaleLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigPostDeleteCommandInput` via:
//
//	NdbDatabaseScaleLcmConfigPostDeleteCommandArgs{...}
type NdbDatabaseScaleLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandOutput
	ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandOutput
}

type NdbDatabaseScaleLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseScaleLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigPostDeleteCommandArgs) ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandOutput {
	return i.ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigPostDeleteCommandArgs) ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigPostDeleteCommandOutput)
}

// NdbDatabaseScaleLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbDatabaseScaleLcmConfigPostDeleteCommandArray and NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbDatabaseScaleLcmConfigPostDeleteCommandArray{ NdbDatabaseScaleLcmConfigPostDeleteCommandArgs{...} }
type NdbDatabaseScaleLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput
	ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput
}

type NdbDatabaseScaleLcmConfigPostDeleteCommandArray []NdbDatabaseScaleLcmConfigPostDeleteCommandInput

func (NdbDatabaseScaleLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigPostDeleteCommandArray) ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigPostDeleteCommandArray) ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput)
}

type NdbDatabaseScaleLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandOutput) ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandOutput) ToNdbDatabaseScaleLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLcmConfigPostDeleteCommand {
		return vs[0].([]NdbDatabaseScaleLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseScaleLcmConfigPostDeleteCommandOutput)
}

type NdbDatabaseScaleLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseScaleLcmConfigPreDeleteCommandInput is an input type that accepts NdbDatabaseScaleLcmConfigPreDeleteCommandArgs and NdbDatabaseScaleLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigPreDeleteCommandInput` via:
//
//	NdbDatabaseScaleLcmConfigPreDeleteCommandArgs{...}
type NdbDatabaseScaleLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandOutput
	ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandOutput
}

type NdbDatabaseScaleLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseScaleLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigPreDeleteCommandArgs) ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandOutput {
	return i.ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigPreDeleteCommandArgs) ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigPreDeleteCommandOutput)
}

// NdbDatabaseScaleLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbDatabaseScaleLcmConfigPreDeleteCommandArray and NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbDatabaseScaleLcmConfigPreDeleteCommandArray{ NdbDatabaseScaleLcmConfigPreDeleteCommandArgs{...} }
type NdbDatabaseScaleLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput
	ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput
}

type NdbDatabaseScaleLcmConfigPreDeleteCommandArray []NdbDatabaseScaleLcmConfigPreDeleteCommandInput

func (NdbDatabaseScaleLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigPreDeleteCommandArray) ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigPreDeleteCommandArray) ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput)
}

type NdbDatabaseScaleLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandOutput) ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandOutput) ToNdbDatabaseScaleLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLcmConfigPreDeleteCommand {
		return vs[0].([]NdbDatabaseScaleLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseScaleLcmConfigPreDeleteCommandOutput)
}

type NdbDatabaseScaleLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbDatabaseScaleLcmConfigRefreshDetailInput is an input type that accepts NdbDatabaseScaleLcmConfigRefreshDetailArgs and NdbDatabaseScaleLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigRefreshDetailInput` via:
//
//	NdbDatabaseScaleLcmConfigRefreshDetailArgs{...}
type NdbDatabaseScaleLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigRefreshDetailOutput() NdbDatabaseScaleLcmConfigRefreshDetailOutput
	ToNdbDatabaseScaleLcmConfigRefreshDetailOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigRefreshDetailOutput
}

type NdbDatabaseScaleLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbDatabaseScaleLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigRefreshDetailArgs) ToNdbDatabaseScaleLcmConfigRefreshDetailOutput() NdbDatabaseScaleLcmConfigRefreshDetailOutput {
	return i.ToNdbDatabaseScaleLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigRefreshDetailArgs) ToNdbDatabaseScaleLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigRefreshDetailOutput)
}

// NdbDatabaseScaleLcmConfigRefreshDetailArrayInput is an input type that accepts NdbDatabaseScaleLcmConfigRefreshDetailArray and NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLcmConfigRefreshDetailArrayInput` via:
//
//	NdbDatabaseScaleLcmConfigRefreshDetailArray{ NdbDatabaseScaleLcmConfigRefreshDetailArgs{...} }
type NdbDatabaseScaleLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutput() NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput
	ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput
}

type NdbDatabaseScaleLcmConfigRefreshDetailArray []NdbDatabaseScaleLcmConfigRefreshDetailInput

func (NdbDatabaseScaleLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseScaleLcmConfigRefreshDetailArray) ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutput() NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLcmConfigRefreshDetailArray) ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseScaleLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) ToNdbDatabaseScaleLcmConfigRefreshDetailOutput() NdbDatabaseScaleLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) ToNdbDatabaseScaleLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutput() NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseScaleLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLcmConfigRefreshDetail {
		return vs[0].([]NdbDatabaseScaleLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbDatabaseScaleLcmConfigRefreshDetailOutput)
}

type NdbDatabaseScaleLinkedDatabase struct {
	// name of database
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbDatabaseScaleLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbDatabaseScaleLinkedDatabaseInput is an input type that accepts NdbDatabaseScaleLinkedDatabaseArgs and NdbDatabaseScaleLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLinkedDatabaseInput` via:
//
//	NdbDatabaseScaleLinkedDatabaseArgs{...}
type NdbDatabaseScaleLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLinkedDatabaseOutput() NdbDatabaseScaleLinkedDatabaseOutput
	ToNdbDatabaseScaleLinkedDatabaseOutputWithContext(context.Context) NdbDatabaseScaleLinkedDatabaseOutput
}

type NdbDatabaseScaleLinkedDatabaseArgs struct {
	// name of database
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbDatabaseScaleLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbDatabaseScaleLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseScaleLinkedDatabaseArgs) ToNdbDatabaseScaleLinkedDatabaseOutput() NdbDatabaseScaleLinkedDatabaseOutput {
	return i.ToNdbDatabaseScaleLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLinkedDatabaseArgs) ToNdbDatabaseScaleLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLinkedDatabaseOutput)
}

// NdbDatabaseScaleLinkedDatabaseArrayInput is an input type that accepts NdbDatabaseScaleLinkedDatabaseArray and NdbDatabaseScaleLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLinkedDatabaseArrayInput` via:
//
//	NdbDatabaseScaleLinkedDatabaseArray{ NdbDatabaseScaleLinkedDatabaseArgs{...} }
type NdbDatabaseScaleLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLinkedDatabaseArrayOutput() NdbDatabaseScaleLinkedDatabaseArrayOutput
	ToNdbDatabaseScaleLinkedDatabaseArrayOutputWithContext(context.Context) NdbDatabaseScaleLinkedDatabaseArrayOutput
}

type NdbDatabaseScaleLinkedDatabaseArray []NdbDatabaseScaleLinkedDatabaseInput

func (NdbDatabaseScaleLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLinkedDatabase)(nil)).Elem()
}

func (i NdbDatabaseScaleLinkedDatabaseArray) ToNdbDatabaseScaleLinkedDatabaseArrayOutput() NdbDatabaseScaleLinkedDatabaseArrayOutput {
	return i.ToNdbDatabaseScaleLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLinkedDatabaseArray) ToNdbDatabaseScaleLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLinkedDatabaseArrayOutput)
}

type NdbDatabaseScaleLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) ToNdbDatabaseScaleLinkedDatabaseOutput() NdbDatabaseScaleLinkedDatabaseOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) ToNdbDatabaseScaleLinkedDatabaseOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbDatabaseScaleLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) Infos() NdbDatabaseScaleLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) []NdbDatabaseScaleLinkedDatabaseInfo { return v.Infos }).(NdbDatabaseScaleLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbDatabaseScaleLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbDatabaseScaleLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbDatabaseScaleLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLinkedDatabase)(nil)).Elem()
}

func (o NdbDatabaseScaleLinkedDatabaseArrayOutput) ToNdbDatabaseScaleLinkedDatabaseArrayOutput() NdbDatabaseScaleLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseArrayOutput) ToNdbDatabaseScaleLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseArrayOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLinkedDatabase {
		return vs[0].([]NdbDatabaseScaleLinkedDatabase)[vs[1].(int)]
	}).(NdbDatabaseScaleLinkedDatabaseOutput)
}

type NdbDatabaseScaleLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbDatabaseScaleLinkedDatabaseInfoInput is an input type that accepts NdbDatabaseScaleLinkedDatabaseInfoArgs and NdbDatabaseScaleLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLinkedDatabaseInfoInput` via:
//
//	NdbDatabaseScaleLinkedDatabaseInfoArgs{...}
type NdbDatabaseScaleLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLinkedDatabaseInfoOutput() NdbDatabaseScaleLinkedDatabaseInfoOutput
	ToNdbDatabaseScaleLinkedDatabaseInfoOutputWithContext(context.Context) NdbDatabaseScaleLinkedDatabaseInfoOutput
}

type NdbDatabaseScaleLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbDatabaseScaleLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleLinkedDatabaseInfoArgs) ToNdbDatabaseScaleLinkedDatabaseInfoOutput() NdbDatabaseScaleLinkedDatabaseInfoOutput {
	return i.ToNdbDatabaseScaleLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLinkedDatabaseInfoArgs) ToNdbDatabaseScaleLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLinkedDatabaseInfoOutput)
}

// NdbDatabaseScaleLinkedDatabaseInfoArrayInput is an input type that accepts NdbDatabaseScaleLinkedDatabaseInfoArray and NdbDatabaseScaleLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleLinkedDatabaseInfoArrayInput` via:
//
//	NdbDatabaseScaleLinkedDatabaseInfoArray{ NdbDatabaseScaleLinkedDatabaseInfoArgs{...} }
type NdbDatabaseScaleLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutput() NdbDatabaseScaleLinkedDatabaseInfoArrayOutput
	ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbDatabaseScaleLinkedDatabaseInfoArrayOutput
}

type NdbDatabaseScaleLinkedDatabaseInfoArray []NdbDatabaseScaleLinkedDatabaseInfoInput

func (NdbDatabaseScaleLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbDatabaseScaleLinkedDatabaseInfoArray) ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutput() NdbDatabaseScaleLinkedDatabaseInfoArrayOutput {
	return i.ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleLinkedDatabaseInfoArray) ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleLinkedDatabaseInfoArrayOutput)
}

type NdbDatabaseScaleLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleLinkedDatabaseInfoOutput) ToNdbDatabaseScaleLinkedDatabaseInfoOutput() NdbDatabaseScaleLinkedDatabaseInfoOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseInfoOutput) ToNdbDatabaseScaleLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbDatabaseScaleLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbDatabaseScaleLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbDatabaseScaleLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbDatabaseScaleLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbDatabaseScaleLinkedDatabaseInfoArrayOutput) ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutput() NdbDatabaseScaleLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseInfoArrayOutput) ToNdbDatabaseScaleLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbDatabaseScaleLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleLinkedDatabaseInfo {
		return vs[0].([]NdbDatabaseScaleLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbDatabaseScaleLinkedDatabaseInfoOutput)
}

type NdbDatabaseScaleProperty struct {
	// Name of database instance
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbDatabaseScalePropertyInput is an input type that accepts NdbDatabaseScalePropertyArgs and NdbDatabaseScalePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseScalePropertyInput` via:
//
//	NdbDatabaseScalePropertyArgs{...}
type NdbDatabaseScalePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseScalePropertyOutput() NdbDatabaseScalePropertyOutput
	ToNdbDatabaseScalePropertyOutputWithContext(context.Context) NdbDatabaseScalePropertyOutput
}

type NdbDatabaseScalePropertyArgs struct {
	// Name of database instance
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScalePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleProperty)(nil)).Elem()
}

func (i NdbDatabaseScalePropertyArgs) ToNdbDatabaseScalePropertyOutput() NdbDatabaseScalePropertyOutput {
	return i.ToNdbDatabaseScalePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseScalePropertyArgs) ToNdbDatabaseScalePropertyOutputWithContext(ctx context.Context) NdbDatabaseScalePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScalePropertyOutput)
}

// NdbDatabaseScalePropertyArrayInput is an input type that accepts NdbDatabaseScalePropertyArray and NdbDatabaseScalePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScalePropertyArrayInput` via:
//
//	NdbDatabaseScalePropertyArray{ NdbDatabaseScalePropertyArgs{...} }
type NdbDatabaseScalePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScalePropertyArrayOutput() NdbDatabaseScalePropertyArrayOutput
	ToNdbDatabaseScalePropertyArrayOutputWithContext(context.Context) NdbDatabaseScalePropertyArrayOutput
}

type NdbDatabaseScalePropertyArray []NdbDatabaseScalePropertyInput

func (NdbDatabaseScalePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleProperty)(nil)).Elem()
}

func (i NdbDatabaseScalePropertyArray) ToNdbDatabaseScalePropertyArrayOutput() NdbDatabaseScalePropertyArrayOutput {
	return i.ToNdbDatabaseScalePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScalePropertyArray) ToNdbDatabaseScalePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScalePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScalePropertyArrayOutput)
}

type NdbDatabaseScalePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScalePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleProperty)(nil)).Elem()
}

func (o NdbDatabaseScalePropertyOutput) ToNdbDatabaseScalePropertyOutput() NdbDatabaseScalePropertyOutput {
	return o
}

func (o NdbDatabaseScalePropertyOutput) ToNdbDatabaseScalePropertyOutputWithContext(ctx context.Context) NdbDatabaseScalePropertyOutput {
	return o
}

// Name of database instance
func (o NdbDatabaseScalePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScalePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScalePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScalePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleProperty)(nil)).Elem()
}

func (o NdbDatabaseScalePropertyArrayOutput) ToNdbDatabaseScalePropertyArrayOutput() NdbDatabaseScalePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScalePropertyArrayOutput) ToNdbDatabaseScalePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScalePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScalePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScalePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleProperty {
		return vs[0].([]NdbDatabaseScaleProperty)[vs[1].(int)]
	}).(NdbDatabaseScalePropertyOutput)
}

type NdbDatabaseScaleTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseScaleTagInput is an input type that accepts NdbDatabaseScaleTagArgs and NdbDatabaseScaleTagOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTagInput` via:
//
//	NdbDatabaseScaleTagArgs{...}
type NdbDatabaseScaleTagInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTagOutput() NdbDatabaseScaleTagOutput
	ToNdbDatabaseScaleTagOutputWithContext(context.Context) NdbDatabaseScaleTagOutput
}

type NdbDatabaseScaleTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTag)(nil)).Elem()
}

func (i NdbDatabaseScaleTagArgs) ToNdbDatabaseScaleTagOutput() NdbDatabaseScaleTagOutput {
	return i.ToNdbDatabaseScaleTagOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTagArgs) ToNdbDatabaseScaleTagOutputWithContext(ctx context.Context) NdbDatabaseScaleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTagOutput)
}

// NdbDatabaseScaleTagArrayInput is an input type that accepts NdbDatabaseScaleTagArray and NdbDatabaseScaleTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTagArrayInput` via:
//
//	NdbDatabaseScaleTagArray{ NdbDatabaseScaleTagArgs{...} }
type NdbDatabaseScaleTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTagArrayOutput() NdbDatabaseScaleTagArrayOutput
	ToNdbDatabaseScaleTagArrayOutputWithContext(context.Context) NdbDatabaseScaleTagArrayOutput
}

type NdbDatabaseScaleTagArray []NdbDatabaseScaleTagInput

func (NdbDatabaseScaleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTag)(nil)).Elem()
}

func (i NdbDatabaseScaleTagArray) ToNdbDatabaseScaleTagArrayOutput() NdbDatabaseScaleTagArrayOutput {
	return i.ToNdbDatabaseScaleTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTagArray) ToNdbDatabaseScaleTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTagArrayOutput)
}

type NdbDatabaseScaleTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTag)(nil)).Elem()
}

func (o NdbDatabaseScaleTagOutput) ToNdbDatabaseScaleTagOutput() NdbDatabaseScaleTagOutput {
	return o
}

func (o NdbDatabaseScaleTagOutput) ToNdbDatabaseScaleTagOutputWithContext(ctx context.Context) NdbDatabaseScaleTagOutput {
	return o
}

func (o NdbDatabaseScaleTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTag)(nil)).Elem()
}

func (o NdbDatabaseScaleTagArrayOutput) ToNdbDatabaseScaleTagArrayOutput() NdbDatabaseScaleTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleTagArrayOutput) ToNdbDatabaseScaleTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTag {
		return vs[0].([]NdbDatabaseScaleTag)[vs[1].(int)]
	}).(NdbDatabaseScaleTagOutput)
}

type NdbDatabaseScaleTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      *bool   `pulumi:"clone"`
	Clones     *string `pulumi:"clones"`
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties          []NdbDatabaseScaleTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                               `pulumi:"scheduleId"`
	Schedules           []NdbDatabaseScaleTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                               `pulumi:"scope"`
	SlaId               *string                               `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                 `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                               `pulumi:"slaUpdateMetadata"`
	Slas                []NdbDatabaseScaleTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                              `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbDatabaseScaleTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbDatabaseScaleTimeMachineInput is an input type that accepts NdbDatabaseScaleTimeMachineArgs and NdbDatabaseScaleTimeMachineOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineInput` via:
//
//	NdbDatabaseScaleTimeMachineArgs{...}
type NdbDatabaseScaleTimeMachineInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineOutput() NdbDatabaseScaleTimeMachineOutput
	ToNdbDatabaseScaleTimeMachineOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineOutput
}

type NdbDatabaseScaleTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones     pulumi.StringPtrInput `pulumi:"clones"`
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties          NdbDatabaseScaleTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                         `pulumi:"scheduleId"`
	Schedules           NdbDatabaseScaleTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                         `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                         `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                           `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                         `pulumi:"slaUpdateMetadata"`
	Slas                NdbDatabaseScaleTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                       `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbDatabaseScaleTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbDatabaseScaleTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineArgs) ToNdbDatabaseScaleTimeMachineOutput() NdbDatabaseScaleTimeMachineOutput {
	return i.ToNdbDatabaseScaleTimeMachineOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineArgs) ToNdbDatabaseScaleTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineOutput)
}

// NdbDatabaseScaleTimeMachineArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineArray and NdbDatabaseScaleTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineArray{ NdbDatabaseScaleTimeMachineArgs{...} }
type NdbDatabaseScaleTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineArrayOutput() NdbDatabaseScaleTimeMachineArrayOutput
	ToNdbDatabaseScaleTimeMachineArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineArrayOutput
}

type NdbDatabaseScaleTimeMachineArray []NdbDatabaseScaleTimeMachineInput

func (NdbDatabaseScaleTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineArray) ToNdbDatabaseScaleTimeMachineArrayOutput() NdbDatabaseScaleTimeMachineArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineArray) ToNdbDatabaseScaleTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineArrayOutput)
}

type NdbDatabaseScaleTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineOutput) ToNdbDatabaseScaleTimeMachineOutput() NdbDatabaseScaleTimeMachineOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineOutput) ToNdbDatabaseScaleTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbDatabaseScaleTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbDatabaseScaleTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbDatabaseScaleTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbDatabaseScaleTimeMachineOutput) Properties() NdbDatabaseScaleTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) []NdbDatabaseScaleTimeMachineProperty { return v.Properties }).(NdbDatabaseScaleTimeMachinePropertyArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Schedules() NdbDatabaseScaleTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) []NdbDatabaseScaleTimeMachineSchedule { return v.Schedules }).(NdbDatabaseScaleTimeMachineScheduleArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) Slas() NdbDatabaseScaleTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) []NdbDatabaseScaleTimeMachineSla { return v.Slas }).(NdbDatabaseScaleTimeMachineSlaArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbDatabaseScaleTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbDatabaseScaleTimeMachineOutput) Tags() NdbDatabaseScaleTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) []NdbDatabaseScaleTimeMachineTag { return v.Tags }).(NdbDatabaseScaleTimeMachineTagArrayOutput)
}

// type of database
func (o NdbDatabaseScaleTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineArrayOutput) ToNdbDatabaseScaleTimeMachineArrayOutput() NdbDatabaseScaleTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineArrayOutput) ToNdbDatabaseScaleTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachine {
		return vs[0].([]NdbDatabaseScaleTimeMachine)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineOutput)
}

type NdbDatabaseScaleTimeMachineProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseScaleTimeMachinePropertyInput is an input type that accepts NdbDatabaseScaleTimeMachinePropertyArgs and NdbDatabaseScaleTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachinePropertyInput` via:
//
//	NdbDatabaseScaleTimeMachinePropertyArgs{...}
type NdbDatabaseScaleTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachinePropertyOutput() NdbDatabaseScaleTimeMachinePropertyOutput
	ToNdbDatabaseScaleTimeMachinePropertyOutputWithContext(context.Context) NdbDatabaseScaleTimeMachinePropertyOutput
}

type NdbDatabaseScaleTimeMachinePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachinePropertyArgs) ToNdbDatabaseScaleTimeMachinePropertyOutput() NdbDatabaseScaleTimeMachinePropertyOutput {
	return i.ToNdbDatabaseScaleTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachinePropertyArgs) ToNdbDatabaseScaleTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachinePropertyOutput)
}

// NdbDatabaseScaleTimeMachinePropertyArrayInput is an input type that accepts NdbDatabaseScaleTimeMachinePropertyArray and NdbDatabaseScaleTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachinePropertyArrayInput` via:
//
//	NdbDatabaseScaleTimeMachinePropertyArray{ NdbDatabaseScaleTimeMachinePropertyArgs{...} }
type NdbDatabaseScaleTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachinePropertyArrayOutput() NdbDatabaseScaleTimeMachinePropertyArrayOutput
	ToNdbDatabaseScaleTimeMachinePropertyArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachinePropertyArrayOutput
}

type NdbDatabaseScaleTimeMachinePropertyArray []NdbDatabaseScaleTimeMachinePropertyInput

func (NdbDatabaseScaleTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachinePropertyArray) ToNdbDatabaseScaleTimeMachinePropertyArrayOutput() NdbDatabaseScaleTimeMachinePropertyArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachinePropertyArray) ToNdbDatabaseScaleTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachinePropertyArrayOutput)
}

type NdbDatabaseScaleTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachinePropertyOutput) ToNdbDatabaseScaleTimeMachinePropertyOutput() NdbDatabaseScaleTimeMachinePropertyOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachinePropertyOutput) ToNdbDatabaseScaleTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachinePropertyOutput {
	return o
}

// description of database instance
func (o NdbDatabaseScaleTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachinePropertyArrayOutput) ToNdbDatabaseScaleTimeMachinePropertyArrayOutput() NdbDatabaseScaleTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachinePropertyArrayOutput) ToNdbDatabaseScaleTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineProperty {
		return vs[0].([]NdbDatabaseScaleTimeMachineProperty)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachinePropertyOutput)
}

type NdbDatabaseScaleTimeMachineSchedule struct {
	ContinuousSchedules []NdbDatabaseScaleTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbDatabaseScaleTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string                                              `pulumi:"description"`
	GlobalPolicy     *bool                                                `pulumi:"globalPolicy"`
	Id               *string                                              `pulumi:"id"`
	MonthlySchedules []NdbDatabaseScaleTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                `pulumi:"name"`
	OwnerId            *string                                                `pulumi:"ownerId"`
	QuartelySchedules  []NdbDatabaseScaleTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                   `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                `pulumi:"startTime"`
	SystemPolicy       *bool                                                  `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                             `pulumi:"timeZone"`
	UniqueName      *string                                             `pulumi:"uniqueName"`
	WeeklySchedules []NdbDatabaseScaleTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbDatabaseScaleTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbDatabaseScaleTimeMachineScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleArgs and NdbDatabaseScaleTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleOutput() NdbDatabaseScaleTimeMachineScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput                                        `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                          `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                        `pulumi:"id"`
	MonthlySchedules NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                          `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                          `pulumi:"ownerId"`
	QuartelySchedules  NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                             `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                          `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                            `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                       `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                       `pulumi:"uniqueName"`
	WeeklySchedules NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbDatabaseScaleTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleOutput() NdbDatabaseScaleTimeMachineScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleArray and NdbDatabaseScaleTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleArray{ NdbDatabaseScaleTimeMachineScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleArray []NdbDatabaseScaleTimeMachineScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleOutput() NdbDatabaseScaleTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) ContinuousSchedules() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) DailySchedules() NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbDatabaseScaleTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) MonthlySchedules() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbDatabaseScaleTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) QuartelySchedules() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbDatabaseScaleTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) WeeklySchedules() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleOutput) YearlySchedules() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSchedule) []NdbDatabaseScaleTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineSchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineSchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbDatabaseScaleTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs and NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray and NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray{ NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray []NdbDatabaseScaleTimeMachineScheduleContinuousScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbDatabaseScaleTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs and NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray and NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray{ NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray []NdbDatabaseScaleTimeMachineScheduleDailyScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs and NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray and NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray{ NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray []NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs and NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray and NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray{ NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray []NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs and NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray and NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray{ NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray []NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs and NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray and NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray{ NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray []NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbDatabaseScaleTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbDatabaseScaleTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs and NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs{...}
type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput
	ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput
}

type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput)
}

// NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray and NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray{ NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray []NdbDatabaseScaleTimeMachineScheduleYearlyScheduleInput

func (NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbDatabaseScaleTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput)
}

type NdbDatabaseScaleTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbDatabaseScaleTimeMachineSlaInput is an input type that accepts NdbDatabaseScaleTimeMachineSlaArgs and NdbDatabaseScaleTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineSlaInput` via:
//
//	NdbDatabaseScaleTimeMachineSlaArgs{...}
type NdbDatabaseScaleTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineSlaOutput() NdbDatabaseScaleTimeMachineSlaOutput
	ToNdbDatabaseScaleTimeMachineSlaOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineSlaOutput
}

type NdbDatabaseScaleTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbDatabaseScaleTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineSlaArgs) ToNdbDatabaseScaleTimeMachineSlaOutput() NdbDatabaseScaleTimeMachineSlaOutput {
	return i.ToNdbDatabaseScaleTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineSlaArgs) ToNdbDatabaseScaleTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineSlaOutput)
}

// NdbDatabaseScaleTimeMachineSlaArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineSlaArray and NdbDatabaseScaleTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineSlaArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineSlaArray{ NdbDatabaseScaleTimeMachineSlaArgs{...} }
type NdbDatabaseScaleTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineSlaArrayOutput() NdbDatabaseScaleTimeMachineSlaArrayOutput
	ToNdbDatabaseScaleTimeMachineSlaArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineSlaArrayOutput
}

type NdbDatabaseScaleTimeMachineSlaArray []NdbDatabaseScaleTimeMachineSlaInput

func (NdbDatabaseScaleTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineSlaArray) ToNdbDatabaseScaleTimeMachineSlaArrayOutput() NdbDatabaseScaleTimeMachineSlaArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineSlaArray) ToNdbDatabaseScaleTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineSlaArrayOutput)
}

type NdbDatabaseScaleTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) ToNdbDatabaseScaleTimeMachineSlaOutput() NdbDatabaseScaleTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) ToNdbDatabaseScaleTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbDatabaseScaleTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbDatabaseScaleTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbDatabaseScaleTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbDatabaseScaleTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbDatabaseScaleTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineSlaArrayOutput) ToNdbDatabaseScaleTimeMachineSlaArrayOutput() NdbDatabaseScaleTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineSlaArrayOutput) ToNdbDatabaseScaleTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineSla {
		return vs[0].([]NdbDatabaseScaleTimeMachineSla)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineSlaOutput)
}

type NdbDatabaseScaleTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseScaleTimeMachineTagInput is an input type that accepts NdbDatabaseScaleTimeMachineTagArgs and NdbDatabaseScaleTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineTagInput` via:
//
//	NdbDatabaseScaleTimeMachineTagArgs{...}
type NdbDatabaseScaleTimeMachineTagInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineTagOutput() NdbDatabaseScaleTimeMachineTagOutput
	ToNdbDatabaseScaleTimeMachineTagOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineTagOutput
}

type NdbDatabaseScaleTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseScaleTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineTagArgs) ToNdbDatabaseScaleTimeMachineTagOutput() NdbDatabaseScaleTimeMachineTagOutput {
	return i.ToNdbDatabaseScaleTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineTagArgs) ToNdbDatabaseScaleTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineTagOutput)
}

// NdbDatabaseScaleTimeMachineTagArrayInput is an input type that accepts NdbDatabaseScaleTimeMachineTagArray and NdbDatabaseScaleTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseScaleTimeMachineTagArrayInput` via:
//
//	NdbDatabaseScaleTimeMachineTagArray{ NdbDatabaseScaleTimeMachineTagArgs{...} }
type NdbDatabaseScaleTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseScaleTimeMachineTagArrayOutput() NdbDatabaseScaleTimeMachineTagArrayOutput
	ToNdbDatabaseScaleTimeMachineTagArrayOutputWithContext(context.Context) NdbDatabaseScaleTimeMachineTagArrayOutput
}

type NdbDatabaseScaleTimeMachineTagArray []NdbDatabaseScaleTimeMachineTagInput

func (NdbDatabaseScaleTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseScaleTimeMachineTagArray) ToNdbDatabaseScaleTimeMachineTagArrayOutput() NdbDatabaseScaleTimeMachineTagArrayOutput {
	return i.ToNdbDatabaseScaleTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseScaleTimeMachineTagArray) ToNdbDatabaseScaleTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseScaleTimeMachineTagArrayOutput)
}

type NdbDatabaseScaleTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseScaleTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineTagOutput) ToNdbDatabaseScaleTimeMachineTagOutput() NdbDatabaseScaleTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineTagOutput) ToNdbDatabaseScaleTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseScaleTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseScaleTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseScaleTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseScaleTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseScaleTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseScaleTimeMachineTagArrayOutput) ToNdbDatabaseScaleTimeMachineTagArrayOutput() NdbDatabaseScaleTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineTagArrayOutput) ToNdbDatabaseScaleTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseScaleTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseScaleTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseScaleTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseScaleTimeMachineTag {
		return vs[0].([]NdbDatabaseScaleTimeMachineTag)[vs[1].(int)]
	}).(NdbDatabaseScaleTimeMachineTagOutput)
}

type NdbDatabaseSnapshotLcmConfig struct {
	ExpiryDetails      []NdbDatabaseSnapshotLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbDatabaseSnapshotLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbDatabaseSnapshotLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbDatabaseSnapshotLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbDatabaseSnapshotLcmConfigInput is an input type that accepts NdbDatabaseSnapshotLcmConfigArgs and NdbDatabaseSnapshotLcmConfigOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigInput` via:
//
//	NdbDatabaseSnapshotLcmConfigArgs{...}
type NdbDatabaseSnapshotLcmConfigInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigOutput() NdbDatabaseSnapshotLcmConfigOutput
	ToNdbDatabaseSnapshotLcmConfigOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigOutput
}

type NdbDatabaseSnapshotLcmConfigArgs struct {
	ExpiryDetails      NdbDatabaseSnapshotLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbDatabaseSnapshotLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigArgs) ToNdbDatabaseSnapshotLcmConfigOutput() NdbDatabaseSnapshotLcmConfigOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigArgs) ToNdbDatabaseSnapshotLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigOutput)
}

// NdbDatabaseSnapshotLcmConfigArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigArray and NdbDatabaseSnapshotLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigArray{ NdbDatabaseSnapshotLcmConfigArgs{...} }
type NdbDatabaseSnapshotLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigArrayOutput() NdbDatabaseSnapshotLcmConfigArrayOutput
	ToNdbDatabaseSnapshotLcmConfigArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigArrayOutput
}

type NdbDatabaseSnapshotLcmConfigArray []NdbDatabaseSnapshotLcmConfigInput

func (NdbDatabaseSnapshotLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfig)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigArray) ToNdbDatabaseSnapshotLcmConfigArrayOutput() NdbDatabaseSnapshotLcmConfigArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigArray) ToNdbDatabaseSnapshotLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigOutput) ToNdbDatabaseSnapshotLcmConfigOutput() NdbDatabaseSnapshotLcmConfigOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigOutput) ToNdbDatabaseSnapshotLcmConfigOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigOutput) ExpiryDetails() NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfig) []NdbDatabaseSnapshotLcmConfigExpiryDetail {
		return v.ExpiryDetails
	}).(NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput)
}

func (o NdbDatabaseSnapshotLcmConfigOutput) PostDeleteCommands() NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfig) []NdbDatabaseSnapshotLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbDatabaseSnapshotLcmConfigOutput) PreDeleteCommands() NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfig) []NdbDatabaseSnapshotLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbDatabaseSnapshotLcmConfigOutput) RefreshDetails() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfig) []NdbDatabaseSnapshotLcmConfigRefreshDetail {
		return v.RefreshDetails
	}).(NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfig)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigArrayOutput) ToNdbDatabaseSnapshotLcmConfigArrayOutput() NdbDatabaseSnapshotLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigArrayOutput) ToNdbDatabaseSnapshotLcmConfigArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfig {
		return vs[0].([]NdbDatabaseSnapshotLcmConfig)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigOutput)
}

type NdbDatabaseSnapshotLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	// Default is set to Asia/Calcutta
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbDatabaseSnapshotLcmConfigExpiryDetailInput is an input type that accepts NdbDatabaseSnapshotLcmConfigExpiryDetailArgs and NdbDatabaseSnapshotLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigExpiryDetailInput` via:
//
//	NdbDatabaseSnapshotLcmConfigExpiryDetailArgs{...}
type NdbDatabaseSnapshotLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailOutput
	ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailOutput
}

type NdbDatabaseSnapshotLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	// Default is set to Asia/Calcutta
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbDatabaseSnapshotLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigExpiryDetailArgs) ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigExpiryDetailArgs) ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigExpiryDetailOutput)
}

// NdbDatabaseSnapshotLcmConfigExpiryDetailArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigExpiryDetailArray and NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigExpiryDetailArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigExpiryDetailArray{ NdbDatabaseSnapshotLcmConfigExpiryDetailArgs{...} }
type NdbDatabaseSnapshotLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput
	ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput
}

type NdbDatabaseSnapshotLcmConfigExpiryDetailArray []NdbDatabaseSnapshotLcmConfigExpiryDetailInput

func (NdbDatabaseSnapshotLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigExpiryDetailArray) ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigExpiryDetailArray) ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ToNdbDatabaseSnapshotLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

// Default is set to Asia/Calcutta
func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput() NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfigExpiryDetail {
		return vs[0].([]NdbDatabaseSnapshotLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigExpiryDetailOutput)
}

type NdbDatabaseSnapshotLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseSnapshotLcmConfigPostDeleteCommandInput is an input type that accepts NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs and NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigPostDeleteCommandInput` via:
//
//	NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs{...}
type NdbDatabaseSnapshotLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput
	ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput
}

type NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput)
}

// NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray and NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray{ NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs{...} }
type NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput
	ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput
}

type NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray []NdbDatabaseSnapshotLcmConfigPostDeleteCommandInput

func (NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput) ToNdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfigPostDeleteCommand {
		return vs[0].([]NdbDatabaseSnapshotLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput)
}

type NdbDatabaseSnapshotLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbDatabaseSnapshotLcmConfigPreDeleteCommandInput is an input type that accepts NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs and NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigPreDeleteCommandInput` via:
//
//	NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs{...}
type NdbDatabaseSnapshotLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput
	ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput
}

type NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput)
}

// NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray and NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray{ NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs{...} }
type NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput
	ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput
}

type NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray []NdbDatabaseSnapshotLcmConfigPreDeleteCommandInput

func (NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput() NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput) ToNdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfigPreDeleteCommand {
		return vs[0].([]NdbDatabaseSnapshotLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput)
}

type NdbDatabaseSnapshotLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbDatabaseSnapshotLcmConfigRefreshDetailInput is an input type that accepts NdbDatabaseSnapshotLcmConfigRefreshDetailArgs and NdbDatabaseSnapshotLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigRefreshDetailInput` via:
//
//	NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{...}
type NdbDatabaseSnapshotLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput
	ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArgs) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput)
}

// NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput is an input type that accepts NdbDatabaseSnapshotLcmConfigRefreshDetailArray and NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput` via:
//
//	NdbDatabaseSnapshotLcmConfigRefreshDetailArray{ NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{...} }
type NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput
	ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArray []NdbDatabaseSnapshotLcmConfigRefreshDetailInput

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotLcmConfigRefreshDetailArray) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput)
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput() NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) ToNdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotLcmConfigRefreshDetail {
		return vs[0].([]NdbDatabaseSnapshotLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput)
}

type NdbDatabaseSnapshotProperty struct {
	// description of snapshot
	Description *string `pulumi:"description"`
	// Snapshot name. Default value is era_manual_snapshot.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseSnapshotPropertyInput is an input type that accepts NdbDatabaseSnapshotPropertyArgs and NdbDatabaseSnapshotPropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotPropertyInput` via:
//
//	NdbDatabaseSnapshotPropertyArgs{...}
type NdbDatabaseSnapshotPropertyInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput
	ToNdbDatabaseSnapshotPropertyOutputWithContext(context.Context) NdbDatabaseSnapshotPropertyOutput
}

type NdbDatabaseSnapshotPropertyArgs struct {
	// description of snapshot
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Snapshot name. Default value is era_manual_snapshot.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseSnapshotPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (i NdbDatabaseSnapshotPropertyArgs) ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput {
	return i.ToNdbDatabaseSnapshotPropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotPropertyArgs) ToNdbDatabaseSnapshotPropertyOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotPropertyOutput)
}

// NdbDatabaseSnapshotPropertyArrayInput is an input type that accepts NdbDatabaseSnapshotPropertyArray and NdbDatabaseSnapshotPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotPropertyArrayInput` via:
//
//	NdbDatabaseSnapshotPropertyArray{ NdbDatabaseSnapshotPropertyArgs{...} }
type NdbDatabaseSnapshotPropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput
	ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(context.Context) NdbDatabaseSnapshotPropertyArrayOutput
}

type NdbDatabaseSnapshotPropertyArray []NdbDatabaseSnapshotPropertyInput

func (NdbDatabaseSnapshotPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (i NdbDatabaseSnapshotPropertyArray) ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput {
	return i.ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotPropertyArray) ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotPropertyArrayOutput)
}

type NdbDatabaseSnapshotPropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (o NdbDatabaseSnapshotPropertyOutput) ToNdbDatabaseSnapshotPropertyOutput() NdbDatabaseSnapshotPropertyOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyOutput) ToNdbDatabaseSnapshotPropertyOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyOutput {
	return o
}

// description of snapshot
func (o NdbDatabaseSnapshotPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Snapshot name. Default value is era_manual_snapshot.
func (o NdbDatabaseSnapshotPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseSnapshotPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotProperty)(nil)).Elem()
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) ToNdbDatabaseSnapshotPropertyArrayOutput() NdbDatabaseSnapshotPropertyArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) ToNdbDatabaseSnapshotPropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotPropertyArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotPropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotProperty {
		return vs[0].([]NdbDatabaseSnapshotProperty)[vs[1].(int)]
	}).(NdbDatabaseSnapshotPropertyOutput)
}

type NdbDatabaseSnapshotTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseSnapshotTagInput is an input type that accepts NdbDatabaseSnapshotTagArgs and NdbDatabaseSnapshotTagOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotTagInput` via:
//
//	NdbDatabaseSnapshotTagArgs{...}
type NdbDatabaseSnapshotTagInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput
	ToNdbDatabaseSnapshotTagOutputWithContext(context.Context) NdbDatabaseSnapshotTagOutput
}

type NdbDatabaseSnapshotTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseSnapshotTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (i NdbDatabaseSnapshotTagArgs) ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput {
	return i.ToNdbDatabaseSnapshotTagOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotTagArgs) ToNdbDatabaseSnapshotTagOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotTagOutput)
}

// NdbDatabaseSnapshotTagArrayInput is an input type that accepts NdbDatabaseSnapshotTagArray and NdbDatabaseSnapshotTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseSnapshotTagArrayInput` via:
//
//	NdbDatabaseSnapshotTagArray{ NdbDatabaseSnapshotTagArgs{...} }
type NdbDatabaseSnapshotTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput
	ToNdbDatabaseSnapshotTagArrayOutputWithContext(context.Context) NdbDatabaseSnapshotTagArrayOutput
}

type NdbDatabaseSnapshotTagArray []NdbDatabaseSnapshotTagInput

func (NdbDatabaseSnapshotTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (i NdbDatabaseSnapshotTagArray) ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput {
	return i.ToNdbDatabaseSnapshotTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseSnapshotTagArray) ToNdbDatabaseSnapshotTagArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseSnapshotTagArrayOutput)
}

type NdbDatabaseSnapshotTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (o NdbDatabaseSnapshotTagOutput) ToNdbDatabaseSnapshotTagOutput() NdbDatabaseSnapshotTagOutput {
	return o
}

func (o NdbDatabaseSnapshotTagOutput) ToNdbDatabaseSnapshotTagOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagOutput {
	return o
}

func (o NdbDatabaseSnapshotTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseSnapshotTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseSnapshotTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseSnapshotTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseSnapshotTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseSnapshotTag)(nil)).Elem()
}

func (o NdbDatabaseSnapshotTagArrayOutput) ToNdbDatabaseSnapshotTagArrayOutput() NdbDatabaseSnapshotTagArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotTagArrayOutput) ToNdbDatabaseSnapshotTagArrayOutputWithContext(ctx context.Context) NdbDatabaseSnapshotTagArrayOutput {
	return o
}

func (o NdbDatabaseSnapshotTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseSnapshotTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseSnapshotTag {
		return vs[0].([]NdbDatabaseSnapshotTag)[vs[1].(int)]
	}).(NdbDatabaseSnapshotTagOutput)
}

type NdbDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseTagInput is an input type that accepts NdbDatabaseTagArgs and NdbDatabaseTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTagInput` via:
//
//	NdbDatabaseTagArgs{...}
type NdbDatabaseTagInput interface {
	pulumi.Input

	ToNdbDatabaseTagOutput() NdbDatabaseTagOutput
	ToNdbDatabaseTagOutputWithContext(context.Context) NdbDatabaseTagOutput
}

type NdbDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTag)(nil)).Elem()
}

func (i NdbDatabaseTagArgs) ToNdbDatabaseTagOutput() NdbDatabaseTagOutput {
	return i.ToNdbDatabaseTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTagArgs) ToNdbDatabaseTagOutputWithContext(ctx context.Context) NdbDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTagOutput)
}

// NdbDatabaseTagArrayInput is an input type that accepts NdbDatabaseTagArray and NdbDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTagArrayInput` via:
//
//	NdbDatabaseTagArray{ NdbDatabaseTagArgs{...} }
type NdbDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput
	ToNdbDatabaseTagArrayOutputWithContext(context.Context) NdbDatabaseTagArrayOutput
}

type NdbDatabaseTagArray []NdbDatabaseTagInput

func (NdbDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTag)(nil)).Elem()
}

func (i NdbDatabaseTagArray) ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput {
	return i.ToNdbDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTagArray) ToNdbDatabaseTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTagArrayOutput)
}

type NdbDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTag)(nil)).Elem()
}

func (o NdbDatabaseTagOutput) ToNdbDatabaseTagOutput() NdbDatabaseTagOutput {
	return o
}

func (o NdbDatabaseTagOutput) ToNdbDatabaseTagOutputWithContext(ctx context.Context) NdbDatabaseTagOutput {
	return o
}

func (o NdbDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTag)(nil)).Elem()
}

func (o NdbDatabaseTagArrayOutput) ToNdbDatabaseTagArrayOutput() NdbDatabaseTagArrayOutput {
	return o
}

func (o NdbDatabaseTagArrayOutput) ToNdbDatabaseTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTagArrayOutput {
	return o
}

func (o NdbDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTag {
		return vs[0].([]NdbDatabaseTag)[vs[1].(int)]
	}).(NdbDatabaseTagOutput)
}

type NdbDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	Clone       *bool   `pulumi:"clone"`
	Clones      *string `pulumi:"clones"`
	// - (Optional) If clustered database. Default: false
	Clustered    *bool   `pulumi:"clustered"`
	Database     *string `pulumi:"database"`
	DatabaseId   *string `pulumi:"databaseId"`
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// - (Optional) The description
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	Metric      *string `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name *string `pulumi:"name"`
	// List of all the properties
	Properties          []NdbDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                          `pulumi:"scheduleId"`
	Schedules           []NdbDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                          `pulumi:"scope"`
	SlaId               *string                          `pulumi:"slaId"`
	SlaUpdateInProgress *bool                            `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                          `pulumi:"slaUpdateMetadata"`
	Slas                []NdbDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                         `pulumi:"sourceNxClusters"`
	Status              *string                          `pulumi:"status"`
	Tags                []NdbDatabaseTimeMachineTag      `pulumi:"tags"`
	Type                *string                          `pulumi:"type"`
}

// NdbDatabaseTimeMachineInput is an input type that accepts NdbDatabaseTimeMachineArgs and NdbDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineInput` via:
//
//	NdbDatabaseTimeMachineArgs{...}
type NdbDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput
	ToNdbDatabaseTimeMachineOutputWithContext(context.Context) NdbDatabaseTimeMachineOutput
}

type NdbDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	Clone       pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones      pulumi.StringPtrInput `pulumi:"clones"`
	// - (Optional) If clustered database. Default: false
	Clustered    pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database     pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId   pulumi.StringPtrInput `pulumi:"databaseId"`
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Metric      pulumi.StringPtrInput `pulumi:"metric"`
	// - (Required) Name of the instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all the properties
	Properties          NdbDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                    `pulumi:"scheduleId"`
	Schedules           NdbDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                    `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                    `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                      `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                    `pulumi:"slaUpdateMetadata"`
	Slas                NdbDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                  `pulumi:"sourceNxClusters"`
	Status              pulumi.StringPtrInput                    `pulumi:"status"`
	Tags                NdbDatabaseTimeMachineTagArrayInput      `pulumi:"tags"`
	Type                pulumi.StringPtrInput                    `pulumi:"type"`
}

func (NdbDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineArgs) ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput {
	return i.ToNdbDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineArgs) ToNdbDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineOutput)
}

// NdbDatabaseTimeMachineArrayInput is an input type that accepts NdbDatabaseTimeMachineArray and NdbDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineArrayInput` via:
//
//	NdbDatabaseTimeMachineArray{ NdbDatabaseTimeMachineArgs{...} }
type NdbDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput
	ToNdbDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineArrayOutput
}

type NdbDatabaseTimeMachineArray []NdbDatabaseTimeMachineInput

func (NdbDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineArray) ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput {
	return i.ToNdbDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineArray) ToNdbDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineArrayOutput)
}

type NdbDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineOutput) ToNdbDatabaseTimeMachineOutput() NdbDatabaseTimeMachineOutput {
	return o
}

func (o NdbDatabaseTimeMachineOutput) ToNdbDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineOutput {
	return o
}

func (o NdbDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

// - (Optional) If clustered database. Default: false
func (o NdbDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all the properties
func (o NdbDatabaseTimeMachineOutput) Properties() NdbDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineProperty { return v.Properties }).(NdbDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Schedules() NdbDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineSchedule { return v.Schedules }).(NdbDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Slas() NdbDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineSla { return v.Slas }).(NdbDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineOutput) Tags() NdbDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) []NdbDatabaseTimeMachineTag { return v.Tags }).(NdbDatabaseTimeMachineTagArrayOutput)
}

func (o NdbDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineArrayOutput) ToNdbDatabaseTimeMachineArrayOutput() NdbDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineArrayOutput) ToNdbDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachine {
		return vs[0].([]NdbDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineOutput)
}

type NdbDatabaseTimeMachineProperty struct {
	// - (Optional) The description
	Description *string `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbDatabaseTimeMachinePropertyInput is an input type that accepts NdbDatabaseTimeMachinePropertyArgs and NdbDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachinePropertyInput` via:
//
//	NdbDatabaseTimeMachinePropertyArgs{...}
type NdbDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput
	ToNdbDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbDatabaseTimeMachinePropertyOutput
}

type NdbDatabaseTimeMachinePropertyArgs struct {
	// - (Optional) The description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) Name of the instance.
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseTimeMachinePropertyArgs) ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput {
	return i.ToNdbDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachinePropertyArgs) ToNdbDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachinePropertyOutput)
}

// NdbDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbDatabaseTimeMachinePropertyArray and NdbDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbDatabaseTimeMachinePropertyArray{ NdbDatabaseTimeMachinePropertyArgs{...} }
type NdbDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput
	ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbDatabaseTimeMachinePropertyArrayOutput
}

type NdbDatabaseTimeMachinePropertyArray []NdbDatabaseTimeMachinePropertyInput

func (NdbDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbDatabaseTimeMachinePropertyArray) ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachinePropertyArray) ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachinePropertyArrayOutput)
}

type NdbDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseTimeMachinePropertyOutput) ToNdbDatabaseTimeMachinePropertyOutput() NdbDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyOutput) ToNdbDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyOutput {
	return o
}

// - (Optional) The description
func (o NdbDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) ToNdbDatabaseTimeMachinePropertyArrayOutput() NdbDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) ToNdbDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineProperty {
		return vs[0].([]NdbDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbDatabaseTimeMachinePropertyOutput)
}

type NdbDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	DateCreated         *string                                            `pulumi:"dateCreated"`
	DateModified        *string                                            `pulumi:"dateModified"`
	// - (Optional) The description
	Description      *string                                         `pulumi:"description"`
	GlobalPolicy     *bool                                           `pulumi:"globalPolicy"`
	Id               *string                                         `pulumi:"id"`
	MonthlySchedules []NdbDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// - (Required) Name of the instance.
	Name               *string                                           `pulumi:"name"`
	OwnerId            *string                                           `pulumi:"ownerId"`
	QuartelySchedules  []NdbDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                              `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                           `pulumi:"startTime"`
	SystemPolicy       *bool                                             `pulumi:"systemPolicy"`
	TimeZone           *string                                           `pulumi:"timeZone"`
	UniqueName         *string                                           `pulumi:"uniqueName"`
	WeeklySchedules    []NdbDatabaseTimeMachineScheduleWeeklySchedule    `pulumi:"weeklySchedules"`
	YearlySchedules    []NdbDatabaseTimeMachineScheduleYearlySchedule    `pulumi:"yearlySchedules"`
}

// NdbDatabaseTimeMachineScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleArgs and NdbDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput
	ToNdbDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleOutput
}

type NdbDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	DateCreated         pulumi.StringPtrInput                                      `pulumi:"dateCreated"`
	DateModified        pulumi.StringPtrInput                                      `pulumi:"dateModified"`
	// - (Optional) The description
	Description      pulumi.StringPtrInput                                   `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                     `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                   `pulumi:"id"`
	MonthlySchedules NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// - (Required) Name of the instance.
	Name               pulumi.StringPtrInput                                     `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                     `pulumi:"ownerId"`
	QuartelySchedules  NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                        `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                     `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                       `pulumi:"systemPolicy"`
	TimeZone           pulumi.StringPtrInput                                     `pulumi:"timeZone"`
	UniqueName         pulumi.StringPtrInput                                     `pulumi:"uniqueName"`
	WeeklySchedules    NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput    `pulumi:"weeklySchedules"`
	YearlySchedules    NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput    `pulumi:"yearlySchedules"`
}

func (NdbDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleArgs) ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleArgs) ToNdbDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleArray and NdbDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleArray{ NdbDatabaseTimeMachineScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleArray []NdbDatabaseTimeMachineScheduleInput

func (NdbDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleArray) ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleArray) ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleOutput) ToNdbDatabaseTimeMachineScheduleOutput() NdbDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleOutput) ToNdbDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DailySchedules() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSchedule) []NdbDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleArrayOutput() NdbDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineSchedule {
		return vs[0].([]NdbDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleContinuousScheduleArray and NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArray []NdbDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleDailyScheduleArgs and NdbDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleDailyScheduleArray and NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleDailyScheduleArray{ NdbDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArray []NdbDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutput() NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbDatabaseTimeMachineScheduleYearlyScheduleArray and NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArray []NdbDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	DateCreated            *string `pulumi:"dateCreated"`
	DateModified           *string `pulumi:"dateModified"`
	// - (Optional) The description
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// - (Required) Name of the instance.
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbDatabaseTimeMachineSlaInput is an input type that accepts NdbDatabaseTimeMachineSlaArgs and NdbDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineSlaInput` via:
//
//	NdbDatabaseTimeMachineSlaArgs{...}
type NdbDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput
	ToNdbDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbDatabaseTimeMachineSlaOutput
}

type NdbDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	DateCreated            pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified           pulumi.StringPtrInput `pulumi:"dateModified"`
	// - (Optional) The description
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// - (Required) Name of the instance.
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineSlaArgs) ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput {
	return i.ToNdbDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineSlaArgs) ToNdbDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineSlaOutput)
}

// NdbDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbDatabaseTimeMachineSlaArray and NdbDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbDatabaseTimeMachineSlaArray{ NdbDatabaseTimeMachineSlaArgs{...} }
type NdbDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput
	ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineSlaArrayOutput
}

type NdbDatabaseTimeMachineSlaArray []NdbDatabaseTimeMachineSlaInput

func (NdbDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineSlaArray) ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineSlaArray) ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineSlaArrayOutput)
}

type NdbDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineSlaOutput) ToNdbDatabaseTimeMachineSlaOutput() NdbDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaOutput) ToNdbDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// - (Optional) The description
func (o NdbDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// - (Required) Name of the instance.
func (o NdbDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) ToNdbDatabaseTimeMachineSlaArrayOutput() NdbDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) ToNdbDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineSla {
		return vs[0].([]NdbDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineSlaOutput)
}

type NdbDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseTimeMachineTagInput is an input type that accepts NdbDatabaseTimeMachineTagArgs and NdbDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineTagInput` via:
//
//	NdbDatabaseTimeMachineTagArgs{...}
type NdbDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput
	ToNdbDatabaseTimeMachineTagOutputWithContext(context.Context) NdbDatabaseTimeMachineTagOutput
}

type NdbDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineTagArgs) ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput {
	return i.ToNdbDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineTagArgs) ToNdbDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineTagOutput)
}

// NdbDatabaseTimeMachineTagArrayInput is an input type that accepts NdbDatabaseTimeMachineTagArray and NdbDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimeMachineTagArrayInput` via:
//
//	NdbDatabaseTimeMachineTagArray{ NdbDatabaseTimeMachineTagArgs{...} }
type NdbDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput
	ToNdbDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbDatabaseTimeMachineTagArrayOutput
}

type NdbDatabaseTimeMachineTagArray []NdbDatabaseTimeMachineTagInput

func (NdbDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbDatabaseTimeMachineTagArray) ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimeMachineTagArray) ToNdbDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimeMachineTagArrayOutput)
}

type NdbDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineTagOutput) ToNdbDatabaseTimeMachineTagOutput() NdbDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagOutput) ToNdbDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbDatabaseTimeMachineTagArrayOutput) ToNdbDatabaseTimeMachineTagArrayOutput() NdbDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagArrayOutput) ToNdbDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimeMachineTag {
		return vs[0].([]NdbDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbDatabaseTimeMachineTagOutput)
}

type NdbDatabaseTimemachineinfo struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive *bool `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description *string `pulumi:"description"`
	// - (Required) name of time machine
	Name string `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbDatabaseTimemachineinfoSchedule `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails []NdbDatabaseTimemachineinfoSlaDetail `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid *string `pulumi:"slaid"`
	// - (Optional) tags
	Tags []NdbDatabaseTimemachineinfoTag `pulumi:"tags"`
}

// NdbDatabaseTimemachineinfoInput is an input type that accepts NdbDatabaseTimemachineinfoArgs and NdbDatabaseTimemachineinfoOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoInput` via:
//
//	NdbDatabaseTimemachineinfoArgs{...}
type NdbDatabaseTimemachineinfoInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput
	ToNdbDatabaseTimemachineinfoOutputWithContext(context.Context) NdbDatabaseTimemachineinfoOutput
}

type NdbDatabaseTimemachineinfoArgs struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive pulumi.BoolPtrInput `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) name of time machine
	Name pulumi.StringInput `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbDatabaseTimemachineinfoScheduleInput `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails NdbDatabaseTimemachineinfoSlaDetailArrayInput `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid pulumi.StringPtrInput `pulumi:"slaid"`
	// - (Optional) tags
	Tags NdbDatabaseTimemachineinfoTagArrayInput `pulumi:"tags"`
}

func (NdbDatabaseTimemachineinfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput {
	return i.ToNdbDatabaseTimemachineinfoOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoOutput)
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoArgs) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoOutput).ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoPtrInput is an input type that accepts NdbDatabaseTimemachineinfoArgs, NdbDatabaseTimemachineinfoPtr and NdbDatabaseTimemachineinfoPtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoPtrInput` via:
//
//	        NdbDatabaseTimemachineinfoArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoPtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput
	ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoPtrOutput
}

type ndbDatabaseTimemachineinfoPtrType NdbDatabaseTimemachineinfoArgs

func NdbDatabaseTimemachineinfoPtr(v *NdbDatabaseTimemachineinfoArgs) NdbDatabaseTimemachineinfoPtrInput {
	return (*ndbDatabaseTimemachineinfoPtrType)(v)
}

func (*ndbDatabaseTimemachineinfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoPtrType) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoPtrType) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoPtrOutput)
}

type NdbDatabaseTimemachineinfoOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoOutput() NdbDatabaseTimemachineinfoOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return o.ToNdbDatabaseTimemachineinfoPtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoOutput) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfo) *NdbDatabaseTimemachineinfo {
		return &v
	}).(NdbDatabaseTimemachineinfoPtrOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbDatabaseTimemachineinfoOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *bool { return v.Autotunelogdrive }).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbDatabaseTimemachineinfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbDatabaseTimemachineinfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) string { return v.Name }).(pulumi.StringOutput)
}

// - (Optional) schedule for snapshots
func (o NdbDatabaseTimemachineinfoOutput) Schedule() NdbDatabaseTimemachineinfoScheduleOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) NdbDatabaseTimemachineinfoSchedule { return v.Schedule }).(NdbDatabaseTimemachineinfoScheduleOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbDatabaseTimemachineinfoOutput) SlaDetails() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoSlaDetail { return v.SlaDetails }).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbDatabaseTimemachineinfoOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) *string { return v.Slaid }).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbDatabaseTimemachineinfoOutput) Tags() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoTag { return v.Tags }).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfo)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoPtrOutput) ToNdbDatabaseTimemachineinfoPtrOutput() NdbDatabaseTimemachineinfoPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoPtrOutput) ToNdbDatabaseTimemachineinfoPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoPtrOutput) Elem() NdbDatabaseTimemachineinfoOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) NdbDatabaseTimemachineinfo {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfo
		return ret
	}).(NdbDatabaseTimemachineinfoOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbDatabaseTimemachineinfoPtrOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *bool {
		if v == nil {
			return nil
		}
		return v.Autotunelogdrive
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbDatabaseTimemachineinfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbDatabaseTimemachineinfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbDatabaseTimemachineinfoPtrOutput) Schedule() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *NdbDatabaseTimemachineinfoSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbDatabaseTimemachineinfoPtrOutput) SlaDetails() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoSlaDetail {
		if v == nil {
			return nil
		}
		return v.SlaDetails
	}).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbDatabaseTimemachineinfoPtrOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) *string {
		if v == nil {
			return nil
		}
		return v.Slaid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbDatabaseTimemachineinfoPtrOutput) Tags() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfo) []NdbDatabaseTimemachineinfoTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoSchedule struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule *NdbDatabaseTimemachineinfoScheduleContinuousschedule `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule *NdbDatabaseTimemachineinfoScheduleMonthlyschedule `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule *NdbDatabaseTimemachineinfoScheduleQuartelyschedule `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule *NdbDatabaseTimemachineinfoScheduleWeeklyschedule `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule *NdbDatabaseTimemachineinfoScheduleYearlyschedule `pulumi:"yearlyschedule"`
}

// NdbDatabaseTimemachineinfoScheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleArgs and NdbDatabaseTimemachineinfoScheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleArgs struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput `pulumi:"yearlyschedule"`
}

func (NdbDatabaseTimemachineinfoScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleArgs) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleOutput).ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoSchedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleArgs, NdbDatabaseTimemachineinfoSchedulePtr and NdbDatabaseTimemachineinfoSchedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSchedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoSchedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput
	ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput
}

type ndbDatabaseTimemachineinfoSchedulePtrType NdbDatabaseTimemachineinfoScheduleArgs

func NdbDatabaseTimemachineinfoSchedulePtr(v *NdbDatabaseTimemachineinfoScheduleArgs) NdbDatabaseTimemachineinfoSchedulePtrInput {
	return (*ndbDatabaseTimemachineinfoSchedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoSchedulePtrType) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoSchedulePtrType) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoScheduleOutput() NdbDatabaseTimemachineinfoScheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoScheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoSchedule {
		return &v
	}).(NdbDatabaseTimemachineinfoSchedulePtrOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Continuousschedule() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		return v.Continuousschedule
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Monthlyschedule() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		return v.Monthlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Quartelyschedule() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		return v.Quartelyschedule
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Snapshottimeofday() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		return v.Snapshottimeofday
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Weeklyschedule() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		return v.Weeklyschedule
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbDatabaseTimemachineinfoScheduleOutput) Yearlyschedule() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		return v.Yearlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoSchedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoSchedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutput() NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) ToNdbDatabaseTimemachineinfoSchedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSchedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) NdbDatabaseTimemachineinfoSchedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoSchedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Continuousschedule() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		if v == nil {
			return nil
		}
		return v.Continuousschedule
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Monthlyschedule() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		if v == nil {
			return nil
		}
		return v.Monthlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Quartelyschedule() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		if v == nil {
			return nil
		}
		return v.Quartelyschedule
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Snapshottimeofday() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		if v == nil {
			return nil
		}
		return v.Snapshottimeofday
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Weeklyschedule() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		if v == nil {
			return nil
		}
		return v.Weeklyschedule
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbDatabaseTimemachineinfoSchedulePtrOutput) Yearlyschedule() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoSchedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		if v == nil {
			return nil
		}
		return v.Yearlyschedule
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousschedule struct {
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) log catchup interval for database
	Logbackupinterval int `pulumi:"logbackupinterval"`
	// - (Required) num of snapshots per day
	Snapshotsperday int `pulumi:"snapshotsperday"`
}

// NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs and NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs struct {
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) log catchup interval for database
	Logbackupinterval pulumi.IntInput `pulumi:"logbackupinterval"`
	// - (Required) num of snapshots per day
	Snapshotsperday pulumi.IntInput `pulumi:"snapshotsperday"`
}

func (NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs, NdbDatabaseTimemachineinfoScheduleContinuousschedulePtr and NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs

func NdbDatabaseTimemachineinfoScheduleContinuousschedulePtr(v *NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleContinuousschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleContinuousschedule) *NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) log catchup interval for database
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Logbackupinterval() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) int { return v.Logbackupinterval }).(pulumi.IntOutput)
}

// - (Required) num of snapshots per day
func (o NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput) Snapshotsperday() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleContinuousschedule) int { return v.Snapshotsperday }).(pulumi.IntOutput)
}

type NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) NdbDatabaseTimemachineinfoScheduleContinuousschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleContinuousschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) log catchup interval for database
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Logbackupinterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Logbackupinterval
	}).(pulumi.IntPtrOutput)
}

// - (Required) num of snapshots per day
func (o NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput) Snapshotsperday() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Snapshotsperday
	}).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyschedule struct {
	// - (Required) day of month to take snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
}

// NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs and NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs struct {
	// - (Required) day of month to take snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs, NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtr and NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleMonthlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleMonthlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) NdbDatabaseTimemachineinfoScheduleMonthlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleMonthlyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleMonthlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyschedule struct {
	// - (Required) month's day for snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) quarter start month
	Startmonth string `pulumi:"startmonth"`
}

// NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs and NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs struct {
	// - (Required) month's day for snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) quarter start month
	Startmonth pulumi.StringInput `pulumi:"startmonth"`
}

func (NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs, NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtr and NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleQuartelyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput)
}

// - (Required) month's day for snapshot
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) quarter start month
func (o NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput) Startmonth() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleQuartelyschedule) string { return v.Startmonth }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) NdbDatabaseTimemachineinfoScheduleQuartelyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleQuartelyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput)
}

// - (Required) month's day for snapshot
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) quarter start month
func (o NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput) Startmonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleQuartelyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Startmonth
	}).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofday struct {
	// - (Required) hours
	Hours int `pulumi:"hours"`
	// - (Required) minutes
	Minutes int `pulumi:"minutes"`
	// - (Required) seconds
	Seconds int `pulumi:"seconds"`
}

// NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs and NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{...}
type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput
	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs struct {
	// - (Required) hours
	Hours pulumi.IntInput `pulumi:"hours"`
	// - (Required) minutes
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// - (Required) seconds
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput).ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs, NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtr and NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput
	ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput
}

type ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs

func NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtr(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrType) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Required) hours
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Hours }).(pulumi.IntOutput)
}

// - (Required) minutes
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Minutes }).(pulumi.IntOutput)
}

// - (Required) seconds
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) int { return v.Seconds }).(pulumi.IntOutput)
}

type NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) ToNdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) NdbDatabaseTimemachineinfoScheduleSnapshottimeofday {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleSnapshottimeofday
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput)
}

// - (Required) hours
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// - (Required) minutes
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

// - (Required) seconds
func (o NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyschedule struct {
	// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
	Dayofweek string `pulumi:"dayofweek"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
}

// NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs and NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs struct {
	// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
	Dayofweek pulumi.StringInput `pulumi:"dayofweek"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs, NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtr and NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleWeeklyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput)
}

// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) Dayofweek() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) string { return v.Dayofweek }).(pulumi.StringOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleWeeklyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) NdbDatabaseTimemachineinfoScheduleWeeklyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleWeeklyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput)
}

// - (Required) day of week to take snaphsot. Eg. "WEDNESDAY"
func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Dayofweek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Dayofweek
	}).(pulumi.StringPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleWeeklyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyschedule struct {
	// - (Required) day of month to take snapshot
	Dayofmonth int `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled bool `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month string `pulumi:"month"`
}

// NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs and NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput` via:
//
//	NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{...}
type NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput
	ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput
}

type NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs struct {
	// - (Required) day of month to take snapshot
	Dayofmonth pulumi.IntInput `pulumi:"dayofmonth"`
	// - (Required) to enable
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// - (Required) month for snapshot
	Month pulumi.StringInput `pulumi:"month"`
}

func (NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput)
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput).ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx)
}

// NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput is an input type that accepts NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs, NdbDatabaseTimemachineinfoScheduleYearlyschedulePtr and NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput` via:
//
//	        NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput
	ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput
}

type ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs

func NdbDatabaseTimemachineinfoScheduleYearlyschedulePtr(v *NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput {
	return (*ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType)(v)
}

func (*ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (i *ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbDatabaseTimemachineinfoScheduleYearlyschedulePtrType) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDatabaseTimemachineinfoScheduleYearlyschedule) *NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		return &v
	}).(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// - (Required) month for snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoScheduleYearlyschedule) string { return v.Month }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDatabaseTimemachineinfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput() NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) ToNdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Elem() NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) NdbDatabaseTimemachineinfoScheduleYearlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbDatabaseTimemachineinfoScheduleYearlyschedule
		return ret
	}).(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput)
}

// - (Required) day of month to take snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

// - (Required) to enable
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// - (Required) month for snapshot
func (o NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDatabaseTimemachineinfoScheduleYearlyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoSlaDetail struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas []NdbDatabaseTimemachineinfoSlaDetailPrimarySla `pulumi:"primarySlas"`
}

// NdbDatabaseTimemachineinfoSlaDetailInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailArgs and NdbDatabaseTimemachineinfoSlaDetailOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailArgs{...}
type NdbDatabaseTimemachineinfoSlaDetailInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput
	ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput
}

type NdbDatabaseTimemachineinfoSlaDetailArgs struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput `pulumi:"primarySlas"`
}

func (NdbDatabaseTimemachineinfoSlaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailArgs) ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailArgs) ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailOutput)
}

// NdbDatabaseTimemachineinfoSlaDetailArrayInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailArray and NdbDatabaseTimemachineinfoSlaDetailArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailArrayInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailArray{ NdbDatabaseTimemachineinfoSlaDetailArgs{...} }
type NdbDatabaseTimemachineinfoSlaDetailArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput
	ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput
}

type NdbDatabaseTimemachineinfoSlaDetailArray []NdbDatabaseTimemachineinfoSlaDetailInput

func (NdbDatabaseTimemachineinfoSlaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailArray) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailArray) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailOutput) ToNdbDatabaseTimemachineinfoSlaDetailOutput() NdbDatabaseTimemachineinfoSlaDetailOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailOutput) ToNdbDatabaseTimemachineinfoSlaDetailOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return o
}

// - (Required) primary sla details
// * `primary_sla.sla_id` :- (Required) sla id
// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
func (o NdbDatabaseTimemachineinfoSlaDetailOutput) PrimarySlas() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetail) []NdbDatabaseTimemachineinfoSlaDetailPrimarySla {
		return v.PrimarySlas
	}).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetail)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutput() NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoSlaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoSlaDetail {
		return vs[0].([]NdbDatabaseTimemachineinfoSlaDetail)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoSlaDetailOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySla struct {
	NxClusterIds []string `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId string `pulumi:"slaId"`
}

// NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs and NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{...}
type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput
	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs struct {
	NxClusterIds pulumi.StringArrayInput `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId pulumi.StringInput `pulumi:"slaId"`
}

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput)
}

// NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput is an input type that accepts NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray and NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput` via:
//
//	NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray{ NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{...} }
type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput
	ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray []NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) NxClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetailPrimarySla) []string { return v.NxClusterIds }).(pulumi.StringArrayOutput)
}

// description of SLA ID.
func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput) SlaId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoSlaDetailPrimarySla) string { return v.SlaId }).(pulumi.StringOutput)
}

type NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput() NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) ToNdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoSlaDetailPrimarySla {
		return vs[0].([]NdbDatabaseTimemachineinfoSlaDetailPrimarySla)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput)
}

type NdbDatabaseTimemachineinfoTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDatabaseTimemachineinfoTagInput is an input type that accepts NdbDatabaseTimemachineinfoTagArgs and NdbDatabaseTimemachineinfoTagOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoTagInput` via:
//
//	NdbDatabaseTimemachineinfoTagArgs{...}
type NdbDatabaseTimemachineinfoTagInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput
	ToNdbDatabaseTimemachineinfoTagOutputWithContext(context.Context) NdbDatabaseTimemachineinfoTagOutput
}

type NdbDatabaseTimemachineinfoTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDatabaseTimemachineinfoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoTagArgs) ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput {
	return i.ToNdbDatabaseTimemachineinfoTagOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoTagArgs) ToNdbDatabaseTimemachineinfoTagOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoTagOutput)
}

// NdbDatabaseTimemachineinfoTagArrayInput is an input type that accepts NdbDatabaseTimemachineinfoTagArray and NdbDatabaseTimemachineinfoTagArrayOutput values.
// You can construct a concrete instance of `NdbDatabaseTimemachineinfoTagArrayInput` via:
//
//	NdbDatabaseTimemachineinfoTagArray{ NdbDatabaseTimemachineinfoTagArgs{...} }
type NdbDatabaseTimemachineinfoTagArrayInput interface {
	pulumi.Input

	ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput
	ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(context.Context) NdbDatabaseTimemachineinfoTagArrayOutput
}

type NdbDatabaseTimemachineinfoTagArray []NdbDatabaseTimemachineinfoTagInput

func (NdbDatabaseTimemachineinfoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (i NdbDatabaseTimemachineinfoTagArray) ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput {
	return i.ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(context.Background())
}

func (i NdbDatabaseTimemachineinfoTagArray) ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDatabaseTimemachineinfoTagArrayOutput)
}

type NdbDatabaseTimemachineinfoTagOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoTagOutput) ToNdbDatabaseTimemachineinfoTagOutput() NdbDatabaseTimemachineinfoTagOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagOutput) ToNdbDatabaseTimemachineinfoTagOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDatabaseTimemachineinfoTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDatabaseTimemachineinfoTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDatabaseTimemachineinfoTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDatabaseTimemachineinfoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDatabaseTimemachineinfoTag)(nil)).Elem()
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) ToNdbDatabaseTimemachineinfoTagArrayOutput() NdbDatabaseTimemachineinfoTagArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) ToNdbDatabaseTimemachineinfoTagArrayOutputWithContext(ctx context.Context) NdbDatabaseTimemachineinfoTagArrayOutput {
	return o
}

func (o NdbDatabaseTimemachineinfoTagArrayOutput) Index(i pulumi.IntInput) NdbDatabaseTimemachineinfoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDatabaseTimemachineinfoTag {
		return vs[0].([]NdbDatabaseTimemachineinfoTag)[vs[1].(int)]
	}).(NdbDatabaseTimemachineinfoTagOutput)
}

type NdbDbserverVmCredential struct {
	Label    *string `pulumi:"label"`
	Password string  `pulumi:"password"`
	Username string  `pulumi:"username"`
}

// NdbDbserverVmCredentialInput is an input type that accepts NdbDbserverVmCredentialArgs and NdbDbserverVmCredentialOutput values.
// You can construct a concrete instance of `NdbDbserverVmCredentialInput` via:
//
//	NdbDbserverVmCredentialArgs{...}
type NdbDbserverVmCredentialInput interface {
	pulumi.Input

	ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput
	ToNdbDbserverVmCredentialOutputWithContext(context.Context) NdbDbserverVmCredentialOutput
}

type NdbDbserverVmCredentialArgs struct {
	Label    pulumi.StringPtrInput `pulumi:"label"`
	Password pulumi.StringInput    `pulumi:"password"`
	Username pulumi.StringInput    `pulumi:"username"`
}

func (NdbDbserverVmCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmCredential)(nil)).Elem()
}

func (i NdbDbserverVmCredentialArgs) ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput {
	return i.ToNdbDbserverVmCredentialOutputWithContext(context.Background())
}

func (i NdbDbserverVmCredentialArgs) ToNdbDbserverVmCredentialOutputWithContext(ctx context.Context) NdbDbserverVmCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmCredentialOutput)
}

// NdbDbserverVmCredentialArrayInput is an input type that accepts NdbDbserverVmCredentialArray and NdbDbserverVmCredentialArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmCredentialArrayInput` via:
//
//	NdbDbserverVmCredentialArray{ NdbDbserverVmCredentialArgs{...} }
type NdbDbserverVmCredentialArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput
	ToNdbDbserverVmCredentialArrayOutputWithContext(context.Context) NdbDbserverVmCredentialArrayOutput
}

type NdbDbserverVmCredentialArray []NdbDbserverVmCredentialInput

func (NdbDbserverVmCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmCredential)(nil)).Elem()
}

func (i NdbDbserverVmCredentialArray) ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput {
	return i.ToNdbDbserverVmCredentialArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmCredentialArray) ToNdbDbserverVmCredentialArrayOutputWithContext(ctx context.Context) NdbDbserverVmCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmCredentialArrayOutput)
}

type NdbDbserverVmCredentialOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmCredential)(nil)).Elem()
}

func (o NdbDbserverVmCredentialOutput) ToNdbDbserverVmCredentialOutput() NdbDbserverVmCredentialOutput {
	return o
}

func (o NdbDbserverVmCredentialOutput) ToNdbDbserverVmCredentialOutputWithContext(ctx context.Context) NdbDbserverVmCredentialOutput {
	return o
}

func (o NdbDbserverVmCredentialOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o NdbDbserverVmCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmCredential) string { return v.Username }).(pulumi.StringOutput)
}

type NdbDbserverVmCredentialArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmCredential)(nil)).Elem()
}

func (o NdbDbserverVmCredentialArrayOutput) ToNdbDbserverVmCredentialArrayOutput() NdbDbserverVmCredentialArrayOutput {
	return o
}

func (o NdbDbserverVmCredentialArrayOutput) ToNdbDbserverVmCredentialArrayOutputWithContext(ctx context.Context) NdbDbserverVmCredentialArrayOutput {
	return o
}

func (o NdbDbserverVmCredentialArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmCredential {
		return vs[0].([]NdbDbserverVmCredential)[vs[1].(int)]
	}).(NdbDbserverVmCredentialOutput)
}

type NdbDbserverVmMaintenanceTasks struct {
	// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// Tasks for the maintenance.
	// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
	// * `tasks.pre_command`: add pre (operating system and database patching) commands.
	// * `tasks.post_command`:add post (operating system and database patching) commands.
	Tasks []NdbDbserverVmMaintenanceTasksTask `pulumi:"tasks"`
}

// NdbDbserverVmMaintenanceTasksInput is an input type that accepts NdbDbserverVmMaintenanceTasksArgs and NdbDbserverVmMaintenanceTasksOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksInput` via:
//
//	NdbDbserverVmMaintenanceTasksArgs{...}
type NdbDbserverVmMaintenanceTasksInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput
	ToNdbDbserverVmMaintenanceTasksOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksOutput
}

type NdbDbserverVmMaintenanceTasksArgs struct {
	// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
	MaintenanceWindowId pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	// Tasks for the maintenance.
	// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
	// * `tasks.pre_command`: add pre (operating system and database patching) commands.
	// * `tasks.post_command`:add post (operating system and database patching) commands.
	Tasks NdbDbserverVmMaintenanceTasksTaskArrayInput `pulumi:"tasks"`
}

func (NdbDbserverVmMaintenanceTasksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput {
	return i.ToNdbDbserverVmMaintenanceTasksOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksOutput)
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return i.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksArgs) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksOutput).ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx)
}

// NdbDbserverVmMaintenanceTasksPtrInput is an input type that accepts NdbDbserverVmMaintenanceTasksArgs, NdbDbserverVmMaintenanceTasksPtr and NdbDbserverVmMaintenanceTasksPtrOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksPtrInput` via:
//
//	        NdbDbserverVmMaintenanceTasksArgs{...}
//
//	or:
//
//	        nil
type NdbDbserverVmMaintenanceTasksPtrInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput
	ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksPtrOutput
}

type ndbDbserverVmMaintenanceTasksPtrType NdbDbserverVmMaintenanceTasksArgs

func NdbDbserverVmMaintenanceTasksPtr(v *NdbDbserverVmMaintenanceTasksArgs) NdbDbserverVmMaintenanceTasksPtrInput {
	return (*ndbDbserverVmMaintenanceTasksPtrType)(v)
}

func (*ndbDbserverVmMaintenanceTasksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (i *ndbDbserverVmMaintenanceTasksPtrType) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return i.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (i *ndbDbserverVmMaintenanceTasksPtrType) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksPtrOutput)
}

type NdbDbserverVmMaintenanceTasksOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksOutput() NdbDbserverVmMaintenanceTasksOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return o.ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(context.Background())
}

func (o NdbDbserverVmMaintenanceTasksOutput) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbDbserverVmMaintenanceTasks) *NdbDbserverVmMaintenanceTasks {
		return &v
	}).(NdbDbserverVmMaintenanceTasksPtrOutput)
}

// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
func (o NdbDbserverVmMaintenanceTasksOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasks) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

// Tasks for the maintenance.
// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
// * `tasks.pre_command`: add pre (operating system and database patching) commands.
// * `tasks.post_command`:add post (operating system and database patching) commands.
func (o NdbDbserverVmMaintenanceTasksOutput) Tasks() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasks) []NdbDbserverVmMaintenanceTasksTask { return v.Tasks }).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksPtrOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbDbserverVmMaintenanceTasks)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) ToNdbDbserverVmMaintenanceTasksPtrOutput() NdbDbserverVmMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) ToNdbDbserverVmMaintenanceTasksPtrOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksPtrOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksPtrOutput) Elem() NdbDbserverVmMaintenanceTasksOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) NdbDbserverVmMaintenanceTasks {
		if v != nil {
			return *v
		}
		var ret NdbDbserverVmMaintenanceTasks
		return ret
	}).(NdbDbserverVmMaintenanceTasksOutput)
}

// Associate an existing maintenance window id. NDB starts OS patching or database patching as per the schedule defined in the maintenance window.
func (o NdbDbserverVmMaintenanceTasksPtrOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) *string {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowId
	}).(pulumi.StringPtrOutput)
}

// Tasks for the maintenance.
// * `tasks.task_type`: use this option if you want NDB to perform database patching or OS patching automatically. Supports [ OS_PATCHING, DB_PATCHING ].
// * `tasks.pre_command`: add pre (operating system and database patching) commands.
// * `tasks.post_command`:add post (operating system and database patching) commands.
func (o NdbDbserverVmMaintenanceTasksPtrOutput) Tasks() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o.ApplyT(func(v *NdbDbserverVmMaintenanceTasks) []NdbDbserverVmMaintenanceTasksTask {
		if v == nil {
			return nil
		}
		return v.Tasks
	}).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksTask struct {
	PostCommand *string `pulumi:"postCommand"`
	PreCommand  *string `pulumi:"preCommand"`
	TaskType    *string `pulumi:"taskType"`
}

// NdbDbserverVmMaintenanceTasksTaskInput is an input type that accepts NdbDbserverVmMaintenanceTasksTaskArgs and NdbDbserverVmMaintenanceTasksTaskOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksTaskInput` via:
//
//	NdbDbserverVmMaintenanceTasksTaskArgs{...}
type NdbDbserverVmMaintenanceTasksTaskInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput
	ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksTaskOutput
}

type NdbDbserverVmMaintenanceTasksTaskArgs struct {
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	PreCommand  pulumi.StringPtrInput `pulumi:"preCommand"`
	TaskType    pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbDbserverVmMaintenanceTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksTaskArgs) ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput {
	return i.ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksTaskArgs) ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksTaskOutput)
}

// NdbDbserverVmMaintenanceTasksTaskArrayInput is an input type that accepts NdbDbserverVmMaintenanceTasksTaskArray and NdbDbserverVmMaintenanceTasksTaskArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmMaintenanceTasksTaskArrayInput` via:
//
//	NdbDbserverVmMaintenanceTasksTaskArray{ NdbDbserverVmMaintenanceTasksTaskArgs{...} }
type NdbDbserverVmMaintenanceTasksTaskArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput
	ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput
}

type NdbDbserverVmMaintenanceTasksTaskArray []NdbDbserverVmMaintenanceTasksTaskInput

func (NdbDbserverVmMaintenanceTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (i NdbDbserverVmMaintenanceTasksTaskArray) ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return i.ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmMaintenanceTasksTaskArray) ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmMaintenanceTasksTaskArrayOutput)
}

type NdbDbserverVmMaintenanceTasksTaskOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) ToNdbDbserverVmMaintenanceTasksTaskOutput() NdbDbserverVmMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) ToNdbDbserverVmMaintenanceTasksTaskOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmMaintenanceTasksTaskOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmMaintenanceTasksTask) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmMaintenanceTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmMaintenanceTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmMaintenanceTasksTask)(nil)).Elem()
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) ToNdbDbserverVmMaintenanceTasksTaskArrayOutput() NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) ToNdbDbserverVmMaintenanceTasksTaskArrayOutputWithContext(ctx context.Context) NdbDbserverVmMaintenanceTasksTaskArrayOutput {
	return o
}

func (o NdbDbserverVmMaintenanceTasksTaskArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmMaintenanceTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmMaintenanceTasksTask {
		return vs[0].([]NdbDbserverVmMaintenanceTasksTask)[vs[1].(int)]
	}).(NdbDbserverVmMaintenanceTasksTaskOutput)
}

type NdbDbserverVmPostgresDatabase struct {
	// use SSH public keys to access the database server VM.
	ClientPublicKey *string `pulumi:"clientPublicKey"`
	// name for the database server VM.
	VmName string `pulumi:"vmName"`
}

// NdbDbserverVmPostgresDatabaseInput is an input type that accepts NdbDbserverVmPostgresDatabaseArgs and NdbDbserverVmPostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbDbserverVmPostgresDatabaseInput` via:
//
//	NdbDbserverVmPostgresDatabaseArgs{...}
type NdbDbserverVmPostgresDatabaseInput interface {
	pulumi.Input

	ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput
	ToNdbDbserverVmPostgresDatabaseOutputWithContext(context.Context) NdbDbserverVmPostgresDatabaseOutput
}

type NdbDbserverVmPostgresDatabaseArgs struct {
	// use SSH public keys to access the database server VM.
	ClientPublicKey pulumi.StringPtrInput `pulumi:"clientPublicKey"`
	// name for the database server VM.
	VmName pulumi.StringInput `pulumi:"vmName"`
}

func (NdbDbserverVmPostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (i NdbDbserverVmPostgresDatabaseArgs) ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput {
	return i.ToNdbDbserverVmPostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbDbserverVmPostgresDatabaseArgs) ToNdbDbserverVmPostgresDatabaseOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPostgresDatabaseOutput)
}

// NdbDbserverVmPostgresDatabaseArrayInput is an input type that accepts NdbDbserverVmPostgresDatabaseArray and NdbDbserverVmPostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmPostgresDatabaseArrayInput` via:
//
//	NdbDbserverVmPostgresDatabaseArray{ NdbDbserverVmPostgresDatabaseArgs{...} }
type NdbDbserverVmPostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput
	ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(context.Context) NdbDbserverVmPostgresDatabaseArrayOutput
}

type NdbDbserverVmPostgresDatabaseArray []NdbDbserverVmPostgresDatabaseInput

func (NdbDbserverVmPostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (i NdbDbserverVmPostgresDatabaseArray) ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput {
	return i.ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmPostgresDatabaseArray) ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPostgresDatabaseArrayOutput)
}

type NdbDbserverVmPostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (o NdbDbserverVmPostgresDatabaseOutput) ToNdbDbserverVmPostgresDatabaseOutput() NdbDbserverVmPostgresDatabaseOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseOutput) ToNdbDbserverVmPostgresDatabaseOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseOutput {
	return o
}

// use SSH public keys to access the database server VM.
func (o NdbDbserverVmPostgresDatabaseOutput) ClientPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmPostgresDatabase) *string { return v.ClientPublicKey }).(pulumi.StringPtrOutput)
}

// name for the database server VM.
func (o NdbDbserverVmPostgresDatabaseOutput) VmName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbDbserverVmPostgresDatabase) string { return v.VmName }).(pulumi.StringOutput)
}

type NdbDbserverVmPostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmPostgresDatabase)(nil)).Elem()
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) ToNdbDbserverVmPostgresDatabaseArrayOutput() NdbDbserverVmPostgresDatabaseArrayOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) ToNdbDbserverVmPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbDbserverVmPostgresDatabaseArrayOutput {
	return o
}

func (o NdbDbserverVmPostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmPostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmPostgresDatabase {
		return vs[0].([]NdbDbserverVmPostgresDatabase)[vs[1].(int)]
	}).(NdbDbserverVmPostgresDatabaseOutput)
}

type NdbDbserverVmProperty struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbDbserverVmPropertyInput is an input type that accepts NdbDbserverVmPropertyArgs and NdbDbserverVmPropertyOutput values.
// You can construct a concrete instance of `NdbDbserverVmPropertyInput` via:
//
//	NdbDbserverVmPropertyArgs{...}
type NdbDbserverVmPropertyInput interface {
	pulumi.Input

	ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput
	ToNdbDbserverVmPropertyOutputWithContext(context.Context) NdbDbserverVmPropertyOutput
}

type NdbDbserverVmPropertyArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDbserverVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmProperty)(nil)).Elem()
}

func (i NdbDbserverVmPropertyArgs) ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput {
	return i.ToNdbDbserverVmPropertyOutputWithContext(context.Background())
}

func (i NdbDbserverVmPropertyArgs) ToNdbDbserverVmPropertyOutputWithContext(ctx context.Context) NdbDbserverVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPropertyOutput)
}

// NdbDbserverVmPropertyArrayInput is an input type that accepts NdbDbserverVmPropertyArray and NdbDbserverVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmPropertyArrayInput` via:
//
//	NdbDbserverVmPropertyArray{ NdbDbserverVmPropertyArgs{...} }
type NdbDbserverVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput
	ToNdbDbserverVmPropertyArrayOutputWithContext(context.Context) NdbDbserverVmPropertyArrayOutput
}

type NdbDbserverVmPropertyArray []NdbDbserverVmPropertyInput

func (NdbDbserverVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmProperty)(nil)).Elem()
}

func (i NdbDbserverVmPropertyArray) ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput {
	return i.ToNdbDbserverVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmPropertyArray) ToNdbDbserverVmPropertyArrayOutputWithContext(ctx context.Context) NdbDbserverVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmPropertyArrayOutput)
}

type NdbDbserverVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmProperty)(nil)).Elem()
}

func (o NdbDbserverVmPropertyOutput) ToNdbDbserverVmPropertyOutput() NdbDbserverVmPropertyOutput {
	return o
}

func (o NdbDbserverVmPropertyOutput) ToNdbDbserverVmPropertyOutputWithContext(ctx context.Context) NdbDbserverVmPropertyOutput {
	return o
}

func (o NdbDbserverVmPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmProperty)(nil)).Elem()
}

func (o NdbDbserverVmPropertyArrayOutput) ToNdbDbserverVmPropertyArrayOutput() NdbDbserverVmPropertyArrayOutput {
	return o
}

func (o NdbDbserverVmPropertyArrayOutput) ToNdbDbserverVmPropertyArrayOutputWithContext(ctx context.Context) NdbDbserverVmPropertyArrayOutput {
	return o
}

func (o NdbDbserverVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmProperty {
		return vs[0].([]NdbDbserverVmProperty)[vs[1].(int)]
	}).(NdbDbserverVmPropertyOutput)
}

type NdbDbserverVmTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbDbserverVmTagInput is an input type that accepts NdbDbserverVmTagArgs and NdbDbserverVmTagOutput values.
// You can construct a concrete instance of `NdbDbserverVmTagInput` via:
//
//	NdbDbserverVmTagArgs{...}
type NdbDbserverVmTagInput interface {
	pulumi.Input

	ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput
	ToNdbDbserverVmTagOutputWithContext(context.Context) NdbDbserverVmTagOutput
}

type NdbDbserverVmTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbDbserverVmTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmTag)(nil)).Elem()
}

func (i NdbDbserverVmTagArgs) ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput {
	return i.ToNdbDbserverVmTagOutputWithContext(context.Background())
}

func (i NdbDbserverVmTagArgs) ToNdbDbserverVmTagOutputWithContext(ctx context.Context) NdbDbserverVmTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmTagOutput)
}

// NdbDbserverVmTagArrayInput is an input type that accepts NdbDbserverVmTagArray and NdbDbserverVmTagArrayOutput values.
// You can construct a concrete instance of `NdbDbserverVmTagArrayInput` via:
//
//	NdbDbserverVmTagArray{ NdbDbserverVmTagArgs{...} }
type NdbDbserverVmTagArrayInput interface {
	pulumi.Input

	ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput
	ToNdbDbserverVmTagArrayOutputWithContext(context.Context) NdbDbserverVmTagArrayOutput
}

type NdbDbserverVmTagArray []NdbDbserverVmTagInput

func (NdbDbserverVmTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmTag)(nil)).Elem()
}

func (i NdbDbserverVmTagArray) ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput {
	return i.ToNdbDbserverVmTagArrayOutputWithContext(context.Background())
}

func (i NdbDbserverVmTagArray) ToNdbDbserverVmTagArrayOutputWithContext(ctx context.Context) NdbDbserverVmTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbDbserverVmTagArrayOutput)
}

type NdbDbserverVmTagOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbDbserverVmTag)(nil)).Elem()
}

func (o NdbDbserverVmTagOutput) ToNdbDbserverVmTagOutput() NdbDbserverVmTagOutput {
	return o
}

func (o NdbDbserverVmTagOutput) ToNdbDbserverVmTagOutputWithContext(ctx context.Context) NdbDbserverVmTagOutput {
	return o
}

func (o NdbDbserverVmTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbDbserverVmTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbDbserverVmTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbDbserverVmTagArrayOutput struct{ *pulumi.OutputState }

func (NdbDbserverVmTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbDbserverVmTag)(nil)).Elem()
}

func (o NdbDbserverVmTagArrayOutput) ToNdbDbserverVmTagArrayOutput() NdbDbserverVmTagArrayOutput {
	return o
}

func (o NdbDbserverVmTagArrayOutput) ToNdbDbserverVmTagArrayOutputWithContext(ctx context.Context) NdbDbserverVmTagArrayOutput {
	return o
}

func (o NdbDbserverVmTagArrayOutput) Index(i pulumi.IntInput) NdbDbserverVmTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbDbserverVmTag {
		return vs[0].([]NdbDbserverVmTag)[vs[1].(int)]
	}).(NdbDbserverVmTagOutput)
}

type NdbLinkedDatabasesInfo struct {
	Infos      []NdbLinkedDatabasesInfoInfo `pulumi:"infos"`
	SecureInfo map[string]string            `pulumi:"secureInfo"`
}

// NdbLinkedDatabasesInfoInput is an input type that accepts NdbLinkedDatabasesInfoArgs and NdbLinkedDatabasesInfoOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInput` via:
//
//	NdbLinkedDatabasesInfoArgs{...}
type NdbLinkedDatabasesInfoInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput
	ToNdbLinkedDatabasesInfoOutputWithContext(context.Context) NdbLinkedDatabasesInfoOutput
}

type NdbLinkedDatabasesInfoArgs struct {
	Infos      NdbLinkedDatabasesInfoInfoArrayInput `pulumi:"infos"`
	SecureInfo pulumi.StringMapInput                `pulumi:"secureInfo"`
}

func (NdbLinkedDatabasesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoArgs) ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput {
	return i.ToNdbLinkedDatabasesInfoOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoArgs) ToNdbLinkedDatabasesInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoOutput)
}

// NdbLinkedDatabasesInfoArrayInput is an input type that accepts NdbLinkedDatabasesInfoArray and NdbLinkedDatabasesInfoArrayOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoArrayInput` via:
//
//	NdbLinkedDatabasesInfoArray{ NdbLinkedDatabasesInfoArgs{...} }
type NdbLinkedDatabasesInfoArrayInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput
	ToNdbLinkedDatabasesInfoArrayOutputWithContext(context.Context) NdbLinkedDatabasesInfoArrayOutput
}

type NdbLinkedDatabasesInfoArray []NdbLinkedDatabasesInfoInput

func (NdbLinkedDatabasesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoArray) ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput {
	return i.ToNdbLinkedDatabasesInfoArrayOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoArray) ToNdbLinkedDatabasesInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoArrayOutput)
}

type NdbLinkedDatabasesInfoOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoOutput) ToNdbLinkedDatabasesInfoOutput() NdbLinkedDatabasesInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoOutput) ToNdbLinkedDatabasesInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoOutput) Infos() NdbLinkedDatabasesInfoInfoArrayOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfo) []NdbLinkedDatabasesInfoInfo { return v.Infos }).(NdbLinkedDatabasesInfoInfoArrayOutput)
}

func (o NdbLinkedDatabasesInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbLinkedDatabasesInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoArrayOutput) ToNdbLinkedDatabasesInfoArrayOutput() NdbLinkedDatabasesInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoArrayOutput) ToNdbLinkedDatabasesInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoArrayOutput) Index(i pulumi.IntInput) NdbLinkedDatabasesInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbLinkedDatabasesInfo {
		return vs[0].([]NdbLinkedDatabasesInfo)[vs[1].(int)]
	}).(NdbLinkedDatabasesInfoOutput)
}

type NdbLinkedDatabasesInfoInfo struct {
	CreatedBy *string `pulumi:"createdBy"`
}

// NdbLinkedDatabasesInfoInfoInput is an input type that accepts NdbLinkedDatabasesInfoInfoArgs and NdbLinkedDatabasesInfoInfoOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInfoInput` via:
//
//	NdbLinkedDatabasesInfoInfoArgs{...}
type NdbLinkedDatabasesInfoInfoInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput
	ToNdbLinkedDatabasesInfoInfoOutputWithContext(context.Context) NdbLinkedDatabasesInfoInfoOutput
}

type NdbLinkedDatabasesInfoInfoArgs struct {
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
}

func (NdbLinkedDatabasesInfoInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoInfoArgs) ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput {
	return i.ToNdbLinkedDatabasesInfoInfoOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoInfoArgs) ToNdbLinkedDatabasesInfoInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoInfoOutput)
}

// NdbLinkedDatabasesInfoInfoArrayInput is an input type that accepts NdbLinkedDatabasesInfoInfoArray and NdbLinkedDatabasesInfoInfoArrayOutput values.
// You can construct a concrete instance of `NdbLinkedDatabasesInfoInfoArrayInput` via:
//
//	NdbLinkedDatabasesInfoInfoArray{ NdbLinkedDatabasesInfoInfoArgs{...} }
type NdbLinkedDatabasesInfoInfoArrayInput interface {
	pulumi.Input

	ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput
	ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(context.Context) NdbLinkedDatabasesInfoInfoArrayOutput
}

type NdbLinkedDatabasesInfoInfoArray []NdbLinkedDatabasesInfoInfoInput

func (NdbLinkedDatabasesInfoInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (i NdbLinkedDatabasesInfoInfoArray) ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput {
	return i.ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(context.Background())
}

func (i NdbLinkedDatabasesInfoInfoArray) ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbLinkedDatabasesInfoInfoArrayOutput)
}

type NdbLinkedDatabasesInfoInfoOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoInfoOutput) ToNdbLinkedDatabasesInfoInfoOutput() NdbLinkedDatabasesInfoInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoOutput) ToNdbLinkedDatabasesInfoInfoOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbLinkedDatabasesInfoInfo) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

type NdbLinkedDatabasesInfoInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbLinkedDatabasesInfoInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbLinkedDatabasesInfoInfo)(nil)).Elem()
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) ToNdbLinkedDatabasesInfoInfoArrayOutput() NdbLinkedDatabasesInfoInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) ToNdbLinkedDatabasesInfoInfoArrayOutputWithContext(ctx context.Context) NdbLinkedDatabasesInfoInfoArrayOutput {
	return o
}

func (o NdbLinkedDatabasesInfoInfoArrayOutput) Index(i pulumi.IntInput) NdbLinkedDatabasesInfoInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbLinkedDatabasesInfoInfo {
		return vs[0].([]NdbLinkedDatabasesInfoInfo)[vs[1].(int)]
	}).(NdbLinkedDatabasesInfoInfoOutput)
}

type NdbMaintenanceTaskEntityTaskAssociation struct {
	// access level of tasks
	AccessLevel *string `pulumi:"accessLevel"`
	// created date of task
	DateCreated *string `pulumi:"dateCreated"`
	// modified date of task
	DateModified *string `pulumi:"dateModified"`
	// description of maintenance window
	Description *string `pulumi:"description"`
	Entity      *string `pulumi:"entity"`
	// entity id
	EntityId *string `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType *string `pulumi:"entityType"`
	// id of maintenance window
	Id *string `pulumi:"id"`
	// maintenance window id which has to be associated
	MaintenanceWindowId *string `pulumi:"maintenanceWindowId"`
	// maintenance window owner id
	MaintenanceWindowOwnerId *string `pulumi:"maintenanceWindowOwnerId"`
	// name of of maintenance window
	Name *string `pulumi:"name"`
	// owner id of task
	OwnerId *string `pulumi:"ownerId"`
	// list of pre post commands of OS or DB task
	Payloads []NdbMaintenanceTaskEntityTaskAssociationPayload `pulumi:"payloads"`
	// properties of task
	Properties []NdbMaintenanceTaskEntityTaskAssociationProperty `pulumi:"properties"`
	// status of task
	Status *string `pulumi:"status"`
	// tags of task
	Tags []NdbMaintenanceTaskEntityTaskAssociationTag `pulumi:"tags"`
	// type of the task. OS or DB
	TaskType *string `pulumi:"taskType"`
}

// NdbMaintenanceTaskEntityTaskAssociationInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationArgs and NdbMaintenanceTaskEntityTaskAssociationOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput
	ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput
}

type NdbMaintenanceTaskEntityTaskAssociationArgs struct {
	// access level of tasks
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// created date of task
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// modified date of task
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of maintenance window
	Description pulumi.StringPtrInput `pulumi:"description"`
	Entity      pulumi.StringPtrInput `pulumi:"entity"`
	// entity id
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// id of maintenance window
	Id pulumi.StringPtrInput `pulumi:"id"`
	// maintenance window id which has to be associated
	MaintenanceWindowId pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	// maintenance window owner id
	MaintenanceWindowOwnerId pulumi.StringPtrInput `pulumi:"maintenanceWindowOwnerId"`
	// name of of maintenance window
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner id of task
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// list of pre post commands of OS or DB task
	Payloads NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput `pulumi:"payloads"`
	// properties of task
	Properties NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput `pulumi:"properties"`
	// status of task
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags of task
	Tags NdbMaintenanceTaskEntityTaskAssociationTagArrayInput `pulumi:"tags"`
	// type of the task. OS or DB
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbMaintenanceTaskEntityTaskAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationArgs) ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationArgs) ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationArray and NdbMaintenanceTaskEntityTaskAssociationArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationArray{ NdbMaintenanceTaskEntityTaskAssociationArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationArray []NdbMaintenanceTaskEntityTaskAssociationInput

func (NdbMaintenanceTaskEntityTaskAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationArray) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationArray) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) ToNdbMaintenanceTaskEntityTaskAssociationOutput() NdbMaintenanceTaskEntityTaskAssociationOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) ToNdbMaintenanceTaskEntityTaskAssociationOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return o
}

// access level of tasks
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// created date of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// modified date of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// entity id
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// type of the entity. i.e. DBSERVER
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// id of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// maintenance window id which has to be associated
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

// maintenance window owner id
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) MaintenanceWindowOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.MaintenanceWindowOwnerId }).(pulumi.StringPtrOutput)
}

// name of of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner id of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// list of pre post commands of OS or DB task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Payloads() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationPayload {
		return v.Payloads
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput)
}

// properties of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Properties() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationProperty {
		return v.Properties
	}).(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput)
}

// status of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags of task
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) Tags() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) []NdbMaintenanceTaskEntityTaskAssociationTag {
		return v.Tags
	}).(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput)
}

// type of the task. OS or DB
func (o NdbMaintenanceTaskEntityTaskAssociationOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociation) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociation)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutput() NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociation {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociation)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayload struct {
	// Pre Post command of Task
	PrePostCommands []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand `pulumi:"prePostCommands"`
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadArgs and NdbMaintenanceTaskEntityTaskAssociationPayloadOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPayloadInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArgs struct {
	// Pre Post command of Task
	PrePostCommands NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput `pulumi:"prePostCommands"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadArray and NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadArray{ NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArray []NdbMaintenanceTaskEntityTaskAssociationPayloadInput

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return o
}

// Pre Post command of Task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadOutput) PrePostCommands() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayload) []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand {
		return v.PrePostCommands
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayload)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPayloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationPayload {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationPayload)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand struct {
	// post command of task
	PostCommand *string `pulumi:"postCommand"`
	// pre command of task
	PreCommand *string `pulumi:"preCommand"`
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs and NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs struct {
	// post command of task
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	// pre command of task
	PreCommand pulumi.StringPtrInput `pulumi:"preCommand"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray and NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray{ NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray []NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return o
}

// post command of task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

// pre command of task
func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommand)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationProperty struct {
	// name of of maintenance window
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceTaskEntityTaskAssociationPropertyInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPropertyArgs and NdbMaintenanceTaskEntityTaskAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPropertyInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArgs struct {
	// name of of maintenance window
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArgs) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationPropertyArray and NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationPropertyArray{ NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArray []NdbMaintenanceTaskEntityTaskAssociationPropertyInput

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationPropertyArray) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return o
}

// name of of maintenance window
func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationProperty)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput() NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationProperty {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationProperty)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTag struct {
	// entity id
	EntityId *string `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceTaskEntityTaskAssociationTagInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationTagArgs and NdbMaintenanceTaskEntityTaskAssociationTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationTagInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationTagArgs{...}
type NdbMaintenanceTaskEntityTaskAssociationTagInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput
	ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput
}

type NdbMaintenanceTaskEntityTaskAssociationTagArgs struct {
	// entity id
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// type of the entity. i.e. DBSERVER
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceTaskEntityTaskAssociationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArgs) ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArgs) ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationTagOutput)
}

// NdbMaintenanceTaskEntityTaskAssociationTagArrayInput is an input type that accepts NdbMaintenanceTaskEntityTaskAssociationTagArray and NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskEntityTaskAssociationTagArrayInput` via:
//
//	NdbMaintenanceTaskEntityTaskAssociationTagArray{ NdbMaintenanceTaskEntityTaskAssociationTagArgs{...} }
type NdbMaintenanceTaskEntityTaskAssociationTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput
	ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput
}

type NdbMaintenanceTaskEntityTaskAssociationTagArray []NdbMaintenanceTaskEntityTaskAssociationTagInput

func (NdbMaintenanceTaskEntityTaskAssociationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArray) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return i.ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskEntityTaskAssociationTagArray) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagOutput() NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return o
}

// entity id
func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// type of the entity. i.e. DBSERVER
func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskEntityTaskAssociationTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskEntityTaskAssociationTag)(nil)).Elem()
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutput() NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) ToNdbMaintenanceTaskEntityTaskAssociationTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput {
	return o
}

func (o NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskEntityTaskAssociationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskEntityTaskAssociationTag {
		return vs[0].([]NdbMaintenanceTaskEntityTaskAssociationTag)[vs[1].(int)]
	}).(NdbMaintenanceTaskEntityTaskAssociationTagOutput)
}

type NdbMaintenanceTaskTask struct {
	// command that you want to run after patching the OS/DB
	PostCommand *string `pulumi:"postCommand"`
	// command that you want to run before patching the OS/DB
	PreCommand *string `pulumi:"preCommand"`
	// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
	TaskType *string `pulumi:"taskType"`
}

// NdbMaintenanceTaskTaskInput is an input type that accepts NdbMaintenanceTaskTaskArgs and NdbMaintenanceTaskTaskOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskTaskInput` via:
//
//	NdbMaintenanceTaskTaskArgs{...}
type NdbMaintenanceTaskTaskInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput
	ToNdbMaintenanceTaskTaskOutputWithContext(context.Context) NdbMaintenanceTaskTaskOutput
}

type NdbMaintenanceTaskTaskArgs struct {
	// command that you want to run after patching the OS/DB
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	// command that you want to run before patching the OS/DB
	PreCommand pulumi.StringPtrInput `pulumi:"preCommand"`
	// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (NdbMaintenanceTaskTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskTask)(nil)).Elem()
}

func (i NdbMaintenanceTaskTaskArgs) ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput {
	return i.ToNdbMaintenanceTaskTaskOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskTaskArgs) ToNdbMaintenanceTaskTaskOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskTaskOutput)
}

// NdbMaintenanceTaskTaskArrayInput is an input type that accepts NdbMaintenanceTaskTaskArray and NdbMaintenanceTaskTaskArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceTaskTaskArrayInput` via:
//
//	NdbMaintenanceTaskTaskArray{ NdbMaintenanceTaskTaskArgs{...} }
type NdbMaintenanceTaskTaskArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput
	ToNdbMaintenanceTaskTaskArrayOutputWithContext(context.Context) NdbMaintenanceTaskTaskArrayOutput
}

type NdbMaintenanceTaskTaskArray []NdbMaintenanceTaskTaskInput

func (NdbMaintenanceTaskTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskTask)(nil)).Elem()
}

func (i NdbMaintenanceTaskTaskArray) ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput {
	return i.ToNdbMaintenanceTaskTaskArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceTaskTaskArray) ToNdbMaintenanceTaskTaskArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceTaskTaskArrayOutput)
}

type NdbMaintenanceTaskTaskOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceTaskTask)(nil)).Elem()
}

func (o NdbMaintenanceTaskTaskOutput) ToNdbMaintenanceTaskTaskOutput() NdbMaintenanceTaskTaskOutput {
	return o
}

func (o NdbMaintenanceTaskTaskOutput) ToNdbMaintenanceTaskTaskOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskOutput {
	return o
}

// command that you want to run after patching the OS/DB
func (o NdbMaintenanceTaskTaskOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

// command that you want to run before patching the OS/DB
func (o NdbMaintenanceTaskTaskOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

// type of task. Supports [ "OS_PATCHING", "DB_PATCHING" ]
func (o NdbMaintenanceTaskTaskOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceTaskTask) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceTaskTaskArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceTaskTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceTaskTask)(nil)).Elem()
}

func (o NdbMaintenanceTaskTaskArrayOutput) ToNdbMaintenanceTaskTaskArrayOutput() NdbMaintenanceTaskTaskArrayOutput {
	return o
}

func (o NdbMaintenanceTaskTaskArrayOutput) ToNdbMaintenanceTaskTaskArrayOutputWithContext(ctx context.Context) NdbMaintenanceTaskTaskArrayOutput {
	return o
}

func (o NdbMaintenanceTaskTaskArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceTaskTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceTaskTask {
		return vs[0].([]NdbMaintenanceTaskTask)[vs[1].(int)]
	}).(NdbMaintenanceTaskTaskOutput)
}

type NdbMaintenanceWindowEntityTaskAssoc struct {
	// access level
	AccessLevel *string `pulumi:"accessLevel"`
	// created date of maintenance window
	DateCreated *string `pulumi:"dateCreated"`
	// modified date of maintenance window
	DateModified *string `pulumi:"dateModified"`
	// Description for maintenance window
	Description              *string `pulumi:"description"`
	Entity                   *string `pulumi:"entity"`
	EntityId                 *string `pulumi:"entityId"`
	EntityType               *string `pulumi:"entityType"`
	Id                       *string `pulumi:"id"`
	MaintenanceWindowId      *string `pulumi:"maintenanceWindowId"`
	MaintenanceWindowOwnerId *string `pulumi:"maintenanceWindowOwnerId"`
	// Name for the maintenance window.
	Name *string `pulumi:"name"`
	// owner id of maintenance window
	OwnerId  *string                                      `pulumi:"ownerId"`
	Payloads []NdbMaintenanceWindowEntityTaskAssocPayload `pulumi:"payloads"`
	// properties of maintenance window
	Properties []NdbMaintenanceWindowEntityTaskAssocProperty `pulumi:"properties"`
	// status of maintennace window
	Status *string `pulumi:"status"`
	// tags of maintenance window
	Tags     []NdbMaintenanceWindowEntityTaskAssocTag `pulumi:"tags"`
	TaskType *string                                  `pulumi:"taskType"`
}

// NdbMaintenanceWindowEntityTaskAssocInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocArgs and NdbMaintenanceWindowEntityTaskAssocOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocArgs{...}
type NdbMaintenanceWindowEntityTaskAssocInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput
	ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocOutput
}

type NdbMaintenanceWindowEntityTaskAssocArgs struct {
	// access level
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// created date of maintenance window
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// modified date of maintenance window
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// Description for maintenance window
	Description              pulumi.StringPtrInput `pulumi:"description"`
	Entity                   pulumi.StringPtrInput `pulumi:"entity"`
	EntityId                 pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType               pulumi.StringPtrInput `pulumi:"entityType"`
	Id                       pulumi.StringPtrInput `pulumi:"id"`
	MaintenanceWindowId      pulumi.StringPtrInput `pulumi:"maintenanceWindowId"`
	MaintenanceWindowOwnerId pulumi.StringPtrInput `pulumi:"maintenanceWindowOwnerId"`
	// Name for the maintenance window.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner id of maintenance window
	OwnerId  pulumi.StringPtrInput                                `pulumi:"ownerId"`
	Payloads NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput `pulumi:"payloads"`
	// properties of maintenance window
	Properties NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput `pulumi:"properties"`
	// status of maintennace window
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags of maintenance window
	Tags     NdbMaintenanceWindowEntityTaskAssocTagArrayInput `pulumi:"tags"`
	TaskType pulumi.StringPtrInput                            `pulumi:"taskType"`
}

func (NdbMaintenanceWindowEntityTaskAssocArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocArgs) ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocArgs) ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocOutput)
}

// NdbMaintenanceWindowEntityTaskAssocArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocArray and NdbMaintenanceWindowEntityTaskAssocArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocArray{ NdbMaintenanceWindowEntityTaskAssocArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocArray []NdbMaintenanceWindowEntityTaskAssocInput

func (NdbMaintenanceWindowEntityTaskAssocArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocArray) ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocArray) ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) ToNdbMaintenanceWindowEntityTaskAssocOutput() NdbMaintenanceWindowEntityTaskAssocOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) ToNdbMaintenanceWindowEntityTaskAssocOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocOutput {
	return o
}

// access level
func (o NdbMaintenanceWindowEntityTaskAssocOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// created date of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// modified date of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// Description for maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) MaintenanceWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.MaintenanceWindowId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) MaintenanceWindowOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.MaintenanceWindowOwnerId }).(pulumi.StringPtrOutput)
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner id of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) Payloads() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocPayload {
		return v.Payloads
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput)
}

// properties of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Properties() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocProperty {
		return v.Properties
	}).(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput)
}

// status of maintennace window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags of maintenance window
func (o NdbMaintenanceWindowEntityTaskAssocOutput) Tags() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) []NdbMaintenanceWindowEntityTaskAssocTag { return v.Tags }).(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssoc) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssoc)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocArrayOutput() NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssoc {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssoc)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayload struct {
	PrePostCommands []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand `pulumi:"prePostCommands"`
}

// NdbMaintenanceWindowEntityTaskAssocPayloadInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadArgs and NdbMaintenanceWindowEntityTaskAssocPayloadOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPayloadInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArgs struct {
	PrePostCommands NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput `pulumi:"prePostCommands"`
}

func (NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadArray and NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadArray{ NdbMaintenanceWindowEntityTaskAssocPayloadArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArray []NdbMaintenanceWindowEntityTaskAssocPayloadInput

func (NdbMaintenanceWindowEntityTaskAssocPayloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutput() NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadOutput) PrePostCommands() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayload) []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand {
		return v.PrePostCommands
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayload)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPayloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocPayload {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocPayload)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand struct {
	PostCommand *string `pulumi:"postCommand"`
	PreCommand  *string `pulumi:"preCommand"`
}

// NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs and NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs struct {
	PostCommand pulumi.StringPtrInput `pulumi:"postCommand"`
	PreCommand  pulumi.StringPtrInput `pulumi:"preCommand"`
}

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray and NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray{ NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray []NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) PostCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand) *string { return v.PostCommand }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput) PreCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand) *string { return v.PreCommand }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput() NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommand)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput)
}

type NdbMaintenanceWindowEntityTaskAssocProperty struct {
	// Name for the maintenance window.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceWindowEntityTaskAssocPropertyInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPropertyArgs and NdbMaintenanceWindowEntityTaskAssocPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPropertyInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPropertyArgs{...}
type NdbMaintenanceWindowEntityTaskAssocPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput
	ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArgs struct {
	// Name for the maintenance window.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArgs) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPropertyOutput)
}

// NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocPropertyArray and NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocPropertyArray{ NdbMaintenanceWindowEntityTaskAssocPropertyArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArray []NdbMaintenanceWindowEntityTaskAssocPropertyInput

func (NdbMaintenanceWindowEntityTaskAssocPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArray) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocPropertyArray) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutput() NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return o
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput() NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocProperty {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocProperty)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocPropertyOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceWindowEntityTaskAssocTagInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocTagArgs and NdbMaintenanceWindowEntityTaskAssocTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocTagInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocTagArgs{...}
type NdbMaintenanceWindowEntityTaskAssocTagInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput
	ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput
}

type NdbMaintenanceWindowEntityTaskAssocTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowEntityTaskAssocTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArgs) ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArgs) ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocTagOutput)
}

// NdbMaintenanceWindowEntityTaskAssocTagArrayInput is an input type that accepts NdbMaintenanceWindowEntityTaskAssocTagArray and NdbMaintenanceWindowEntityTaskAssocTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowEntityTaskAssocTagArrayInput` via:
//
//	NdbMaintenanceWindowEntityTaskAssocTagArray{ NdbMaintenanceWindowEntityTaskAssocTagArgs{...} }
type NdbMaintenanceWindowEntityTaskAssocTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput
	ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput
}

type NdbMaintenanceWindowEntityTaskAssocTagArray []NdbMaintenanceWindowEntityTaskAssocTagInput

func (NdbMaintenanceWindowEntityTaskAssocTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArray) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return i.ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowEntityTaskAssocTagArray) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) ToNdbMaintenanceWindowEntityTaskAssocTagOutput() NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) ToNdbMaintenanceWindowEntityTaskAssocTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowEntityTaskAssocTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowEntityTaskAssocTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowEntityTaskAssocTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowEntityTaskAssocTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutput() NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) ToNdbMaintenanceWindowEntityTaskAssocTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowEntityTaskAssocTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowEntityTaskAssocTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowEntityTaskAssocTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowEntityTaskAssocTag {
		return vs[0].([]NdbMaintenanceWindowEntityTaskAssocTag)[vs[1].(int)]
	}).(NdbMaintenanceWindowEntityTaskAssocTagOutput)
}

type NdbMaintenanceWindowProperty struct {
	// Name for the maintenance window.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbMaintenanceWindowPropertyInput is an input type that accepts NdbMaintenanceWindowPropertyArgs and NdbMaintenanceWindowPropertyOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowPropertyInput` via:
//
//	NdbMaintenanceWindowPropertyArgs{...}
type NdbMaintenanceWindowPropertyInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput
	ToNdbMaintenanceWindowPropertyOutputWithContext(context.Context) NdbMaintenanceWindowPropertyOutput
}

type NdbMaintenanceWindowPropertyArgs struct {
	// Name for the maintenance window.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowPropertyArgs) ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput {
	return i.ToNdbMaintenanceWindowPropertyOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowPropertyArgs) ToNdbMaintenanceWindowPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowPropertyOutput)
}

// NdbMaintenanceWindowPropertyArrayInput is an input type that accepts NdbMaintenanceWindowPropertyArray and NdbMaintenanceWindowPropertyArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowPropertyArrayInput` via:
//
//	NdbMaintenanceWindowPropertyArray{ NdbMaintenanceWindowPropertyArgs{...} }
type NdbMaintenanceWindowPropertyArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput
	ToNdbMaintenanceWindowPropertyArrayOutputWithContext(context.Context) NdbMaintenanceWindowPropertyArrayOutput
}

type NdbMaintenanceWindowPropertyArray []NdbMaintenanceWindowPropertyInput

func (NdbMaintenanceWindowPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (i NdbMaintenanceWindowPropertyArray) ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput {
	return i.ToNdbMaintenanceWindowPropertyArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowPropertyArray) ToNdbMaintenanceWindowPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowPropertyArrayOutput)
}

type NdbMaintenanceWindowPropertyOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowPropertyOutput) ToNdbMaintenanceWindowPropertyOutput() NdbMaintenanceWindowPropertyOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyOutput) ToNdbMaintenanceWindowPropertyOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyOutput {
	return o
}

// Name for the maintenance window.
func (o NdbMaintenanceWindowPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowProperty)(nil)).Elem()
}

func (o NdbMaintenanceWindowPropertyArrayOutput) ToNdbMaintenanceWindowPropertyArrayOutput() NdbMaintenanceWindowPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyArrayOutput) ToNdbMaintenanceWindowPropertyArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowPropertyArrayOutput {
	return o
}

func (o NdbMaintenanceWindowPropertyArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowProperty {
		return vs[0].([]NdbMaintenanceWindowProperty)[vs[1].(int)]
	}).(NdbMaintenanceWindowPropertyOutput)
}

type NdbMaintenanceWindowSchedule struct {
	// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// duration in hours. Default is 2
	Duration *int `pulumi:"duration"`
	Hour     *int `pulumi:"hour"`
	Minute   *int `pulumi:"minute"`
	// Supported values [ MONTHLY, WEEKLY ]
	Recurrence *string `pulumi:"recurrence"`
	// start time for maintenance window to trigger
	StartTime *string `pulumi:"startTime"`
	Threshold *string `pulumi:"threshold"`
	// timezone . Default is Asia/Calcutta .
	Timezone *string `pulumi:"timezone"`
	// week of the month. Supports [1, 2, 3, 4] .
	WeekOfMonth *int `pulumi:"weekOfMonth"`
}

// NdbMaintenanceWindowScheduleInput is an input type that accepts NdbMaintenanceWindowScheduleArgs and NdbMaintenanceWindowScheduleOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowScheduleInput` via:
//
//	NdbMaintenanceWindowScheduleArgs{...}
type NdbMaintenanceWindowScheduleInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput
	ToNdbMaintenanceWindowScheduleOutputWithContext(context.Context) NdbMaintenanceWindowScheduleOutput
}

type NdbMaintenanceWindowScheduleArgs struct {
	// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// duration in hours. Default is 2
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	Hour     pulumi.IntPtrInput `pulumi:"hour"`
	Minute   pulumi.IntPtrInput `pulumi:"minute"`
	// Supported values [ MONTHLY, WEEKLY ]
	Recurrence pulumi.StringPtrInput `pulumi:"recurrence"`
	// start time for maintenance window to trigger
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// timezone . Default is Asia/Calcutta .
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// week of the month. Supports [1, 2, 3, 4] .
	WeekOfMonth pulumi.IntPtrInput `pulumi:"weekOfMonth"`
}

func (NdbMaintenanceWindowScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (i NdbMaintenanceWindowScheduleArgs) ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput {
	return i.ToNdbMaintenanceWindowScheduleOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowScheduleArgs) ToNdbMaintenanceWindowScheduleOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowScheduleOutput)
}

// NdbMaintenanceWindowScheduleArrayInput is an input type that accepts NdbMaintenanceWindowScheduleArray and NdbMaintenanceWindowScheduleArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowScheduleArrayInput` via:
//
//	NdbMaintenanceWindowScheduleArray{ NdbMaintenanceWindowScheduleArgs{...} }
type NdbMaintenanceWindowScheduleArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput
	ToNdbMaintenanceWindowScheduleArrayOutputWithContext(context.Context) NdbMaintenanceWindowScheduleArrayOutput
}

type NdbMaintenanceWindowScheduleArray []NdbMaintenanceWindowScheduleInput

func (NdbMaintenanceWindowScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (i NdbMaintenanceWindowScheduleArray) ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput {
	return i.ToNdbMaintenanceWindowScheduleArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowScheduleArray) ToNdbMaintenanceWindowScheduleArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowScheduleArrayOutput)
}

type NdbMaintenanceWindowScheduleOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (o NdbMaintenanceWindowScheduleOutput) ToNdbMaintenanceWindowScheduleOutput() NdbMaintenanceWindowScheduleOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleOutput) ToNdbMaintenanceWindowScheduleOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleOutput {
	return o
}

// Day of the week to trigger maintenance window. Supports [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
func (o NdbMaintenanceWindowScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// duration in hours. Default is 2
func (o NdbMaintenanceWindowScheduleOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Minute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.Minute }).(pulumi.IntPtrOutput)
}

// Supported values [ MONTHLY, WEEKLY ]
func (o NdbMaintenanceWindowScheduleOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Recurrence }).(pulumi.StringPtrOutput)
}

// start time for maintenance window to trigger
func (o NdbMaintenanceWindowScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowScheduleOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// timezone . Default is Asia/Calcutta .
func (o NdbMaintenanceWindowScheduleOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// week of the month. Supports [1, 2, 3, 4] .
func (o NdbMaintenanceWindowScheduleOutput) WeekOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowSchedule) *int { return v.WeekOfMonth }).(pulumi.IntPtrOutput)
}

type NdbMaintenanceWindowScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowSchedule)(nil)).Elem()
}

func (o NdbMaintenanceWindowScheduleArrayOutput) ToNdbMaintenanceWindowScheduleArrayOutput() NdbMaintenanceWindowScheduleArrayOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleArrayOutput) ToNdbMaintenanceWindowScheduleArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowScheduleArrayOutput {
	return o
}

func (o NdbMaintenanceWindowScheduleArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowSchedule {
		return vs[0].([]NdbMaintenanceWindowSchedule)[vs[1].(int)]
	}).(NdbMaintenanceWindowScheduleOutput)
}

type NdbMaintenanceWindowTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbMaintenanceWindowTagInput is an input type that accepts NdbMaintenanceWindowTagArgs and NdbMaintenanceWindowTagOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowTagInput` via:
//
//	NdbMaintenanceWindowTagArgs{...}
type NdbMaintenanceWindowTagInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput
	ToNdbMaintenanceWindowTagOutputWithContext(context.Context) NdbMaintenanceWindowTagOutput
}

type NdbMaintenanceWindowTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbMaintenanceWindowTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowTagArgs) ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput {
	return i.ToNdbMaintenanceWindowTagOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowTagArgs) ToNdbMaintenanceWindowTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowTagOutput)
}

// NdbMaintenanceWindowTagArrayInput is an input type that accepts NdbMaintenanceWindowTagArray and NdbMaintenanceWindowTagArrayOutput values.
// You can construct a concrete instance of `NdbMaintenanceWindowTagArrayInput` via:
//
//	NdbMaintenanceWindowTagArray{ NdbMaintenanceWindowTagArgs{...} }
type NdbMaintenanceWindowTagArrayInput interface {
	pulumi.Input

	ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput
	ToNdbMaintenanceWindowTagArrayOutputWithContext(context.Context) NdbMaintenanceWindowTagArrayOutput
}

type NdbMaintenanceWindowTagArray []NdbMaintenanceWindowTagInput

func (NdbMaintenanceWindowTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowTag)(nil)).Elem()
}

func (i NdbMaintenanceWindowTagArray) ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput {
	return i.ToNdbMaintenanceWindowTagArrayOutputWithContext(context.Background())
}

func (i NdbMaintenanceWindowTagArray) ToNdbMaintenanceWindowTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbMaintenanceWindowTagArrayOutput)
}

type NdbMaintenanceWindowTagOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbMaintenanceWindowTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowTagOutput) ToNdbMaintenanceWindowTagOutput() NdbMaintenanceWindowTagOutput {
	return o
}

func (o NdbMaintenanceWindowTagOutput) ToNdbMaintenanceWindowTagOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagOutput {
	return o
}

func (o NdbMaintenanceWindowTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbMaintenanceWindowTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbMaintenanceWindowTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbMaintenanceWindowTagArrayOutput struct{ *pulumi.OutputState }

func (NdbMaintenanceWindowTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbMaintenanceWindowTag)(nil)).Elem()
}

func (o NdbMaintenanceWindowTagArrayOutput) ToNdbMaintenanceWindowTagArrayOutput() NdbMaintenanceWindowTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowTagArrayOutput) ToNdbMaintenanceWindowTagArrayOutputWithContext(ctx context.Context) NdbMaintenanceWindowTagArrayOutput {
	return o
}

func (o NdbMaintenanceWindowTagArrayOutput) Index(i pulumi.IntInput) NdbMaintenanceWindowTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbMaintenanceWindowTag {
		return vs[0].([]NdbMaintenanceWindowTag)[vs[1].(int)]
	}).(NdbMaintenanceWindowTagOutput)
}

type NdbNetworkIpPool struct {
	Addresses []NdbNetworkIpPoolAddress `pulumi:"addresses"`
	// ending IP address range for new database servers
	EndIp      *string `pulumi:"endIp"`
	Id         *string `pulumi:"id"`
	ModifiedBy *string `pulumi:"modifiedBy"`
	// starting IP address range for new database servers
	StartIp *string `pulumi:"startIp"`
}

// NdbNetworkIpPoolInput is an input type that accepts NdbNetworkIpPoolArgs and NdbNetworkIpPoolOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolInput` via:
//
//	NdbNetworkIpPoolArgs{...}
type NdbNetworkIpPoolInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput
	ToNdbNetworkIpPoolOutputWithContext(context.Context) NdbNetworkIpPoolOutput
}

type NdbNetworkIpPoolArgs struct {
	Addresses NdbNetworkIpPoolAddressArrayInput `pulumi:"addresses"`
	// ending IP address range for new database servers
	EndIp      pulumi.StringPtrInput `pulumi:"endIp"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	ModifiedBy pulumi.StringPtrInput `pulumi:"modifiedBy"`
	// starting IP address range for new database servers
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (NdbNetworkIpPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPool)(nil)).Elem()
}

func (i NdbNetworkIpPoolArgs) ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput {
	return i.ToNdbNetworkIpPoolOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolArgs) ToNdbNetworkIpPoolOutputWithContext(ctx context.Context) NdbNetworkIpPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolOutput)
}

// NdbNetworkIpPoolArrayInput is an input type that accepts NdbNetworkIpPoolArray and NdbNetworkIpPoolArrayOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolArrayInput` via:
//
//	NdbNetworkIpPoolArray{ NdbNetworkIpPoolArgs{...} }
type NdbNetworkIpPoolArrayInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput
	ToNdbNetworkIpPoolArrayOutputWithContext(context.Context) NdbNetworkIpPoolArrayOutput
}

type NdbNetworkIpPoolArray []NdbNetworkIpPoolInput

func (NdbNetworkIpPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPool)(nil)).Elem()
}

func (i NdbNetworkIpPoolArray) ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput {
	return i.ToNdbNetworkIpPoolArrayOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolArray) ToNdbNetworkIpPoolArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolArrayOutput)
}

type NdbNetworkIpPoolOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPool)(nil)).Elem()
}

func (o NdbNetworkIpPoolOutput) ToNdbNetworkIpPoolOutput() NdbNetworkIpPoolOutput {
	return o
}

func (o NdbNetworkIpPoolOutput) ToNdbNetworkIpPoolOutputWithContext(ctx context.Context) NdbNetworkIpPoolOutput {
	return o
}

func (o NdbNetworkIpPoolOutput) Addresses() NdbNetworkIpPoolAddressArrayOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) []NdbNetworkIpPoolAddress { return v.Addresses }).(NdbNetworkIpPoolAddressArrayOutput)
}

// ending IP address range for new database servers
func (o NdbNetworkIpPoolOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolOutput) ModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.ModifiedBy }).(pulumi.StringPtrOutput)
}

// starting IP address range for new database servers
func (o NdbNetworkIpPoolOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPool) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type NdbNetworkIpPoolArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPool)(nil)).Elem()
}

func (o NdbNetworkIpPoolArrayOutput) ToNdbNetworkIpPoolArrayOutput() NdbNetworkIpPoolArrayOutput {
	return o
}

func (o NdbNetworkIpPoolArrayOutput) ToNdbNetworkIpPoolArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolArrayOutput {
	return o
}

func (o NdbNetworkIpPoolArrayOutput) Index(i pulumi.IntInput) NdbNetworkIpPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkIpPool {
		return vs[0].([]NdbNetworkIpPool)[vs[1].(int)]
	}).(NdbNetworkIpPoolOutput)
}

type NdbNetworkIpPoolAddress struct {
	Ip     *string `pulumi:"ip"`
	Status *string `pulumi:"status"`
}

// NdbNetworkIpPoolAddressInput is an input type that accepts NdbNetworkIpPoolAddressArgs and NdbNetworkIpPoolAddressOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolAddressInput` via:
//
//	NdbNetworkIpPoolAddressArgs{...}
type NdbNetworkIpPoolAddressInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput
	ToNdbNetworkIpPoolAddressOutputWithContext(context.Context) NdbNetworkIpPoolAddressOutput
}

type NdbNetworkIpPoolAddressArgs struct {
	Ip     pulumi.StringPtrInput `pulumi:"ip"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbNetworkIpPoolAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (i NdbNetworkIpPoolAddressArgs) ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput {
	return i.ToNdbNetworkIpPoolAddressOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolAddressArgs) ToNdbNetworkIpPoolAddressOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolAddressOutput)
}

// NdbNetworkIpPoolAddressArrayInput is an input type that accepts NdbNetworkIpPoolAddressArray and NdbNetworkIpPoolAddressArrayOutput values.
// You can construct a concrete instance of `NdbNetworkIpPoolAddressArrayInput` via:
//
//	NdbNetworkIpPoolAddressArray{ NdbNetworkIpPoolAddressArgs{...} }
type NdbNetworkIpPoolAddressArrayInput interface {
	pulumi.Input

	ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput
	ToNdbNetworkIpPoolAddressArrayOutputWithContext(context.Context) NdbNetworkIpPoolAddressArrayOutput
}

type NdbNetworkIpPoolAddressArray []NdbNetworkIpPoolAddressInput

func (NdbNetworkIpPoolAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (i NdbNetworkIpPoolAddressArray) ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput {
	return i.ToNdbNetworkIpPoolAddressArrayOutputWithContext(context.Background())
}

func (i NdbNetworkIpPoolAddressArray) ToNdbNetworkIpPoolAddressArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkIpPoolAddressArrayOutput)
}

type NdbNetworkIpPoolAddressOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (o NdbNetworkIpPoolAddressOutput) ToNdbNetworkIpPoolAddressOutput() NdbNetworkIpPoolAddressOutput {
	return o
}

func (o NdbNetworkIpPoolAddressOutput) ToNdbNetworkIpPoolAddressOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressOutput {
	return o
}

func (o NdbNetworkIpPoolAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPoolAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkIpPoolAddressOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkIpPoolAddress) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbNetworkIpPoolAddressArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkIpPoolAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkIpPoolAddress)(nil)).Elem()
}

func (o NdbNetworkIpPoolAddressArrayOutput) ToNdbNetworkIpPoolAddressArrayOutput() NdbNetworkIpPoolAddressArrayOutput {
	return o
}

func (o NdbNetworkIpPoolAddressArrayOutput) ToNdbNetworkIpPoolAddressArrayOutputWithContext(ctx context.Context) NdbNetworkIpPoolAddressArrayOutput {
	return o
}

func (o NdbNetworkIpPoolAddressArrayOutput) Index(i pulumi.IntInput) NdbNetworkIpPoolAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkIpPoolAddress {
		return vs[0].([]NdbNetworkIpPoolAddress)[vs[1].(int)]
	}).(NdbNetworkIpPoolAddressOutput)
}

type NdbNetworkPropertiesMap struct {
	VlanGateway      *string `pulumi:"vlanGateway"`
	VlanPrimaryDns   *string `pulumi:"vlanPrimaryDns"`
	VlanSecondaryDns *string `pulumi:"vlanSecondaryDns"`
	VlanSubnetMask   *string `pulumi:"vlanSubnetMask"`
}

// NdbNetworkPropertiesMapInput is an input type that accepts NdbNetworkPropertiesMap and NdbNetworkPropertiesMapOutput values.
// You can construct a concrete instance of `NdbNetworkPropertiesMapInput` via:
//
//	NdbNetworkPropertiesMap{ "key": NdbNetworkPropertiesArgs{...} }
type NdbNetworkPropertiesMapInput interface {
	pulumi.Input

	ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput
	ToNdbNetworkPropertiesMapOutputWithContext(context.Context) NdbNetworkPropertiesMapOutput
}

type NdbNetworkPropertiesMapArgs struct {
	VlanGateway      pulumi.StringPtrInput `pulumi:"vlanGateway"`
	VlanPrimaryDns   pulumi.StringPtrInput `pulumi:"vlanPrimaryDns"`
	VlanSecondaryDns pulumi.StringPtrInput `pulumi:"vlanSecondaryDns"`
	VlanSubnetMask   pulumi.StringPtrInput `pulumi:"vlanSubnetMask"`
}

func (NdbNetworkPropertiesMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkPropertiesMap)(nil)).Elem()
}

func (i NdbNetworkPropertiesMapArgs) ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput {
	return i.ToNdbNetworkPropertiesMapOutputWithContext(context.Background())
}

func (i NdbNetworkPropertiesMapArgs) ToNdbNetworkPropertiesMapOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertiesMapOutput)
}

// NdbNetworkPropertiesMapArrayInput is an input type that accepts NdbNetworkPropertiesMapArray and NdbNetworkPropertiesMapArrayOutput values.
// You can construct a concrete instance of `NdbNetworkPropertiesMapArrayInput` via:
//
//	NdbNetworkPropertiesMapArray{ NdbNetworkPropertiesMapArgs{...} }
type NdbNetworkPropertiesMapArrayInput interface {
	pulumi.Input

	ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput
	ToNdbNetworkPropertiesMapArrayOutputWithContext(context.Context) NdbNetworkPropertiesMapArrayOutput
}

type NdbNetworkPropertiesMapArray []NdbNetworkPropertiesMapInput

func (NdbNetworkPropertiesMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkPropertiesMap)(nil)).Elem()
}

func (i NdbNetworkPropertiesMapArray) ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput {
	return i.ToNdbNetworkPropertiesMapArrayOutputWithContext(context.Background())
}

func (i NdbNetworkPropertiesMapArray) ToNdbNetworkPropertiesMapArrayOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertiesMapArrayOutput)
}

type NdbNetworkPropertiesMapOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkPropertiesMap)(nil)).Elem()
}

func (o NdbNetworkPropertiesMapOutput) ToNdbNetworkPropertiesMapOutput() NdbNetworkPropertiesMapOutput {
	return o
}

func (o NdbNetworkPropertiesMapOutput) ToNdbNetworkPropertiesMapOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapOutput {
	return o
}

func (o NdbNetworkPropertiesMapOutput) VlanGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanGateway }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanPrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanPrimaryDns }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanSecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanSecondaryDns }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertiesMapOutput) VlanSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkPropertiesMap) *string { return v.VlanSubnetMask }).(pulumi.StringPtrOutput)
}

type NdbNetworkPropertiesMapArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertiesMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkPropertiesMap)(nil)).Elem()
}

func (o NdbNetworkPropertiesMapArrayOutput) ToNdbNetworkPropertiesMapArrayOutput() NdbNetworkPropertiesMapArrayOutput {
	return o
}

func (o NdbNetworkPropertiesMapArrayOutput) ToNdbNetworkPropertiesMapArrayOutputWithContext(ctx context.Context) NdbNetworkPropertiesMapArrayOutput {
	return o
}

func (o NdbNetworkPropertiesMapArrayOutput) Index(i pulumi.IntInput) NdbNetworkPropertiesMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkPropertiesMap {
		return vs[0].([]NdbNetworkPropertiesMap)[vs[1].(int)]
	}).(NdbNetworkPropertiesMapOutput)
}

type NdbNetworkProperty struct {
	// Name of the vlan to be attached in NDB
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbNetworkPropertyInput is an input type that accepts NdbNetworkPropertyArgs and NdbNetworkPropertyOutput values.
// You can construct a concrete instance of `NdbNetworkPropertyInput` via:
//
//	NdbNetworkPropertyArgs{...}
type NdbNetworkPropertyInput interface {
	pulumi.Input

	ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput
	ToNdbNetworkPropertyOutputWithContext(context.Context) NdbNetworkPropertyOutput
}

type NdbNetworkPropertyArgs struct {
	// Name of the vlan to be attached in NDB
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbNetworkPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkProperty)(nil)).Elem()
}

func (i NdbNetworkPropertyArgs) ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput {
	return i.ToNdbNetworkPropertyOutputWithContext(context.Background())
}

func (i NdbNetworkPropertyArgs) ToNdbNetworkPropertyOutputWithContext(ctx context.Context) NdbNetworkPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertyOutput)
}

// NdbNetworkPropertyArrayInput is an input type that accepts NdbNetworkPropertyArray and NdbNetworkPropertyArrayOutput values.
// You can construct a concrete instance of `NdbNetworkPropertyArrayInput` via:
//
//	NdbNetworkPropertyArray{ NdbNetworkPropertyArgs{...} }
type NdbNetworkPropertyArrayInput interface {
	pulumi.Input

	ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput
	ToNdbNetworkPropertyArrayOutputWithContext(context.Context) NdbNetworkPropertyArrayOutput
}

type NdbNetworkPropertyArray []NdbNetworkPropertyInput

func (NdbNetworkPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkProperty)(nil)).Elem()
}

func (i NdbNetworkPropertyArray) ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput {
	return i.ToNdbNetworkPropertyArrayOutputWithContext(context.Background())
}

func (i NdbNetworkPropertyArray) ToNdbNetworkPropertyArrayOutputWithContext(ctx context.Context) NdbNetworkPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbNetworkPropertyArrayOutput)
}

type NdbNetworkPropertyOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbNetworkProperty)(nil)).Elem()
}

func (o NdbNetworkPropertyOutput) ToNdbNetworkPropertyOutput() NdbNetworkPropertyOutput {
	return o
}

func (o NdbNetworkPropertyOutput) ToNdbNetworkPropertyOutputWithContext(ctx context.Context) NdbNetworkPropertyOutput {
	return o
}

// Name of the vlan to be attached in NDB
func (o NdbNetworkPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbNetworkPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbNetworkPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbNetworkProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbNetworkPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbNetworkPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbNetworkProperty)(nil)).Elem()
}

func (o NdbNetworkPropertyArrayOutput) ToNdbNetworkPropertyArrayOutput() NdbNetworkPropertyArrayOutput {
	return o
}

func (o NdbNetworkPropertyArrayOutput) ToNdbNetworkPropertyArrayOutputWithContext(ctx context.Context) NdbNetworkPropertyArrayOutput {
	return o
}

func (o NdbNetworkPropertyArrayOutput) Index(i pulumi.IntInput) NdbNetworkPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbNetworkProperty {
		return vs[0].([]NdbNetworkProperty)[vs[1].(int)]
	}).(NdbNetworkPropertyOutput)
}

type NdbProfileClusterAvailability struct {
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId *string `pulumi:"nxClusterId"`
	OwnerId     *string `pulumi:"ownerId"`
	ProfileId   *string `pulumi:"profileId"`
	// status of profile
	Status *string `pulumi:"status"`
}

// NdbProfileClusterAvailabilityInput is an input type that accepts NdbProfileClusterAvailabilityArgs and NdbProfileClusterAvailabilityOutput values.
// You can construct a concrete instance of `NdbProfileClusterAvailabilityInput` via:
//
//	NdbProfileClusterAvailabilityArgs{...}
type NdbProfileClusterAvailabilityInput interface {
	pulumi.Input

	ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput
	ToNdbProfileClusterAvailabilityOutputWithContext(context.Context) NdbProfileClusterAvailabilityOutput
}

type NdbProfileClusterAvailabilityArgs struct {
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	ProfileId   pulumi.StringPtrInput `pulumi:"profileId"`
	// status of profile
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbProfileClusterAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileClusterAvailability)(nil)).Elem()
}

func (i NdbProfileClusterAvailabilityArgs) ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput {
	return i.ToNdbProfileClusterAvailabilityOutputWithContext(context.Background())
}

func (i NdbProfileClusterAvailabilityArgs) ToNdbProfileClusterAvailabilityOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileClusterAvailabilityOutput)
}

// NdbProfileClusterAvailabilityArrayInput is an input type that accepts NdbProfileClusterAvailabilityArray and NdbProfileClusterAvailabilityArrayOutput values.
// You can construct a concrete instance of `NdbProfileClusterAvailabilityArrayInput` via:
//
//	NdbProfileClusterAvailabilityArray{ NdbProfileClusterAvailabilityArgs{...} }
type NdbProfileClusterAvailabilityArrayInput interface {
	pulumi.Input

	ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput
	ToNdbProfileClusterAvailabilityArrayOutputWithContext(context.Context) NdbProfileClusterAvailabilityArrayOutput
}

type NdbProfileClusterAvailabilityArray []NdbProfileClusterAvailabilityInput

func (NdbProfileClusterAvailabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileClusterAvailability)(nil)).Elem()
}

func (i NdbProfileClusterAvailabilityArray) ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput {
	return i.ToNdbProfileClusterAvailabilityArrayOutputWithContext(context.Background())
}

func (i NdbProfileClusterAvailabilityArray) ToNdbProfileClusterAvailabilityArrayOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileClusterAvailabilityArrayOutput)
}

type NdbProfileClusterAvailabilityOutput struct{ *pulumi.OutputState }

func (NdbProfileClusterAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileClusterAvailability)(nil)).Elem()
}

func (o NdbProfileClusterAvailabilityOutput) ToNdbProfileClusterAvailabilityOutput() NdbProfileClusterAvailabilityOutput {
	return o
}

func (o NdbProfileClusterAvailabilityOutput) ToNdbProfileClusterAvailabilityOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityOutput {
	return o
}

func (o NdbProfileClusterAvailabilityOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// cluster on which profile created
func (o NdbProfileClusterAvailabilityOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileClusterAvailabilityOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// status of profile
func (o NdbProfileClusterAvailabilityOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileClusterAvailability) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbProfileClusterAvailabilityArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileClusterAvailabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileClusterAvailability)(nil)).Elem()
}

func (o NdbProfileClusterAvailabilityArrayOutput) ToNdbProfileClusterAvailabilityArrayOutput() NdbProfileClusterAvailabilityArrayOutput {
	return o
}

func (o NdbProfileClusterAvailabilityArrayOutput) ToNdbProfileClusterAvailabilityArrayOutputWithContext(ctx context.Context) NdbProfileClusterAvailabilityArrayOutput {
	return o
}

func (o NdbProfileClusterAvailabilityArrayOutput) Index(i pulumi.IntInput) NdbProfileClusterAvailabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileClusterAvailability {
		return vs[0].([]NdbProfileClusterAvailability)[vs[1].(int)]
	}).(NdbProfileClusterAvailabilityOutput)
}

type NdbProfileComputeProfile struct {
	// number of cores per vCPU for the database server VM.
	CorePerCpu *string `pulumi:"corePerCpu"`
	// number of vCPUs for the database server VM.
	Cpus *string `pulumi:"cpus"`
	// amount of memory for the database server VM.
	MemorySize *string `pulumi:"memorySize"`
}

// NdbProfileComputeProfileInput is an input type that accepts NdbProfileComputeProfileArgs and NdbProfileComputeProfileOutput values.
// You can construct a concrete instance of `NdbProfileComputeProfileInput` via:
//
//	NdbProfileComputeProfileArgs{...}
type NdbProfileComputeProfileInput interface {
	pulumi.Input

	ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput
	ToNdbProfileComputeProfileOutputWithContext(context.Context) NdbProfileComputeProfileOutput
}

type NdbProfileComputeProfileArgs struct {
	// number of cores per vCPU for the database server VM.
	CorePerCpu pulumi.StringPtrInput `pulumi:"corePerCpu"`
	// number of vCPUs for the database server VM.
	Cpus pulumi.StringPtrInput `pulumi:"cpus"`
	// amount of memory for the database server VM.
	MemorySize pulumi.StringPtrInput `pulumi:"memorySize"`
}

func (NdbProfileComputeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileComputeProfile)(nil)).Elem()
}

func (i NdbProfileComputeProfileArgs) ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput {
	return i.ToNdbProfileComputeProfileOutputWithContext(context.Background())
}

func (i NdbProfileComputeProfileArgs) ToNdbProfileComputeProfileOutputWithContext(ctx context.Context) NdbProfileComputeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileComputeProfileOutput)
}

// NdbProfileComputeProfileArrayInput is an input type that accepts NdbProfileComputeProfileArray and NdbProfileComputeProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileComputeProfileArrayInput` via:
//
//	NdbProfileComputeProfileArray{ NdbProfileComputeProfileArgs{...} }
type NdbProfileComputeProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput
	ToNdbProfileComputeProfileArrayOutputWithContext(context.Context) NdbProfileComputeProfileArrayOutput
}

type NdbProfileComputeProfileArray []NdbProfileComputeProfileInput

func (NdbProfileComputeProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileComputeProfile)(nil)).Elem()
}

func (i NdbProfileComputeProfileArray) ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput {
	return i.ToNdbProfileComputeProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileComputeProfileArray) ToNdbProfileComputeProfileArrayOutputWithContext(ctx context.Context) NdbProfileComputeProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileComputeProfileArrayOutput)
}

type NdbProfileComputeProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileComputeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileComputeProfile)(nil)).Elem()
}

func (o NdbProfileComputeProfileOutput) ToNdbProfileComputeProfileOutput() NdbProfileComputeProfileOutput {
	return o
}

func (o NdbProfileComputeProfileOutput) ToNdbProfileComputeProfileOutputWithContext(ctx context.Context) NdbProfileComputeProfileOutput {
	return o
}

// number of cores per vCPU for the database server VM.
func (o NdbProfileComputeProfileOutput) CorePerCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.CorePerCpu }).(pulumi.StringPtrOutput)
}

// number of vCPUs for the database server VM.
func (o NdbProfileComputeProfileOutput) Cpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.Cpus }).(pulumi.StringPtrOutput)
}

// amount of memory for the database server VM.
func (o NdbProfileComputeProfileOutput) MemorySize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileComputeProfile) *string { return v.MemorySize }).(pulumi.StringPtrOutput)
}

type NdbProfileComputeProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileComputeProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileComputeProfile)(nil)).Elem()
}

func (o NdbProfileComputeProfileArrayOutput) ToNdbProfileComputeProfileArrayOutput() NdbProfileComputeProfileArrayOutput {
	return o
}

func (o NdbProfileComputeProfileArrayOutput) ToNdbProfileComputeProfileArrayOutputWithContext(ctx context.Context) NdbProfileComputeProfileArrayOutput {
	return o
}

func (o NdbProfileComputeProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileComputeProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileComputeProfile {
		return vs[0].([]NdbProfileComputeProfile)[vs[1].(int)]
	}).(NdbProfileComputeProfileOutput)
}

type NdbProfileDatabaseParameterProfile struct {
	// Database parameters suuported for postgress.
	// * `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
	// * `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
	// * `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
	// * `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
	// * `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
	// * `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
	// * `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
	// * `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
	// * `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
	// * `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
	// * `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
	// * `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
	// * `postgres_database.checkpoint_completion_target`: (Optional)
	//   Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
	// * `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
	// * `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
	// * `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
	// * `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
	// * `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
	// * `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
	// * `postgres_database.wal_buffers`: (Optional)
	//   Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
	// * `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
	// * `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
	// * `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
	PostgresDatabases []NdbProfileDatabaseParameterProfilePostgresDatabase `pulumi:"postgresDatabases"`
}

// NdbProfileDatabaseParameterProfileInput is an input type that accepts NdbProfileDatabaseParameterProfileArgs and NdbProfileDatabaseParameterProfileOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfileInput` via:
//
//	NdbProfileDatabaseParameterProfileArgs{...}
type NdbProfileDatabaseParameterProfileInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput
	ToNdbProfileDatabaseParameterProfileOutputWithContext(context.Context) NdbProfileDatabaseParameterProfileOutput
}

type NdbProfileDatabaseParameterProfileArgs struct {
	// Database parameters suuported for postgress.
	// * `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
	// * `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
	// * `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
	// * `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
	// * `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
	// * `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
	// * `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
	// * `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
	// * `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
	// * `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
	// * `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
	// * `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
	// * `postgres_database.checkpoint_completion_target`: (Optional)
	//   Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
	// * `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
	// * `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
	// * `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
	// * `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
	// * `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
	// * `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
	// * `postgres_database.wal_buffers`: (Optional)
	//   Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
	// * `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
	// * `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
	// * `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
	PostgresDatabases NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
}

func (NdbProfileDatabaseParameterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfileArgs) ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput {
	return i.ToNdbProfileDatabaseParameterProfileOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfileArgs) ToNdbProfileDatabaseParameterProfileOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfileOutput)
}

// NdbProfileDatabaseParameterProfileArrayInput is an input type that accepts NdbProfileDatabaseParameterProfileArray and NdbProfileDatabaseParameterProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfileArrayInput` via:
//
//	NdbProfileDatabaseParameterProfileArray{ NdbProfileDatabaseParameterProfileArgs{...} }
type NdbProfileDatabaseParameterProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput
	ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(context.Context) NdbProfileDatabaseParameterProfileArrayOutput
}

type NdbProfileDatabaseParameterProfileArray []NdbProfileDatabaseParameterProfileInput

func (NdbProfileDatabaseParameterProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfileArray) ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput {
	return i.ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfileArray) ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfileArrayOutput)
}

type NdbProfileDatabaseParameterProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfileOutput) ToNdbProfileDatabaseParameterProfileOutput() NdbProfileDatabaseParameterProfileOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileOutput) ToNdbProfileDatabaseParameterProfileOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileOutput {
	return o
}

// Database parameters suuported for postgress.
//   - `postgres_database.max_connections`: (Optional) Determines the maximum number of concurrent connections to the database server. The default is set to 100
//   - `postgres_database.max_replication_slots`: (Optional) Specifies the maximum number of replication slots that the server can support. The default is zero. walLevel must be set to archive or higher to allow replication slots to be used. Setting it to a lower value than the number of currently existing replication slots will prevent the server from starting.
//   - `postgres_database.effective_io_concurrency`: (Optional) Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. Raising this value will increase the number of I/O operations that any individual PostgreSQL session attempts to initiate in parallel.
//   - `postgres_database.timezone`: (Optional) Sets the time zone for displaying and interpreting time stamps. Defult is UTC .
//   - `postgres_database.max_prepared_transactions`: (Optional) Sets the maximum number of transactions that can be in the prepared state simultaneously. Setting this parameter to zero (which is the default) disables the prepared-transaction feature.
//   - `postgres_database.max_locks_per_transaction`: (Optional) This parameter controls the average number of object locks allocated for each transaction; individual transactions can lock more objects as long as the locks of all transactions fit in the lock table. Default is 64.
//   - `postgres_database.max_wal_senders`: (Optional) Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients (i.e., the maximum number of simultaneously running WAL sender processes). The default is 10.
//   - `postgres_database.max_worker_processes`: (Optional) Sets the maximum number of background processes that the system can support. The default is 8.
//   - `postgres_database.min_wal_size`: (Optional) As long as WAL disk usage stays below this setting, old WAL files are always recycled for future use at a checkpoint, rather than removed. This can be used to ensure that enough WAL space is reserved to handle spikes in WAL usage, for example when running large batch jobs. The default is 80 MB.
//   - `postgres_database.max_wal_size`: (Optional) Maximum size to let the WAL grow to between automatic WAL checkpoints. The default is 1 GB
//   - `postgres_database.checkpoint_timeout`: (Optional) Sets the maximum time between automatic WAL checkpoints . High Value gives Good Performance, but takes More Recovery Time, Reboot time. can reduce the I/O load on your system, especially when using large values for shared_buffers. Default is 5min
//   - `postgres_database.autovacuum`: (Optional) Controls whether the server should run the autovacuum launcher daemon. This is on by default; however, trackCounts must also be enabled for autovacuum to work.
//   - `postgres_database.checkpoint_completion_target`: (Optional)
//     Specifies the target of checkpoint completion, as a fraction of total time between checkpoints. Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval . Formula - (checkpoint_timeout - 2min) / checkpoint_timeout. The default is 0.5.
//   - `postgres_database.autovacuum_freeze_max_age`: (Optional) Age at which to autovacuum a table to prevent transaction ID wraparound. Default is 200000000
//   - `postgres_database.autovacuum_vacuum_threshold`: (Optional) Min number of row updates before vacuum. Minimum number of tuple updates or deletes prior to vacuum. Take value in KB. Default is 50 .
//   - `postgres_database.autovacuum_vacuum_scale_factor`: (Optional) Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. Default is 0.2
//   - `postgres_database.autovacuum_work_mem`: (Optional) Sets the maximum memory to be used by each autovacuum worker process. Unit is in KB. Default is -1
//   - `postgres_database.autovacuum_max_workers`: (Optional) Sets the maximum number of simultaneously running autovacuum worker processes. Default is 3
//   - `postgres_database.autovacuum_vacuum_cost_delay`: (Optional) Vacuum cost delay in milliseconds, for autovacuum. Specifies the cost delay value that will be used in automatic VACUUM operation. Default is 2ms
//   - `postgres_database.wal_buffers`: (Optional)
//     Sets the number of disk-page buffers in shared memory for WAL. The amount of shared memory used for WAL data that has not yet been written to disk. The default is -1.
//   - `postgres_database.synchronous_commit`: (Optional) Sets the current transaction's synchronization level. Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a success indication to the client. Default is on.
//   - `postgres_database.random_page_cost`: (Optional) Sets the planner's estimate of the cost of a nonsequentially fetched disk page. Sets the planner's estimate of the cost of a non-sequentially-fetched disk page. The default is 4.0.
//   - `postgres_database.wal_keep_segments`: (Optional) Sets the number of WAL files held for standby servers, Specifies the minimum number of past log file segments kept in the pgWal directory. Default is 700 .
func (o NdbProfileDatabaseParameterProfileOutput) PostgresDatabases() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfile) []NdbProfileDatabaseParameterProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput)
}

type NdbProfileDatabaseParameterProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfile)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) ToNdbProfileDatabaseParameterProfileArrayOutput() NdbProfileDatabaseParameterProfileArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) ToNdbProfileDatabaseParameterProfileArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfileArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileDatabaseParameterProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileDatabaseParameterProfile {
		return vs[0].([]NdbProfileDatabaseParameterProfile)[vs[1].(int)]
	}).(NdbProfileDatabaseParameterProfileOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabase struct {
	Autovacuum                  *string `pulumi:"autovacuum"`
	AutovacuumFreezeMaxAge      *string `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers        *string `pulumi:"autovacuumMaxWorkers"`
	AutovacuumVacuumCostDelay   *string `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumScaleFactor *string `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold   *string `pulumi:"autovacuumVacuumThreshold"`
	AutovacuumWorkMem           *string `pulumi:"autovacuumWorkMem"`
	CheckpointCompletionTarget  *string `pulumi:"checkpointCompletionTarget"`
	CheckpointTimeout           *string `pulumi:"checkpointTimeout"`
	EffectiveIoConcurrency      *string `pulumi:"effectiveIoConcurrency"`
	MaxConnections              *string `pulumi:"maxConnections"`
	MaxLocksPerTransaction      *string `pulumi:"maxLocksPerTransaction"`
	MaxPreparedTransactions     *string `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots         *string `pulumi:"maxReplicationSlots"`
	MaxWalSenders               *string `pulumi:"maxWalSenders"`
	MaxWalSize                  *string `pulumi:"maxWalSize"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	MinWalSize                  *string `pulumi:"minWalSize"`
	RandomPageCost              *string `pulumi:"randomPageCost"`
	SynchronousCommit           *string `pulumi:"synchronousCommit"`
	Timezone                    *string `pulumi:"timezone"`
	WalBuffers                  *string `pulumi:"walBuffers"`
	WalKeepSegments             *string `pulumi:"walKeepSegments"`
}

// NdbProfileDatabaseParameterProfilePostgresDatabaseInput is an input type that accepts NdbProfileDatabaseParameterProfilePostgresDatabaseArgs and NdbProfileDatabaseParameterProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfilePostgresDatabaseInput` via:
//
//	NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{...}
type NdbProfileDatabaseParameterProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput
	ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArgs struct {
	Autovacuum                  pulumi.StringPtrInput `pulumi:"autovacuum"`
	AutovacuumFreezeMaxAge      pulumi.StringPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	AutovacuumMaxWorkers        pulumi.StringPtrInput `pulumi:"autovacuumMaxWorkers"`
	AutovacuumVacuumCostDelay   pulumi.StringPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	AutovacuumVacuumScaleFactor pulumi.StringPtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	AutovacuumVacuumThreshold   pulumi.StringPtrInput `pulumi:"autovacuumVacuumThreshold"`
	AutovacuumWorkMem           pulumi.StringPtrInput `pulumi:"autovacuumWorkMem"`
	CheckpointCompletionTarget  pulumi.StringPtrInput `pulumi:"checkpointCompletionTarget"`
	CheckpointTimeout           pulumi.StringPtrInput `pulumi:"checkpointTimeout"`
	EffectiveIoConcurrency      pulumi.StringPtrInput `pulumi:"effectiveIoConcurrency"`
	MaxConnections              pulumi.StringPtrInput `pulumi:"maxConnections"`
	MaxLocksPerTransaction      pulumi.StringPtrInput `pulumi:"maxLocksPerTransaction"`
	MaxPreparedTransactions     pulumi.StringPtrInput `pulumi:"maxPreparedTransactions"`
	MaxReplicationSlots         pulumi.StringPtrInput `pulumi:"maxReplicationSlots"`
	MaxWalSenders               pulumi.StringPtrInput `pulumi:"maxWalSenders"`
	MaxWalSize                  pulumi.StringPtrInput `pulumi:"maxWalSize"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	MinWalSize                  pulumi.StringPtrInput `pulumi:"minWalSize"`
	RandomPageCost              pulumi.StringPtrInput `pulumi:"randomPageCost"`
	SynchronousCommit           pulumi.StringPtrInput `pulumi:"synchronousCommit"`
	Timezone                    pulumi.StringPtrInput `pulumi:"timezone"`
	WalBuffers                  pulumi.StringPtrInput `pulumi:"walBuffers"`
	WalKeepSegments             pulumi.StringPtrInput `pulumi:"walKeepSegments"`
}

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return i.ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArgs) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput)
}

// NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileDatabaseParameterProfilePostgresDatabaseArray and NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileDatabaseParameterProfilePostgresDatabaseArray{ NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{...} }
type NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput
	ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArray []NdbProfileDatabaseParameterProfilePostgresDatabaseInput

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileDatabaseParameterProfilePostgresDatabaseArray) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) Autovacuum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.Autovacuum }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumFreezeMaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumFreezeMaxAge }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumMaxWorkers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumMaxWorkers }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumCostDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumVacuumCostDelay }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumScaleFactor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string {
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumVacuumThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumVacuumThreshold }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) AutovacuumWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.AutovacuumWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) CheckpointCompletionTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string {
		return v.CheckpointCompletionTarget
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) CheckpointTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.CheckpointTimeout }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) EffectiveIoConcurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.EffectiveIoConcurrency }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxConnections }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxLocksPerTransaction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxLocksPerTransaction }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxPreparedTransactions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxPreparedTransactions }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxReplicationSlots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxReplicationSlots }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWalSenders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWalSenders }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWalSize }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) MinWalSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.MinWalSize }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) RandomPageCost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.RandomPageCost }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) SynchronousCommit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.SynchronousCommit }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) WalBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.WalBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseOutput) WalKeepSegments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileDatabaseParameterProfilePostgresDatabase) *string { return v.WalKeepSegments }).(pulumi.StringPtrOutput)
}

type NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileDatabaseParameterProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput() NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) ToNdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileDatabaseParameterProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileDatabaseParameterProfilePostgresDatabase {
		return vs[0].([]NdbProfileDatabaseParameterProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput)
}

type NdbProfileNetworkProfile struct {
	// Postgres Info to create network profile
	//
	// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
	// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
	// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
	//
	// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
	// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
	// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
	// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
	// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
	PostgresDatabases []NdbProfileNetworkProfilePostgresDatabase `pulumi:"postgresDatabases"`
	// Topology supported for network profile. Allowed values are "cluster" and "single"
	Topology string `pulumi:"topology"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations []NdbProfileNetworkProfileVersionClusterAssociation `pulumi:"versionClusterAssociations"`
}

// NdbProfileNetworkProfileInput is an input type that accepts NdbProfileNetworkProfileArgs and NdbProfileNetworkProfileOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileInput` via:
//
//	NdbProfileNetworkProfileArgs{...}
type NdbProfileNetworkProfileInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput
	ToNdbProfileNetworkProfileOutputWithContext(context.Context) NdbProfileNetworkProfileOutput
}

type NdbProfileNetworkProfileArgs struct {
	// Postgres Info to create network profile
	//
	// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
	// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
	// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
	//
	// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
	// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
	// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
	// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
	// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
	PostgresDatabases NdbProfileNetworkProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
	// Topology supported for network profile. Allowed values are "cluster" and "single"
	Topology pulumi.StringInput `pulumi:"topology"`
	// cluster associated with VLAN. this is used with Single instance for postgres database.
	// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
	VersionClusterAssociations NdbProfileNetworkProfileVersionClusterAssociationArrayInput `pulumi:"versionClusterAssociations"`
}

func (NdbProfileNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfile)(nil)).Elem()
}

func (i NdbProfileNetworkProfileArgs) ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput {
	return i.ToNdbProfileNetworkProfileOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileArgs) ToNdbProfileNetworkProfileOutputWithContext(ctx context.Context) NdbProfileNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileOutput)
}

// NdbProfileNetworkProfileArrayInput is an input type that accepts NdbProfileNetworkProfileArray and NdbProfileNetworkProfileArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileArrayInput` via:
//
//	NdbProfileNetworkProfileArray{ NdbProfileNetworkProfileArgs{...} }
type NdbProfileNetworkProfileArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput
	ToNdbProfileNetworkProfileArrayOutputWithContext(context.Context) NdbProfileNetworkProfileArrayOutput
}

type NdbProfileNetworkProfileArray []NdbProfileNetworkProfileInput

func (NdbProfileNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfile)(nil)).Elem()
}

func (i NdbProfileNetworkProfileArray) ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput {
	return i.ToNdbProfileNetworkProfileArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileArray) ToNdbProfileNetworkProfileArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileArrayOutput)
}

type NdbProfileNetworkProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfile)(nil)).Elem()
}

func (o NdbProfileNetworkProfileOutput) ToNdbProfileNetworkProfileOutput() NdbProfileNetworkProfileOutput {
	return o
}

func (o NdbProfileNetworkProfileOutput) ToNdbProfileNetworkProfileOutputWithContext(ctx context.Context) NdbProfileNetworkProfileOutput {
	return o
}

// Postgres Info to create network profile
//
// * `postgres_database.single_instance`: (Optional) Info for postgres database to create single instance network profile.
// * `postgres_database.single_instance.vlan_name`: (Required) specify the VLAN to provide the IP address used to connect the database from the public network.
// * `postgres_database.single_instance.enable_ip_address_selection`: (Optional) If Advanced Network Segmentation is enabled, then this vLAN needs to be a static vLAN and needs to be true.
//
// * `postgres_database.ha_instance`: (Optional) Info for craeting Network profile for HA instance
// * `postgres_database.ha_instance.vlan_name`: (Required) specify the VLANs for network
// * `postgres_database.ha_instance.cluster_name`: (Required) specify the cluster name associated with given VLANs
// * `postgres_database.ha_instance.cluster_id`: (Optional) specify the cluster ids associated with given VLANs
// * `postgres_database.ha_instance.num_of_clusters`: (Required) number of cluster attached to network profile
func (o NdbProfileNetworkProfileOutput) PostgresDatabases() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) []NdbProfileNetworkProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileNetworkProfilePostgresDatabaseArrayOutput)
}

// Topology supported for network profile. Allowed values are "cluster" and "single"
func (o NdbProfileNetworkProfileOutput) Topology() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) string { return v.Topology }).(pulumi.StringOutput)
}

// cluster associated with VLAN. this is used with Single instance for postgres database.
// * `version_cluster_association.nx_cluster_id`: (Required) cluster id for associated VLAN.
func (o NdbProfileNetworkProfileOutput) VersionClusterAssociations() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfile) []NdbProfileNetworkProfileVersionClusterAssociation {
		return v.VersionClusterAssociations
	}).(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput)
}

type NdbProfileNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfile)(nil)).Elem()
}

func (o NdbProfileNetworkProfileArrayOutput) ToNdbProfileNetworkProfileArrayOutput() NdbProfileNetworkProfileArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileArrayOutput) ToNdbProfileNetworkProfileArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfile {
		return vs[0].([]NdbProfileNetworkProfile)[vs[1].(int)]
	}).(NdbProfileNetworkProfileOutput)
}

type NdbProfileNetworkProfilePostgresDatabase struct {
	HaInstances     []NdbProfileNetworkProfilePostgresDatabaseHaInstance     `pulumi:"haInstances"`
	SingleInstances []NdbProfileNetworkProfilePostgresDatabaseSingleInstance `pulumi:"singleInstances"`
}

// NdbProfileNetworkProfilePostgresDatabaseInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseArgs and NdbProfileNetworkProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput
	ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput
}

type NdbProfileNetworkProfilePostgresDatabaseArgs struct {
	HaInstances     NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput     `pulumi:"haInstances"`
	SingleInstances NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput `pulumi:"singleInstances"`
}

func (NdbProfileNetworkProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseArgs) ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseArgs) ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseArray and NdbProfileNetworkProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseArray{ NdbProfileNetworkProfilePostgresDatabaseArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseArray []NdbProfileNetworkProfilePostgresDatabaseInput

func (NdbProfileNetworkProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseArray) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseArray) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) ToNdbProfileNetworkProfilePostgresDatabaseOutput() NdbProfileNetworkProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) ToNdbProfileNetworkProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) HaInstances() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabase) []NdbProfileNetworkProfilePostgresDatabaseHaInstance {
		return v.HaInstances
	}).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseOutput) SingleInstances() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabase) []NdbProfileNetworkProfilePostgresDatabaseSingleInstance {
		return v.SingleInstances
	}).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutput() NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabase {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstance struct {
	ClusterIds    []string `pulumi:"clusterIds"`
	ClusterNames  []string `pulumi:"clusterNames"`
	NumOfClusters *string  `pulumi:"numOfClusters"`
	VlanNames     []string `pulumi:"vlanNames"`
}

// NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs and NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput
	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs struct {
	ClusterIds    pulumi.StringArrayInput `pulumi:"clusterIds"`
	ClusterNames  pulumi.StringArrayInput `pulumi:"clusterNames"`
	NumOfClusters pulumi.StringPtrInput   `pulumi:"numOfClusters"`
	VlanNames     pulumi.StringArrayInput `pulumi:"vlanNames"`
}

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray and NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray{ NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray []NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) ClusterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.ClusterNames }).(pulumi.StringArrayOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) NumOfClusters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) *string { return v.NumOfClusters }).(pulumi.StringPtrOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput) VlanNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseHaInstance) []string { return v.VlanNames }).(pulumi.StringArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseHaInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabaseHaInstance {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabaseHaInstance)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstance struct {
	EnableIpAddressSelection *string `pulumi:"enableIpAddressSelection"`
	VlanName                 *string `pulumi:"vlanName"`
}

// NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs and NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{...}
type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput
	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs struct {
	EnableIpAddressSelection pulumi.StringPtrInput `pulumi:"enableIpAddressSelection"`
	VlanName                 pulumi.StringPtrInput `pulumi:"vlanName"`
}

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput)
}

// NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput is an input type that accepts NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray and NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput` via:
//
//	NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray{ NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{...} }
type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput
	ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray []NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return i.ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) EnableIpAddressSelection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseSingleInstance) *string {
		return v.EnableIpAddressSelection
	}).(pulumi.StringPtrOutput)
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput) VlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfilePostgresDatabaseSingleInstance) *string { return v.VlanName }).(pulumi.StringPtrOutput)
}

type NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)(nil)).Elem()
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput() NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) ToNdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput {
	return o
}

func (o NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfilePostgresDatabaseSingleInstance {
		return vs[0].([]NdbProfileNetworkProfilePostgresDatabaseSingleInstance)[vs[1].(int)]
	}).(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociation struct {
	// cluster on which profile created
	NxClusterId string `pulumi:"nxClusterId"`
}

// NdbProfileNetworkProfileVersionClusterAssociationInput is an input type that accepts NdbProfileNetworkProfileVersionClusterAssociationArgs and NdbProfileNetworkProfileVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileVersionClusterAssociationInput` via:
//
//	NdbProfileNetworkProfileVersionClusterAssociationArgs{...}
type NdbProfileNetworkProfileVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput
	ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput
}

type NdbProfileNetworkProfileVersionClusterAssociationArgs struct {
	// cluster on which profile created
	NxClusterId pulumi.StringInput `pulumi:"nxClusterId"`
}

func (NdbProfileNetworkProfileVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArgs) ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return i.ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArgs) ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileVersionClusterAssociationOutput)
}

// NdbProfileNetworkProfileVersionClusterAssociationArrayInput is an input type that accepts NdbProfileNetworkProfileVersionClusterAssociationArray and NdbProfileNetworkProfileVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbProfileNetworkProfileVersionClusterAssociationArrayInput` via:
//
//	NdbProfileNetworkProfileVersionClusterAssociationArray{ NdbProfileNetworkProfileVersionClusterAssociationArgs{...} }
type NdbProfileNetworkProfileVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput
	ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput
}

type NdbProfileNetworkProfileVersionClusterAssociationArray []NdbProfileNetworkProfileVersionClusterAssociationInput

func (NdbProfileNetworkProfileVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArray) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return i.ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbProfileNetworkProfileVersionClusterAssociationArray) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) ToNdbProfileNetworkProfileVersionClusterAssociationOutput() NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) ToNdbProfileNetworkProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return o
}

// cluster on which profile created
func (o NdbProfileNetworkProfileVersionClusterAssociationOutput) NxClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileNetworkProfileVersionClusterAssociation) string { return v.NxClusterId }).(pulumi.StringOutput)
}

type NdbProfileNetworkProfileVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileNetworkProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutput() NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) ToNdbProfileNetworkProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileNetworkProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileNetworkProfileVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbProfileNetworkProfileVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileNetworkProfileVersionClusterAssociation {
		return vs[0].([]NdbProfileNetworkProfileVersionClusterAssociation)[vs[1].(int)]
	}).(NdbProfileNetworkProfileVersionClusterAssociationOutput)
}

type NdbProfileSoftwareProfile struct {
	// specify Nutanix clusters where this profile is available.
	AvailableClusterIds []string `pulumi:"availableClusterIds"`
	// Software profile info about postgres database.
	// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
	// * `postgres_database.base_profile_version_name`: name for the software profile version.
	// * `postgres_database.base_profile_version_description`: description for the software profile version.
	// * `postgres_database.os_notes`: a note to provide additional information about the operating system
	// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
	PostgresDatabases []NdbProfileSoftwareProfilePostgresDatabase `pulumi:"postgresDatabases"`
	// Topology of software profile. Allowed values are "cluster" and "single"
	Topology string `pulumi:"topology"`
}

// NdbProfileSoftwareProfileInput is an input type that accepts NdbProfileSoftwareProfileArgs and NdbProfileSoftwareProfileOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfileInput` via:
//
//	NdbProfileSoftwareProfileArgs{...}
type NdbProfileSoftwareProfileInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput
	ToNdbProfileSoftwareProfileOutputWithContext(context.Context) NdbProfileSoftwareProfileOutput
}

type NdbProfileSoftwareProfileArgs struct {
	// specify Nutanix clusters where this profile is available.
	AvailableClusterIds pulumi.StringArrayInput `pulumi:"availableClusterIds"`
	// Software profile info about postgres database.
	// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
	// * `postgres_database.base_profile_version_name`: name for the software profile version.
	// * `postgres_database.base_profile_version_description`: description for the software profile version.
	// * `postgres_database.os_notes`: a note to provide additional information about the operating system
	// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
	PostgresDatabases NdbProfileSoftwareProfilePostgresDatabaseArrayInput `pulumi:"postgresDatabases"`
	// Topology of software profile. Allowed values are "cluster" and "single"
	Topology pulumi.StringInput `pulumi:"topology"`
}

func (NdbProfileSoftwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfile)(nil)).Elem()
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput {
	return i.ToNdbProfileSoftwareProfileOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfileOutputWithContext(ctx context.Context) NdbProfileSoftwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfileOutput)
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return i.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfileArgs) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfileOutput).ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx)
}

// NdbProfileSoftwareProfilePtrInput is an input type that accepts NdbProfileSoftwareProfileArgs, NdbProfileSoftwareProfilePtr and NdbProfileSoftwareProfilePtrOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePtrInput` via:
//
//	        NdbProfileSoftwareProfileArgs{...}
//
//	or:
//
//	        nil
type NdbProfileSoftwareProfilePtrInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput
	ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Context) NdbProfileSoftwareProfilePtrOutput
}

type ndbProfileSoftwareProfilePtrType NdbProfileSoftwareProfileArgs

func NdbProfileSoftwareProfilePtr(v *NdbProfileSoftwareProfileArgs) NdbProfileSoftwareProfilePtrInput {
	return (*ndbProfileSoftwareProfilePtrType)(v)
}

func (*ndbProfileSoftwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbProfileSoftwareProfile)(nil)).Elem()
}

func (i *ndbProfileSoftwareProfilePtrType) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return i.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (i *ndbProfileSoftwareProfilePtrType) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePtrOutput)
}

type NdbProfileSoftwareProfileOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfile)(nil)).Elem()
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfileOutput() NdbProfileSoftwareProfileOutput {
	return o
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfileOutputWithContext(ctx context.Context) NdbProfileSoftwareProfileOutput {
	return o
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return o.ToNdbProfileSoftwareProfilePtrOutputWithContext(context.Background())
}

func (o NdbProfileSoftwareProfileOutput) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbProfileSoftwareProfile) *NdbProfileSoftwareProfile {
		return &v
	}).(NdbProfileSoftwareProfilePtrOutput)
}

// specify Nutanix clusters where this profile is available.
func (o NdbProfileSoftwareProfileOutput) AvailableClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) []string { return v.AvailableClusterIds }).(pulumi.StringArrayOutput)
}

// Software profile info about postgres database.
// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
// * `postgres_database.base_profile_version_name`: name for the software profile version.
// * `postgres_database.base_profile_version_description`: description for the software profile version.
// * `postgres_database.os_notes`: a note to provide additional information about the operating system
// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
func (o NdbProfileSoftwareProfileOutput) PostgresDatabases() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) []NdbProfileSoftwareProfilePostgresDatabase {
		return v.PostgresDatabases
	}).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

// Topology of software profile. Allowed values are "cluster" and "single"
func (o NdbProfileSoftwareProfileOutput) Topology() pulumi.StringOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfile) string { return v.Topology }).(pulumi.StringOutput)
}

type NdbProfileSoftwareProfilePtrOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbProfileSoftwareProfile)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePtrOutput) ToNdbProfileSoftwareProfilePtrOutput() NdbProfileSoftwareProfilePtrOutput {
	return o
}

func (o NdbProfileSoftwareProfilePtrOutput) ToNdbProfileSoftwareProfilePtrOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePtrOutput {
	return o
}

func (o NdbProfileSoftwareProfilePtrOutput) Elem() NdbProfileSoftwareProfileOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) NdbProfileSoftwareProfile {
		if v != nil {
			return *v
		}
		var ret NdbProfileSoftwareProfile
		return ret
	}).(NdbProfileSoftwareProfileOutput)
}

// specify Nutanix clusters where this profile is available.
func (o NdbProfileSoftwareProfilePtrOutput) AvailableClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) []string {
		if v == nil {
			return nil
		}
		return v.AvailableClusterIds
	}).(pulumi.StringArrayOutput)
}

// Software profile info about postgres database.
// * `postgres_database.source_dbserver_id`: source dbserver id where postgress software will be installed.
// * `postgres_database.base_profile_version_name`: name for the software profile version.
// * `postgres_database.base_profile_version_description`: description for the software profile version.
// * `postgres_database.os_notes`: a note to provide additional information about the operating system
// * `postgres_database.db_software_notes`: a note to provide additional information about the database software.
func (o NdbProfileSoftwareProfilePtrOutput) PostgresDatabases() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) []NdbProfileSoftwareProfilePostgresDatabase {
		if v == nil {
			return nil
		}
		return v.PostgresDatabases
	}).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

// Topology of software profile. Allowed values are "cluster" and "single"
func (o NdbProfileSoftwareProfilePtrOutput) Topology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbProfileSoftwareProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Topology
	}).(pulumi.StringPtrOutput)
}

type NdbProfileSoftwareProfilePostgresDatabase struct {
	BaseProfileVersionDescription *string `pulumi:"baseProfileVersionDescription"`
	BaseProfileVersionName        *string `pulumi:"baseProfileVersionName"`
	DbSoftwareNotes               *string `pulumi:"dbSoftwareNotes"`
	OsNotes                       *string `pulumi:"osNotes"`
	SourceDbserverId              *string `pulumi:"sourceDbserverId"`
}

// NdbProfileSoftwareProfilePostgresDatabaseInput is an input type that accepts NdbProfileSoftwareProfilePostgresDatabaseArgs and NdbProfileSoftwareProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePostgresDatabaseInput` via:
//
//	NdbProfileSoftwareProfilePostgresDatabaseArgs{...}
type NdbProfileSoftwareProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput
	ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput
}

type NdbProfileSoftwareProfilePostgresDatabaseArgs struct {
	BaseProfileVersionDescription pulumi.StringPtrInput `pulumi:"baseProfileVersionDescription"`
	BaseProfileVersionName        pulumi.StringPtrInput `pulumi:"baseProfileVersionName"`
	DbSoftwareNotes               pulumi.StringPtrInput `pulumi:"dbSoftwareNotes"`
	OsNotes                       pulumi.StringPtrInput `pulumi:"osNotes"`
	SourceDbserverId              pulumi.StringPtrInput `pulumi:"sourceDbserverId"`
}

func (NdbProfileSoftwareProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArgs) ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return i.ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArgs) ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePostgresDatabaseOutput)
}

// NdbProfileSoftwareProfilePostgresDatabaseArrayInput is an input type that accepts NdbProfileSoftwareProfilePostgresDatabaseArray and NdbProfileSoftwareProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbProfileSoftwareProfilePostgresDatabaseArrayInput` via:
//
//	NdbProfileSoftwareProfilePostgresDatabaseArray{ NdbProfileSoftwareProfilePostgresDatabaseArgs{...} }
type NdbProfileSoftwareProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput
	ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput
}

type NdbProfileSoftwareProfilePostgresDatabaseArray []NdbProfileSoftwareProfilePostgresDatabaseInput

func (NdbProfileSoftwareProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArray) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return i.ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbProfileSoftwareProfilePostgresDatabaseArray) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput)
}

type NdbProfileSoftwareProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) ToNdbProfileSoftwareProfilePostgresDatabaseOutput() NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) ToNdbProfileSoftwareProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) BaseProfileVersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.BaseProfileVersionDescription }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) BaseProfileVersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.BaseProfileVersionName }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) DbSoftwareNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.DbSoftwareNotes }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) OsNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.OsNotes }).(pulumi.StringPtrOutput)
}

func (o NdbProfileSoftwareProfilePostgresDatabaseOutput) SourceDbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileSoftwareProfilePostgresDatabase) *string { return v.SourceDbserverId }).(pulumi.StringPtrOutput)
}

type NdbProfileSoftwareProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileSoftwareProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutput() NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) ToNdbProfileSoftwareProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbProfileSoftwareProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbProfileSoftwareProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbProfileSoftwareProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileSoftwareProfilePostgresDatabase {
		return vs[0].([]NdbProfileSoftwareProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbProfileSoftwareProfilePostgresDatabaseOutput)
}

type NdbProfileVersion struct {
	DbVersion  *string `pulumi:"dbVersion"`
	Deprecated *bool   `pulumi:"deprecated"`
	// Description of profile
	Description *string `pulumi:"description"`
	// Engine Type of database
	EngineType *string `pulumi:"engineType"`
	Id         *string `pulumi:"id"`
	// Name of profile
	Name *string `pulumi:"name"`
	// owner  of profile
	Owner         *string                     `pulumi:"owner"`
	ProfileId     *string                     `pulumi:"profileId"`
	Properties    []NdbProfileVersionProperty `pulumi:"properties"`
	PropertiesMap map[string]string           `pulumi:"propertiesMap"`
	// Publish for all users
	Published *bool `pulumi:"published"`
	// status of profile
	Status                     *string                                      `pulumi:"status"`
	SystemProfile              *bool                                        `pulumi:"systemProfile"`
	Topology                   *string                                      `pulumi:"topology"`
	Type                       *string                                      `pulumi:"type"`
	Version                    *string                                      `pulumi:"version"`
	VersionClusterAssociations []NdbProfileVersionVersionClusterAssociation `pulumi:"versionClusterAssociations"`
}

// NdbProfileVersionInput is an input type that accepts NdbProfileVersionArgs and NdbProfileVersionOutput values.
// You can construct a concrete instance of `NdbProfileVersionInput` via:
//
//	NdbProfileVersionArgs{...}
type NdbProfileVersionInput interface {
	pulumi.Input

	ToNdbProfileVersionOutput() NdbProfileVersionOutput
	ToNdbProfileVersionOutputWithContext(context.Context) NdbProfileVersionOutput
}

type NdbProfileVersionArgs struct {
	DbVersion  pulumi.StringPtrInput `pulumi:"dbVersion"`
	Deprecated pulumi.BoolPtrInput   `pulumi:"deprecated"`
	// Description of profile
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Engine Type of database
	EngineType pulumi.StringPtrInput `pulumi:"engineType"`
	Id         pulumi.StringPtrInput `pulumi:"id"`
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// owner  of profile
	Owner         pulumi.StringPtrInput               `pulumi:"owner"`
	ProfileId     pulumi.StringPtrInput               `pulumi:"profileId"`
	Properties    NdbProfileVersionPropertyArrayInput `pulumi:"properties"`
	PropertiesMap pulumi.StringMapInput               `pulumi:"propertiesMap"`
	// Publish for all users
	Published pulumi.BoolPtrInput `pulumi:"published"`
	// status of profile
	Status                     pulumi.StringPtrInput                                `pulumi:"status"`
	SystemProfile              pulumi.BoolPtrInput                                  `pulumi:"systemProfile"`
	Topology                   pulumi.StringPtrInput                                `pulumi:"topology"`
	Type                       pulumi.StringPtrInput                                `pulumi:"type"`
	Version                    pulumi.StringPtrInput                                `pulumi:"version"`
	VersionClusterAssociations NdbProfileVersionVersionClusterAssociationArrayInput `pulumi:"versionClusterAssociations"`
}

func (NdbProfileVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersion)(nil)).Elem()
}

func (i NdbProfileVersionArgs) ToNdbProfileVersionOutput() NdbProfileVersionOutput {
	return i.ToNdbProfileVersionOutputWithContext(context.Background())
}

func (i NdbProfileVersionArgs) ToNdbProfileVersionOutputWithContext(ctx context.Context) NdbProfileVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionOutput)
}

// NdbProfileVersionArrayInput is an input type that accepts NdbProfileVersionArray and NdbProfileVersionArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionArrayInput` via:
//
//	NdbProfileVersionArray{ NdbProfileVersionArgs{...} }
type NdbProfileVersionArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput
	ToNdbProfileVersionArrayOutputWithContext(context.Context) NdbProfileVersionArrayOutput
}

type NdbProfileVersionArray []NdbProfileVersionInput

func (NdbProfileVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersion)(nil)).Elem()
}

func (i NdbProfileVersionArray) ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput {
	return i.ToNdbProfileVersionArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionArray) ToNdbProfileVersionArrayOutputWithContext(ctx context.Context) NdbProfileVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionArrayOutput)
}

type NdbProfileVersionOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersion)(nil)).Elem()
}

func (o NdbProfileVersionOutput) ToNdbProfileVersionOutput() NdbProfileVersionOutput {
	return o
}

func (o NdbProfileVersionOutput) ToNdbProfileVersionOutputWithContext(ctx context.Context) NdbProfileVersionOutput {
	return o
}

func (o NdbProfileVersionOutput) DbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.DbVersion }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// Description of profile
func (o NdbProfileVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Engine Type of database
func (o NdbProfileVersionOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.EngineType }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of profile
func (o NdbProfileVersionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// owner  of profile
func (o NdbProfileVersionOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Properties() NdbProfileVersionPropertyArrayOutput {
	return o.ApplyT(func(v NdbProfileVersion) []NdbProfileVersionProperty { return v.Properties }).(NdbProfileVersionPropertyArrayOutput)
}

func (o NdbProfileVersionOutput) PropertiesMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbProfileVersion) map[string]string { return v.PropertiesMap }).(pulumi.StringMapOutput)
}

// Publish for all users
func (o NdbProfileVersionOutput) Published() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.Published }).(pulumi.BoolPtrOutput)
}

// status of profile
func (o NdbProfileVersionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) SystemProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *bool { return v.SystemProfile }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionOutput) Topology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Topology }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersion) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionOutput) VersionClusterAssociations() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o.ApplyT(func(v NdbProfileVersion) []NdbProfileVersionVersionClusterAssociation {
		return v.VersionClusterAssociations
	}).(NdbProfileVersionVersionClusterAssociationArrayOutput)
}

type NdbProfileVersionArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersion)(nil)).Elem()
}

func (o NdbProfileVersionArrayOutput) ToNdbProfileVersionArrayOutput() NdbProfileVersionArrayOutput {
	return o
}

func (o NdbProfileVersionArrayOutput) ToNdbProfileVersionArrayOutputWithContext(ctx context.Context) NdbProfileVersionArrayOutput {
	return o
}

func (o NdbProfileVersionArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersion {
		return vs[0].([]NdbProfileVersion)[vs[1].(int)]
	}).(NdbProfileVersionOutput)
}

type NdbProfileVersionProperty struct {
	// Name of profile
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbProfileVersionPropertyInput is an input type that accepts NdbProfileVersionPropertyArgs and NdbProfileVersionPropertyOutput values.
// You can construct a concrete instance of `NdbProfileVersionPropertyInput` via:
//
//	NdbProfileVersionPropertyArgs{...}
type NdbProfileVersionPropertyInput interface {
	pulumi.Input

	ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput
	ToNdbProfileVersionPropertyOutputWithContext(context.Context) NdbProfileVersionPropertyOutput
}

type NdbProfileVersionPropertyArgs struct {
	// Name of profile
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbProfileVersionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionProperty)(nil)).Elem()
}

func (i NdbProfileVersionPropertyArgs) ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput {
	return i.ToNdbProfileVersionPropertyOutputWithContext(context.Background())
}

func (i NdbProfileVersionPropertyArgs) ToNdbProfileVersionPropertyOutputWithContext(ctx context.Context) NdbProfileVersionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionPropertyOutput)
}

// NdbProfileVersionPropertyArrayInput is an input type that accepts NdbProfileVersionPropertyArray and NdbProfileVersionPropertyArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionPropertyArrayInput` via:
//
//	NdbProfileVersionPropertyArray{ NdbProfileVersionPropertyArgs{...} }
type NdbProfileVersionPropertyArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput
	ToNdbProfileVersionPropertyArrayOutputWithContext(context.Context) NdbProfileVersionPropertyArrayOutput
}

type NdbProfileVersionPropertyArray []NdbProfileVersionPropertyInput

func (NdbProfileVersionPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionProperty)(nil)).Elem()
}

func (i NdbProfileVersionPropertyArray) ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput {
	return i.ToNdbProfileVersionPropertyArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionPropertyArray) ToNdbProfileVersionPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionPropertyArrayOutput)
}

type NdbProfileVersionPropertyOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionProperty)(nil)).Elem()
}

func (o NdbProfileVersionPropertyOutput) ToNdbProfileVersionPropertyOutput() NdbProfileVersionPropertyOutput {
	return o
}

func (o NdbProfileVersionPropertyOutput) ToNdbProfileVersionPropertyOutputWithContext(ctx context.Context) NdbProfileVersionPropertyOutput {
	return o
}

// Name of profile
func (o NdbProfileVersionPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionProperty)(nil)).Elem()
}

func (o NdbProfileVersionPropertyArrayOutput) ToNdbProfileVersionPropertyArrayOutput() NdbProfileVersionPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionPropertyArrayOutput) ToNdbProfileVersionPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionPropertyArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionProperty {
		return vs[0].([]NdbProfileVersionProperty)[vs[1].(int)]
	}).(NdbProfileVersionPropertyOutput)
}

type NdbProfileVersionVersionClusterAssociation struct {
	DateCreated  *string `pulumi:"dateCreated"`
	DateModified *string `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId              *string                                              `pulumi:"nxClusterId"`
	OptimizedForProvisioning *bool                                                `pulumi:"optimizedForProvisioning"`
	OwnerId                  *string                                              `pulumi:"ownerId"`
	ProfileVersionId         *string                                              `pulumi:"profileVersionId"`
	Properties               []NdbProfileVersionVersionClusterAssociationProperty `pulumi:"properties"`
	// status of profile
	Status *string `pulumi:"status"`
}

// NdbProfileVersionVersionClusterAssociationInput is an input type that accepts NdbProfileVersionVersionClusterAssociationArgs and NdbProfileVersionVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationInput` via:
//
//	NdbProfileVersionVersionClusterAssociationArgs{...}
type NdbProfileVersionVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput
	ToNdbProfileVersionVersionClusterAssociationOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationOutput
}

type NdbProfileVersionVersionClusterAssociationArgs struct {
	DateCreated  pulumi.StringPtrInput `pulumi:"dateCreated"`
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// cluster on which profile created
	NxClusterId              pulumi.StringPtrInput                                        `pulumi:"nxClusterId"`
	OptimizedForProvisioning pulumi.BoolPtrInput                                          `pulumi:"optimizedForProvisioning"`
	OwnerId                  pulumi.StringPtrInput                                        `pulumi:"ownerId"`
	ProfileVersionId         pulumi.StringPtrInput                                        `pulumi:"profileVersionId"`
	Properties               NdbProfileVersionVersionClusterAssociationPropertyArrayInput `pulumi:"properties"`
	// status of profile
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbProfileVersionVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationArgs) ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationArgs) ToNdbProfileVersionVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationOutput)
}

// NdbProfileVersionVersionClusterAssociationArrayInput is an input type that accepts NdbProfileVersionVersionClusterAssociationArray and NdbProfileVersionVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationArrayInput` via:
//
//	NdbProfileVersionVersionClusterAssociationArray{ NdbProfileVersionVersionClusterAssociationArgs{...} }
type NdbProfileVersionVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput
	ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput
}

type NdbProfileVersionVersionClusterAssociationArray []NdbProfileVersionVersionClusterAssociationInput

func (NdbProfileVersionVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationArray) ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationArray) ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationArrayOutput)
}

type NdbProfileVersionVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ToNdbProfileVersionVersionClusterAssociationOutput() NdbProfileVersionVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ToNdbProfileVersionVersionClusterAssociationOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// cluster on which profile created
func (o NdbProfileVersionVersionClusterAssociationOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) OptimizedForProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *bool { return v.OptimizedForProvisioning }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) ProfileVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.ProfileVersionId }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationOutput) Properties() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) []NdbProfileVersionVersionClusterAssociationProperty {
		return v.Properties
	}).(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput)
}

// status of profile
func (o NdbProfileVersionVersionClusterAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociation)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) ToNdbProfileVersionVersionClusterAssociationArrayOutput() NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) ToNdbProfileVersionVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionVersionClusterAssociation {
		return vs[0].([]NdbProfileVersionVersionClusterAssociation)[vs[1].(int)]
	}).(NdbProfileVersionVersionClusterAssociationOutput)
}

type NdbProfileVersionVersionClusterAssociationProperty struct {
	// Name of profile
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbProfileVersionVersionClusterAssociationPropertyInput is an input type that accepts NdbProfileVersionVersionClusterAssociationPropertyArgs and NdbProfileVersionVersionClusterAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationPropertyInput` via:
//
//	NdbProfileVersionVersionClusterAssociationPropertyArgs{...}
type NdbProfileVersionVersionClusterAssociationPropertyInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput
	ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput
}

type NdbProfileVersionVersionClusterAssociationPropertyArgs struct {
	// Name of profile
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbProfileVersionVersionClusterAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArgs) ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArgs) ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationPropertyOutput)
}

// NdbProfileVersionVersionClusterAssociationPropertyArrayInput is an input type that accepts NdbProfileVersionVersionClusterAssociationPropertyArray and NdbProfileVersionVersionClusterAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbProfileVersionVersionClusterAssociationPropertyArrayInput` via:
//
//	NdbProfileVersionVersionClusterAssociationPropertyArray{ NdbProfileVersionVersionClusterAssociationPropertyArgs{...} }
type NdbProfileVersionVersionClusterAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput
	ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput
}

type NdbProfileVersionVersionClusterAssociationPropertyArray []NdbProfileVersionVersionClusterAssociationPropertyInput

func (NdbProfileVersionVersionClusterAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArray) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return i.ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbProfileVersionVersionClusterAssociationPropertyArray) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput)
}

type NdbProfileVersionVersionClusterAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) ToNdbProfileVersionVersionClusterAssociationPropertyOutput() NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) ToNdbProfileVersionVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return o
}

// Name of profile
func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbProfileVersionVersionClusterAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbProfileVersionVersionClusterAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbProfileVersionVersionClusterAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbProfileVersionVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutput() NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) ToNdbProfileVersionVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbProfileVersionVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbProfileVersionVersionClusterAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbProfileVersionVersionClusterAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbProfileVersionVersionClusterAssociationProperty {
		return vs[0].([]NdbProfileVersionVersionClusterAssociationProperty)[vs[1].(int)]
	}).(NdbProfileVersionVersionClusterAssociationPropertyOutput)
}

type NdbRegisterDatabaseActionargument struct {
	// - (Required) name of argument
	Name string `pulumi:"name"`
	// - (Required) value for argument
	Value string `pulumi:"value"`
}

// NdbRegisterDatabaseActionargumentInput is an input type that accepts NdbRegisterDatabaseActionargumentArgs and NdbRegisterDatabaseActionargumentOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseActionargumentInput` via:
//
//	NdbRegisterDatabaseActionargumentArgs{...}
type NdbRegisterDatabaseActionargumentInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput
	ToNdbRegisterDatabaseActionargumentOutputWithContext(context.Context) NdbRegisterDatabaseActionargumentOutput
}

type NdbRegisterDatabaseActionargumentArgs struct {
	// - (Required) name of argument
	Name pulumi.StringInput `pulumi:"name"`
	// - (Required) value for argument
	Value pulumi.StringInput `pulumi:"value"`
}

func (NdbRegisterDatabaseActionargumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (i NdbRegisterDatabaseActionargumentArgs) ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput {
	return i.ToNdbRegisterDatabaseActionargumentOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseActionargumentArgs) ToNdbRegisterDatabaseActionargumentOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseActionargumentOutput)
}

// NdbRegisterDatabaseActionargumentArrayInput is an input type that accepts NdbRegisterDatabaseActionargumentArray and NdbRegisterDatabaseActionargumentArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseActionargumentArrayInput` via:
//
//	NdbRegisterDatabaseActionargumentArray{ NdbRegisterDatabaseActionargumentArgs{...} }
type NdbRegisterDatabaseActionargumentArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput
	ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(context.Context) NdbRegisterDatabaseActionargumentArrayOutput
}

type NdbRegisterDatabaseActionargumentArray []NdbRegisterDatabaseActionargumentInput

func (NdbRegisterDatabaseActionargumentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (i NdbRegisterDatabaseActionargumentArray) ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput {
	return i.ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseActionargumentArray) ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseActionargumentArrayOutput)
}

type NdbRegisterDatabaseActionargumentOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseActionargumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (o NdbRegisterDatabaseActionargumentOutput) ToNdbRegisterDatabaseActionargumentOutput() NdbRegisterDatabaseActionargumentOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentOutput) ToNdbRegisterDatabaseActionargumentOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentOutput {
	return o
}

// - (Required) name of argument
func (o NdbRegisterDatabaseActionargumentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseActionargument) string { return v.Name }).(pulumi.StringOutput)
}

// - (Required) value for argument
func (o NdbRegisterDatabaseActionargumentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseActionargument) string { return v.Value }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseActionargumentArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseActionargumentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseActionargument)(nil)).Elem()
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) ToNdbRegisterDatabaseActionargumentArrayOutput() NdbRegisterDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) ToNdbRegisterDatabaseActionargumentArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseActionargumentArrayOutput {
	return o
}

func (o NdbRegisterDatabaseActionargumentArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseActionargumentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseActionargument {
		return vs[0].([]NdbRegisterDatabaseActionargument)[vs[1].(int)]
	}).(NdbRegisterDatabaseActionargumentOutput)
}

type NdbRegisterDatabaseDatabaseNode struct {
	AccessLevel map[string]string `pulumi:"accessLevel"`
	DatabaseId  *string           `pulumi:"databaseId"`
	// status of database
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbRegisterDatabaseDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbRegisterDatabaseDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                           `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbRegisterDatabaseDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                           `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// tags
	Tags []NdbRegisterDatabaseDatabaseNodeTag `pulumi:"tags"`
}

// NdbRegisterDatabaseDatabaseNodeInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeArgs and NdbRegisterDatabaseDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeArgs{...}
type NdbRegisterDatabaseDatabaseNodeInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput
	ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeOutput
}

type NdbRegisterDatabaseDatabaseNodeArgs struct {
	AccessLevel pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId  pulumi.StringPtrInput `pulumi:"databaseId"`
	// status of database
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbRegisterDatabaseDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbRegisterDatabaseDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                     `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                     `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags
	Tags NdbRegisterDatabaseDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbRegisterDatabaseDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeArgs) ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeArgs) ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeOutput)
}

// NdbRegisterDatabaseDatabaseNodeArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeArray and NdbRegisterDatabaseDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeArray{ NdbRegisterDatabaseDatabaseNodeArgs{...} }
type NdbRegisterDatabaseDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeArray []NdbRegisterDatabaseDatabaseNodeInput

func (NdbRegisterDatabaseDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeArray) ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeArray) ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ToNdbRegisterDatabaseDatabaseNodeOutput() NdbRegisterDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ToNdbRegisterDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// status of database
func (o NdbRegisterDatabaseDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Infos() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeInfo { return v.Infos }).(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseDatabaseNodeOutput) Properties() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeProperty { return v.Properties }).(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) ProtectionDomains() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbRegisterDatabaseDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags
func (o NdbRegisterDatabaseDatabaseNodeOutput) Tags() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNode) []NdbRegisterDatabaseDatabaseNodeTag { return v.Tags }).(NdbRegisterDatabaseDatabaseNodeTagArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) ToNdbRegisterDatabaseDatabaseNodeArrayOutput() NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) ToNdbRegisterDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNode {
		return vs[0].([]NdbRegisterDatabaseDatabaseNode)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseDatabaseNodeInfoInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeInfoArgs and NdbRegisterDatabaseDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInfoInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeInfoArgs{...}
type NdbRegisterDatabaseDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput
	ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput
}

type NdbRegisterDatabaseDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArgs) ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArgs) ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeInfoOutput)
}

// NdbRegisterDatabaseDatabaseNodeInfoArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeInfoArray and NdbRegisterDatabaseDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeInfoArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeInfoArray{ NdbRegisterDatabaseDatabaseNodeInfoArgs{...} }
type NdbRegisterDatabaseDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeInfoArray []NdbRegisterDatabaseDatabaseNodeInfoInput

func (NdbRegisterDatabaseDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArray) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeInfoArray) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) ToNdbRegisterDatabaseDatabaseNodeInfoOutput() NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) ToNdbRegisterDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutput() NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) ToNdbRegisterDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeInfo {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeInfoOutput)
}

type NdbRegisterDatabaseDatabaseNodeProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodePropertyInput is an input type that accepts NdbRegisterDatabaseDatabaseNodePropertyArgs and NdbRegisterDatabaseDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodePropertyInput` via:
//
//	NdbRegisterDatabaseDatabaseNodePropertyArgs{...}
type NdbRegisterDatabaseDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput
	ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput
}

type NdbRegisterDatabaseDatabaseNodePropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArgs) ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArgs) ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodePropertyOutput)
}

// NdbRegisterDatabaseDatabaseNodePropertyArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodePropertyArray and NdbRegisterDatabaseDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodePropertyArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodePropertyArray{ NdbRegisterDatabaseDatabaseNodePropertyArgs{...} }
type NdbRegisterDatabaseDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput
	ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput
}

type NdbRegisterDatabaseDatabaseNodePropertyArray []NdbRegisterDatabaseDatabaseNodePropertyInput

func (NdbRegisterDatabaseDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArray) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodePropertyArray) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) ToNdbRegisterDatabaseDatabaseNodePropertyOutput() NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) ToNdbRegisterDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutput() NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProperty {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodePropertyOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs and NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{...}
type NdbRegisterDatabaseDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput)
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainArray and NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainArray{ NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{...} }
type NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArray []NdbRegisterDatabaseDatabaseNodeProtectionDomainInput

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Properties() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) []NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProtectionDomain {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs and NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray and NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray{ NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray []NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbRegisterDatabaseDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDatabaseDatabaseNodeTagInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeTagArgs and NdbRegisterDatabaseDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeTagInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeTagArgs{...}
type NdbRegisterDatabaseDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput
	ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput
}

type NdbRegisterDatabaseDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeTagArgs) ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeTagArgs) ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeTagOutput)
}

// NdbRegisterDatabaseDatabaseNodeTagArrayInput is an input type that accepts NdbRegisterDatabaseDatabaseNodeTagArray and NdbRegisterDatabaseDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseDatabaseNodeTagArrayInput` via:
//
//	NdbRegisterDatabaseDatabaseNodeTagArray{ NdbRegisterDatabaseDatabaseNodeTagArgs{...} }
type NdbRegisterDatabaseDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput
	ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput
}

type NdbRegisterDatabaseDatabaseNodeTagArray []NdbRegisterDatabaseDatabaseNodeTagInput

func (NdbRegisterDatabaseDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseDatabaseNodeTagArray) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return i.ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseDatabaseNodeTagArray) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseDatabaseNodeTagArrayOutput)
}

type NdbRegisterDatabaseDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) ToNdbRegisterDatabaseDatabaseNodeTagOutput() NdbRegisterDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) ToNdbRegisterDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutput() NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) ToNdbRegisterDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseDatabaseNodeTag {
		return vs[0].([]NdbRegisterDatabaseDatabaseNodeTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseDatabaseNodeTagOutput)
}

type NdbRegisterDatabaseInfo struct {
	BpgConfigs []NdbRegisterDatabaseInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string                  `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseInfoInput is an input type that accepts NdbRegisterDatabaseInfoArgs and NdbRegisterDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoInput` via:
//
//	NdbRegisterDatabaseInfoArgs{...}
type NdbRegisterDatabaseInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput
	ToNdbRegisterDatabaseInfoOutputWithContext(context.Context) NdbRegisterDatabaseInfoOutput
}

type NdbRegisterDatabaseInfoArgs struct {
	BpgConfigs NdbRegisterDatabaseInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                      `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoArgs) ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput {
	return i.ToNdbRegisterDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoArgs) ToNdbRegisterDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoOutput)
}

// NdbRegisterDatabaseInfoArrayInput is an input type that accepts NdbRegisterDatabaseInfoArray and NdbRegisterDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoArrayInput` via:
//
//	NdbRegisterDatabaseInfoArray{ NdbRegisterDatabaseInfoArgs{...} }
type NdbRegisterDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput
	ToNdbRegisterDatabaseInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoArrayOutput
}

type NdbRegisterDatabaseInfoArray []NdbRegisterDatabaseInfoInput

func (NdbRegisterDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoArray) ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput {
	return i.ToNdbRegisterDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoArray) ToNdbRegisterDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoArrayOutput)
}

type NdbRegisterDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoOutput) ToNdbRegisterDatabaseInfoOutput() NdbRegisterDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseInfoOutput) ToNdbRegisterDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseInfoOutput) BpgConfigs() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfo) []NdbRegisterDatabaseInfoBpgConfig { return v.BpgConfigs }).(NdbRegisterDatabaseInfoBpgConfigArrayOutput)
}

func (o NdbRegisterDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoArrayOutput) ToNdbRegisterDatabaseInfoArrayOutput() NdbRegisterDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoArrayOutput) ToNdbRegisterDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfo {
		return vs[0].([]NdbRegisterDatabaseInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoOutput)
}

type NdbRegisterDatabaseInfoBpgConfig struct {
	BpgDbParams  []NdbRegisterDatabaseInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbRegisterDatabaseInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbRegisterDatabaseInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbRegisterDatabaseInfoBpgConfigInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigArgs and NdbRegisterDatabaseInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigArgs{...}
type NdbRegisterDatabaseInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput
	ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigOutput
}

type NdbRegisterDatabaseInfoBpgConfigArgs struct {
	BpgDbParams  NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbRegisterDatabaseInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbRegisterDatabaseInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigArgs) ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigArgs) ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigOutput)
}

// NdbRegisterDatabaseInfoBpgConfigArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigArray and NdbRegisterDatabaseInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigArray{ NdbRegisterDatabaseInfoBpgConfigArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigArray []NdbRegisterDatabaseInfoBpgConfigInput

func (NdbRegisterDatabaseInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigArray) ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigArray) ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) ToNdbRegisterDatabaseInfoBpgConfigOutput() NdbRegisterDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) ToNdbRegisterDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) BpgDbParams() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigBpgDbParam {
		return v.BpgDbParams
	}).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) Storages() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigStorage { return v.Storages }).(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigOutput) VmProperties() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfig) []NdbRegisterDatabaseInfoBpgConfigVmProperty {
		return v.VmProperties
	}).(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigArrayOutput() NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfig {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfig)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs and NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{...}
type NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput
	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput)
}

// NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray and NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray{ NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray []NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorage struct {
	ArchiveStorages []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbRegisterDatabaseInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbRegisterDatabaseInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArgs and NdbRegisterDatabaseInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArray and NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArray{ NdbRegisterDatabaseInfoBpgConfigStorageArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArray []NdbRegisterDatabaseInfoBpgConfigStorageInput

func (NdbRegisterDatabaseInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) ArchiveStorages() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) DataDisks() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageOutput) LogDisks() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorage) []NdbRegisterDatabaseInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorage {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs and NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray and NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray{ NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray []NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs and NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray and NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray{ NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray []NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs and NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{...}
type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput)
}

// NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray and NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray{ NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray []NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbRegisterDatabaseInfoBpgConfigVmPropertyInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs and NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigVmPropertyInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{...}
type NdbRegisterDatabaseInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput
	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput)
}

// NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbRegisterDatabaseInfoBpgConfigVmPropertyArray and NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbRegisterDatabaseInfoBpgConfigVmPropertyArray{ NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{...} }
type NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput
	ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArray []NdbRegisterDatabaseInfoBpgConfigVmPropertyInput

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseInfoBpgConfigVmPropertyArray) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseInfoBpgConfigVmProperty {
		return vs[0].([]NdbRegisterDatabaseInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput)
}

type NdbRegisterDatabaseLcmConfig struct {
	ExpiryDetails      []NdbRegisterDatabaseLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbRegisterDatabaseLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbRegisterDatabaseLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbRegisterDatabaseLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbRegisterDatabaseLcmConfigInput is an input type that accepts NdbRegisterDatabaseLcmConfigArgs and NdbRegisterDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigInput` via:
//
//	NdbRegisterDatabaseLcmConfigArgs{...}
type NdbRegisterDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput
	ToNdbRegisterDatabaseLcmConfigOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigOutput
}

type NdbRegisterDatabaseLcmConfigArgs struct {
	ExpiryDetails      NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbRegisterDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigArgs) ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput {
	return i.ToNdbRegisterDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigArgs) ToNdbRegisterDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigOutput)
}

// NdbRegisterDatabaseLcmConfigArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigArray and NdbRegisterDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigArray{ NdbRegisterDatabaseLcmConfigArgs{...} }
type NdbRegisterDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput
	ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigArrayOutput
}

type NdbRegisterDatabaseLcmConfigArray []NdbRegisterDatabaseLcmConfigInput

func (NdbRegisterDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigArray) ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigArray) ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigArrayOutput)
}

type NdbRegisterDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigOutput) ToNdbRegisterDatabaseLcmConfigOutput() NdbRegisterDatabaseLcmConfigOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigOutput) ToNdbRegisterDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigOutput) ExpiryDetails() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigExpiryDetail {
		return v.ExpiryDetails
	}).(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) PostDeleteCommands() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) PreDeleteCommands() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbRegisterDatabaseLcmConfigOutput) RefreshDetails() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfig) []NdbRegisterDatabaseLcmConfigRefreshDetail {
		return v.RefreshDetails
	}).(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) ToNdbRegisterDatabaseLcmConfigArrayOutput() NdbRegisterDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) ToNdbRegisterDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfig {
		return vs[0].([]NdbRegisterDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase *bool `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbRegisterDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbRegisterDatabaseLcmConfigExpiryDetailArgs and NdbRegisterDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbRegisterDatabaseLcmConfigExpiryDetailArgs{...}
type NdbRegisterDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput
	ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase pulumi.BoolPtrInput `pulumi:"deleteDatabase"`
	// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArgs) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigExpiryDetailOutput)
}

// NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigExpiryDetailArray and NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigExpiryDetailArray{ NdbRegisterDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArray []NdbRegisterDatabaseLcmConfigExpiryDetailInput

func (NdbRegisterDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArray) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigExpiryDetailArray) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutput() NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

// - (Optional) Delete the database's Time Machine (snapshots/logs) from the NDB. Default value is true
func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput() NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbRegisterDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigExpiryDetailOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbRegisterDatabaseLcmConfigPostDeleteCommandInput is an input type that accepts NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs and NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPostDeleteCommandInput` via:
//
//	NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{...}
type NdbRegisterDatabaseLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput
	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput)
}

// NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigPostDeleteCommandArray and NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigPostDeleteCommandArray{ NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{...} }
type NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput
	ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArray []NdbRegisterDatabaseLcmConfigPostDeleteCommandInput

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPostDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigPostDeleteCommand {
		return vs[0].([]NdbRegisterDatabaseLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbRegisterDatabaseLcmConfigPreDeleteCommandInput is an input type that accepts NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs and NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPreDeleteCommandInput` via:
//
//	NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{...}
type NdbRegisterDatabaseLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput
	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput)
}

// NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigPreDeleteCommandArray and NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigPreDeleteCommandArray{ NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{...} }
type NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput
	ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArray []NdbRegisterDatabaseLcmConfigPreDeleteCommandInput

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigPreDeleteCommandArray) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigPreDeleteCommand {
		return vs[0].([]NdbRegisterDatabaseLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbRegisterDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbRegisterDatabaseLcmConfigRefreshDetailArgs and NdbRegisterDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbRegisterDatabaseLcmConfigRefreshDetailArgs{...}
type NdbRegisterDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput
	ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArgs) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigRefreshDetailOutput)
}

// NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbRegisterDatabaseLcmConfigRefreshDetailArray and NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbRegisterDatabaseLcmConfigRefreshDetailArray{ NdbRegisterDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArray []NdbRegisterDatabaseLcmConfigRefreshDetailInput

func (NdbRegisterDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArray) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLcmConfigRefreshDetailArray) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutput() NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput() NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbRegisterDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbRegisterDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseLcmConfigRefreshDetailOutput)
}

type NdbRegisterDatabaseLinkedDatabase struct {
	// name of database
	DatabaseName *string `pulumi:"databaseName"`
	// status of database
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbRegisterDatabaseLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbRegisterDatabaseLinkedDatabaseInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseArgs and NdbRegisterDatabaseLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseArgs{...}
type NdbRegisterDatabaseLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput
	ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseOutput
}

type NdbRegisterDatabaseLinkedDatabaseArgs struct {
	// name of database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// status of database
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbRegisterDatabaseLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbRegisterDatabaseLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseArgs) ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseArgs) ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseOutput)
}

// NdbRegisterDatabaseLinkedDatabaseArrayInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseArray and NdbRegisterDatabaseLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseArrayInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseArray{ NdbRegisterDatabaseLinkedDatabaseArgs{...} }
type NdbRegisterDatabaseLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput
	ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput
}

type NdbRegisterDatabaseLinkedDatabaseArray []NdbRegisterDatabaseLinkedDatabaseInput

func (NdbRegisterDatabaseLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseArray) ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseArray) ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseArrayOutput)
}

type NdbRegisterDatabaseLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ToNdbRegisterDatabaseLinkedDatabaseOutput() NdbRegisterDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ToNdbRegisterDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// status of database
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Infos() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) []NdbRegisterDatabaseLinkedDatabaseInfo { return v.Infos }).(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbRegisterDatabaseLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbRegisterDatabaseLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseArrayOutput() NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLinkedDatabase {
		return vs[0].([]NdbRegisterDatabaseLinkedDatabase)[vs[1].(int)]
	}).(NdbRegisterDatabaseLinkedDatabaseOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbRegisterDatabaseLinkedDatabaseInfoInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseInfoArgs and NdbRegisterDatabaseLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInfoInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseInfoArgs{...}
type NdbRegisterDatabaseLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput
	ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput
}

type NdbRegisterDatabaseLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbRegisterDatabaseLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArgs) ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArgs) ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseInfoOutput)
}

// NdbRegisterDatabaseLinkedDatabaseInfoArrayInput is an input type that accepts NdbRegisterDatabaseLinkedDatabaseInfoArray and NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseLinkedDatabaseInfoArrayInput` via:
//
//	NdbRegisterDatabaseLinkedDatabaseInfoArray{ NdbRegisterDatabaseLinkedDatabaseInfoArgs{...} }
type NdbRegisterDatabaseLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput
	ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput
}

type NdbRegisterDatabaseLinkedDatabaseInfoArray []NdbRegisterDatabaseLinkedDatabaseInfoInput

func (NdbRegisterDatabaseLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArray) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return i.ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseLinkedDatabaseInfoArray) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoOutput() NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutput() NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) ToNdbRegisterDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseLinkedDatabaseInfo {
		return vs[0].([]NdbRegisterDatabaseLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbRegisterDatabaseLinkedDatabaseInfoOutput)
}

type NdbRegisterDatabasePostgressInfo struct {
	// allow multiple databases. Default is true
	AllowMultipleDatabases *bool `pulumi:"allowMultipleDatabases"`
	// backup policy of database. Default is prefer_secondary.
	BackupPolicy *string `pulumi:"backupPolicy"`
	// name of the database server VM on which the instance you want to register is running.
	DbName string `pulumi:"dbName"`
	// database password
	DbPassword string `pulumi:"dbPassword"`
	// username of the NDB drive user account that has sudo access.
	DbUser *string `pulumi:"dbUser"`
	// listner port of database
	ListenerPort string `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
	PostgresSoftwareHome string `pulumi:"postgresSoftwareHome"`
	// path to the directory in which the PostgreSQL software is installed.
	SoftwareHome *string `pulumi:"softwareHome"`
	// switch log of database. Default is true
	SwitchLog *bool `pulumi:"switchLog"`
	// VM IP of the database server VM on which the instance you want to register is running.
	VmIp *string `pulumi:"vmIp"`
}

// NdbRegisterDatabasePostgressInfoInput is an input type that accepts NdbRegisterDatabasePostgressInfoArgs and NdbRegisterDatabasePostgressInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePostgressInfoInput` via:
//
//	NdbRegisterDatabasePostgressInfoArgs{...}
type NdbRegisterDatabasePostgressInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput
	ToNdbRegisterDatabasePostgressInfoOutputWithContext(context.Context) NdbRegisterDatabasePostgressInfoOutput
}

type NdbRegisterDatabasePostgressInfoArgs struct {
	// allow multiple databases. Default is true
	AllowMultipleDatabases pulumi.BoolPtrInput `pulumi:"allowMultipleDatabases"`
	// backup policy of database. Default is prefer_secondary.
	BackupPolicy pulumi.StringPtrInput `pulumi:"backupPolicy"`
	// name of the database server VM on which the instance you want to register is running.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// database password
	DbPassword pulumi.StringInput `pulumi:"dbPassword"`
	// username of the NDB drive user account that has sudo access.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// listner port of database
	ListenerPort pulumi.StringInput `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
	PostgresSoftwareHome pulumi.StringInput `pulumi:"postgresSoftwareHome"`
	// path to the directory in which the PostgreSQL software is installed.
	SoftwareHome pulumi.StringPtrInput `pulumi:"softwareHome"`
	// switch log of database. Default is true
	SwitchLog pulumi.BoolPtrInput `pulumi:"switchLog"`
	// VM IP of the database server VM on which the instance you want to register is running.
	VmIp pulumi.StringPtrInput `pulumi:"vmIp"`
}

func (NdbRegisterDatabasePostgressInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (i NdbRegisterDatabasePostgressInfoArgs) ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput {
	return i.ToNdbRegisterDatabasePostgressInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePostgressInfoArgs) ToNdbRegisterDatabasePostgressInfoOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePostgressInfoOutput)
}

// NdbRegisterDatabasePostgressInfoArrayInput is an input type that accepts NdbRegisterDatabasePostgressInfoArray and NdbRegisterDatabasePostgressInfoArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePostgressInfoArrayInput` via:
//
//	NdbRegisterDatabasePostgressInfoArray{ NdbRegisterDatabasePostgressInfoArgs{...} }
type NdbRegisterDatabasePostgressInfoArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput
	ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(context.Context) NdbRegisterDatabasePostgressInfoArrayOutput
}

type NdbRegisterDatabasePostgressInfoArray []NdbRegisterDatabasePostgressInfoInput

func (NdbRegisterDatabasePostgressInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (i NdbRegisterDatabasePostgressInfoArray) ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput {
	return i.ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePostgressInfoArray) ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePostgressInfoArrayOutput)
}

type NdbRegisterDatabasePostgressInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePostgressInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (o NdbRegisterDatabasePostgressInfoOutput) ToNdbRegisterDatabasePostgressInfoOutput() NdbRegisterDatabasePostgressInfoOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoOutput) ToNdbRegisterDatabasePostgressInfoOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoOutput {
	return o
}

// allow multiple databases. Default is true
func (o NdbRegisterDatabasePostgressInfoOutput) AllowMultipleDatabases() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *bool { return v.AllowMultipleDatabases }).(pulumi.BoolPtrOutput)
}

// backup policy of database. Default is prefer_secondary.
func (o NdbRegisterDatabasePostgressInfoOutput) BackupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.BackupPolicy }).(pulumi.StringPtrOutput)
}

// name of the database server VM on which the instance you want to register is running.
func (o NdbRegisterDatabasePostgressInfoOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.DbName }).(pulumi.StringOutput)
}

// database password
func (o NdbRegisterDatabasePostgressInfoOutput) DbPassword() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.DbPassword }).(pulumi.StringOutput)
}

// username of the NDB drive user account that has sudo access.
func (o NdbRegisterDatabasePostgressInfoOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// listner port of database
func (o NdbRegisterDatabasePostgressInfoOutput) ListenerPort() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.ListenerPort }).(pulumi.StringOutput)
}

// path to the PostgreSQL home directory in which the PostgreSQL software is installed.
func (o NdbRegisterDatabasePostgressInfoOutput) PostgresSoftwareHome() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) string { return v.PostgresSoftwareHome }).(pulumi.StringOutput)
}

// path to the directory in which the PostgreSQL software is installed.
func (o NdbRegisterDatabasePostgressInfoOutput) SoftwareHome() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.SoftwareHome }).(pulumi.StringPtrOutput)
}

// switch log of database. Default is true
func (o NdbRegisterDatabasePostgressInfoOutput) SwitchLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *bool { return v.SwitchLog }).(pulumi.BoolPtrOutput)
}

// VM IP of the database server VM on which the instance you want to register is running.
func (o NdbRegisterDatabasePostgressInfoOutput) VmIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabasePostgressInfo) *string { return v.VmIp }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabasePostgressInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePostgressInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabasePostgressInfo)(nil)).Elem()
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) ToNdbRegisterDatabasePostgressInfoArrayOutput() NdbRegisterDatabasePostgressInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) ToNdbRegisterDatabasePostgressInfoArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePostgressInfoArrayOutput {
	return o
}

func (o NdbRegisterDatabasePostgressInfoArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabasePostgressInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabasePostgressInfo {
		return vs[0].([]NdbRegisterDatabasePostgressInfo)[vs[1].(int)]
	}).(NdbRegisterDatabasePostgressInfoOutput)
}

type NdbRegisterDatabaseProperty struct {
	// Name of database instance
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbRegisterDatabasePropertyInput is an input type that accepts NdbRegisterDatabasePropertyArgs and NdbRegisterDatabasePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePropertyInput` via:
//
//	NdbRegisterDatabasePropertyArgs{...}
type NdbRegisterDatabasePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput
	ToNdbRegisterDatabasePropertyOutputWithContext(context.Context) NdbRegisterDatabasePropertyOutput
}

type NdbRegisterDatabasePropertyArgs struct {
	// Name of database instance
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabasePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (i NdbRegisterDatabasePropertyArgs) ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput {
	return i.ToNdbRegisterDatabasePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePropertyArgs) ToNdbRegisterDatabasePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePropertyOutput)
}

// NdbRegisterDatabasePropertyArrayInput is an input type that accepts NdbRegisterDatabasePropertyArray and NdbRegisterDatabasePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabasePropertyArrayInput` via:
//
//	NdbRegisterDatabasePropertyArray{ NdbRegisterDatabasePropertyArgs{...} }
type NdbRegisterDatabasePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput
	ToNdbRegisterDatabasePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabasePropertyArrayOutput
}

type NdbRegisterDatabasePropertyArray []NdbRegisterDatabasePropertyInput

func (NdbRegisterDatabasePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (i NdbRegisterDatabasePropertyArray) ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput {
	return i.ToNdbRegisterDatabasePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabasePropertyArray) ToNdbRegisterDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabasePropertyArrayOutput)
}

type NdbRegisterDatabasePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (o NdbRegisterDatabasePropertyOutput) ToNdbRegisterDatabasePropertyOutput() NdbRegisterDatabasePropertyOutput {
	return o
}

func (o NdbRegisterDatabasePropertyOutput) ToNdbRegisterDatabasePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyOutput {
	return o
}

// Name of database instance
func (o NdbRegisterDatabasePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabasePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabasePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabasePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseProperty)(nil)).Elem()
}

func (o NdbRegisterDatabasePropertyArrayOutput) ToNdbRegisterDatabasePropertyArrayOutput() NdbRegisterDatabasePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabasePropertyArrayOutput) ToNdbRegisterDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabasePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabasePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabasePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseProperty {
		return vs[0].([]NdbRegisterDatabaseProperty)[vs[1].(int)]
	}).(NdbRegisterDatabasePropertyOutput)
}

type NdbRegisterDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDatabaseTagInput is an input type that accepts NdbRegisterDatabaseTagArgs and NdbRegisterDatabaseTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTagInput` via:
//
//	NdbRegisterDatabaseTagArgs{...}
type NdbRegisterDatabaseTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput
	ToNdbRegisterDatabaseTagOutputWithContext(context.Context) NdbRegisterDatabaseTagOutput
}

type NdbRegisterDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTagArgs) ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput {
	return i.ToNdbRegisterDatabaseTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTagArgs) ToNdbRegisterDatabaseTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTagOutput)
}

// NdbRegisterDatabaseTagArrayInput is an input type that accepts NdbRegisterDatabaseTagArray and NdbRegisterDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTagArrayInput` via:
//
//	NdbRegisterDatabaseTagArray{ NdbRegisterDatabaseTagArgs{...} }
type NdbRegisterDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput
	ToNdbRegisterDatabaseTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTagArrayOutput
}

type NdbRegisterDatabaseTagArray []NdbRegisterDatabaseTagInput

func (NdbRegisterDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTagArray) ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput {
	return i.ToNdbRegisterDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTagArray) ToNdbRegisterDatabaseTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTagArrayOutput)
}

type NdbRegisterDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTagOutput) ToNdbRegisterDatabaseTagOutput() NdbRegisterDatabaseTagOutput {
	return o
}

func (o NdbRegisterDatabaseTagOutput) ToNdbRegisterDatabaseTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagOutput {
	return o
}

func (o NdbRegisterDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTagArrayOutput) ToNdbRegisterDatabaseTagArrayOutput() NdbRegisterDatabaseTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTagArrayOutput) ToNdbRegisterDatabaseTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTag {
		return vs[0].([]NdbRegisterDatabaseTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTagOutput)
}

type NdbRegisterDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone  *bool   `pulumi:"clone"`
	Clones *string `pulumi:"clones"`
	// clustered or not. Default is false
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties          []NdbRegisterDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                                  `pulumi:"scheduleId"`
	Schedules           []NdbRegisterDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                                  `pulumi:"scope"`
	SlaId               *string                                  `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                    `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                                  `pulumi:"slaUpdateMetadata"`
	Slas                []NdbRegisterDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                                 `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// tags
	Tags []NdbRegisterDatabaseTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbRegisterDatabaseTimeMachineInput is an input type that accepts NdbRegisterDatabaseTimeMachineArgs and NdbRegisterDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInput` via:
//
//	NdbRegisterDatabaseTimeMachineArgs{...}
type NdbRegisterDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput
	ToNdbRegisterDatabaseTimeMachineOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineOutput
}

type NdbRegisterDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone  pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones pulumi.StringPtrInput `pulumi:"clones"`
	// clustered or not. Default is false
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties          NdbRegisterDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                            `pulumi:"scheduleId"`
	Schedules           NdbRegisterDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                            `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                            `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                              `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                            `pulumi:"slaUpdateMetadata"`
	Slas                NdbRegisterDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                          `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// tags
	Tags NdbRegisterDatabaseTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbRegisterDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineArgs) ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput {
	return i.ToNdbRegisterDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineArgs) ToNdbRegisterDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineOutput)
}

// NdbRegisterDatabaseTimeMachineArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineArray and NdbRegisterDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineArray{ NdbRegisterDatabaseTimeMachineArgs{...} }
type NdbRegisterDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput
	ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineArrayOutput
}

type NdbRegisterDatabaseTimeMachineArray []NdbRegisterDatabaseTimeMachineInput

func (NdbRegisterDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineArray) ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineArray) ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineArrayOutput)
}

type NdbRegisterDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineOutput) ToNdbRegisterDatabaseTimeMachineOutput() NdbRegisterDatabaseTimeMachineOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineOutput) ToNdbRegisterDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbRegisterDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

// clustered or not. Default is false
func (o NdbRegisterDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbRegisterDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbRegisterDatabaseTimeMachineOutput) Properties() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineProperty { return v.Properties }).(NdbRegisterDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Schedules() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineSchedule { return v.Schedules }).(NdbRegisterDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) Slas() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineSla { return v.Slas }).(NdbRegisterDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbRegisterDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// tags
func (o NdbRegisterDatabaseTimeMachineOutput) Tags() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) []NdbRegisterDatabaseTimeMachineTag { return v.Tags }).(NdbRegisterDatabaseTimeMachineTagArrayOutput)
}

// type of database
func (o NdbRegisterDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) ToNdbRegisterDatabaseTimeMachineArrayOutput() NdbRegisterDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) ToNdbRegisterDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachine {
		return vs[0].([]NdbRegisterDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineOutput)
}

type NdbRegisterDatabaseTimeMachineInfo struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive *bool `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description *string `pulumi:"description"`
	// - (Required) name of time machine
	Name string `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbRegisterDatabaseTimeMachineInfoSchedule `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails []NdbRegisterDatabaseTimeMachineInfoSlaDetail `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid *string `pulumi:"slaid"`
	// - (Optional) tags
	Tags []NdbRegisterDatabaseTimeMachineInfoTag `pulumi:"tags"`
}

// NdbRegisterDatabaseTimeMachineInfoInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoArgs and NdbRegisterDatabaseTimeMachineInfoOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoArgs{...}
type NdbRegisterDatabaseTimeMachineInfoInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput
	ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoOutput
}

type NdbRegisterDatabaseTimeMachineInfoArgs struct {
	// - (Optional) enable auto tune log drive. Default: true
	Autotunelogdrive pulumi.BoolPtrInput `pulumi:"autotunelogdrive"`
	// - (Optional) description of time machine
	Description pulumi.StringPtrInput `pulumi:"description"`
	// - (Required) name of time machine
	Name pulumi.StringInput `pulumi:"name"`
	// - (Optional) schedule for snapshots
	Schedule NdbRegisterDatabaseTimeMachineInfoScheduleInput `pulumi:"schedule"`
	// -  (optional) SLA details for HA instance
	SlaDetails NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput `pulumi:"slaDetails"`
	// - (Optional) SLA ID for single instance
	Slaid pulumi.StringPtrInput `pulumi:"slaid"`
	// - (Optional) tags
	Tags NdbRegisterDatabaseTimeMachineInfoTagArrayInput `pulumi:"tags"`
}

func (NdbRegisterDatabaseTimeMachineInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoArgs) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoOutput).ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoPtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoArgs, NdbRegisterDatabaseTimeMachineInfoPtr and NdbRegisterDatabaseTimeMachineInfoPtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoPtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoPtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoPtrType NdbRegisterDatabaseTimeMachineInfoArgs

func NdbRegisterDatabaseTimeMachineInfoPtr(v *NdbRegisterDatabaseTimeMachineInfoArgs) NdbRegisterDatabaseTimeMachineInfoPtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoPtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoPtrType) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoPtrType) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoOutput() NdbRegisterDatabaseTimeMachineInfoOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfo) *NdbRegisterDatabaseTimeMachineInfo {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoPtrOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *bool { return v.Autotunelogdrive }).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) string { return v.Name }).(pulumi.StringOutput)
}

// - (Optional) schedule for snapshots
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Schedule() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) NdbRegisterDatabaseTimeMachineInfoSchedule {
		return v.Schedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbRegisterDatabaseTimeMachineInfoOutput) SlaDetails() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		return v.SlaDetails
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) *string { return v.Slaid }).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbRegisterDatabaseTimeMachineInfoOutput) Tags() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoTag { return v.Tags }).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoPtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfo)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutput() NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) NdbRegisterDatabaseTimeMachineInfo {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfo
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoOutput)
}

// - (Optional) enable auto tune log drive. Default: true
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Autotunelogdrive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Autotunelogdrive
	}).(pulumi.BoolPtrOutput)
}

// - (Optional) description of time machine
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// - (Required) name of time machine
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// - (Optional) schedule for snapshots
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Schedule() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *NdbRegisterDatabaseTimeMachineInfoSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

// -  (optional) SLA details for HA instance
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) SlaDetails() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		if v == nil {
			return nil
		}
		return v.SlaDetails
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

// - (Optional) SLA ID for single instance
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Slaid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) *string {
		if v == nil {
			return nil
		}
		return v.Slaid
	}).(pulumi.StringPtrOutput)
}

// - (Optional) tags
func (o NdbRegisterDatabaseTimeMachineInfoPtrOutput) Tags() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfo) []NdbRegisterDatabaseTimeMachineInfoTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSchedule struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule `pulumi:"yearlyschedule"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleArgs struct {
	// - (Optional) snapshot freq and log config
	Continuousschedule NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput `pulumi:"continuousschedule"`
	// - (Optional) monthly snapshot config
	Monthlyschedule NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput `pulumi:"monthlyschedule"`
	// - (Optional) quaterly snapshot config
	Quartelyschedule NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput `pulumi:"quartelyschedule"`
	// - (Optional) daily snapshot config
	Snapshottimeofday NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput `pulumi:"snapshottimeofday"`
	// - (Optional) weekly snapshot config
	Weeklyschedule NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput `pulumi:"weeklyschedule"`
	// - (Optional) yearly snapshot config
	Yearlyschedule NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput `pulumi:"yearlyschedule"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleArgs, NdbRegisterDatabaseTimeMachineInfoSchedulePtr and NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoSchedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleArgs

func NdbRegisterDatabaseTimeMachineInfoSchedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleArgs) NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoSchedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoSchedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoSchedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Continuousschedule() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		return v.Continuousschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Monthlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		return v.Monthlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Quartelyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		return v.Quartelyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Snapshottimeofday() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		return v.Snapshottimeofday
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Weeklyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		return v.Weeklyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoScheduleOutput) Yearlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		return v.Yearlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoSchedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) NdbRegisterDatabaseTimeMachineInfoSchedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoSchedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleOutput)
}

// - (Optional) snapshot freq and log config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Continuousschedule() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		if v == nil {
			return nil
		}
		return v.Continuousschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

// - (Optional) monthly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Monthlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		if v == nil {
			return nil
		}
		return v.Monthlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

// - (Optional) quaterly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Quartelyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		if v == nil {
			return nil
		}
		return v.Quartelyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

// - (Optional) daily snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Snapshottimeofday() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		if v == nil {
			return nil
		}
		return v.Snapshottimeofday
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

// - (Optional) weekly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Weeklyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		if v == nil {
			return nil
		}
		return v.Weeklyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

// - (Optional) yearly snapshot config
func (o NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput) Yearlyschedule() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoSchedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		if v == nil {
			return nil
		}
		return v.Yearlyschedule
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule struct {
	Enabled           bool `pulumi:"enabled"`
	Logbackupinterval int  `pulumi:"logbackupinterval"`
	Snapshotsperday   int  `pulumi:"snapshotsperday"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs struct {
	Enabled           pulumi.BoolInput `pulumi:"enabled"`
	Logbackupinterval pulumi.IntInput  `pulumi:"logbackupinterval"`
	Snapshotsperday   pulumi.IntInput  `pulumi:"snapshotsperday"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Logbackupinterval() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) int { return v.Logbackupinterval }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput) Snapshotsperday() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) int { return v.Snapshotsperday }).(pulumi.IntOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Logbackupinterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Logbackupinterval
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput) Snapshotsperday() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Snapshotsperday
	}).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule struct {
	Dayofmonth int  `pulumi:"dayofmonth"`
	Enabled    bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs struct {
	Dayofmonth pulumi.IntInput  `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule struct {
	Dayofmonth int    `pulumi:"dayofmonth"`
	Enabled    bool   `pulumi:"enabled"`
	Startmonth string `pulumi:"startmonth"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs struct {
	Dayofmonth pulumi.IntInput    `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput   `pulumi:"enabled"`
	Startmonth pulumi.StringInput `pulumi:"startmonth"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput) Startmonth() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) string { return v.Startmonth }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput) Startmonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Startmonth
	}).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday struct {
	Hours   int `pulumi:"hours"`
	Minutes int `pulumi:"minutes"`
	Seconds int `pulumi:"seconds"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs and NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs struct {
	Hours   pulumi.IntInput `pulumi:"hours"`
	Minutes pulumi.IntInput `pulumi:"minutes"`
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs, NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtr and NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Hours }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Minutes }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) int { return v.Seconds }).(pulumi.IntOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofday) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule struct {
	Dayofweek string `pulumi:"dayofweek"`
	Enabled   bool   `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs struct {
	Dayofweek pulumi.StringInput `pulumi:"dayofweek"`
	Enabled   pulumi.BoolInput   `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) Dayofweek() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) string { return v.Dayofweek }).(pulumi.StringOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Dayofweek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Dayofweek
	}).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule struct {
	Dayofmonth int    `pulumi:"dayofmonth"`
	Enabled    bool   `pulumi:"enabled"`
	Month      string `pulumi:"month"`
}

// NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs and NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{...}
type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs struct {
	Dayofmonth pulumi.IntInput    `pulumi:"dayofmonth"`
	Enabled    pulumi.BoolInput   `pulumi:"enabled"`
	Month      pulumi.StringInput `pulumi:"month"`
}

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput)
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput).ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx)
}

// NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs, NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtr and NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput` via:
//
//	        NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{...}
//
//	or:
//
//	        nil
type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput
	ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput
}

type ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs

func NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtr(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput {
	return (*ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType)(v)
}

func (*ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (i *ndbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrType) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(context.Background())
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		return &v
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Dayofmonth() pulumi.IntOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) int { return v.Dayofmonth }).(pulumi.IntOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) string { return v.Month }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) ToNdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Elem() NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule {
		if v != nil {
			return *v
		}
		var ret NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule
		return ret
	}).(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Dayofmonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *int {
		if v == nil {
			return nil
		}
		return &v.Dayofmonth
	}).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedule) *string {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetail struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla `pulumi:"primarySlas"`
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs and NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{...}
type NdbRegisterDatabaseTimeMachineInfoSlaDetailInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs struct {
	// - (Required) primary sla details
	// * `primary_sla.sla_id` :- (Required) sla id
	// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
	PrimarySlas NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput `pulumi:"primarySlas"`
}

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput)
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailArray and NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailArray{ NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArray []NdbRegisterDatabaseTimeMachineInfoSlaDetailInput

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return o
}

// - (Required) primary sla details
// * `primary_sla.sla_id` :- (Required) sla id
// * `primary_sla.nx_cluster_ids` -: (Optioanl) cluster ids
func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput) PrimarySlas() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetail) []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla {
		return v.PrimarySlas
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetail)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoSlaDetail {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoSlaDetail)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla struct {
	NxClusterIds []string `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId string `pulumi:"slaId"`
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs and NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{...}
type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs struct {
	NxClusterIds pulumi.StringArrayInput `pulumi:"nxClusterIds"`
	// description of SLA ID.
	SlaId pulumi.StringInput `pulumi:"slaId"`
}

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput)
}

// NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray and NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray{ NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray []NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) NxClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla) []string { return v.NxClusterIds }).(pulumi.StringArrayOutput)
}

// description of SLA ID.
func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput) SlaId() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla) string { return v.SlaId }).(pulumi.StringOutput)
}

type NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput() NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySla)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachineInfoTagInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoTagArgs and NdbRegisterDatabaseTimeMachineInfoTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoTagInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoTagArgs{...}
type NdbRegisterDatabaseTimeMachineInfoTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput
	ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput
}

type NdbRegisterDatabaseTimeMachineInfoTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachineInfoTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArgs) ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArgs) ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoTagOutput)
}

// NdbRegisterDatabaseTimeMachineInfoTagArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineInfoTagArray and NdbRegisterDatabaseTimeMachineInfoTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineInfoTagArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineInfoTagArray{ NdbRegisterDatabaseTimeMachineInfoTagArgs{...} }
type NdbRegisterDatabaseTimeMachineInfoTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput
	ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput
}

type NdbRegisterDatabaseTimeMachineInfoTagArray []NdbRegisterDatabaseTimeMachineInfoTagInput

func (NdbRegisterDatabaseTimeMachineInfoTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArray) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineInfoTagArray) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) ToNdbRegisterDatabaseTimeMachineInfoTagOutput() NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) ToNdbRegisterDatabaseTimeMachineInfoTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineInfoTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineInfoTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineInfoTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineInfoTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutput() NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) ToNdbRegisterDatabaseTimeMachineInfoTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineInfoTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineInfoTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineInfoTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineInfoTag {
		return vs[0].([]NdbRegisterDatabaseTimeMachineInfoTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineInfoTagOutput)
}

type NdbRegisterDatabaseTimeMachineProperty struct {
	// description
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachinePropertyInput is an input type that accepts NdbRegisterDatabaseTimeMachinePropertyArgs and NdbRegisterDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachinePropertyInput` via:
//
//	NdbRegisterDatabaseTimeMachinePropertyArgs{...}
type NdbRegisterDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput
	ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput
}

type NdbRegisterDatabaseTimeMachinePropertyArgs struct {
	// description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachinePropertyArgs) ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput {
	return i.ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachinePropertyArgs) ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachinePropertyOutput)
}

// NdbRegisterDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachinePropertyArray and NdbRegisterDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachinePropertyArray{ NdbRegisterDatabaseTimeMachinePropertyArgs{...} }
type NdbRegisterDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput
	ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput
}

type NdbRegisterDatabaseTimeMachinePropertyArray []NdbRegisterDatabaseTimeMachinePropertyInput

func (NdbRegisterDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachinePropertyArray) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachinePropertyArray) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachinePropertyArrayOutput)
}

type NdbRegisterDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) ToNdbRegisterDatabaseTimeMachinePropertyOutput() NdbRegisterDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) ToNdbRegisterDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return o
}

// description
func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutput() NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) ToNdbRegisterDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineProperty {
		return vs[0].([]NdbRegisterDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachinePropertyOutput)
}

type NdbRegisterDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbRegisterDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description      *string                                                 `pulumi:"description"`
	GlobalPolicy     *bool                                                   `pulumi:"globalPolicy"`
	Id               *string                                                 `pulumi:"id"`
	MonthlySchedules []NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                   `pulumi:"name"`
	OwnerId            *string                                                   `pulumi:"ownerId"`
	QuartelySchedules  []NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                      `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                   `pulumi:"startTime"`
	SystemPolicy       *bool                                                     `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                                `pulumi:"timeZone"`
	UniqueName      *string                                                `pulumi:"uniqueName"`
	WeeklySchedules []NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbRegisterDatabaseTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbRegisterDatabaseTimeMachineScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description      pulumi.StringPtrInput                                           `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                             `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                           `pulumi:"id"`
	MonthlySchedules NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                             `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                             `pulumi:"ownerId"`
	QuartelySchedules  NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                                `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                             `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                               `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                          `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                          `pulumi:"uniqueName"`
	WeeklySchedules NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbRegisterDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleArray and NdbRegisterDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleArray []NdbRegisterDatabaseTimeMachineScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DailySchedules() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbRegisterDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSchedule) []NdbRegisterDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineSchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray and NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray []NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray and NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray []NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbRegisterDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbRegisterDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbRegisterDatabaseTimeMachineSlaInput is an input type that accepts NdbRegisterDatabaseTimeMachineSlaArgs and NdbRegisterDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineSlaInput` via:
//
//	NdbRegisterDatabaseTimeMachineSlaArgs{...}
type NdbRegisterDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput
	ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineSlaOutput
}

type NdbRegisterDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbRegisterDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineSlaArgs) ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput {
	return i.ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineSlaArgs) ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineSlaOutput)
}

// NdbRegisterDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineSlaArray and NdbRegisterDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineSlaArray{ NdbRegisterDatabaseTimeMachineSlaArgs{...} }
type NdbRegisterDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput
	ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput
}

type NdbRegisterDatabaseTimeMachineSlaArray []NdbRegisterDatabaseTimeMachineSlaInput

func (NdbRegisterDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineSlaArray) ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineSlaArray) ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineSlaArrayOutput)
}

type NdbRegisterDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ToNdbRegisterDatabaseTimeMachineSlaOutput() NdbRegisterDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ToNdbRegisterDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description
func (o NdbRegisterDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbRegisterDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbRegisterDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) ToNdbRegisterDatabaseTimeMachineSlaArrayOutput() NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) ToNdbRegisterDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineSla {
		return vs[0].([]NdbRegisterDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineSlaOutput)
}

type NdbRegisterDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDatabaseTimeMachineTagInput is an input type that accepts NdbRegisterDatabaseTimeMachineTagArgs and NdbRegisterDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineTagInput` via:
//
//	NdbRegisterDatabaseTimeMachineTagArgs{...}
type NdbRegisterDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput
	ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineTagOutput
}

type NdbRegisterDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineTagArgs) ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput {
	return i.ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineTagArgs) ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineTagOutput)
}

// NdbRegisterDatabaseTimeMachineTagArrayInput is an input type that accepts NdbRegisterDatabaseTimeMachineTagArray and NdbRegisterDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDatabaseTimeMachineTagArrayInput` via:
//
//	NdbRegisterDatabaseTimeMachineTagArray{ NdbRegisterDatabaseTimeMachineTagArgs{...} }
type NdbRegisterDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput
	ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput
}

type NdbRegisterDatabaseTimeMachineTagArray []NdbRegisterDatabaseTimeMachineTagInput

func (NdbRegisterDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbRegisterDatabaseTimeMachineTagArray) ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDatabaseTimeMachineTagArray) ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDatabaseTimeMachineTagArrayOutput)
}

type NdbRegisterDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) ToNdbRegisterDatabaseTimeMachineTagOutput() NdbRegisterDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) ToNdbRegisterDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) ToNdbRegisterDatabaseTimeMachineTagArrayOutput() NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) ToNdbRegisterDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbRegisterDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbRegisterDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDatabaseTimeMachineTag {
		return vs[0].([]NdbRegisterDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbRegisterDatabaseTimeMachineTagOutput)
}

type NdbRegisterDbserverCredential struct {
	Label *string `pulumi:"label"`
	// password of the NDB drive user account. Conflicts with ssh_key.
	Password string `pulumi:"password"`
	// username of the NDB drive user account that has sudo access
	Username string `pulumi:"username"`
}

// NdbRegisterDbserverCredentialInput is an input type that accepts NdbRegisterDbserverCredentialArgs and NdbRegisterDbserverCredentialOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverCredentialInput` via:
//
//	NdbRegisterDbserverCredentialArgs{...}
type NdbRegisterDbserverCredentialInput interface {
	pulumi.Input

	ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput
	ToNdbRegisterDbserverCredentialOutputWithContext(context.Context) NdbRegisterDbserverCredentialOutput
}

type NdbRegisterDbserverCredentialArgs struct {
	Label pulumi.StringPtrInput `pulumi:"label"`
	// password of the NDB drive user account. Conflicts with ssh_key.
	Password pulumi.StringInput `pulumi:"password"`
	// username of the NDB drive user account that has sudo access
	Username pulumi.StringInput `pulumi:"username"`
}

func (NdbRegisterDbserverCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverCredential)(nil)).Elem()
}

func (i NdbRegisterDbserverCredentialArgs) ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput {
	return i.ToNdbRegisterDbserverCredentialOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverCredentialArgs) ToNdbRegisterDbserverCredentialOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverCredentialOutput)
}

// NdbRegisterDbserverCredentialArrayInput is an input type that accepts NdbRegisterDbserverCredentialArray and NdbRegisterDbserverCredentialArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverCredentialArrayInput` via:
//
//	NdbRegisterDbserverCredentialArray{ NdbRegisterDbserverCredentialArgs{...} }
type NdbRegisterDbserverCredentialArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput
	ToNdbRegisterDbserverCredentialArrayOutputWithContext(context.Context) NdbRegisterDbserverCredentialArrayOutput
}

type NdbRegisterDbserverCredentialArray []NdbRegisterDbserverCredentialInput

func (NdbRegisterDbserverCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverCredential)(nil)).Elem()
}

func (i NdbRegisterDbserverCredentialArray) ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput {
	return i.ToNdbRegisterDbserverCredentialArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverCredentialArray) ToNdbRegisterDbserverCredentialArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverCredentialArrayOutput)
}

type NdbRegisterDbserverCredentialOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverCredential)(nil)).Elem()
}

func (o NdbRegisterDbserverCredentialOutput) ToNdbRegisterDbserverCredentialOutput() NdbRegisterDbserverCredentialOutput {
	return o
}

func (o NdbRegisterDbserverCredentialOutput) ToNdbRegisterDbserverCredentialOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialOutput {
	return o
}

func (o NdbRegisterDbserverCredentialOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// password of the NDB drive user account. Conflicts with ssh_key.
func (o NdbRegisterDbserverCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) string { return v.Password }).(pulumi.StringOutput)
}

// username of the NDB drive user account that has sudo access
func (o NdbRegisterDbserverCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NdbRegisterDbserverCredential) string { return v.Username }).(pulumi.StringOutput)
}

type NdbRegisterDbserverCredentialArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverCredential)(nil)).Elem()
}

func (o NdbRegisterDbserverCredentialArrayOutput) ToNdbRegisterDbserverCredentialArrayOutput() NdbRegisterDbserverCredentialArrayOutput {
	return o
}

func (o NdbRegisterDbserverCredentialArrayOutput) ToNdbRegisterDbserverCredentialArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverCredentialArrayOutput {
	return o
}

func (o NdbRegisterDbserverCredentialArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverCredential {
		return vs[0].([]NdbRegisterDbserverCredential)[vs[1].(int)]
	}).(NdbRegisterDbserverCredentialOutput)
}

type NdbRegisterDbserverPostgresDatabase struct {
	// listener port of db server
	ListenerPort *string `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed
	PostgresSoftwareHome *string `pulumi:"postgresSoftwareHome"`
}

// NdbRegisterDbserverPostgresDatabaseInput is an input type that accepts NdbRegisterDbserverPostgresDatabaseArgs and NdbRegisterDbserverPostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPostgresDatabaseInput` via:
//
//	NdbRegisterDbserverPostgresDatabaseArgs{...}
type NdbRegisterDbserverPostgresDatabaseInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput
	ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(context.Context) NdbRegisterDbserverPostgresDatabaseOutput
}

type NdbRegisterDbserverPostgresDatabaseArgs struct {
	// listener port of db server
	ListenerPort pulumi.StringPtrInput `pulumi:"listenerPort"`
	// path to the PostgreSQL home directory in which the PostgreSQL software is installed
	PostgresSoftwareHome pulumi.StringPtrInput `pulumi:"postgresSoftwareHome"`
}

func (NdbRegisterDbserverPostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (i NdbRegisterDbserverPostgresDatabaseArgs) ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput {
	return i.ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPostgresDatabaseArgs) ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPostgresDatabaseOutput)
}

// NdbRegisterDbserverPostgresDatabaseArrayInput is an input type that accepts NdbRegisterDbserverPostgresDatabaseArray and NdbRegisterDbserverPostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPostgresDatabaseArrayInput` via:
//
//	NdbRegisterDbserverPostgresDatabaseArray{ NdbRegisterDbserverPostgresDatabaseArgs{...} }
type NdbRegisterDbserverPostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput
	ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput
}

type NdbRegisterDbserverPostgresDatabaseArray []NdbRegisterDbserverPostgresDatabaseInput

func (NdbRegisterDbserverPostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (i NdbRegisterDbserverPostgresDatabaseArray) ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return i.ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPostgresDatabaseArray) ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPostgresDatabaseArrayOutput)
}

type NdbRegisterDbserverPostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (o NdbRegisterDbserverPostgresDatabaseOutput) ToNdbRegisterDbserverPostgresDatabaseOutput() NdbRegisterDbserverPostgresDatabaseOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseOutput) ToNdbRegisterDbserverPostgresDatabaseOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseOutput {
	return o
}

// listener port of db server
func (o NdbRegisterDbserverPostgresDatabaseOutput) ListenerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverPostgresDatabase) *string { return v.ListenerPort }).(pulumi.StringPtrOutput)
}

// path to the PostgreSQL home directory in which the PostgreSQL software is installed
func (o NdbRegisterDbserverPostgresDatabaseOutput) PostgresSoftwareHome() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverPostgresDatabase) *string { return v.PostgresSoftwareHome }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverPostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverPostgresDatabase)(nil)).Elem()
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) ToNdbRegisterDbserverPostgresDatabaseArrayOutput() NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) ToNdbRegisterDbserverPostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPostgresDatabaseArrayOutput {
	return o
}

func (o NdbRegisterDbserverPostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverPostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverPostgresDatabase {
		return vs[0].([]NdbRegisterDbserverPostgresDatabase)[vs[1].(int)]
	}).(NdbRegisterDbserverPostgresDatabaseOutput)
}

type NdbRegisterDbserverProperty struct {
	// Name of db server vm. Should be used in Update Method only.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbRegisterDbserverPropertyInput is an input type that accepts NdbRegisterDbserverPropertyArgs and NdbRegisterDbserverPropertyOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPropertyInput` via:
//
//	NdbRegisterDbserverPropertyArgs{...}
type NdbRegisterDbserverPropertyInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput
	ToNdbRegisterDbserverPropertyOutputWithContext(context.Context) NdbRegisterDbserverPropertyOutput
}

type NdbRegisterDbserverPropertyArgs struct {
	// Name of db server vm. Should be used in Update Method only.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDbserverPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverProperty)(nil)).Elem()
}

func (i NdbRegisterDbserverPropertyArgs) ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput {
	return i.ToNdbRegisterDbserverPropertyOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPropertyArgs) ToNdbRegisterDbserverPropertyOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPropertyOutput)
}

// NdbRegisterDbserverPropertyArrayInput is an input type that accepts NdbRegisterDbserverPropertyArray and NdbRegisterDbserverPropertyArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverPropertyArrayInput` via:
//
//	NdbRegisterDbserverPropertyArray{ NdbRegisterDbserverPropertyArgs{...} }
type NdbRegisterDbserverPropertyArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput
	ToNdbRegisterDbserverPropertyArrayOutputWithContext(context.Context) NdbRegisterDbserverPropertyArrayOutput
}

type NdbRegisterDbserverPropertyArray []NdbRegisterDbserverPropertyInput

func (NdbRegisterDbserverPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverProperty)(nil)).Elem()
}

func (i NdbRegisterDbserverPropertyArray) ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput {
	return i.ToNdbRegisterDbserverPropertyArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverPropertyArray) ToNdbRegisterDbserverPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverPropertyArrayOutput)
}

type NdbRegisterDbserverPropertyOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverProperty)(nil)).Elem()
}

func (o NdbRegisterDbserverPropertyOutput) ToNdbRegisterDbserverPropertyOutput() NdbRegisterDbserverPropertyOutput {
	return o
}

func (o NdbRegisterDbserverPropertyOutput) ToNdbRegisterDbserverPropertyOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyOutput {
	return o
}

// Name of db server vm. Should be used in Update Method only.
func (o NdbRegisterDbserverPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverProperty)(nil)).Elem()
}

func (o NdbRegisterDbserverPropertyArrayOutput) ToNdbRegisterDbserverPropertyArrayOutput() NdbRegisterDbserverPropertyArrayOutput {
	return o
}

func (o NdbRegisterDbserverPropertyArrayOutput) ToNdbRegisterDbserverPropertyArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverPropertyArrayOutput {
	return o
}

func (o NdbRegisterDbserverPropertyArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverProperty {
		return vs[0].([]NdbRegisterDbserverProperty)[vs[1].(int)]
	}).(NdbRegisterDbserverPropertyOutput)
}

type NdbRegisterDbserverTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbRegisterDbserverTagInput is an input type that accepts NdbRegisterDbserverTagArgs and NdbRegisterDbserverTagOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverTagInput` via:
//
//	NdbRegisterDbserverTagArgs{...}
type NdbRegisterDbserverTagInput interface {
	pulumi.Input

	ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput
	ToNdbRegisterDbserverTagOutputWithContext(context.Context) NdbRegisterDbserverTagOutput
}

type NdbRegisterDbserverTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbRegisterDbserverTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverTag)(nil)).Elem()
}

func (i NdbRegisterDbserverTagArgs) ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput {
	return i.ToNdbRegisterDbserverTagOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverTagArgs) ToNdbRegisterDbserverTagOutputWithContext(ctx context.Context) NdbRegisterDbserverTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverTagOutput)
}

// NdbRegisterDbserverTagArrayInput is an input type that accepts NdbRegisterDbserverTagArray and NdbRegisterDbserverTagArrayOutput values.
// You can construct a concrete instance of `NdbRegisterDbserverTagArrayInput` via:
//
//	NdbRegisterDbserverTagArray{ NdbRegisterDbserverTagArgs{...} }
type NdbRegisterDbserverTagArrayInput interface {
	pulumi.Input

	ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput
	ToNdbRegisterDbserverTagArrayOutputWithContext(context.Context) NdbRegisterDbserverTagArrayOutput
}

type NdbRegisterDbserverTagArray []NdbRegisterDbserverTagInput

func (NdbRegisterDbserverTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverTag)(nil)).Elem()
}

func (i NdbRegisterDbserverTagArray) ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput {
	return i.ToNdbRegisterDbserverTagArrayOutputWithContext(context.Background())
}

func (i NdbRegisterDbserverTagArray) ToNdbRegisterDbserverTagArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbRegisterDbserverTagArrayOutput)
}

type NdbRegisterDbserverTagOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbRegisterDbserverTag)(nil)).Elem()
}

func (o NdbRegisterDbserverTagOutput) ToNdbRegisterDbserverTagOutput() NdbRegisterDbserverTagOutput {
	return o
}

func (o NdbRegisterDbserverTagOutput) ToNdbRegisterDbserverTagOutputWithContext(ctx context.Context) NdbRegisterDbserverTagOutput {
	return o
}

func (o NdbRegisterDbserverTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbRegisterDbserverTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbRegisterDbserverTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbRegisterDbserverTagArrayOutput struct{ *pulumi.OutputState }

func (NdbRegisterDbserverTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbRegisterDbserverTag)(nil)).Elem()
}

func (o NdbRegisterDbserverTagArrayOutput) ToNdbRegisterDbserverTagArrayOutput() NdbRegisterDbserverTagArrayOutput {
	return o
}

func (o NdbRegisterDbserverTagArrayOutput) ToNdbRegisterDbserverTagArrayOutputWithContext(ctx context.Context) NdbRegisterDbserverTagArrayOutput {
	return o
}

func (o NdbRegisterDbserverTagArrayOutput) Index(i pulumi.IntInput) NdbRegisterDbserverTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbRegisterDbserverTag {
		return vs[0].([]NdbRegisterDbserverTag)[vs[1].(int)]
	}).(NdbRegisterDbserverTagOutput)
}

type NdbScaleDatabaseDatabaseNode struct {
	AccessLevel    map[string]string `pulumi:"accessLevel"`
	DatabaseId     *string           `pulumi:"databaseId"`
	DatabaseStatus *string           `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string           `pulumi:"dateModified"`
	Dbserver     map[string]string `pulumi:"dbserver"`
	DbserverId   *string           `pulumi:"dbserverId"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbScaleDatabaseDatabaseNodeInfo `pulumi:"infos"`
	// Name of database instance
	Name    *string `pulumi:"name"`
	Primary *bool   `pulumi:"primary"`
	// properties of database created
	Properties             []NdbScaleDatabaseDatabaseNodeProperty         `pulumi:"properties"`
	ProtectionDomainId     *string                                        `pulumi:"protectionDomainId"`
	ProtectionDomains      []NdbScaleDatabaseDatabaseNodeProtectionDomain `pulumi:"protectionDomains"`
	SoftwareInstallationId *string                                        `pulumi:"softwareInstallationId"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbScaleDatabaseDatabaseNodeTag `pulumi:"tags"`
}

// NdbScaleDatabaseDatabaseNodeInput is an input type that accepts NdbScaleDatabaseDatabaseNodeArgs and NdbScaleDatabaseDatabaseNodeOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInput` via:
//
//	NdbScaleDatabaseDatabaseNodeArgs{...}
type NdbScaleDatabaseDatabaseNodeInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput
	ToNdbScaleDatabaseDatabaseNodeOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeOutput
}

type NdbScaleDatabaseDatabaseNodeArgs struct {
	AccessLevel    pulumi.StringMapInput `pulumi:"accessLevel"`
	DatabaseId     pulumi.StringPtrInput `pulumi:"databaseId"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	Dbserver     pulumi.StringMapInput `pulumi:"dbserver"`
	DbserverId   pulumi.StringPtrInput `pulumi:"dbserverId"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbScaleDatabaseDatabaseNodeInfoArrayInput `pulumi:"infos"`
	// Name of database instance
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Primary pulumi.BoolPtrInput   `pulumi:"primary"`
	// properties of database created
	Properties             NdbScaleDatabaseDatabaseNodePropertyArrayInput         `pulumi:"properties"`
	ProtectionDomainId     pulumi.StringPtrInput                                  `pulumi:"protectionDomainId"`
	ProtectionDomains      NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput `pulumi:"protectionDomains"`
	SoftwareInstallationId pulumi.StringPtrInput                                  `pulumi:"softwareInstallationId"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbScaleDatabaseDatabaseNodeTagArrayInput `pulumi:"tags"`
}

func (NdbScaleDatabaseDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeArgs) ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeArgs) ToNdbScaleDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeOutput)
}

// NdbScaleDatabaseDatabaseNodeArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeArray and NdbScaleDatabaseDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeArray{ NdbScaleDatabaseDatabaseNodeArgs{...} }
type NdbScaleDatabaseDatabaseNodeArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput
	ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput
}

type NdbScaleDatabaseDatabaseNodeArray []NdbScaleDatabaseDatabaseNodeInput

func (NdbScaleDatabaseDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeArray) ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeArray) ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ToNdbScaleDatabaseDatabaseNodeOutput() NdbScaleDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ToNdbScaleDatabaseDatabaseNodeOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeOutput) AccessLevel() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) map[string]string { return v.AccessLevel }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseDatabaseNodeOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseDatabaseNodeOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Dbserver() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) map[string]string { return v.Dbserver }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) DbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.DbserverId }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Infos() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeInfo { return v.Infos }).(NdbScaleDatabaseDatabaseNodeInfoArrayOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseDatabaseNodeOutput) Properties() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeProperty { return v.Properties }).(NdbScaleDatabaseDatabaseNodePropertyArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ProtectionDomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.ProtectionDomainId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) ProtectionDomains() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeProtectionDomain {
		return v.ProtectionDomains
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeOutput) SoftwareInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.SoftwareInstallationId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbScaleDatabaseDatabaseNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbScaleDatabaseDatabaseNodeOutput) Tags() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNode) []NdbScaleDatabaseDatabaseNodeTag { return v.Tags }).(NdbScaleDatabaseDatabaseNodeTagArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNode)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) ToNdbScaleDatabaseDatabaseNodeArrayOutput() NdbScaleDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) ToNdbScaleDatabaseDatabaseNodeArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNode {
		return vs[0].([]NdbScaleDatabaseDatabaseNode)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeOutput)
}

type NdbScaleDatabaseDatabaseNodeInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbScaleDatabaseDatabaseNodeInfoInput is an input type that accepts NdbScaleDatabaseDatabaseNodeInfoArgs and NdbScaleDatabaseDatabaseNodeInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInfoInput` via:
//
//	NdbScaleDatabaseDatabaseNodeInfoArgs{...}
type NdbScaleDatabaseDatabaseNodeInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput
	ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput
}

type NdbScaleDatabaseDatabaseNodeInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseDatabaseNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeInfoArgs) ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeInfoArgs) ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeInfoOutput)
}

// NdbScaleDatabaseDatabaseNodeInfoArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeInfoArray and NdbScaleDatabaseDatabaseNodeInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeInfoArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeInfoArray{ NdbScaleDatabaseDatabaseNodeInfoArgs{...} }
type NdbScaleDatabaseDatabaseNodeInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput
	ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput
}

type NdbScaleDatabaseDatabaseNodeInfoArray []NdbScaleDatabaseDatabaseNodeInfoInput

func (NdbScaleDatabaseDatabaseNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeInfoArray) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeInfoArray) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeInfoArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) ToNdbScaleDatabaseDatabaseNodeInfoOutput() NdbScaleDatabaseDatabaseNodeInfoOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) ToNdbScaleDatabaseDatabaseNodeInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return o
}

// info of instance
func (o NdbScaleDatabaseDatabaseNodeInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseDatabaseNodeInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseDatabaseNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutput() NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) ToNdbScaleDatabaseDatabaseNodeInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeInfo {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeInfoOutput)
}

type NdbScaleDatabaseDatabaseNodeProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodePropertyInput is an input type that accepts NdbScaleDatabaseDatabaseNodePropertyArgs and NdbScaleDatabaseDatabaseNodePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodePropertyInput` via:
//
//	NdbScaleDatabaseDatabaseNodePropertyArgs{...}
type NdbScaleDatabaseDatabaseNodePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput
	ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput
}

type NdbScaleDatabaseDatabaseNodePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodePropertyArgs) ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput {
	return i.ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodePropertyArgs) ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodePropertyOutput)
}

// NdbScaleDatabaseDatabaseNodePropertyArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodePropertyArray and NdbScaleDatabaseDatabaseNodePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodePropertyArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodePropertyArray{ NdbScaleDatabaseDatabaseNodePropertyArgs{...} }
type NdbScaleDatabaseDatabaseNodePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput
	ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput
}

type NdbScaleDatabaseDatabaseNodePropertyArray []NdbScaleDatabaseDatabaseNodePropertyInput

func (NdbScaleDatabaseDatabaseNodePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodePropertyArray) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodePropertyArray) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodePropertyArrayOutput)
}

type NdbScaleDatabaseDatabaseNodePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) ToNdbScaleDatabaseDatabaseNodePropertyOutput() NdbScaleDatabaseDatabaseNodePropertyOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) ToNdbScaleDatabaseDatabaseNodePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutput() NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProperty {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodePropertyOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomain struct {
	AssocEntities []string `pulumi:"assocEntities"`
	CloudId       *string  `pulumi:"cloudId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EraCreated  *bool   `pulumi:"eraCreated"`
	Id          *string `pulumi:"id"`
	// Name of database instance
	Name        *string `pulumi:"name"`
	OwnerId     *string `pulumi:"ownerId"`
	PrimaryHost *string `pulumi:"primaryHost"`
	// properties of database created
	Properties []NdbScaleDatabaseDatabaseNodeProtectionDomainProperty `pulumi:"properties"`
	// status of instance
	Status *string `pulumi:"status"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainArgs and NdbScaleDatabaseDatabaseNodeProtectionDomainOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{...}
type NdbScaleDatabaseDatabaseNodeProtectionDomainInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArgs struct {
	AssocEntities pulumi.StringArrayInput `pulumi:"assocEntities"`
	CloudId       pulumi.StringPtrInput   `pulumi:"cloudId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EraCreated  pulumi.BoolPtrInput   `pulumi:"eraCreated"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Name of database instance
	Name        pulumi.StringPtrInput `pulumi:"name"`
	OwnerId     pulumi.StringPtrInput `pulumi:"ownerId"`
	PrimaryHost pulumi.StringPtrInput `pulumi:"primaryHost"`
	// properties of database created
	Properties NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput `pulumi:"properties"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput)
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainArray and NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainArray{ NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{...} }
type NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArray []NdbScaleDatabaseDatabaseNodeProtectionDomainInput

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) AssocEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) []string { return v.AssocEntities }).(pulumi.StringArrayOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) EraCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *bool { return v.EraCreated }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) PrimaryHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.PrimaryHost }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Properties() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) []NdbScaleDatabaseDatabaseNodeProtectionDomainProperty {
		return v.Properties
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

// status of instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type of database
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomain)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeProtectionDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProtectionDomain {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProtectionDomain)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs and NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{...}
type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

// NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray and NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray{ NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{...} }
type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
	ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray []NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeProtectionDomainProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput() NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) ToNdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeProtectionDomainProperty {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeProtectionDomainProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput)
}

type NdbScaleDatabaseDatabaseNodeTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseDatabaseNodeTagInput is an input type that accepts NdbScaleDatabaseDatabaseNodeTagArgs and NdbScaleDatabaseDatabaseNodeTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeTagInput` via:
//
//	NdbScaleDatabaseDatabaseNodeTagArgs{...}
type NdbScaleDatabaseDatabaseNodeTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput
	ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeTagOutput
}

type NdbScaleDatabaseDatabaseNodeTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseDatabaseNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeTagArgs) ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeTagArgs) ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeTagOutput)
}

// NdbScaleDatabaseDatabaseNodeTagArrayInput is an input type that accepts NdbScaleDatabaseDatabaseNodeTagArray and NdbScaleDatabaseDatabaseNodeTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseDatabaseNodeTagArrayInput` via:
//
//	NdbScaleDatabaseDatabaseNodeTagArray{ NdbScaleDatabaseDatabaseNodeTagArgs{...} }
type NdbScaleDatabaseDatabaseNodeTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput
	ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput
}

type NdbScaleDatabaseDatabaseNodeTagArray []NdbScaleDatabaseDatabaseNodeTagInput

func (NdbScaleDatabaseDatabaseNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (i NdbScaleDatabaseDatabaseNodeTagArray) ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return i.ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseDatabaseNodeTagArray) ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseDatabaseNodeTagArrayOutput)
}

type NdbScaleDatabaseDatabaseNodeTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) ToNdbScaleDatabaseDatabaseNodeTagOutput() NdbScaleDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) ToNdbScaleDatabaseDatabaseNodeTagOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseDatabaseNodeTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseDatabaseNodeTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseDatabaseNodeTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseDatabaseNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseDatabaseNodeTag)(nil)).Elem()
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) ToNdbScaleDatabaseDatabaseNodeTagArrayOutput() NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) ToNdbScaleDatabaseDatabaseNodeTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseDatabaseNodeTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseDatabaseNodeTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseDatabaseNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseDatabaseNodeTag {
		return vs[0].([]NdbScaleDatabaseDatabaseNodeTag)[vs[1].(int)]
	}).(NdbScaleDatabaseDatabaseNodeTagOutput)
}

type NdbScaleDatabaseInfo struct {
	BpgConfigs []NdbScaleDatabaseInfoBpgConfig `pulumi:"bpgConfigs"`
	SecureInfo map[string]string               `pulumi:"secureInfo"`
}

// NdbScaleDatabaseInfoInput is an input type that accepts NdbScaleDatabaseInfoArgs and NdbScaleDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoInput` via:
//
//	NdbScaleDatabaseInfoArgs{...}
type NdbScaleDatabaseInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput
	ToNdbScaleDatabaseInfoOutputWithContext(context.Context) NdbScaleDatabaseInfoOutput
}

type NdbScaleDatabaseInfoArgs struct {
	BpgConfigs NdbScaleDatabaseInfoBpgConfigArrayInput `pulumi:"bpgConfigs"`
	SecureInfo pulumi.StringMapInput                   `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoArgs) ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput {
	return i.ToNdbScaleDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoArgs) ToNdbScaleDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoOutput)
}

// NdbScaleDatabaseInfoArrayInput is an input type that accepts NdbScaleDatabaseInfoArray and NdbScaleDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoArrayInput` via:
//
//	NdbScaleDatabaseInfoArray{ NdbScaleDatabaseInfoArgs{...} }
type NdbScaleDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput
	ToNdbScaleDatabaseInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoArrayOutput
}

type NdbScaleDatabaseInfoArray []NdbScaleDatabaseInfoInput

func (NdbScaleDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoArray) ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput {
	return i.ToNdbScaleDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoArray) ToNdbScaleDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoArrayOutput)
}

type NdbScaleDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoOutput) ToNdbScaleDatabaseInfoOutput() NdbScaleDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseInfoOutput) ToNdbScaleDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseInfoOutput) BpgConfigs() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfo) []NdbScaleDatabaseInfoBpgConfig { return v.BpgConfigs }).(NdbScaleDatabaseInfoBpgConfigArrayOutput)
}

func (o NdbScaleDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoArrayOutput) ToNdbScaleDatabaseInfoArrayOutput() NdbScaleDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoArrayOutput) ToNdbScaleDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfo {
		return vs[0].([]NdbScaleDatabaseInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoOutput)
}

type NdbScaleDatabaseInfoBpgConfig struct {
	BpgDbParams  []NdbScaleDatabaseInfoBpgConfigBpgDbParam `pulumi:"bpgDbParams"`
	Storages     []NdbScaleDatabaseInfoBpgConfigStorage    `pulumi:"storages"`
	VmProperties []NdbScaleDatabaseInfoBpgConfigVmProperty `pulumi:"vmProperties"`
}

// NdbScaleDatabaseInfoBpgConfigInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigArgs and NdbScaleDatabaseInfoBpgConfigOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigArgs{...}
type NdbScaleDatabaseInfoBpgConfigInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput
	ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigOutput
}

type NdbScaleDatabaseInfoBpgConfigArgs struct {
	BpgDbParams  NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput `pulumi:"bpgDbParams"`
	Storages     NdbScaleDatabaseInfoBpgConfigStorageArrayInput    `pulumi:"storages"`
	VmProperties NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput `pulumi:"vmProperties"`
}

func (NdbScaleDatabaseInfoBpgConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigArgs) ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigArgs) ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigOutput)
}

// NdbScaleDatabaseInfoBpgConfigArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigArray and NdbScaleDatabaseInfoBpgConfigArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigArray{ NdbScaleDatabaseInfoBpgConfigArgs{...} }
type NdbScaleDatabaseInfoBpgConfigArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigArray []NdbScaleDatabaseInfoBpgConfigInput

func (NdbScaleDatabaseInfoBpgConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigArray) ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigArray) ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) ToNdbScaleDatabaseInfoBpgConfigOutput() NdbScaleDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) ToNdbScaleDatabaseInfoBpgConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) BpgDbParams() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigBpgDbParam { return v.BpgDbParams }).(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) Storages() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigStorage { return v.Storages }).(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigOutput) VmProperties() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfig) []NdbScaleDatabaseInfoBpgConfigVmProperty { return v.VmProperties }).(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) ToNdbScaleDatabaseInfoBpgConfigArrayOutput() NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) ToNdbScaleDatabaseInfoBpgConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfig {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfig)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParam struct {
	EffectiveCacheSize          *string `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          *string `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather *string `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          *string `pulumi:"maxWorkerProcesses"`
	SharedBuffers               *string `pulumi:"sharedBuffers"`
	WorkMem                     *string `pulumi:"workMem"`
}

// NdbScaleDatabaseInfoBpgConfigBpgDbParamInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs and NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigBpgDbParamInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{...}
type NdbScaleDatabaseInfoBpgConfigBpgDbParamInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput
	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs struct {
	EffectiveCacheSize          pulumi.StringPtrInput `pulumi:"effectiveCacheSize"`
	MaintenanceWorkMem          pulumi.StringPtrInput `pulumi:"maintenanceWorkMem"`
	MaxParallelWorkersPerGather pulumi.StringPtrInput `pulumi:"maxParallelWorkersPerGather"`
	MaxWorkerProcesses          pulumi.StringPtrInput `pulumi:"maxWorkerProcesses"`
	SharedBuffers               pulumi.StringPtrInput `pulumi:"sharedBuffers"`
	WorkMem                     pulumi.StringPtrInput `pulumi:"workMem"`
}

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput)
}

// NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigBpgDbParamArray and NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigBpgDbParamArray{ NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{...} }
type NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArray []NdbScaleDatabaseInfoBpgConfigBpgDbParamInput

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigBpgDbParamArray) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) EffectiveCacheSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.EffectiveCacheSize }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaintenanceWorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaintenanceWorkMem }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaxParallelWorkersPerGather() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxParallelWorkersPerGather }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) MaxWorkerProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.MaxWorkerProcesses }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) SharedBuffers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.SharedBuffers }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput) WorkMem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigBpgDbParam) *string { return v.WorkMem }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigBpgDbParam)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput() NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) ToNdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigBpgDbParam {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigBpgDbParam)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorage struct {
	ArchiveStorages []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage `pulumi:"archiveStorages"`
	DataDisks       []NdbScaleDatabaseInfoBpgConfigStorageDataDisk       `pulumi:"dataDisks"`
	LogDisks        []NdbScaleDatabaseInfoBpgConfigStorageLogDisk        `pulumi:"logDisks"`
}

// NdbScaleDatabaseInfoBpgConfigStorageInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArgs and NdbScaleDatabaseInfoBpgConfigStorageOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArgs struct {
	ArchiveStorages NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput `pulumi:"archiveStorages"`
	DataDisks       NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput       `pulumi:"dataDisks"`
	LogDisks        NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput        `pulumi:"logDisks"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArray and NdbScaleDatabaseInfoBpgConfigStorageArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArray{ NdbScaleDatabaseInfoBpgConfigStorageArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArray []NdbScaleDatabaseInfoBpgConfigStorageInput

func (NdbScaleDatabaseInfoBpgConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) ArchiveStorages() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage {
		return v.ArchiveStorages
	}).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) DataDisks() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageDataDisk {
		return v.DataDisks
	}).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageOutput) LogDisks() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorage) []NdbScaleDatabaseInfoBpgConfigStorageLogDisk {
		return v.LogDisks
	}).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorage {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorage)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage struct {
	Size *float64 `pulumi:"size"`
}

// NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs and NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs struct {
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray and NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray{ NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray []NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageArchiveStorage)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDisk struct {
	Count *float64 `pulumi:"count"`
}

// NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs and NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray and NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray{ NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray []NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageDataDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageDataDisk {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageDataDisk)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDisk struct {
	Count *float64 `pulumi:"count"`
	Size  *float64 `pulumi:"size"`
}

// NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs and NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{...}
type NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs struct {
	Count pulumi.Float64PtrInput `pulumi:"count"`
	Size  pulumi.Float64PtrInput `pulumi:"size"`
}

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput)
}

// NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray and NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray{ NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{...} }
type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray []NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigStorageLogDisk) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput() NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) ToNdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigStorageLogDisk {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigStorageLogDisk)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmProperty struct {
	DirtyBackgroundRatio    *float64 `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    *float64 `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              *float64 `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs *float64 `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             *float64 `pulumi:"nrHugepages"`
	OvercommitMemory        *float64 `pulumi:"overcommitMemory"`
	Swappiness              *float64 `pulumi:"swappiness"`
}

// NdbScaleDatabaseInfoBpgConfigVmPropertyInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigVmPropertyArgs and NdbScaleDatabaseInfoBpgConfigVmPropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigVmPropertyInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{...}
type NdbScaleDatabaseInfoBpgConfigVmPropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput
	ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArgs struct {
	DirtyBackgroundRatio    pulumi.Float64PtrInput `pulumi:"dirtyBackgroundRatio"`
	DirtyExpireCentisecs    pulumi.Float64PtrInput `pulumi:"dirtyExpireCentisecs"`
	DirtyRatio              pulumi.Float64PtrInput `pulumi:"dirtyRatio"`
	DirtyWritebackCentisecs pulumi.Float64PtrInput `pulumi:"dirtyWritebackCentisecs"`
	NrHugepages             pulumi.Float64PtrInput `pulumi:"nrHugepages"`
	OvercommitMemory        pulumi.Float64PtrInput `pulumi:"overcommitMemory"`
	Swappiness              pulumi.Float64PtrInput `pulumi:"swappiness"`
}

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArgs) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput)
}

// NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput is an input type that accepts NdbScaleDatabaseInfoBpgConfigVmPropertyArray and NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput` via:
//
//	NdbScaleDatabaseInfoBpgConfigVmPropertyArray{ NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{...} }
type NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput
	ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArray []NdbScaleDatabaseInfoBpgConfigVmPropertyInput

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return i.ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseInfoBpgConfigVmPropertyArray) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyBackgroundRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyBackgroundRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyExpireCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyExpireCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyRatio }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) DirtyWritebackCentisecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.DirtyWritebackCentisecs }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) NrHugepages() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.NrHugepages }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) OvercommitMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.OvercommitMemory }).(pulumi.Float64PtrOutput)
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyOutput) Swappiness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseInfoBpgConfigVmProperty) *float64 { return v.Swappiness }).(pulumi.Float64PtrOutput)
}

type NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseInfoBpgConfigVmProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput() NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) ToNdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseInfoBpgConfigVmPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseInfoBpgConfigVmProperty {
		return vs[0].([]NdbScaleDatabaseInfoBpgConfigVmProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput)
}

type NdbScaleDatabaseLcmConfig struct {
	ExpiryDetails      []NdbScaleDatabaseLcmConfigExpiryDetail      `pulumi:"expiryDetails"`
	PostDeleteCommands []NdbScaleDatabaseLcmConfigPostDeleteCommand `pulumi:"postDeleteCommands"`
	PreDeleteCommands  []NdbScaleDatabaseLcmConfigPreDeleteCommand  `pulumi:"preDeleteCommands"`
	RefreshDetails     []NdbScaleDatabaseLcmConfigRefreshDetail     `pulumi:"refreshDetails"`
}

// NdbScaleDatabaseLcmConfigInput is an input type that accepts NdbScaleDatabaseLcmConfigArgs and NdbScaleDatabaseLcmConfigOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigInput` via:
//
//	NdbScaleDatabaseLcmConfigArgs{...}
type NdbScaleDatabaseLcmConfigInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput
	ToNdbScaleDatabaseLcmConfigOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigOutput
}

type NdbScaleDatabaseLcmConfigArgs struct {
	ExpiryDetails      NdbScaleDatabaseLcmConfigExpiryDetailArrayInput      `pulumi:"expiryDetails"`
	PostDeleteCommands NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput `pulumi:"postDeleteCommands"`
	PreDeleteCommands  NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput  `pulumi:"preDeleteCommands"`
	RefreshDetails     NdbScaleDatabaseLcmConfigRefreshDetailArrayInput     `pulumi:"refreshDetails"`
}

func (NdbScaleDatabaseLcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigArgs) ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput {
	return i.ToNdbScaleDatabaseLcmConfigOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigArgs) ToNdbScaleDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigOutput)
}

// NdbScaleDatabaseLcmConfigArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigArray and NdbScaleDatabaseLcmConfigArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigArray{ NdbScaleDatabaseLcmConfigArgs{...} }
type NdbScaleDatabaseLcmConfigArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput
	ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigArrayOutput
}

type NdbScaleDatabaseLcmConfigArray []NdbScaleDatabaseLcmConfigInput

func (NdbScaleDatabaseLcmConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigArray) ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigArray) ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigArrayOutput)
}

type NdbScaleDatabaseLcmConfigOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigOutput) ToNdbScaleDatabaseLcmConfigOutput() NdbScaleDatabaseLcmConfigOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigOutput) ToNdbScaleDatabaseLcmConfigOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigOutput) ExpiryDetails() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigExpiryDetail { return v.ExpiryDetails }).(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) PostDeleteCommands() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigPostDeleteCommand {
		return v.PostDeleteCommands
	}).(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) PreDeleteCommands() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigPreDeleteCommand {
		return v.PreDeleteCommands
	}).(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

func (o NdbScaleDatabaseLcmConfigOutput) RefreshDetails() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfig) []NdbScaleDatabaseLcmConfigRefreshDetail { return v.RefreshDetails }).(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfig)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) ToNdbScaleDatabaseLcmConfigArrayOutput() NdbScaleDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) ToNdbScaleDatabaseLcmConfigArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfig {
		return vs[0].([]NdbScaleDatabaseLcmConfig)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetail struct {
	DeleteDatabase     *bool   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  *bool   `pulumi:"deleteTimeMachine"`
	DeleteVm           *bool   `pulumi:"deleteVm"`
	EffectiveTimestamp *string `pulumi:"effectiveTimestamp"`
	ExpireInDays       *int    `pulumi:"expireInDays"`
	ExpiryDateTimezone *string `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    *string `pulumi:"expiryTimestamp"`
	RemindBeforeInDays *int    `pulumi:"remindBeforeInDays"`
	UserCreated        *bool   `pulumi:"userCreated"`
}

// NdbScaleDatabaseLcmConfigExpiryDetailInput is an input type that accepts NdbScaleDatabaseLcmConfigExpiryDetailArgs and NdbScaleDatabaseLcmConfigExpiryDetailOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigExpiryDetailInput` via:
//
//	NdbScaleDatabaseLcmConfigExpiryDetailArgs{...}
type NdbScaleDatabaseLcmConfigExpiryDetailInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput
	ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput
}

type NdbScaleDatabaseLcmConfigExpiryDetailArgs struct {
	DeleteDatabase     pulumi.BoolPtrInput   `pulumi:"deleteDatabase"`
	DeleteTimeMachine  pulumi.BoolPtrInput   `pulumi:"deleteTimeMachine"`
	DeleteVm           pulumi.BoolPtrInput   `pulumi:"deleteVm"`
	EffectiveTimestamp pulumi.StringPtrInput `pulumi:"effectiveTimestamp"`
	ExpireInDays       pulumi.IntPtrInput    `pulumi:"expireInDays"`
	ExpiryDateTimezone pulumi.StringPtrInput `pulumi:"expiryDateTimezone"`
	ExpiryTimestamp    pulumi.StringPtrInput `pulumi:"expiryTimestamp"`
	RemindBeforeInDays pulumi.IntPtrInput    `pulumi:"remindBeforeInDays"`
	UserCreated        pulumi.BoolPtrInput   `pulumi:"userCreated"`
}

func (NdbScaleDatabaseLcmConfigExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArgs) ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return i.ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArgs) ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigExpiryDetailOutput)
}

// NdbScaleDatabaseLcmConfigExpiryDetailArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigExpiryDetailArray and NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigExpiryDetailArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigExpiryDetailArray{ NdbScaleDatabaseLcmConfigExpiryDetailArgs{...} }
type NdbScaleDatabaseLcmConfigExpiryDetailArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput
	ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput
}

type NdbScaleDatabaseLcmConfigExpiryDetailArray []NdbScaleDatabaseLcmConfigExpiryDetailInput

func (NdbScaleDatabaseLcmConfigExpiryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArray) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigExpiryDetailArray) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetailOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailOutput() NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteDatabase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteDatabase }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteTimeMachine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteTimeMachine }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) DeleteVm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.DeleteVm }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) EffectiveTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.EffectiveTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpireInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *int { return v.ExpireInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpiryDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) ExpiryTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *string { return v.ExpiryTimestamp }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) RemindBeforeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *int { return v.RemindBeforeInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailOutput) UserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigExpiryDetail) *bool { return v.UserCreated }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigExpiryDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutput() NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) ToNdbScaleDatabaseLcmConfigExpiryDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigExpiryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigExpiryDetail {
		return vs[0].([]NdbScaleDatabaseLcmConfigExpiryDetail)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigExpiryDetailOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbScaleDatabaseLcmConfigPostDeleteCommandInput is an input type that accepts NdbScaleDatabaseLcmConfigPostDeleteCommandArgs and NdbScaleDatabaseLcmConfigPostDeleteCommandOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPostDeleteCommandInput` via:
//
//	NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{...}
type NdbScaleDatabaseLcmConfigPostDeleteCommandInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput
	ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return i.ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput)
}

// NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigPostDeleteCommandArray and NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigPostDeleteCommandArray{ NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{...} }
type NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput
	ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArray []NdbScaleDatabaseLcmConfigPostDeleteCommandInput

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPostDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigPostDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPostDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigPostDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigPostDeleteCommand {
		return vs[0].([]NdbScaleDatabaseLcmConfigPostDeleteCommand)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommand struct {
	Command *string `pulumi:"command"`
}

// NdbScaleDatabaseLcmConfigPreDeleteCommandInput is an input type that accepts NdbScaleDatabaseLcmConfigPreDeleteCommandArgs and NdbScaleDatabaseLcmConfigPreDeleteCommandOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPreDeleteCommandInput` via:
//
//	NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{...}
type NdbScaleDatabaseLcmConfigPreDeleteCommandInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput
	ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArgs struct {
	Command pulumi.StringPtrInput `pulumi:"command"`
}

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return i.ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArgs) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput)
}

// NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigPreDeleteCommandArray and NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigPreDeleteCommandArray{ NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{...} }
type NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput
	ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArray []NdbScaleDatabaseLcmConfigPreDeleteCommandInput

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigPreDeleteCommandArray) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigPreDeleteCommand) *string { return v.Command }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigPreDeleteCommand)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput() NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) ToNdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigPreDeleteCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigPreDeleteCommand {
		return vs[0].([]NdbScaleDatabaseLcmConfigPreDeleteCommand)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetail struct {
	LastRefreshDate     *string `pulumi:"lastRefreshDate"`
	NextRefreshDate     *string `pulumi:"nextRefreshDate"`
	RefreshDateTimezone *string `pulumi:"refreshDateTimezone"`
	RefreshInDays       *int    `pulumi:"refreshInDays"`
	RefreshInHours      *int    `pulumi:"refreshInHours"`
	RefreshInMonths     *int    `pulumi:"refreshInMonths"`
	RefreshTime         *string `pulumi:"refreshTime"`
}

// NdbScaleDatabaseLcmConfigRefreshDetailInput is an input type that accepts NdbScaleDatabaseLcmConfigRefreshDetailArgs and NdbScaleDatabaseLcmConfigRefreshDetailOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigRefreshDetailInput` via:
//
//	NdbScaleDatabaseLcmConfigRefreshDetailArgs{...}
type NdbScaleDatabaseLcmConfigRefreshDetailInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput
	ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput
}

type NdbScaleDatabaseLcmConfigRefreshDetailArgs struct {
	LastRefreshDate     pulumi.StringPtrInput `pulumi:"lastRefreshDate"`
	NextRefreshDate     pulumi.StringPtrInput `pulumi:"nextRefreshDate"`
	RefreshDateTimezone pulumi.StringPtrInput `pulumi:"refreshDateTimezone"`
	RefreshInDays       pulumi.IntPtrInput    `pulumi:"refreshInDays"`
	RefreshInHours      pulumi.IntPtrInput    `pulumi:"refreshInHours"`
	RefreshInMonths     pulumi.IntPtrInput    `pulumi:"refreshInMonths"`
	RefreshTime         pulumi.StringPtrInput `pulumi:"refreshTime"`
}

func (NdbScaleDatabaseLcmConfigRefreshDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArgs) ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return i.ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArgs) ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigRefreshDetailOutput)
}

// NdbScaleDatabaseLcmConfigRefreshDetailArrayInput is an input type that accepts NdbScaleDatabaseLcmConfigRefreshDetailArray and NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLcmConfigRefreshDetailArrayInput` via:
//
//	NdbScaleDatabaseLcmConfigRefreshDetailArray{ NdbScaleDatabaseLcmConfigRefreshDetailArgs{...} }
type NdbScaleDatabaseLcmConfigRefreshDetailArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput
	ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput
}

type NdbScaleDatabaseLcmConfigRefreshDetailArray []NdbScaleDatabaseLcmConfigRefreshDetailInput

func (NdbScaleDatabaseLcmConfigRefreshDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArray) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return i.ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLcmConfigRefreshDetailArray) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetailOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigRefreshDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailOutput() NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) LastRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.LastRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) NextRefreshDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.NextRefreshDate }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshDateTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.RefreshDateTimezone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInDays }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInHours }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshInMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *int { return v.RefreshInMonths }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLcmConfigRefreshDetail) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLcmConfigRefreshDetail)(nil)).Elem()
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutput() NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) ToNdbScaleDatabaseLcmConfigRefreshDetailArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput {
	return o
}

func (o NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLcmConfigRefreshDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLcmConfigRefreshDetail {
		return vs[0].([]NdbScaleDatabaseLcmConfigRefreshDetail)[vs[1].(int)]
	}).(NdbScaleDatabaseLcmConfigRefreshDetailOutput)
}

type NdbScaleDatabaseLinkedDatabase struct {
	// name of database
	DatabaseName   *string `pulumi:"databaseName"`
	DatabaseStatus *string `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// info of instance
	Infos []NdbScaleDatabaseLinkedDatabaseInfo `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric map[string]string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// parent database id
	ParentDatabaseId       *string `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId *string `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             *string `pulumi:"snapshotId"`
	// status of instance
	Status   *string `pulumi:"status"`
	Timezone *string `pulumi:"timezone"`
}

// NdbScaleDatabaseLinkedDatabaseInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseArgs and NdbScaleDatabaseLinkedDatabaseOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseArgs{...}
type NdbScaleDatabaseLinkedDatabaseInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput
	ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseOutput
}

type NdbScaleDatabaseLinkedDatabaseArgs struct {
	// name of database
	DatabaseName   pulumi.StringPtrInput `pulumi:"databaseName"`
	DatabaseStatus pulumi.StringPtrInput `pulumi:"databaseStatus"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// info of instance
	Infos NdbScaleDatabaseLinkedDatabaseInfoArrayInput `pulumi:"infos"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringMapInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// parent database id
	ParentDatabaseId       pulumi.StringPtrInput `pulumi:"parentDatabaseId"`
	ParentLinkedDatabaseId pulumi.StringPtrInput `pulumi:"parentLinkedDatabaseId"`
	SnapshotId             pulumi.StringPtrInput `pulumi:"snapshotId"`
	// status of instance
	Status   pulumi.StringPtrInput `pulumi:"status"`
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (NdbScaleDatabaseLinkedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseArgs) ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseArgs) ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseOutput)
}

// NdbScaleDatabaseLinkedDatabaseArrayInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseArray and NdbScaleDatabaseLinkedDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseArrayInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseArray{ NdbScaleDatabaseLinkedDatabaseArgs{...} }
type NdbScaleDatabaseLinkedDatabaseArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput
	ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput
}

type NdbScaleDatabaseLinkedDatabaseArray []NdbScaleDatabaseLinkedDatabaseInput

func (NdbScaleDatabaseLinkedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseArray) ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseArray) ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseArrayOutput)
}

type NdbScaleDatabaseLinkedDatabaseOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ToNdbScaleDatabaseLinkedDatabaseOutput() NdbScaleDatabaseLinkedDatabaseOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ToNdbScaleDatabaseLinkedDatabaseOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseOutput {
	return o
}

// name of database
func (o NdbScaleDatabaseLinkedDatabaseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) DatabaseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DatabaseStatus }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// info of instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Infos() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) []NdbScaleDatabaseLinkedDatabaseInfo { return v.Infos }).(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbScaleDatabaseLinkedDatabaseOutput) Metric() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) map[string]string { return v.Metric }).(pulumi.StringMapOutput)
}

// Name of database instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// parent database id
func (o NdbScaleDatabaseLinkedDatabaseOutput) ParentDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.ParentDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) ParentLinkedDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.ParentLinkedDatabaseId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// status of instance
func (o NdbScaleDatabaseLinkedDatabaseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabase) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseLinkedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabase)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) ToNdbScaleDatabaseLinkedDatabaseArrayOutput() NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) ToNdbScaleDatabaseLinkedDatabaseArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLinkedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLinkedDatabase {
		return vs[0].([]NdbScaleDatabaseLinkedDatabase)[vs[1].(int)]
	}).(NdbScaleDatabaseLinkedDatabaseOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfo struct {
	// info of instance
	Info       map[string]string `pulumi:"info"`
	SecureInfo map[string]string `pulumi:"secureInfo"`
}

// NdbScaleDatabaseLinkedDatabaseInfoInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseInfoArgs and NdbScaleDatabaseLinkedDatabaseInfoOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInfoInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseInfoArgs{...}
type NdbScaleDatabaseLinkedDatabaseInfoInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput
	ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput
}

type NdbScaleDatabaseLinkedDatabaseInfoArgs struct {
	// info of instance
	Info       pulumi.StringMapInput `pulumi:"info"`
	SecureInfo pulumi.StringMapInput `pulumi:"secureInfo"`
}

func (NdbScaleDatabaseLinkedDatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArgs) ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArgs) ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseInfoOutput)
}

// NdbScaleDatabaseLinkedDatabaseInfoArrayInput is an input type that accepts NdbScaleDatabaseLinkedDatabaseInfoArray and NdbScaleDatabaseLinkedDatabaseInfoArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseLinkedDatabaseInfoArrayInput` via:
//
//	NdbScaleDatabaseLinkedDatabaseInfoArray{ NdbScaleDatabaseLinkedDatabaseInfoArgs{...} }
type NdbScaleDatabaseLinkedDatabaseInfoArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput
	ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput
}

type NdbScaleDatabaseLinkedDatabaseInfoArray []NdbScaleDatabaseLinkedDatabaseInfoInput

func (NdbScaleDatabaseLinkedDatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArray) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return i.ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseLinkedDatabaseInfoArray) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfoOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) ToNdbScaleDatabaseLinkedDatabaseInfoOutput() NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) ToNdbScaleDatabaseLinkedDatabaseInfoOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return o
}

// info of instance
func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) Info() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabaseInfo) map[string]string { return v.Info }).(pulumi.StringMapOutput)
}

func (o NdbScaleDatabaseLinkedDatabaseInfoOutput) SecureInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v NdbScaleDatabaseLinkedDatabaseInfo) map[string]string { return v.SecureInfo }).(pulumi.StringMapOutput)
}

type NdbScaleDatabaseLinkedDatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseLinkedDatabaseInfo)(nil)).Elem()
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutput() NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) ToNdbScaleDatabaseLinkedDatabaseInfoArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseLinkedDatabaseInfoArrayOutput {
	return o
}

func (o NdbScaleDatabaseLinkedDatabaseInfoArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseLinkedDatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseLinkedDatabaseInfo {
		return vs[0].([]NdbScaleDatabaseLinkedDatabaseInfo)[vs[1].(int)]
	}).(NdbScaleDatabaseLinkedDatabaseInfoOutput)
}

type NdbScaleDatabaseProperty struct {
	// Name of database instance
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NdbScaleDatabasePropertyInput is an input type that accepts NdbScaleDatabasePropertyArgs and NdbScaleDatabasePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabasePropertyInput` via:
//
//	NdbScaleDatabasePropertyArgs{...}
type NdbScaleDatabasePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput
	ToNdbScaleDatabasePropertyOutputWithContext(context.Context) NdbScaleDatabasePropertyOutput
}

type NdbScaleDatabasePropertyArgs struct {
	// Name of database instance
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabasePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseProperty)(nil)).Elem()
}

func (i NdbScaleDatabasePropertyArgs) ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput {
	return i.ToNdbScaleDatabasePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabasePropertyArgs) ToNdbScaleDatabasePropertyOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabasePropertyOutput)
}

// NdbScaleDatabasePropertyArrayInput is an input type that accepts NdbScaleDatabasePropertyArray and NdbScaleDatabasePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabasePropertyArrayInput` via:
//
//	NdbScaleDatabasePropertyArray{ NdbScaleDatabasePropertyArgs{...} }
type NdbScaleDatabasePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput
	ToNdbScaleDatabasePropertyArrayOutputWithContext(context.Context) NdbScaleDatabasePropertyArrayOutput
}

type NdbScaleDatabasePropertyArray []NdbScaleDatabasePropertyInput

func (NdbScaleDatabasePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseProperty)(nil)).Elem()
}

func (i NdbScaleDatabasePropertyArray) ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput {
	return i.ToNdbScaleDatabasePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabasePropertyArray) ToNdbScaleDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabasePropertyArrayOutput)
}

type NdbScaleDatabasePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabasePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseProperty)(nil)).Elem()
}

func (o NdbScaleDatabasePropertyOutput) ToNdbScaleDatabasePropertyOutput() NdbScaleDatabasePropertyOutput {
	return o
}

func (o NdbScaleDatabasePropertyOutput) ToNdbScaleDatabasePropertyOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyOutput {
	return o
}

// Name of database instance
func (o NdbScaleDatabasePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabasePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabasePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabasePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseProperty)(nil)).Elem()
}

func (o NdbScaleDatabasePropertyArrayOutput) ToNdbScaleDatabasePropertyArrayOutput() NdbScaleDatabasePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabasePropertyArrayOutput) ToNdbScaleDatabasePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabasePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabasePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabasePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseProperty {
		return vs[0].([]NdbScaleDatabaseProperty)[vs[1].(int)]
	}).(NdbScaleDatabasePropertyOutput)
}

type NdbScaleDatabaseTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseTagInput is an input type that accepts NdbScaleDatabaseTagArgs and NdbScaleDatabaseTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTagInput` via:
//
//	NdbScaleDatabaseTagArgs{...}
type NdbScaleDatabaseTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput
	ToNdbScaleDatabaseTagOutputWithContext(context.Context) NdbScaleDatabaseTagOutput
}

type NdbScaleDatabaseTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTagArgs) ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput {
	return i.ToNdbScaleDatabaseTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTagArgs) ToNdbScaleDatabaseTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTagOutput)
}

// NdbScaleDatabaseTagArrayInput is an input type that accepts NdbScaleDatabaseTagArray and NdbScaleDatabaseTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTagArrayInput` via:
//
//	NdbScaleDatabaseTagArray{ NdbScaleDatabaseTagArgs{...} }
type NdbScaleDatabaseTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput
	ToNdbScaleDatabaseTagArrayOutputWithContext(context.Context) NdbScaleDatabaseTagArrayOutput
}

type NdbScaleDatabaseTagArray []NdbScaleDatabaseTagInput

func (NdbScaleDatabaseTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTagArray) ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput {
	return i.ToNdbScaleDatabaseTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTagArray) ToNdbScaleDatabaseTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTagArrayOutput)
}

type NdbScaleDatabaseTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTagOutput) ToNdbScaleDatabaseTagOutput() NdbScaleDatabaseTagOutput {
	return o
}

func (o NdbScaleDatabaseTagOutput) ToNdbScaleDatabaseTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTagOutput {
	return o
}

func (o NdbScaleDatabaseTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTagArrayOutput) ToNdbScaleDatabaseTagArrayOutput() NdbScaleDatabaseTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTagArrayOutput) ToNdbScaleDatabaseTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTag {
		return vs[0].([]NdbScaleDatabaseTag)[vs[1].(int)]
	}).(NdbScaleDatabaseTagOutput)
}

type NdbScaleDatabaseTimeMachine struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      *bool   `pulumi:"clone"`
	Clones     *string `pulumi:"clones"`
	Clustered  *bool   `pulumi:"clustered"`
	Database   *string `pulumi:"database"`
	DatabaseId *string `pulumi:"databaseId"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description *string `pulumi:"description"`
	EaStatus    *string `pulumi:"eaStatus"`
	Id          *string `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric *string `pulumi:"metric"`
	// Name of database instance
	Name *string `pulumi:"name"`
	// properties of database created
	Properties          []NdbScaleDatabaseTimeMachineProperty `pulumi:"properties"`
	ScheduleId          *string                               `pulumi:"scheduleId"`
	Schedules           []NdbScaleDatabaseTimeMachineSchedule `pulumi:"schedules"`
	Scope               *string                               `pulumi:"scope"`
	SlaId               *string                               `pulumi:"slaId"`
	SlaUpdateInProgress *bool                                 `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   *string                               `pulumi:"slaUpdateMetadata"`
	Slas                []NdbScaleDatabaseTimeMachineSla      `pulumi:"slas"`
	SourceNxClusters    []string                              `pulumi:"sourceNxClusters"`
	// status of instance
	Status *string `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags []NdbScaleDatabaseTimeMachineTag `pulumi:"tags"`
	// type of database
	Type *string `pulumi:"type"`
}

// NdbScaleDatabaseTimeMachineInput is an input type that accepts NdbScaleDatabaseTimeMachineArgs and NdbScaleDatabaseTimeMachineOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineInput` via:
//
//	NdbScaleDatabaseTimeMachineArgs{...}
type NdbScaleDatabaseTimeMachineInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput
	ToNdbScaleDatabaseTimeMachineOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineOutput
}

type NdbScaleDatabaseTimeMachineArgs struct {
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// whether instance is cloned or not
	Clone      pulumi.BoolPtrInput   `pulumi:"clone"`
	Clones     pulumi.StringPtrInput `pulumi:"clones"`
	Clustered  pulumi.BoolPtrInput   `pulumi:"clustered"`
	Database   pulumi.StringPtrInput `pulumi:"database"`
	DatabaseId pulumi.StringPtrInput `pulumi:"databaseId"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	EaStatus    pulumi.StringPtrInput `pulumi:"eaStatus"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Name of database instance
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of database created
	Properties          NdbScaleDatabaseTimeMachinePropertyArrayInput `pulumi:"properties"`
	ScheduleId          pulumi.StringPtrInput                         `pulumi:"scheduleId"`
	Schedules           NdbScaleDatabaseTimeMachineScheduleArrayInput `pulumi:"schedules"`
	Scope               pulumi.StringPtrInput                         `pulumi:"scope"`
	SlaId               pulumi.StringPtrInput                         `pulumi:"slaId"`
	SlaUpdateInProgress pulumi.BoolPtrInput                           `pulumi:"slaUpdateInProgress"`
	SlaUpdateMetadata   pulumi.StringPtrInput                         `pulumi:"slaUpdateMetadata"`
	Slas                NdbScaleDatabaseTimeMachineSlaArrayInput      `pulumi:"slas"`
	SourceNxClusters    pulumi.StringArrayInput                       `pulumi:"sourceNxClusters"`
	// status of instance
	Status pulumi.StringPtrInput `pulumi:"status"`
	// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
	Tags NdbScaleDatabaseTimeMachineTagArrayInput `pulumi:"tags"`
	// type of database
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbScaleDatabaseTimeMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineArgs) ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput {
	return i.ToNdbScaleDatabaseTimeMachineOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineArgs) ToNdbScaleDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineOutput)
}

// NdbScaleDatabaseTimeMachineArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineArray and NdbScaleDatabaseTimeMachineArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineArray{ NdbScaleDatabaseTimeMachineArgs{...} }
type NdbScaleDatabaseTimeMachineArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput
	ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineArrayOutput
}

type NdbScaleDatabaseTimeMachineArray []NdbScaleDatabaseTimeMachineInput

func (NdbScaleDatabaseTimeMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineArray) ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineArray) ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineArrayOutput)
}

type NdbScaleDatabaseTimeMachineOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineOutput) ToNdbScaleDatabaseTimeMachineOutput() NdbScaleDatabaseTimeMachineOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineOutput) ToNdbScaleDatabaseTimeMachineOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// whether instance is cloned or not
func (o NdbScaleDatabaseTimeMachineOutput) Clone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.Clone }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Clones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Clones }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Clustered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.Clustered }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) EaStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.EaStatus }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Stores storage info regarding size, allocatedSize, usedSize and unit of calculation that seems to have been fetched from PRISM.
func (o NdbScaleDatabaseTimeMachineOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of database created
func (o NdbScaleDatabaseTimeMachineOutput) Properties() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineProperty { return v.Properties }).(NdbScaleDatabaseTimeMachinePropertyArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Schedules() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineSchedule { return v.Schedules }).(NdbScaleDatabaseTimeMachineScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.SlaId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaUpdateInProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *bool { return v.SlaUpdateInProgress }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SlaUpdateMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.SlaUpdateMetadata }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) Slas() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineSla { return v.Slas }).(NdbScaleDatabaseTimeMachineSlaArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineOutput) SourceNxClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []string { return v.SourceNxClusters }).(pulumi.StringArrayOutput)
}

// status of instance
func (o NdbScaleDatabaseTimeMachineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// allows you to assign metadata to entities (clones, time machines, databases, and database servers) by using tags.
func (o NdbScaleDatabaseTimeMachineOutput) Tags() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) []NdbScaleDatabaseTimeMachineTag { return v.Tags }).(NdbScaleDatabaseTimeMachineTagArrayOutput)
}

// type of database
func (o NdbScaleDatabaseTimeMachineOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachine) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachine)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) ToNdbScaleDatabaseTimeMachineArrayOutput() NdbScaleDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) ToNdbScaleDatabaseTimeMachineArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachine {
		return vs[0].([]NdbScaleDatabaseTimeMachine)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineOutput)
}

type NdbScaleDatabaseTimeMachineProperty struct {
	// description of database instance
	Description *string `pulumi:"description"`
	// Name of database instance
	Name   *string `pulumi:"name"`
	RefId  *string `pulumi:"refId"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbScaleDatabaseTimeMachinePropertyInput is an input type that accepts NdbScaleDatabaseTimeMachinePropertyArgs and NdbScaleDatabaseTimeMachinePropertyOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachinePropertyInput` via:
//
//	NdbScaleDatabaseTimeMachinePropertyArgs{...}
type NdbScaleDatabaseTimeMachinePropertyInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput
	ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(context.Context) NdbScaleDatabaseTimeMachinePropertyOutput
}

type NdbScaleDatabaseTimeMachinePropertyArgs struct {
	// description of database instance
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of database instance
	Name   pulumi.StringPtrInput `pulumi:"name"`
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTimeMachinePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachinePropertyArgs) ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput {
	return i.ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachinePropertyArgs) ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachinePropertyOutput)
}

// NdbScaleDatabaseTimeMachinePropertyArrayInput is an input type that accepts NdbScaleDatabaseTimeMachinePropertyArray and NdbScaleDatabaseTimeMachinePropertyArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachinePropertyArrayInput` via:
//
//	NdbScaleDatabaseTimeMachinePropertyArray{ NdbScaleDatabaseTimeMachinePropertyArgs{...} }
type NdbScaleDatabaseTimeMachinePropertyArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput
	ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput
}

type NdbScaleDatabaseTimeMachinePropertyArray []NdbScaleDatabaseTimeMachinePropertyInput

func (NdbScaleDatabaseTimeMachinePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachinePropertyArray) ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachinePropertyArray) ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachinePropertyArrayOutput)
}

type NdbScaleDatabaseTimeMachinePropertyOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachinePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) ToNdbScaleDatabaseTimeMachinePropertyOutput() NdbScaleDatabaseTimeMachinePropertyOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) ToNdbScaleDatabaseTimeMachinePropertyOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyOutput {
	return o
}

// description of database instance
func (o NdbScaleDatabaseTimeMachinePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachinePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachinePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachinePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachinePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineProperty)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) ToNdbScaleDatabaseTimeMachinePropertyArrayOutput() NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) ToNdbScaleDatabaseTimeMachinePropertyArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachinePropertyArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachinePropertyArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachinePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineProperty {
		return vs[0].([]NdbScaleDatabaseTimeMachineProperty)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachinePropertyOutput)
}

type NdbScaleDatabaseTimeMachineSchedule struct {
	ContinuousSchedules []NdbScaleDatabaseTimeMachineScheduleContinuousSchedule `pulumi:"continuousSchedules"`
	DailySchedules      []NdbScaleDatabaseTimeMachineScheduleDailySchedule      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string                                              `pulumi:"description"`
	GlobalPolicy     *bool                                                `pulumi:"globalPolicy"`
	Id               *string                                              `pulumi:"id"`
	MonthlySchedules []NdbScaleDatabaseTimeMachineScheduleMonthlySchedule `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               *string                                                `pulumi:"name"`
	OwnerId            *string                                                `pulumi:"ownerId"`
	QuartelySchedules  []NdbScaleDatabaseTimeMachineScheduleQuartelySchedule  `pulumi:"quartelySchedules"`
	ReferenceCount     *int                                                   `pulumi:"referenceCount"`
	SnapshotTimeOfDays []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay `pulumi:"snapshotTimeOfDays"`
	StartTime          *string                                                `pulumi:"startTime"`
	SystemPolicy       *bool                                                  `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        *string                                             `pulumi:"timeZone"`
	UniqueName      *string                                             `pulumi:"uniqueName"`
	WeeklySchedules []NdbScaleDatabaseTimeMachineScheduleWeeklySchedule `pulumi:"weeklySchedules"`
	YearlySchedules []NdbScaleDatabaseTimeMachineScheduleYearlySchedule `pulumi:"yearlySchedules"`
}

// NdbScaleDatabaseTimeMachineScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleArgs and NdbScaleDatabaseTimeMachineScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleArgs struct {
	ContinuousSchedules NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput `pulumi:"continuousSchedules"`
	DailySchedules      NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput      `pulumi:"dailySchedules"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput                                        `pulumi:"description"`
	GlobalPolicy     pulumi.BoolPtrInput                                          `pulumi:"globalPolicy"`
	Id               pulumi.StringPtrInput                                        `pulumi:"id"`
	MonthlySchedules NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput `pulumi:"monthlySchedules"`
	// Name of database instance
	Name               pulumi.StringPtrInput                                          `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput                                          `pulumi:"ownerId"`
	QuartelySchedules  NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput  `pulumi:"quartelySchedules"`
	ReferenceCount     pulumi.IntPtrInput                                             `pulumi:"referenceCount"`
	SnapshotTimeOfDays NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput `pulumi:"snapshotTimeOfDays"`
	StartTime          pulumi.StringPtrInput                                          `pulumi:"startTime"`
	SystemPolicy       pulumi.BoolPtrInput                                            `pulumi:"systemPolicy"`
	// timezone on which instance is created xw
	TimeZone        pulumi.StringPtrInput                                       `pulumi:"timeZone"`
	UniqueName      pulumi.StringPtrInput                                       `pulumi:"uniqueName"`
	WeeklySchedules NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput `pulumi:"weeklySchedules"`
	YearlySchedules NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput `pulumi:"yearlySchedules"`
}

func (NdbScaleDatabaseTimeMachineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleArray and NdbScaleDatabaseTimeMachineScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleArray{ NdbScaleDatabaseTimeMachineScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleArray []NdbScaleDatabaseTimeMachineScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleOutput() NdbScaleDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ContinuousSchedules() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleContinuousSchedule {
		return v.ContinuousSchedules
	}).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) DailySchedules() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleDailySchedule {
		return v.DailySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) GlobalPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *bool { return v.GlobalPolicy }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) MonthlySchedules() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleMonthlySchedule {
		return v.MonthlySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) QuartelySchedules() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleQuartelySchedule {
		return v.QuartelySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) SnapshotTimeOfDays() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return v.SnapshotTimeOfDays
	}).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) SystemPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *bool { return v.SystemPolicy }).(pulumi.BoolPtrOutput)
}

// timezone on which instance is created xw
func (o NdbScaleDatabaseTimeMachineScheduleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) WeeklySchedules() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleWeeklySchedule {
		return v.WeeklySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleOutput) YearlySchedules() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSchedule) []NdbScaleDatabaseTimeMachineScheduleYearlySchedule {
		return v.YearlySchedules
	}).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineSchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineSchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousSchedule struct {
	Enabled           *bool `pulumi:"enabled"`
	LogBackupInterval *int  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   *int  `pulumi:"snapshotsPerDay"`
}

// NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs and NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs struct {
	Enabled           pulumi.BoolPtrInput `pulumi:"enabled"`
	LogBackupInterval pulumi.IntPtrInput  `pulumi:"logBackupInterval"`
	SnapshotsPerDay   pulumi.IntPtrInput  `pulumi:"snapshotsPerDay"`
}

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray and NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray{ NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray []NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) LogBackupInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.LogBackupInterval }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput) SnapshotsPerDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleContinuousSchedule) *int { return v.SnapshotsPerDay }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleContinuousSchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleContinuousSchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailySchedule struct {
	Enabled *bool `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray and NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray []NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleDailySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleDailySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleDailySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleDailySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlySchedule struct {
	DayOfMonth *int  `pulumi:"dayOfMonth"`
	Enabled    *bool `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput  `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray and NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray []NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleMonthlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleMonthlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleMonthlySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleMonthlySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelySchedule struct {
	DayOfMonth      *int    `pulumi:"dayOfMonth"`
	Enabled         *bool   `pulumi:"enabled"`
	StartMonth      *string `pulumi:"startMonth"`
	StartMonthValue *string `pulumi:"startMonthValue"`
}

// NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs struct {
	DayOfMonth      pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
	StartMonth      pulumi.StringPtrInput `pulumi:"startMonth"`
	StartMonthValue pulumi.StringPtrInput `pulumi:"startMonthValue"`
}

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray and NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray []NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonth }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput) StartMonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleQuartelySchedule) *string { return v.StartMonthValue }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleQuartelySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleQuartelySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay struct {
	Extra   *bool `pulumi:"extra"`
	Hours   *int  `pulumi:"hours"`
	Minutes *int  `pulumi:"minutes"`
	Seconds *int  `pulumi:"seconds"`
}

// NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs and NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...}
type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs struct {
	Extra   pulumi.BoolPtrInput `pulumi:"extra"`
	Hours   pulumi.IntPtrInput  `pulumi:"hours"`
	Minutes pulumi.IntPtrInput  `pulumi:"minutes"`
	Seconds pulumi.IntPtrInput  `pulumi:"seconds"`
}

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

// NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray and NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{ NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray []NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Extra() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *bool { return v.Extra }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput() NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDay)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklySchedule struct {
	DayOfWeek      *string `pulumi:"dayOfWeek"`
	DayOfWeekValue *string `pulumi:"dayOfWeekValue"`
	Enabled        *bool   `pulumi:"enabled"`
}

// NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs struct {
	DayOfWeek      pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	DayOfWeekValue pulumi.StringPtrInput `pulumi:"dayOfWeekValue"`
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray and NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray []NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) DayOfWeekValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *string { return v.DayOfWeekValue }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleWeeklySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleWeeklySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleWeeklySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlySchedule struct {
	DayOfMonth *int    `pulumi:"dayOfMonth"`
	Enabled    *bool   `pulumi:"enabled"`
	Month      *string `pulumi:"month"`
	MonthValue *string `pulumi:"monthValue"`
}

// NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs and NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{...}
type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput
	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs struct {
	DayOfMonth pulumi.IntPtrInput    `pulumi:"dayOfMonth"`
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	Month      pulumi.StringPtrInput `pulumi:"month"`
	MonthValue pulumi.StringPtrInput `pulumi:"monthValue"`
}

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

// NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray and NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray{ NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{...} }
type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
	ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray []NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) Month() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *string { return v.Month }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput) MonthValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineScheduleYearlySchedule) *string { return v.MonthValue }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput() NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) ToNdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineScheduleYearlySchedule {
		return vs[0].([]NdbScaleDatabaseTimeMachineScheduleYearlySchedule)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput)
}

type NdbScaleDatabaseTimeMachineSla struct {
	ContinuousRetention    *int    `pulumi:"continuousRetention"`
	CurrentActiveFrequency *string `pulumi:"currentActiveFrequency"`
	DailyRetention         *int    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated *string `pulumi:"dateCreated"`
	// date modified for instance
	DateModified *string `pulumi:"dateModified"`
	// description of database instance
	Description      *string `pulumi:"description"`
	Id               *string `pulumi:"id"`
	MonthlyRetention *int    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               *string `pulumi:"name"`
	OwnerId            *string `pulumi:"ownerId"`
	PitrEnabled        *bool   `pulumi:"pitrEnabled"`
	QuarterlyRetention *int    `pulumi:"quarterlyRetention"`
	ReferenceCount     *int    `pulumi:"referenceCount"`
	SystemSla          *bool   `pulumi:"systemSla"`
	UniqueName         *string `pulumi:"uniqueName"`
	WeeklyRetention    *int    `pulumi:"weeklyRetention"`
	YearlyRetention    *int    `pulumi:"yearlyRetention"`
}

// NdbScaleDatabaseTimeMachineSlaInput is an input type that accepts NdbScaleDatabaseTimeMachineSlaArgs and NdbScaleDatabaseTimeMachineSlaOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineSlaInput` via:
//
//	NdbScaleDatabaseTimeMachineSlaArgs{...}
type NdbScaleDatabaseTimeMachineSlaInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput
	ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineSlaOutput
}

type NdbScaleDatabaseTimeMachineSlaArgs struct {
	ContinuousRetention    pulumi.IntPtrInput    `pulumi:"continuousRetention"`
	CurrentActiveFrequency pulumi.StringPtrInput `pulumi:"currentActiveFrequency"`
	DailyRetention         pulumi.IntPtrInput    `pulumi:"dailyRetention"`
	// date created for db instance
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified for instance
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// description of database instance
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MonthlyRetention pulumi.IntPtrInput    `pulumi:"monthlyRetention"`
	// Name of database instance
	Name               pulumi.StringPtrInput `pulumi:"name"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	PitrEnabled        pulumi.BoolPtrInput   `pulumi:"pitrEnabled"`
	QuarterlyRetention pulumi.IntPtrInput    `pulumi:"quarterlyRetention"`
	ReferenceCount     pulumi.IntPtrInput    `pulumi:"referenceCount"`
	SystemSla          pulumi.BoolPtrInput   `pulumi:"systemSla"`
	UniqueName         pulumi.StringPtrInput `pulumi:"uniqueName"`
	WeeklyRetention    pulumi.IntPtrInput    `pulumi:"weeklyRetention"`
	YearlyRetention    pulumi.IntPtrInput    `pulumi:"yearlyRetention"`
}

func (NdbScaleDatabaseTimeMachineSlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineSlaArgs) ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput {
	return i.ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineSlaArgs) ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineSlaOutput)
}

// NdbScaleDatabaseTimeMachineSlaArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineSlaArray and NdbScaleDatabaseTimeMachineSlaArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineSlaArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineSlaArray{ NdbScaleDatabaseTimeMachineSlaArgs{...} }
type NdbScaleDatabaseTimeMachineSlaArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput
	ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput
}

type NdbScaleDatabaseTimeMachineSlaArray []NdbScaleDatabaseTimeMachineSlaInput

func (NdbScaleDatabaseTimeMachineSlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineSlaArray) ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineSlaArray) ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineSlaArrayOutput)
}

type NdbScaleDatabaseTimeMachineSlaOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineSlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ToNdbScaleDatabaseTimeMachineSlaOutput() NdbScaleDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ToNdbScaleDatabaseTimeMachineSlaOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ContinuousRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.ContinuousRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) CurrentActiveFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.CurrentActiveFrequency }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) DailyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.DailyRetention }).(pulumi.IntPtrOutput)
}

// date created for db instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified for instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// description of database instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) MonthlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.MonthlyRetention }).(pulumi.IntPtrOutput)
}

// Name of database instance
func (o NdbScaleDatabaseTimeMachineSlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) PitrEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *bool { return v.PitrEnabled }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) QuarterlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.QuarterlyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) ReferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.ReferenceCount }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) SystemSla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *bool { return v.SystemSla }).(pulumi.BoolPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) WeeklyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.WeeklyRetention }).(pulumi.IntPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineSlaOutput) YearlyRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineSla) *int { return v.YearlyRetention }).(pulumi.IntPtrOutput)
}

type NdbScaleDatabaseTimeMachineSlaArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineSlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineSla)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) ToNdbScaleDatabaseTimeMachineSlaArrayOutput() NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) ToNdbScaleDatabaseTimeMachineSlaArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineSlaArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineSlaArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineSlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineSla {
		return vs[0].([]NdbScaleDatabaseTimeMachineSla)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineSlaOutput)
}

type NdbScaleDatabaseTimeMachineTag struct {
	EntityId   *string `pulumi:"entityId"`
	EntityType *string `pulumi:"entityType"`
	TagId      *string `pulumi:"tagId"`
	TagName    *string `pulumi:"tagName"`
	Value      *string `pulumi:"value"`
}

// NdbScaleDatabaseTimeMachineTagInput is an input type that accepts NdbScaleDatabaseTimeMachineTagArgs and NdbScaleDatabaseTimeMachineTagOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineTagInput` via:
//
//	NdbScaleDatabaseTimeMachineTagArgs{...}
type NdbScaleDatabaseTimeMachineTagInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput
	ToNdbScaleDatabaseTimeMachineTagOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineTagOutput
}

type NdbScaleDatabaseTimeMachineTagArgs struct {
	EntityId   pulumi.StringPtrInput `pulumi:"entityId"`
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	TagId      pulumi.StringPtrInput `pulumi:"tagId"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
	Value      pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbScaleDatabaseTimeMachineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineTagArgs) ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput {
	return i.ToNdbScaleDatabaseTimeMachineTagOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineTagArgs) ToNdbScaleDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineTagOutput)
}

// NdbScaleDatabaseTimeMachineTagArrayInput is an input type that accepts NdbScaleDatabaseTimeMachineTagArray and NdbScaleDatabaseTimeMachineTagArrayOutput values.
// You can construct a concrete instance of `NdbScaleDatabaseTimeMachineTagArrayInput` via:
//
//	NdbScaleDatabaseTimeMachineTagArray{ NdbScaleDatabaseTimeMachineTagArgs{...} }
type NdbScaleDatabaseTimeMachineTagArrayInput interface {
	pulumi.Input

	ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput
	ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput
}

type NdbScaleDatabaseTimeMachineTagArray []NdbScaleDatabaseTimeMachineTagInput

func (NdbScaleDatabaseTimeMachineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (i NdbScaleDatabaseTimeMachineTagArray) ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return i.ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(context.Background())
}

func (i NdbScaleDatabaseTimeMachineTagArray) ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbScaleDatabaseTimeMachineTagArrayOutput)
}

type NdbScaleDatabaseTimeMachineTagOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineTagOutput) ToNdbScaleDatabaseTimeMachineTagOutput() NdbScaleDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagOutput) ToNdbScaleDatabaseTimeMachineTagOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) TagId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.TagId }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func (o NdbScaleDatabaseTimeMachineTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbScaleDatabaseTimeMachineTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbScaleDatabaseTimeMachineTagArrayOutput struct{ *pulumi.OutputState }

func (NdbScaleDatabaseTimeMachineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbScaleDatabaseTimeMachineTag)(nil)).Elem()
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) ToNdbScaleDatabaseTimeMachineTagArrayOutput() NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) ToNdbScaleDatabaseTimeMachineTagArrayOutputWithContext(ctx context.Context) NdbScaleDatabaseTimeMachineTagArrayOutput {
	return o
}

func (o NdbScaleDatabaseTimeMachineTagArrayOutput) Index(i pulumi.IntInput) NdbScaleDatabaseTimeMachineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbScaleDatabaseTimeMachineTag {
		return vs[0].([]NdbScaleDatabaseTimeMachineTag)[vs[1].(int)]
	}).(NdbScaleDatabaseTimeMachineTagOutput)
}

type NdbSoftwareVersionProfilePostgresDatabase struct {
	// db software notes
	DbSoftwareNotes *string `pulumi:"dbSoftwareNotes"`
	// os notes for software profile
	OsNotes *string `pulumi:"osNotes"`
	// source dbserver id
	SourceDbserverId *string `pulumi:"sourceDbserverId"`
}

// NdbSoftwareVersionProfilePostgresDatabaseInput is an input type that accepts NdbSoftwareVersionProfilePostgresDatabaseArgs and NdbSoftwareVersionProfilePostgresDatabaseOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePostgresDatabaseInput` via:
//
//	NdbSoftwareVersionProfilePostgresDatabaseArgs{...}
type NdbSoftwareVersionProfilePostgresDatabaseInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput
	ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput
}

type NdbSoftwareVersionProfilePostgresDatabaseArgs struct {
	// db software notes
	DbSoftwareNotes pulumi.StringPtrInput `pulumi:"dbSoftwareNotes"`
	// os notes for software profile
	OsNotes pulumi.StringPtrInput `pulumi:"osNotes"`
	// source dbserver id
	SourceDbserverId pulumi.StringPtrInput `pulumi:"sourceDbserverId"`
}

func (NdbSoftwareVersionProfilePostgresDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArgs) ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return i.ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArgs) ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePostgresDatabaseOutput)
}

// NdbSoftwareVersionProfilePostgresDatabaseArrayInput is an input type that accepts NdbSoftwareVersionProfilePostgresDatabaseArray and NdbSoftwareVersionProfilePostgresDatabaseArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePostgresDatabaseArrayInput` via:
//
//	NdbSoftwareVersionProfilePostgresDatabaseArray{ NdbSoftwareVersionProfilePostgresDatabaseArgs{...} }
type NdbSoftwareVersionProfilePostgresDatabaseArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput
	ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput
}

type NdbSoftwareVersionProfilePostgresDatabaseArray []NdbSoftwareVersionProfilePostgresDatabaseInput

func (NdbSoftwareVersionProfilePostgresDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArray) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return i.ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePostgresDatabaseArray) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePostgresDatabaseArrayOutput)
}

type NdbSoftwareVersionProfilePostgresDatabaseOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePostgresDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) ToNdbSoftwareVersionProfilePostgresDatabaseOutput() NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) ToNdbSoftwareVersionProfilePostgresDatabaseOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return o
}

// db software notes
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) DbSoftwareNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.DbSoftwareNotes }).(pulumi.StringPtrOutput)
}

// os notes for software profile
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) OsNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.OsNotes }).(pulumi.StringPtrOutput)
}

// source dbserver id
func (o NdbSoftwareVersionProfilePostgresDatabaseOutput) SourceDbserverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfilePostgresDatabase) *string { return v.SourceDbserverId }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfilePostgresDatabaseArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfilePostgresDatabase)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutput() NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) ToNdbSoftwareVersionProfilePostgresDatabaseArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePostgresDatabaseArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePostgresDatabaseArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfilePostgresDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfilePostgresDatabase {
		return vs[0].([]NdbSoftwareVersionProfilePostgresDatabase)[vs[1].(int)]
	}).(NdbSoftwareVersionProfilePostgresDatabaseOutput)
}

type NdbSoftwareVersionProfileProperty struct {
	// Name of profile
	Name *string `pulumi:"name"`
	// secure or not
	Secure *bool `pulumi:"secure"`
	// value of property
	Value *string `pulumi:"value"`
}

// NdbSoftwareVersionProfilePropertyInput is an input type that accepts NdbSoftwareVersionProfilePropertyArgs and NdbSoftwareVersionProfilePropertyOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePropertyInput` via:
//
//	NdbSoftwareVersionProfilePropertyArgs{...}
type NdbSoftwareVersionProfilePropertyInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput
	ToNdbSoftwareVersionProfilePropertyOutputWithContext(context.Context) NdbSoftwareVersionProfilePropertyOutput
}

type NdbSoftwareVersionProfilePropertyArgs struct {
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// secure or not
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// value of property
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbSoftwareVersionProfilePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePropertyArgs) ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput {
	return i.ToNdbSoftwareVersionProfilePropertyOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePropertyArgs) ToNdbSoftwareVersionProfilePropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePropertyOutput)
}

// NdbSoftwareVersionProfilePropertyArrayInput is an input type that accepts NdbSoftwareVersionProfilePropertyArray and NdbSoftwareVersionProfilePropertyArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfilePropertyArrayInput` via:
//
//	NdbSoftwareVersionProfilePropertyArray{ NdbSoftwareVersionProfilePropertyArgs{...} }
type NdbSoftwareVersionProfilePropertyArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput
	ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(context.Context) NdbSoftwareVersionProfilePropertyArrayOutput
}

type NdbSoftwareVersionProfilePropertyArray []NdbSoftwareVersionProfilePropertyInput

func (NdbSoftwareVersionProfilePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfilePropertyArray) ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput {
	return i.ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfilePropertyArray) ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfilePropertyArrayOutput)
}

type NdbSoftwareVersionProfilePropertyOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePropertyOutput) ToNdbSoftwareVersionProfilePropertyOutput() NdbSoftwareVersionProfilePropertyOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyOutput) ToNdbSoftwareVersionProfilePropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyOutput {
	return o
}

// Name of profile
func (o NdbSoftwareVersionProfilePropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// secure or not
func (o NdbSoftwareVersionProfilePropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// value of property
func (o NdbSoftwareVersionProfilePropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfilePropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfilePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) ToNdbSoftwareVersionProfilePropertyArrayOutput() NdbSoftwareVersionProfilePropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) ToNdbSoftwareVersionProfilePropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfilePropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfilePropertyArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfilePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileProperty {
		return vs[0].([]NdbSoftwareVersionProfileProperty)[vs[1].(int)]
	}).(NdbSoftwareVersionProfilePropertyOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociation struct {
	// date created of profile
	DateCreated *string `pulumi:"dateCreated"`
	// date modified of profile
	DateModified *string `pulumi:"dateModified"`
	// nutanix cluster id
	NxClusterId *string `pulumi:"nxClusterId"`
	// version optimized for provisioning
	OptimizedForProvisioning *bool `pulumi:"optimizedForProvisioning"`
	// owner id
	OwnerId *string `pulumi:"ownerId"`
	// profile version id
	ProfileVersionId *string `pulumi:"profileVersionId"`
	// properties of software profile
	Properties []NdbSoftwareVersionProfileVersionClusterAssociationProperty `pulumi:"properties"`
	// status of profile. Allowed Values are "deprecated", "published", "unpublished"
	Status *string `pulumi:"status"`
}

// NdbSoftwareVersionProfileVersionClusterAssociationInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationArgs and NdbSoftwareVersionProfileVersionClusterAssociationOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationArgs{...}
type NdbSoftwareVersionProfileVersionClusterAssociationInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationArgs struct {
	// date created of profile
	DateCreated pulumi.StringPtrInput `pulumi:"dateCreated"`
	// date modified of profile
	DateModified pulumi.StringPtrInput `pulumi:"dateModified"`
	// nutanix cluster id
	NxClusterId pulumi.StringPtrInput `pulumi:"nxClusterId"`
	// version optimized for provisioning
	OptimizedForProvisioning pulumi.BoolPtrInput `pulumi:"optimizedForProvisioning"`
	// owner id
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// profile version id
	ProfileVersionId pulumi.StringPtrInput `pulumi:"profileVersionId"`
	// properties of software profile
	Properties NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput `pulumi:"properties"`
	// status of profile. Allowed Values are "deprecated", "published", "unpublished"
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (NdbSoftwareVersionProfileVersionClusterAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationOutput)
}

// NdbSoftwareVersionProfileVersionClusterAssociationArrayInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationArray and NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationArrayInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationArray{ NdbSoftwareVersionProfileVersionClusterAssociationArgs{...} }
type NdbSoftwareVersionProfileVersionClusterAssociationArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationArray []NdbSoftwareVersionProfileVersionClusterAssociationInput

func (NdbSoftwareVersionProfileVersionClusterAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArray) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationArray) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationOutput() NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return o
}

// date created of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// date modified of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) DateModified() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.DateModified }).(pulumi.StringPtrOutput)
}

// nutanix cluster id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) NxClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.NxClusterId }).(pulumi.StringPtrOutput)
}

// version optimized for provisioning
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) OptimizedForProvisioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *bool { return v.OptimizedForProvisioning }).(pulumi.BoolPtrOutput)
}

// owner id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// profile version id
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) ProfileVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.ProfileVersionId }).(pulumi.StringPtrOutput)
}

// properties of software profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) Properties() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) []NdbSoftwareVersionProfileVersionClusterAssociationProperty {
		return v.Properties
	}).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput)
}

// status of profile. Allowed Values are "deprecated", "published", "unpublished"
func (o NdbSoftwareVersionProfileVersionClusterAssociationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociation)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfileVersionClusterAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileVersionClusterAssociation {
		return vs[0].([]NdbSoftwareVersionProfileVersionClusterAssociation)[vs[1].(int)]
	}).(NdbSoftwareVersionProfileVersionClusterAssociationOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationProperty struct {
	// Name of profile
	Name *string `pulumi:"name"`
	// secure or not
	Secure *bool `pulumi:"secure"`
	// value of property
	Value *string `pulumi:"value"`
}

// NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs and NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{...}
type NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs struct {
	// Name of profile
	Name pulumi.StringPtrInput `pulumi:"name"`
	// secure or not
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// value of property
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput)
}

// NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput is an input type that accepts NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray and NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput values.
// You can construct a concrete instance of `NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput` via:
//
//	NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray{ NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{...} }
type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput interface {
	pulumi.Input

	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput
	ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray []NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return i.ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(context.Background())
}

func (i NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return o
}

// Name of profile
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// secure or not
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// value of property
func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbSoftwareVersionProfileVersionClusterAssociationProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbSoftwareVersionProfileVersionClusterAssociationProperty)(nil)).Elem()
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput() NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) ToNdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutputWithContext(ctx context.Context) NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput {
	return o
}

func (o NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput) Index(i pulumi.IntInput) NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbSoftwareVersionProfileVersionClusterAssociationProperty {
		return vs[0].([]NdbSoftwareVersionProfileVersionClusterAssociationProperty)[vs[1].(int)]
	}).(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput)
}

type NdbStretchedVlanMetadata struct {
	Gateway    *string `pulumi:"gateway"`
	SubnetMask *string `pulumi:"subnetMask"`
}

// NdbStretchedVlanMetadataInput is an input type that accepts NdbStretchedVlanMetadataArgs and NdbStretchedVlanMetadataOutput values.
// You can construct a concrete instance of `NdbStretchedVlanMetadataInput` via:
//
//	NdbStretchedVlanMetadataArgs{...}
type NdbStretchedVlanMetadataInput interface {
	pulumi.Input

	ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput
	ToNdbStretchedVlanMetadataOutputWithContext(context.Context) NdbStretchedVlanMetadataOutput
}

type NdbStretchedVlanMetadataArgs struct {
	Gateway    pulumi.StringPtrInput `pulumi:"gateway"`
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (NdbStretchedVlanMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanMetadata)(nil)).Elem()
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput {
	return i.ToNdbStretchedVlanMetadataOutputWithContext(context.Background())
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataOutput)
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return i.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (i NdbStretchedVlanMetadataArgs) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataOutput).ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx)
}

// NdbStretchedVlanMetadataPtrInput is an input type that accepts NdbStretchedVlanMetadataArgs, NdbStretchedVlanMetadataPtr and NdbStretchedVlanMetadataPtrOutput values.
// You can construct a concrete instance of `NdbStretchedVlanMetadataPtrInput` via:
//
//	        NdbStretchedVlanMetadataArgs{...}
//
//	or:
//
//	        nil
type NdbStretchedVlanMetadataPtrInput interface {
	pulumi.Input

	ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput
	ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Context) NdbStretchedVlanMetadataPtrOutput
}

type ndbStretchedVlanMetadataPtrType NdbStretchedVlanMetadataArgs

func NdbStretchedVlanMetadataPtr(v *NdbStretchedVlanMetadataArgs) NdbStretchedVlanMetadataPtrInput {
	return (*ndbStretchedVlanMetadataPtrType)(v)
}

func (*ndbStretchedVlanMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbStretchedVlanMetadata)(nil)).Elem()
}

func (i *ndbStretchedVlanMetadataPtrType) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return i.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (i *ndbStretchedVlanMetadataPtrType) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanMetadataPtrOutput)
}

type NdbStretchedVlanMetadataOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanMetadata)(nil)).Elem()
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataOutput() NdbStretchedVlanMetadataOutput {
	return o
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataOutput {
	return o
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return o.ToNdbStretchedVlanMetadataPtrOutputWithContext(context.Background())
}

func (o NdbStretchedVlanMetadataOutput) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NdbStretchedVlanMetadata) *NdbStretchedVlanMetadata {
		return &v
	}).(NdbStretchedVlanMetadataPtrOutput)
}

func (o NdbStretchedVlanMetadataOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanMetadata) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanMetadataOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanMetadata) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanMetadataPtrOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NdbStretchedVlanMetadata)(nil)).Elem()
}

func (o NdbStretchedVlanMetadataPtrOutput) ToNdbStretchedVlanMetadataPtrOutput() NdbStretchedVlanMetadataPtrOutput {
	return o
}

func (o NdbStretchedVlanMetadataPtrOutput) ToNdbStretchedVlanMetadataPtrOutputWithContext(ctx context.Context) NdbStretchedVlanMetadataPtrOutput {
	return o
}

func (o NdbStretchedVlanMetadataPtrOutput) Elem() NdbStretchedVlanMetadataOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) NdbStretchedVlanMetadata {
		if v != nil {
			return *v
		}
		var ret NdbStretchedVlanMetadata
		return ret
	}).(NdbStretchedVlanMetadataOutput)
}

func (o NdbStretchedVlanMetadataPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanMetadataPtrOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NdbStretchedVlanMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SubnetMask
	}).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansList struct {
	// cluster id where network is present
	ClusterId *string `pulumi:"clusterId"`
	// network id
	Id *string `pulumi:"id"`
	// network managed by NDB or not
	Managed *bool `pulumi:"managed"`
	// name for the stretched VLAN
	Name *string `pulumi:"name"`
	// properties of network
	Properties []NdbStretchedVlanVlansListProperty `pulumi:"properties"`
	// properties map of network
	PropertiesMaps []NdbStretchedVlanVlansListPropertiesMap `pulumi:"propertiesMaps"`
	// stretched vlan id
	StretchedVlanId *string `pulumi:"stretchedVlanId"`
	// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
	Type *string `pulumi:"type"`
}

// NdbStretchedVlanVlansListInput is an input type that accepts NdbStretchedVlanVlansListArgs and NdbStretchedVlanVlansListOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListInput` via:
//
//	NdbStretchedVlanVlansListArgs{...}
type NdbStretchedVlanVlansListInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput
	ToNdbStretchedVlanVlansListOutputWithContext(context.Context) NdbStretchedVlanVlansListOutput
}

type NdbStretchedVlanVlansListArgs struct {
	// cluster id where network is present
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// network id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// network managed by NDB or not
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// name for the stretched VLAN
	Name pulumi.StringPtrInput `pulumi:"name"`
	// properties of network
	Properties NdbStretchedVlanVlansListPropertyArrayInput `pulumi:"properties"`
	// properties map of network
	PropertiesMaps NdbStretchedVlanVlansListPropertiesMapArrayInput `pulumi:"propertiesMaps"`
	// stretched vlan id
	StretchedVlanId pulumi.StringPtrInput `pulumi:"stretchedVlanId"`
	// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NdbStretchedVlanVlansListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansList)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListArgs) ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput {
	return i.ToNdbStretchedVlanVlansListOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListArgs) ToNdbStretchedVlanVlansListOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListOutput)
}

// NdbStretchedVlanVlansListArrayInput is an input type that accepts NdbStretchedVlanVlansListArray and NdbStretchedVlanVlansListArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListArrayInput` via:
//
//	NdbStretchedVlanVlansListArray{ NdbStretchedVlanVlansListArgs{...} }
type NdbStretchedVlanVlansListArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput
	ToNdbStretchedVlanVlansListArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListArrayOutput
}

type NdbStretchedVlanVlansListArray []NdbStretchedVlanVlansListInput

func (NdbStretchedVlanVlansListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansList)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListArray) ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput {
	return i.ToNdbStretchedVlanVlansListArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListArray) ToNdbStretchedVlanVlansListArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListArrayOutput)
}

type NdbStretchedVlanVlansListOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansList)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListOutput) ToNdbStretchedVlanVlansListOutput() NdbStretchedVlanVlansListOutput {
	return o
}

func (o NdbStretchedVlanVlansListOutput) ToNdbStretchedVlanVlansListOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListOutput {
	return o
}

// cluster id where network is present
func (o NdbStretchedVlanVlansListOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// network id
func (o NdbStretchedVlanVlansListOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// network managed by NDB or not
func (o NdbStretchedVlanVlansListOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// name for the stretched VLAN
func (o NdbStretchedVlanVlansListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// properties of network
func (o NdbStretchedVlanVlansListOutput) Properties() NdbStretchedVlanVlansListPropertyArrayOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) []NdbStretchedVlanVlansListProperty { return v.Properties }).(NdbStretchedVlanVlansListPropertyArrayOutput)
}

// properties map of network
func (o NdbStretchedVlanVlansListOutput) PropertiesMaps() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) []NdbStretchedVlanVlansListPropertiesMap { return v.PropertiesMaps }).(NdbStretchedVlanVlansListPropertiesMapArrayOutput)
}

// stretched vlan id
func (o NdbStretchedVlanVlansListOutput) StretchedVlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.StretchedVlanId }).(pulumi.StringPtrOutput)
}

// type of vlan. static VLANs that are managed in NDB can be added to a stretched VLAN.
func (o NdbStretchedVlanVlansListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansList)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListArrayOutput) ToNdbStretchedVlanVlansListArrayOutput() NdbStretchedVlanVlansListArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListArrayOutput) ToNdbStretchedVlanVlansListArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansList {
		return vs[0].([]NdbStretchedVlanVlansList)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListOutput)
}

type NdbStretchedVlanVlansListPropertiesMap struct {
	// gateway of vlan
	VlanGateway *string `pulumi:"vlanGateway"`
	// primary dns of vlan
	VlanPrimaryDns *string `pulumi:"vlanPrimaryDns"`
	// secondary dns of vlan
	VlanSecondaryDns *string `pulumi:"vlanSecondaryDns"`
	// subnet mask of vlan
	VlanSubnetMask *string `pulumi:"vlanSubnetMask"`
}

// NdbStretchedVlanVlansListPropertiesMapInput is an input type that accepts NdbStretchedVlanVlansListPropertiesMap and NdbStretchedVlanVlansListPropertiesMapOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertiesMapInput` via:
//
//	NdbStretchedVlanVlansListPropertiesMap{ "key": NdbStretchedVlanVlansListPropertiesArgs{...} }
type NdbStretchedVlanVlansListPropertiesMapInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput
	ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertiesMapOutput
}

type NdbStretchedVlanVlansListPropertiesMapArgs struct {
	// gateway of vlan
	VlanGateway pulumi.StringPtrInput `pulumi:"vlanGateway"`
	// primary dns of vlan
	VlanPrimaryDns pulumi.StringPtrInput `pulumi:"vlanPrimaryDns"`
	// secondary dns of vlan
	VlanSecondaryDns pulumi.StringPtrInput `pulumi:"vlanSecondaryDns"`
	// subnet mask of vlan
	VlanSubnetMask pulumi.StringPtrInput `pulumi:"vlanSubnetMask"`
}

func (NdbStretchedVlanVlansListPropertiesMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertiesMapArgs) ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput {
	return i.ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertiesMapArgs) ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertiesMapOutput)
}

// NdbStretchedVlanVlansListPropertiesMapArrayInput is an input type that accepts NdbStretchedVlanVlansListPropertiesMapArray and NdbStretchedVlanVlansListPropertiesMapArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertiesMapArrayInput` via:
//
//	NdbStretchedVlanVlansListPropertiesMapArray{ NdbStretchedVlanVlansListPropertiesMapArgs{...} }
type NdbStretchedVlanVlansListPropertiesMapArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput
	ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput
}

type NdbStretchedVlanVlansListPropertiesMapArray []NdbStretchedVlanVlansListPropertiesMapInput

func (NdbStretchedVlanVlansListPropertiesMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertiesMapArray) ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return i.ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertiesMapArray) ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertiesMapArrayOutput)
}

type NdbStretchedVlanVlansListPropertiesMapOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertiesMapOutput) ToNdbStretchedVlanVlansListPropertiesMapOutput() NdbStretchedVlanVlansListPropertiesMapOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapOutput) ToNdbStretchedVlanVlansListPropertiesMapOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapOutput {
	return o
}

// gateway of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanGateway }).(pulumi.StringPtrOutput)
}

// primary dns of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanPrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanPrimaryDns }).(pulumi.StringPtrOutput)
}

// secondary dns of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanSecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanSecondaryDns }).(pulumi.StringPtrOutput)
}

// subnet mask of vlan
func (o NdbStretchedVlanVlansListPropertiesMapOutput) VlanSubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListPropertiesMap) *string { return v.VlanSubnetMask }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListPropertiesMapArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertiesMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListPropertiesMap)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) ToNdbStretchedVlanVlansListPropertiesMapArrayOutput() NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) ToNdbStretchedVlanVlansListPropertiesMapArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertiesMapArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertiesMapArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListPropertiesMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansListPropertiesMap {
		return vs[0].([]NdbStretchedVlanVlansListPropertiesMap)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListPropertiesMapOutput)
}

type NdbStretchedVlanVlansListProperty struct {
	// name for the stretched VLAN
	Name   *string `pulumi:"name"`
	Secure *bool   `pulumi:"secure"`
	Value  *string `pulumi:"value"`
}

// NdbStretchedVlanVlansListPropertyInput is an input type that accepts NdbStretchedVlanVlansListPropertyArgs and NdbStretchedVlanVlansListPropertyOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertyInput` via:
//
//	NdbStretchedVlanVlansListPropertyArgs{...}
type NdbStretchedVlanVlansListPropertyInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput
	ToNdbStretchedVlanVlansListPropertyOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertyOutput
}

type NdbStretchedVlanVlansListPropertyArgs struct {
	// name for the stretched VLAN
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Secure pulumi.BoolPtrInput   `pulumi:"secure"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (NdbStretchedVlanVlansListPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertyArgs) ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput {
	return i.ToNdbStretchedVlanVlansListPropertyOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertyArgs) ToNdbStretchedVlanVlansListPropertyOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertyOutput)
}

// NdbStretchedVlanVlansListPropertyArrayInput is an input type that accepts NdbStretchedVlanVlansListPropertyArray and NdbStretchedVlanVlansListPropertyArrayOutput values.
// You can construct a concrete instance of `NdbStretchedVlanVlansListPropertyArrayInput` via:
//
//	NdbStretchedVlanVlansListPropertyArray{ NdbStretchedVlanVlansListPropertyArgs{...} }
type NdbStretchedVlanVlansListPropertyArrayInput interface {
	pulumi.Input

	ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput
	ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(context.Context) NdbStretchedVlanVlansListPropertyArrayOutput
}

type NdbStretchedVlanVlansListPropertyArray []NdbStretchedVlanVlansListPropertyInput

func (NdbStretchedVlanVlansListPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (i NdbStretchedVlanVlansListPropertyArray) ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput {
	return i.ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(context.Background())
}

func (i NdbStretchedVlanVlansListPropertyArray) ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NdbStretchedVlanVlansListPropertyArrayOutput)
}

type NdbStretchedVlanVlansListPropertyOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertyOutput) ToNdbStretchedVlanVlansListPropertyOutput() NdbStretchedVlanVlansListPropertyOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyOutput) ToNdbStretchedVlanVlansListPropertyOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyOutput {
	return o
}

// name for the stretched VLAN
func (o NdbStretchedVlanVlansListPropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NdbStretchedVlanVlansListPropertyOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o NdbStretchedVlanVlansListPropertyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NdbStretchedVlanVlansListProperty) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NdbStretchedVlanVlansListPropertyArrayOutput struct{ *pulumi.OutputState }

func (NdbStretchedVlanVlansListPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NdbStretchedVlanVlansListProperty)(nil)).Elem()
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) ToNdbStretchedVlanVlansListPropertyArrayOutput() NdbStretchedVlanVlansListPropertyArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) ToNdbStretchedVlanVlansListPropertyArrayOutputWithContext(ctx context.Context) NdbStretchedVlanVlansListPropertyArrayOutput {
	return o
}

func (o NdbStretchedVlanVlansListPropertyArrayOutput) Index(i pulumi.IntInput) NdbStretchedVlanVlansListPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NdbStretchedVlanVlansListProperty {
		return vs[0].([]NdbStretchedVlanVlansListProperty)[vs[1].(int)]
	}).(NdbStretchedVlanVlansListPropertyOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                              `pulumi:"expirationTime"`
	FilterKindLists               []string                                                             `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAdRuleInboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                              `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                              `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                              `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                    `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                              `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                              `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAdRuleInboundAllowListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListArgs and NetworkSecurityRuleAdRuleInboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                        `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                      `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                        `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                        `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                        `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                        `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                        `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                        `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListArray and NetworkSecurityRuleAdRuleInboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListArray{ NetworkSecurityRuleAdRuleInboundAllowListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListArray []NetworkSecurityRuleAdRuleInboundAllowListInput

func (NetworkSecurityRuleAdRuleInboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArray) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListArray) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListOutput() NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterParams() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowList) []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs and NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray and NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray{ NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray []NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs and NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray and NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray{ NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray []NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                               `pulumi:"expirationTime"`
	FilterKindLists               []string                                                              `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAdRuleOutboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                               `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                               `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                               `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                     `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                               `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                               `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListArgs and NetworkSecurityRuleAdRuleOutboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                         `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                       `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                         `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                         `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                         `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                         `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                         `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                         `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListArray and NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListArray{ NetworkSecurityRuleAdRuleOutboundAllowListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListArray []NetworkSecurityRuleAdRuleOutboundAllowListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListOutput() NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterParams() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowList) []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs and NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray and NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray{ NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray []NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs and NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray and NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray{ NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray []NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAdRuleTargetGroupFilterParamInput is an input type that accepts NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs and NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleTargetGroupFilterParamInput` via:
//
//	NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{...}
type NetworkSecurityRuleAdRuleTargetGroupFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput
	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return i.ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput)
}

// NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAdRuleTargetGroupFilterParamArray and NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAdRuleTargetGroupFilterParamArray{ NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{...} }
type NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput
	ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArray []NetworkSecurityRuleAdRuleTargetGroupFilterParamInput

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAdRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleTargetGroupFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAdRuleTargetGroupFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAdRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAdRuleTargetGroupFilterParam {
		return vs[0].([]NetworkSecurityRuleAdRuleTargetGroupFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                               `pulumi:"expirationTime"`
	FilterKindLists               []string                                                              `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAppRuleInboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                               `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                               `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                               `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                     `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                               `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                               `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAppRuleInboundAllowListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListArgs and NetworkSecurityRuleAppRuleInboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                         `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                       `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                         `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                         `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                         `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                         `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                         `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                         `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListArray and NetworkSecurityRuleAppRuleInboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListArray{ NetworkSecurityRuleAppRuleInboundAllowListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListArray []NetworkSecurityRuleAppRuleInboundAllowListInput

func (NetworkSecurityRuleAppRuleInboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArray) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListArray) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListOutput() NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterParams() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowList) []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs and NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray and NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray{ NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray []NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs and NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray and NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray{ NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray []NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowList struct {
	AddressGroupInclusionLists    []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                *string                                                                `pulumi:"expirationTime"`
	FilterKindLists               []string                                                               `pulumi:"filterKindLists"`
	FilterParams                  []NetworkSecurityRuleAppRuleOutboundAllowListFilterParam               `pulumi:"filterParams"`
	FilterType                    *string                                                                `pulumi:"filterType"`
	IcmpTypeCodeLists             []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      *string                                                                `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          *string                                                                `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference map[string]string                                                      `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         *string                                                                `pulumi:"peerSpecificationType"`
	Protocol                      *string                                                                `pulumi:"protocol"`
	ServiceGroupLists             []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList          `pulumi:"udpPortRangeLists"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListArgs and NetworkSecurityRuleAppRuleOutboundAllowListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListArgs struct {
	AddressGroupInclusionLists    NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput `pulumi:"addressGroupInclusionLists"`
	ExpirationTime                pulumi.StringPtrInput                                                          `pulumi:"expirationTime"`
	FilterKindLists               pulumi.StringArrayInput                                                        `pulumi:"filterKindLists"`
	FilterParams                  NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput               `pulumi:"filterParams"`
	FilterType                    pulumi.StringPtrInput                                                          `pulumi:"filterType"`
	IcmpTypeCodeLists             NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput          `pulumi:"icmpTypeCodeLists"`
	IpSubnet                      pulumi.StringPtrInput                                                          `pulumi:"ipSubnet"`
	IpSubnetPrefixLength          pulumi.StringPtrInput                                                          `pulumi:"ipSubnetPrefixLength"`
	NetworkFunctionChainReference pulumi.StringMapInput                                                          `pulumi:"networkFunctionChainReference"`
	PeerSpecificationType         pulumi.StringPtrInput                                                          `pulumi:"peerSpecificationType"`
	Protocol                      pulumi.StringPtrInput                                                          `pulumi:"protocol"`
	ServiceGroupLists             NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput          `pulumi:"serviceGroupLists"`
	TcpPortRangeLists             NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput          `pulumi:"tcpPortRangeLists"`
	UdpPortRangeLists             NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput          `pulumi:"udpPortRangeLists"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListArray and NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListArray{ NetworkSecurityRuleAppRuleOutboundAllowListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListArray []NetworkSecurityRuleAppRuleOutboundAllowListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListOutput() NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) AddressGroupInclusionLists() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList {
		return v.AddressGroupInclusionLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterKindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []string { return v.FilterKindLists }).(pulumi.StringArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterParams() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListFilterParam {
		return v.FilterParams
	}).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.FilterType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IcmpTypeCodeLists() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList {
		return v.IcmpTypeCodeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IpSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.IpSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) IpSubnetPrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.IpSubnetPrefixLength }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) NetworkFunctionChainReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) map[string]string {
		return v.NetworkFunctionChainReference
	}).(pulumi.StringMapOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) PeerSpecificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.PeerSpecificationType }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) ServiceGroupLists() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList {
		return v.ServiceGroupLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) TcpPortRangeLists() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList {
		return v.TcpPortRangeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListOutput) UdpPortRangeLists() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowList) []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList {
		return v.UdpPortRangeLists
	}).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs and NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray and NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray{ NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray []NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs and NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray and NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray{ NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray []NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList struct {
	Code *string `pulumi:"code"`
	Type *string `pulumi:"type"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs struct {
	Code pulumi.StringPtrInput `pulumi:"code"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray and NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray []NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList struct {
	// - The kind name (Default value: project)(Required).
	Kind *string `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name *string `pulumi:"name"`
	// - the UUID(Required).
	Uuid *string `pulumi:"uuid"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs and NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs struct {
	// - The kind name (Default value: project)(Required).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// - (Required) The name for the network_security_rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// - the UUID(Required).
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray and NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray{ NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray []NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return o
}

// - The kind name (Default value: project)(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// - the UUID(Required).
func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray and NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray []NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs and NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{...}
type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput)
}

// NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput is an input type that accepts NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray and NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput` via:
//
//	NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray{ NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{...} }
type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput
	ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray []NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput() NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) ToNetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList {
		return vs[0].([]NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeList)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleAppRuleTargetGroupFilterParamInput is an input type that accepts NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs and NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleTargetGroupFilterParamInput` via:
//
//	NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{...}
type NetworkSecurityRuleAppRuleTargetGroupFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput
	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return i.ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput)
}

// NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput is an input type that accepts NetworkSecurityRuleAppRuleTargetGroupFilterParamArray and NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput` via:
//
//	NetworkSecurityRuleAppRuleTargetGroupFilterParamArray{ NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{...} }
type NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput
	ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArray []NetworkSecurityRuleAppRuleTargetGroupFilterParamInput

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleAppRuleTargetGroupFilterParamArray) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleTargetGroupFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleAppRuleTargetGroupFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleAppRuleTargetGroupFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput() NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) ToNetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleAppRuleTargetGroupFilterParam {
		return vs[0].([]NetworkSecurityRuleAppRuleTargetGroupFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput)
}

type NetworkSecurityRuleCategory struct {
	// - (Required) The name for the network_security_rule.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// NetworkSecurityRuleCategoryInput is an input type that accepts NetworkSecurityRuleCategoryArgs and NetworkSecurityRuleCategoryOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleCategoryInput` via:
//
//	NetworkSecurityRuleCategoryArgs{...}
type NetworkSecurityRuleCategoryInput interface {
	pulumi.Input

	ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput
	ToNetworkSecurityRuleCategoryOutputWithContext(context.Context) NetworkSecurityRuleCategoryOutput
}

type NetworkSecurityRuleCategoryArgs struct {
	// - (Required) The name for the network_security_rule.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NetworkSecurityRuleCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleCategory)(nil)).Elem()
}

func (i NetworkSecurityRuleCategoryArgs) ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput {
	return i.ToNetworkSecurityRuleCategoryOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleCategoryArgs) ToNetworkSecurityRuleCategoryOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleCategoryOutput)
}

// NetworkSecurityRuleCategoryArrayInput is an input type that accepts NetworkSecurityRuleCategoryArray and NetworkSecurityRuleCategoryArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleCategoryArrayInput` via:
//
//	NetworkSecurityRuleCategoryArray{ NetworkSecurityRuleCategoryArgs{...} }
type NetworkSecurityRuleCategoryArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput
	ToNetworkSecurityRuleCategoryArrayOutputWithContext(context.Context) NetworkSecurityRuleCategoryArrayOutput
}

type NetworkSecurityRuleCategoryArray []NetworkSecurityRuleCategoryInput

func (NetworkSecurityRuleCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleCategory)(nil)).Elem()
}

func (i NetworkSecurityRuleCategoryArray) ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput {
	return i.ToNetworkSecurityRuleCategoryArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleCategoryArray) ToNetworkSecurityRuleCategoryArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleCategoryArrayOutput)
}

type NetworkSecurityRuleCategoryOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleCategory)(nil)).Elem()
}

func (o NetworkSecurityRuleCategoryOutput) ToNetworkSecurityRuleCategoryOutput() NetworkSecurityRuleCategoryOutput {
	return o
}

func (o NetworkSecurityRuleCategoryOutput) ToNetworkSecurityRuleCategoryOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityRuleCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityRuleCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NetworkSecurityRuleCategoryArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleCategory)(nil)).Elem()
}

func (o NetworkSecurityRuleCategoryArrayOutput) ToNetworkSecurityRuleCategoryArrayOutput() NetworkSecurityRuleCategoryArrayOutput {
	return o
}

func (o NetworkSecurityRuleCategoryArrayOutput) ToNetworkSecurityRuleCategoryArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleCategoryArrayOutput {
	return o
}

func (o NetworkSecurityRuleCategoryArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleCategory {
		return vs[0].([]NetworkSecurityRuleCategory)[vs[1].(int)]
	}).(NetworkSecurityRuleCategoryOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput is an input type that accepts NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs and NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput` via:
//
//	NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{...}
type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput
	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return i.ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput)
}

// NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput is an input type that accepts NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray and NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput` via:
//
//	NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray{ NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{...} }
type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput
	ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray []NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleFirstEntityFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleFirstEntityFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleIsolationRuleFirstEntityFilterParam {
		return vs[0].([]NetworkSecurityRuleIsolationRuleFirstEntityFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParam struct {
	// - (Required) The name for the network_security_rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput is an input type that accepts NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs and NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput` via:
//
//	NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{...}
type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput
	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs struct {
	// - (Required) The name for the network_security_rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return i.ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput)
}

// NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput is an input type that accepts NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray and NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput` via:
//
//	NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray{ NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{...} }
type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput interface {
	pulumi.Input

	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput
	ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray []NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return i.ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return o
}

// - (Required) The name for the network_security_rule.
func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleSecondEntityFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityRuleIsolationRuleSecondEntityFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)(nil)).Elem()
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput() NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) ToNetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutputWithContext(ctx context.Context) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput {
	return o
}

func (o NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput) Index(i pulumi.IntInput) NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityRuleIsolationRuleSecondEntityFilterParam {
		return vs[0].([]NetworkSecurityRuleIsolationRuleSecondEntityFilterParam)[vs[1].(int)]
	}).(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput)
}

type PbrDestination struct {
	AddressType  *string `pulumi:"addressType"`
	PrefixLength *int    `pulumi:"prefixLength"`
	SubnetIp     *string `pulumi:"subnetIp"`
}

// PbrDestinationInput is an input type that accepts PbrDestinationArgs and PbrDestinationOutput values.
// You can construct a concrete instance of `PbrDestinationInput` via:
//
//	PbrDestinationArgs{...}
type PbrDestinationInput interface {
	pulumi.Input

	ToPbrDestinationOutput() PbrDestinationOutput
	ToPbrDestinationOutputWithContext(context.Context) PbrDestinationOutput
}

type PbrDestinationArgs struct {
	AddressType  pulumi.StringPtrInput `pulumi:"addressType"`
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	SubnetIp     pulumi.StringPtrInput `pulumi:"subnetIp"`
}

func (PbrDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrDestination)(nil)).Elem()
}

func (i PbrDestinationArgs) ToPbrDestinationOutput() PbrDestinationOutput {
	return i.ToPbrDestinationOutputWithContext(context.Background())
}

func (i PbrDestinationArgs) ToPbrDestinationOutputWithContext(ctx context.Context) PbrDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationOutput)
}

func (i PbrDestinationArgs) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return i.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (i PbrDestinationArgs) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationOutput).ToPbrDestinationPtrOutputWithContext(ctx)
}

// PbrDestinationPtrInput is an input type that accepts PbrDestinationArgs, PbrDestinationPtr and PbrDestinationPtrOutput values.
// You can construct a concrete instance of `PbrDestinationPtrInput` via:
//
//	        PbrDestinationArgs{...}
//
//	or:
//
//	        nil
type PbrDestinationPtrInput interface {
	pulumi.Input

	ToPbrDestinationPtrOutput() PbrDestinationPtrOutput
	ToPbrDestinationPtrOutputWithContext(context.Context) PbrDestinationPtrOutput
}

type pbrDestinationPtrType PbrDestinationArgs

func PbrDestinationPtr(v *PbrDestinationArgs) PbrDestinationPtrInput {
	return (*pbrDestinationPtrType)(v)
}

func (*pbrDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrDestination)(nil)).Elem()
}

func (i *pbrDestinationPtrType) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return i.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (i *pbrDestinationPtrType) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrDestinationPtrOutput)
}

type PbrDestinationOutput struct{ *pulumi.OutputState }

func (PbrDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrDestination)(nil)).Elem()
}

func (o PbrDestinationOutput) ToPbrDestinationOutput() PbrDestinationOutput {
	return o
}

func (o PbrDestinationOutput) ToPbrDestinationOutputWithContext(ctx context.Context) PbrDestinationOutput {
	return o
}

func (o PbrDestinationOutput) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return o.ToPbrDestinationPtrOutputWithContext(context.Background())
}

func (o PbrDestinationOutput) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrDestination) *PbrDestination {
		return &v
	}).(PbrDestinationPtrOutput)
}

func (o PbrDestinationOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrDestination) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

func (o PbrDestinationOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrDestination) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrDestinationOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrDestination) *string { return v.SubnetIp }).(pulumi.StringPtrOutput)
}

type PbrDestinationPtrOutput struct{ *pulumi.OutputState }

func (PbrDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrDestination)(nil)).Elem()
}

func (o PbrDestinationPtrOutput) ToPbrDestinationPtrOutput() PbrDestinationPtrOutput {
	return o
}

func (o PbrDestinationPtrOutput) ToPbrDestinationPtrOutputWithContext(ctx context.Context) PbrDestinationPtrOutput {
	return o
}

func (o PbrDestinationPtrOutput) Elem() PbrDestinationOutput {
	return o.ApplyT(func(v *PbrDestination) PbrDestination {
		if v != nil {
			return *v
		}
		var ret PbrDestination
		return ret
	}).(PbrDestinationOutput)
}

func (o PbrDestinationPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

func (o PbrDestinationPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PbrDestinationPtrOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrDestination) *string {
		if v == nil {
			return nil
		}
		return v.SubnetIp
	}).(pulumi.StringPtrOutput)
}

type PbrProtocolParameters struct {
	Icmp           *PbrProtocolParametersIcmp `pulumi:"icmp"`
	ProtocolNumber *string                    `pulumi:"protocolNumber"`
	Tcp            *PbrProtocolParametersTcp  `pulumi:"tcp"`
	Udp            *PbrProtocolParametersUdp  `pulumi:"udp"`
}

// PbrProtocolParametersInput is an input type that accepts PbrProtocolParametersArgs and PbrProtocolParametersOutput values.
// You can construct a concrete instance of `PbrProtocolParametersInput` via:
//
//	PbrProtocolParametersArgs{...}
type PbrProtocolParametersInput interface {
	pulumi.Input

	ToPbrProtocolParametersOutput() PbrProtocolParametersOutput
	ToPbrProtocolParametersOutputWithContext(context.Context) PbrProtocolParametersOutput
}

type PbrProtocolParametersArgs struct {
	Icmp           PbrProtocolParametersIcmpPtrInput `pulumi:"icmp"`
	ProtocolNumber pulumi.StringPtrInput             `pulumi:"protocolNumber"`
	Tcp            PbrProtocolParametersTcpPtrInput  `pulumi:"tcp"`
	Udp            PbrProtocolParametersUdpPtrInput  `pulumi:"udp"`
}

func (PbrProtocolParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParameters)(nil)).Elem()
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersOutput() PbrProtocolParametersOutput {
	return i.ToPbrProtocolParametersOutputWithContext(context.Background())
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersOutputWithContext(ctx context.Context) PbrProtocolParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersOutput)
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return i.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersArgs) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersOutput).ToPbrProtocolParametersPtrOutputWithContext(ctx)
}

// PbrProtocolParametersPtrInput is an input type that accepts PbrProtocolParametersArgs, PbrProtocolParametersPtr and PbrProtocolParametersPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersPtrInput` via:
//
//	        PbrProtocolParametersArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput
	ToPbrProtocolParametersPtrOutputWithContext(context.Context) PbrProtocolParametersPtrOutput
}

type pbrProtocolParametersPtrType PbrProtocolParametersArgs

func PbrProtocolParametersPtr(v *PbrProtocolParametersArgs) PbrProtocolParametersPtrInput {
	return (*pbrProtocolParametersPtrType)(v)
}

func (*pbrProtocolParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParameters)(nil)).Elem()
}

func (i *pbrProtocolParametersPtrType) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return i.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersPtrType) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersPtrOutput)
}

type PbrProtocolParametersOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParameters)(nil)).Elem()
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersOutput() PbrProtocolParametersOutput {
	return o
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersOutputWithContext(ctx context.Context) PbrProtocolParametersOutput {
	return o
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return o.ToPbrProtocolParametersPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersOutput) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParameters) *PbrProtocolParameters {
		return &v
	}).(PbrProtocolParametersPtrOutput)
}

func (o PbrProtocolParametersOutput) Icmp() PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersIcmp { return v.Icmp }).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersOutput) ProtocolNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *string { return v.ProtocolNumber }).(pulumi.StringPtrOutput)
}

func (o PbrProtocolParametersOutput) Tcp() PbrProtocolParametersTcpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersTcp { return v.Tcp }).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersOutput) Udp() PbrProtocolParametersUdpPtrOutput {
	return o.ApplyT(func(v PbrProtocolParameters) *PbrProtocolParametersUdp { return v.Udp }).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParameters)(nil)).Elem()
}

func (o PbrProtocolParametersPtrOutput) ToPbrProtocolParametersPtrOutput() PbrProtocolParametersPtrOutput {
	return o
}

func (o PbrProtocolParametersPtrOutput) ToPbrProtocolParametersPtrOutputWithContext(ctx context.Context) PbrProtocolParametersPtrOutput {
	return o
}

func (o PbrProtocolParametersPtrOutput) Elem() PbrProtocolParametersOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) PbrProtocolParameters {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParameters
		return ret
	}).(PbrProtocolParametersOutput)
}

func (o PbrProtocolParametersPtrOutput) Icmp() PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersIcmp {
		if v == nil {
			return nil
		}
		return v.Icmp
	}).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) ProtocolNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolNumber
	}).(pulumi.StringPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) Tcp() PbrProtocolParametersTcpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersPtrOutput) Udp() PbrProtocolParametersUdpPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParameters) *PbrProtocolParametersUdp {
		if v == nil {
			return nil
		}
		return v.Udp
	}).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersIcmp struct {
	IcmpCode int `pulumi:"icmpCode"`
	IcmpType int `pulumi:"icmpType"`
}

// PbrProtocolParametersIcmpInput is an input type that accepts PbrProtocolParametersIcmpArgs and PbrProtocolParametersIcmpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersIcmpInput` via:
//
//	PbrProtocolParametersIcmpArgs{...}
type PbrProtocolParametersIcmpInput interface {
	pulumi.Input

	ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput
	ToPbrProtocolParametersIcmpOutputWithContext(context.Context) PbrProtocolParametersIcmpOutput
}

type PbrProtocolParametersIcmpArgs struct {
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
}

func (PbrProtocolParametersIcmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersIcmp)(nil)).Elem()
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput {
	return i.ToPbrProtocolParametersIcmpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpOutput)
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return i.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersIcmpArgs) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpOutput).ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersIcmpPtrInput is an input type that accepts PbrProtocolParametersIcmpArgs, PbrProtocolParametersIcmpPtr and PbrProtocolParametersIcmpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersIcmpPtrInput` via:
//
//	        PbrProtocolParametersIcmpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersIcmpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput
	ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Context) PbrProtocolParametersIcmpPtrOutput
}

type pbrProtocolParametersIcmpPtrType PbrProtocolParametersIcmpArgs

func PbrProtocolParametersIcmpPtr(v *PbrProtocolParametersIcmpArgs) PbrProtocolParametersIcmpPtrInput {
	return (*pbrProtocolParametersIcmpPtrType)(v)
}

func (*pbrProtocolParametersIcmpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersIcmp)(nil)).Elem()
}

func (i *pbrProtocolParametersIcmpPtrType) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return i.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersIcmpPtrType) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersIcmpPtrOutput)
}

type PbrProtocolParametersIcmpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersIcmpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersIcmp)(nil)).Elem()
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpOutput() PbrProtocolParametersIcmpOutput {
	return o
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpOutput {
	return o
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return o.ToPbrProtocolParametersIcmpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersIcmpOutput) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersIcmp) *PbrProtocolParametersIcmp {
		return &v
	}).(PbrProtocolParametersIcmpPtrOutput)
}

func (o PbrProtocolParametersIcmpOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v PbrProtocolParametersIcmp) int { return v.IcmpCode }).(pulumi.IntOutput)
}

func (o PbrProtocolParametersIcmpOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v PbrProtocolParametersIcmp) int { return v.IcmpType }).(pulumi.IntOutput)
}

type PbrProtocolParametersIcmpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersIcmpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersIcmp)(nil)).Elem()
}

func (o PbrProtocolParametersIcmpPtrOutput) ToPbrProtocolParametersIcmpPtrOutput() PbrProtocolParametersIcmpPtrOutput {
	return o
}

func (o PbrProtocolParametersIcmpPtrOutput) ToPbrProtocolParametersIcmpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersIcmpPtrOutput {
	return o
}

func (o PbrProtocolParametersIcmpPtrOutput) Elem() PbrProtocolParametersIcmpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) PbrProtocolParametersIcmp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersIcmp
		return ret
	}).(PbrProtocolParametersIcmpOutput)
}

func (o PbrProtocolParametersIcmpPtrOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) *int {
		if v == nil {
			return nil
		}
		return &v.IcmpCode
	}).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersIcmpPtrOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrProtocolParametersIcmp) *int {
		if v == nil {
			return nil
		}
		return &v.IcmpType
	}).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcp struct {
	DestinationPortRangeLists []PbrProtocolParametersTcpDestinationPortRangeList `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      []PbrProtocolParametersTcpSourcePortRangeList      `pulumi:"sourcePortRangeLists"`
}

// PbrProtocolParametersTcpInput is an input type that accepts PbrProtocolParametersTcpArgs and PbrProtocolParametersTcpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpInput` via:
//
//	PbrProtocolParametersTcpArgs{...}
type PbrProtocolParametersTcpInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput
	ToPbrProtocolParametersTcpOutputWithContext(context.Context) PbrProtocolParametersTcpOutput
}

type PbrProtocolParametersTcpArgs struct {
	DestinationPortRangeLists PbrProtocolParametersTcpDestinationPortRangeListArrayInput `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      PbrProtocolParametersTcpSourcePortRangeListArrayInput      `pulumi:"sourcePortRangeLists"`
}

func (PbrProtocolParametersTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcp)(nil)).Elem()
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput {
	return i.ToPbrProtocolParametersTcpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpOutputWithContext(ctx context.Context) PbrProtocolParametersTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpOutput)
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return i.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpArgs) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpOutput).ToPbrProtocolParametersTcpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersTcpPtrInput is an input type that accepts PbrProtocolParametersTcpArgs, PbrProtocolParametersTcpPtr and PbrProtocolParametersTcpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpPtrInput` via:
//
//	        PbrProtocolParametersTcpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersTcpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput
	ToPbrProtocolParametersTcpPtrOutputWithContext(context.Context) PbrProtocolParametersTcpPtrOutput
}

type pbrProtocolParametersTcpPtrType PbrProtocolParametersTcpArgs

func PbrProtocolParametersTcpPtr(v *PbrProtocolParametersTcpArgs) PbrProtocolParametersTcpPtrInput {
	return (*pbrProtocolParametersTcpPtrType)(v)
}

func (*pbrProtocolParametersTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersTcp)(nil)).Elem()
}

func (i *pbrProtocolParametersTcpPtrType) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return i.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersTcpPtrType) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpPtrOutput)
}

type PbrProtocolParametersTcpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcp)(nil)).Elem()
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpOutput() PbrProtocolParametersTcpOutput {
	return o
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpOutputWithContext(ctx context.Context) PbrProtocolParametersTcpOutput {
	return o
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return o.ToPbrProtocolParametersTcpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersTcpOutput) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersTcp) *PbrProtocolParametersTcp {
		return &v
	}).(PbrProtocolParametersTcpPtrOutput)
}

func (o PbrProtocolParametersTcpOutput) DestinationPortRangeLists() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcp) []PbrProtocolParametersTcpDestinationPortRangeList {
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersTcpOutput) SourcePortRangeLists() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcp) []PbrProtocolParametersTcpSourcePortRangeList {
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersTcp)(nil)).Elem()
}

func (o PbrProtocolParametersTcpPtrOutput) ToPbrProtocolParametersTcpPtrOutput() PbrProtocolParametersTcpPtrOutput {
	return o
}

func (o PbrProtocolParametersTcpPtrOutput) ToPbrProtocolParametersTcpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersTcpPtrOutput {
	return o
}

func (o PbrProtocolParametersTcpPtrOutput) Elem() PbrProtocolParametersTcpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) PbrProtocolParametersTcp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersTcp
		return ret
	}).(PbrProtocolParametersTcpOutput)
}

func (o PbrProtocolParametersTcpPtrOutput) DestinationPortRangeLists() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) []PbrProtocolParametersTcpDestinationPortRangeList {
		if v == nil {
			return nil
		}
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersTcpPtrOutput) SourcePortRangeLists() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersTcp) []PbrProtocolParametersTcpSourcePortRangeList {
		if v == nil {
			return nil
		}
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersTcpDestinationPortRangeListInput is an input type that accepts PbrProtocolParametersTcpDestinationPortRangeListArgs and PbrProtocolParametersTcpDestinationPortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpDestinationPortRangeListInput` via:
//
//	PbrProtocolParametersTcpDestinationPortRangeListArgs{...}
type PbrProtocolParametersTcpDestinationPortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput
	ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput
}

type PbrProtocolParametersTcpDestinationPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersTcpDestinationPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArgs) ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return i.ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArgs) ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpDestinationPortRangeListOutput)
}

// PbrProtocolParametersTcpDestinationPortRangeListArrayInput is an input type that accepts PbrProtocolParametersTcpDestinationPortRangeListArray and PbrProtocolParametersTcpDestinationPortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpDestinationPortRangeListArrayInput` via:
//
//	PbrProtocolParametersTcpDestinationPortRangeListArray{ PbrProtocolParametersTcpDestinationPortRangeListArgs{...} }
type PbrProtocolParametersTcpDestinationPortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput
	ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput
}

type PbrProtocolParametersTcpDestinationPortRangeListArray []PbrProtocolParametersTcpDestinationPortRangeListInput

func (PbrProtocolParametersTcpDestinationPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArray) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return i.ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpDestinationPortRangeListArray) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpDestinationPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) ToPbrProtocolParametersTcpDestinationPortRangeListOutput() PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) ToPbrProtocolParametersTcpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpDestinationPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersTcpDestinationPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpDestinationPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcpDestinationPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutput() PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersTcpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpDestinationPortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersTcpDestinationPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersTcpDestinationPortRangeList {
		return vs[0].([]PbrProtocolParametersTcpDestinationPortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersTcpDestinationPortRangeListOutput)
}

type PbrProtocolParametersTcpSourcePortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersTcpSourcePortRangeListInput is an input type that accepts PbrProtocolParametersTcpSourcePortRangeListArgs and PbrProtocolParametersTcpSourcePortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpSourcePortRangeListInput` via:
//
//	PbrProtocolParametersTcpSourcePortRangeListArgs{...}
type PbrProtocolParametersTcpSourcePortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput
	ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput
}

type PbrProtocolParametersTcpSourcePortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersTcpSourcePortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpSourcePortRangeListArgs) ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput {
	return i.ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpSourcePortRangeListArgs) ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpSourcePortRangeListOutput)
}

// PbrProtocolParametersTcpSourcePortRangeListArrayInput is an input type that accepts PbrProtocolParametersTcpSourcePortRangeListArray and PbrProtocolParametersTcpSourcePortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersTcpSourcePortRangeListArrayInput` via:
//
//	PbrProtocolParametersTcpSourcePortRangeListArray{ PbrProtocolParametersTcpSourcePortRangeListArgs{...} }
type PbrProtocolParametersTcpSourcePortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput
	ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput
}

type PbrProtocolParametersTcpSourcePortRangeListArray []PbrProtocolParametersTcpSourcePortRangeListInput

func (PbrProtocolParametersTcpSourcePortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersTcpSourcePortRangeListArray) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return i.ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersTcpSourcePortRangeListArray) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersTcpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersTcpSourcePortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpSourcePortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) ToPbrProtocolParametersTcpSourcePortRangeListOutput() PbrProtocolParametersTcpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) ToPbrProtocolParametersTcpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpSourcePortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersTcpSourcePortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersTcpSourcePortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersTcpSourcePortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersTcpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutput() PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) ToPbrProtocolParametersTcpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersTcpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersTcpSourcePortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersTcpSourcePortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersTcpSourcePortRangeList {
		return vs[0].([]PbrProtocolParametersTcpSourcePortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersTcpSourcePortRangeListOutput)
}

type PbrProtocolParametersUdp struct {
	DestinationPortRangeLists []PbrProtocolParametersUdpDestinationPortRangeList `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      []PbrProtocolParametersUdpSourcePortRangeList      `pulumi:"sourcePortRangeLists"`
}

// PbrProtocolParametersUdpInput is an input type that accepts PbrProtocolParametersUdpArgs and PbrProtocolParametersUdpOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpInput` via:
//
//	PbrProtocolParametersUdpArgs{...}
type PbrProtocolParametersUdpInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput
	ToPbrProtocolParametersUdpOutputWithContext(context.Context) PbrProtocolParametersUdpOutput
}

type PbrProtocolParametersUdpArgs struct {
	DestinationPortRangeLists PbrProtocolParametersUdpDestinationPortRangeListArrayInput `pulumi:"destinationPortRangeLists"`
	SourcePortRangeLists      PbrProtocolParametersUdpSourcePortRangeListArrayInput      `pulumi:"sourcePortRangeLists"`
}

func (PbrProtocolParametersUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdp)(nil)).Elem()
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput {
	return i.ToPbrProtocolParametersUdpOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpOutputWithContext(ctx context.Context) PbrProtocolParametersUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpOutput)
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return i.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpArgs) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpOutput).ToPbrProtocolParametersUdpPtrOutputWithContext(ctx)
}

// PbrProtocolParametersUdpPtrInput is an input type that accepts PbrProtocolParametersUdpArgs, PbrProtocolParametersUdpPtr and PbrProtocolParametersUdpPtrOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpPtrInput` via:
//
//	        PbrProtocolParametersUdpArgs{...}
//
//	or:
//
//	        nil
type PbrProtocolParametersUdpPtrInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput
	ToPbrProtocolParametersUdpPtrOutputWithContext(context.Context) PbrProtocolParametersUdpPtrOutput
}

type pbrProtocolParametersUdpPtrType PbrProtocolParametersUdpArgs

func PbrProtocolParametersUdpPtr(v *PbrProtocolParametersUdpArgs) PbrProtocolParametersUdpPtrInput {
	return (*pbrProtocolParametersUdpPtrType)(v)
}

func (*pbrProtocolParametersUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersUdp)(nil)).Elem()
}

func (i *pbrProtocolParametersUdpPtrType) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return i.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (i *pbrProtocolParametersUdpPtrType) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpPtrOutput)
}

type PbrProtocolParametersUdpOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdp)(nil)).Elem()
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpOutput() PbrProtocolParametersUdpOutput {
	return o
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpOutputWithContext(ctx context.Context) PbrProtocolParametersUdpOutput {
	return o
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return o.ToPbrProtocolParametersUdpPtrOutputWithContext(context.Background())
}

func (o PbrProtocolParametersUdpOutput) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrProtocolParametersUdp) *PbrProtocolParametersUdp {
		return &v
	}).(PbrProtocolParametersUdpPtrOutput)
}

func (o PbrProtocolParametersUdpOutput) DestinationPortRangeLists() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdp) []PbrProtocolParametersUdpDestinationPortRangeList {
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersUdpOutput) SourcePortRangeLists() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdp) []PbrProtocolParametersUdpSourcePortRangeList {
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpPtrOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrProtocolParametersUdp)(nil)).Elem()
}

func (o PbrProtocolParametersUdpPtrOutput) ToPbrProtocolParametersUdpPtrOutput() PbrProtocolParametersUdpPtrOutput {
	return o
}

func (o PbrProtocolParametersUdpPtrOutput) ToPbrProtocolParametersUdpPtrOutputWithContext(ctx context.Context) PbrProtocolParametersUdpPtrOutput {
	return o
}

func (o PbrProtocolParametersUdpPtrOutput) Elem() PbrProtocolParametersUdpOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) PbrProtocolParametersUdp {
		if v != nil {
			return *v
		}
		var ret PbrProtocolParametersUdp
		return ret
	}).(PbrProtocolParametersUdpOutput)
}

func (o PbrProtocolParametersUdpPtrOutput) DestinationPortRangeLists() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) []PbrProtocolParametersUdpDestinationPortRangeList {
		if v == nil {
			return nil
		}
		return v.DestinationPortRangeLists
	}).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

func (o PbrProtocolParametersUdpPtrOutput) SourcePortRangeLists() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o.ApplyT(func(v *PbrProtocolParametersUdp) []PbrProtocolParametersUdpSourcePortRangeList {
		if v == nil {
			return nil
		}
		return v.SourcePortRangeLists
	}).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersUdpDestinationPortRangeListInput is an input type that accepts PbrProtocolParametersUdpDestinationPortRangeListArgs and PbrProtocolParametersUdpDestinationPortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpDestinationPortRangeListInput` via:
//
//	PbrProtocolParametersUdpDestinationPortRangeListArgs{...}
type PbrProtocolParametersUdpDestinationPortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput
	ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput
}

type PbrProtocolParametersUdpDestinationPortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersUdpDestinationPortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArgs) ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return i.ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArgs) ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpDestinationPortRangeListOutput)
}

// PbrProtocolParametersUdpDestinationPortRangeListArrayInput is an input type that accepts PbrProtocolParametersUdpDestinationPortRangeListArray and PbrProtocolParametersUdpDestinationPortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpDestinationPortRangeListArrayInput` via:
//
//	PbrProtocolParametersUdpDestinationPortRangeListArray{ PbrProtocolParametersUdpDestinationPortRangeListArgs{...} }
type PbrProtocolParametersUdpDestinationPortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput
	ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput
}

type PbrProtocolParametersUdpDestinationPortRangeListArray []PbrProtocolParametersUdpDestinationPortRangeListInput

func (PbrProtocolParametersUdpDestinationPortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArray) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return i.ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpDestinationPortRangeListArray) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpDestinationPortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) ToPbrProtocolParametersUdpDestinationPortRangeListOutput() PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) ToPbrProtocolParametersUdpDestinationPortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpDestinationPortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersUdpDestinationPortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpDestinationPortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersUdpDestinationPortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpDestinationPortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutput() PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) ToPbrProtocolParametersUdpDestinationPortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpDestinationPortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpDestinationPortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersUdpDestinationPortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersUdpDestinationPortRangeList {
		return vs[0].([]PbrProtocolParametersUdpDestinationPortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersUdpDestinationPortRangeListOutput)
}

type PbrProtocolParametersUdpSourcePortRangeList struct {
	EndPort   *int `pulumi:"endPort"`
	StartPort *int `pulumi:"startPort"`
}

// PbrProtocolParametersUdpSourcePortRangeListInput is an input type that accepts PbrProtocolParametersUdpSourcePortRangeListArgs and PbrProtocolParametersUdpSourcePortRangeListOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpSourcePortRangeListInput` via:
//
//	PbrProtocolParametersUdpSourcePortRangeListArgs{...}
type PbrProtocolParametersUdpSourcePortRangeListInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput
	ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput
}

type PbrProtocolParametersUdpSourcePortRangeListArgs struct {
	EndPort   pulumi.IntPtrInput `pulumi:"endPort"`
	StartPort pulumi.IntPtrInput `pulumi:"startPort"`
}

func (PbrProtocolParametersUdpSourcePortRangeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpSourcePortRangeListArgs) ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput {
	return i.ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpSourcePortRangeListArgs) ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpSourcePortRangeListOutput)
}

// PbrProtocolParametersUdpSourcePortRangeListArrayInput is an input type that accepts PbrProtocolParametersUdpSourcePortRangeListArray and PbrProtocolParametersUdpSourcePortRangeListArrayOutput values.
// You can construct a concrete instance of `PbrProtocolParametersUdpSourcePortRangeListArrayInput` via:
//
//	PbrProtocolParametersUdpSourcePortRangeListArray{ PbrProtocolParametersUdpSourcePortRangeListArgs{...} }
type PbrProtocolParametersUdpSourcePortRangeListArrayInput interface {
	pulumi.Input

	ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput
	ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput
}

type PbrProtocolParametersUdpSourcePortRangeListArray []PbrProtocolParametersUdpSourcePortRangeListInput

func (PbrProtocolParametersUdpSourcePortRangeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (i PbrProtocolParametersUdpSourcePortRangeListArray) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return i.ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(context.Background())
}

func (i PbrProtocolParametersUdpSourcePortRangeListArray) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrProtocolParametersUdpSourcePortRangeListArrayOutput)
}

type PbrProtocolParametersUdpSourcePortRangeListOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpSourcePortRangeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) ToPbrProtocolParametersUdpSourcePortRangeListOutput() PbrProtocolParametersUdpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) ToPbrProtocolParametersUdpSourcePortRangeListOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) EndPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpSourcePortRangeList) *int { return v.EndPort }).(pulumi.IntPtrOutput)
}

func (o PbrProtocolParametersUdpSourcePortRangeListOutput) StartPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrProtocolParametersUdpSourcePortRangeList) *int { return v.StartPort }).(pulumi.IntPtrOutput)
}

type PbrProtocolParametersUdpSourcePortRangeListArrayOutput struct{ *pulumi.OutputState }

func (PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PbrProtocolParametersUdpSourcePortRangeList)(nil)).Elem()
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutput() PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) ToPbrProtocolParametersUdpSourcePortRangeListArrayOutputWithContext(ctx context.Context) PbrProtocolParametersUdpSourcePortRangeListArrayOutput {
	return o
}

func (o PbrProtocolParametersUdpSourcePortRangeListArrayOutput) Index(i pulumi.IntInput) PbrProtocolParametersUdpSourcePortRangeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PbrProtocolParametersUdpSourcePortRangeList {
		return vs[0].([]PbrProtocolParametersUdpSourcePortRangeList)[vs[1].(int)]
	}).(PbrProtocolParametersUdpSourcePortRangeListOutput)
}

type PbrSource struct {
	AddressType  *string `pulumi:"addressType"`
	PrefixLength *int    `pulumi:"prefixLength"`
	SubnetIp     *string `pulumi:"subnetIp"`
}

// PbrSourceInput is an input type that accepts PbrSourceArgs and PbrSourceOutput values.
// You can construct a concrete instance of `PbrSourceInput` via:
//
//	PbrSourceArgs{...}
type PbrSourceInput interface {
	pulumi.Input

	ToPbrSourceOutput() PbrSourceOutput
	ToPbrSourceOutputWithContext(context.Context) PbrSourceOutput
}

type PbrSourceArgs struct {
	AddressType  pulumi.StringPtrInput `pulumi:"addressType"`
	PrefixLength pulumi.IntPtrInput    `pulumi:"prefixLength"`
	SubnetIp     pulumi.StringPtrInput `pulumi:"subnetIp"`
}

func (PbrSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrSource)(nil)).Elem()
}

func (i PbrSourceArgs) ToPbrSourceOutput() PbrSourceOutput {
	return i.ToPbrSourceOutputWithContext(context.Background())
}

func (i PbrSourceArgs) ToPbrSourceOutputWithContext(ctx context.Context) PbrSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourceOutput)
}

func (i PbrSourceArgs) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return i.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (i PbrSourceArgs) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourceOutput).ToPbrSourcePtrOutputWithContext(ctx)
}

// PbrSourcePtrInput is an input type that accepts PbrSourceArgs, PbrSourcePtr and PbrSourcePtrOutput values.
// You can construct a concrete instance of `PbrSourcePtrInput` via:
//
//	        PbrSourceArgs{...}
//
//	or:
//
//	        nil
type PbrSourcePtrInput interface {
	pulumi.Input

	ToPbrSourcePtrOutput() PbrSourcePtrOutput
	ToPbrSourcePtrOutputWithContext(context.Context) PbrSourcePtrOutput
}

type pbrSourcePtrType PbrSourceArgs

func PbrSourcePtr(v *PbrSourceArgs) PbrSourcePtrInput {
	return (*pbrSourcePtrType)(v)
}

func (*pbrSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrSource)(nil)).Elem()
}

func (i *pbrSourcePtrType) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return i.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (i *pbrSourcePtrType) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PbrSourcePtrOutput)
}

type PbrSourceOutput struct{ *pulumi.OutputState }

func (PbrSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PbrSource)(nil)).Elem()
}

func (o PbrSourceOutput) ToPbrSourceOutput() PbrSourceOutput {
	return o
}

func (o PbrSourceOutput) ToPbrSourceOutputWithContext(ctx context.Context) PbrSourceOutput {
	return o
}

func (o PbrSourceOutput) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return o.ToPbrSourcePtrOutputWithContext(context.Background())
}

func (o PbrSourceOutput) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PbrSource) *PbrSource {
		return &v
	}).(PbrSourcePtrOutput)
}

func (o PbrSourceOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrSource) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

func (o PbrSourceOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PbrSource) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

func (o PbrSourceOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PbrSource) *string { return v.SubnetIp }).(pulumi.StringPtrOutput)
}

type PbrSourcePtrOutput struct{ *pulumi.OutputState }

func (PbrSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PbrSource)(nil)).Elem()
}

func (o PbrSourcePtrOutput) ToPbrSourcePtrOutput() PbrSourcePtrOutput {
	return o
}

func (o PbrSourcePtrOutput) ToPbrSourcePtrOutputWithContext(ctx context.Context) PbrSourcePtrOutput {
	return o
}

func (o PbrSourcePtrOutput) Elem() PbrSourceOutput {
	return o.ApplyT(func(v *PbrSource) PbrSource {
		if v != nil {
			return *v
		}
		var ret PbrSource
		return ret
	}).(PbrSourceOutput)
}

func (o PbrSourcePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrSource) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

func (o PbrSourcePtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PbrSource) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

func (o PbrSourcePtrOutput) SubnetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PbrSource) *string {
		if v == nil {
			return nil
		}
		return v.SubnetIp
	}).(pulumi.StringPtrOutput)
}

type ProjectAccountReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAccountReferenceListInput is an input type that accepts ProjectAccountReferenceListArgs and ProjectAccountReferenceListOutput values.
// You can construct a concrete instance of `ProjectAccountReferenceListInput` via:
//
//	ProjectAccountReferenceListArgs{...}
type ProjectAccountReferenceListInput interface {
	pulumi.Input

	ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput
	ToProjectAccountReferenceListOutputWithContext(context.Context) ProjectAccountReferenceListOutput
}

type ProjectAccountReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAccountReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAccountReferenceList)(nil)).Elem()
}

func (i ProjectAccountReferenceListArgs) ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput {
	return i.ToProjectAccountReferenceListOutputWithContext(context.Background())
}

func (i ProjectAccountReferenceListArgs) ToProjectAccountReferenceListOutputWithContext(ctx context.Context) ProjectAccountReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAccountReferenceListOutput)
}

// ProjectAccountReferenceListArrayInput is an input type that accepts ProjectAccountReferenceListArray and ProjectAccountReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAccountReferenceListArrayInput` via:
//
//	ProjectAccountReferenceListArray{ ProjectAccountReferenceListArgs{...} }
type ProjectAccountReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput
	ToProjectAccountReferenceListArrayOutputWithContext(context.Context) ProjectAccountReferenceListArrayOutput
}

type ProjectAccountReferenceListArray []ProjectAccountReferenceListInput

func (ProjectAccountReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAccountReferenceList)(nil)).Elem()
}

func (i ProjectAccountReferenceListArray) ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput {
	return i.ToProjectAccountReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAccountReferenceListArray) ToProjectAccountReferenceListArrayOutputWithContext(ctx context.Context) ProjectAccountReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAccountReferenceListArrayOutput)
}

type ProjectAccountReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAccountReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAccountReferenceList)(nil)).Elem()
}

func (o ProjectAccountReferenceListOutput) ToProjectAccountReferenceListOutput() ProjectAccountReferenceListOutput {
	return o
}

func (o ProjectAccountReferenceListOutput) ToProjectAccountReferenceListOutputWithContext(ctx context.Context) ProjectAccountReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAccountReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAccountReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAccountReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAccountReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAccountReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAccountReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAccountReferenceList)(nil)).Elem()
}

func (o ProjectAccountReferenceListArrayOutput) ToProjectAccountReferenceListArrayOutput() ProjectAccountReferenceListArrayOutput {
	return o
}

func (o ProjectAccountReferenceListArrayOutput) ToProjectAccountReferenceListArrayOutputWithContext(ctx context.Context) ProjectAccountReferenceListArrayOutput {
	return o
}

func (o ProjectAccountReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAccountReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAccountReferenceList {
		return vs[0].([]ProjectAccountReferenceList)[vs[1].(int)]
	}).(ProjectAccountReferenceListOutput)
}

type ProjectAcp struct {
	// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
	ContextFilterLists []ProjectAcpContextFilterList `pulumi:"contextFilterLists"`
	// A description for project.
	Description *string           `pulumi:"description"`
	Metadata    map[string]string `pulumi:"metadata"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// Reference to role.
	RoleReference ProjectAcpRoleReference `pulumi:"roleReference"`
	// List of Reference of users groups.
	UserGroupReferenceLists []ProjectAcpUserGroupReferenceList `pulumi:"userGroupReferenceLists"`
	// List of Reference of users.
	UserReferenceLists []ProjectAcpUserReferenceList `pulumi:"userReferenceLists"`
}

// ProjectAcpInput is an input type that accepts ProjectAcpArgs and ProjectAcpOutput values.
// You can construct a concrete instance of `ProjectAcpInput` via:
//
//	ProjectAcpArgs{...}
type ProjectAcpInput interface {
	pulumi.Input

	ToProjectAcpOutput() ProjectAcpOutput
	ToProjectAcpOutputWithContext(context.Context) ProjectAcpOutput
}

type ProjectAcpArgs struct {
	// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
	ContextFilterLists ProjectAcpContextFilterListArrayInput `pulumi:"contextFilterLists"`
	// A description for project.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Metadata    pulumi.StringMapInput `pulumi:"metadata"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to role.
	RoleReference ProjectAcpRoleReferenceInput `pulumi:"roleReference"`
	// List of Reference of users groups.
	UserGroupReferenceLists ProjectAcpUserGroupReferenceListArrayInput `pulumi:"userGroupReferenceLists"`
	// List of Reference of users.
	UserReferenceLists ProjectAcpUserReferenceListArrayInput `pulumi:"userReferenceLists"`
}

func (ProjectAcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcp)(nil)).Elem()
}

func (i ProjectAcpArgs) ToProjectAcpOutput() ProjectAcpOutput {
	return i.ToProjectAcpOutputWithContext(context.Background())
}

func (i ProjectAcpArgs) ToProjectAcpOutputWithContext(ctx context.Context) ProjectAcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpOutput)
}

// ProjectAcpArrayInput is an input type that accepts ProjectAcpArray and ProjectAcpArrayOutput values.
// You can construct a concrete instance of `ProjectAcpArrayInput` via:
//
//	ProjectAcpArray{ ProjectAcpArgs{...} }
type ProjectAcpArrayInput interface {
	pulumi.Input

	ToProjectAcpArrayOutput() ProjectAcpArrayOutput
	ToProjectAcpArrayOutputWithContext(context.Context) ProjectAcpArrayOutput
}

type ProjectAcpArray []ProjectAcpInput

func (ProjectAcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcp)(nil)).Elem()
}

func (i ProjectAcpArray) ToProjectAcpArrayOutput() ProjectAcpArrayOutput {
	return i.ToProjectAcpArrayOutputWithContext(context.Background())
}

func (i ProjectAcpArray) ToProjectAcpArrayOutputWithContext(ctx context.Context) ProjectAcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpArrayOutput)
}

type ProjectAcpOutput struct{ *pulumi.OutputState }

func (ProjectAcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcp)(nil)).Elem()
}

func (o ProjectAcpOutput) ToProjectAcpOutput() ProjectAcpOutput {
	return o
}

func (o ProjectAcpOutput) ToProjectAcpOutputWithContext(ctx context.Context) ProjectAcpOutput {
	return o
}

// The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list.
func (o ProjectAcpOutput) ContextFilterLists() ProjectAcpContextFilterListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpContextFilterList { return v.ContextFilterLists }).(ProjectAcpContextFilterListArrayOutput)
}

// A description for project.
func (o ProjectAcpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcp) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProjectAcpOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectAcp) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name for the project.
func (o ProjectAcpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to role.
func (o ProjectAcpOutput) RoleReference() ProjectAcpRoleReferenceOutput {
	return o.ApplyT(func(v ProjectAcp) ProjectAcpRoleReference { return v.RoleReference }).(ProjectAcpRoleReferenceOutput)
}

// List of Reference of users groups.
func (o ProjectAcpOutput) UserGroupReferenceLists() ProjectAcpUserGroupReferenceListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpUserGroupReferenceList { return v.UserGroupReferenceLists }).(ProjectAcpUserGroupReferenceListArrayOutput)
}

// List of Reference of users.
func (o ProjectAcpOutput) UserReferenceLists() ProjectAcpUserReferenceListArrayOutput {
	return o.ApplyT(func(v ProjectAcp) []ProjectAcpUserReferenceList { return v.UserReferenceLists }).(ProjectAcpUserReferenceListArrayOutput)
}

type ProjectAcpArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcp)(nil)).Elem()
}

func (o ProjectAcpArrayOutput) ToProjectAcpArrayOutput() ProjectAcpArrayOutput {
	return o
}

func (o ProjectAcpArrayOutput) ToProjectAcpArrayOutputWithContext(ctx context.Context) ProjectAcpArrayOutput {
	return o
}

func (o ProjectAcpArrayOutput) Index(i pulumi.IntInput) ProjectAcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcp {
		return vs[0].([]ProjectAcp)[vs[1].(int)]
	}).(ProjectAcpOutput)
}

type ProjectAcpContextFilterList struct {
	// (Required) A list of Entity filter expressions.
	EntityFilterExpressionLists []ProjectAcpContextFilterListEntityFilterExpressionList `pulumi:"entityFilterExpressionLists"`
	// - (Optional) Filter the scope of an Access Control Policy.
	ScopeFilterExpressionLists []ProjectAcpContextFilterListScopeFilterExpressionList `pulumi:"scopeFilterExpressionLists"`
}

// ProjectAcpContextFilterListInput is an input type that accepts ProjectAcpContextFilterListArgs and ProjectAcpContextFilterListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListInput` via:
//
//	ProjectAcpContextFilterListArgs{...}
type ProjectAcpContextFilterListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput
	ToProjectAcpContextFilterListOutputWithContext(context.Context) ProjectAcpContextFilterListOutput
}

type ProjectAcpContextFilterListArgs struct {
	// (Required) A list of Entity filter expressions.
	EntityFilterExpressionLists ProjectAcpContextFilterListEntityFilterExpressionListArrayInput `pulumi:"entityFilterExpressionLists"`
	// - (Optional) Filter the scope of an Access Control Policy.
	ScopeFilterExpressionLists ProjectAcpContextFilterListScopeFilterExpressionListArrayInput `pulumi:"scopeFilterExpressionLists"`
}

func (ProjectAcpContextFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListArgs) ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput {
	return i.ToProjectAcpContextFilterListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListArgs) ToProjectAcpContextFilterListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListOutput)
}

// ProjectAcpContextFilterListArrayInput is an input type that accepts ProjectAcpContextFilterListArray and ProjectAcpContextFilterListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListArrayInput` via:
//
//	ProjectAcpContextFilterListArray{ ProjectAcpContextFilterListArgs{...} }
type ProjectAcpContextFilterListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput
	ToProjectAcpContextFilterListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListArrayOutput
}

type ProjectAcpContextFilterListArray []ProjectAcpContextFilterListInput

func (ProjectAcpContextFilterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListArray) ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput {
	return i.ToProjectAcpContextFilterListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListArray) ToProjectAcpContextFilterListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListArrayOutput)
}

type ProjectAcpContextFilterListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListOutput) ToProjectAcpContextFilterListOutput() ProjectAcpContextFilterListOutput {
	return o
}

func (o ProjectAcpContextFilterListOutput) ToProjectAcpContextFilterListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListOutput {
	return o
}

// (Required) A list of Entity filter expressions.
func (o ProjectAcpContextFilterListOutput) EntityFilterExpressionLists() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterList) []ProjectAcpContextFilterListEntityFilterExpressionList {
		return v.EntityFilterExpressionLists
	}).(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput)
}

// - (Optional) Filter the scope of an Access Control Policy.
func (o ProjectAcpContextFilterListOutput) ScopeFilterExpressionLists() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterList) []ProjectAcpContextFilterListScopeFilterExpressionList {
		return v.ScopeFilterExpressionLists
	}).(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListArrayOutput) ToProjectAcpContextFilterListArrayOutput() ProjectAcpContextFilterListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListArrayOutput) ToProjectAcpContextFilterListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterList {
		return vs[0].([]ProjectAcpContextFilterList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType *string `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListArgs and ProjectAcpContextFilterListEntityFilterExpressionListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the entity type.
	LeftHandSideEntityType pulumi.StringPtrInput `pulumi:"leftHandSideEntityType"`
	// - (Required) The operator in the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArgs) ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArgs) ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListOutput)
}

// ProjectAcpContextFilterListEntityFilterExpressionListArrayInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListArray and ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListArrayInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListArray{ ProjectAcpContextFilterListEntityFilterExpressionListArgs{...} }
type ProjectAcpContextFilterListEntityFilterExpressionListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListArray []ProjectAcpContextFilterListEntityFilterExpressionListInput

func (ProjectAcpContextFilterListEntityFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArray) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListArray) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) ToProjectAcpContextFilterListEntityFilterExpressionListOutput() ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) ToProjectAcpContextFilterListEntityFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the entity type.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) LeftHandSideEntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) *string { return v.LeftHandSideEntityType }).(pulumi.StringPtrOutput)
}

// - (Required) The operator in the filter expression.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o ProjectAcpContextFilterListEntityFilterExpressionListOutput) RightHandSide() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionList) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListEntityFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutput() ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) ToProjectAcpContextFilterListEntityFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListEntityFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterListEntityFilterExpressionList {
		return vs[0].([]ProjectAcpContextFilterListEntityFilterExpressionList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListEntityFilterExpressionListOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) Categories() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) *string {
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSide) []string {
		return v.UuidLists
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Values []string `pulumi:"values"`
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput` via:
//
//	ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput).ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs, ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr and ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
	ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput
}

type projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs

func ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtr(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *projectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		return &v
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories
		return ret
	}).(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionList struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide string `pulumi:"leftHandSide"`
	// - (Required) The operator in the filter expression.
	Operator string `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide `pulumi:"rightHandSide"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListArgs and ProjectAcpContextFilterListScopeFilterExpressionListOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListArgs struct {
	// - (Optional)  The LHS of the filter expression - the scope type.
	LeftHandSide pulumi.StringInput `pulumi:"leftHandSide"`
	// - (Required) The operator in the filter expression.
	Operator pulumi.StringInput `pulumi:"operator"`
	// - (Required) The right hand side (RHS) of an scope expression.
	RightHandSide ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput `pulumi:"rightHandSide"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArgs) ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArgs) ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListOutput)
}

// ProjectAcpContextFilterListScopeFilterExpressionListArrayInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListArray and ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListArrayInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListArray{ ProjectAcpContextFilterListScopeFilterExpressionListArgs{...} }
type ProjectAcpContextFilterListScopeFilterExpressionListArrayInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListArray []ProjectAcpContextFilterListScopeFilterExpressionListInput

func (ProjectAcpContextFilterListScopeFilterExpressionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArray) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListArray) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) ToProjectAcpContextFilterListScopeFilterExpressionListOutput() ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) ToProjectAcpContextFilterListScopeFilterExpressionListOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return o
}

// - (Optional)  The LHS of the filter expression - the scope type.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) LeftHandSide() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) string { return v.LeftHandSide }).(pulumi.StringOutput)
}

// - (Required) The operator in the filter expression.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) string { return v.Operator }).(pulumi.StringOutput)
}

// - (Required) The right hand side (RHS) of an scope expression.
func (o ProjectAcpContextFilterListScopeFilterExpressionListOutput) RightHandSide() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionList) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide {
		return v.RightHandSide
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpContextFilterListScopeFilterExpressionList)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutput() ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) ToProjectAcpContextFilterListScopeFilterExpressionListArrayOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput) Index(i pulumi.IntInput) ProjectAcpContextFilterListScopeFilterExpressionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpContextFilterListScopeFilterExpressionList {
		return vs[0].([]ProjectAcpContextFilterListScopeFilterExpressionList)[vs[1].(int)]
	}).(ProjectAcpContextFilterListScopeFilterExpressionListOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection *string `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists []string `pulumi:"uuidLists"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs struct {
	// - (Optional) The category values represented as a dictionary of key > list of values.
	Categories ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput `pulumi:"categories"`
	// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// - (Optional) The explicit list of UUIDs for the given kind.
	UuidLists pulumi.StringArrayInput `pulumi:"uuidLists"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput {
	return o
}

// - (Optional) The category values represented as a dictionary of key > list of values.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) Categories() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return v.Categories
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// - (Optional)  A representative term for supported groupings of entities. ALL = All the entities of a given kind.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) *string { return v.Collection }).(pulumi.StringPtrOutput)
}

// - (Optional) The explicit list of UUIDs for the given kind.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput) UuidLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSide) []string { return v.UuidLists }).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Values []string `pulumi:"values"`
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput` via:
//
//	ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput).ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx)
}

// ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput is an input type that accepts ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs, ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr and ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput values.
// You can construct a concrete instance of `ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput` via:
//
//	        ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{...}
//
//	or:
//
//	        nil
type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput interface {
	pulumi.Input

	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
	ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput
}

type projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs

func ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtr(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput {
	return (*projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType)(v)
}

func (*projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (i *projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return i.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (i *projectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrType) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(context.Background())
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		return &v
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput struct{ *pulumi.OutputState }

func (ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories)(nil)).Elem()
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) ToProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutputWithContext(ctx context.Context) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput {
	return o
}

func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Elem() ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories {
		if v != nil {
			return *v
		}
		var ret ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories
		return ret
	}).(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput)
}

// The name for the project.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategories) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ProjectAcpRoleReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpRoleReferenceInput is an input type that accepts ProjectAcpRoleReferenceArgs and ProjectAcpRoleReferenceOutput values.
// You can construct a concrete instance of `ProjectAcpRoleReferenceInput` via:
//
//	ProjectAcpRoleReferenceArgs{...}
type ProjectAcpRoleReferenceInput interface {
	pulumi.Input

	ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput
	ToProjectAcpRoleReferenceOutputWithContext(context.Context) ProjectAcpRoleReferenceOutput
}

type ProjectAcpRoleReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpRoleReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpRoleReference)(nil)).Elem()
}

func (i ProjectAcpRoleReferenceArgs) ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput {
	return i.ToProjectAcpRoleReferenceOutputWithContext(context.Background())
}

func (i ProjectAcpRoleReferenceArgs) ToProjectAcpRoleReferenceOutputWithContext(ctx context.Context) ProjectAcpRoleReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpRoleReferenceOutput)
}

type ProjectAcpRoleReferenceOutput struct{ *pulumi.OutputState }

func (ProjectAcpRoleReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpRoleReference)(nil)).Elem()
}

func (o ProjectAcpRoleReferenceOutput) ToProjectAcpRoleReferenceOutput() ProjectAcpRoleReferenceOutput {
	return o
}

func (o ProjectAcpRoleReferenceOutput) ToProjectAcpRoleReferenceOutputWithContext(ctx context.Context) ProjectAcpRoleReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpRoleReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) string { return v.Kind }).(pulumi.StringOutput)
}

// The name for the project.
func (o ProjectAcpRoleReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpRoleReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpRoleReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserGroupReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpUserGroupReferenceListInput is an input type that accepts ProjectAcpUserGroupReferenceListArgs and ProjectAcpUserGroupReferenceListOutput values.
// You can construct a concrete instance of `ProjectAcpUserGroupReferenceListInput` via:
//
//	ProjectAcpUserGroupReferenceListArgs{...}
type ProjectAcpUserGroupReferenceListInput interface {
	pulumi.Input

	ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput
	ToProjectAcpUserGroupReferenceListOutputWithContext(context.Context) ProjectAcpUserGroupReferenceListOutput
}

type ProjectAcpUserGroupReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpUserGroupReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserGroupReferenceListArgs) ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput {
	return i.ToProjectAcpUserGroupReferenceListOutputWithContext(context.Background())
}

func (i ProjectAcpUserGroupReferenceListArgs) ToProjectAcpUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserGroupReferenceListOutput)
}

// ProjectAcpUserGroupReferenceListArrayInput is an input type that accepts ProjectAcpUserGroupReferenceListArray and ProjectAcpUserGroupReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpUserGroupReferenceListArrayInput` via:
//
//	ProjectAcpUserGroupReferenceListArray{ ProjectAcpUserGroupReferenceListArgs{...} }
type ProjectAcpUserGroupReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput
	ToProjectAcpUserGroupReferenceListArrayOutputWithContext(context.Context) ProjectAcpUserGroupReferenceListArrayOutput
}

type ProjectAcpUserGroupReferenceListArray []ProjectAcpUserGroupReferenceListInput

func (ProjectAcpUserGroupReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserGroupReferenceListArray) ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput {
	return i.ToProjectAcpUserGroupReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpUserGroupReferenceListArray) ToProjectAcpUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserGroupReferenceListArrayOutput)
}

type ProjectAcpUserGroupReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserGroupReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserGroupReferenceListOutput) ToProjectAcpUserGroupReferenceListOutput() ProjectAcpUserGroupReferenceListOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListOutput) ToProjectAcpUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpUserGroupReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAcpUserGroupReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpUserGroupReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpUserGroupReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserGroupReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserGroupReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) ToProjectAcpUserGroupReferenceListArrayOutput() ProjectAcpUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) ToProjectAcpUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserGroupReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAcpUserGroupReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpUserGroupReferenceList {
		return vs[0].([]ProjectAcpUserGroupReferenceList)[vs[1].(int)]
	}).(ProjectAcpUserGroupReferenceListOutput)
}

type ProjectAcpUserReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectAcpUserReferenceListInput is an input type that accepts ProjectAcpUserReferenceListArgs and ProjectAcpUserReferenceListOutput values.
// You can construct a concrete instance of `ProjectAcpUserReferenceListInput` via:
//
//	ProjectAcpUserReferenceListArgs{...}
type ProjectAcpUserReferenceListInput interface {
	pulumi.Input

	ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput
	ToProjectAcpUserReferenceListOutputWithContext(context.Context) ProjectAcpUserReferenceListOutput
}

type ProjectAcpUserReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectAcpUserReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserReferenceListArgs) ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput {
	return i.ToProjectAcpUserReferenceListOutputWithContext(context.Background())
}

func (i ProjectAcpUserReferenceListArgs) ToProjectAcpUserReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserReferenceListOutput)
}

// ProjectAcpUserReferenceListArrayInput is an input type that accepts ProjectAcpUserReferenceListArray and ProjectAcpUserReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectAcpUserReferenceListArrayInput` via:
//
//	ProjectAcpUserReferenceListArray{ ProjectAcpUserReferenceListArgs{...} }
type ProjectAcpUserReferenceListArrayInput interface {
	pulumi.Input

	ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput
	ToProjectAcpUserReferenceListArrayOutputWithContext(context.Context) ProjectAcpUserReferenceListArrayOutput
}

type ProjectAcpUserReferenceListArray []ProjectAcpUserReferenceListInput

func (ProjectAcpUserReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserReferenceList)(nil)).Elem()
}

func (i ProjectAcpUserReferenceListArray) ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput {
	return i.ToProjectAcpUserReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectAcpUserReferenceListArray) ToProjectAcpUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectAcpUserReferenceListArrayOutput)
}

type ProjectAcpUserReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectAcpUserReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserReferenceListOutput) ToProjectAcpUserReferenceListOutput() ProjectAcpUserReferenceListOutput {
	return o
}

func (o ProjectAcpUserReferenceListOutput) ToProjectAcpUserReferenceListOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectAcpUserReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectAcpUserReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectAcpUserReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectAcpUserReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectAcpUserReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectAcpUserReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectAcpUserReferenceList)(nil)).Elem()
}

func (o ProjectAcpUserReferenceListArrayOutput) ToProjectAcpUserReferenceListArrayOutput() ProjectAcpUserReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserReferenceListArrayOutput) ToProjectAcpUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectAcpUserReferenceListArrayOutput {
	return o
}

func (o ProjectAcpUserReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectAcpUserReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectAcpUserReferenceList {
		return vs[0].([]ProjectAcpUserReferenceList)[vs[1].(int)]
	}).(ProjectAcpUserReferenceListOutput)
}

type ProjectCategory struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// ProjectCategoryInput is an input type that accepts ProjectCategoryArgs and ProjectCategoryOutput values.
// You can construct a concrete instance of `ProjectCategoryInput` via:
//
//	ProjectCategoryArgs{...}
type ProjectCategoryInput interface {
	pulumi.Input

	ToProjectCategoryOutput() ProjectCategoryOutput
	ToProjectCategoryOutputWithContext(context.Context) ProjectCategoryOutput
}

type ProjectCategoryArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProjectCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCategory)(nil)).Elem()
}

func (i ProjectCategoryArgs) ToProjectCategoryOutput() ProjectCategoryOutput {
	return i.ToProjectCategoryOutputWithContext(context.Background())
}

func (i ProjectCategoryArgs) ToProjectCategoryOutputWithContext(ctx context.Context) ProjectCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCategoryOutput)
}

// ProjectCategoryArrayInput is an input type that accepts ProjectCategoryArray and ProjectCategoryArrayOutput values.
// You can construct a concrete instance of `ProjectCategoryArrayInput` via:
//
//	ProjectCategoryArray{ ProjectCategoryArgs{...} }
type ProjectCategoryArrayInput interface {
	pulumi.Input

	ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput
	ToProjectCategoryArrayOutputWithContext(context.Context) ProjectCategoryArrayOutput
}

type ProjectCategoryArray []ProjectCategoryInput

func (ProjectCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCategory)(nil)).Elem()
}

func (i ProjectCategoryArray) ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput {
	return i.ToProjectCategoryArrayOutputWithContext(context.Background())
}

func (i ProjectCategoryArray) ToProjectCategoryArrayOutputWithContext(ctx context.Context) ProjectCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCategoryArrayOutput)
}

type ProjectCategoryOutput struct{ *pulumi.OutputState }

func (ProjectCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCategory)(nil)).Elem()
}

func (o ProjectCategoryOutput) ToProjectCategoryOutput() ProjectCategoryOutput {
	return o
}

func (o ProjectCategoryOutput) ToProjectCategoryOutputWithContext(ctx context.Context) ProjectCategoryOutput {
	return o
}

// The name for the project.
func (o ProjectCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectCategoryArrayOutput struct{ *pulumi.OutputState }

func (ProjectCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectCategory)(nil)).Elem()
}

func (o ProjectCategoryArrayOutput) ToProjectCategoryArrayOutput() ProjectCategoryArrayOutput {
	return o
}

func (o ProjectCategoryArrayOutput) ToProjectCategoryArrayOutputWithContext(ctx context.Context) ProjectCategoryArrayOutput {
	return o
}

func (o ProjectCategoryArrayOutput) Index(i pulumi.IntInput) ProjectCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectCategory {
		return vs[0].([]ProjectCategory)[vs[1].(int)]
	}).(ProjectCategoryOutput)
}

type ProjectClusterReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectClusterReferenceListInput is an input type that accepts ProjectClusterReferenceListArgs and ProjectClusterReferenceListOutput values.
// You can construct a concrete instance of `ProjectClusterReferenceListInput` via:
//
//	ProjectClusterReferenceListArgs{...}
type ProjectClusterReferenceListInput interface {
	pulumi.Input

	ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput
	ToProjectClusterReferenceListOutputWithContext(context.Context) ProjectClusterReferenceListOutput
}

type ProjectClusterReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectClusterReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectClusterReferenceList)(nil)).Elem()
}

func (i ProjectClusterReferenceListArgs) ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput {
	return i.ToProjectClusterReferenceListOutputWithContext(context.Background())
}

func (i ProjectClusterReferenceListArgs) ToProjectClusterReferenceListOutputWithContext(ctx context.Context) ProjectClusterReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectClusterReferenceListOutput)
}

// ProjectClusterReferenceListArrayInput is an input type that accepts ProjectClusterReferenceListArray and ProjectClusterReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectClusterReferenceListArrayInput` via:
//
//	ProjectClusterReferenceListArray{ ProjectClusterReferenceListArgs{...} }
type ProjectClusterReferenceListArrayInput interface {
	pulumi.Input

	ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput
	ToProjectClusterReferenceListArrayOutputWithContext(context.Context) ProjectClusterReferenceListArrayOutput
}

type ProjectClusterReferenceListArray []ProjectClusterReferenceListInput

func (ProjectClusterReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectClusterReferenceList)(nil)).Elem()
}

func (i ProjectClusterReferenceListArray) ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput {
	return i.ToProjectClusterReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectClusterReferenceListArray) ToProjectClusterReferenceListArrayOutputWithContext(ctx context.Context) ProjectClusterReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectClusterReferenceListArrayOutput)
}

type ProjectClusterReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectClusterReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectClusterReferenceList)(nil)).Elem()
}

func (o ProjectClusterReferenceListOutput) ToProjectClusterReferenceListOutput() ProjectClusterReferenceListOutput {
	return o
}

func (o ProjectClusterReferenceListOutput) ToProjectClusterReferenceListOutputWithContext(ctx context.Context) ProjectClusterReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectClusterReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectClusterReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectClusterReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectClusterReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectClusterReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectClusterReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectClusterReferenceList)(nil)).Elem()
}

func (o ProjectClusterReferenceListArrayOutput) ToProjectClusterReferenceListArrayOutput() ProjectClusterReferenceListArrayOutput {
	return o
}

func (o ProjectClusterReferenceListArrayOutput) ToProjectClusterReferenceListArrayOutputWithContext(ctx context.Context) ProjectClusterReferenceListArrayOutput {
	return o
}

func (o ProjectClusterReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectClusterReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectClusterReferenceList {
		return vs[0].([]ProjectClusterReferenceList)[vs[1].(int)]
	}).(ProjectClusterReferenceListOutput)
}

type ProjectDefaultEnvironmentReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectDefaultEnvironmentReferenceInput is an input type that accepts ProjectDefaultEnvironmentReferenceArgs and ProjectDefaultEnvironmentReferenceOutput values.
// You can construct a concrete instance of `ProjectDefaultEnvironmentReferenceInput` via:
//
//	ProjectDefaultEnvironmentReferenceArgs{...}
type ProjectDefaultEnvironmentReferenceInput interface {
	pulumi.Input

	ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput
	ToProjectDefaultEnvironmentReferenceOutputWithContext(context.Context) ProjectDefaultEnvironmentReferenceOutput
}

type ProjectDefaultEnvironmentReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectDefaultEnvironmentReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput {
	return i.ToProjectDefaultEnvironmentReferenceOutputWithContext(context.Background())
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferenceOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferenceOutput)
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return i.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i ProjectDefaultEnvironmentReferenceArgs) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferenceOutput).ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx)
}

// ProjectDefaultEnvironmentReferencePtrInput is an input type that accepts ProjectDefaultEnvironmentReferenceArgs, ProjectDefaultEnvironmentReferencePtr and ProjectDefaultEnvironmentReferencePtrOutput values.
// You can construct a concrete instance of `ProjectDefaultEnvironmentReferencePtrInput` via:
//
//	        ProjectDefaultEnvironmentReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultEnvironmentReferencePtrInput interface {
	pulumi.Input

	ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput
	ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Context) ProjectDefaultEnvironmentReferencePtrOutput
}

type projectDefaultEnvironmentReferencePtrType ProjectDefaultEnvironmentReferenceArgs

func ProjectDefaultEnvironmentReferencePtr(v *ProjectDefaultEnvironmentReferenceArgs) ProjectDefaultEnvironmentReferencePtrInput {
	return (*projectDefaultEnvironmentReferencePtrType)(v)
}

func (*projectDefaultEnvironmentReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (i *projectDefaultEnvironmentReferencePtrType) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return i.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (i *projectDefaultEnvironmentReferencePtrType) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultEnvironmentReferencePtrOutput)
}

type ProjectDefaultEnvironmentReferenceOutput struct{ *pulumi.OutputState }

func (ProjectDefaultEnvironmentReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferenceOutput() ProjectDefaultEnvironmentReferenceOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferenceOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferenceOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return o.ToProjectDefaultEnvironmentReferencePtrOutputWithContext(context.Background())
}

func (o ProjectDefaultEnvironmentReferenceOutput) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultEnvironmentReference) *ProjectDefaultEnvironmentReference {
		return &v
	}).(ProjectDefaultEnvironmentReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultEnvironmentReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultEnvironmentReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultEnvironmentReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectDefaultEnvironmentReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectDefaultEnvironmentReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultEnvironmentReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultEnvironmentReference)(nil)).Elem()
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) ToProjectDefaultEnvironmentReferencePtrOutput() ProjectDefaultEnvironmentReferencePtrOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) ToProjectDefaultEnvironmentReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultEnvironmentReferencePtrOutput {
	return o
}

func (o ProjectDefaultEnvironmentReferencePtrOutput) Elem() ProjectDefaultEnvironmentReferenceOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) ProjectDefaultEnvironmentReference {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultEnvironmentReference
		return ret
	}).(ProjectDefaultEnvironmentReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultEnvironmentReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultEnvironmentReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultEnvironmentReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultEnvironmentReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectDefaultSubnetReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectDefaultSubnetReferenceInput is an input type that accepts ProjectDefaultSubnetReferenceArgs and ProjectDefaultSubnetReferenceOutput values.
// You can construct a concrete instance of `ProjectDefaultSubnetReferenceInput` via:
//
//	ProjectDefaultSubnetReferenceArgs{...}
type ProjectDefaultSubnetReferenceInput interface {
	pulumi.Input

	ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput
	ToProjectDefaultSubnetReferenceOutputWithContext(context.Context) ProjectDefaultSubnetReferenceOutput
}

type ProjectDefaultSubnetReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectDefaultSubnetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultSubnetReference)(nil)).Elem()
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput {
	return i.ToProjectDefaultSubnetReferenceOutputWithContext(context.Background())
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferenceOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferenceOutput)
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return i.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (i ProjectDefaultSubnetReferenceArgs) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferenceOutput).ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx)
}

// ProjectDefaultSubnetReferencePtrInput is an input type that accepts ProjectDefaultSubnetReferenceArgs, ProjectDefaultSubnetReferencePtr and ProjectDefaultSubnetReferencePtrOutput values.
// You can construct a concrete instance of `ProjectDefaultSubnetReferencePtrInput` via:
//
//	        ProjectDefaultSubnetReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectDefaultSubnetReferencePtrInput interface {
	pulumi.Input

	ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput
	ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Context) ProjectDefaultSubnetReferencePtrOutput
}

type projectDefaultSubnetReferencePtrType ProjectDefaultSubnetReferenceArgs

func ProjectDefaultSubnetReferencePtr(v *ProjectDefaultSubnetReferenceArgs) ProjectDefaultSubnetReferencePtrInput {
	return (*projectDefaultSubnetReferencePtrType)(v)
}

func (*projectDefaultSubnetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultSubnetReference)(nil)).Elem()
}

func (i *projectDefaultSubnetReferencePtrType) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return i.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (i *projectDefaultSubnetReferencePtrType) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectDefaultSubnetReferencePtrOutput)
}

type ProjectDefaultSubnetReferenceOutput struct{ *pulumi.OutputState }

func (ProjectDefaultSubnetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectDefaultSubnetReference)(nil)).Elem()
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferenceOutput() ProjectDefaultSubnetReferenceOutput {
	return o
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferenceOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferenceOutput {
	return o
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return o.ToProjectDefaultSubnetReferencePtrOutputWithContext(context.Background())
}

func (o ProjectDefaultSubnetReferenceOutput) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectDefaultSubnetReference) *ProjectDefaultSubnetReference {
		return &v
	}).(ProjectDefaultSubnetReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultSubnetReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultSubnetReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultSubnetReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectDefaultSubnetReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectDefaultSubnetReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectDefaultSubnetReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectDefaultSubnetReference)(nil)).Elem()
}

func (o ProjectDefaultSubnetReferencePtrOutput) ToProjectDefaultSubnetReferencePtrOutput() ProjectDefaultSubnetReferencePtrOutput {
	return o
}

func (o ProjectDefaultSubnetReferencePtrOutput) ToProjectDefaultSubnetReferencePtrOutputWithContext(ctx context.Context) ProjectDefaultSubnetReferencePtrOutput {
	return o
}

func (o ProjectDefaultSubnetReferencePtrOutput) Elem() ProjectDefaultSubnetReferenceOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) ProjectDefaultSubnetReference {
		if v != nil {
			return *v
		}
		var ret ProjectDefaultSubnetReference
		return ret
	}).(ProjectDefaultSubnetReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectDefaultSubnetReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectDefaultSubnetReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectDefaultSubnetReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectDefaultSubnetReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectEnvironmentReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectEnvironmentReferenceListInput is an input type that accepts ProjectEnvironmentReferenceListArgs and ProjectEnvironmentReferenceListOutput values.
// You can construct a concrete instance of `ProjectEnvironmentReferenceListInput` via:
//
//	ProjectEnvironmentReferenceListArgs{...}
type ProjectEnvironmentReferenceListInput interface {
	pulumi.Input

	ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput
	ToProjectEnvironmentReferenceListOutputWithContext(context.Context) ProjectEnvironmentReferenceListOutput
}

type ProjectEnvironmentReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectEnvironmentReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (i ProjectEnvironmentReferenceListArgs) ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput {
	return i.ToProjectEnvironmentReferenceListOutputWithContext(context.Background())
}

func (i ProjectEnvironmentReferenceListArgs) ToProjectEnvironmentReferenceListOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentReferenceListOutput)
}

// ProjectEnvironmentReferenceListArrayInput is an input type that accepts ProjectEnvironmentReferenceListArray and ProjectEnvironmentReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentReferenceListArrayInput` via:
//
//	ProjectEnvironmentReferenceListArray{ ProjectEnvironmentReferenceListArgs{...} }
type ProjectEnvironmentReferenceListArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput
	ToProjectEnvironmentReferenceListArrayOutputWithContext(context.Context) ProjectEnvironmentReferenceListArrayOutput
}

type ProjectEnvironmentReferenceListArray []ProjectEnvironmentReferenceListInput

func (ProjectEnvironmentReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (i ProjectEnvironmentReferenceListArray) ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput {
	return i.ToProjectEnvironmentReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentReferenceListArray) ToProjectEnvironmentReferenceListArrayOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentReferenceListArrayOutput)
}

type ProjectEnvironmentReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (o ProjectEnvironmentReferenceListOutput) ToProjectEnvironmentReferenceListOutput() ProjectEnvironmentReferenceListOutput {
	return o
}

func (o ProjectEnvironmentReferenceListOutput) ToProjectEnvironmentReferenceListOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectEnvironmentReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectEnvironmentReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectEnvironmentReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectEnvironmentReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentReferenceList)(nil)).Elem()
}

func (o ProjectEnvironmentReferenceListArrayOutput) ToProjectEnvironmentReferenceListArrayOutput() ProjectEnvironmentReferenceListArrayOutput {
	return o
}

func (o ProjectEnvironmentReferenceListArrayOutput) ToProjectEnvironmentReferenceListArrayOutputWithContext(ctx context.Context) ProjectEnvironmentReferenceListArrayOutput {
	return o
}

func (o ProjectEnvironmentReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentReferenceList {
		return vs[0].([]ProjectEnvironmentReferenceList)[vs[1].(int)]
	}).(ProjectEnvironmentReferenceListOutput)
}

type ProjectExternalNetworkList struct {
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectExternalNetworkListInput is an input type that accepts ProjectExternalNetworkListArgs and ProjectExternalNetworkListOutput values.
// You can construct a concrete instance of `ProjectExternalNetworkListInput` via:
//
//	ProjectExternalNetworkListArgs{...}
type ProjectExternalNetworkListInput interface {
	pulumi.Input

	ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput
	ToProjectExternalNetworkListOutputWithContext(context.Context) ProjectExternalNetworkListOutput
}

type ProjectExternalNetworkListArgs struct {
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectExternalNetworkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalNetworkList)(nil)).Elem()
}

func (i ProjectExternalNetworkListArgs) ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput {
	return i.ToProjectExternalNetworkListOutputWithContext(context.Background())
}

func (i ProjectExternalNetworkListArgs) ToProjectExternalNetworkListOutputWithContext(ctx context.Context) ProjectExternalNetworkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalNetworkListOutput)
}

// ProjectExternalNetworkListArrayInput is an input type that accepts ProjectExternalNetworkListArray and ProjectExternalNetworkListArrayOutput values.
// You can construct a concrete instance of `ProjectExternalNetworkListArrayInput` via:
//
//	ProjectExternalNetworkListArray{ ProjectExternalNetworkListArgs{...} }
type ProjectExternalNetworkListArrayInput interface {
	pulumi.Input

	ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput
	ToProjectExternalNetworkListArrayOutputWithContext(context.Context) ProjectExternalNetworkListArrayOutput
}

type ProjectExternalNetworkListArray []ProjectExternalNetworkListInput

func (ProjectExternalNetworkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalNetworkList)(nil)).Elem()
}

func (i ProjectExternalNetworkListArray) ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput {
	return i.ToProjectExternalNetworkListArrayOutputWithContext(context.Background())
}

func (i ProjectExternalNetworkListArray) ToProjectExternalNetworkListArrayOutputWithContext(ctx context.Context) ProjectExternalNetworkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalNetworkListArrayOutput)
}

type ProjectExternalNetworkListOutput struct{ *pulumi.OutputState }

func (ProjectExternalNetworkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalNetworkList)(nil)).Elem()
}

func (o ProjectExternalNetworkListOutput) ToProjectExternalNetworkListOutput() ProjectExternalNetworkListOutput {
	return o
}

func (o ProjectExternalNetworkListOutput) ToProjectExternalNetworkListOutputWithContext(ctx context.Context) ProjectExternalNetworkListOutput {
	return o
}

// The name for the project.
func (o ProjectExternalNetworkListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalNetworkList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectExternalNetworkListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectExternalNetworkList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectExternalNetworkListArrayOutput struct{ *pulumi.OutputState }

func (ProjectExternalNetworkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalNetworkList)(nil)).Elem()
}

func (o ProjectExternalNetworkListArrayOutput) ToProjectExternalNetworkListArrayOutput() ProjectExternalNetworkListArrayOutput {
	return o
}

func (o ProjectExternalNetworkListArrayOutput) ToProjectExternalNetworkListArrayOutputWithContext(ctx context.Context) ProjectExternalNetworkListArrayOutput {
	return o
}

func (o ProjectExternalNetworkListArrayOutput) Index(i pulumi.IntInput) ProjectExternalNetworkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectExternalNetworkList {
		return vs[0].([]ProjectExternalNetworkList)[vs[1].(int)]
	}).(ProjectExternalNetworkListOutput)
}

type ProjectExternalUserGroupReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectExternalUserGroupReferenceListInput is an input type that accepts ProjectExternalUserGroupReferenceListArgs and ProjectExternalUserGroupReferenceListOutput values.
// You can construct a concrete instance of `ProjectExternalUserGroupReferenceListInput` via:
//
//	ProjectExternalUserGroupReferenceListArgs{...}
type ProjectExternalUserGroupReferenceListInput interface {
	pulumi.Input

	ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput
	ToProjectExternalUserGroupReferenceListOutputWithContext(context.Context) ProjectExternalUserGroupReferenceListOutput
}

type ProjectExternalUserGroupReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectExternalUserGroupReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectExternalUserGroupReferenceListArgs) ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput {
	return i.ToProjectExternalUserGroupReferenceListOutputWithContext(context.Background())
}

func (i ProjectExternalUserGroupReferenceListArgs) ToProjectExternalUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalUserGroupReferenceListOutput)
}

// ProjectExternalUserGroupReferenceListArrayInput is an input type that accepts ProjectExternalUserGroupReferenceListArray and ProjectExternalUserGroupReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectExternalUserGroupReferenceListArrayInput` via:
//
//	ProjectExternalUserGroupReferenceListArray{ ProjectExternalUserGroupReferenceListArgs{...} }
type ProjectExternalUserGroupReferenceListArrayInput interface {
	pulumi.Input

	ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput
	ToProjectExternalUserGroupReferenceListArrayOutputWithContext(context.Context) ProjectExternalUserGroupReferenceListArrayOutput
}

type ProjectExternalUserGroupReferenceListArray []ProjectExternalUserGroupReferenceListInput

func (ProjectExternalUserGroupReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (i ProjectExternalUserGroupReferenceListArray) ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput {
	return i.ToProjectExternalUserGroupReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectExternalUserGroupReferenceListArray) ToProjectExternalUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectExternalUserGroupReferenceListArrayOutput)
}

type ProjectExternalUserGroupReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectExternalUserGroupReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectExternalUserGroupReferenceListOutput) ToProjectExternalUserGroupReferenceListOutput() ProjectExternalUserGroupReferenceListOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListOutput) ToProjectExternalUserGroupReferenceListOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectExternalUserGroupReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectExternalUserGroupReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectExternalUserGroupReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectExternalUserGroupReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectExternalUserGroupReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectExternalUserGroupReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectExternalUserGroupReferenceList)(nil)).Elem()
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) ToProjectExternalUserGroupReferenceListArrayOutput() ProjectExternalUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) ToProjectExternalUserGroupReferenceListArrayOutputWithContext(ctx context.Context) ProjectExternalUserGroupReferenceListArrayOutput {
	return o
}

func (o ProjectExternalUserGroupReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectExternalUserGroupReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectExternalUserGroupReferenceList {
		return vs[0].([]ProjectExternalUserGroupReferenceList)[vs[1].(int)]
	}).(ProjectExternalUserGroupReferenceListOutput)
}

type ProjectResourceDomain struct {
	Resources []ProjectResourceDomainResource `pulumi:"resources"`
}

// ProjectResourceDomainInput is an input type that accepts ProjectResourceDomainArgs and ProjectResourceDomainOutput values.
// You can construct a concrete instance of `ProjectResourceDomainInput` via:
//
//	ProjectResourceDomainArgs{...}
type ProjectResourceDomainInput interface {
	pulumi.Input

	ToProjectResourceDomainOutput() ProjectResourceDomainOutput
	ToProjectResourceDomainOutputWithContext(context.Context) ProjectResourceDomainOutput
}

type ProjectResourceDomainArgs struct {
	Resources ProjectResourceDomainResourceArrayInput `pulumi:"resources"`
}

func (ProjectResourceDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomain)(nil)).Elem()
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainOutput() ProjectResourceDomainOutput {
	return i.ToProjectResourceDomainOutputWithContext(context.Background())
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainOutputWithContext(ctx context.Context) ProjectResourceDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainOutput)
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return i.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (i ProjectResourceDomainArgs) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainOutput).ToProjectResourceDomainPtrOutputWithContext(ctx)
}

// ProjectResourceDomainPtrInput is an input type that accepts ProjectResourceDomainArgs, ProjectResourceDomainPtr and ProjectResourceDomainPtrOutput values.
// You can construct a concrete instance of `ProjectResourceDomainPtrInput` via:
//
//	        ProjectResourceDomainArgs{...}
//
//	or:
//
//	        nil
type ProjectResourceDomainPtrInput interface {
	pulumi.Input

	ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput
	ToProjectResourceDomainPtrOutputWithContext(context.Context) ProjectResourceDomainPtrOutput
}

type projectResourceDomainPtrType ProjectResourceDomainArgs

func ProjectResourceDomainPtr(v *ProjectResourceDomainArgs) ProjectResourceDomainPtrInput {
	return (*projectResourceDomainPtrType)(v)
}

func (*projectResourceDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceDomain)(nil)).Elem()
}

func (i *projectResourceDomainPtrType) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return i.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (i *projectResourceDomainPtrType) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainPtrOutput)
}

type ProjectResourceDomainOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomain)(nil)).Elem()
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainOutput() ProjectResourceDomainOutput {
	return o
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainOutputWithContext(ctx context.Context) ProjectResourceDomainOutput {
	return o
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return o.ToProjectResourceDomainPtrOutputWithContext(context.Background())
}

func (o ProjectResourceDomainOutput) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectResourceDomain) *ProjectResourceDomain {
		return &v
	}).(ProjectResourceDomainPtrOutput)
}

func (o ProjectResourceDomainOutput) Resources() ProjectResourceDomainResourceArrayOutput {
	return o.ApplyT(func(v ProjectResourceDomain) []ProjectResourceDomainResource { return v.Resources }).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainPtrOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResourceDomain)(nil)).Elem()
}

func (o ProjectResourceDomainPtrOutput) ToProjectResourceDomainPtrOutput() ProjectResourceDomainPtrOutput {
	return o
}

func (o ProjectResourceDomainPtrOutput) ToProjectResourceDomainPtrOutputWithContext(ctx context.Context) ProjectResourceDomainPtrOutput {
	return o
}

func (o ProjectResourceDomainPtrOutput) Elem() ProjectResourceDomainOutput {
	return o.ApplyT(func(v *ProjectResourceDomain) ProjectResourceDomain {
		if v != nil {
			return *v
		}
		var ret ProjectResourceDomain
		return ret
	}).(ProjectResourceDomainOutput)
}

func (o ProjectResourceDomainPtrOutput) Resources() ProjectResourceDomainResourceArrayOutput {
	return o.ApplyT(func(v *ProjectResourceDomain) []ProjectResourceDomainResource {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainResource struct {
	Limit        int     `pulumi:"limit"`
	ResourceType string  `pulumi:"resourceType"`
	Units        *string `pulumi:"units"`
	// value of the key.
	Value *int `pulumi:"value"`
}

// ProjectResourceDomainResourceInput is an input type that accepts ProjectResourceDomainResourceArgs and ProjectResourceDomainResourceOutput values.
// You can construct a concrete instance of `ProjectResourceDomainResourceInput` via:
//
//	ProjectResourceDomainResourceArgs{...}
type ProjectResourceDomainResourceInput interface {
	pulumi.Input

	ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput
	ToProjectResourceDomainResourceOutputWithContext(context.Context) ProjectResourceDomainResourceOutput
}

type ProjectResourceDomainResourceArgs struct {
	Limit        pulumi.IntInput       `pulumi:"limit"`
	ResourceType pulumi.StringInput    `pulumi:"resourceType"`
	Units        pulumi.StringPtrInput `pulumi:"units"`
	// value of the key.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ProjectResourceDomainResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomainResource)(nil)).Elem()
}

func (i ProjectResourceDomainResourceArgs) ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput {
	return i.ToProjectResourceDomainResourceOutputWithContext(context.Background())
}

func (i ProjectResourceDomainResourceArgs) ToProjectResourceDomainResourceOutputWithContext(ctx context.Context) ProjectResourceDomainResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainResourceOutput)
}

// ProjectResourceDomainResourceArrayInput is an input type that accepts ProjectResourceDomainResourceArray and ProjectResourceDomainResourceArrayOutput values.
// You can construct a concrete instance of `ProjectResourceDomainResourceArrayInput` via:
//
//	ProjectResourceDomainResourceArray{ ProjectResourceDomainResourceArgs{...} }
type ProjectResourceDomainResourceArrayInput interface {
	pulumi.Input

	ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput
	ToProjectResourceDomainResourceArrayOutputWithContext(context.Context) ProjectResourceDomainResourceArrayOutput
}

type ProjectResourceDomainResourceArray []ProjectResourceDomainResourceInput

func (ProjectResourceDomainResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectResourceDomainResource)(nil)).Elem()
}

func (i ProjectResourceDomainResourceArray) ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput {
	return i.ToProjectResourceDomainResourceArrayOutputWithContext(context.Background())
}

func (i ProjectResourceDomainResourceArray) ToProjectResourceDomainResourceArrayOutputWithContext(ctx context.Context) ProjectResourceDomainResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourceDomainResourceArrayOutput)
}

type ProjectResourceDomainResourceOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResourceDomainResource)(nil)).Elem()
}

func (o ProjectResourceDomainResourceOutput) ToProjectResourceDomainResourceOutput() ProjectResourceDomainResourceOutput {
	return o
}

func (o ProjectResourceDomainResourceOutput) ToProjectResourceDomainResourceOutputWithContext(ctx context.Context) ProjectResourceDomainResourceOutput {
	return o
}

func (o ProjectResourceDomainResourceOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) int { return v.Limit }).(pulumi.IntOutput)
}

func (o ProjectResourceDomainResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o ProjectResourceDomainResourceOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) *string { return v.Units }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProjectResourceDomainResourceOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectResourceDomainResource) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ProjectResourceDomainResourceArrayOutput struct{ *pulumi.OutputState }

func (ProjectResourceDomainResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectResourceDomainResource)(nil)).Elem()
}

func (o ProjectResourceDomainResourceArrayOutput) ToProjectResourceDomainResourceArrayOutput() ProjectResourceDomainResourceArrayOutput {
	return o
}

func (o ProjectResourceDomainResourceArrayOutput) ToProjectResourceDomainResourceArrayOutputWithContext(ctx context.Context) ProjectResourceDomainResourceArrayOutput {
	return o
}

func (o ProjectResourceDomainResourceArrayOutput) Index(i pulumi.IntInput) ProjectResourceDomainResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectResourceDomainResource {
		return vs[0].([]ProjectResourceDomainResource)[vs[1].(int)]
	}).(ProjectResourceDomainResourceOutput)
}

type ProjectSubnetReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectSubnetReferenceListInput is an input type that accepts ProjectSubnetReferenceListArgs and ProjectSubnetReferenceListOutput values.
// You can construct a concrete instance of `ProjectSubnetReferenceListInput` via:
//
//	ProjectSubnetReferenceListArgs{...}
type ProjectSubnetReferenceListInput interface {
	pulumi.Input

	ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput
	ToProjectSubnetReferenceListOutputWithContext(context.Context) ProjectSubnetReferenceListOutput
}

type ProjectSubnetReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectSubnetReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSubnetReferenceList)(nil)).Elem()
}

func (i ProjectSubnetReferenceListArgs) ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput {
	return i.ToProjectSubnetReferenceListOutputWithContext(context.Background())
}

func (i ProjectSubnetReferenceListArgs) ToProjectSubnetReferenceListOutputWithContext(ctx context.Context) ProjectSubnetReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSubnetReferenceListOutput)
}

// ProjectSubnetReferenceListArrayInput is an input type that accepts ProjectSubnetReferenceListArray and ProjectSubnetReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectSubnetReferenceListArrayInput` via:
//
//	ProjectSubnetReferenceListArray{ ProjectSubnetReferenceListArgs{...} }
type ProjectSubnetReferenceListArrayInput interface {
	pulumi.Input

	ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput
	ToProjectSubnetReferenceListArrayOutputWithContext(context.Context) ProjectSubnetReferenceListArrayOutput
}

type ProjectSubnetReferenceListArray []ProjectSubnetReferenceListInput

func (ProjectSubnetReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSubnetReferenceList)(nil)).Elem()
}

func (i ProjectSubnetReferenceListArray) ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput {
	return i.ToProjectSubnetReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectSubnetReferenceListArray) ToProjectSubnetReferenceListArrayOutputWithContext(ctx context.Context) ProjectSubnetReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSubnetReferenceListArrayOutput)
}

type ProjectSubnetReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectSubnetReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSubnetReferenceList)(nil)).Elem()
}

func (o ProjectSubnetReferenceListOutput) ToProjectSubnetReferenceListOutput() ProjectSubnetReferenceListOutput {
	return o
}

func (o ProjectSubnetReferenceListOutput) ToProjectSubnetReferenceListOutputWithContext(ctx context.Context) ProjectSubnetReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectSubnetReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectSubnetReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectSubnetReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSubnetReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectSubnetReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectSubnetReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSubnetReferenceList)(nil)).Elem()
}

func (o ProjectSubnetReferenceListArrayOutput) ToProjectSubnetReferenceListArrayOutput() ProjectSubnetReferenceListArrayOutput {
	return o
}

func (o ProjectSubnetReferenceListArrayOutput) ToProjectSubnetReferenceListArrayOutputWithContext(ctx context.Context) ProjectSubnetReferenceListArrayOutput {
	return o
}

func (o ProjectSubnetReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectSubnetReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSubnetReferenceList {
		return vs[0].([]ProjectSubnetReferenceList)[vs[1].(int)]
	}).(ProjectSubnetReferenceListOutput)
}

type ProjectTunnelReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectTunnelReferenceListInput is an input type that accepts ProjectTunnelReferenceListArgs and ProjectTunnelReferenceListOutput values.
// You can construct a concrete instance of `ProjectTunnelReferenceListInput` via:
//
//	ProjectTunnelReferenceListArgs{...}
type ProjectTunnelReferenceListInput interface {
	pulumi.Input

	ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput
	ToProjectTunnelReferenceListOutputWithContext(context.Context) ProjectTunnelReferenceListOutput
}

type ProjectTunnelReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectTunnelReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTunnelReferenceList)(nil)).Elem()
}

func (i ProjectTunnelReferenceListArgs) ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput {
	return i.ToProjectTunnelReferenceListOutputWithContext(context.Background())
}

func (i ProjectTunnelReferenceListArgs) ToProjectTunnelReferenceListOutputWithContext(ctx context.Context) ProjectTunnelReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTunnelReferenceListOutput)
}

// ProjectTunnelReferenceListArrayInput is an input type that accepts ProjectTunnelReferenceListArray and ProjectTunnelReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectTunnelReferenceListArrayInput` via:
//
//	ProjectTunnelReferenceListArray{ ProjectTunnelReferenceListArgs{...} }
type ProjectTunnelReferenceListArrayInput interface {
	pulumi.Input

	ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput
	ToProjectTunnelReferenceListArrayOutputWithContext(context.Context) ProjectTunnelReferenceListArrayOutput
}

type ProjectTunnelReferenceListArray []ProjectTunnelReferenceListInput

func (ProjectTunnelReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTunnelReferenceList)(nil)).Elem()
}

func (i ProjectTunnelReferenceListArray) ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput {
	return i.ToProjectTunnelReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectTunnelReferenceListArray) ToProjectTunnelReferenceListArrayOutputWithContext(ctx context.Context) ProjectTunnelReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTunnelReferenceListArrayOutput)
}

type ProjectTunnelReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectTunnelReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTunnelReferenceList)(nil)).Elem()
}

func (o ProjectTunnelReferenceListOutput) ToProjectTunnelReferenceListOutput() ProjectTunnelReferenceListOutput {
	return o
}

func (o ProjectTunnelReferenceListOutput) ToProjectTunnelReferenceListOutputWithContext(ctx context.Context) ProjectTunnelReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectTunnelReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectTunnelReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectTunnelReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTunnelReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectTunnelReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectTunnelReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTunnelReferenceList)(nil)).Elem()
}

func (o ProjectTunnelReferenceListArrayOutput) ToProjectTunnelReferenceListArrayOutput() ProjectTunnelReferenceListArrayOutput {
	return o
}

func (o ProjectTunnelReferenceListArrayOutput) ToProjectTunnelReferenceListArrayOutputWithContext(ctx context.Context) ProjectTunnelReferenceListArrayOutput {
	return o
}

func (o ProjectTunnelReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectTunnelReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTunnelReferenceList {
		return vs[0].([]ProjectTunnelReferenceList)[vs[1].(int)]
	}).(ProjectTunnelReferenceListOutput)
}

type ProjectUserGroupList struct {
	DirectoryServiceOus        []ProjectUserGroupListDirectoryServiceOus       `pulumi:"directoryServiceOus"`
	DirectoryServiceUserGroups []ProjectUserGroupListDirectoryServiceUserGroup `pulumi:"directoryServiceUserGroups"`
	Metadata                   map[string]string                               `pulumi:"metadata"`
	SamlUserGroups             []ProjectUserGroupListSamlUserGroup             `pulumi:"samlUserGroups"`
}

// ProjectUserGroupListInput is an input type that accepts ProjectUserGroupListArgs and ProjectUserGroupListOutput values.
// You can construct a concrete instance of `ProjectUserGroupListInput` via:
//
//	ProjectUserGroupListArgs{...}
type ProjectUserGroupListInput interface {
	pulumi.Input

	ToProjectUserGroupListOutput() ProjectUserGroupListOutput
	ToProjectUserGroupListOutputWithContext(context.Context) ProjectUserGroupListOutput
}

type ProjectUserGroupListArgs struct {
	DirectoryServiceOus        ProjectUserGroupListDirectoryServiceOusArrayInput       `pulumi:"directoryServiceOus"`
	DirectoryServiceUserGroups ProjectUserGroupListDirectoryServiceUserGroupArrayInput `pulumi:"directoryServiceUserGroups"`
	Metadata                   pulumi.StringMapInput                                   `pulumi:"metadata"`
	SamlUserGroups             ProjectUserGroupListSamlUserGroupArrayInput             `pulumi:"samlUserGroups"`
}

func (ProjectUserGroupListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupList)(nil)).Elem()
}

func (i ProjectUserGroupListArgs) ToProjectUserGroupListOutput() ProjectUserGroupListOutput {
	return i.ToProjectUserGroupListOutputWithContext(context.Background())
}

func (i ProjectUserGroupListArgs) ToProjectUserGroupListOutputWithContext(ctx context.Context) ProjectUserGroupListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListOutput)
}

// ProjectUserGroupListArrayInput is an input type that accepts ProjectUserGroupListArray and ProjectUserGroupListArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListArrayInput` via:
//
//	ProjectUserGroupListArray{ ProjectUserGroupListArgs{...} }
type ProjectUserGroupListArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput
	ToProjectUserGroupListArrayOutputWithContext(context.Context) ProjectUserGroupListArrayOutput
}

type ProjectUserGroupListArray []ProjectUserGroupListInput

func (ProjectUserGroupListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupList)(nil)).Elem()
}

func (i ProjectUserGroupListArray) ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput {
	return i.ToProjectUserGroupListArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListArray) ToProjectUserGroupListArrayOutputWithContext(ctx context.Context) ProjectUserGroupListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListArrayOutput)
}

type ProjectUserGroupListOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupList)(nil)).Elem()
}

func (o ProjectUserGroupListOutput) ToProjectUserGroupListOutput() ProjectUserGroupListOutput {
	return o
}

func (o ProjectUserGroupListOutput) ToProjectUserGroupListOutputWithContext(ctx context.Context) ProjectUserGroupListOutput {
	return o
}

func (o ProjectUserGroupListOutput) DirectoryServiceOus() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListDirectoryServiceOus { return v.DirectoryServiceOus }).(ProjectUserGroupListDirectoryServiceOusArrayOutput)
}

func (o ProjectUserGroupListOutput) DirectoryServiceUserGroups() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListDirectoryServiceUserGroup {
		return v.DirectoryServiceUserGroups
	}).(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput)
}

func (o ProjectUserGroupListOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectUserGroupList) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ProjectUserGroupListOutput) SamlUserGroups() ProjectUserGroupListSamlUserGroupArrayOutput {
	return o.ApplyT(func(v ProjectUserGroupList) []ProjectUserGroupListSamlUserGroup { return v.SamlUserGroups }).(ProjectUserGroupListSamlUserGroupArrayOutput)
}

type ProjectUserGroupListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupList)(nil)).Elem()
}

func (o ProjectUserGroupListArrayOutput) ToProjectUserGroupListArrayOutput() ProjectUserGroupListArrayOutput {
	return o
}

func (o ProjectUserGroupListArrayOutput) ToProjectUserGroupListArrayOutputWithContext(ctx context.Context) ProjectUserGroupListArrayOutput {
	return o
}

func (o ProjectUserGroupListArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupList {
		return vs[0].([]ProjectUserGroupList)[vs[1].(int)]
	}).(ProjectUserGroupListOutput)
}

type ProjectUserGroupListDirectoryServiceOus struct {
	DistinguishedName string `pulumi:"distinguishedName"`
}

// ProjectUserGroupListDirectoryServiceOusInput is an input type that accepts ProjectUserGroupListDirectoryServiceOusArgs and ProjectUserGroupListDirectoryServiceOusOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceOusInput` via:
//
//	ProjectUserGroupListDirectoryServiceOusArgs{...}
type ProjectUserGroupListDirectoryServiceOusInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput
	ToProjectUserGroupListDirectoryServiceOusOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceOusOutput
}

type ProjectUserGroupListDirectoryServiceOusArgs struct {
	DistinguishedName pulumi.StringInput `pulumi:"distinguishedName"`
}

func (ProjectUserGroupListDirectoryServiceOusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceOusArgs) ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput {
	return i.ToProjectUserGroupListDirectoryServiceOusOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceOusArgs) ToProjectUserGroupListDirectoryServiceOusOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceOusOutput)
}

// ProjectUserGroupListDirectoryServiceOusArrayInput is an input type that accepts ProjectUserGroupListDirectoryServiceOusArray and ProjectUserGroupListDirectoryServiceOusArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceOusArrayInput` via:
//
//	ProjectUserGroupListDirectoryServiceOusArray{ ProjectUserGroupListDirectoryServiceOusArgs{...} }
type ProjectUserGroupListDirectoryServiceOusArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput
	ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput
}

type ProjectUserGroupListDirectoryServiceOusArray []ProjectUserGroupListDirectoryServiceOusInput

func (ProjectUserGroupListDirectoryServiceOusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceOusArray) ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return i.ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceOusArray) ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceOusArrayOutput)
}

type ProjectUserGroupListDirectoryServiceOusOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceOusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) ToProjectUserGroupListDirectoryServiceOusOutput() ProjectUserGroupListDirectoryServiceOusOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) ToProjectUserGroupListDirectoryServiceOusOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusOutput) DistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListDirectoryServiceOus) string { return v.DistinguishedName }).(pulumi.StringOutput)
}

type ProjectUserGroupListDirectoryServiceOusArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceOusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceOus)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) ToProjectUserGroupListDirectoryServiceOusArrayOutput() ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) ToProjectUserGroupListDirectoryServiceOusArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceOusArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceOusArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListDirectoryServiceOusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListDirectoryServiceOus {
		return vs[0].([]ProjectUserGroupListDirectoryServiceOus)[vs[1].(int)]
	}).(ProjectUserGroupListDirectoryServiceOusOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroup struct {
	DistinguishedName string `pulumi:"distinguishedName"`
}

// ProjectUserGroupListDirectoryServiceUserGroupInput is an input type that accepts ProjectUserGroupListDirectoryServiceUserGroupArgs and ProjectUserGroupListDirectoryServiceUserGroupOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceUserGroupInput` via:
//
//	ProjectUserGroupListDirectoryServiceUserGroupArgs{...}
type ProjectUserGroupListDirectoryServiceUserGroupInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput
	ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput
}

type ProjectUserGroupListDirectoryServiceUserGroupArgs struct {
	DistinguishedName pulumi.StringInput `pulumi:"distinguishedName"`
}

func (ProjectUserGroupListDirectoryServiceUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArgs) ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return i.ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArgs) ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceUserGroupOutput)
}

// ProjectUserGroupListDirectoryServiceUserGroupArrayInput is an input type that accepts ProjectUserGroupListDirectoryServiceUserGroupArray and ProjectUserGroupListDirectoryServiceUserGroupArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListDirectoryServiceUserGroupArrayInput` via:
//
//	ProjectUserGroupListDirectoryServiceUserGroupArray{ ProjectUserGroupListDirectoryServiceUserGroupArgs{...} }
type ProjectUserGroupListDirectoryServiceUserGroupArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput
	ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput
}

type ProjectUserGroupListDirectoryServiceUserGroupArray []ProjectUserGroupListDirectoryServiceUserGroupInput

func (ProjectUserGroupListDirectoryServiceUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArray) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return i.ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListDirectoryServiceUserGroupArray) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroupOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) ToProjectUserGroupListDirectoryServiceUserGroupOutput() ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) ToProjectUserGroupListDirectoryServiceUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupOutput) DistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListDirectoryServiceUserGroup) string { return v.DistinguishedName }).(pulumi.StringOutput)
}

type ProjectUserGroupListDirectoryServiceUserGroupArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListDirectoryServiceUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutput() ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) ToProjectUserGroupListDirectoryServiceUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListDirectoryServiceUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListDirectoryServiceUserGroupArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListDirectoryServiceUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListDirectoryServiceUserGroup {
		return vs[0].([]ProjectUserGroupListDirectoryServiceUserGroup)[vs[1].(int)]
	}).(ProjectUserGroupListDirectoryServiceUserGroupOutput)
}

type ProjectUserGroupListSamlUserGroup struct {
	IdpUuid string `pulumi:"idpUuid"`
	// The name for the project.
	Name string `pulumi:"name"`
}

// ProjectUserGroupListSamlUserGroupInput is an input type that accepts ProjectUserGroupListSamlUserGroupArgs and ProjectUserGroupListSamlUserGroupOutput values.
// You can construct a concrete instance of `ProjectUserGroupListSamlUserGroupInput` via:
//
//	ProjectUserGroupListSamlUserGroupArgs{...}
type ProjectUserGroupListSamlUserGroupInput interface {
	pulumi.Input

	ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput
	ToProjectUserGroupListSamlUserGroupOutputWithContext(context.Context) ProjectUserGroupListSamlUserGroupOutput
}

type ProjectUserGroupListSamlUserGroupArgs struct {
	IdpUuid pulumi.StringInput `pulumi:"idpUuid"`
	// The name for the project.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ProjectUserGroupListSamlUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListSamlUserGroupArgs) ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput {
	return i.ToProjectUserGroupListSamlUserGroupOutputWithContext(context.Background())
}

func (i ProjectUserGroupListSamlUserGroupArgs) ToProjectUserGroupListSamlUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListSamlUserGroupOutput)
}

// ProjectUserGroupListSamlUserGroupArrayInput is an input type that accepts ProjectUserGroupListSamlUserGroupArray and ProjectUserGroupListSamlUserGroupArrayOutput values.
// You can construct a concrete instance of `ProjectUserGroupListSamlUserGroupArrayInput` via:
//
//	ProjectUserGroupListSamlUserGroupArray{ ProjectUserGroupListSamlUserGroupArgs{...} }
type ProjectUserGroupListSamlUserGroupArrayInput interface {
	pulumi.Input

	ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput
	ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(context.Context) ProjectUserGroupListSamlUserGroupArrayOutput
}

type ProjectUserGroupListSamlUserGroupArray []ProjectUserGroupListSamlUserGroupInput

func (ProjectUserGroupListSamlUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (i ProjectUserGroupListSamlUserGroupArray) ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput {
	return i.ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(context.Background())
}

func (i ProjectUserGroupListSamlUserGroupArray) ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserGroupListSamlUserGroupArrayOutput)
}

type ProjectUserGroupListSamlUserGroupOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListSamlUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListSamlUserGroupOutput) ToProjectUserGroupListSamlUserGroupOutput() ProjectUserGroupListSamlUserGroupOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupOutput) ToProjectUserGroupListSamlUserGroupOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupOutput) IdpUuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListSamlUserGroup) string { return v.IdpUuid }).(pulumi.StringOutput)
}

// The name for the project.
func (o ProjectUserGroupListSamlUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserGroupListSamlUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type ProjectUserGroupListSamlUserGroupArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserGroupListSamlUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserGroupListSamlUserGroup)(nil)).Elem()
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) ToProjectUserGroupListSamlUserGroupArrayOutput() ProjectUserGroupListSamlUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) ToProjectUserGroupListSamlUserGroupArrayOutputWithContext(ctx context.Context) ProjectUserGroupListSamlUserGroupArrayOutput {
	return o
}

func (o ProjectUserGroupListSamlUserGroupArrayOutput) Index(i pulumi.IntInput) ProjectUserGroupListSamlUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserGroupListSamlUserGroup {
		return vs[0].([]ProjectUserGroupListSamlUserGroup)[vs[1].(int)]
	}).(ProjectUserGroupListSamlUserGroupOutput)
}

type ProjectUserList struct {
	DirectoryServiceUser *ProjectUserListDirectoryServiceUser `pulumi:"directoryServiceUser"`
	IdentityProviderUser *ProjectUserListIdentityProviderUser `pulumi:"identityProviderUser"`
	Metadata             map[string]string                    `pulumi:"metadata"`
}

// ProjectUserListInput is an input type that accepts ProjectUserListArgs and ProjectUserListOutput values.
// You can construct a concrete instance of `ProjectUserListInput` via:
//
//	ProjectUserListArgs{...}
type ProjectUserListInput interface {
	pulumi.Input

	ToProjectUserListOutput() ProjectUserListOutput
	ToProjectUserListOutputWithContext(context.Context) ProjectUserListOutput
}

type ProjectUserListArgs struct {
	DirectoryServiceUser ProjectUserListDirectoryServiceUserPtrInput `pulumi:"directoryServiceUser"`
	IdentityProviderUser ProjectUserListIdentityProviderUserPtrInput `pulumi:"identityProviderUser"`
	Metadata             pulumi.StringMapInput                       `pulumi:"metadata"`
}

func (ProjectUserListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserList)(nil)).Elem()
}

func (i ProjectUserListArgs) ToProjectUserListOutput() ProjectUserListOutput {
	return i.ToProjectUserListOutputWithContext(context.Background())
}

func (i ProjectUserListArgs) ToProjectUserListOutputWithContext(ctx context.Context) ProjectUserListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListOutput)
}

// ProjectUserListArrayInput is an input type that accepts ProjectUserListArray and ProjectUserListArrayOutput values.
// You can construct a concrete instance of `ProjectUserListArrayInput` via:
//
//	ProjectUserListArray{ ProjectUserListArgs{...} }
type ProjectUserListArrayInput interface {
	pulumi.Input

	ToProjectUserListArrayOutput() ProjectUserListArrayOutput
	ToProjectUserListArrayOutputWithContext(context.Context) ProjectUserListArrayOutput
}

type ProjectUserListArray []ProjectUserListInput

func (ProjectUserListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserList)(nil)).Elem()
}

func (i ProjectUserListArray) ToProjectUserListArrayOutput() ProjectUserListArrayOutput {
	return i.ToProjectUserListArrayOutputWithContext(context.Background())
}

func (i ProjectUserListArray) ToProjectUserListArrayOutputWithContext(ctx context.Context) ProjectUserListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListArrayOutput)
}

type ProjectUserListOutput struct{ *pulumi.OutputState }

func (ProjectUserListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserList)(nil)).Elem()
}

func (o ProjectUserListOutput) ToProjectUserListOutput() ProjectUserListOutput {
	return o
}

func (o ProjectUserListOutput) ToProjectUserListOutputWithContext(ctx context.Context) ProjectUserListOutput {
	return o
}

func (o ProjectUserListOutput) DirectoryServiceUser() ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ApplyT(func(v ProjectUserList) *ProjectUserListDirectoryServiceUser { return v.DirectoryServiceUser }).(ProjectUserListDirectoryServiceUserPtrOutput)
}

func (o ProjectUserListOutput) IdentityProviderUser() ProjectUserListIdentityProviderUserPtrOutput {
	return o.ApplyT(func(v ProjectUserList) *ProjectUserListIdentityProviderUser { return v.IdentityProviderUser }).(ProjectUserListIdentityProviderUserPtrOutput)
}

func (o ProjectUserListOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectUserList) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type ProjectUserListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserList)(nil)).Elem()
}

func (o ProjectUserListArrayOutput) ToProjectUserListArrayOutput() ProjectUserListArrayOutput {
	return o
}

func (o ProjectUserListArrayOutput) ToProjectUserListArrayOutputWithContext(ctx context.Context) ProjectUserListArrayOutput {
	return o
}

func (o ProjectUserListArrayOutput) Index(i pulumi.IntInput) ProjectUserListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserList {
		return vs[0].([]ProjectUserList)[vs[1].(int)]
	}).(ProjectUserListOutput)
}

type ProjectUserListDirectoryServiceUser struct {
	DefaultUserPrincipalName  *string                                                      `pulumi:"defaultUserPrincipalName"`
	DirectoryServiceReference ProjectUserListDirectoryServiceUserDirectoryServiceReference `pulumi:"directoryServiceReference"`
	UserPrincipalName         *string                                                      `pulumi:"userPrincipalName"`
}

// ProjectUserListDirectoryServiceUserInput is an input type that accepts ProjectUserListDirectoryServiceUserArgs and ProjectUserListDirectoryServiceUserOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserInput` via:
//
//	ProjectUserListDirectoryServiceUserArgs{...}
type ProjectUserListDirectoryServiceUserInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput
	ToProjectUserListDirectoryServiceUserOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserOutput
}

type ProjectUserListDirectoryServiceUserArgs struct {
	DefaultUserPrincipalName  pulumi.StringPtrInput                                             `pulumi:"defaultUserPrincipalName"`
	DirectoryServiceReference ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput `pulumi:"directoryServiceReference"`
	UserPrincipalName         pulumi.StringPtrInput                                             `pulumi:"userPrincipalName"`
}

func (ProjectUserListDirectoryServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput {
	return i.ToProjectUserListDirectoryServiceUserOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserOutput)
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return i.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserArgs) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserOutput).ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx)
}

// ProjectUserListDirectoryServiceUserPtrInput is an input type that accepts ProjectUserListDirectoryServiceUserArgs, ProjectUserListDirectoryServiceUserPtr and ProjectUserListDirectoryServiceUserPtrOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserPtrInput` via:
//
//	        ProjectUserListDirectoryServiceUserArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListDirectoryServiceUserPtrInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput
	ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserPtrOutput
}

type projectUserListDirectoryServiceUserPtrType ProjectUserListDirectoryServiceUserArgs

func ProjectUserListDirectoryServiceUserPtr(v *ProjectUserListDirectoryServiceUserArgs) ProjectUserListDirectoryServiceUserPtrInput {
	return (*projectUserListDirectoryServiceUserPtrType)(v)
}

func (*projectUserListDirectoryServiceUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (i *projectUserListDirectoryServiceUserPtrType) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return i.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (i *projectUserListDirectoryServiceUserPtrType) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserPtrOutput)
}

type ProjectUserListDirectoryServiceUserOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserOutput() ProjectUserListDirectoryServiceUserOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ToProjectUserListDirectoryServiceUserPtrOutputWithContext(context.Background())
}

func (o ProjectUserListDirectoryServiceUserOutput) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListDirectoryServiceUser) *ProjectUserListDirectoryServiceUser {
		return &v
	}).(ProjectUserListDirectoryServiceUserPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) DefaultUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) *string { return v.DefaultUserPrincipalName }).(pulumi.StringPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) DirectoryServiceReference() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		return v.DirectoryServiceReference
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

func (o ProjectUserListDirectoryServiceUserOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUser) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ProjectUserListDirectoryServiceUserPtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUser)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) ToProjectUserListDirectoryServiceUserPtrOutput() ProjectUserListDirectoryServiceUserPtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) ToProjectUserListDirectoryServiceUserPtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserPtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) Elem() ProjectUserListDirectoryServiceUserOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) ProjectUserListDirectoryServiceUser {
		if v != nil {
			return *v
		}
		var ret ProjectUserListDirectoryServiceUser
		return ret
	}).(ProjectUserListDirectoryServiceUserOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) DefaultUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *string {
		if v == nil {
			return nil
		}
		return v.DefaultUserPrincipalName
	}).(pulumi.StringPtrOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) DirectoryServiceReference() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		if v == nil {
			return nil
		}
		return &v.DirectoryServiceReference
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

func (o ProjectUserListDirectoryServiceUserPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUser) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput is an input type that accepts ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs and ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput` via:
//
//	ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{...}
type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput
	ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (i ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput).ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx)
}

// ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput is an input type that accepts ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs, ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtr and ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput values.
// You can construct a concrete instance of `ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput` via:
//
//	        ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput interface {
	pulumi.Input

	ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput
	ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput
}

type projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs

func ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtr(v *ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput {
	return (*projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType)(v)
}

func (*projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (i *projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return i.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (i *projectUserListDirectoryServiceUserDirectoryServiceReferencePtrType) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(context.Background())
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		return &v
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserListDirectoryServiceUserDirectoryServiceReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListDirectoryServiceUserDirectoryServiceReference)(nil)).Elem()
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput() ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) ToProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutputWithContext(ctx context.Context) ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput {
	return o
}

func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Elem() ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) ProjectUserListDirectoryServiceUserDirectoryServiceReference {
		if v != nil {
			return *v
		}
		var ret ProjectUserListDirectoryServiceUserDirectoryServiceReference
		return ret
	}).(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListDirectoryServiceUserDirectoryServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUser struct {
	IdentityProviderReference ProjectUserListIdentityProviderUserIdentityProviderReference `pulumi:"identityProviderReference"`
	Username                  *string                                                      `pulumi:"username"`
}

// ProjectUserListIdentityProviderUserInput is an input type that accepts ProjectUserListIdentityProviderUserArgs and ProjectUserListIdentityProviderUserOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserInput` via:
//
//	ProjectUserListIdentityProviderUserArgs{...}
type ProjectUserListIdentityProviderUserInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput
	ToProjectUserListIdentityProviderUserOutputWithContext(context.Context) ProjectUserListIdentityProviderUserOutput
}

type ProjectUserListIdentityProviderUserArgs struct {
	IdentityProviderReference ProjectUserListIdentityProviderUserIdentityProviderReferenceInput `pulumi:"identityProviderReference"`
	Username                  pulumi.StringPtrInput                                             `pulumi:"username"`
}

func (ProjectUserListIdentityProviderUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput {
	return i.ToProjectUserListIdentityProviderUserOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserOutput)
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return i.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserArgs) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserOutput).ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx)
}

// ProjectUserListIdentityProviderUserPtrInput is an input type that accepts ProjectUserListIdentityProviderUserArgs, ProjectUserListIdentityProviderUserPtr and ProjectUserListIdentityProviderUserPtrOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserPtrInput` via:
//
//	        ProjectUserListIdentityProviderUserArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListIdentityProviderUserPtrInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput
	ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Context) ProjectUserListIdentityProviderUserPtrOutput
}

type projectUserListIdentityProviderUserPtrType ProjectUserListIdentityProviderUserArgs

func ProjectUserListIdentityProviderUserPtr(v *ProjectUserListIdentityProviderUserArgs) ProjectUserListIdentityProviderUserPtrInput {
	return (*projectUserListIdentityProviderUserPtrType)(v)
}

func (*projectUserListIdentityProviderUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (i *projectUserListIdentityProviderUserPtrType) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return i.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (i *projectUserListIdentityProviderUserPtrType) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserPtrOutput)
}

type ProjectUserListIdentityProviderUserOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserOutput() ProjectUserListIdentityProviderUserOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return o.ToProjectUserListIdentityProviderUserPtrOutputWithContext(context.Background())
}

func (o ProjectUserListIdentityProviderUserOutput) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListIdentityProviderUser) *ProjectUserListIdentityProviderUser {
		return &v
	}).(ProjectUserListIdentityProviderUserPtrOutput)
}

func (o ProjectUserListIdentityProviderUserOutput) IdentityProviderReference() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUser) ProjectUserListIdentityProviderUserIdentityProviderReference {
		return v.IdentityProviderReference
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

func (o ProjectUserListIdentityProviderUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUser) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUserPtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUser)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserPtrOutput) ToProjectUserListIdentityProviderUserPtrOutput() ProjectUserListIdentityProviderUserPtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserPtrOutput) ToProjectUserListIdentityProviderUserPtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserPtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserPtrOutput) Elem() ProjectUserListIdentityProviderUserOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) ProjectUserListIdentityProviderUser {
		if v != nil {
			return *v
		}
		var ret ProjectUserListIdentityProviderUser
		return ret
	}).(ProjectUserListIdentityProviderUserOutput)
}

func (o ProjectUserListIdentityProviderUserPtrOutput) IdentityProviderReference() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) *ProjectUserListIdentityProviderUserIdentityProviderReference {
		if v == nil {
			return nil
		}
		return &v.IdentityProviderReference
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

func (o ProjectUserListIdentityProviderUserPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUser) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserListIdentityProviderUserIdentityProviderReferenceInput is an input type that accepts ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs and ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserIdentityProviderReferenceInput` via:
//
//	ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{...}
type ProjectUserListIdentityProviderUserIdentityProviderReferenceInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput
	ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput
}

type ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (i ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput).ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx)
}

// ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput is an input type that accepts ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs, ProjectUserListIdentityProviderUserIdentityProviderReferencePtr and ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput values.
// You can construct a concrete instance of `ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput` via:
//
//	        ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{...}
//
//	or:
//
//	        nil
type ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput interface {
	pulumi.Input

	ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput
	ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput
}

type projectUserListIdentityProviderUserIdentityProviderReferencePtrType ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs

func ProjectUserListIdentityProviderUserIdentityProviderReferencePtr(v *ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput {
	return (*projectUserListIdentityProviderUserIdentityProviderReferencePtrType)(v)
}

func (*projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (i *projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return i.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (i *projectUserListIdentityProviderUserIdentityProviderReferencePtrType) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutput() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferenceOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(context.Background())
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserListIdentityProviderUserIdentityProviderReference) *ProjectUserListIdentityProviderUserIdentityProviderReference {
		return &v
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserListIdentityProviderUserIdentityProviderReference) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput struct{ *pulumi.OutputState }

func (ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserListIdentityProviderUserIdentityProviderReference)(nil)).Elem()
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput() ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) ToProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutputWithContext(ctx context.Context) ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput {
	return o
}

func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Elem() ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) ProjectUserListIdentityProviderUserIdentityProviderReference {
		if v != nil {
			return *v
		}
		var ret ProjectUserListIdentityProviderUserIdentityProviderReference
		return ret
	}).(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserListIdentityProviderUserIdentityProviderReference) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProjectUserReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectUserReferenceListInput is an input type that accepts ProjectUserReferenceListArgs and ProjectUserReferenceListOutput values.
// You can construct a concrete instance of `ProjectUserReferenceListInput` via:
//
//	ProjectUserReferenceListArgs{...}
type ProjectUserReferenceListInput interface {
	pulumi.Input

	ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput
	ToProjectUserReferenceListOutputWithContext(context.Context) ProjectUserReferenceListOutput
}

type ProjectUserReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectUserReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserReferenceList)(nil)).Elem()
}

func (i ProjectUserReferenceListArgs) ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput {
	return i.ToProjectUserReferenceListOutputWithContext(context.Background())
}

func (i ProjectUserReferenceListArgs) ToProjectUserReferenceListOutputWithContext(ctx context.Context) ProjectUserReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserReferenceListOutput)
}

// ProjectUserReferenceListArrayInput is an input type that accepts ProjectUserReferenceListArray and ProjectUserReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectUserReferenceListArrayInput` via:
//
//	ProjectUserReferenceListArray{ ProjectUserReferenceListArgs{...} }
type ProjectUserReferenceListArrayInput interface {
	pulumi.Input

	ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput
	ToProjectUserReferenceListArrayOutputWithContext(context.Context) ProjectUserReferenceListArrayOutput
}

type ProjectUserReferenceListArray []ProjectUserReferenceListInput

func (ProjectUserReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserReferenceList)(nil)).Elem()
}

func (i ProjectUserReferenceListArray) ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput {
	return i.ToProjectUserReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectUserReferenceListArray) ToProjectUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectUserReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserReferenceListArrayOutput)
}

type ProjectUserReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectUserReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserReferenceList)(nil)).Elem()
}

func (o ProjectUserReferenceListOutput) ToProjectUserReferenceListOutput() ProjectUserReferenceListOutput {
	return o
}

func (o ProjectUserReferenceListOutput) ToProjectUserReferenceListOutputWithContext(ctx context.Context) ProjectUserReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectUserReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectUserReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectUserReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectUserReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserReferenceList)(nil)).Elem()
}

func (o ProjectUserReferenceListArrayOutput) ToProjectUserReferenceListArrayOutput() ProjectUserReferenceListArrayOutput {
	return o
}

func (o ProjectUserReferenceListArrayOutput) ToProjectUserReferenceListArrayOutputWithContext(ctx context.Context) ProjectUserReferenceListArrayOutput {
	return o
}

func (o ProjectUserReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectUserReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserReferenceList {
		return vs[0].([]ProjectUserReferenceList)[vs[1].(int)]
	}).(ProjectUserReferenceListOutput)
}

type ProjectVpcReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the project.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// ProjectVpcReferenceListInput is an input type that accepts ProjectVpcReferenceListArgs and ProjectVpcReferenceListOutput values.
// You can construct a concrete instance of `ProjectVpcReferenceListInput` via:
//
//	ProjectVpcReferenceListArgs{...}
type ProjectVpcReferenceListInput interface {
	pulumi.Input

	ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput
	ToProjectVpcReferenceListOutputWithContext(context.Context) ProjectVpcReferenceListOutput
}

type ProjectVpcReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the project.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ProjectVpcReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcReferenceList)(nil)).Elem()
}

func (i ProjectVpcReferenceListArgs) ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput {
	return i.ToProjectVpcReferenceListOutputWithContext(context.Background())
}

func (i ProjectVpcReferenceListArgs) ToProjectVpcReferenceListOutputWithContext(ctx context.Context) ProjectVpcReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcReferenceListOutput)
}

// ProjectVpcReferenceListArrayInput is an input type that accepts ProjectVpcReferenceListArray and ProjectVpcReferenceListArrayOutput values.
// You can construct a concrete instance of `ProjectVpcReferenceListArrayInput` via:
//
//	ProjectVpcReferenceListArray{ ProjectVpcReferenceListArgs{...} }
type ProjectVpcReferenceListArrayInput interface {
	pulumi.Input

	ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput
	ToProjectVpcReferenceListArrayOutputWithContext(context.Context) ProjectVpcReferenceListArrayOutput
}

type ProjectVpcReferenceListArray []ProjectVpcReferenceListInput

func (ProjectVpcReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVpcReferenceList)(nil)).Elem()
}

func (i ProjectVpcReferenceListArray) ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput {
	return i.ToProjectVpcReferenceListArrayOutputWithContext(context.Background())
}

func (i ProjectVpcReferenceListArray) ToProjectVpcReferenceListArrayOutputWithContext(ctx context.Context) ProjectVpcReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcReferenceListArrayOutput)
}

type ProjectVpcReferenceListOutput struct{ *pulumi.OutputState }

func (ProjectVpcReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcReferenceList)(nil)).Elem()
}

func (o ProjectVpcReferenceListOutput) ToProjectVpcReferenceListOutput() ProjectVpcReferenceListOutput {
	return o
}

func (o ProjectVpcReferenceListOutput) ToProjectVpcReferenceListOutputWithContext(ctx context.Context) ProjectVpcReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o ProjectVpcReferenceListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the project.
func (o ProjectVpcReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProjectVpcReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectVpcReferenceList) string { return v.Uuid }).(pulumi.StringOutput)
}

type ProjectVpcReferenceListArrayOutput struct{ *pulumi.OutputState }

func (ProjectVpcReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectVpcReferenceList)(nil)).Elem()
}

func (o ProjectVpcReferenceListArrayOutput) ToProjectVpcReferenceListArrayOutput() ProjectVpcReferenceListArrayOutput {
	return o
}

func (o ProjectVpcReferenceListArrayOutput) ToProjectVpcReferenceListArrayOutputWithContext(ctx context.Context) ProjectVpcReferenceListArrayOutput {
	return o
}

func (o ProjectVpcReferenceListArrayOutput) Index(i pulumi.IntInput) ProjectVpcReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectVpcReferenceList {
		return vs[0].([]ProjectVpcReferenceList)[vs[1].(int)]
	}).(ProjectVpcReferenceListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityList struct {
	DestinationAvailabilityZoneIndex *int                                                                 `pulumi:"destinationAvailabilityZoneIndex"`
	SnapshotScheduleLists            []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList `pulumi:"snapshotScheduleLists"`
	SourceAvailabilityZoneIndex      *int                                                                 `pulumi:"sourceAvailabilityZoneIndex"`
}

// ProtectionRuleAvailabilityZoneConnectivityListInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListArgs and ProtectionRuleAvailabilityZoneConnectivityListOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput
	ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListArgs struct {
	DestinationAvailabilityZoneIndex pulumi.IntPtrInput                                                           `pulumi:"destinationAvailabilityZoneIndex"`
	SnapshotScheduleLists            ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput `pulumi:"snapshotScheduleLists"`
	SourceAvailabilityZoneIndex      pulumi.IntPtrInput                                                           `pulumi:"sourceAvailabilityZoneIndex"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArgs) ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArgs) ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListOutput)
}

// ProtectionRuleAvailabilityZoneConnectivityListArrayInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListArray and ProtectionRuleAvailabilityZoneConnectivityListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListArrayInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListArray{ ProtectionRuleAvailabilityZoneConnectivityListArgs{...} }
type ProtectionRuleAvailabilityZoneConnectivityListArrayInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput
	ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListArray []ProtectionRuleAvailabilityZoneConnectivityListInput

func (ProtectionRuleAvailabilityZoneConnectivityListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArray) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListArray) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListArrayOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) ToProtectionRuleAvailabilityZoneConnectivityListOutput() ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) ToProtectionRuleAvailabilityZoneConnectivityListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) DestinationAvailabilityZoneIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) *int { return v.DestinationAvailabilityZoneIndex }).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) SnapshotScheduleLists() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList {
		return v.SnapshotScheduleLists
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListOutput) SourceAvailabilityZoneIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityList) *int { return v.SourceAvailabilityZoneIndex }).(pulumi.IntPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleAvailabilityZoneConnectivityListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleAvailabilityZoneConnectivityList {
		return vs[0].([]ProtectionRuleAvailabilityZoneConnectivityList)[vs[1].(int)]
	}).(ProtectionRuleAvailabilityZoneConnectivityListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList struct {
	AutoSuspendTimeoutSecs        *int                                                                                             `pulumi:"autoSuspendTimeoutSecs"`
	LocalSnapshotRetentionPolicy  *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy  `pulumi:"localSnapshotRetentionPolicy"`
	RecoveryPointObjectiveSecs    int                                                                                              `pulumi:"recoveryPointObjectiveSecs"`
	RemoteSnapshotRetentionPolicy *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy `pulumi:"remoteSnapshotRetentionPolicy"`
	SnapshotType                  *string                                                                                          `pulumi:"snapshotType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs struct {
	AutoSuspendTimeoutSecs        pulumi.IntPtrInput                                                                                      `pulumi:"autoSuspendTimeoutSecs"`
	LocalSnapshotRetentionPolicy  ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput  `pulumi:"localSnapshotRetentionPolicy"`
	RecoveryPointObjectiveSecs    pulumi.IntInput                                                                                         `pulumi:"recoveryPointObjectiveSecs"`
	RemoteSnapshotRetentionPolicy ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput `pulumi:"remoteSnapshotRetentionPolicy"`
	SnapshotType                  pulumi.StringPtrInput                                                                                   `pulumi:"snapshotType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray{ ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{...} }
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray []ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) AutoSuspendTimeoutSecs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *int {
		return v.AutoSuspendTimeoutSecs
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) LocalSnapshotRetentionPolicy() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		return v.LocalSnapshotRetentionPolicy
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) RecoveryPointObjectiveSecs() pulumi.IntOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) int {
		return v.RecoveryPointObjectiveSecs
	}).(pulumi.IntOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) RemoteSnapshotRetentionPolicy() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		return v.RemoteSnapshotRetentionPolicy
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput) SnapshotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList) *string {
		return v.SnapshotType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList {
		return vs[0].([]ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleList)[vs[1].(int)]
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy struct {
	NumSnapshots                              *int    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             *int    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType *string `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs struct {
	NumSnapshots                              pulumi.IntPtrInput    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             pulumi.IntPtrInput    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType pulumi.StringPtrInput `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput)
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput).ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs, ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtr and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput` via:
//
//	        ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput
}

type protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs

func ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtr(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput {
	return (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType)(v)
}

func (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		return &v
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *string {
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) Elem() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy
		return ret
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy struct {
	NumSnapshots                              *int    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             *int    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType *string `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput` via:
//
//	ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{...}
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs struct {
	NumSnapshots                              pulumi.IntPtrInput    `pulumi:"numSnapshots"`
	RollupRetentionPolicyMultiple             pulumi.IntPtrInput    `pulumi:"rollupRetentionPolicyMultiple"`
	RollupRetentionPolicySnapshotIntervalType pulumi.StringPtrInput `pulumi:"rollupRetentionPolicySnapshotIntervalType"`
}

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput)
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput).ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx)
}

// ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput is an input type that accepts ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs, ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtr and ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput` via:
//
//	        ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput interface {
	pulumi.Input

	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput
	ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput
}

type protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs

func ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtr(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput {
	return (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType)(v)
}

func (*protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return i.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *protectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrType) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		return &v
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *string {
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy)(nil)).Elem()
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) ToProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutputWithContext(ctx context.Context) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput {
	return o
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) Elem() ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy
		return ret
	}).(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) NumSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.NumSnapshots
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicyMultiple() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicyMultiple
	}).(pulumi.IntPtrOutput)
}

func (o ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput) RollupRetentionPolicySnapshotIntervalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RollupRetentionPolicySnapshotIntervalType
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategory struct {
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// ProtectionRuleCategoryInput is an input type that accepts ProtectionRuleCategoryArgs and ProtectionRuleCategoryOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryInput` via:
//
//	ProtectionRuleCategoryArgs{...}
type ProtectionRuleCategoryInput interface {
	pulumi.Input

	ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput
	ToProtectionRuleCategoryOutputWithContext(context.Context) ProtectionRuleCategoryOutput
}

type ProtectionRuleCategoryArgs struct {
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProtectionRuleCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategory)(nil)).Elem()
}

func (i ProtectionRuleCategoryArgs) ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput {
	return i.ToProtectionRuleCategoryOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryArgs) ToProtectionRuleCategoryOutputWithContext(ctx context.Context) ProtectionRuleCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryOutput)
}

// ProtectionRuleCategoryArrayInput is an input type that accepts ProtectionRuleCategoryArray and ProtectionRuleCategoryArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryArrayInput` via:
//
//	ProtectionRuleCategoryArray{ ProtectionRuleCategoryArgs{...} }
type ProtectionRuleCategoryArrayInput interface {
	pulumi.Input

	ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput
	ToProtectionRuleCategoryArrayOutputWithContext(context.Context) ProtectionRuleCategoryArrayOutput
}

type ProtectionRuleCategoryArray []ProtectionRuleCategoryInput

func (ProtectionRuleCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategory)(nil)).Elem()
}

func (i ProtectionRuleCategoryArray) ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput {
	return i.ToProtectionRuleCategoryArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryArray) ToProtectionRuleCategoryArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryArrayOutput)
}

type ProtectionRuleCategoryOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategory)(nil)).Elem()
}

func (o ProtectionRuleCategoryOutput) ToProtectionRuleCategoryOutput() ProtectionRuleCategoryOutput {
	return o
}

func (o ProtectionRuleCategoryOutput) ToProtectionRuleCategoryOutputWithContext(ctx context.Context) ProtectionRuleCategoryOutput {
	return o
}

// The name for the protection rule.
func (o ProtectionRuleCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o ProtectionRuleCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategory)(nil)).Elem()
}

func (o ProtectionRuleCategoryArrayOutput) ToProtectionRuleCategoryArrayOutput() ProtectionRuleCategoryArrayOutput {
	return o
}

func (o ProtectionRuleCategoryArrayOutput) ToProtectionRuleCategoryArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryArrayOutput {
	return o
}

func (o ProtectionRuleCategoryArrayOutput) Index(i pulumi.IntInput) ProtectionRuleCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleCategory {
		return vs[0].([]ProtectionRuleCategory)[vs[1].(int)]
	}).(ProtectionRuleCategoryOutput)
}

type ProtectionRuleCategoryFilter struct {
	KindLists []string                            `pulumi:"kindLists"`
	Params    []ProtectionRuleCategoryFilterParam `pulumi:"params"`
	Type      *string                             `pulumi:"type"`
}

// ProtectionRuleCategoryFilterInput is an input type that accepts ProtectionRuleCategoryFilterArgs and ProtectionRuleCategoryFilterOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterInput` via:
//
//	ProtectionRuleCategoryFilterArgs{...}
type ProtectionRuleCategoryFilterInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput
	ToProtectionRuleCategoryFilterOutputWithContext(context.Context) ProtectionRuleCategoryFilterOutput
}

type ProtectionRuleCategoryFilterArgs struct {
	KindLists pulumi.StringArrayInput                     `pulumi:"kindLists"`
	Params    ProtectionRuleCategoryFilterParamArrayInput `pulumi:"params"`
	Type      pulumi.StringPtrInput                       `pulumi:"type"`
}

func (ProtectionRuleCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput {
	return i.ToProtectionRuleCategoryFilterOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterOutput)
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return i.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterArgs) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterOutput).ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx)
}

// ProtectionRuleCategoryFilterPtrInput is an input type that accepts ProtectionRuleCategoryFilterArgs, ProtectionRuleCategoryFilterPtr and ProtectionRuleCategoryFilterPtrOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterPtrInput` via:
//
//	        ProtectionRuleCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleCategoryFilterPtrInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput
	ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Context) ProtectionRuleCategoryFilterPtrOutput
}

type protectionRuleCategoryFilterPtrType ProtectionRuleCategoryFilterArgs

func ProtectionRuleCategoryFilterPtr(v *ProtectionRuleCategoryFilterArgs) ProtectionRuleCategoryFilterPtrInput {
	return (*protectionRuleCategoryFilterPtrType)(v)
}

func (*protectionRuleCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (i *protectionRuleCategoryFilterPtrType) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return i.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *protectionRuleCategoryFilterPtrType) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterPtrOutput)
}

type ProtectionRuleCategoryFilterOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterOutput() ProtectionRuleCategoryFilterOutput {
	return o
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterOutput {
	return o
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return o.ToProtectionRuleCategoryFilterPtrOutputWithContext(context.Background())
}

func (o ProtectionRuleCategoryFilterOutput) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleCategoryFilter) *ProtectionRuleCategoryFilter {
		return &v
	}).(ProtectionRuleCategoryFilterPtrOutput)
}

func (o ProtectionRuleCategoryFilterOutput) KindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) []string { return v.KindLists }).(pulumi.StringArrayOutput)
}

func (o ProtectionRuleCategoryFilterOutput) Params() ProtectionRuleCategoryFilterParamArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) []ProtectionRuleCategoryFilterParam { return v.Params }).(ProtectionRuleCategoryFilterParamArrayOutput)
}

func (o ProtectionRuleCategoryFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleCategoryFilter)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterPtrOutput) ToProtectionRuleCategoryFilterPtrOutput() ProtectionRuleCategoryFilterPtrOutput {
	return o
}

func (o ProtectionRuleCategoryFilterPtrOutput) ToProtectionRuleCategoryFilterPtrOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterPtrOutput {
	return o
}

func (o ProtectionRuleCategoryFilterPtrOutput) Elem() ProtectionRuleCategoryFilterOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) ProtectionRuleCategoryFilter {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleCategoryFilter
		return ret
	}).(ProtectionRuleCategoryFilterOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) KindLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) []string {
		if v == nil {
			return nil
		}
		return v.KindLists
	}).(pulumi.StringArrayOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) Params() ProtectionRuleCategoryFilterParamArrayOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) []ProtectionRuleCategoryFilterParam {
		if v == nil {
			return nil
		}
		return v.Params
	}).(ProtectionRuleCategoryFilterParamArrayOutput)
}

func (o ProtectionRuleCategoryFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleCategoryFilterParam struct {
	// The name for the protection rule.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// ProtectionRuleCategoryFilterParamInput is an input type that accepts ProtectionRuleCategoryFilterParamArgs and ProtectionRuleCategoryFilterParamOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterParamInput` via:
//
//	ProtectionRuleCategoryFilterParamArgs{...}
type ProtectionRuleCategoryFilterParamInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput
	ToProtectionRuleCategoryFilterParamOutputWithContext(context.Context) ProtectionRuleCategoryFilterParamOutput
}

type ProtectionRuleCategoryFilterParamArgs struct {
	// The name for the protection rule.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProtectionRuleCategoryFilterParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterParamArgs) ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput {
	return i.ToProtectionRuleCategoryFilterParamOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterParamArgs) ToProtectionRuleCategoryFilterParamOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterParamOutput)
}

// ProtectionRuleCategoryFilterParamArrayInput is an input type that accepts ProtectionRuleCategoryFilterParamArray and ProtectionRuleCategoryFilterParamArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleCategoryFilterParamArrayInput` via:
//
//	ProtectionRuleCategoryFilterParamArray{ ProtectionRuleCategoryFilterParamArgs{...} }
type ProtectionRuleCategoryFilterParamArrayInput interface {
	pulumi.Input

	ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput
	ToProtectionRuleCategoryFilterParamArrayOutputWithContext(context.Context) ProtectionRuleCategoryFilterParamArrayOutput
}

type ProtectionRuleCategoryFilterParamArray []ProtectionRuleCategoryFilterParamInput

func (ProtectionRuleCategoryFilterParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (i ProtectionRuleCategoryFilterParamArray) ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput {
	return i.ToProtectionRuleCategoryFilterParamArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleCategoryFilterParamArray) ToProtectionRuleCategoryFilterParamArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleCategoryFilterParamArrayOutput)
}

type ProtectionRuleCategoryFilterParamOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterParamOutput) ToProtectionRuleCategoryFilterParamOutput() ProtectionRuleCategoryFilterParamOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamOutput) ToProtectionRuleCategoryFilterParamOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamOutput {
	return o
}

// The name for the protection rule.
func (o ProtectionRuleCategoryFilterParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilterParam) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProtectionRuleCategoryFilterParamOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProtectionRuleCategoryFilterParam) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProtectionRuleCategoryFilterParamArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleCategoryFilterParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleCategoryFilterParam)(nil)).Elem()
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) ToProtectionRuleCategoryFilterParamArrayOutput() ProtectionRuleCategoryFilterParamArrayOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) ToProtectionRuleCategoryFilterParamArrayOutputWithContext(ctx context.Context) ProtectionRuleCategoryFilterParamArrayOutput {
	return o
}

func (o ProtectionRuleCategoryFilterParamArrayOutput) Index(i pulumi.IntInput) ProtectionRuleCategoryFilterParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleCategoryFilterParam {
		return vs[0].([]ProtectionRuleCategoryFilterParam)[vs[1].(int)]
	}).(ProtectionRuleCategoryFilterParamOutput)
}

type ProtectionRuleOrderedAvailabilityZoneList struct {
	AvailabilityZoneUrl *string `pulumi:"availabilityZoneUrl"`
	ClusterUuid         *string `pulumi:"clusterUuid"`
}

// ProtectionRuleOrderedAvailabilityZoneListInput is an input type that accepts ProtectionRuleOrderedAvailabilityZoneListArgs and ProtectionRuleOrderedAvailabilityZoneListOutput values.
// You can construct a concrete instance of `ProtectionRuleOrderedAvailabilityZoneListInput` via:
//
//	ProtectionRuleOrderedAvailabilityZoneListArgs{...}
type ProtectionRuleOrderedAvailabilityZoneListInput interface {
	pulumi.Input

	ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput
	ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput
}

type ProtectionRuleOrderedAvailabilityZoneListArgs struct {
	AvailabilityZoneUrl pulumi.StringPtrInput `pulumi:"availabilityZoneUrl"`
	ClusterUuid         pulumi.StringPtrInput `pulumi:"clusterUuid"`
}

func (ProtectionRuleOrderedAvailabilityZoneListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (i ProtectionRuleOrderedAvailabilityZoneListArgs) ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput {
	return i.ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(context.Background())
}

func (i ProtectionRuleOrderedAvailabilityZoneListArgs) ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOrderedAvailabilityZoneListOutput)
}

// ProtectionRuleOrderedAvailabilityZoneListArrayInput is an input type that accepts ProtectionRuleOrderedAvailabilityZoneListArray and ProtectionRuleOrderedAvailabilityZoneListArrayOutput values.
// You can construct a concrete instance of `ProtectionRuleOrderedAvailabilityZoneListArrayInput` via:
//
//	ProtectionRuleOrderedAvailabilityZoneListArray{ ProtectionRuleOrderedAvailabilityZoneListArgs{...} }
type ProtectionRuleOrderedAvailabilityZoneListArrayInput interface {
	pulumi.Input

	ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput
	ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput
}

type ProtectionRuleOrderedAvailabilityZoneListArray []ProtectionRuleOrderedAvailabilityZoneListInput

func (ProtectionRuleOrderedAvailabilityZoneListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (i ProtectionRuleOrderedAvailabilityZoneListArray) ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return i.ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(context.Background())
}

func (i ProtectionRuleOrderedAvailabilityZoneListArray) ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOrderedAvailabilityZoneListArrayOutput)
}

type ProtectionRuleOrderedAvailabilityZoneListOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOrderedAvailabilityZoneListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ToProtectionRuleOrderedAvailabilityZoneListOutput() ProtectionRuleOrderedAvailabilityZoneListOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ToProtectionRuleOrderedAvailabilityZoneListOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) AvailabilityZoneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOrderedAvailabilityZoneList) *string { return v.AvailabilityZoneUrl }).(pulumi.StringPtrOutput)
}

func (o ProtectionRuleOrderedAvailabilityZoneListOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOrderedAvailabilityZoneList) *string { return v.ClusterUuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleOrderedAvailabilityZoneListArrayOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtectionRuleOrderedAvailabilityZoneList)(nil)).Elem()
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ToProtectionRuleOrderedAvailabilityZoneListArrayOutput() ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) ToProtectionRuleOrderedAvailabilityZoneListArrayOutputWithContext(ctx context.Context) ProtectionRuleOrderedAvailabilityZoneListArrayOutput {
	return o
}

func (o ProtectionRuleOrderedAvailabilityZoneListArrayOutput) Index(i pulumi.IntInput) ProtectionRuleOrderedAvailabilityZoneListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtectionRuleOrderedAvailabilityZoneList {
		return vs[0].([]ProtectionRuleOrderedAvailabilityZoneList)[vs[1].(int)]
	}).(ProtectionRuleOrderedAvailabilityZoneListOutput)
}

type ProtectionRuleOwnerReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// ProtectionRuleOwnerReferenceInput is an input type that accepts ProtectionRuleOwnerReferenceArgs and ProtectionRuleOwnerReferenceOutput values.
// You can construct a concrete instance of `ProtectionRuleOwnerReferenceInput` via:
//
//	ProtectionRuleOwnerReferenceArgs{...}
type ProtectionRuleOwnerReferenceInput interface {
	pulumi.Input

	ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput
	ToProtectionRuleOwnerReferenceOutputWithContext(context.Context) ProtectionRuleOwnerReferenceOutput
}

type ProtectionRuleOwnerReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ProtectionRuleOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOwnerReference)(nil)).Elem()
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput {
	return i.ToProtectionRuleOwnerReferenceOutputWithContext(context.Background())
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferenceOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferenceOutput)
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return i.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i ProtectionRuleOwnerReferenceArgs) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferenceOutput).ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx)
}

// ProtectionRuleOwnerReferencePtrInput is an input type that accepts ProtectionRuleOwnerReferenceArgs, ProtectionRuleOwnerReferencePtr and ProtectionRuleOwnerReferencePtrOutput values.
// You can construct a concrete instance of `ProtectionRuleOwnerReferencePtrInput` via:
//
//	        ProtectionRuleOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleOwnerReferencePtrInput interface {
	pulumi.Input

	ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput
	ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Context) ProtectionRuleOwnerReferencePtrOutput
}

type protectionRuleOwnerReferencePtrType ProtectionRuleOwnerReferenceArgs

func ProtectionRuleOwnerReferencePtr(v *ProtectionRuleOwnerReferenceArgs) ProtectionRuleOwnerReferencePtrInput {
	return (*protectionRuleOwnerReferencePtrType)(v)
}

func (*protectionRuleOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleOwnerReference)(nil)).Elem()
}

func (i *protectionRuleOwnerReferencePtrType) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return i.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *protectionRuleOwnerReferencePtrType) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleOwnerReferencePtrOutput)
}

type ProtectionRuleOwnerReferenceOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleOwnerReference)(nil)).Elem()
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferenceOutput() ProtectionRuleOwnerReferenceOutput {
	return o
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferenceOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferenceOutput {
	return o
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return o.ToProtectionRuleOwnerReferencePtrOutputWithContext(context.Background())
}

func (o ProtectionRuleOwnerReferenceOutput) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleOwnerReference) *ProtectionRuleOwnerReference {
		return &v
	}).(ProtectionRuleOwnerReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleOwnerReference)(nil)).Elem()
}

func (o ProtectionRuleOwnerReferencePtrOutput) ToProtectionRuleOwnerReferencePtrOutput() ProtectionRuleOwnerReferencePtrOutput {
	return o
}

func (o ProtectionRuleOwnerReferencePtrOutput) ToProtectionRuleOwnerReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleOwnerReferencePtrOutput {
	return o
}

func (o ProtectionRuleOwnerReferencePtrOutput) Elem() ProtectionRuleOwnerReferenceOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) ProtectionRuleOwnerReference {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleOwnerReference
		return ret
	}).(ProtectionRuleOwnerReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ProtectionRuleProjectReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the protection rule.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// ProtectionRuleProjectReferenceInput is an input type that accepts ProtectionRuleProjectReferenceArgs and ProtectionRuleProjectReferenceOutput values.
// You can construct a concrete instance of `ProtectionRuleProjectReferenceInput` via:
//
//	ProtectionRuleProjectReferenceArgs{...}
type ProtectionRuleProjectReferenceInput interface {
	pulumi.Input

	ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput
	ToProtectionRuleProjectReferenceOutputWithContext(context.Context) ProtectionRuleProjectReferenceOutput
}

type ProtectionRuleProjectReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the protection rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ProtectionRuleProjectReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleProjectReference)(nil)).Elem()
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput {
	return i.ToProtectionRuleProjectReferenceOutputWithContext(context.Background())
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferenceOutputWithContext(ctx context.Context) ProtectionRuleProjectReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferenceOutput)
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return i.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (i ProtectionRuleProjectReferenceArgs) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferenceOutput).ToProtectionRuleProjectReferencePtrOutputWithContext(ctx)
}

// ProtectionRuleProjectReferencePtrInput is an input type that accepts ProtectionRuleProjectReferenceArgs, ProtectionRuleProjectReferencePtr and ProtectionRuleProjectReferencePtrOutput values.
// You can construct a concrete instance of `ProtectionRuleProjectReferencePtrInput` via:
//
//	        ProtectionRuleProjectReferenceArgs{...}
//
//	or:
//
//	        nil
type ProtectionRuleProjectReferencePtrInput interface {
	pulumi.Input

	ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput
	ToProtectionRuleProjectReferencePtrOutputWithContext(context.Context) ProtectionRuleProjectReferencePtrOutput
}

type protectionRuleProjectReferencePtrType ProtectionRuleProjectReferenceArgs

func ProtectionRuleProjectReferencePtr(v *ProtectionRuleProjectReferenceArgs) ProtectionRuleProjectReferencePtrInput {
	return (*protectionRuleProjectReferencePtrType)(v)
}

func (*protectionRuleProjectReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleProjectReference)(nil)).Elem()
}

func (i *protectionRuleProjectReferencePtrType) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return i.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (i *protectionRuleProjectReferencePtrType) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionRuleProjectReferencePtrOutput)
}

type ProtectionRuleProjectReferenceOutput struct{ *pulumi.OutputState }

func (ProtectionRuleProjectReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionRuleProjectReference)(nil)).Elem()
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferenceOutput() ProtectionRuleProjectReferenceOutput {
	return o
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferenceOutputWithContext(ctx context.Context) ProtectionRuleProjectReferenceOutput {
	return o
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return o.ToProtectionRuleProjectReferencePtrOutputWithContext(context.Background())
}

func (o ProtectionRuleProjectReferenceOutput) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionRuleProjectReference) *ProtectionRuleProjectReference {
		return &v
	}).(ProtectionRuleProjectReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleProjectReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleProjectReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleProjectReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionRuleProjectReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ProtectionRuleProjectReferencePtrOutput struct{ *pulumi.OutputState }

func (ProtectionRuleProjectReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionRuleProjectReference)(nil)).Elem()
}

func (o ProtectionRuleProjectReferencePtrOutput) ToProtectionRuleProjectReferencePtrOutput() ProtectionRuleProjectReferencePtrOutput {
	return o
}

func (o ProtectionRuleProjectReferencePtrOutput) ToProtectionRuleProjectReferencePtrOutputWithContext(ctx context.Context) ProtectionRuleProjectReferencePtrOutput {
	return o
}

func (o ProtectionRuleProjectReferencePtrOutput) Elem() ProtectionRuleProjectReferenceOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) ProtectionRuleProjectReference {
		if v != nil {
			return *v
		}
		var ret ProtectionRuleProjectReference
		return ret
	}).(ProtectionRuleProjectReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o ProtectionRuleProjectReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the protection rule.
func (o ProtectionRuleProjectReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o ProtectionRuleProjectReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionRuleProjectReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanCategory struct {
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// value of the key.
	Value *string `pulumi:"value"`
}

// RecoveryPlanCategoryInput is an input type that accepts RecoveryPlanCategoryArgs and RecoveryPlanCategoryOutput values.
// You can construct a concrete instance of `RecoveryPlanCategoryInput` via:
//
//	RecoveryPlanCategoryArgs{...}
type RecoveryPlanCategoryInput interface {
	pulumi.Input

	ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput
	ToRecoveryPlanCategoryOutputWithContext(context.Context) RecoveryPlanCategoryOutput
}

type RecoveryPlanCategoryArgs struct {
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// value of the key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RecoveryPlanCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanCategory)(nil)).Elem()
}

func (i RecoveryPlanCategoryArgs) ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput {
	return i.ToRecoveryPlanCategoryOutputWithContext(context.Background())
}

func (i RecoveryPlanCategoryArgs) ToRecoveryPlanCategoryOutputWithContext(ctx context.Context) RecoveryPlanCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanCategoryOutput)
}

// RecoveryPlanCategoryArrayInput is an input type that accepts RecoveryPlanCategoryArray and RecoveryPlanCategoryArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanCategoryArrayInput` via:
//
//	RecoveryPlanCategoryArray{ RecoveryPlanCategoryArgs{...} }
type RecoveryPlanCategoryArrayInput interface {
	pulumi.Input

	ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput
	ToRecoveryPlanCategoryArrayOutputWithContext(context.Context) RecoveryPlanCategoryArrayOutput
}

type RecoveryPlanCategoryArray []RecoveryPlanCategoryInput

func (RecoveryPlanCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanCategory)(nil)).Elem()
}

func (i RecoveryPlanCategoryArray) ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput {
	return i.ToRecoveryPlanCategoryArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanCategoryArray) ToRecoveryPlanCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanCategoryArrayOutput)
}

type RecoveryPlanCategoryOutput struct{ *pulumi.OutputState }

func (RecoveryPlanCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanCategory)(nil)).Elem()
}

func (o RecoveryPlanCategoryOutput) ToRecoveryPlanCategoryOutput() RecoveryPlanCategoryOutput {
	return o
}

func (o RecoveryPlanCategoryOutput) ToRecoveryPlanCategoryOutputWithContext(ctx context.Context) RecoveryPlanCategoryOutput {
	return o
}

// The name for the Recovery Plan.
func (o RecoveryPlanCategoryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanCategory) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// value of the key.
func (o RecoveryPlanCategoryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanCategory) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RecoveryPlanCategoryArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanCategory)(nil)).Elem()
}

func (o RecoveryPlanCategoryArrayOutput) ToRecoveryPlanCategoryArrayOutput() RecoveryPlanCategoryArrayOutput {
	return o
}

func (o RecoveryPlanCategoryArrayOutput) ToRecoveryPlanCategoryArrayOutputWithContext(ctx context.Context) RecoveryPlanCategoryArrayOutput {
	return o
}

func (o RecoveryPlanCategoryArrayOutput) Index(i pulumi.IntInput) RecoveryPlanCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanCategory {
		return vs[0].([]RecoveryPlanCategory)[vs[1].(int)]
	}).(RecoveryPlanCategoryOutput)
}

type RecoveryPlanOwnerReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind *string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanOwnerReferenceInput is an input type that accepts RecoveryPlanOwnerReferenceArgs and RecoveryPlanOwnerReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanOwnerReferenceInput` via:
//
//	RecoveryPlanOwnerReferenceArgs{...}
type RecoveryPlanOwnerReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput
	ToRecoveryPlanOwnerReferenceOutputWithContext(context.Context) RecoveryPlanOwnerReferenceOutput
}

type RecoveryPlanOwnerReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanOwnerReference)(nil)).Elem()
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput {
	return i.ToRecoveryPlanOwnerReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferenceOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferenceOutput)
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return i.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (i RecoveryPlanOwnerReferenceArgs) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferenceOutput).ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx)
}

// RecoveryPlanOwnerReferencePtrInput is an input type that accepts RecoveryPlanOwnerReferenceArgs, RecoveryPlanOwnerReferencePtr and RecoveryPlanOwnerReferencePtrOutput values.
// You can construct a concrete instance of `RecoveryPlanOwnerReferencePtrInput` via:
//
//	        RecoveryPlanOwnerReferenceArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanOwnerReferencePtrInput interface {
	pulumi.Input

	ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput
	ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Context) RecoveryPlanOwnerReferencePtrOutput
}

type recoveryPlanOwnerReferencePtrType RecoveryPlanOwnerReferenceArgs

func RecoveryPlanOwnerReferencePtr(v *RecoveryPlanOwnerReferenceArgs) RecoveryPlanOwnerReferencePtrInput {
	return (*recoveryPlanOwnerReferencePtrType)(v)
}

func (*recoveryPlanOwnerReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanOwnerReference)(nil)).Elem()
}

func (i *recoveryPlanOwnerReferencePtrType) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return i.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (i *recoveryPlanOwnerReferencePtrType) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanOwnerReferencePtrOutput)
}

type RecoveryPlanOwnerReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanOwnerReference)(nil)).Elem()
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferenceOutput() RecoveryPlanOwnerReferenceOutput {
	return o
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferenceOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferenceOutput {
	return o
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return o.ToRecoveryPlanOwnerReferencePtrOutputWithContext(context.Background())
}

func (o RecoveryPlanOwnerReferenceOutput) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanOwnerReference) *RecoveryPlanOwnerReference {
		return &v
	}).(RecoveryPlanOwnerReferencePtrOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanOwnerReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanOwnerReference) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type RecoveryPlanOwnerReferencePtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanOwnerReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanOwnerReference)(nil)).Elem()
}

func (o RecoveryPlanOwnerReferencePtrOutput) ToRecoveryPlanOwnerReferencePtrOutput() RecoveryPlanOwnerReferencePtrOutput {
	return o
}

func (o RecoveryPlanOwnerReferencePtrOutput) ToRecoveryPlanOwnerReferencePtrOutputWithContext(ctx context.Context) RecoveryPlanOwnerReferencePtrOutput {
	return o
}

func (o RecoveryPlanOwnerReferencePtrOutput) Elem() RecoveryPlanOwnerReferenceOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) RecoveryPlanOwnerReference {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanOwnerReference
		return ret
	}).(RecoveryPlanOwnerReferenceOutput)
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanOwnerReferencePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanOwnerReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanOwnerReferencePtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanOwnerReference) *string {
		if v == nil {
			return nil
		}
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParameters struct {
	FloatingIpAssignmentLists []RecoveryPlanParametersFloatingIpAssignmentList `pulumi:"floatingIpAssignmentLists"`
	NetworkMappingLists       []RecoveryPlanParametersNetworkMappingList       `pulumi:"networkMappingLists"`
}

// RecoveryPlanParametersInput is an input type that accepts RecoveryPlanParametersArgs and RecoveryPlanParametersOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersInput` via:
//
//	RecoveryPlanParametersArgs{...}
type RecoveryPlanParametersInput interface {
	pulumi.Input

	ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput
	ToRecoveryPlanParametersOutputWithContext(context.Context) RecoveryPlanParametersOutput
}

type RecoveryPlanParametersArgs struct {
	FloatingIpAssignmentLists RecoveryPlanParametersFloatingIpAssignmentListArrayInput `pulumi:"floatingIpAssignmentLists"`
	NetworkMappingLists       RecoveryPlanParametersNetworkMappingListArrayInput       `pulumi:"networkMappingLists"`
}

func (RecoveryPlanParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParameters)(nil)).Elem()
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput {
	return i.ToRecoveryPlanParametersOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersOutputWithContext(ctx context.Context) RecoveryPlanParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersOutput)
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return i.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersArgs) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersOutput).ToRecoveryPlanParametersPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersPtrInput is an input type that accepts RecoveryPlanParametersArgs, RecoveryPlanParametersPtr and RecoveryPlanParametersPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersPtrInput` via:
//
//	        RecoveryPlanParametersArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput
	ToRecoveryPlanParametersPtrOutputWithContext(context.Context) RecoveryPlanParametersPtrOutput
}

type recoveryPlanParametersPtrType RecoveryPlanParametersArgs

func RecoveryPlanParametersPtr(v *RecoveryPlanParametersArgs) RecoveryPlanParametersPtrInput {
	return (*recoveryPlanParametersPtrType)(v)
}

func (*recoveryPlanParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParameters)(nil)).Elem()
}

func (i *recoveryPlanParametersPtrType) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return i.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersPtrType) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersPtrOutput)
}

type RecoveryPlanParametersOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParameters)(nil)).Elem()
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersOutput() RecoveryPlanParametersOutput {
	return o
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersOutputWithContext(ctx context.Context) RecoveryPlanParametersOutput {
	return o
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return o.ToRecoveryPlanParametersPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersOutput) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParameters) *RecoveryPlanParameters {
		return &v
	}).(RecoveryPlanParametersPtrOutput)
}

func (o RecoveryPlanParametersOutput) FloatingIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParameters) []RecoveryPlanParametersFloatingIpAssignmentList {
		return v.FloatingIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersOutput) NetworkMappingLists() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParameters) []RecoveryPlanParametersNetworkMappingList {
		return v.NetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParameters)(nil)).Elem()
}

func (o RecoveryPlanParametersPtrOutput) ToRecoveryPlanParametersPtrOutput() RecoveryPlanParametersPtrOutput {
	return o
}

func (o RecoveryPlanParametersPtrOutput) ToRecoveryPlanParametersPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersPtrOutput {
	return o
}

func (o RecoveryPlanParametersPtrOutput) Elem() RecoveryPlanParametersOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) RecoveryPlanParameters {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParameters
		return ret
	}).(RecoveryPlanParametersOutput)
}

func (o RecoveryPlanParametersPtrOutput) FloatingIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) []RecoveryPlanParametersFloatingIpAssignmentList {
		if v == nil {
			return nil
		}
		return v.FloatingIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersPtrOutput) NetworkMappingLists() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParameters) []RecoveryPlanParametersNetworkMappingList {
		if v == nil {
			return nil
		}
		return v.NetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentList struct {
	AvailabilityZoneUrl string                                                             `pulumi:"availabilityZoneUrl"`
	VmIpAssignmentLists []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList `pulumi:"vmIpAssignmentLists"`
}

// RecoveryPlanParametersFloatingIpAssignmentListInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListArgs and RecoveryPlanParametersFloatingIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListArgs struct {
	AvailabilityZoneUrl pulumi.StringInput                                                         `pulumi:"availabilityZoneUrl"`
	VmIpAssignmentLists RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput `pulumi:"vmIpAssignmentLists"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListOutput)
}

// RecoveryPlanParametersFloatingIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListArray and RecoveryPlanParametersFloatingIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListArray{ RecoveryPlanParametersFloatingIpAssignmentListArgs{...} }
type RecoveryPlanParametersFloatingIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListArray []RecoveryPlanParametersFloatingIpAssignmentListInput

func (RecoveryPlanParametersFloatingIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) AvailabilityZoneUrl() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentList) string { return v.AvailabilityZoneUrl }).(pulumi.StringOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListOutput) VmIpAssignmentLists() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentList) []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList {
		return v.VmIpAssignmentLists
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersFloatingIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersFloatingIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersFloatingIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersFloatingIpAssignmentListOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList struct {
	RecoveryFloatingIpConfig *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig `pulumi:"recoveryFloatingIpConfig"`
	TestFloatingIpConfig     *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig     `pulumi:"testFloatingIpConfig"`
	VmNicInformation         RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation          `pulumi:"vmNicInformation"`
	VmReference              RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference               `pulumi:"vmReference"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs struct {
	RecoveryFloatingIpConfig RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput `pulumi:"recoveryFloatingIpConfig"`
	TestFloatingIpConfig     RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput     `pulumi:"testFloatingIpConfig"`
	VmNicInformation         RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput            `pulumi:"vmNicInformation"`
	VmReference              RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput                 `pulumi:"vmReference"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray{ RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{...} }
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray []RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) RecoveryFloatingIpConfig() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		return v.RecoveryFloatingIpConfig
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) TestFloatingIpConfig() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		return v.TestFloatingIpConfig
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) VmNicInformation() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation {
		return v.VmNicInformation
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput) VmReference() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference {
		return v.VmReference
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig struct {
	Ip                        *string `pulumi:"ip"`
	ShouldAllocateDynamically *bool   `pulumi:"shouldAllocateDynamically"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs struct {
	Ip                        pulumi.StringPtrInput `pulumi:"ip"`
	ShouldAllocateDynamically pulumi.BoolPtrInput   `pulumi:"shouldAllocateDynamically"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput)
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput).ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs, RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtr and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput` via:
//
//	        RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput
}

type recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs

func RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtr(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput {
	return (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType)(v)
}

func (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		return &v
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *bool {
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) Elem() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig
		return ret
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig struct {
	Ip                        *string `pulumi:"ip"`
	ShouldAllocateDynamically *bool   `pulumi:"shouldAllocateDynamically"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs struct {
	Ip                        pulumi.StringPtrInput `pulumi:"ip"`
	ShouldAllocateDynamically pulumi.BoolPtrInput   `pulumi:"shouldAllocateDynamically"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput)
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput).ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs, RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtr and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput` via:
//
//	        RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput
}

type recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs

func RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtr(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput {
	return (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType)(v)
}

func (*recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrType) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		return &v
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *bool {
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) Elem() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig
		return ret
	}).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput) ShouldAllocateDynamically() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldAllocateDynamically
	}).(pulumi.BoolPtrOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation struct {
	Ip *string `pulumi:"ip"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs struct {
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation) *string {
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformation) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput is an input type that accepts RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs and RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput` via:
//
//	RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs{...}
type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput
	ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference)(nil)).Elem()
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return i.ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference)(nil)).Elem()
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput() RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o
}

func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReference) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingList struct {
	AreNetworksStretched                *bool                                                                        `pulumi:"areNetworksStretched"`
	AvailabilityZoneNetworkMappingLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList `pulumi:"availabilityZoneNetworkMappingLists"`
}

// RecoveryPlanParametersNetworkMappingListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListArgs and RecoveryPlanParametersNetworkMappingListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListArgs{...}
type RecoveryPlanParametersNetworkMappingListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput
	ToRecoveryPlanParametersNetworkMappingListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListOutput
}

type RecoveryPlanParametersNetworkMappingListArgs struct {
	AreNetworksStretched                pulumi.BoolPtrInput                                                                  `pulumi:"areNetworksStretched"`
	AvailabilityZoneNetworkMappingLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput `pulumi:"availabilityZoneNetworkMappingLists"`
}

func (RecoveryPlanParametersNetworkMappingListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListOutput)
}

// RecoveryPlanParametersNetworkMappingListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListArray and RecoveryPlanParametersNetworkMappingListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListArray{ RecoveryPlanParametersNetworkMappingListArgs{...} }
type RecoveryPlanParametersNetworkMappingListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListArray []RecoveryPlanParametersNetworkMappingListInput

func (RecoveryPlanParametersNetworkMappingListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListOutput) AreNetworksStretched() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingList) *bool { return v.AreNetworksStretched }).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListOutput) AvailabilityZoneNetworkMappingLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList {
		return v.AvailabilityZoneNetworkMappingLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList struct {
	AvailabilityZoneUrl       *string                                                                                              `pulumi:"availabilityZoneUrl"`
	ClusterReferenceLists     []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList     `pulumi:"clusterReferenceLists"`
	RecoveryIpAssignmentLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList `pulumi:"recoveryIpAssignmentLists"`
	RecoveryNetwork           *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork           `pulumi:"recoveryNetwork"`
	TestIpAssignmentLists     []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList     `pulumi:"testIpAssignmentLists"`
	TestNetwork               *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork               `pulumi:"testNetwork"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs struct {
	AvailabilityZoneUrl       pulumi.StringPtrInput                                                                                        `pulumi:"availabilityZoneUrl"`
	ClusterReferenceLists     RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput     `pulumi:"clusterReferenceLists"`
	RecoveryIpAssignmentLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput `pulumi:"recoveryIpAssignmentLists"`
	RecoveryNetwork           RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput            `pulumi:"recoveryNetwork"`
	TestIpAssignmentLists     RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayInput     `pulumi:"testIpAssignmentLists"`
	TestNetwork               RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrInput                `pulumi:"testNetwork"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) AvailabilityZoneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *string {
		return v.AvailabilityZoneUrl
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) ClusterReferenceLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList {
		return v.ClusterReferenceLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) RecoveryIpAssignmentLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList {
		return v.RecoveryIpAssignmentLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) RecoveryNetwork() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		return v.RecoveryNetwork
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) TestIpAssignmentLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentList {
		return v.TestIpAssignmentLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestIpAssignmentListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput) TestNetwork() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetwork {
		return v.TestNetwork
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListTestNetworkPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList) string {
		return v.Uuid
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList struct {
	IpConfigLists []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference    `pulumi:"vmReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs struct {
	IpConfigLists RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput `pulumi:"ipConfigLists"`
	VmReference   RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput       `pulumi:"vmReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) IpConfigLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList {
		return v.IpConfigLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput) VmReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference {
		return v.VmReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList struct {
	IpAddress string `pulumi:"ipAddress"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList) string {
		return v.IpAddress
	}).(pulumi.StringOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference struct {
	// (Required) The kind name (Default value: `project`).
	Kind string `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name *string `pulumi:"name"`
	// (Required) the UUID.
	Uuid *string `pulumi:"uuid"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs struct {
	// (Required) The kind name (Default value: `project`).
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name for the Recovery Plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Required) the UUID.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput {
	return o
}

// (Required) The kind name (Default value: `project`).
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// (Required) the UUID.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReference) *string {
		return v.Uuid
	}).(pulumi.StringPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork struct {
	// The name for the Recovery Plan.
	Name                    *string                                                                                                           `pulumi:"name"`
	SubnetLists             []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList             `pulumi:"subnetLists"`
	UseVpcReference         *bool                                                                                                             `pulumi:"useVpcReference"`
	VirtualNetworkReference *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference `pulumi:"virtualNetworkReference"`
	VpcReference            *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference            `pulumi:"vpcReference"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs struct {
	// The name for the Recovery Plan.
	Name                    pulumi.StringPtrInput                                                                                                    `pulumi:"name"`
	SubnetLists             RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput            `pulumi:"subnetLists"`
	UseVpcReference         pulumi.BoolPtrInput                                                                                                      `pulumi:"useVpcReference"`
	VirtualNetworkReference RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrInput `pulumi:"virtualNetworkReference"`
	VpcReference            RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrInput            `pulumi:"vpcReference"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput)
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput).ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs, RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtr and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput` via:
//
//	        RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{...}
//
//	or:
//
//	        nil
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput
}

type recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs

func RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtr(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput {
	return (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType)(v)
}

func (*recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (i *recoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrType) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(context.Background())
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		return &v
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *bool {
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) Elem() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork {
		if v != nil {
			return *v
		}
		var ret RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork
		return ret
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput)
}

// The name for the Recovery Plan.
func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) SubnetLists() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		if v == nil {
			return nil
		}
		return v.SubnetLists
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) UseVpcReference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.UseVpcReference
	}).(pulumi.BoolPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) VirtualNetworkReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReference {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVirtualNetworkReferencePtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput) VpcReference() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput {
	return o.ApplyT(func(v *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetwork) *RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReference {
		if v == nil {
			return nil
		}
		return v.VpcReference
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkVpcReferencePtrOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList struct {
	ExternalConnectivityState *string `pulumi:"externalConnectivityState"`
	GatewayIp                 string  `pulumi:"gatewayIp"`
	PrefixLength              int     `pulumi:"prefixLength"`
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{...}
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs struct {
	ExternalConnectivityState pulumi.StringPtrInput `pulumi:"externalConnectivityState"`
	GatewayIp                 pulumi.StringInput    `pulumi:"gatewayIp"`
	PrefixLength              pulumi.IntInput       `pulumi:"prefixLength"`
}

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput)
}

// RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput is an input type that accepts RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray and RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput` via:
//
//	RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray{ RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{...} }
type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput interface {
	pulumi.Input

	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput
	ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray []RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return i.ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) ExternalConnectivityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) *string {
		return v.ExternalConnectivityState
	}).(pulumi.StringPtrOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) string {
		return v.GatewayIp
	}).(pulumi.StringOutput)
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList) int {
		return v.PrefixLength
	}).(pulumi.IntOutput)
}

type RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)(nil)).Elem()
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput() RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) ToRecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutputWithContext(ctx context.Context) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput {
	return o
}

func (o RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput) Index(i pulumi.IntInput) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList {
		return vs[0].([]RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetList)[vs[1].(int)]
	}).(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyCategoryInput)(nil)).Elem(), AccessControlPolicyCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyCategoryArrayInput)(nil)).Elem(), AccessControlPolicyCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListInput)(nil)).Elem(), AccessControlPolicyContextFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListArrayInput)(nil)).Elem(), AccessControlPolicyContextFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListInput)(nil)).Elem(), AccessControlPolicyContextFilterListEntityFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListArrayInput)(nil)).Elem(), AccessControlPolicyContextFilterListEntityFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideInput)(nil)).Elem(), AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListInput)(nil)).Elem(), AccessControlPolicyContextFilterListScopeFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListArrayInput)(nil)).Elem(), AccessControlPolicyContextFilterListScopeFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideInput)(nil)).Elem(), AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyOwnerReferenceInput)(nil)).Elem(), AccessControlPolicyOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyOwnerReferencePtrInput)(nil)).Elem(), AccessControlPolicyOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyRoleReferenceInput)(nil)).Elem(), AccessControlPolicyRoleReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyRoleReferencePtrInput)(nil)).Elem(), AccessControlPolicyRoleReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyUserGroupReferenceListInput)(nil)).Elem(), AccessControlPolicyUserGroupReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyUserGroupReferenceListArrayInput)(nil)).Elem(), AccessControlPolicyUserGroupReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyUserReferenceListInput)(nil)).Elem(), AccessControlPolicyUserReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessControlPolicyUserReferenceListArrayInput)(nil)).Elem(), AccessControlPolicyUserReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIpAddressBlockListInput)(nil)).Elem(), AddressGroupIpAddressBlockListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupIpAddressBlockListArrayInput)(nil)).Elem(), AddressGroupIpAddressBlockListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusPtrInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusClusterProgressDetailInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusClusterProgressDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusClusterProgressDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusNodeProgressDetailInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusNodeProgressDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayInput)(nil)).Elem(), FoundationCentralImageClusterClusterStatusNodeProgressDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterCommonNetworkSettingsInput)(nil)).Elem(), FoundationCentralImageClusterCommonNetworkSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterCommonNetworkSettingsPtrInput)(nil)).Elem(), FoundationCentralImageClusterCommonNetworkSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockNodeInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigBlockNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigBlockNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigClusterInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigClusterArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigHypervisorIsoInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigNosPackageUrlInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayInput)(nil)).Elem(), FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterHypervisorIsoDetailsInput)(nil)).Elem(), FoundationCentralImageClusterHypervisorIsoDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterHypervisorIsoDetailsPtrInput)(nil)).Elem(), FoundationCentralImageClusterHypervisorIsoDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterNodeListInput)(nil)).Elem(), FoundationCentralImageClusterNodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationCentralImageClusterNodeListArrayInput)(nil)).Elem(), FoundationCentralImageClusterNodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockInput)(nil)).Elem(), FoundationImageNodesBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockArrayInput)(nil)).Elem(), FoundationImageNodesBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeInput)(nil)).Elem(), FoundationImageNodesBlockNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeArrayInput)(nil)).Elem(), FoundationImageNodesBlockNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeUcsmParamsInput)(nil)).Elem(), FoundationImageNodesBlockNodeUcsmParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeUcsmParamsPtrInput)(nil)).Elem(), FoundationImageNodesBlockNodeUcsmParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeVswitchInput)(nil)).Elem(), FoundationImageNodesBlockNodeVswitchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesBlockNodeVswitchArrayInput)(nil)).Elem(), FoundationImageNodesBlockNodeVswitchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesClusterInput)(nil)).Elem(), FoundationImageNodesClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesClusterArrayInput)(nil)).Elem(), FoundationImageNodesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesClusterUrlInput)(nil)).Elem(), FoundationImageNodesClusterUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesClusterUrlArrayInput)(nil)).Elem(), FoundationImageNodesClusterUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesEosMetadataInput)(nil)).Elem(), FoundationImageNodesEosMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesEosMetadataPtrInput)(nil)).Elem(), FoundationImageNodesEosMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesFcSettingsInput)(nil)).Elem(), FoundationImageNodesFcSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesFcSettingsPtrInput)(nil)).Elem(), FoundationImageNodesFcSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesFcSettingsFcMetadataInput)(nil)).Elem(), FoundationImageNodesFcSettingsFcMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesFcSettingsFcMetadataPtrInput)(nil)).Elem(), FoundationImageNodesFcSettingsFcMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoPtrInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoEsxInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoEsxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoEsxPtrInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoEsxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoHypervInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoHypervArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoHypervPtrInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoHypervArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoKvmInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoKvmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoKvmPtrInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoKvmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoXenInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoXenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesHypervisorIsoXenPtrInput)(nil)).Elem(), FoundationImageNodesHypervisorIsoXenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesTestsInput)(nil)).Elem(), FoundationImageNodesTestsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationImageNodesTestsPtrInput)(nil)).Elem(), FoundationImageNodesTestsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationIpmiConfigBlockInput)(nil)).Elem(), FoundationIpmiConfigBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationIpmiConfigBlockArrayInput)(nil)).Elem(), FoundationIpmiConfigBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationIpmiConfigBlockNodeInput)(nil)).Elem(), FoundationIpmiConfigBlockNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FoundationIpmiConfigBlockNodeArrayInput)(nil)).Elem(), FoundationIpmiConfigBlockNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageCategoryInput)(nil)).Elem(), ImageCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageCategoryArrayInput)(nil)).Elem(), ImageCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageClusterReferenceInput)(nil)).Elem(), ImageClusterReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageClusterReferenceArrayInput)(nil)).Elem(), ImageClusterReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageCurrentClusterReferenceListInput)(nil)).Elem(), ImageCurrentClusterReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageCurrentClusterReferenceListArrayInput)(nil)).Elem(), ImageCurrentClusterReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterActivePassiveConfigInput)(nil)).Elem(), KarbonClusterActivePassiveConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterActivePassiveConfigPtrInput)(nil)).Elem(), KarbonClusterActivePassiveConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigInput)(nil)).Elem(), KarbonClusterCniConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigPtrInput)(nil)).Elem(), KarbonClusterCniConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigInput)(nil)).Elem(), KarbonClusterCniConfigCalicoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigPtrInput)(nil)).Elem(), KarbonClusterCniConfigCalicoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigIpPoolConfigInput)(nil)).Elem(), KarbonClusterCniConfigCalicoConfigIpPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayInput)(nil)).Elem(), KarbonClusterCniConfigCalicoConfigIpPoolConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigFlannelConfigInput)(nil)).Elem(), KarbonClusterCniConfigFlannelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterCniConfigFlannelConfigArrayInput)(nil)).Elem(), KarbonClusterCniConfigFlannelConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolInput)(nil)).Elem(), KarbonClusterEtcdNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolPtrInput)(nil)).Elem(), KarbonClusterEtcdNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolAhvConfigInput)(nil)).Elem(), KarbonClusterEtcdNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolAhvConfigPtrInput)(nil)).Elem(), KarbonClusterEtcdNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolNodeInput)(nil)).Elem(), KarbonClusterEtcdNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterEtcdNodePoolNodeArrayInput)(nil)).Elem(), KarbonClusterEtcdNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterExternalLbConfigInput)(nil)).Elem(), KarbonClusterExternalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterExternalLbConfigPtrInput)(nil)).Elem(), KarbonClusterExternalLbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterExternalLbConfigMasterNodesConfigInput)(nil)).Elem(), KarbonClusterExternalLbConfigMasterNodesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterExternalLbConfigMasterNodesConfigArrayInput)(nil)).Elem(), KarbonClusterExternalLbConfigMasterNodesConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolInput)(nil)).Elem(), KarbonClusterMasterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolPtrInput)(nil)).Elem(), KarbonClusterMasterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolAhvConfigInput)(nil)).Elem(), KarbonClusterMasterNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolAhvConfigPtrInput)(nil)).Elem(), KarbonClusterMasterNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolNodeInput)(nil)).Elem(), KarbonClusterMasterNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterMasterNodePoolNodeArrayInput)(nil)).Elem(), KarbonClusterMasterNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterPrivateRegistryInput)(nil)).Elem(), KarbonClusterPrivateRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterPrivateRegistryArrayInput)(nil)).Elem(), KarbonClusterPrivateRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterSingleMasterConfigInput)(nil)).Elem(), KarbonClusterSingleMasterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterSingleMasterConfigPtrInput)(nil)).Elem(), KarbonClusterSingleMasterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterStorageClassConfigInput)(nil)).Elem(), KarbonClusterStorageClassConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterStorageClassConfigPtrInput)(nil)).Elem(), KarbonClusterStorageClassConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterStorageClassConfigVolumesConfigInput)(nil)).Elem(), KarbonClusterStorageClassConfigVolumesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterStorageClassConfigVolumesConfigPtrInput)(nil)).Elem(), KarbonClusterStorageClassConfigVolumesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolInput)(nil)).Elem(), KarbonClusterWorkerNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolPtrInput)(nil)).Elem(), KarbonClusterWorkerNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolAhvConfigInput)(nil)).Elem(), KarbonClusterWorkerNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolAhvConfigPtrInput)(nil)).Elem(), KarbonClusterWorkerNodePoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolNodeInput)(nil)).Elem(), KarbonClusterWorkerNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonClusterWorkerNodePoolNodeArrayInput)(nil)).Elem(), KarbonClusterWorkerNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonWorkerNodepoolAhvConfigInput)(nil)).Elem(), KarbonWorkerNodepoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonWorkerNodepoolAhvConfigPtrInput)(nil)).Elem(), KarbonWorkerNodepoolAhvConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonWorkerNodepoolNodeInput)(nil)).Elem(), KarbonWorkerNodepoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KarbonWorkerNodepoolNodeArrayInput)(nil)).Elem(), KarbonWorkerNodepoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneActionargumentInput)(nil)).Elem(), NdbCloneActionargumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneActionargumentArrayInput)(nil)).Elem(), NdbCloneActionargumentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeInput)(nil)).Elem(), NdbCloneDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeArrayInput)(nil)).Elem(), NdbCloneDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeInfoInput)(nil)).Elem(), NdbCloneDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbCloneDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodePropertyInput)(nil)).Elem(), NdbCloneDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbCloneDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbCloneDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbCloneDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbCloneDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbCloneDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeTagInput)(nil)).Elem(), NdbCloneDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneDatabaseNodeTagArrayInput)(nil)).Elem(), NdbCloneDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoInput)(nil)).Elem(), NdbCloneInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoArrayInput)(nil)).Elem(), NdbCloneInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigInput)(nil)).Elem(), NdbCloneInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbCloneInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbCloneInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbCloneInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigInput)(nil)).Elem(), NdbCloneLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigArrayInput)(nil)).Elem(), NdbCloneLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLinkedDatabaseInput)(nil)).Elem(), NdbCloneLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLinkedDatabaseArrayInput)(nil)).Elem(), NdbCloneLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLinkedDatabaseInfoInput)(nil)).Elem(), NdbCloneLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbCloneLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneNodeInput)(nil)).Elem(), NdbCloneNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneNodeArrayInput)(nil)).Elem(), NdbCloneNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneNodePropertyInput)(nil)).Elem(), NdbCloneNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneNodePropertyArrayInput)(nil)).Elem(), NdbCloneNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClonePostgresqlInfoInput)(nil)).Elem(), NdbClonePostgresqlInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClonePostgresqlInfoArrayInput)(nil)).Elem(), NdbClonePostgresqlInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClonePropertyInput)(nil)).Elem(), NdbClonePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClonePropertyArrayInput)(nil)).Elem(), NdbClonePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTagInput)(nil)).Elem(), NdbCloneTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTagArrayInput)(nil)).Elem(), NdbCloneTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineInput)(nil)).Elem(), NdbCloneTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineArrayInput)(nil)).Elem(), NdbCloneTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachinePropertyInput)(nil)).Elem(), NdbCloneTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachinePropertyArrayInput)(nil)).Elem(), NdbCloneTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbCloneTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbCloneTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineSlaInput)(nil)).Elem(), NdbCloneTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineSlaArrayInput)(nil)).Elem(), NdbCloneTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineTagInput)(nil)).Elem(), NdbCloneTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbCloneTimeMachineTagArrayInput)(nil)).Elem(), NdbCloneTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterAgentNetworkInfoInput)(nil)).Elem(), NdbClusterAgentNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterAgentNetworkInfoArrayInput)(nil)).Elem(), NdbClusterAgentNetworkInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountInput)(nil)).Elem(), NdbClusterEntityCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountArrayInput)(nil)).Elem(), NdbClusterEntityCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountInput)(nil)).Elem(), NdbClusterEntityCountEngineCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMariadbDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMariadbDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMariadbDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMariadbDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMongodbDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMongodbDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMongodbDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMongodbDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMysqlDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMysqlDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMysqlDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountMysqlDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountOracleDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountOracleDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountOracleDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountOracleDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountPostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountPostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountPostgresDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountPostgresDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSaphanaDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSaphanaDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSqlserverDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSqlserverDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseProfileInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayInput)(nil)).Elem(), NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterNetworksInfoInput)(nil)).Elem(), NdbClusterNetworksInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterNetworksInfoArrayInput)(nil)).Elem(), NdbClusterNetworksInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterNetworksInfoNetworkInfoInput)(nil)).Elem(), NdbClusterNetworksInfoNetworkInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterNetworksInfoNetworkInfoArrayInput)(nil)).Elem(), NdbClusterNetworksInfoNetworkInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterPropertyInput)(nil)).Elem(), NdbClusterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterPropertyArrayInput)(nil)).Elem(), NdbClusterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterResourceConfigInput)(nil)).Elem(), NdbClusterResourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbClusterResourceConfigArrayInput)(nil)).Elem(), NdbClusterResourceConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseActionargumentInput)(nil)).Elem(), NdbDatabaseActionargumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseActionargumentArrayInput)(nil)).Elem(), NdbDatabaseActionargumentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoInput)(nil)).Elem(), NdbDatabaseClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoArrayInput)(nil)).Elem(), NdbDatabaseClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoInput)(nil)).Elem(), NdbDatabaseClusterInfoClusterIpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoArrayInput)(nil)).Elem(), NdbDatabaseClusterInfoClusterIpInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoIpInfoInput)(nil)).Elem(), NdbDatabaseClusterInfoClusterIpInfoIpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayInput)(nil)).Elem(), NdbDatabaseClusterInfoClusterIpInfoIpInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeInput)(nil)).Elem(), NdbDatabaseDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeInfoInput)(nil)).Elem(), NdbDatabaseDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodePropertyInput)(nil)).Elem(), NdbDatabaseDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbDatabaseDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbDatabaseDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeTagInput)(nil)).Elem(), NdbDatabaseDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseDatabaseNodeTagArrayInput)(nil)).Elem(), NdbDatabaseDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoInput)(nil)).Elem(), NdbDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoArrayInput)(nil)).Elem(), NdbDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbDatabaseInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigInput)(nil)).Elem(), NdbDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbDatabaseLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbDatabaseLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLinkedDatabaseInput)(nil)).Elem(), NdbDatabaseLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLinkedDatabaseArrayInput)(nil)).Elem(), NdbDatabaseLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLinkedDatabaseInfoInput)(nil)).Elem(), NdbDatabaseLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbDatabaseLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseMaintenanceTasksInput)(nil)).Elem(), NdbDatabaseMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseMaintenanceTasksPtrInput)(nil)).Elem(), NdbDatabaseMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseMaintenanceTasksTaskInput)(nil)).Elem(), NdbDatabaseMaintenanceTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseMaintenanceTasksTaskArrayInput)(nil)).Elem(), NdbDatabaseMaintenanceTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodeInput)(nil)).Elem(), NdbDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodeArrayInput)(nil)).Elem(), NdbDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodeIpInfoInput)(nil)).Elem(), NdbDatabaseNodeIpInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodeIpInfoArrayInput)(nil)).Elem(), NdbDatabaseNodeIpInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodePropertyInput)(nil)).Elem(), NdbDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePostgresqlInfoInput)(nil)).Elem(), NdbDatabasePostgresqlInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePostgresqlInfoPtrInput)(nil)).Elem(), NdbDatabasePostgresqlInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePostgresqlInfoHaInstanceInput)(nil)).Elem(), NdbDatabasePostgresqlInfoHaInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePostgresqlInfoHaInstancePtrInput)(nil)).Elem(), NdbDatabasePostgresqlInfoHaInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePropertyInput)(nil)).Elem(), NdbDatabasePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabasePropertyArrayInput)(nil)).Elem(), NdbDatabasePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeInfoInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodePropertyInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeTagInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreDatabaseNodeTagArrayInput)(nil)).Elem(), NdbDatabaseRestoreDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoInput)(nil)).Elem(), NdbDatabaseRestoreInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbDatabaseRestoreInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigArrayInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigExpiryDetailInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigRefreshDetailInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbDatabaseRestoreLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseInput)(nil)).Elem(), NdbDatabaseRestoreLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseArrayInput)(nil)).Elem(), NdbDatabaseRestoreLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseInfoInput)(nil)).Elem(), NdbDatabaseRestoreLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbDatabaseRestoreLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestorePropertyInput)(nil)).Elem(), NdbDatabaseRestorePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestorePropertyArrayInput)(nil)).Elem(), NdbDatabaseRestorePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTagInput)(nil)).Elem(), NdbDatabaseRestoreTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTagArrayInput)(nil)).Elem(), NdbDatabaseRestoreTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachinePropertyInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachinePropertyArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSlaInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineSlaArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineTagInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseRestoreTimeMachineTagArrayInput)(nil)).Elem(), NdbDatabaseRestoreTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeInfoInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodePropertyInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeTagInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleDatabaseNodeTagArrayInput)(nil)).Elem(), NdbDatabaseScaleDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoInput)(nil)).Elem(), NdbDatabaseScaleInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbDatabaseScaleInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigArrayInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigExpiryDetailInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigRefreshDetailInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbDatabaseScaleLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseInput)(nil)).Elem(), NdbDatabaseScaleLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseArrayInput)(nil)).Elem(), NdbDatabaseScaleLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseInfoInput)(nil)).Elem(), NdbDatabaseScaleLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbDatabaseScaleLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScalePropertyInput)(nil)).Elem(), NdbDatabaseScalePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScalePropertyArrayInput)(nil)).Elem(), NdbDatabaseScalePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTagInput)(nil)).Elem(), NdbDatabaseScaleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTagArrayInput)(nil)).Elem(), NdbDatabaseScaleTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachinePropertyInput)(nil)).Elem(), NdbDatabaseScaleTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachinePropertyArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineSlaInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineSlaArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineTagInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseScaleTimeMachineTagArrayInput)(nil)).Elem(), NdbDatabaseScaleTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigExpiryDetailInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetailInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbDatabaseSnapshotLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotPropertyInput)(nil)).Elem(), NdbDatabaseSnapshotPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotPropertyArrayInput)(nil)).Elem(), NdbDatabaseSnapshotPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotTagInput)(nil)).Elem(), NdbDatabaseSnapshotTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseSnapshotTagArrayInput)(nil)).Elem(), NdbDatabaseSnapshotTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTagInput)(nil)).Elem(), NdbDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTagArrayInput)(nil)).Elem(), NdbDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineInput)(nil)).Elem(), NdbDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineTagInput)(nil)).Elem(), NdbDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoInput)(nil)).Elem(), NdbDatabaseTimemachineinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoPtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSchedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyscheduleInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrInput)(nil)).Elem(), NdbDatabaseTimemachineinfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySlaInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoTagInput)(nil)).Elem(), NdbDatabaseTimemachineinfoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDatabaseTimemachineinfoTagArrayInput)(nil)).Elem(), NdbDatabaseTimemachineinfoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmCredentialInput)(nil)).Elem(), NdbDbserverVmCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmCredentialArrayInput)(nil)).Elem(), NdbDbserverVmCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksPtrInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTaskInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmMaintenanceTasksTaskArrayInput)(nil)).Elem(), NdbDbserverVmMaintenanceTasksTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPostgresDatabaseInput)(nil)).Elem(), NdbDbserverVmPostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPostgresDatabaseArrayInput)(nil)).Elem(), NdbDbserverVmPostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPropertyInput)(nil)).Elem(), NdbDbserverVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmPropertyArrayInput)(nil)).Elem(), NdbDbserverVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmTagInput)(nil)).Elem(), NdbDbserverVmTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbDbserverVmTagArrayInput)(nil)).Elem(), NdbDbserverVmTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInput)(nil)).Elem(), NdbLinkedDatabasesInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoArrayInput)(nil)).Elem(), NdbLinkedDatabasesInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInfoInput)(nil)).Elem(), NdbLinkedDatabasesInfoInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbLinkedDatabasesInfoInfoArrayInput)(nil)).Elem(), NdbLinkedDatabasesInfoInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPropertyInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationPropertyArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTagInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskEntityTaskAssociationTagArrayInput)(nil)).Elem(), NdbMaintenanceTaskEntityTaskAssociationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskTaskInput)(nil)).Elem(), NdbMaintenanceTaskTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceTaskTaskArrayInput)(nil)).Elem(), NdbMaintenanceTaskTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPropertyInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocPropertyArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTagInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowEntityTaskAssocTagArrayInput)(nil)).Elem(), NdbMaintenanceWindowEntityTaskAssocTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowPropertyInput)(nil)).Elem(), NdbMaintenanceWindowPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowPropertyArrayInput)(nil)).Elem(), NdbMaintenanceWindowPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowScheduleInput)(nil)).Elem(), NdbMaintenanceWindowScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowScheduleArrayInput)(nil)).Elem(), NdbMaintenanceWindowScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowTagInput)(nil)).Elem(), NdbMaintenanceWindowTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbMaintenanceWindowTagArrayInput)(nil)).Elem(), NdbMaintenanceWindowTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolInput)(nil)).Elem(), NdbNetworkIpPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolArrayInput)(nil)).Elem(), NdbNetworkIpPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolAddressInput)(nil)).Elem(), NdbNetworkIpPoolAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkIpPoolAddressArrayInput)(nil)).Elem(), NdbNetworkIpPoolAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertiesMapInput)(nil)).Elem(), NdbNetworkPropertiesMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertiesMapArrayInput)(nil)).Elem(), NdbNetworkPropertiesMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertyInput)(nil)).Elem(), NdbNetworkPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbNetworkPropertyArrayInput)(nil)).Elem(), NdbNetworkPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileClusterAvailabilityInput)(nil)).Elem(), NdbProfileClusterAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileClusterAvailabilityArrayInput)(nil)).Elem(), NdbProfileClusterAvailabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileComputeProfileInput)(nil)).Elem(), NdbProfileComputeProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileComputeProfileArrayInput)(nil)).Elem(), NdbProfileComputeProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfileInput)(nil)).Elem(), NdbProfileDatabaseParameterProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfileArrayInput)(nil)).Elem(), NdbProfileDatabaseParameterProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileDatabaseParameterProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileDatabaseParameterProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileDatabaseParameterProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileInput)(nil)).Elem(), NdbProfileNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileArrayInput)(nil)).Elem(), NdbProfileNetworkProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstanceInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseHaInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseHaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstanceInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayInput)(nil)).Elem(), NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociationInput)(nil)).Elem(), NdbProfileNetworkProfileVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileNetworkProfileVersionClusterAssociationArrayInput)(nil)).Elem(), NdbProfileNetworkProfileVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfileInput)(nil)).Elem(), NdbProfileSoftwareProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePtrInput)(nil)).Elem(), NdbProfileSoftwareProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabaseInput)(nil)).Elem(), NdbProfileSoftwareProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileSoftwareProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbProfileSoftwareProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionInput)(nil)).Elem(), NdbProfileVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionArrayInput)(nil)).Elem(), NdbProfileVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionPropertyInput)(nil)).Elem(), NdbProfileVersionPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionPropertyArrayInput)(nil)).Elem(), NdbProfileVersionPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationArrayInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationPropertyInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbProfileVersionVersionClusterAssociationPropertyArrayInput)(nil)).Elem(), NdbProfileVersionVersionClusterAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseActionargumentInput)(nil)).Elem(), NdbRegisterDatabaseActionargumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseActionargumentArrayInput)(nil)).Elem(), NdbRegisterDatabaseActionargumentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfoInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodePropertyInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTagInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseDatabaseNodeTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoInput)(nil)).Elem(), NdbRegisterDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseArrayInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfoInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbRegisterDatabaseLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePostgressInfoInput)(nil)).Elem(), NdbRegisterDatabasePostgressInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePostgressInfoArrayInput)(nil)).Elem(), NdbRegisterDatabasePostgressInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePropertyInput)(nil)).Elem(), NdbRegisterDatabasePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabasePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabasePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTagInput)(nil)).Elem(), NdbRegisterDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoPtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSchedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTagInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineInfoTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineInfoTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTagInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbRegisterDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverCredentialInput)(nil)).Elem(), NdbRegisterDbserverCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverCredentialArrayInput)(nil)).Elem(), NdbRegisterDbserverCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPostgresDatabaseInput)(nil)).Elem(), NdbRegisterDbserverPostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPostgresDatabaseArrayInput)(nil)).Elem(), NdbRegisterDbserverPostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPropertyInput)(nil)).Elem(), NdbRegisterDbserverPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverPropertyArrayInput)(nil)).Elem(), NdbRegisterDbserverPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverTagInput)(nil)).Elem(), NdbRegisterDbserverTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbRegisterDbserverTagArrayInput)(nil)).Elem(), NdbRegisterDbserverTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfoInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodePropertyInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodePropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTagInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseDatabaseNodeTagArrayInput)(nil)).Elem(), NdbScaleDatabaseDatabaseNodeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoInput)(nil)).Elem(), NdbScaleDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParamInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigBpgDbParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigBpgDbParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDiskInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDiskInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageLogDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigStorageLogDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmPropertyInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigVmPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseInfoBpgConfigVmPropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseInfoBpgConfigVmPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetailInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigExpiryDetailArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigExpiryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommandInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPostDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPostDeleteCommandArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPostDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommandInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPreDeleteCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigPreDeleteCommandArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigPreDeleteCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetailInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigRefreshDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLcmConfigRefreshDetailArrayInput)(nil)).Elem(), NdbScaleDatabaseLcmConfigRefreshDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseArrayInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfoInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseLinkedDatabaseInfoArrayInput)(nil)).Elem(), NdbScaleDatabaseLinkedDatabaseInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabasePropertyInput)(nil)).Elem(), NdbScaleDatabasePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabasePropertyArrayInput)(nil)).Elem(), NdbScaleDatabasePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTagInput)(nil)).Elem(), NdbScaleDatabaseTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTagArrayInput)(nil)).Elem(), NdbScaleDatabaseTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachinePropertyInput)(nil)).Elem(), NdbScaleDatabaseTimeMachinePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachinePropertyArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachinePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleDailyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleDailyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlyScheduleInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineSlaInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineSlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineSlaArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineSlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineTagInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbScaleDatabaseTimeMachineTagArrayInput)(nil)).Elem(), NdbScaleDatabaseTimeMachineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabaseInput)(nil)).Elem(), NdbSoftwareVersionProfilePostgresDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePostgresDatabaseArrayInput)(nil)).Elem(), NdbSoftwareVersionProfilePostgresDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePropertyInput)(nil)).Elem(), NdbSoftwareVersionProfilePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfilePropertyArrayInput)(nil)).Elem(), NdbSoftwareVersionProfilePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationArrayInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationPropertyInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayInput)(nil)).Elem(), NdbSoftwareVersionProfileVersionClusterAssociationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanMetadataInput)(nil)).Elem(), NdbStretchedVlanMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanMetadataPtrInput)(nil)).Elem(), NdbStretchedVlanMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListInput)(nil)).Elem(), NdbStretchedVlanVlansListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMapInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertiesMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertiesMapArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertiesMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertyInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NdbStretchedVlanVlansListPropertyArrayInput)(nil)).Elem(), NdbStretchedVlanVlansListPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAdRuleTargetGroupFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAdRuleTargetGroupFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParamInput)(nil)).Elem(), NetworkSecurityRuleAppRuleTargetGroupFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleAppRuleTargetGroupFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleCategoryInput)(nil)).Elem(), NetworkSecurityRuleCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleCategoryArrayInput)(nil)).Elem(), NetworkSecurityRuleCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParamInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParamInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayInput)(nil)).Elem(), NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrDestinationInput)(nil)).Elem(), PbrDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrDestinationPtrInput)(nil)).Elem(), PbrDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersInput)(nil)).Elem(), PbrProtocolParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersPtrInput)(nil)).Elem(), PbrProtocolParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersIcmpInput)(nil)).Elem(), PbrProtocolParametersIcmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersIcmpPtrInput)(nil)).Elem(), PbrProtocolParametersIcmpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpInput)(nil)).Elem(), PbrProtocolParametersTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpPtrInput)(nil)).Elem(), PbrProtocolParametersTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeListInput)(nil)).Elem(), PbrProtocolParametersTcpDestinationPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpDestinationPortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersTcpDestinationPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeListInput)(nil)).Elem(), PbrProtocolParametersTcpSourcePortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersTcpSourcePortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersTcpSourcePortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpInput)(nil)).Elem(), PbrProtocolParametersUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpPtrInput)(nil)).Elem(), PbrProtocolParametersUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeListInput)(nil)).Elem(), PbrProtocolParametersUdpDestinationPortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpDestinationPortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersUdpDestinationPortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeListInput)(nil)).Elem(), PbrProtocolParametersUdpSourcePortRangeListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrProtocolParametersUdpSourcePortRangeListArrayInput)(nil)).Elem(), PbrProtocolParametersUdpSourcePortRangeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrSourceInput)(nil)).Elem(), PbrSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PbrSourcePtrInput)(nil)).Elem(), PbrSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAccountReferenceListInput)(nil)).Elem(), ProjectAccountReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAccountReferenceListArrayInput)(nil)).Elem(), ProjectAccountReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpInput)(nil)).Elem(), ProjectAcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpArrayInput)(nil)).Elem(), ProjectAcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListInput)(nil)).Elem(), ProjectAcpContextFilterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListArrayInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrInput)(nil)).Elem(), ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpRoleReferenceInput)(nil)).Elem(), ProjectAcpRoleReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserGroupReferenceListInput)(nil)).Elem(), ProjectAcpUserGroupReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserGroupReferenceListArrayInput)(nil)).Elem(), ProjectAcpUserGroupReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserReferenceListInput)(nil)).Elem(), ProjectAcpUserReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectAcpUserReferenceListArrayInput)(nil)).Elem(), ProjectAcpUserReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCategoryInput)(nil)).Elem(), ProjectCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCategoryArrayInput)(nil)).Elem(), ProjectCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectClusterReferenceListInput)(nil)).Elem(), ProjectClusterReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectClusterReferenceListArrayInput)(nil)).Elem(), ProjectClusterReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultEnvironmentReferenceInput)(nil)).Elem(), ProjectDefaultEnvironmentReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultEnvironmentReferencePtrInput)(nil)).Elem(), ProjectDefaultEnvironmentReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultSubnetReferenceInput)(nil)).Elem(), ProjectDefaultSubnetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectDefaultSubnetReferencePtrInput)(nil)).Elem(), ProjectDefaultSubnetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentReferenceListInput)(nil)).Elem(), ProjectEnvironmentReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentReferenceListArrayInput)(nil)).Elem(), ProjectEnvironmentReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalNetworkListInput)(nil)).Elem(), ProjectExternalNetworkListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalNetworkListArrayInput)(nil)).Elem(), ProjectExternalNetworkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalUserGroupReferenceListInput)(nil)).Elem(), ProjectExternalUserGroupReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectExternalUserGroupReferenceListArrayInput)(nil)).Elem(), ProjectExternalUserGroupReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainInput)(nil)).Elem(), ProjectResourceDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainPtrInput)(nil)).Elem(), ProjectResourceDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainResourceInput)(nil)).Elem(), ProjectResourceDomainResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourceDomainResourceArrayInput)(nil)).Elem(), ProjectResourceDomainResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSubnetReferenceListInput)(nil)).Elem(), ProjectSubnetReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSubnetReferenceListArrayInput)(nil)).Elem(), ProjectSubnetReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTunnelReferenceListInput)(nil)).Elem(), ProjectTunnelReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTunnelReferenceListArrayInput)(nil)).Elem(), ProjectTunnelReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListInput)(nil)).Elem(), ProjectUserGroupListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListArrayInput)(nil)).Elem(), ProjectUserGroupListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOusInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceOusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceOusArrayInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceOusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroupInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListDirectoryServiceUserGroupArrayInput)(nil)).Elem(), ProjectUserGroupListDirectoryServiceUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListSamlUserGroupInput)(nil)).Elem(), ProjectUserGroupListSamlUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserGroupListSamlUserGroupArrayInput)(nil)).Elem(), ProjectUserGroupListSamlUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListInput)(nil)).Elem(), ProjectUserListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListArrayInput)(nil)).Elem(), ProjectUserListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserPtrInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReferenceInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrInput)(nil)).Elem(), ProjectUserListDirectoryServiceUserDirectoryServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserInput)(nil)).Elem(), ProjectUserListIdentityProviderUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserPtrInput)(nil)).Elem(), ProjectUserListIdentityProviderUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReferenceInput)(nil)).Elem(), ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserListIdentityProviderUserIdentityProviderReferencePtrInput)(nil)).Elem(), ProjectUserListIdentityProviderUserIdentityProviderReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserReferenceListInput)(nil)).Elem(), ProjectUserReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserReferenceListArrayInput)(nil)).Elem(), ProjectUserReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcReferenceListInput)(nil)).Elem(), ProjectVpcReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcReferenceListArrayInput)(nil)).Elem(), ProjectVpcReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListArrayInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrInput)(nil)).Elem(), ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryInput)(nil)).Elem(), ProtectionRuleCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryArrayInput)(nil)).Elem(), ProtectionRuleCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterInput)(nil)).Elem(), ProtectionRuleCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterPtrInput)(nil)).Elem(), ProtectionRuleCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterParamInput)(nil)).Elem(), ProtectionRuleCategoryFilterParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleCategoryFilterParamArrayInput)(nil)).Elem(), ProtectionRuleCategoryFilterParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneListInput)(nil)).Elem(), ProtectionRuleOrderedAvailabilityZoneListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOrderedAvailabilityZoneListArrayInput)(nil)).Elem(), ProtectionRuleOrderedAvailabilityZoneListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOwnerReferenceInput)(nil)).Elem(), ProtectionRuleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleOwnerReferencePtrInput)(nil)).Elem(), ProtectionRuleOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleProjectReferenceInput)(nil)).Elem(), ProtectionRuleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionRuleProjectReferencePtrInput)(nil)).Elem(), ProtectionRuleProjectReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanCategoryInput)(nil)).Elem(), RecoveryPlanCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanCategoryArrayInput)(nil)).Elem(), RecoveryPlanCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanOwnerReferenceInput)(nil)).Elem(), RecoveryPlanOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanOwnerReferencePtrInput)(nil)).Elem(), RecoveryPlanOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersInput)(nil)).Elem(), RecoveryPlanParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersPtrInput)(nil)).Elem(), RecoveryPlanParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceInput)(nil)).Elem(), RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayInput)(nil)).Elem(), RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArray{})
	pulumi.RegisterOutputType(AccessControlPolicyCategoryOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyCategoryArrayOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListArrayOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListEntityFilterExpressionListOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListEntityFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListScopeFilterExpressionListOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListScopeFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyOwnerReferenceOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyRoleReferenceOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyRoleReferencePtrOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyUserGroupReferenceListOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyUserGroupReferenceListArrayOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyUserReferenceListOutput{})
	pulumi.RegisterOutputType(AccessControlPolicyUserReferenceListArrayOutput{})
	pulumi.RegisterOutputType(AddressGroupIpAddressBlockListOutput{})
	pulumi.RegisterOutputType(AddressGroupIpAddressBlockListArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusPtrOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusClusterProgressDetailOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusClusterProgressDetailArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusNodeProgressDetailOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterClusterStatusNodeProgressDetailArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterCommonNetworkSettingsOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterCommonNetworkSettingsPtrOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigBlockOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigBlockArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigBlockNodeOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigBlockNodeArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigClusterOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigClusterArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigHypervisorIsoArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterFoundationInitConfigNosPackageUrlArrayOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterHypervisorIsoDetailsOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterHypervisorIsoDetailsPtrOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterNodeListOutput{})
	pulumi.RegisterOutputType(FoundationCentralImageClusterNodeListArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeUcsmParamsOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeUcsmParamsPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeVswitchOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesBlockNodeVswitchArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesClusterOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesClusterArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesClusterUrlOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesClusterUrlArrayOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesEosMetadataOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesEosMetadataPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesFcSettingsOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesFcSettingsPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesFcSettingsFcMetadataOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesFcSettingsFcMetadataPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoEsxOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoEsxPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoHypervOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoHypervPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoKvmOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoKvmPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoXenOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesHypervisorIsoXenPtrOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesTestsOutput{})
	pulumi.RegisterOutputType(FoundationImageNodesTestsPtrOutput{})
	pulumi.RegisterOutputType(FoundationIpmiConfigBlockOutput{})
	pulumi.RegisterOutputType(FoundationIpmiConfigBlockArrayOutput{})
	pulumi.RegisterOutputType(FoundationIpmiConfigBlockNodeOutput{})
	pulumi.RegisterOutputType(FoundationIpmiConfigBlockNodeArrayOutput{})
	pulumi.RegisterOutputType(ImageCategoryOutput{})
	pulumi.RegisterOutputType(ImageCategoryArrayOutput{})
	pulumi.RegisterOutputType(ImageClusterReferenceOutput{})
	pulumi.RegisterOutputType(ImageClusterReferenceArrayOutput{})
	pulumi.RegisterOutputType(ImageCurrentClusterReferenceListOutput{})
	pulumi.RegisterOutputType(ImageCurrentClusterReferenceListArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterActivePassiveConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterActivePassiveConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigCalicoConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigCalicoConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigCalicoConfigIpPoolConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigCalicoConfigIpPoolConfigArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigFlannelConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterCniConfigFlannelConfigArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolAhvConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolAhvConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KarbonClusterEtcdNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterExternalLbConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterExternalLbConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterExternalLbConfigMasterNodesConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterExternalLbConfigMasterNodesConfigArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolAhvConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolAhvConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KarbonClusterMasterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterPrivateRegistryOutput{})
	pulumi.RegisterOutputType(KarbonClusterPrivateRegistryArrayOutput{})
	pulumi.RegisterOutputType(KarbonClusterSingleMasterConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterSingleMasterConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterStorageClassConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterStorageClassConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterStorageClassConfigVolumesConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterStorageClassConfigVolumesConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolAhvConfigOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolAhvConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KarbonClusterWorkerNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KarbonWorkerNodepoolAhvConfigOutput{})
	pulumi.RegisterOutputType(KarbonWorkerNodepoolAhvConfigPtrOutput{})
	pulumi.RegisterOutputType(KarbonWorkerNodepoolNodeOutput{})
	pulumi.RegisterOutputType(KarbonWorkerNodepoolNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneActionargumentOutput{})
	pulumi.RegisterOutputType(NdbCloneActionargumentArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbCloneDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbCloneInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbCloneLcmConfigDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbCloneLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbCloneLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneNodeOutput{})
	pulumi.RegisterOutputType(NdbCloneNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbCloneNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbClonePostgresqlInfoOutput{})
	pulumi.RegisterOutputType(NdbClonePostgresqlInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbClonePropertyOutput{})
	pulumi.RegisterOutputType(NdbClonePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTagOutput{})
	pulumi.RegisterOutputType(NdbCloneTagArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbCloneTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterAgentNetworkInfoOutput{})
	pulumi.RegisterOutputType(NdbClusterAgentNetworkInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMariadbDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMariadbDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMariadbDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMariadbDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMongodbDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMongodbDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMongodbDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMongodbDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMysqlDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMysqlDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMysqlDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountMysqlDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountOracleDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountOracleDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountOracleDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountOracleDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountPostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountPostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountPostgresDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountPostgresDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSaphanaDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSaphanaDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSaphanaDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSqlserverDatabaseOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSqlserverDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileOutput{})
	pulumi.RegisterOutputType(NdbClusterEntityCountEngineCountSqlserverDatabaseProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterNetworksInfoOutput{})
	pulumi.RegisterOutputType(NdbClusterNetworksInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterNetworksInfoNetworkInfoOutput{})
	pulumi.RegisterOutputType(NdbClusterNetworksInfoNetworkInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterPropertyOutput{})
	pulumi.RegisterOutputType(NdbClusterPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbClusterResourceConfigOutput{})
	pulumi.RegisterOutputType(NdbClusterResourceConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseActionargumentOutput{})
	pulumi.RegisterOutputType(NdbDatabaseActionargumentArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoClusterIpInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoClusterIpInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoClusterIpInfoIpInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseClusterInfoClusterIpInfoIpInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseMaintenanceTasksOutput{})
	pulumi.RegisterOutputType(NdbDatabaseMaintenanceTasksPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseMaintenanceTasksTaskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseMaintenanceTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodeIpInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodeIpInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabasePostgresqlInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabasePostgresqlInfoPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabasePostgresqlInfoHaInstanceOutput{})
	pulumi.RegisterOutputType(NdbDatabasePostgresqlInfoHaInstancePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabasePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabasePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestorePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestorePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseRestoreTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScalePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScalePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseScaleTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotPropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseSnapshotTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSchedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleContinuousscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleContinuousschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleMonthlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleMonthlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleQuartelyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleQuartelyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleSnapshottimeofdayPtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleWeeklyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleWeeklyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleYearlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoScheduleYearlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoSlaDetailPrimarySlaArrayOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoTagOutput{})
	pulumi.RegisterOutputType(NdbDatabaseTimemachineinfoTagArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmCredentialOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmCredentialArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksPtrOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksTaskOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmMaintenanceTasksTaskArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmTagOutput{})
	pulumi.RegisterOutputType(NdbDbserverVmTagArrayOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoInfoOutput{})
	pulumi.RegisterOutputType(NdbLinkedDatabasesInfoInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPayloadPrePostCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskEntityTaskAssociationTagArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskTaskOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceTaskTaskArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPayloadPrePostCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowEntityTaskAssocTagArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowPropertyOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowScheduleOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowTagOutput{})
	pulumi.RegisterOutputType(NdbMaintenanceWindowTagArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolAddressOutput{})
	pulumi.RegisterOutputType(NdbNetworkIpPoolAddressArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertiesMapOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertiesMapArrayOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertyOutput{})
	pulumi.RegisterOutputType(NdbNetworkPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileClusterAvailabilityOutput{})
	pulumi.RegisterOutputType(NdbProfileClusterAvailabilityArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileComputeProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileComputeProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileDatabaseParameterProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseHaInstanceOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseHaInstanceArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfilePostgresDatabaseSingleInstanceArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbProfileNetworkProfileVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfileOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePtrOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbProfileSoftwareProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionPropertyOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbProfileVersionVersionClusterAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseActionargumentOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseActionargumentArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePostgressInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePostgressInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabasePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoPtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSchedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleContinuousschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleMonthlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleQuartelyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleSnapshottimeofdayPtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleWeeklyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyscheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoScheduleYearlyschedulePtrOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoSlaDetailPrimarySlaArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineInfoTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverCredentialOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverCredentialArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPropertyOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverTagOutput{})
	pulumi.RegisterOutputType(NdbRegisterDbserverTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeProtectionDomainPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseDatabaseNodeTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigBpgDbParamOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigBpgDbParamArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageArchiveStorageArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageDataDiskOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageLogDiskOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigStorageLogDiskArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigVmPropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseInfoBpgConfigVmPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigExpiryDetailOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigExpiryDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPostDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPostDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPreDeleteCommandOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigPreDeleteCommandArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigRefreshDetailOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLcmConfigRefreshDetailArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseInfoOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseLinkedDatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabasePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabasePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTagArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachinePropertyOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachinePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleContinuousScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleDailyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleDailyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleMonthlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleQuartelyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleSnapshotTimeOfDayArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleWeeklyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineScheduleYearlyScheduleArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineSlaOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineSlaArrayOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineTagOutput{})
	pulumi.RegisterOutputType(NdbScaleDatabaseTimeMachineTagArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePostgresDatabaseOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePostgresDatabaseArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePropertyOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfilePropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationArrayOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationPropertyOutput{})
	pulumi.RegisterOutputType(NdbSoftwareVersionProfileVersionClusterAssociationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanMetadataOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanMetadataPtrOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertiesMapOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertiesMapArrayOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertyOutput{})
	pulumi.RegisterOutputType(NdbStretchedVlanVlansListPropertyArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleInboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleOutboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleTargetGroupFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAdRuleTargetGroupFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleInboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListAddressGroupInclusionListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListIcmpTypeCodeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListServiceGroupListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListTcpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleOutboundAllowListUdpPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleTargetGroupFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleAppRuleTargetGroupFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleCategoryOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleCategoryArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleFirstEntityFilterParamArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamOutput{})
	pulumi.RegisterOutputType(NetworkSecurityRuleIsolationRuleSecondEntityFilterParamArrayOutput{})
	pulumi.RegisterOutputType(PbrDestinationOutput{})
	pulumi.RegisterOutputType(PbrDestinationPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersIcmpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersIcmpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpDestinationPortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpDestinationPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpSourcePortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersTcpSourcePortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpPtrOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpDestinationPortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpDestinationPortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpSourcePortRangeListOutput{})
	pulumi.RegisterOutputType(PbrProtocolParametersUdpSourcePortRangeListArrayOutput{})
	pulumi.RegisterOutputType(PbrSourceOutput{})
	pulumi.RegisterOutputType(PbrSourcePtrOutput{})
	pulumi.RegisterOutputType(ProjectAccountReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAccountReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpOutput{})
	pulumi.RegisterOutputType(ProjectAcpArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListEntityFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesOutput{})
	pulumi.RegisterOutputType(ProjectAcpContextFilterListScopeFilterExpressionListRightHandSideCategoriesPtrOutput{})
	pulumi.RegisterOutputType(ProjectAcpRoleReferenceOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserGroupReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserGroupReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectAcpUserReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectCategoryOutput{})
	pulumi.RegisterOutputType(ProjectCategoryArrayOutput{})
	pulumi.RegisterOutputType(ProjectClusterReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectClusterReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectDefaultEnvironmentReferenceOutput{})
	pulumi.RegisterOutputType(ProjectDefaultEnvironmentReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectDefaultSubnetReferenceOutput{})
	pulumi.RegisterOutputType(ProjectDefaultSubnetReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectExternalNetworkListOutput{})
	pulumi.RegisterOutputType(ProjectExternalNetworkListArrayOutput{})
	pulumi.RegisterOutputType(ProjectExternalUserGroupReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectExternalUserGroupReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainPtrOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainResourceOutput{})
	pulumi.RegisterOutputType(ProjectResourceDomainResourceArrayOutput{})
	pulumi.RegisterOutputType(ProjectSubnetReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectSubnetReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectTunnelReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectTunnelReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceOusOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceOusArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceUserGroupOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListDirectoryServiceUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListSamlUserGroupOutput{})
	pulumi.RegisterOutputType(ProjectUserGroupListSamlUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserListOutput{})
	pulumi.RegisterOutputType(ProjectUserListArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserPtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserDirectoryServiceReferenceOutput{})
	pulumi.RegisterOutputType(ProjectUserListDirectoryServiceUserDirectoryServiceReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserPtrOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserIdentityProviderReferenceOutput{})
	pulumi.RegisterOutputType(ProjectUserListIdentityProviderUserIdentityProviderReferencePtrOutput{})
	pulumi.RegisterOutputType(ProjectUserReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectUserReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProjectVpcReferenceListOutput{})
	pulumi.RegisterOutputType(ProjectVpcReferenceListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListLocalSnapshotRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyOutput{})
	pulumi.RegisterOutputType(ProtectionRuleAvailabilityZoneConnectivityListSnapshotScheduleListRemoteSnapshotRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterPtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterParamOutput{})
	pulumi.RegisterOutputType(ProtectionRuleCategoryFilterParamArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOrderedAvailabilityZoneListOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOrderedAvailabilityZoneListArrayOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOwnerReferenceOutput{})
	pulumi.RegisterOutputType(ProtectionRuleOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(ProtectionRuleProjectReferenceOutput{})
	pulumi.RegisterOutputType(ProtectionRuleProjectReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanCategoryOutput{})
	pulumi.RegisterOutputType(RecoveryPlanCategoryArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanOwnerReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanOwnerReferencePtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListRecoveryFloatingIpConfigPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListTestFloatingIpConfigPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmNicInformationOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersFloatingIpAssignmentListVmIpAssignmentListVmReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListClusterReferenceListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListIpConfigListArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryIpAssignmentListVmReferenceOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkPtrOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListOutput{})
	pulumi.RegisterOutputType(RecoveryPlanParametersNetworkMappingListAvailabilityZoneNetworkMappingListRecoveryNetworkSubnetListArrayOutput{})
}
