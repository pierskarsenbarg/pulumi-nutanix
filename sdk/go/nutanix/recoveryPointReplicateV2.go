// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"errors"
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// External identifier of the replicated recovery point can be found in the task completion details under the key
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// replicate RP
//			_, err := nutanix.NewRecoveryPointReplicateV2(ctx, "rp-replicate", &nutanix.RecoveryPointReplicateV2Args{
//				ClusterExtId: pulumi.String("1cefd0f5-6d38-4c9b-a07c-bdd2db004224"),
//				ExtId:        pulumi.String("150a7ed0-9d05-4f35-a060-16dac4c835d0"),
//				PcExtId:      pulumi.String("8a938cc5-282b-48c4-81be-de22de145d07"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type RecoveryPointReplicateV2 struct {
	pulumi.CustomResourceState

	// -(Required) External identifier of the cluster.
	ClusterExtId pulumi.StringPtrOutput `pulumi:"clusterExtId"`
	// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
	ExtId pulumi.StringOutput `pulumi:"extId"`
	// -(Required) External identifier of the Prism Central.
	PcExtId pulumi.StringOutput `pulumi:"pcExtId"`
	// - External identifier of replicated recovery point.
	ReplicatedRpExtId pulumi.StringOutput `pulumi:"replicatedRpExtId"`
}

// NewRecoveryPointReplicateV2 registers a new resource with the given unique name, arguments, and options.
func NewRecoveryPointReplicateV2(ctx *pulumi.Context,
	name string, args *RecoveryPointReplicateV2Args, opts ...pulumi.ResourceOption) (*RecoveryPointReplicateV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtId == nil {
		return nil, errors.New("invalid value for required argument 'ExtId'")
	}
	if args.PcExtId == nil {
		return nil, errors.New("invalid value for required argument 'PcExtId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RecoveryPointReplicateV2
	err := ctx.RegisterResource("nutanix:index/recoveryPointReplicateV2:RecoveryPointReplicateV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecoveryPointReplicateV2 gets an existing RecoveryPointReplicateV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecoveryPointReplicateV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecoveryPointReplicateV2State, opts ...pulumi.ResourceOption) (*RecoveryPointReplicateV2, error) {
	var resource RecoveryPointReplicateV2
	err := ctx.ReadResource("nutanix:index/recoveryPointReplicateV2:RecoveryPointReplicateV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecoveryPointReplicateV2 resources.
type recoveryPointReplicateV2State struct {
	// -(Required) External identifier of the cluster.
	ClusterExtId *string `pulumi:"clusterExtId"`
	// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
	ExtId *string `pulumi:"extId"`
	// -(Required) External identifier of the Prism Central.
	PcExtId *string `pulumi:"pcExtId"`
	// - External identifier of replicated recovery point.
	ReplicatedRpExtId *string `pulumi:"replicatedRpExtId"`
}

type RecoveryPointReplicateV2State struct {
	// -(Required) External identifier of the cluster.
	ClusterExtId pulumi.StringPtrInput
	// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
	ExtId pulumi.StringPtrInput
	// -(Required) External identifier of the Prism Central.
	PcExtId pulumi.StringPtrInput
	// - External identifier of replicated recovery point.
	ReplicatedRpExtId pulumi.StringPtrInput
}

func (RecoveryPointReplicateV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*recoveryPointReplicateV2State)(nil)).Elem()
}

type recoveryPointReplicateV2Args struct {
	// -(Required) External identifier of the cluster.
	ClusterExtId *string `pulumi:"clusterExtId"`
	// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
	ExtId string `pulumi:"extId"`
	// -(Required) External identifier of the Prism Central.
	PcExtId string `pulumi:"pcExtId"`
}

// The set of arguments for constructing a RecoveryPointReplicateV2 resource.
type RecoveryPointReplicateV2Args struct {
	// -(Required) External identifier of the cluster.
	ClusterExtId pulumi.StringPtrInput
	// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
	ExtId pulumi.StringInput
	// -(Required) External identifier of the Prism Central.
	PcExtId pulumi.StringInput
}

func (RecoveryPointReplicateV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*recoveryPointReplicateV2Args)(nil)).Elem()
}

type RecoveryPointReplicateV2Input interface {
	pulumi.Input

	ToRecoveryPointReplicateV2Output() RecoveryPointReplicateV2Output
	ToRecoveryPointReplicateV2OutputWithContext(ctx context.Context) RecoveryPointReplicateV2Output
}

func (*RecoveryPointReplicateV2) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPointReplicateV2)(nil)).Elem()
}

func (i *RecoveryPointReplicateV2) ToRecoveryPointReplicateV2Output() RecoveryPointReplicateV2Output {
	return i.ToRecoveryPointReplicateV2OutputWithContext(context.Background())
}

func (i *RecoveryPointReplicateV2) ToRecoveryPointReplicateV2OutputWithContext(ctx context.Context) RecoveryPointReplicateV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointReplicateV2Output)
}

// RecoveryPointReplicateV2ArrayInput is an input type that accepts RecoveryPointReplicateV2Array and RecoveryPointReplicateV2ArrayOutput values.
// You can construct a concrete instance of `RecoveryPointReplicateV2ArrayInput` via:
//
//	RecoveryPointReplicateV2Array{ RecoveryPointReplicateV2Args{...} }
type RecoveryPointReplicateV2ArrayInput interface {
	pulumi.Input

	ToRecoveryPointReplicateV2ArrayOutput() RecoveryPointReplicateV2ArrayOutput
	ToRecoveryPointReplicateV2ArrayOutputWithContext(context.Context) RecoveryPointReplicateV2ArrayOutput
}

type RecoveryPointReplicateV2Array []RecoveryPointReplicateV2Input

func (RecoveryPointReplicateV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RecoveryPointReplicateV2)(nil)).Elem()
}

func (i RecoveryPointReplicateV2Array) ToRecoveryPointReplicateV2ArrayOutput() RecoveryPointReplicateV2ArrayOutput {
	return i.ToRecoveryPointReplicateV2ArrayOutputWithContext(context.Background())
}

func (i RecoveryPointReplicateV2Array) ToRecoveryPointReplicateV2ArrayOutputWithContext(ctx context.Context) RecoveryPointReplicateV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointReplicateV2ArrayOutput)
}

// RecoveryPointReplicateV2MapInput is an input type that accepts RecoveryPointReplicateV2Map and RecoveryPointReplicateV2MapOutput values.
// You can construct a concrete instance of `RecoveryPointReplicateV2MapInput` via:
//
//	RecoveryPointReplicateV2Map{ "key": RecoveryPointReplicateV2Args{...} }
type RecoveryPointReplicateV2MapInput interface {
	pulumi.Input

	ToRecoveryPointReplicateV2MapOutput() RecoveryPointReplicateV2MapOutput
	ToRecoveryPointReplicateV2MapOutputWithContext(context.Context) RecoveryPointReplicateV2MapOutput
}

type RecoveryPointReplicateV2Map map[string]RecoveryPointReplicateV2Input

func (RecoveryPointReplicateV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RecoveryPointReplicateV2)(nil)).Elem()
}

func (i RecoveryPointReplicateV2Map) ToRecoveryPointReplicateV2MapOutput() RecoveryPointReplicateV2MapOutput {
	return i.ToRecoveryPointReplicateV2MapOutputWithContext(context.Background())
}

func (i RecoveryPointReplicateV2Map) ToRecoveryPointReplicateV2MapOutputWithContext(ctx context.Context) RecoveryPointReplicateV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPointReplicateV2MapOutput)
}

type RecoveryPointReplicateV2Output struct{ *pulumi.OutputState }

func (RecoveryPointReplicateV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**RecoveryPointReplicateV2)(nil)).Elem()
}

func (o RecoveryPointReplicateV2Output) ToRecoveryPointReplicateV2Output() RecoveryPointReplicateV2Output {
	return o
}

func (o RecoveryPointReplicateV2Output) ToRecoveryPointReplicateV2OutputWithContext(ctx context.Context) RecoveryPointReplicateV2Output {
	return o
}

// -(Required) External identifier of the cluster.
func (o RecoveryPointReplicateV2Output) ClusterExtId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RecoveryPointReplicateV2) pulumi.StringPtrOutput { return v.ClusterExtId }).(pulumi.StringPtrOutput)
}

// -(Required) The external identifier that can be used to retrieve the recovery point using its URL.
func (o RecoveryPointReplicateV2Output) ExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *RecoveryPointReplicateV2) pulumi.StringOutput { return v.ExtId }).(pulumi.StringOutput)
}

// -(Required) External identifier of the Prism Central.
func (o RecoveryPointReplicateV2Output) PcExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *RecoveryPointReplicateV2) pulumi.StringOutput { return v.PcExtId }).(pulumi.StringOutput)
}

// - External identifier of replicated recovery point.
func (o RecoveryPointReplicateV2Output) ReplicatedRpExtId() pulumi.StringOutput {
	return o.ApplyT(func(v *RecoveryPointReplicateV2) pulumi.StringOutput { return v.ReplicatedRpExtId }).(pulumi.StringOutput)
}

type RecoveryPointReplicateV2ArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPointReplicateV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RecoveryPointReplicateV2)(nil)).Elem()
}

func (o RecoveryPointReplicateV2ArrayOutput) ToRecoveryPointReplicateV2ArrayOutput() RecoveryPointReplicateV2ArrayOutput {
	return o
}

func (o RecoveryPointReplicateV2ArrayOutput) ToRecoveryPointReplicateV2ArrayOutputWithContext(ctx context.Context) RecoveryPointReplicateV2ArrayOutput {
	return o
}

func (o RecoveryPointReplicateV2ArrayOutput) Index(i pulumi.IntInput) RecoveryPointReplicateV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RecoveryPointReplicateV2 {
		return vs[0].([]*RecoveryPointReplicateV2)[vs[1].(int)]
	}).(RecoveryPointReplicateV2Output)
}

type RecoveryPointReplicateV2MapOutput struct{ *pulumi.OutputState }

func (RecoveryPointReplicateV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RecoveryPointReplicateV2)(nil)).Elem()
}

func (o RecoveryPointReplicateV2MapOutput) ToRecoveryPointReplicateV2MapOutput() RecoveryPointReplicateV2MapOutput {
	return o
}

func (o RecoveryPointReplicateV2MapOutput) ToRecoveryPointReplicateV2MapOutputWithContext(ctx context.Context) RecoveryPointReplicateV2MapOutput {
	return o
}

func (o RecoveryPointReplicateV2MapOutput) MapIndex(k pulumi.StringInput) RecoveryPointReplicateV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RecoveryPointReplicateV2 {
		return vs[0].(map[string]*RecoveryPointReplicateV2)[vs[1].(string)]
	}).(RecoveryPointReplicateV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointReplicateV2Input)(nil)).Elem(), &RecoveryPointReplicateV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointReplicateV2ArrayInput)(nil)).Elem(), RecoveryPointReplicateV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecoveryPointReplicateV2MapInput)(nil)).Elem(), RecoveryPointReplicateV2Map{})
	pulumi.RegisterOutputType(RecoveryPointReplicateV2Output{})
	pulumi.RegisterOutputType(RecoveryPointReplicateV2ArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPointReplicateV2MapOutput{})
}
