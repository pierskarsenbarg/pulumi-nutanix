// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a maintenance window in Nutanix Database Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.LookupNdbMaintenanceWindow(ctx, &nutanix.LookupNdbMaintenanceWindowArgs{
//				Id: "{{ maintenance_window_id }}",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNdbMaintenanceWindow(ctx *pulumi.Context, args *LookupNdbMaintenanceWindowArgs, opts ...pulumi.InvokeOption) (*LookupNdbMaintenanceWindowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNdbMaintenanceWindowResult
	err := ctx.Invoke("nutanix:index/getNdbMaintenanceWindow:getNdbMaintenanceWindow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNdbMaintenanceWindow.
type LookupNdbMaintenanceWindowArgs struct {
	// Maintenance window id.
	Id string `pulumi:"id"`
	// tags of maintenance window
	Tags []GetNdbMaintenanceWindowTag `pulumi:"tags"`
}

// A collection of values returned by getNdbMaintenanceWindow.
type LookupNdbMaintenanceWindowResult struct {
	// access level
	AccessLevel string `pulumi:"accessLevel"`
	// created date of maintenance window
	DateCreated string `pulumi:"dateCreated"`
	// modified date of maintenance window
	DateModified string `pulumi:"dateModified"`
	// description of maintenance window
	Description string `pulumi:"description"`
	// entity task association for maintenance window
	EntityTaskAssocs []GetNdbMaintenanceWindowEntityTaskAssoc `pulumi:"entityTaskAssocs"`
	Id               string                                   `pulumi:"id"`
	// name of maintenance window
	Name string `pulumi:"name"`
	// next run time for maintenance window to trigger
	NextRunTime string `pulumi:"nextRunTime"`
	// owner id of maintenance window
	OwnerId string `pulumi:"ownerId"`
	// properties of maintenance window
	Properties []GetNdbMaintenanceWindowProperty `pulumi:"properties"`
	// schedule of maintenance window
	Schedules []GetNdbMaintenanceWindowSchedule `pulumi:"schedules"`
	// status of maintennace window
	Status string `pulumi:"status"`
	// tags of maintenance window
	Tags []GetNdbMaintenanceWindowTag `pulumi:"tags"`
	// timezone
	Timezone string `pulumi:"timezone"`
}

func LookupNdbMaintenanceWindowOutput(ctx *pulumi.Context, args LookupNdbMaintenanceWindowOutputArgs, opts ...pulumi.InvokeOption) LookupNdbMaintenanceWindowResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNdbMaintenanceWindowResultOutput, error) {
			args := v.(LookupNdbMaintenanceWindowArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getNdbMaintenanceWindow:getNdbMaintenanceWindow", args, LookupNdbMaintenanceWindowResultOutput{}, options).(LookupNdbMaintenanceWindowResultOutput), nil
		}).(LookupNdbMaintenanceWindowResultOutput)
}

// A collection of arguments for invoking getNdbMaintenanceWindow.
type LookupNdbMaintenanceWindowOutputArgs struct {
	// Maintenance window id.
	Id pulumi.StringInput `pulumi:"id"`
	// tags of maintenance window
	Tags GetNdbMaintenanceWindowTagArrayInput `pulumi:"tags"`
}

func (LookupNdbMaintenanceWindowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNdbMaintenanceWindowArgs)(nil)).Elem()
}

// A collection of values returned by getNdbMaintenanceWindow.
type LookupNdbMaintenanceWindowResultOutput struct{ *pulumi.OutputState }

func (LookupNdbMaintenanceWindowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNdbMaintenanceWindowResult)(nil)).Elem()
}

func (o LookupNdbMaintenanceWindowResultOutput) ToLookupNdbMaintenanceWindowResultOutput() LookupNdbMaintenanceWindowResultOutput {
	return o
}

func (o LookupNdbMaintenanceWindowResultOutput) ToLookupNdbMaintenanceWindowResultOutputWithContext(ctx context.Context) LookupNdbMaintenanceWindowResultOutput {
	return o
}

// access level
func (o LookupNdbMaintenanceWindowResultOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// created date of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// modified date of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) DateModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.DateModified }).(pulumi.StringOutput)
}

// description of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.Description }).(pulumi.StringOutput)
}

// entity task association for maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) EntityTaskAssocs() GetNdbMaintenanceWindowEntityTaskAssocArrayOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) []GetNdbMaintenanceWindowEntityTaskAssoc {
		return v.EntityTaskAssocs
	}).(GetNdbMaintenanceWindowEntityTaskAssocArrayOutput)
}

func (o LookupNdbMaintenanceWindowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.Id }).(pulumi.StringOutput)
}

// name of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.Name }).(pulumi.StringOutput)
}

// next run time for maintenance window to trigger
func (o LookupNdbMaintenanceWindowResultOutput) NextRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.NextRunTime }).(pulumi.StringOutput)
}

// owner id of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

// properties of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) Properties() GetNdbMaintenanceWindowPropertyArrayOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) []GetNdbMaintenanceWindowProperty { return v.Properties }).(GetNdbMaintenanceWindowPropertyArrayOutput)
}

// schedule of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) Schedules() GetNdbMaintenanceWindowScheduleArrayOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) []GetNdbMaintenanceWindowSchedule { return v.Schedules }).(GetNdbMaintenanceWindowScheduleArrayOutput)
}

// status of maintennace window
func (o LookupNdbMaintenanceWindowResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.Status }).(pulumi.StringOutput)
}

// tags of maintenance window
func (o LookupNdbMaintenanceWindowResultOutput) Tags() GetNdbMaintenanceWindowTagArrayOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) []GetNdbMaintenanceWindowTag { return v.Tags }).(GetNdbMaintenanceWindowTagArrayOutput)
}

// timezone
func (o LookupNdbMaintenanceWindowResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNdbMaintenanceWindowResult) string { return v.Timezone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNdbMaintenanceWindowResultOutput{})
}
