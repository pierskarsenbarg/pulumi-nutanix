// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// URL for Nutanix Prism (e.g IP or FQDN for cluster VIP note, this is never the data services VIP, and should not be an
// individual CVM address, as this would cause calls to fail during cluster lifecycle management operations, such as AOS
// upgrades.
func GetEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:endpoint")
}

// endpoint for foundation VM (eg. Foundation VM IP)
func GetFoundationEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:foundationEndpoint")
}

// Port for foundation VM
func GetFoundationPort(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:foundationPort")
}

// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
func GetInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "nutanix:insecure")
}

// endpoint for Era VM (era ip)
func GetNdbEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:ndbEndpoint")
}
func GetNdbPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:ndbPassword")
}
func GetNdbUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:ndbUsername")
}

// Password for provided user name.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:password")
}

// Port for Nutanix Prism.
func GetPort(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:port")
}
func GetProxyUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:proxyUrl")
}

// Use session authentification instead of basic auth for each request
func GetSessionAuth(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "nutanix:sessionAuth")
}

// User name for Nutanix Prism. Could be local cluster auth (e.g. 'admin') or directory auth.
func GetUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "nutanix:username")
}

// Set if you know that the creation o update of a resource may take long time (minutes)
func GetWaitTimeout(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "nutanix:waitTimeout")
}
