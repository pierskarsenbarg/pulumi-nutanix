// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes an Access Control Policy.
func LookupAccessControlPolicy(ctx *pulumi.Context, args *LookupAccessControlPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAccessControlPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccessControlPolicyResult
	err := ctx.Invoke("nutanix:index/getAccessControlPolicy:getAccessControlPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessControlPolicy.
type LookupAccessControlPolicyArgs struct {
	// - (Required) The UUID of an access control policy.
	AccessControlPolicyId   *string `pulumi:"accessControlPolicyId"`
	AccessControlPolicyName *string `pulumi:"accessControlPolicyName"`
	// - The category values represented as a dictionary of key > list of values.
	Categories []GetAccessControlPolicyCategory `pulumi:"categories"`
}

// A collection of values returned by getAccessControlPolicy.
type LookupAccessControlPolicyResult struct {
	AccessControlPolicyId   *string `pulumi:"accessControlPolicyId"`
	AccessControlPolicyName *string `pulumi:"accessControlPolicyName"`
	// The version of the API.
	ApiVersion string `pulumi:"apiVersion"`
	// - The category values represented as a dictionary of key > list of values.
	Categories         []GetAccessControlPolicyCategory          `pulumi:"categories"`
	ContextFilterLists []GetAccessControlPolicyContextFilterList `pulumi:"contextFilterLists"`
	// - The description of the Access Control Policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// - The Access Control Policy kind metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// - the name(Optional).
	Name string `pulumi:"name"`
	// - The reference to a user.
	OwnerReference map[string]string `pulumi:"ownerReference"`
	// - The reference to a project.
	ProjectReference map[string]string `pulumi:"projectReference"`
	// - The reference to a role.
	RoleReferences []GetAccessControlPolicyRoleReference `pulumi:"roleReferences"`
	// - The state of the Access Control Policy.
	State string `pulumi:"state"`
	// - The User group(s) being assigned a given role.
	UserGroupReferenceLists []GetAccessControlPolicyUserGroupReferenceList `pulumi:"userGroupReferenceLists"`
	// - The User(s) being assigned a given role.
	UserReferenceLists []GetAccessControlPolicyUserReferenceList `pulumi:"userReferenceLists"`
}

func LookupAccessControlPolicyOutput(ctx *pulumi.Context, args LookupAccessControlPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAccessControlPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccessControlPolicyResultOutput, error) {
			args := v.(LookupAccessControlPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getAccessControlPolicy:getAccessControlPolicy", args, LookupAccessControlPolicyResultOutput{}, options).(LookupAccessControlPolicyResultOutput), nil
		}).(LookupAccessControlPolicyResultOutput)
}

// A collection of arguments for invoking getAccessControlPolicy.
type LookupAccessControlPolicyOutputArgs struct {
	// - (Required) The UUID of an access control policy.
	AccessControlPolicyId   pulumi.StringPtrInput `pulumi:"accessControlPolicyId"`
	AccessControlPolicyName pulumi.StringPtrInput `pulumi:"accessControlPolicyName"`
	// - The category values represented as a dictionary of key > list of values.
	Categories GetAccessControlPolicyCategoryArrayInput `pulumi:"categories"`
}

func (LookupAccessControlPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessControlPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAccessControlPolicy.
type LookupAccessControlPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAccessControlPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessControlPolicyResult)(nil)).Elem()
}

func (o LookupAccessControlPolicyResultOutput) ToLookupAccessControlPolicyResultOutput() LookupAccessControlPolicyResultOutput {
	return o
}

func (o LookupAccessControlPolicyResultOutput) ToLookupAccessControlPolicyResultOutputWithContext(ctx context.Context) LookupAccessControlPolicyResultOutput {
	return o
}

func (o LookupAccessControlPolicyResultOutput) AccessControlPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) *string { return v.AccessControlPolicyId }).(pulumi.StringPtrOutput)
}

func (o LookupAccessControlPolicyResultOutput) AccessControlPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) *string { return v.AccessControlPolicyName }).(pulumi.StringPtrOutput)
}

// The version of the API.
func (o LookupAccessControlPolicyResultOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// - The category values represented as a dictionary of key > list of values.
func (o LookupAccessControlPolicyResultOutput) Categories() GetAccessControlPolicyCategoryArrayOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) []GetAccessControlPolicyCategory { return v.Categories }).(GetAccessControlPolicyCategoryArrayOutput)
}

func (o LookupAccessControlPolicyResultOutput) ContextFilterLists() GetAccessControlPolicyContextFilterListArrayOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) []GetAccessControlPolicyContextFilterList {
		return v.ContextFilterLists
	}).(GetAccessControlPolicyContextFilterListArrayOutput)
}

// - The description of the Access Control Policy.
func (o LookupAccessControlPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccessControlPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// - The Access Control Policy kind metadata.
func (o LookupAccessControlPolicyResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// - the name(Optional).
func (o LookupAccessControlPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// - The reference to a user.
func (o LookupAccessControlPolicyResultOutput) OwnerReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) map[string]string { return v.OwnerReference }).(pulumi.StringMapOutput)
}

// - The reference to a project.
func (o LookupAccessControlPolicyResultOutput) ProjectReference() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) map[string]string { return v.ProjectReference }).(pulumi.StringMapOutput)
}

// - The reference to a role.
func (o LookupAccessControlPolicyResultOutput) RoleReferences() GetAccessControlPolicyRoleReferenceArrayOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) []GetAccessControlPolicyRoleReference { return v.RoleReferences }).(GetAccessControlPolicyRoleReferenceArrayOutput)
}

// - The state of the Access Control Policy.
func (o LookupAccessControlPolicyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) string { return v.State }).(pulumi.StringOutput)
}

// - The User group(s) being assigned a given role.
func (o LookupAccessControlPolicyResultOutput) UserGroupReferenceLists() GetAccessControlPolicyUserGroupReferenceListArrayOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) []GetAccessControlPolicyUserGroupReferenceList {
		return v.UserGroupReferenceLists
	}).(GetAccessControlPolicyUserGroupReferenceListArrayOutput)
}

// - The User(s) being assigned a given role.
func (o LookupAccessControlPolicyResultOutput) UserReferenceLists() GetAccessControlPolicyUserReferenceListArrayOutput {
	return o.ApplyT(func(v LookupAccessControlPolicyResult) []GetAccessControlPolicyUserReferenceList {
		return v.UserReferenceLists
	}).(GetAccessControlPolicyUserReferenceListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessControlPolicyResultOutput{})
}
