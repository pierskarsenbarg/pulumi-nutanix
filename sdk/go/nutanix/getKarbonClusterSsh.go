// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes the SSH config from a Karbon Cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi-nutanix/sdk/go/nutanix"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nutanix.GetKarbonClusterSsh(ctx, &GetKarbonClusterSshArgs{
// 			KarbonClusterId: pulumi.StringRef("<YOUR-CLUSTER-ID>"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = nutanix.GetKarbonClusterSsh(ctx, &GetKarbonClusterSshArgs{
// 			KarbonClusterName: pulumi.StringRef("<YOUR-CLUSTER-NAME>"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetKarbonClusterSsh(ctx *pulumi.Context, args *GetKarbonClusterSshArgs, opts ...pulumi.InvokeOption) (*GetKarbonClusterSshResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetKarbonClusterSshResult
	err := ctx.Invoke("nutanix:index/getKarbonClusterSsh:getKarbonClusterSsh", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKarbonClusterSsh.
type GetKarbonClusterSshArgs struct {
	KarbonClusterId   *string `pulumi:"karbonClusterId"`
	KarbonClusterName *string `pulumi:"karbonClusterName"`
}

// A collection of values returned by getKarbonClusterSsh.
type GetKarbonClusterSshResult struct {
	Certificate string `pulumi:"certificate"`
	ExpiryTime  string `pulumi:"expiryTime"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	KarbonClusterId   *string `pulumi:"karbonClusterId"`
	KarbonClusterName *string `pulumi:"karbonClusterName"`
	PrivateKey        string  `pulumi:"privateKey"`
	Username          string  `pulumi:"username"`
}

func GetKarbonClusterSshOutput(ctx *pulumi.Context, args GetKarbonClusterSshOutputArgs, opts ...pulumi.InvokeOption) GetKarbonClusterSshResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKarbonClusterSshResult, error) {
			args := v.(GetKarbonClusterSshArgs)
			r, err := GetKarbonClusterSsh(ctx, &args, opts...)
			var s GetKarbonClusterSshResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKarbonClusterSshResultOutput)
}

// A collection of arguments for invoking getKarbonClusterSsh.
type GetKarbonClusterSshOutputArgs struct {
	KarbonClusterId   pulumi.StringPtrInput `pulumi:"karbonClusterId"`
	KarbonClusterName pulumi.StringPtrInput `pulumi:"karbonClusterName"`
}

func (GetKarbonClusterSshOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterSshArgs)(nil)).Elem()
}

// A collection of values returned by getKarbonClusterSsh.
type GetKarbonClusterSshResultOutput struct{ *pulumi.OutputState }

func (GetKarbonClusterSshResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterSshResult)(nil)).Elem()
}

func (o GetKarbonClusterSshResultOutput) ToGetKarbonClusterSshResultOutput() GetKarbonClusterSshResultOutput {
	return o
}

func (o GetKarbonClusterSshResultOutput) ToGetKarbonClusterSshResultOutputWithContext(ctx context.Context) GetKarbonClusterSshResultOutput {
	return o
}

func (o GetKarbonClusterSshResultOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o GetKarbonClusterSshResultOutput) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) string { return v.ExpiryTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKarbonClusterSshResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKarbonClusterSshResultOutput) KarbonClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) *string { return v.KarbonClusterId }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterSshResultOutput) KarbonClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) *string { return v.KarbonClusterName }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterSshResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetKarbonClusterSshResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterSshResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKarbonClusterSshResultOutput{})
}
