// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a list of nos (aos) packages present in foundation vm
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetFoundationNosPackages(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Note
//
// * This data source only lists .tar file names.
//
// See detailed information in [Nutanix Foundation Nos Packages](https://www.nutanix.dev/api_references/foundation/#/b3A6MjIyMjMzODg-get-list-of-aos-packages-available-in-foundation).
func GetFoundationNosPackages(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetFoundationNosPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFoundationNosPackagesResult
	err := ctx.Invoke("nutanix:index/getFoundationNosPackages:getFoundationNosPackages", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getFoundationNosPackages.
type GetFoundationNosPackagesResult struct {
	// List of nos packages file names present in foundation vm
	Entities []string `pulumi:"entities"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetFoundationNosPackagesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetFoundationNosPackagesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetFoundationNosPackagesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("nutanix:index/getFoundationNosPackages:getFoundationNosPackages", nil, GetFoundationNosPackagesResultOutput{}, options).(GetFoundationNosPackagesResultOutput), nil
	}).(GetFoundationNosPackagesResultOutput)
}

// A collection of values returned by getFoundationNosPackages.
type GetFoundationNosPackagesResultOutput struct{ *pulumi.OutputState }

func (GetFoundationNosPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFoundationNosPackagesResult)(nil)).Elem()
}

func (o GetFoundationNosPackagesResultOutput) ToGetFoundationNosPackagesResultOutput() GetFoundationNosPackagesResultOutput {
	return o
}

func (o GetFoundationNosPackagesResultOutput) ToGetFoundationNosPackagesResultOutputWithContext(ctx context.Context) GetFoundationNosPackagesResultOutput {
	return o
}

// List of nos packages file names present in foundation vm
func (o GetFoundationNosPackagesResultOutput) Entities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFoundationNosPackagesResult) []string { return v.Entities }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFoundationNosPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFoundationNosPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFoundationNosPackagesResultOutput{})
}
