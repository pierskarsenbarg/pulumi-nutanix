// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes the SSH config from a Karbon Cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetKarbonClusterKubeconfig(ctx, &nutanix.GetKarbonClusterKubeconfigArgs{
//				KarbonClusterId: pulumi.StringRef("<YOUR-CLUSTER-ID>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.GetKarbonClusterKubeconfig(ctx, &nutanix.GetKarbonClusterKubeconfigArgs{
//				KarbonClusterName: pulumi.StringRef("<YOUR-CLUSTER-NAME>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKarbonClusterKubeconfig(ctx *pulumi.Context, args *GetKarbonClusterKubeconfigArgs, opts ...pulumi.InvokeOption) (*GetKarbonClusterKubeconfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKarbonClusterKubeconfigResult
	err := ctx.Invoke("nutanix:index/getKarbonClusterKubeconfig:getKarbonClusterKubeconfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKarbonClusterKubeconfig.
type GetKarbonClusterKubeconfigArgs struct {
	// Represents karbon cluster uuid
	KarbonClusterId *string `pulumi:"karbonClusterId"`
	// Represents the name of karbon cluster
	KarbonClusterName *string `pulumi:"karbonClusterName"`
}

// A collection of values returned by getKarbonClusterKubeconfig.
type GetKarbonClusterKubeconfigResult struct {
	AccessToken          string `pulumi:"accessToken"`
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	ClusterUrl           string `pulumi:"clusterUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	KarbonClusterId   *string `pulumi:"karbonClusterId"`
	KarbonClusterName *string `pulumi:"karbonClusterName"`
	Name              string  `pulumi:"name"`
}

func GetKarbonClusterKubeconfigOutput(ctx *pulumi.Context, args GetKarbonClusterKubeconfigOutputArgs, opts ...pulumi.InvokeOption) GetKarbonClusterKubeconfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKarbonClusterKubeconfigResult, error) {
			args := v.(GetKarbonClusterKubeconfigArgs)
			r, err := GetKarbonClusterKubeconfig(ctx, &args, opts...)
			var s GetKarbonClusterKubeconfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKarbonClusterKubeconfigResultOutput)
}

// A collection of arguments for invoking getKarbonClusterKubeconfig.
type GetKarbonClusterKubeconfigOutputArgs struct {
	// Represents karbon cluster uuid
	KarbonClusterId pulumi.StringPtrInput `pulumi:"karbonClusterId"`
	// Represents the name of karbon cluster
	KarbonClusterName pulumi.StringPtrInput `pulumi:"karbonClusterName"`
}

func (GetKarbonClusterKubeconfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterKubeconfigArgs)(nil)).Elem()
}

// A collection of values returned by getKarbonClusterKubeconfig.
type GetKarbonClusterKubeconfigResultOutput struct{ *pulumi.OutputState }

func (GetKarbonClusterKubeconfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterKubeconfigResult)(nil)).Elem()
}

func (o GetKarbonClusterKubeconfigResultOutput) ToGetKarbonClusterKubeconfigResultOutput() GetKarbonClusterKubeconfigResultOutput {
	return o
}

func (o GetKarbonClusterKubeconfigResultOutput) ToGetKarbonClusterKubeconfigResultOutputWithContext(ctx context.Context) GetKarbonClusterKubeconfigResultOutput {
	return o
}

func (o GetKarbonClusterKubeconfigResultOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeconfigResultOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeconfigResultOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) string { return v.ClusterUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKarbonClusterKubeconfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeconfigResultOutput) KarbonClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) *string { return v.KarbonClusterId }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterKubeconfigResultOutput) KarbonClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) *string { return v.KarbonClusterName }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterKubeconfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeconfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKarbonClusterKubeconfigResultOutput{})
}
