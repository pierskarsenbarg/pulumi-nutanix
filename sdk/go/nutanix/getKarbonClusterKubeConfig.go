// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nutanix

import (
	"context"
	"reflect"

	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes the SSH config from a Karbon Cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pierskarsenbarg/pulumi-nutanix/sdk/go/nutanix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nutanix.GetKarbonClusterKubeConfig(ctx, &nutanix.GetKarbonClusterKubeConfigArgs{
//				KarbonClusterId: pulumi.StringRef("<YOUR-CLUSTER-ID>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = nutanix.GetKarbonClusterKubeConfig(ctx, &nutanix.GetKarbonClusterKubeConfigArgs{
//				KarbonClusterName: pulumi.StringRef("<YOUR-CLUSTER-NAME>"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKarbonClusterKubeConfig(ctx *pulumi.Context, args *GetKarbonClusterKubeConfigArgs, opts ...pulumi.InvokeOption) (*GetKarbonClusterKubeConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKarbonClusterKubeConfigResult
	err := ctx.Invoke("nutanix:index/getKarbonClusterKubeConfig:getKarbonClusterKubeConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKarbonClusterKubeConfig.
type GetKarbonClusterKubeConfigArgs struct {
	// Represents karbon cluster uuid
	KarbonClusterId *string `pulumi:"karbonClusterId"`
	// Represents the name of karbon cluster
	KarbonClusterName *string `pulumi:"karbonClusterName"`
}

// A collection of values returned by getKarbonClusterKubeConfig.
type GetKarbonClusterKubeConfigResult struct {
	AccessToken          string `pulumi:"accessToken"`
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	ClusterUrl           string `pulumi:"clusterUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	KarbonClusterId   *string `pulumi:"karbonClusterId"`
	KarbonClusterName *string `pulumi:"karbonClusterName"`
	Name              string  `pulumi:"name"`
}

func GetKarbonClusterKubeConfigOutput(ctx *pulumi.Context, args GetKarbonClusterKubeConfigOutputArgs, opts ...pulumi.InvokeOption) GetKarbonClusterKubeConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKarbonClusterKubeConfigResultOutput, error) {
			args := v.(GetKarbonClusterKubeConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("nutanix:index/getKarbonClusterKubeConfig:getKarbonClusterKubeConfig", args, GetKarbonClusterKubeConfigResultOutput{}, options).(GetKarbonClusterKubeConfigResultOutput), nil
		}).(GetKarbonClusterKubeConfigResultOutput)
}

// A collection of arguments for invoking getKarbonClusterKubeConfig.
type GetKarbonClusterKubeConfigOutputArgs struct {
	// Represents karbon cluster uuid
	KarbonClusterId pulumi.StringPtrInput `pulumi:"karbonClusterId"`
	// Represents the name of karbon cluster
	KarbonClusterName pulumi.StringPtrInput `pulumi:"karbonClusterName"`
}

func (GetKarbonClusterKubeConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterKubeConfigArgs)(nil)).Elem()
}

// A collection of values returned by getKarbonClusterKubeConfig.
type GetKarbonClusterKubeConfigResultOutput struct{ *pulumi.OutputState }

func (GetKarbonClusterKubeConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKarbonClusterKubeConfigResult)(nil)).Elem()
}

func (o GetKarbonClusterKubeConfigResultOutput) ToGetKarbonClusterKubeConfigResultOutput() GetKarbonClusterKubeConfigResultOutput {
	return o
}

func (o GetKarbonClusterKubeConfigResultOutput) ToGetKarbonClusterKubeConfigResultOutputWithContext(ctx context.Context) GetKarbonClusterKubeConfigResultOutput {
	return o
}

func (o GetKarbonClusterKubeConfigResultOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeConfigResultOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeConfigResultOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) string { return v.ClusterUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKarbonClusterKubeConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKarbonClusterKubeConfigResultOutput) KarbonClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) *string { return v.KarbonClusterId }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterKubeConfigResultOutput) KarbonClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) *string { return v.KarbonClusterName }).(pulumi.StringPtrOutput)
}

func (o GetKarbonClusterKubeConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKarbonClusterKubeConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKarbonClusterKubeConfigResultOutput{})
}
